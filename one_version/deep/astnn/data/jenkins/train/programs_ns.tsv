,id,code,label
534,534,,0
237,237,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.ExtensionPoint Import hudson.Extension Import hudson.DescriptorExtensionList Import hudson.slaves.NodeProvisioner.PlannedNode Import hudson.model.Describable Import hudson.model.Hudson Import hudson.model.Node Import hudson.model.AbstractModelObject Import hudson.model.Label Import hudson.model.Descriptor Import hudson.security.ACL Import hudson.security.AccessControlled Import hudson.security.Permission Import hudson.util.DescriptorList Import java.util.Collection ClassDeclaration Modifier public abstract /**
 * Creates {@link Node}s to dynamically expand/shrink the slaves attached to Hudson.
 *
 * <p>
 * Put another way, this class encapsulates different communication protocols
 * needed to start a new slave programmatically.
 *
 * @author Kohsuke Kawaguchi
 * @see NodeProvisioner
 */ Cloud FieldDeclaration /**
     * Uniquely identifies this {@link Cloud} instance among other instances in {@link Hudson#clouds}.
     */ Modifier public final ReferenceType String VariableDeclarator name ConstructorDeclaration Modifier protected Cloud FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name = MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MemberReference name MethodDeclaration Modifier public ReferenceType String getSearchUrl ReturnStatement BinaryOperation + Literal ""cloud/"" MemberReference name MethodDeclaration Modifier public ReferenceType ACL getACL ReturnStatement MethodInvocation Hudson MethodInvocation getAuthorizationStrategy MethodInvocation This getACL getInstance MethodDeclaration Modifier public final checkPermission FormalParameter ReferenceType Permission permission StatementExpression MethodInvocation MethodInvocation MemberReference permission checkPermission getACL MethodDeclaration Modifier public final BasicType boolean hasPermission FormalParameter ReferenceType Permission permission ReturnStatement MethodInvocation MethodInvocation MemberReference permission hasPermission getACL MethodDeclaration /**
     * Provisions new {@link Node}s from this cloud.
     *
     * <p>
     * {@link NodeProvisioner} performs a trend analysis on the load,
     * and when it determines that it <b>really</b> needs to bring up
     * additional nodes, this method is invoked.
     *
     * <p>
     * The implementation of this method asynchronously starts
     * node provisioning.
     *
     * @param label
     *      The label that indicates what kind of nodes are needed now.
     *      Newly launched node needs to have this label.
     *      Only those {@link Label}s that this instance returned true
     *      from the {@link #canProvision(Label)} method will be passed here.
     *      This parameter is null if Hudson needs to provision a new {@link Node}
     *      for jobs that don't have any tie to any label.
     * @param excessWorkload
     *      Number of total executors needed to meet the current demand.
     *      Always >= 1. For example, if this is 3, the implementation
     *      should launch 3 slaves with 1 executor each, or 1 slave with
     *      3 executors, etc.
     *
     * @return
     *      {@link PlannedNode}s that represent asynchronous {@link Node}
     *      provisioning operations. Can be empty but must not be null.
     *      {@link NodeProvisioner} will be responsible for adding the resulting {@link Node}
     *      into Hudson via {@link Hudson#addNode(Node)}, so a {@link Cloud} implementation
     *      just needs to create a new node object.
     */ Modifier public abstract ReferenceType Collection TypeArgument ReferenceType PlannedNode provision FormalParameter ReferenceType Label label FormalParameter BasicType int excessWorkload MethodDeclaration /**
     * Returns true if this cloud is capable of provisioning new nodes for the given label.
     */ Modifier public abstract BasicType boolean canProvision FormalParameter ReferenceType Label label MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType Cloud getDescriptor ReturnStatement MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance FieldDeclaration /**
     * All registered {@link Cloud} implementations.
     *
     * @deprecated as of 1.286
     *      Use {@link #all()} for read access, and {@link Extension} for registration.
     */ Modifier public final static ReferenceType DescriptorList TypeArgument ReferenceType Cloud VariableDeclarator ALL ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType Cloud ClassReference ReferenceType Cloud MethodDeclaration /**
     * Returns all the registered {@link Cloud} descriptors.
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType Cloud TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Cloud all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType Cloud getDescriptorList getInstance FieldDeclaration /**
     * Permission constant to control mutation operations on {@link Cloud}.
     *
     * This includes provisioning a new node, as well as removing it.
     */ Modifier public final static ReferenceType Permission VariableDeclarator PROVISION MemberReference Hudson ADMINISTER ReferenceType AbstractModelObject ReferenceType ExtensionPoint ReferenceType Describable TypeArgument ReferenceType Cloud ReferenceType AccessControlled",0
352,352,"CompilationUnit PackageDeclaration hudson.util Import java.io.File ClassDeclaration Modifier public /**
 * Model object used to display the error top page if
 * we couldn't create the home directory.
 *
 * <p>
 * <tt>index.jelly</tt> would display a nice friendly error page.
 *
 * @author Kohsuke Kawaguchi
 */ NoHomeDir FieldDeclaration Modifier public final ReferenceType File VariableDeclarator home ConstructorDeclaration Modifier public NoHomeDir FormalParameter ReferenceType File home StatementExpression Assignment This MemberReference home MemberReference home = ReferenceType ErrorObject",1
22,22,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.Extension Import hudson.FilePath Import hudson.FilePath.FileCallable Import hudson.Launcher Import hudson.Util Import hudson.model.AbstractBuild Import hudson.model.AbstractProject Import hudson.model.Action Import hudson.model.Build Import hudson.model.BuildListener Import hudson.model.Fingerprint Import hudson.model.Fingerprint.BuildPtr Import hudson.model.FingerprintMap Import hudson.model.Hudson Import hudson.model.Result Import hudson.remoting.VirtualChannel Import hudson.util.FormValidation Import hudson.util.IOException2 Import org.apache.tools.ant.DirectoryScanner Import org.apache.tools.ant.types.FileSet Import org.kohsuke.stapler.AncestorInPath Import org.kohsuke.stapler.QueryParameter Import org.kohsuke.stapler.StaplerRequest Import java.io.File Import java.io.IOException Import java.io.Serializable Import java.lang.ref.WeakReference Import java.util.ArrayList Import java.util.Collections Import java.util.HashMap Import java.util.List Import java.util.Map Import java.util.Map.Entry Import java.util.TreeMap Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public /**
 * Records fingerprints of the specified files.
 *
 * @author Kohsuke Kawaguchi
 */ Fingerprinter FieldDeclaration /**
     * Comma-separated list of files/directories to be fingerprinted.
     */ Modifier private final ReferenceType String VariableDeclarator targets FieldDeclaration /**
     * Also record all the finger prints of the build artifacts.
     */ Modifier private final BasicType boolean VariableDeclarator recordBuildArtifacts ConstructorDeclaration Modifier public Fingerprinter FormalParameter ReferenceType String targets FormalParameter BasicType boolean recordBuildArtifacts StatementExpression Assignment This MemberReference targets MemberReference targets = StatementExpression Assignment This MemberReference recordBuildArtifacts MemberReference recordBuildArtifacts = MethodDeclaration Modifier public ReferenceType String getTargets ReturnStatement MemberReference targets MethodDeclaration Modifier public BasicType boolean getRecordBuildArtifacts ReturnStatement MemberReference recordBuildArtifacts MethodDeclaration Modifier public BasicType boolean perform FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener InterruptedException TryStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages Fingerprinter_Recording println getLogger LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator record ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String IfStatement BinaryOperation != MethodInvocation targets length Literal 0 StatementExpression MethodInvocation MemberReference build MemberReference listener MemberReference record MemberReference targets record End IfStatement BinaryOperation && MemberReference recordBuildArtifacts BinaryOperation instanceof MemberReference build ReferenceType Build BlockStatement LocalVariableDeclaration ReferenceType ArtifactArchiver VariableDeclarator aa Cast ReferenceType Build TypeArgument ? TypeArgument ? MemberReference build IfStatement BinaryOperation == MemberReference aa Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages Fingerprinter_NoArchiving error StatementExpression MethodInvocation build MemberReference Result FAILURE setResult ReturnStatement Literal true End StatementExpression MethodInvocation MemberReference build MemberReference listener MemberReference record MethodInvocation aa getArtifacts record End StatementExpression MethodInvocation build MethodInvocation ClassCreator ReferenceType FingerprintAction MemberReference build MemberReference record add getActions CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages Fingerprinter_Failed error printStackTrace StatementExpression MethodInvocation build MemberReference Result FAILURE setResult ReturnStatement Literal true MethodDeclaration Modifier private record FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String record FormalParameter Modifier final ReferenceType String targets IOException InterruptedException ClassDeclaration Modifier final Record FieldDeclaration Modifier final BasicType boolean VariableDeclarator produced FieldDeclaration Modifier final ReferenceType String VariableDeclarator relativePath FieldDeclaration Modifier final ReferenceType String VariableDeclarator fileName FieldDeclaration Modifier final ReferenceType String VariableDeclarator md5sum ConstructorDeclaration Modifier public Record FormalParameter BasicType boolean produced FormalParameter ReferenceType String relativePath FormalParameter ReferenceType String fileName FormalParameter ReferenceType String md5sum StatementExpression Assignment This MemberReference produced MemberReference produced = StatementExpression Assignment This MemberReference relativePath MemberReference relativePath = StatementExpression Assignment This MemberReference fileName MemberReference fileName = StatementExpression Assignment This MemberReference md5sum MemberReference md5sum = MethodDeclaration ReferenceType Fingerprint addRecord FormalParameter ReferenceType AbstractBuild build IOException LocalVariableDeclaration ReferenceType FingerprintMap VariableDeclarator map MethodInvocation Hudson MethodInvocation getFingerprintMap getInstance ReturnStatement MethodInvocation map TernaryExpression MemberReference produced MemberReference build Literal null MemberReference fileName MemberReference md5sum getOrCreate FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation build getProject LocalVariableDeclaration Modifier final BasicType long VariableDeclarator buildTimestamp MethodInvocation build MethodInvocation getTimeInMillis getTimestamp LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation p getWorkspace IfStatement BinaryOperation == MemberReference ws Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages Fingerprinter_NoWorkspace error StatementExpression MethodInvocation build MemberReference Result FAILURE setResult ReturnStatement End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Record VariableDeclarator records MethodInvocation ws ClassCreator ReferenceType FileCallable TypeArgument ReferenceType List TypeArgument ReferenceType Record MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Record invoke FormalParameter ReferenceType File baseDir FormalParameter ReferenceType VirtualChannel channel IOException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Record VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Record LocalVariableDeclaration ReferenceType FileSet VariableDeclarator src MethodInvocation Util MemberReference baseDir MemberReference targets createFileSet LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation src getDirectoryScanner ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation ds getIncludedFiles BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference baseDir MemberReference f LocalVariableDeclaration BasicType boolean VariableDeclarator produced BinaryOperation <= MemberReference buildTimestamp BinaryOperation + MethodInvocation file lastModified Literal 2000 TryStatement StatementExpression MethodInvocation results ClassCreator ReferenceType Record MemberReference produced MemberReference f MethodInvocation file getName ClassCreator MethodInvocation digest ReferenceType FilePath MemberReference file add CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType IOException2 MethodInvocation Messages MemberReference file Fingerprinter_DigestFailed MemberReference e CatchClause CatchClauseParameter InterruptedException e ThrowStatement ClassCreator ReferenceType IOException2 MethodInvocation Messages Fingerprinter_Aborted MemberReference e End ReturnStatement MemberReference results act ForStatement EnhancedForControl VariableDeclaration ReferenceType Record VariableDeclarator r MemberReference records BlockStatement LocalVariableDeclaration ReferenceType Fingerprint VariableDeclarator fp MethodInvocation r MemberReference build addRecord IfStatement BinaryOperation == MemberReference fp Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages MemberReference r relativePath Fingerprinter_FailedFor error ContinueStatement End StatementExpression MethodInvocation fp MemberReference build add StatementExpression MethodInvocation record MemberReference r relativePath MethodInvocation fp getHashString put End ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages Fingerprinter_DisplayName MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/project-config/fingerprint.html"" MethodDeclaration /**
         * Performs on-the-fly validation on the file mask wildcard.
         */ Modifier public ReferenceType FormValidation doCheck FormalParameter Annotation AncestorInPath ReferenceType AbstractProject project FormalParameter Annotation QueryParameter ReferenceType String value IOException ReturnStatement MethodInvocation FilePath MethodInvocation project getWorkspace MemberReference value validateFileMask MethodDeclaration Modifier public ReferenceType Publisher newInstance FormalParameter ReferenceType StaplerRequest req ReturnStatement ClassCreator ReferenceType Fingerprinter MethodInvocation req MethodInvocation trim Literal ""fingerprint_targets"" getParameter BinaryOperation != MethodInvocation req Literal ""fingerprint_artifacts"" getParameter Literal null MethodDeclaration Modifier public BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType AbstractProject extends jobType ReturnStatement Literal true ReferenceType BuildStepDescriptor TypeArgument ReferenceType Publisher ClassDeclaration Modifier public final static /**
     * Action for displaying fingerprints.
     */ FingerprintAction FieldDeclaration Modifier private final ReferenceType AbstractBuild VariableDeclarator build FieldDeclaration /**
         * From file name to the digest.
         */ Modifier private final ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator record FieldDeclaration Modifier private transient ReferenceType WeakReference TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Fingerprint VariableDeclarator ref ConstructorDeclaration Modifier public FingerprintAction FormalParameter ReferenceType AbstractBuild build FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String record StatementExpression Assignment This MemberReference build MemberReference build = StatementExpression Assignment This MemberReference record MemberReference record = MethodDeclaration Modifier public ReferenceType String getIconFileName ReturnStatement Literal ""fingerprint.gif"" MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages Fingerprinter_Action_DisplayName MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""fingerprints"" MethodDeclaration Modifier public ReferenceType AbstractBuild getBuild ReturnStatement MemberReference build MethodDeclaration /**
         * Obtains the raw data.
         */ Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String getRecords ReturnStatement MethodInvocation Collections MemberReference record unmodifiableMap MethodDeclaration /**
         * Map from file names of the fingerprinted file to its fingerprint record.
         */ Modifier public synchronized ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Fingerprint getFingerprints IfStatement BinaryOperation != MemberReference ref Literal null BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Fingerprint VariableDeclarator m MethodInvocation ref get IfStatement BinaryOperation != MemberReference m Literal null ReturnStatement MemberReference m End End LocalVariableDeclaration ReferenceType Hudson VariableDeclarator h MethodInvocation Hudson getInstance LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Fingerprint VariableDeclarator m ClassCreator ReferenceType TreeMap TypeArgument ReferenceType String TypeArgument ReferenceType Fingerprint ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator r MethodInvocation record entrySet BlockStatement TryStatement LocalVariableDeclaration ReferenceType Fingerprint VariableDeclarator fp MethodInvocation h MethodInvocation r getValue _getFingerprint IfStatement BinaryOperation != MemberReference fp Literal null StatementExpression MethodInvocation m MethodInvocation r getKey MemberReference fp put End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation logger MemberReference Level WARNING MethodInvocation e getMessage MemberReference e log End StatementExpression Assignment MemberReference m MethodInvocation Collections MemberReference m unmodifiableMap = StatementExpression Assignment MemberReference ref ClassCreator ReferenceType WeakReference TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Fingerprint MemberReference m = ReturnStatement MemberReference m MethodDeclaration /**
         * Gets the dependency to other builds in a map.
         * Returns build numbers instead of {@link Build}, since log records may be gone.
         */ Modifier public ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType Integer getDependencies LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType Integer VariableDeclarator r ClassCreator ReferenceType HashMap TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType Integer ForStatement EnhancedForControl VariableDeclaration ReferenceType Fingerprint VariableDeclarator fp MethodInvocation MethodInvocation values getFingerprints BlockStatement LocalVariableDeclaration ReferenceType BuildPtr VariableDeclarator bp MethodInvocation fp getOriginal IfStatement BinaryOperation == MemberReference bp Literal null ContinueStatement End IfStatement MethodInvocation bp MemberReference build is ContinueStatement End LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator job MethodInvocation bp getJob IfStatement BinaryOperation && BinaryOperation != MemberReference job Literal null BinaryOperation == MethodInvocation job getParent MethodInvocation build getParent ContinueStatement End LocalVariableDeclaration ReferenceType Integer VariableDeclarator existing MethodInvocation r MemberReference job get IfStatement BinaryOperation && BinaryOperation != MemberReference existing Literal null BinaryOperation > MemberReference existing MethodInvocation bp getNumber ContinueStatement End StatementExpression MethodInvocation r MemberReference job MethodInvocation bp getNumber put End ReturnStatement MemberReference r ReferenceType Action FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator logger MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Fingerprinter getLogger FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Recorder ReferenceType Serializable",0
342,342,"CompilationUnit PackageDeclaration hudson.model Import org.kohsuke.stapler.StaplerRequest Import java.io.IOException Import java.util.Collection Import hudson.search.SearchableModelObject Import hudson.security.Permission Import hudson.security.PermissionGroup Import hudson.security.AccessControlled InterfaceDeclaration Modifier public /**
 * Basic configuration unit in Hudson.
 *
 * <p>
 * Every {@link Item} is hosted in an {@link ItemGroup} called ""parent"",
 * and some {@link Item}s are {@link ItemGroup}s. This form a tree
 * structure, which is rooted at {@link Hudson}.
 *
 * <p>
 * Unlike file systems, where a file can be moved from one directory
 * to another, {@link Item} inherently belongs to a single {@link ItemGroup}
 * and that relationship will not change.
 * Think of
 * <a href=""http://images.google.com/images?q=Windows%20device%20manager"">Windows device manager</a>
 * &mdash; an HDD always show up under 'Disk drives' and it can never be moved to another parent.
 *
 * Similarly, {@link ItemGroup} is not a generic container. Each subclass
 * of {@link ItemGroup} can usually only host a certain limited kinds of
 * {@link Item}s.
 *
 * <p>
 * {@link Item}s have unique {@link #getName() name}s that distinguish themselves
 * among their siblings uniquely. The names can be combined by '/' to form an
 * item full name, which uniquely identifies an {@link Item} inside the whole {@link Hudson}.
 *
 * @author Kohsuke Kawaguchi
 * @see Items
 */ Item MethodDeclaration /**
     * Gets the parent that contains this item.
     */ ReferenceType ItemGroup TypeArgument ReferenceType Item extends getParent MethodDeclaration /**
     * Gets all the jobs that this {@link Item} contains as descendants.
     */ Modifier abstract ReferenceType Collection TypeArgument ReferenceType Job extends getAllJobs MethodDeclaration /**
     * Gets the name of the item.
     *
     * <p>
     * The name must be unique among other {@link Item}s that belong
     * to the same parent.
     *
     * <p>
     * This name is also used for directory name, so it cannot contain
     * any character that's not allowed on the file system.
     *
     * @see #getFullName() 
     */ ReferenceType String getName MethodDeclaration /**
     * Gets the full name of this item, like ""abc/def/ghi"".
     *
     * <p>
     * Full name consists of {@link #getName() name}s of {@link Item}s
     * that lead from the root {@link Hudson} to this {@link Item},
     * separated by '/'. This is the unique name that identifies this
     * {@link Item} inside the whole {@link Hudson}.
     *
     * @see Hudson#getItemByFullName(String,Class)
     */ ReferenceType String getFullName MethodDeclaration /**
     * Gets the human readable short name of this item.
     *
     * <p>
     * This method should try to return a short concise human
     * readable string that describes this item.
     * The string need not be unique.
     *
     * <p>
     * The returned string should not include the display names
     * of {@link #getParent() ancestor items}.
     */ ReferenceType String getDisplayName MethodDeclaration /**
     * Works like {@link #getDisplayName()} but return
     * the full path that includes all the display names
     * of the ancestors.
     */ ReferenceType String getFullDisplayName MethodDeclaration /**
     * Returns the URL of this item relative to the context root of the application.
     *
     * @see AbstractItem#getUrl() for how to implement this.
     *
     * @return
     *      URL that ends with '/'.
     */ ReferenceType String getUrl MethodDeclaration /**
     * Returns the URL of this item relative to the parent {@link ItemGroup}.
     * @see AbstractItem#getShortUrl() for how to implement this.
     *
     * @return
     *      URL that ends with '/'.
     */ ReferenceType String getShortUrl MethodDeclaration /**
     * Returns the absolute URL of this item. This relies on the current
     * {@link StaplerRequest} to figure out what the host name is,
     * so can be used only during processing client requests.
     *
     * @return
     *      absolute URL.
     * @throws IllegalStateException
     *      if the method is invoked outside the HTTP request processing.
     *
     * @deprecated
     *      This method shall <b>NEVER</b> be used during HTML page rendering, as it won't work with
     *      network set up like Apache reverse proxy.
     *      This method is only intended for the remote API clients who cannot resolve relative references
     *      (even this won't work for the same reason, which should be fixed.)
     */ ReferenceType String getAbsoluteUrl MethodDeclaration /**
     * Called right after when a {@link Item} is loaded from disk.
     * This is an opporunity to do a post load processing.
     *
     * @param name
     *      Name of the directory (not a path --- just the name portion) from
     *      which the configuration was loaded. This usually becomes the
     *      {@link #getName() name} of this item.
     */ onLoad FormalParameter ReferenceType ItemGroup TypeArgument ReferenceType Item extends parent FormalParameter ReferenceType String name IOException MethodDeclaration /**
     * When a {@link Item} is copied from existing one,
     * the files are first copied on the file system,
     * then it will be loaded, then this method will be invoked
     * to perform any implementation-specific work.
     */ onCopiedFrom FormalParameter ReferenceType Item src MethodDeclaration /**
     * Save the settings to a file.
     *
     * Use {@link Items#getConfigFile(Item)}
     * or {@link AbstractItem#getConfigFile()} to obtain the file
     * to save the data.
     */ Modifier public save IOException ConstantDeclaration Modifier public final static ReferenceType PermissionGroup VariableDeclarator PERMISSIONS ClassCreator ReferenceType PermissionGroup ClassReference ReferenceType Item MethodInvocation Messages _Item_Permissions_Title ConstantDeclaration Modifier public final static ReferenceType Permission VariableDeclarator CREATE ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Create"" MemberReference Permission CREATE ConstantDeclaration Modifier public final static ReferenceType Permission VariableDeclarator DELETE ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Delete"" MemberReference Permission DELETE ConstantDeclaration Modifier public final static ReferenceType Permission VariableDeclarator CONFIGURE ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Configure"" MemberReference Permission CONFIGURE ConstantDeclaration Modifier public final static ReferenceType Permission VariableDeclarator READ ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Read"" MemberReference Permission READ ConstantDeclaration Modifier public final static ReferenceType Permission VariableDeclarator BUILD ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Build"" MethodInvocation Messages _AbstractProject_BuildPermission_Description MemberReference Permission UPDATE ConstantDeclaration Modifier public final static ReferenceType Permission VariableDeclarator WORKSPACE ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Workspace"" MethodInvocation Messages _AbstractProject_WorkspacePermission_Description MemberReference Permission READ ReferenceType PersistenceRoot ReferenceType SearchableModelObject ReferenceType AccessControlled",0
583,583,,1
440,440,,0
152,152,"CompilationUnit PackageDeclaration hudson.tools Import hudson.Extension Import hudson.FilePath Import hudson.model.Node Import hudson.model.TaskListener Import hudson.tasks.CommandInterpreter Import hudson.util.FormValidation Import java.io.IOException Import java.util.Collections Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter ClassDeclaration Modifier public /**
 * Installs a tool by running an arbitrary shell command.
 * @since 1.305
 */ CommandInstaller FieldDeclaration /**
     * Command to execute, similar to {@link CommandInterpreter#command}.
     */ Modifier private final ReferenceType String VariableDeclarator command FieldDeclaration /**
     * Resulting tool home directory.
     */ Modifier private final ReferenceType String VariableDeclarator toolHome ConstructorDeclaration Modifier public Annotation DataBoundConstructor CommandInstaller FormalParameter ReferenceType String label FormalParameter ReferenceType String command FormalParameter ReferenceType String toolHome StatementExpression SuperConstructorInvocation MemberReference label StatementExpression Assignment This MemberReference command MemberReference command = StatementExpression Assignment This MemberReference toolHome MemberReference toolHome = MethodDeclaration Modifier public ReferenceType String getCommand ReturnStatement MemberReference command MethodDeclaration Modifier public ReferenceType String getToolHome ReturnStatement MemberReference toolHome MethodDeclaration Modifier public ReferenceType FilePath performInstallation FormalParameter ReferenceType ToolInstallation tool FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException LocalVariableDeclaration ReferenceType FilePath VariableDeclarator dir MethodInvocation MemberReference tool MemberReference node preferredLocation LocalVariableDeclaration ReferenceType FilePath VariableDeclarator script MethodInvocation dir Literal ""hudson"" Literal "".sh"" MemberReference command createTextTempFile TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cmd ArrayInitializer Literal ""sh"" Literal ""-e"" MethodInvocation script getRemote LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation node MethodInvocation launch MethodInvocation MemberReference cmd cmds MethodInvocation MemberReference log stdout MethodInvocation MemberReference dir pwd MethodInvocation join MemberReference log createLauncher IfStatement BinaryOperation != MemberReference r Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Command returned status "" MemberReference r End StatementExpression MethodInvocation script delete ReturnStatement MethodInvocation dir MemberReference toolHome child ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages CommandInstaller_DescriptorImpl_displayName MethodDeclaration Modifier public ReferenceType FormValidation doCheckCommand FormalParameter Annotation QueryParameter ReferenceType String value IfStatement BinaryOperation > MethodInvocation value length Literal 0 BlockStatement ReturnStatement MethodInvocation FormValidation ok BlockStatement ReturnStatement MethodInvocation FormValidation MethodInvocation Messages CommandInstaller_no_command error End MethodDeclaration Modifier public ReferenceType FormValidation doCheckToolHome FormalParameter Annotation QueryParameter ReferenceType String value IfStatement BinaryOperation > MethodInvocation value length Literal 0 BlockStatement ReturnStatement MethodInvocation FormValidation ok BlockStatement ReturnStatement MethodInvocation FormValidation MethodInvocation Messages CommandInstaller_no_toolHome error End ReferenceType ToolInstallerDescriptor TypeArgument ReferenceType CommandInstaller ReferenceType ToolInstaller",1
92,92,"CompilationUnit PackageDeclaration hudson.model.listeners Import hudson.model.AbstractBuild Import hudson.model.Action Import hudson.model.BuildListener Import hudson.model.Hudson Import hudson.scm.ChangeLogSet Import hudson.scm.SCM Import hudson.ExtensionPoint ClassDeclaration Modifier public abstract /**
 * Receives notifications about SCM activities in Hudson.
 *
 * <p>
 * This is an abstract class so that methods added in the future won't break existing listeners.
 *
 * <p>
 * Once instanciated, use the {@link #register()} method to start receiving events. 
 *
 * @author Kohsuke Kawaguchi
 * @see Hudson#getSCMListeners()
 * @since 1.70
 */ SCMListener MethodDeclaration /**
     * Called once the changelog is determined.
     *
     * <p>
     * During a build, Hudson fetches the update of the workspace from SCM,
     * and determines the changelog (see {@link SCM#checkout}). Immediately
     * after that, a build will invoke this method on all registered
     * {@link SCMListener}s.
     *
     * <p>
     * If a build failed before we successfully determine changelog, this method
     * will not be invoked (for example, if ""cvs update"" failed.) OTOH, this method
     * is invoked before the actual build (like ant invocation) happens. 
     *
     * <p>
     * This is an opportunity for SCM-related plugins to act on changelog.
     * A typical usage includes parsing commit messages and do cross-referencing
     * between other systems. Implementations can also contribute {@link Action}
     * to {@link AbstractBuild} (by {@code build.getActions().add(...)} to
     * display additional data on build views.
     *
     * <p>
     * TODO: once we have cvsnews plugin, refer to its usage.
     *
     * @param build
     *      The build in progress, which just finished determining changelog.
     *      At this point this build is still in progress. Never null.
     * @param listener
     *      {@link BuildListener} for on-going build. This can be used to report
     *      any errors or the general logging of what's going on. This will show
     *      up in the ""console output"" of the build. Never null.
     * @param changelog
     *      Set of changes detected in this build. This is the same value
     *      returned from {@link AbstractBuild#getChangeSet()} but passed
     *      separately for convenience.
     *
     * @throws Exception
     *      If any exception is thrown from this method, it will be recorded
     *      and causes the build to fail. 
     */ Modifier public onChangeLogParsed FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType ChangeLogSet TypeArgument ? changelog Exception MethodDeclaration /**
     * Registers this {@link SCMListener} so that it will start receiving events.
     */ Modifier public final register StatementExpression MethodInvocation Hudson MethodInvocation getSCMListeners MethodInvocation This add getInstance MethodDeclaration /**
     * Unregisters this {@link SCMListener} so that it will never receive further events.
     *
     * <p>
     * Unless {@link SCMListener} is unregistered, it will never be a subject of GC.
     */ Modifier public final BasicType boolean unregister ReturnStatement MethodInvocation Hudson MethodInvocation getSCMListeners MethodInvocation This remove getInstance ReferenceType ExtensionPoint",1
589,589,,1
227,227,"CompilationUnit PackageDeclaration hudson.cli Import hudson.Extension Import hudson.model.Hudson Import org.codehaus.groovy.tools.shell.Groovysh Import org.codehaus.groovy.tools.shell.IO Import java.util.List Import java.io.PrintStream Import java.io.InputStream Import java.io.BufferedInputStream Import java.io.PrintWriter Import jline.UnsupportedTerminal Import jline.Terminal ClassDeclaration Modifier public Annotation Extension /**
 * Executes Groovy shell.
 *
 * @author Kohsuke Kawaguchi
 */ GroovyshCommand MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription ReturnStatement Literal ""Runs an interactive groovy shell"" MethodDeclaration Modifier public Annotation Override BasicType int main FormalParameter ReferenceType List TypeArgument ReferenceType String args FormalParameter ReferenceType InputStream stdin FormalParameter ReferenceType PrintStream stdout FormalParameter ReferenceType PrintStream stderr StatementExpression MethodInvocation Hudson MethodInvocation MemberReference Hudson ADMINISTER checkPermission getInstance StatementExpression MethodInvocation System Literal ""jline.terminal"" ClassReference MethodInvocation getName ReferenceType UnsupportedTerminal setProperty StatementExpression MethodInvocation Terminal resetTerminal LocalVariableDeclaration ReferenceType Groovysh VariableDeclarator shell ClassCreator ReferenceType Groovysh ClassCreator ReferenceType IO ClassCreator ReferenceType BufferedInputStream MemberReference stdin MemberReference stdout MemberReference stderr StatementExpression MethodInvocation shell MethodInvocation getContext MethodInvocation Literal ""out"" ClassCreator ReferenceType PrintWriter MemberReference stdout Literal true setProperty getInterp ReturnStatement MethodInvocation shell MethodInvocation args ArrayCreator ReferenceType String MethodInvocation args size toArray run MethodDeclaration Modifier protected BasicType int run ThrowStatement ClassCreator ReferenceType UnsupportedOperationException ReferenceType CLICommand",0
66,66,"CompilationUnit PackageDeclaration hudson.remoting Import java.util.concurrent.ExecutionException Import java.util.concurrent.TimeUnit Import java.util.concurrent.TimeoutException ClassDeclaration Modifier abstract /**
 * {@link Future} that converts the return type.
 *
 * @author Kohsuke Kawaguchi
 */ FutureAdapter FieldDeclaration Modifier final protected ReferenceType Future TypeArgument ReferenceType Y VariableDeclarator core ConstructorDeclaration Modifier protected FutureAdapter FormalParameter ReferenceType Future TypeArgument ReferenceType Y core StatementExpression Assignment This MemberReference core MemberReference core = MethodDeclaration Modifier public BasicType boolean cancel FormalParameter BasicType boolean mayInterruptIfRunning ReturnStatement MethodInvocation core MemberReference mayInterruptIfRunning cancel MethodDeclaration Modifier public BasicType boolean isCancelled ReturnStatement MethodInvocation core isCancelled MethodDeclaration Modifier public BasicType boolean isDone ReturnStatement MethodInvocation core isDone MethodDeclaration Modifier public ReferenceType X get InterruptedException ExecutionException ReturnStatement MethodInvocation MethodInvocation core get adapt MethodDeclaration Modifier public ReferenceType X get FormalParameter BasicType long timeout FormalParameter ReferenceType TimeUnit unit InterruptedException ExecutionException TimeoutException ReturnStatement MethodInvocation MethodInvocation core MemberReference timeout MemberReference unit get adapt MethodDeclaration Modifier protected abstract ReferenceType X adapt FormalParameter ReferenceType Y y ExecutionException TypeParameter X TypeParameter Y ReferenceType Future TypeArgument ReferenceType X",1
375,375,,1
361,361,,0
166,166,"CompilationUnit PackageDeclaration hudson.model Import hudson.AbortException Import hudson.FeedAdapter Import hudson.FilePath Import hudson.Launcher Import hudson.Util Import hudson.model.Cause.LegacyCodeCause Import hudson.model.Cause.UserCause Import hudson.model.Cause.RemoteCause Import hudson.model.Descriptor.FormException Import hudson.model.Fingerprint.RangeSet Import hudson.model.RunMap.Constructor Import hudson.model.listeners.RunListener Import hudson.model.Queue.WaitingItem Import hudson.remoting.AsyncFutureImpl Import hudson.scm.ChangeLogSet Import hudson.scm.ChangeLogSet.Entry Import hudson.scm.NullSCM Import hudson.scm.SCM Import hudson.scm.SCMS Import hudson.search.SearchIndexBuilder Import hudson.security.Permission Import hudson.tasks.BuildStep Import hudson.tasks.BuildTrigger Import hudson.tasks.Mailer Import hudson.tasks.Publisher Import hudson.tasks.BuildStepDescriptor Import hudson.tasks.BuildWrapperDescriptor Import hudson.triggers.SCMTrigger Import hudson.triggers.Trigger Import hudson.triggers.TriggerDescriptor Import hudson.util.DescribableList Import hudson.util.EditDistance Import hudson.widgets.BuildHistoryWidget Import hudson.widgets.HistoryWidget Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.export.Exported Import javax.servlet.ServletException Import java.io.File Import java.io.IOException Import java.lang.reflect.InvocationTargetException Import java.util.ArrayList Import java.util.Arrays Import java.util.Calendar Import java.util.Collection Import java.util.Collections Import java.util.Comparator Import java.util.HashSet Import java.util.List Import java.util.Map Import java.util.Set Import java.util.SortedMap Import java.util.TreeMap Import java.util.Vector Import java.util.concurrent.Future Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public abstract /**
 * Base implementation of {@link Job}s that build software.
 *
 * For now this is primarily the common part of {@link Project} and MavenModule.
 *
 * @author Kohsuke Kawaguchi
 * @see AbstractBuild
 */ AbstractProject FieldDeclaration /**
     * {@link SCM} associated with the project.
     * To allow derived classes to link {@link SCM} config to elsewhere,
     * access to this variable should always go through {@link #getScm()}.
     */ Modifier private volatile ReferenceType SCM VariableDeclarator scm ClassCreator ReferenceType NullSCM FieldDeclaration /**
     * All the builds keyed by their build number.
     */ Modifier protected transient ReferenceType RunMap TypeArgument ReferenceType R VariableDeclarator builds ClassCreator ReferenceType RunMap TypeArgument ReferenceType R FieldDeclaration /**
     * The quiet period. Null to delegate to the system default.
     */ Modifier private volatile ReferenceType Integer VariableDeclarator quietPeriod Literal null FieldDeclaration /**
     * If this project is configured to be only built on a certain label,
     * this value will be set to that label.
     *
     * For historical reasons, this is called 'assignedNode'. Also for
     * a historical reason, null to indicate the affinity
     * with the master node.
     *
     * @see #canRoam
     */ Modifier private ReferenceType String VariableDeclarator assignedNode FieldDeclaration /**
     * True if this project can be built on any node.
     *
     * <p>
     * This somewhat ugly flag combination is so that we can migrate
     * existing Hudson installations nicely.
     */ Modifier private volatile BasicType boolean VariableDeclarator canRoam FieldDeclaration /**
     * True to suspend new builds.
     */ Modifier protected volatile BasicType boolean VariableDeclarator disabled FieldDeclaration /**
     * Identifies {@link JDK} to be used.
     * Null if no explicit configuration is required.
     *
     * <p>
     * Can't store {@link JDK} directly because {@link Hudson} and {@link Project}
     * are saved independently.
     *
     * @see Hudson#getJDK(String)
     */ Modifier private volatile ReferenceType String VariableDeclarator jdk FieldDeclaration /**
     * @deprecated
     */ Modifier private transient BasicType boolean VariableDeclarator enableRemoteTrigger FieldDeclaration Modifier private volatile ReferenceType BuildAuthorizationToken VariableDeclarator authToken Literal null FieldDeclaration /**
     * List of all {@link Trigger}s for this project.
     */ Modifier protected ReferenceType List TypeArgument ReferenceType Trigger TypeArgument ? VariableDeclarator triggers ClassCreator ReferenceType Vector TypeArgument ReferenceType Trigger TypeArgument ? FieldDeclaration /**
     * {@link Action}s contributed from subsidiary objects associated with
     * {@link AbstractProject}, such as from triggers, builders, publishers, etc.
     *
     * We don't want to persist them separately, and these actions
     * come and go as configuration change, so it's kept separate.
     */ Modifier protected transient ReferenceType List TypeArgument ReferenceType Action VariableDeclarator transientActions ClassCreator ReferenceType Vector TypeArgument ReferenceType Action ConstructorDeclaration Modifier protected AbstractProject FormalParameter ReferenceType ItemGroup parent FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference parent MemberReference name IfStatement MethodInvocation ! Hudson MethodInvocation getNodes MethodInvocation isEmpty getInstance BlockStatement StatementExpression Assignment MemberReference canRoam Literal true = End MethodDeclaration Modifier public Annotation Override onLoad FormalParameter ReferenceType ItemGroup TypeArgument ReferenceType Item extends parent FormalParameter ReferenceType String name IOException StatementExpression SuperMethodInvocation MemberReference parent MemberReference name onLoad StatementExpression Assignment This MemberReference builds ClassCreator ReferenceType RunMap TypeArgument ReferenceType R = StatementExpression This MemberReference builds MethodInvocation This ClassCreator ReferenceType Constructor TypeArgument ReferenceType R MethodDeclaration Modifier public ReferenceType R create FormalParameter ReferenceType File dir IOException ReturnStatement MethodInvocation MemberReference dir loadBuild load IfStatement BinaryOperation == MemberReference triggers Literal null StatementExpression Assignment MemberReference triggers ClassCreator ReferenceType Vector TypeArgument ReferenceType Trigger TypeArgument ? = End ForStatement EnhancedForControl VariableDeclaration ReferenceType Trigger VariableDeclarator t MemberReference triggers StatementExpression MethodInvocation t This Literal false start End IfStatement BinaryOperation == MemberReference scm Literal null StatementExpression Assignment MemberReference scm ClassCreator ReferenceType NullSCM = End IfStatement BinaryOperation == MemberReference transientActions Literal null StatementExpression Assignment MemberReference transientActions ClassCreator ReferenceType Vector TypeArgument ReferenceType Action = End StatementExpression MethodInvocation updateTransientActions MethodDeclaration Modifier protected performDelete IOException InterruptedException StatementExpression MethodInvocation Literal true makeDisabled LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation getWorkspace IfStatement BinaryOperation != MemberReference ws Literal null BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator on MethodInvocation getLastBuiltOn StatementExpression MethodInvocation MethodInvocation This MemberReference ws MemberReference on processWorkspaceBeforeDeletion getScm IfStatement BinaryOperation != MemberReference on Literal null StatementExpression MethodInvocation on MethodInvocation This MemberReference ws discardWorkspace getFileSystemProvisioner End End StatementExpression SuperMethodInvocation performDelete MethodDeclaration /**
     * If this project is configured to be always built on this node,
     * return that {@link Node}. Otherwise null.
     */ Modifier public ReferenceType Label getAssignedLabel IfStatement MemberReference canRoam ReturnStatement Literal null End IfStatement BinaryOperation == MemberReference assignedNode Literal null ReturnStatement MethodInvocation Hudson MethodInvocation getSelfLabel getInstance End ReturnStatement MethodInvocation Hudson MethodInvocation MemberReference assignedNode getLabel getInstance MethodDeclaration /**
     * Sets the assigned label.
     */ Modifier public setAssignedLabel FormalParameter ReferenceType Label l IOException IfStatement BinaryOperation == MemberReference l Literal null BlockStatement StatementExpression Assignment MemberReference canRoam Literal true = StatementExpression Assignment MemberReference assignedNode Literal null = BlockStatement StatementExpression Assignment MemberReference canRoam Literal false = IfStatement BinaryOperation == MemberReference l MethodInvocation Hudson MethodInvocation getSelfLabel getInstance StatementExpression Assignment MemberReference assignedNode Literal null = StatementExpression Assignment MemberReference assignedNode MethodInvocation l getName = End End StatementExpression MethodInvocation save MethodDeclaration /**
     * Get the term used in the UI to represent this kind of {@link AbstractProject}.
     * Must start with a capital letter.
     */ Modifier public Annotation Override ReferenceType String getPronoun ReturnStatement MethodInvocation Messages AbstractProject_Pronoun MethodDeclaration /**
     * Returns the root project value.
     *
     * @return the root project value.
     */ Modifier public ReferenceType AbstractProject getRootProject IfStatement BinaryOperation instanceof This MethodInvocation getParent ReferenceType Hudson BlockStatement ReturnStatement This BlockStatement ReturnStatement Cast ReferenceType AbstractProject This MethodInvocation getParent End MethodDeclaration /**
     * Gets the directory where the module is checked out.
     *
     * @return
     *      null if the workspace is on a slave that's not connected.
     */ Modifier public abstract ReferenceType FilePath getWorkspace MethodDeclaration /**
     * Returns the root directory of the checked-out module.
     * <p>
     * This is usually where <tt>pom.xml</tt>, <tt>build.xml</tt>
     * and so on exists.
     */ Modifier public ReferenceType FilePath getModuleRoot LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation getWorkspace IfStatement BinaryOperation == MemberReference ws Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation MethodInvocation MemberReference ws getModuleRoot getScm MethodDeclaration /**
     * Returns the root directories of all checked-out modules.
     * <p>
     * Some SCMs support checking out multiple modules into the same workspace.
     * In these cases, the returned array will have a length greater than one.
     * @return The roots of all modules checked out from the SCM.
     */ Modifier public ReferenceType FilePath getModuleRoots ReturnStatement MethodInvocation MethodInvocation MethodInvocation getWorkspace getModuleRoots getScm MethodDeclaration Modifier public BasicType int getQuietPeriod ReturnStatement TernaryExpression BinaryOperation != MemberReference quietPeriod Literal null MemberReference quietPeriod MethodInvocation Hudson MethodInvocation getQuietPeriod getInstance MethodDeclaration Modifier public BasicType boolean getHasCustomQuietPeriod ReturnStatement BinaryOperation != MemberReference quietPeriod Literal null MethodDeclaration Modifier public final BasicType boolean isBuildable ReturnStatement MethodInvocation ! isDisabled MethodDeclaration /**
     * Used in <tt>sidepanel.jelly</tt> to decide whether to display
     * the config/delete/build links.
     */ Modifier public BasicType boolean isConfigurable ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isDisabled ReturnStatement MemberReference disabled MethodDeclaration /**
     * Marks the build as disabled.
     */ Modifier public makeDisabled FormalParameter BasicType boolean b IOException IfStatement BinaryOperation == MemberReference disabled MemberReference b ReturnStatement End StatementExpression Assignment This MemberReference disabled MemberReference b = IfStatement MemberReference b StatementExpression MethodInvocation Hudson MethodInvocation getQueue MethodInvocation This cancel getInstance End StatementExpression MethodInvocation save MethodDeclaration Modifier public Annotation Override ReferenceType BallColor getIconColor IfStatement MethodInvocation isDisabled ReturnStatement MemberReference BallColor DISABLED ReturnStatement SuperMethodInvocation getIconColor End MethodDeclaration Modifier protected updateTransientActions SynchronizedStatement MemberReference transientActions StatementExpression MethodInvocation transientActions clear ForStatement EnhancedForControl VariableDeclaration ReferenceType JobProperty TypeArgument ReferenceType P super VariableDeclarator p MemberReference properties BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation p Cast ReferenceType P This getJobAction IfStatement BinaryOperation != MemberReference a Literal null StatementExpression MethodInvocation transientActions MemberReference a add End End MethodDeclaration /**
     * Returns the live list of all {@link Publisher}s configured for this project.
     *
     * <p>
     * This method couldn't be called <tt>getPublishers()</tt> because existing methods
     * in sub-classes return different inconsistent types.
     */ Modifier public abstract ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher getPublishersList MethodDeclaration Modifier public Annotation Override addProperty FormalParameter ReferenceType JobProperty TypeArgument ReferenceType P super jobProp IOException StatementExpression SuperMethodInvocation MemberReference jobProp addProperty StatementExpression MethodInvocation updateTransientActions MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ProminentProjectAction getProminentActions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Action VariableDeclarator a MethodInvocation getActions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ProminentProjectAction VariableDeclarator pa ClassCreator ReferenceType Vector TypeArgument ReferenceType ProminentProjectAction ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MemberReference a BlockStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType ProminentProjectAction StatementExpression MethodInvocation pa Cast ReferenceType ProminentProjectAction MemberReference action add End End ReturnStatement MemberReference pa MethodDeclaration Modifier public Annotation Override doConfigSubmit FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression SuperMethodInvocation MemberReference req MemberReference rsp doConfigSubmit LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject VariableDeclarator upstream MethodInvocation Collections emptySet IfStatement BinaryOperation != MethodInvocation req Literal ""pseudoUpstreamTrigger"" getParameter Literal null BlockStatement StatementExpression Assignment MemberReference upstream ClassCreator ReferenceType HashSet TypeArgument ReferenceType AbstractProject MethodInvocation Items MethodInvocation req Literal ""upstreamProjects"" getParameter ClassReference ReferenceType AbstractProject fromNameList = End StatementExpression MethodInvocation Hudson MethodInvocation rebuildDependencyGraph getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject TypeArgument ? TypeArgument ? VariableDeclarator p MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AbstractProject getAllItems getInstance BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isUpstream MethodInvocation upstream MemberReference p contains SynchronizedStatement MemberReference p LocalVariableDeclaration ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher VariableDeclarator pl MethodInvocation p getPublishersList LocalVariableDeclaration ReferenceType BuildTrigger VariableDeclarator trigger MethodInvocation pl ClassReference ReferenceType BuildTrigger get LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator newChildProjects TernaryExpression BinaryOperation == MemberReference trigger Literal null ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractProject MethodInvocation trigger getChildProjects IfStatement MemberReference isUpstream BlockStatement IfStatement MethodInvocation ! newChildProjects This contains StatementExpression MethodInvocation newChildProjects This add End BlockStatement StatementExpression MethodInvocation newChildProjects This remove End IfStatement MethodInvocation newChildProjects isEmpty BlockStatement StatementExpression MethodInvocation pl ClassReference ReferenceType BuildTrigger remove BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType BuildTrigger VariableDeclarator existingList MethodInvocation pl ClassReference ReferenceType BuildTrigger getAll LocalVariableDeclaration ReferenceType BuildTrigger VariableDeclarator existing SwitchStatement MethodInvocation existingList size SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference existing Literal null = BreakStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference existing MethodInvocation existingList Literal 0 get = BreakStatement SwitchStatementCase StatementExpression MethodInvocation pl ClassReference ReferenceType BuildTrigger removeAll LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject VariableDeclarator combinedChildren ClassCreator ReferenceType HashSet TypeArgument ReferenceType AbstractProject ForStatement EnhancedForControl VariableDeclaration ReferenceType BuildTrigger VariableDeclarator bt MemberReference existingList StatementExpression MethodInvocation combinedChildren MethodInvocation bt getChildProjects addAll End StatementExpression Assignment MemberReference existing ClassCreator ReferenceType BuildTrigger ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractProject MemberReference combinedChildren MethodInvocation existingList MethodInvocation getThreshold Literal 0 get = StatementExpression MethodInvocation pl MemberReference existing add BreakStatement End IfStatement BinaryOperation && BinaryOperation != MemberReference existing Literal null MethodInvocation existing MemberReference newChildProjects hasSame ContinueStatement End StatementExpression MethodInvocation pl ClassCreator ReferenceType BuildTrigger MemberReference newChildProjects TernaryExpression BinaryOperation == MemberReference existing Literal null MemberReference Result SUCCESS MethodInvocation existing getThreshold replace End End StatementExpression MethodInvocation Hudson MethodInvocation getQueue MethodInvocation scheduleMaintenance getInstance StatementExpression MethodInvocation Hudson MethodInvocation rebuildDependencyGraph getInstance MethodDeclaration /**
	 * @deprecated
	 *    Use {@link #scheduleBuild(Cause)}.  Since 1.283
	 */ Modifier public BasicType boolean scheduleBuild ReturnStatement MethodInvocation ClassCreator ReferenceType LegacyCodeCause scheduleBuild MethodDeclaration /**
	 * @deprecated
	 *    Use {@link #scheduleBuild(int, Cause)}.  Since 1.283
	 */ Modifier public BasicType boolean scheduleBuild FormalParameter BasicType int quietPeriod ReturnStatement MethodInvocation MemberReference quietPeriod ClassCreator ReferenceType LegacyCodeCause scheduleBuild MethodDeclaration /**
     * Schedules a build of this project.
     *
     * @return
     *      true if the project is actually added to the queue.
     *      false if the queue contained it and therefore the add()
     *      was noop
     */ Modifier public BasicType boolean scheduleBuild FormalParameter ReferenceType Cause c ReturnStatement MethodInvocation MethodInvocation getQuietPeriod MemberReference c scheduleBuild MethodDeclaration Modifier public BasicType boolean scheduleBuild FormalParameter BasicType int quietPeriod FormalParameter ReferenceType Cause c ReturnStatement MethodInvocation MemberReference quietPeriod MemberReference c ArrayCreator ReferenceType Action Literal 0 scheduleBuild MethodDeclaration /**
     * Schedules a build.
     *
     * Important: the actions should be persistable without outside references (e.g. don't store
     * references to this project). To provide parameters for a parameterized project, add a ParametersAction. If
     * no ParametersAction is provided for such a project, one will be created with the default parameter values.
     *
     * @param quietPeriod the quiet period to observer
     * @param c the cause for this build which should be recorded
     * @param actions a list of Actions that will be added to the build
     * @return whether the build was actually scheduled
     */ Modifier public BasicType boolean scheduleBuild FormalParameter BasicType int quietPeriod FormalParameter ReferenceType Cause c FormalParameter ReferenceType Action actions  ReturnStatement BinaryOperation != MethodInvocation MemberReference quietPeriod MemberReference c MemberReference actions scheduleBuild2 Literal null MethodDeclaration /**
     * Schedules a build of this project, and returns a {@link Future} object
     * to wait for the completion of the build.
     */ Modifier public ReferenceType Future TypeArgument ReferenceType R scheduleBuild2 FormalParameter BasicType int quietPeriod FormalParameter ReferenceType Cause c FormalParameter ReferenceType Action actions  IfStatement MethodInvocation isDisabled ReturnStatement Literal null End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Action VariableDeclarator queueActions ClassCreator ReferenceType ArrayList MethodInvocation Arrays MemberReference actions asList IfStatement BinaryOperation && MethodInvocation isParameterized MethodInvocation Util MethodInvocation isEmpty MemberReference queueActions ClassReference ReferenceType ParametersAction filter BlockStatement StatementExpression MethodInvocation queueActions ClassCreator ReferenceType ParametersAction MethodInvocation getDefaultParametersValues add End IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation queueActions ClassCreator ReferenceType CauseAction MemberReference c add End LocalVariableDeclaration ReferenceType WaitingItem VariableDeclarator i MethodInvocation Hudson MethodInvocation getQueue MethodInvocation This MemberReference quietPeriod MemberReference queueActions schedule getInstance IfStatement BinaryOperation != MemberReference i Literal null ReturnStatement Cast ReferenceType Future MethodInvocation i getFuture End ReturnStatement Literal null MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ParameterValue getDefaultParametersValues LocalVariableDeclaration ReferenceType ParametersDefinitionProperty VariableDeclarator paramDefProp MethodInvocation ClassReference ReferenceType ParametersDefinitionProperty getProperty LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType ParameterValue VariableDeclarator defValues ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ParameterValue IfStatement BinaryOperation == MemberReference paramDefProp Literal null ReturnStatement MemberReference defValues End ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterDefinition VariableDeclarator paramDefinition MethodInvocation paramDefProp getParameterDefinitions BlockStatement LocalVariableDeclaration ReferenceType ParameterValue VariableDeclarator defaultValue MethodInvocation paramDefinition getDefaultParameterValue IfStatement BinaryOperation != MemberReference defaultValue Literal null StatementExpression MethodInvocation defValues MemberReference defaultValue add End End ReturnStatement MemberReference defValues MethodDeclaration /**
     * Schedules a build, and returns a {@link Future} object
     * to wait for the completion of the build.
     *
     * <p>
     * Production code shouldn't be using this, but for tests, this is very convenience, so this isn't marked
     * as deprecated.
	 */ Modifier public ReferenceType Future TypeArgument ReferenceType R scheduleBuild2 FormalParameter BasicType int quietPeriod ReturnStatement MethodInvocation MemberReference quietPeriod ClassCreator ReferenceType LegacyCodeCause scheduleBuild2 MethodDeclaration /**
     * Schedules a build of this project, and returns a {@link Future} object
     * to wait for the completion of the build.
     */ Modifier public ReferenceType Future TypeArgument ReferenceType R scheduleBuild2 FormalParameter BasicType int quietPeriod FormalParameter ReferenceType Cause c ReturnStatement MethodInvocation MemberReference quietPeriod MemberReference c ArrayCreator ReferenceType Action Literal 0 scheduleBuild2 MethodDeclaration /**
     * Schedules a polling of this project.
     */ Modifier public BasicType boolean schedulePolling IfStatement MethodInvocation isDisabled ReturnStatement Literal false End LocalVariableDeclaration ReferenceType SCMTrigger VariableDeclarator scmt MethodInvocation ClassReference ReferenceType SCMTrigger getTrigger IfStatement BinaryOperation == MemberReference scmt Literal null ReturnStatement Literal false End StatementExpression MethodInvocation scmt run ReturnStatement Literal true MethodDeclaration /**
     * Returns true if the build is in the queue.
     */ Modifier public Annotation Override BasicType boolean isInQueue ReturnStatement MethodInvocation Hudson MethodInvocation getQueue MethodInvocation This contains getInstance MethodDeclaration Modifier public Annotation Override ReferenceType Queue ReferenceType Item getQueueItem ReturnStatement MethodInvocation Hudson MethodInvocation getQueue MethodInvocation This getItem getInstance MethodDeclaration /**
     * Gets the JDK that this project is configured with, or null.
     */ Modifier public ReferenceType JDK getJDK ReturnStatement MethodInvocation Hudson MethodInvocation MemberReference jdk getJDK getInstance MethodDeclaration /**
     * Overwrites the JDK setting.
     */ Modifier public setJDK FormalParameter ReferenceType JDK jdk IOException StatementExpression Assignment This MemberReference jdk MethodInvocation jdk getName = StatementExpression MethodInvocation save MethodDeclaration Modifier public ReferenceType BuildAuthorizationToken getAuthToken ReturnStatement MemberReference authToken MethodDeclaration Modifier public ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R extends _getRuns ReturnStatement MethodInvocation builds getView MethodDeclaration Modifier public removeRun FormalParameter ReferenceType R run StatementExpression This MemberReference builds MethodInvocation MemberReference run remove MethodDeclaration /**
     * Determines Class&lt;R>.
     */ Modifier protected abstract ReferenceType Class TypeArgument ReferenceType R getBuildClass FieldDeclaration Modifier private transient BasicType long VariableDeclarator lastBuildStartTime MethodDeclaration /**
     * Creates a new build of this project for immediate execution.
     */ Modifier protected synchronized ReferenceType R newBuild IOException LocalVariableDeclaration BasicType long VariableDeclarator timeSinceLast BinaryOperation - MethodInvocation System currentTimeMillis MemberReference lastBuildStartTime IfStatement BinaryOperation < MemberReference timeSinceLast Literal 1000 BlockStatement TryStatement StatementExpression MethodInvocation Thread BinaryOperation - Literal 1000 MemberReference timeSinceLast sleep CatchClause CatchClauseParameter InterruptedException e End StatementExpression Assignment MemberReference lastBuildStartTime MethodInvocation System currentTimeMillis = TryStatement LocalVariableDeclaration ReferenceType R VariableDeclarator lastBuild MethodInvocation MethodInvocation MethodInvocation getClass getConstructor MethodInvocation This newInstance getBuildClass StatementExpression MethodInvocation builds MemberReference lastBuild put ReturnStatement MemberReference lastBuild CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType Error MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType Error MemberReference e CatchClause CatchClauseParameter InvocationTargetException e ThrowStatement MethodInvocation MemberReference e handleInvocationTargetException CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType Error MemberReference e MethodDeclaration Modifier private ReferenceType IOException handleInvocationTargetException FormalParameter ReferenceType InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getTargetException IfStatement BinaryOperation instanceof MemberReference t ReferenceType Error ThrowStatement Cast ReferenceType Error MemberReference t End IfStatement BinaryOperation instanceof MemberReference t ReferenceType RuntimeException ThrowStatement Cast ReferenceType RuntimeException MemberReference t End IfStatement BinaryOperation instanceof MemberReference t ReferenceType IOException ReturnStatement Cast ReferenceType IOException MemberReference t End ThrowStatement ClassCreator ReferenceType Error MemberReference t MethodDeclaration /**
     * Loads an existing build record from disk.
     */ Modifier protected ReferenceType R loadBuild FormalParameter ReferenceType File dir IOException TryStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation getClass ClassReference ReferenceType File getConstructor MethodInvocation This MemberReference dir newInstance getBuildClass CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType Error MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType Error MemberReference e CatchClause CatchClauseParameter InvocationTargetException e ThrowStatement MethodInvocation MemberReference e handleInvocationTargetException CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType Error MemberReference e MethodDeclaration /**
     * {@inheritDoc}
     *
     * <p>
     * Note that this method returns a read-only view of {@link Action}s.
     * {@link BuildStep}s and others who want to add a project action
     * should do so by implementing {@link BuildStep#getProjectAction(AbstractProject)}.
     */ Modifier public synchronized ReferenceType List TypeArgument ReferenceType Action getActions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Action VariableDeclarator actions ClassCreator ReferenceType Vector TypeArgument ReferenceType Action SuperMethodInvocation getActions StatementExpression MethodInvocation actions MemberReference transientActions addAll ReturnStatement MethodInvocation Collections MemberReference actions unmodifiableList MethodDeclaration /**
     * Gets the {@link Node} where this project was last built on.
     *
     * @return
     *      null if no information is available (for example,
     *      if no build was done yet.)
     */ Modifier public ReferenceType Node getLastBuiltOn LocalVariableDeclaration ReferenceType AbstractBuild VariableDeclarator b MethodInvocation getLastBuild IfStatement BinaryOperation == MemberReference b Literal null ReturnStatement Literal null ReturnStatement MethodInvocation b getBuiltOn End MethodDeclaration /**
     * {@inheritDoc}
     *
     * <p>
     * A project must be blocked if its own previous build is in progress,
     * but derived classes can also check other conditions.
     */ Modifier public BasicType boolean isBuildBlocked ReturnStatement MethodInvocation isBuilding MethodDeclaration Modifier public ReferenceType String getWhyBlocked LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator build MethodInvocation getLastBuild LocalVariableDeclaration ReferenceType Executor VariableDeclarator e MethodInvocation build getExecutor LocalVariableDeclaration ReferenceType String VariableDeclarator eta Literal """" IfStatement BinaryOperation != MemberReference e Literal null StatementExpression Assignment MemberReference eta MethodInvocation Messages MethodInvocation e getEstimatedRemainingTime AbstractProject_ETA = End LocalVariableDeclaration BasicType int VariableDeclarator lbn MethodInvocation build getNumber ReturnStatement MethodInvocation Messages MemberReference lbn MemberReference eta AbstractProject_BuildInProgress MethodDeclaration Modifier public final BasicType long getEstimatedDuration LocalVariableDeclaration ReferenceType AbstractBuild VariableDeclarator b MethodInvocation getLastSuccessfulBuild IfStatement BinaryOperation == MemberReference b Literal null ReturnStatement Literal - 1 End LocalVariableDeclaration BasicType long VariableDeclarator duration MethodInvocation b getDuration IfStatement BinaryOperation == MemberReference duration Literal 0 ReturnStatement Literal - 1 End ReturnStatement MemberReference duration MethodDeclaration Modifier public ReferenceType R createExecutable IOException IfStatement MethodInvocation isDisabled ReturnStatement Literal null End ReturnStatement MethodInvocation newBuild MethodDeclaration Modifier public checkAbortPermission StatementExpression MethodInvocation MemberReference AbstractProject ABORT checkPermission MethodDeclaration Modifier public BasicType boolean hasAbortPermission ReturnStatement MethodInvocation MemberReference AbstractProject ABORT hasPermission MethodDeclaration /**
     * Gets the {@link Resource} that represents the workspace of this project.
     * Useful for locking and mutual exclusion control.
     */ Modifier public ReferenceType Resource getWorkspaceResource ReturnStatement ClassCreator ReferenceType Resource BinaryOperation + MethodInvocation getFullDisplayName Literal "" workspace"" MethodDeclaration /**
     * List of necessary resources to perform the build of this project.
     */ Modifier public ReferenceType ResourceList getResourceList LocalVariableDeclaration Modifier final ReferenceType Set TypeArgument ReferenceType ResourceActivity VariableDeclarator resourceActivities MethodInvocation getResourceActivities LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType ResourceList VariableDeclarator resourceLists ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ResourceList BinaryOperation + Literal 1 MethodInvocation resourceActivities size ForStatement EnhancedForControl VariableDeclaration ReferenceType ResourceActivity VariableDeclarator activity MemberReference resourceActivities BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference activity This BinaryOperation != MemberReference activity Literal null BlockStatement StatementExpression MethodInvocation resourceLists MethodInvocation activity getResourceList add End End StatementExpression MethodInvocation resourceLists ClassCreator MethodInvocation MethodInvocation getWorkspaceResource w ReferenceType ResourceList add ReturnStatement MethodInvocation ResourceList MemberReference resourceLists union MethodDeclaration /**
     * Set of child resource activities of the build of this project (override in child projects).
     * @return The set of child resource activities of the build of this project.
     */ Modifier protected ReferenceType Set TypeArgument ReferenceType ResourceActivity getResourceActivities ReturnStatement MethodInvocation Collections emptySet MethodDeclaration Modifier public BasicType boolean checkout FormalParameter ReferenceType AbstractBuild build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType File changelogFile IOException LocalVariableDeclaration ReferenceType SCM VariableDeclarator scm MethodInvocation getScm IfStatement BinaryOperation == MemberReference scm Literal null ReturnStatement Literal true End LocalVariableDeclaration ReferenceType SCMTrigger VariableDeclarator scmt MethodInvocation ClassReference ReferenceType SCMTrigger getTrigger LocalVariableDeclaration BasicType boolean VariableDeclarator locked Literal false TryStatement IfStatement BinaryOperation != MemberReference scmt Literal null BlockStatement StatementExpression MethodInvocation scmt MethodInvocation lockInterruptibly getLock StatementExpression Assignment MemberReference locked Literal true = End LocalVariableDeclaration ReferenceType FilePath VariableDeclarator workspace MethodInvocation getWorkspace StatementExpression MethodInvocation workspace mkdirs ReturnStatement MethodInvocation scm MemberReference build MemberReference launcher MemberReference workspace MemberReference listener MemberReference changelogFile checkout CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_ScmAborted println getLogger StatementExpression MethodInvocation LOGGER MemberReference Level INFO BinaryOperation + MethodInvocation build toString Literal "" aborted"" MemberReference e log ReturnStatement Literal false IfStatement MemberReference locked StatementExpression MethodInvocation scmt MethodInvocation unlock getLock End MethodDeclaration /**
     * Checks if there's any update in SCM, and returns true if any is found.
     *
     * <p>
     * The caller is responsible for coordinating the mutual exclusion between
     * a build and polling, as both touches the workspace.
     */ Modifier public BasicType boolean pollSCMChanges FormalParameter ReferenceType TaskListener listener LocalVariableDeclaration ReferenceType SCM VariableDeclarator scm MethodInvocation getScm IfStatement BinaryOperation == MemberReference scm Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_NoSCM println getLogger ReturnStatement Literal false End IfStatement MethodInvocation isDisabled BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_Disabled println getLogger ReturnStatement Literal false End TryStatement LocalVariableDeclaration ReferenceType FilePath VariableDeclarator workspace MethodInvocation getWorkspace IfStatement BinaryOperation && MethodInvocation scm requiresWorkspaceForPolling BinaryOperation || BinaryOperation == MemberReference workspace Literal null MethodInvocation ! workspace exists BlockStatement LocalVariableDeclaration ReferenceType Label VariableDeclarator label MethodInvocation getAssignedLabel IfStatement BinaryOperation && BinaryOperation != MemberReference label Literal null MethodInvocation label isSelfLabel BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_NoWorkspace println getLogger ReturnStatement Literal false End IfStatement BinaryOperation == MemberReference workspace Literal null StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_WorkspaceOffline println getLogger StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_NoWorkspace println getLogger End StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages AbstractProject_NewBuildForWorkspace println getLogger ReturnStatement Literal true End LocalVariableDeclaration ReferenceType Launcher VariableDeclarator launcher TernaryExpression BinaryOperation != MemberReference workspace Literal null MethodInvocation workspace MemberReference listener createLauncher Literal null StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""Polling SCM changes of "" MethodInvocation getName fine ReturnStatement MethodInvocation scm This MemberReference launcher MemberReference workspace MemberReference listener pollChanges CatchClause CatchClauseParameter AbortException e StatementExpression MethodInvocation listener MethodInvocation Messages AbstractProject_Aborted fatalError ReturnStatement Literal false CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage fatalError printStackTrace ReturnStatement Literal false CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages AbstractProject_PollingABorted fatalError printStackTrace ReturnStatement Literal false MethodDeclaration /**
     * Returns true if this user has made a commit to this project.
     *
     * @since 1.191
     */ Modifier public BasicType boolean hasParticipant FormalParameter ReferenceType User user ForStatement ForControl VariableDeclaration ReferenceType R VariableDeclarator build MethodInvocation getLastBuild BinaryOperation != MemberReference build Literal null Assignment MemberReference build MethodInvocation build getPreviousBuild = IfStatement MethodInvocation build MemberReference user hasParticipant ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType SCM getScm ReturnStatement MemberReference scm MethodDeclaration Modifier public setScm FormalParameter ReferenceType SCM scm StatementExpression Assignment This MemberReference scm MemberReference scm = MethodDeclaration /**
     * Adds a new {@link Trigger} to this {@link Project} if not active yet.
     */ Modifier public addTrigger FormalParameter ReferenceType Trigger TypeArgument ? trigger IOException StatementExpression MethodInvocation MemberReference trigger MemberReference triggers addToList MethodDeclaration Modifier public removeTrigger FormalParameter ReferenceType TriggerDescriptor trigger IOException StatementExpression MethodInvocation MemberReference trigger MemberReference triggers removeFromList MethodDeclaration Modifier final protected synchronized TypeParameter T ReferenceType Describable TypeArgument ReferenceType T addToList FormalParameter ReferenceType T item FormalParameter ReferenceType List TypeArgument ReferenceType T collection IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation collection size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation collection MethodInvocation getDescriptor MemberReference i get MethodInvocation item getDescriptor BlockStatement StatementExpression MethodInvocation collection MemberReference i MemberReference item set StatementExpression MethodInvocation save ReturnStatement End End StatementExpression MethodInvocation collection MemberReference item add StatementExpression MethodInvocation save MethodDeclaration Modifier final protected synchronized TypeParameter T ReferenceType Describable TypeArgument ReferenceType T removeFromList FormalParameter ReferenceType Descriptor TypeArgument ReferenceType T item FormalParameter ReferenceType List TypeArgument ReferenceType T collection IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation collection size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation collection MethodInvocation getDescriptor MemberReference i get MemberReference item BlockStatement StatementExpression MethodInvocation collection MemberReference i remove StatementExpression MethodInvocation save ReturnStatement End End MethodDeclaration Modifier public synchronized ReferenceType Map TypeArgument ReferenceType TriggerDescriptor TypeArgument ReferenceType Trigger getTriggers ReturnStatement Cast ReferenceType Map MethodInvocation Descriptor MemberReference triggers toMap MethodDeclaration /**
     * Gets the specific trigger, or null if the propert is not configured for this job.
     */ Modifier public TypeParameter T ReferenceType Trigger ReferenceType T getTrigger FormalParameter ReferenceType Class TypeArgument ReferenceType T clazz ForStatement EnhancedForControl VariableDeclaration ReferenceType Trigger VariableDeclarator p MemberReference triggers BlockStatement IfStatement MethodInvocation clazz MemberReference p isInstance ReturnStatement MethodInvocation clazz MemberReference p cast End End ReturnStatement Literal null MethodDeclaration /**
     * True if the builds of this project produces {@link Fingerprint} records.
     */ Modifier public abstract BasicType boolean isFingerprintConfigured MethodDeclaration /**
     * Gets the other {@link AbstractProject}s that should be built
     * when a build of this project is completed.
     */ Modifier public final Annotation Exported ReferenceType List TypeArgument ReferenceType AbstractProject getDownstreamProjects ReturnStatement MethodInvocation Hudson MethodInvocation getDependencyGraph MethodInvocation This getDownstream getInstance MethodDeclaration Modifier public final Annotation Exported ReferenceType List TypeArgument ReferenceType AbstractProject getUpstreamProjects ReturnStatement MethodInvocation Hudson MethodInvocation getDependencyGraph MethodInvocation This getUpstream getInstance MethodDeclaration /**
     * Returns only those upstream projects that defines {@link BuildTrigger} to this project.
     * This is a subset of {@link #getUpstreamProjects()}
     *
     * @return A List of upstream projects that has a {@link BuildTrigger} to this project.
     */ Modifier public final ReferenceType List TypeArgument ReferenceType AbstractProject getBuildTriggerUpstreamProjects LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType AbstractProject VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractProject ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject TypeArgument ? TypeArgument ? VariableDeclarator ap MethodInvocation getUpstreamProjects BlockStatement LocalVariableDeclaration ReferenceType BuildTrigger VariableDeclarator buildTrigger MethodInvocation ap MethodInvocation ClassReference ReferenceType BuildTrigger get getPublishersList IfStatement BinaryOperation != MemberReference buildTrigger Literal null IfStatement MethodInvocation buildTrigger MethodInvocation This contains getChildProjects StatementExpression MethodInvocation result MemberReference ap add End End End ReturnStatement MemberReference result MethodDeclaration /**
     * Gets all the upstream projects including transitive upstream projects.
     *
     * @since 1.138
     */ Modifier public final ReferenceType Set TypeArgument ReferenceType AbstractProject getTransitiveUpstreamProjects ReturnStatement MethodInvocation Hudson MethodInvocation getDependencyGraph MethodInvocation This getTransitiveUpstream getInstance MethodDeclaration /**
     * Gets all the downstream projects including transitive downstream projects.
     *
     * @since 1.138
     */ Modifier public final ReferenceType Set TypeArgument ReferenceType AbstractProject getTransitiveDownstreamProjects ReturnStatement MethodInvocation Hudson MethodInvocation getDependencyGraph MethodInvocation This getTransitiveDownstream getInstance MethodDeclaration /**
     * Gets the dependency relationship map between this project (as the source)
     * and that project (as the sink.)
     *
     * @return
     *      can be empty but not null. build number of this project to the build
     *      numbers of that project.
     */ Modifier public ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType RangeSet getRelationship FormalParameter ReferenceType AbstractProject that LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType RangeSet VariableDeclarator r ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType RangeSet MemberReference REVERSE_INTEGER_COMPARATOR StatementExpression MethodInvocation MemberReference that MemberReference r This MethodInvocation getBuilds checkAndRecord ReturnStatement MemberReference r MethodDeclaration /**
     * Helper method for getDownstreamRelationship.
     *
     * For each given build, find the build number range of the given project and put that into the map.
     */ Modifier private checkAndRecord FormalParameter ReferenceType AbstractProject that FormalParameter ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType RangeSet r FormalParameter ReferenceType Collection TypeArgument ReferenceType R builds ForStatement EnhancedForControl VariableDeclaration ReferenceType R VariableDeclarator build MemberReference builds BlockStatement LocalVariableDeclaration ReferenceType RangeSet VariableDeclarator rs MethodInvocation build MemberReference that getDownstreamRelationship IfStatement BinaryOperation || BinaryOperation == MemberReference rs Literal null MethodInvocation rs isEmpty ContinueStatement End LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation build getNumber LocalVariableDeclaration ReferenceType RangeSet VariableDeclarator value MethodInvocation r MemberReference n get IfStatement BinaryOperation == MemberReference value Literal null StatementExpression MethodInvocation r MemberReference n MemberReference rs put StatementExpression MethodInvocation value MemberReference rs add End End MethodDeclaration /**
     * Builds the dependency graph.
     * @see DependencyGraph
     */ Modifier protected abstract buildDependencyGraph FormalParameter ReferenceType DependencyGraph graph MethodDeclaration Modifier protected ReferenceType SearchIndexBuilder makeSearchIndex LocalVariableDeclaration ReferenceType SearchIndexBuilder VariableDeclarator sib SuperMethodInvocation makeSearchIndex IfStatement BinaryOperation && MethodInvocation isBuildable MethodInvocation Hudson isAdmin StatementExpression MethodInvocation sib Literal ""build"" Literal ""build"" add End ReturnStatement MemberReference sib MethodDeclaration Modifier protected Annotation Override ReferenceType HistoryWidget createHistoryWidget ReturnStatement ClassCreator ReferenceType BuildHistoryWidget TypeArgument ReferenceType R This MethodInvocation getBuilds MemberReference HISTORY_ADAPTER MethodDeclaration Modifier public BasicType boolean isParameterized ReturnStatement BinaryOperation != MethodInvocation ClassReference ReferenceType ParametersDefinitionProperty getProperty Literal null MethodDeclaration /**
     * Schedules a new build command.
     */ Modifier public doBuild FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation BuildAuthorizationToken This MemberReference authToken MemberReference req MemberReference rsp checkPermission LocalVariableDeclaration ReferenceType ParametersDefinitionProperty VariableDeclarator pp MethodInvocation ClassReference ReferenceType ParametersDefinitionProperty getProperty IfStatement BinaryOperation != MemberReference pp Literal null BlockStatement StatementExpression MethodInvocation pp MemberReference req MemberReference rsp _doBuild ReturnStatement End LocalVariableDeclaration ReferenceType Cause VariableDeclarator cause IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference authToken Literal null BinaryOperation != MethodInvocation authToken getToken Literal null BinaryOperation != MethodInvocation req Literal ""token"" getParameter Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator causeText MethodInvocation req Literal ""cause"" getParameter StatementExpression Assignment MemberReference cause ClassCreator ReferenceType RemoteCause MethodInvocation req getRemoteAddr MemberReference causeText = BlockStatement StatementExpression Assignment MemberReference cause ClassCreator ReferenceType UserCause = End LocalVariableDeclaration ReferenceType String VariableDeclarator delay MethodInvocation req Literal ""delay"" getParameter IfStatement BinaryOperation != MemberReference delay Literal null BlockStatement IfStatement MethodInvocation ! isDisabled BlockStatement TryStatement IfStatement MethodInvocation delay Literal ""sec"" endsWith StatementExpression Assignment MemberReference delay MethodInvocation delay Literal 0 BinaryOperation - MethodInvocation delay length Literal 3 substring = End IfStatement MethodInvocation delay Literal ""secs"" endsWith StatementExpression Assignment MemberReference delay MethodInvocation delay Literal 0 BinaryOperation - MethodInvocation delay length Literal 4 substring = End StatementExpression MethodInvocation Hudson MethodInvocation getQueue MethodInvocation This MethodInvocation Integer MemberReference delay parseInt ClassCreator ReferenceType CauseAction MemberReference cause schedule getInstance CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType ServletException BinaryOperation + Literal ""Invalid delay parameter value: "" MemberReference delay End BlockStatement StatementExpression MethodInvocation MemberReference cause scheduleBuild End StatementExpression MethodInvocation rsp MemberReference req forwardToPreviousPage MethodDeclaration /**
     * Supports build trigger with parameters via an HTTP GET or POST.
     * Currently only String parameters are supported.
     */ Modifier public doBuildWithParameters FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression MethodInvocation BuildAuthorizationToken This MemberReference authToken MemberReference req MemberReference rsp checkPermission LocalVariableDeclaration ReferenceType ParametersDefinitionProperty VariableDeclarator pp MethodInvocation ClassReference ReferenceType ParametersDefinitionProperty getProperty IfStatement BinaryOperation != MemberReference pp Literal null BlockStatement StatementExpression MethodInvocation pp MemberReference req MemberReference rsp buildWithParameters ReturnStatement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""This build is not parameterized!"" End MethodDeclaration /**
     * Schedules a new SCM polling command.
     */ Modifier public doPolling FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation BuildAuthorizationToken This MemberReference authToken MemberReference req MemberReference rsp checkPermission StatementExpression MethodInvocation schedulePolling StatementExpression MethodInvocation rsp MemberReference req forwardToPreviousPage MethodDeclaration /**
     * Cancels a scheduled build.
     */ Modifier public doCancelQueue FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference BUILD checkPermission StatementExpression MethodInvocation Hudson MethodInvocation getQueue MethodInvocation This cancel getInstance StatementExpression MethodInvocation rsp MemberReference req forwardToPreviousPage MethodDeclaration Modifier protected Annotation Override submit FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException FormException StatementExpression SuperMethodInvocation MemberReference req MemberReference rsp submit StatementExpression MethodInvocation BinaryOperation != MethodInvocation req Literal ""disable"" getParameter Literal null makeDisabled StatementExpression Assignment MemberReference jdk MethodInvocation req Literal ""jdk"" getParameter = IfStatement BinaryOperation != MethodInvocation req Literal ""hasCustomQuietPeriod"" getParameter Literal null BlockStatement StatementExpression Assignment MemberReference quietPeriod MethodInvocation Integer MethodInvocation req Literal ""quiet_period"" getParameter parseInt = BlockStatement StatementExpression Assignment MemberReference quietPeriod Literal null = End IfStatement BinaryOperation != MethodInvocation req Literal ""hasSlaveAffinity"" getParameter Literal null BlockStatement StatementExpression Assignment MemberReference canRoam Literal false = StatementExpression Assignment MemberReference assignedNode MethodInvocation req Literal ""slave"" getParameter = IfStatement BinaryOperation != MemberReference assignedNode Literal null BlockStatement IfStatement MethodInvocation Hudson MethodInvocation MemberReference assignedNode getLabel MethodInvocation isEmpty getInstance StatementExpression Assignment MemberReference assignedNode Literal null = End End BlockStatement StatementExpression Assignment MemberReference canRoam Literal true = StatementExpression Assignment MemberReference assignedNode Literal null = End StatementExpression Assignment MemberReference authToken MethodInvocation BuildAuthorizationToken MemberReference req create = StatementExpression MethodInvocation MethodInvocation SCMS MemberReference req This parseSCM setScm ForStatement EnhancedForControl VariableDeclaration ReferenceType Trigger VariableDeclarator t MemberReference triggers StatementExpression MethodInvocation t stop End StatementExpression Assignment MemberReference triggers MethodInvocation MemberReference req MethodInvocation Trigger This for_ buildDescribable = ForStatement EnhancedForControl VariableDeclaration ReferenceType Trigger VariableDeclarator t MemberReference triggers StatementExpression MethodInvocation t This Literal true start End StatementExpression MethodInvocation updateTransientActions MethodDeclaration /**
     * @deprecated
     *      As of 1.261. Use {@link #buildDescribable(StaplerRequest, List)} instead.
     */ Modifier final protected TypeParameter T ReferenceType Describable TypeArgument ReferenceType T ReferenceType List TypeArgument ReferenceType T buildDescribable FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType T extends descriptors FormalParameter ReferenceType String prefix FormException ServletException ReturnStatement MethodInvocation MemberReference req MemberReference descriptors buildDescribable MethodDeclaration Modifier final protected TypeParameter T ReferenceType Describable TypeArgument ReferenceType T ReferenceType List TypeArgument ReferenceType T buildDescribable FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType T extends descriptors FormException ServletException LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator data MethodInvocation req getSubmittedForm LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator r ClassCreator ReferenceType Vector TypeArgument ReferenceType T ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType T VariableDeclarator d MemberReference descriptors BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation d getJsonSafeClassName IfStatement BinaryOperation != MethodInvocation req MemberReference name getParameter Literal null BlockStatement LocalVariableDeclaration ReferenceType T VariableDeclarator instance MethodInvocation d MemberReference req MethodInvocation data MemberReference name getJSONObject newInstance StatementExpression MethodInvocation r MemberReference instance add End End ReturnStatement MemberReference r MethodDeclaration /**
     * Serves the workspace files.
     */ Modifier public doWs FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException InterruptedException StatementExpression MethodInvocation MemberReference AbstractProject WORKSPACE checkPermission LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation getWorkspace IfStatement BinaryOperation || BinaryOperation == MemberReference ws Literal null MethodInvocation ws exists BlockStatement StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""noWorkspace.jelly"" getView BlockStatement StatementExpression ClassCreator MethodInvocation MemberReference req MemberReference rsp MemberReference ws Literal ""folder.gif"" Literal true serveFile ReferenceType DirectoryBrowserSupport This BinaryOperation + MethodInvocation getDisplayName Literal "" workspace"" End MethodDeclaration /**
     * Wipes out the workspace.
     */ Modifier public doDoWipeOutWorkspace FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException InterruptedException StatementExpression MethodInvocation MemberReference BUILD checkPermission IfStatement MethodInvocation MethodInvocation This MethodInvocation getWorkspace Literal null processWorkspaceBeforeDeletion getScm BlockStatement StatementExpression MethodInvocation MethodInvocation deleteRecursive getWorkspace StatementExpression MethodInvocation rsp Literal ""."" sendRedirect2 BlockStatement StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""wipeOutWorkspaceBlocked.jelly"" getView End MethodDeclaration Modifier public doDisable FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation requirePOST StatementExpression MethodInvocation MemberReference CONFIGURE checkPermission StatementExpression MethodInvocation Literal true makeDisabled StatementExpression MethodInvocation rsp Literal ""."" sendRedirect2 MethodDeclaration Modifier public doEnable FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference CONFIGURE checkPermission StatementExpression MethodInvocation Literal false makeDisabled StatementExpression MethodInvocation rsp Literal ""."" sendRedirect2 MethodDeclaration /**
     * RSS feed for changes in this project.
     */ Modifier public doRssChangelog FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException ClassDeclaration FeedItem FieldDeclaration ReferenceType ChangeLogSet ReferenceType Entry VariableDeclarator e FieldDeclaration BasicType int VariableDeclarator idx ConstructorDeclaration Modifier public FeedItem FormalParameter ReferenceType Entry e FormalParameter BasicType int idx StatementExpression Assignment This MemberReference e MemberReference e = StatementExpression Assignment This MemberReference idx MemberReference idx = MethodDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? getBuild ReturnStatement MethodInvocation e MemberReference build getParent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType FeedItem VariableDeclarator entries ClassCreator ReferenceType ArrayList TypeArgument ReferenceType FeedItem ForStatement ForControl VariableDeclaration ReferenceType R VariableDeclarator r MethodInvocation getLastBuild BinaryOperation != MemberReference r Literal null Assignment MemberReference r MethodInvocation r getPreviousBuild = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator idx Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ChangeLogSet ReferenceType Entry VariableDeclarator e MethodInvocation r getChangeSet StatementExpression MethodInvocation entries ClassCreator ReferenceType FeedItem MemberReference e MemberReference ++ idx add End End StatementExpression MethodInvocation RSS BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getDisplayName Literal ' ' MethodInvocation MethodInvocation getDescriptor MethodInvocation getDisplayName getScm Literal "" changes"" BinaryOperation + MethodInvocation getUrl Literal ""changes"" MemberReference entries ClassCreator ReferenceType FeedAdapter TypeArgument ReferenceType FeedItem MethodDeclaration Modifier public ReferenceType String getEntryTitle FormalParameter ReferenceType FeedItem item ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""#"" MethodInvocation item MemberReference number getBuild Literal ' ' MethodInvocation item.e getMsg Literal "" ("" MethodInvocation item.e getAuthor Literal "")"" MethodDeclaration Modifier public ReferenceType String getEntryUrl FormalParameter ReferenceType FeedItem item ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation item MethodInvocation getUrl getBuild Literal ""changes#detail"" MemberReference item idx MethodDeclaration Modifier public ReferenceType String getEntryID FormalParameter ReferenceType FeedItem item ReturnStatement MethodInvocation MemberReference item getEntryUrl MethodDeclaration Modifier public ReferenceType String getEntryDescription FormalParameter ReferenceType FeedItem item LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation item.e getAffectedPaths StatementExpression MethodInvocation buf MethodInvocation Literal '\n' append MemberReference path append End ReturnStatement MethodInvocation buf toString MethodDeclaration Modifier public ReferenceType Calendar getEntryTimestamp FormalParameter ReferenceType FeedItem item ReturnStatement MethodInvocation item MethodInvocation getTimestamp getBuild MethodDeclaration Modifier public ReferenceType String getEntryAuthor FormalParameter ReferenceType FeedItem entry ReturnStatement MethodInvocation Mailer MethodInvocation getAdminAddress descriptor MemberReference req MemberReference rsp forwardToRss ClassDeclaration Modifier public static abstract /**
     * {@link AbstractProject} subtypes should implement this base class as a descriptor.
     *
     * @since 1.294
     */ AbstractProjectDescriptor MethodDeclaration /**
         * {@link AbstractProject} subtypes can override this method to veto some {@link Descriptor}s
         * from showing up on their configuration screen. This is often useful when you are building
         * a workflow/company specific project type, where you want to limit the number of choices
         * given to the users.
         *
         * <p>
         * Some {@link Descriptor}s define their own schemes for controlling applicability
         * (such as {@link BuildStepDescriptor#isApplicable(Class)}),
         * This method works like AND in conjunction with them;
         * Both this method and that method need to return true in order for a given {@link Descriptor}
         * to show up for the given {@link Project}.
         *
         * <p>
         * The default implementation returns true for everything.
         *
         * @see BuildStepDescriptor#isApplicable(Class) 
         * @see BuildWrapperDescriptor#isApplicable(AbstractProject) 
         * @see TriggerDescriptor#isApplicable(Item)
         */ Modifier public Annotation Override BasicType boolean isApplicable FormalParameter ReferenceType Descriptor descriptor ReturnStatement Literal true ReferenceType TopLevelItemDescriptor MethodDeclaration /**
     * Finds a {@link AbstractProject} that has the name closest to the given name.
     */ Modifier public static ReferenceType AbstractProject findNearest FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator projects MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AbstractProject getItems getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator names ArrayCreator ReferenceType String MethodInvocation projects size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation projects size MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i names MethodInvocation projects MethodInvocation getName MemberReference i get = End LocalVariableDeclaration ReferenceType String VariableDeclarator nearest MethodInvocation EditDistance MemberReference name MemberReference names findNearest ReturnStatement Cast ReferenceType AbstractProject MethodInvocation Hudson MethodInvocation MemberReference nearest getItem getInstance FieldDeclaration Modifier private final static ReferenceType Comparator TypeArgument ReferenceType Integer VariableDeclarator REVERSE_INTEGER_COMPARATOR ClassCreator ReferenceType Comparator TypeArgument ReferenceType Integer MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Integer o1 FormalParameter ReferenceType Integer o2 ReturnStatement BinaryOperation - MemberReference o2 MemberReference o1 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType AbstractProject getLogger FieldDeclaration /**
     * Permission to abort a build. For now, let's make it the same as {@link #BUILD}
     */ Modifier public final static ReferenceType Permission VariableDeclarator ABORT MemberReference BUILD TypeParameter P ReferenceType AbstractProject TypeArgument ReferenceType P TypeArgument ReferenceType R TypeParameter R ReferenceType AbstractBuild TypeArgument ReferenceType P TypeArgument ReferenceType R ReferenceType Job TypeArgument ReferenceType P TypeArgument ReferenceType R ReferenceType BuildableItem",1
231,231,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.AuthenticationManager Import org.acegisecurity.Authentication Import org.acegisecurity.AuthenticationException Import org.springframework.web.context.WebApplicationContext Import org.kohsuke.stapler.StaplerRequest Import groovy.lang.Binding Import hudson.model.Descriptor Import hudson.util.spring.BeanBuilder Import hudson.Extension Import net.sf.json.JSONObject Import javax.servlet.Filter Import javax.servlet.FilterConfig ClassDeclaration Modifier public final /**
 * {@link SecurityRealm} that accepts {@link ContainerAuthentication} object
 * without any check (that is, by assuming that the such token is
 * already authenticated by the container.)
 * 
 * @author Kohsuke Kawaguchi
 */ LegacySecurityRealm MethodDeclaration Modifier public ReferenceType SecurityComponents createSecurityComponents ReturnStatement ClassCreator ReferenceType SecurityComponents This MethodDeclaration Modifier public ReferenceType Authentication authenticate FormalParameter ReferenceType Authentication authentication AuthenticationException IfStatement BinaryOperation instanceof MemberReference authentication ReferenceType ContainerAuthentication ReturnStatement MemberReference authentication ReturnStatement Literal null End MethodDeclaration /**
     * To have the username/password authenticated by the container,
     * submit the form to the URL defined by the servlet spec.
     */ Modifier public Annotation Override ReferenceType String getAuthenticationGatewayUrl ReturnStatement Literal ""j_security_check"" MethodDeclaration Modifier public Annotation Override ReferenceType String getLoginUrl ReturnStatement Literal ""loginEntry"" MethodDeclaration /**
     * Filter to run for the LegacySecurityRealm is the
     * ChainServletFilter legacy from /WEB-INF/security/SecurityFilters.groovy.
     */ Modifier public Annotation Override ReferenceType Filter createFilter FormalParameter ReferenceType FilterConfig filterConfig LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding ClassCreator ReferenceType Binding LocalVariableDeclaration ReferenceType SecurityComponents VariableDeclarator sc This MethodInvocation createSecurityComponents StatementExpression MethodInvocation binding Literal ""securityComponents"" MemberReference sc setVariable LocalVariableDeclaration ReferenceType BeanBuilder VariableDeclarator builder ClassCreator ReferenceType BeanBuilder StatementExpression MethodInvocation builder MethodInvocation filterConfig MethodInvocation Literal ""/WEB-INF/security/SecurityFilters.groovy"" getResourceAsStream getServletContext MemberReference binding parse LocalVariableDeclaration ReferenceType WebApplicationContext VariableDeclarator context MethodInvocation builder createApplicationContext ReturnStatement Cast ReferenceType Filter MethodInvocation context Literal ""legacy"" getBean FieldDeclaration Modifier public final static Annotation Extension ReferenceType Descriptor TypeArgument ReferenceType SecurityRealm VariableDeclarator DESCRIPTOR ClassCreator ReferenceType Descriptor TypeArgument ReferenceType SecurityRealm MethodDeclaration Modifier public ReferenceType SecurityRealm newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType LegacySecurityRealm MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages LegacySecurityRealm_Displayname MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/security/container-realm.html"" ReferenceType SecurityRealm ReferenceType AuthenticationManager",0
226,226,CompilationUnit PackageDeclaration hudson.views Import hudson.Extension Import hudson.model.Descriptor Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public JobColumn MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType ListViewColumn newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType JobColumn MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages JobColumn_DisplayName ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn ReferenceType ListViewColumn,1
45,45,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.maven.MavenBuild Import hudson.maven.AggregatableAction Import hudson.maven.MavenAggregatedReport Import hudson.maven.MavenModuleSetBuild Import hudson.maven.MavenModule Import hudson.model.BuildListener Import hudson.model.Action Import hudson.tasks.junit.TestResult Import hudson.tasks.junit.TestResultAction Import java.util.List Import java.util.Map ClassDeclaration Modifier public /**
 * {@link Action} that displays surefire test result.
 * @author Kohsuke Kawaguchi
 */ SurefireReport ConstructorDeclaration SurefireReport FormalParameter ReferenceType MavenBuild build FormalParameter ReferenceType TestResult result FormalParameter ReferenceType BuildListener listener StatementExpression SuperConstructorInvocation MemberReference build MemberReference result MemberReference listener MethodDeclaration Modifier public ReferenceType MavenAggregatedReport createAggregatedAction FormalParameter ReferenceType MavenModuleSetBuild build FormalParameter ReferenceType Map TypeArgument ReferenceType MavenModule TypeArgument ReferenceType List TypeArgument ReferenceType MavenBuild moduleBuilds ReturnStatement ClassCreator ReferenceType SurefireAggregatedReport MemberReference build ReferenceType TestResultAction ReferenceType AggregatableAction",0
254,254,"CompilationUnit PackageDeclaration hudson.remoting Import java.lang.ref.WeakReference Import java.util.HashMap Import java.util.Map Import java.util.WeakHashMap ClassDeclaration Modifier final /**
 * Manages unique ID for classloaders.
 *
 * @author Kohsuke Kawaguchi
 */ ExportedClassLoaderTable FieldDeclaration Modifier private final ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType WeakReference TypeArgument ReferenceType ClassLoader VariableDeclarator table ClassCreator ReferenceType HashMap TypeArgument ReferenceType Integer TypeArgument ReferenceType WeakReference TypeArgument ReferenceType ClassLoader FieldDeclaration Modifier private final ReferenceType WeakHashMap TypeArgument ReferenceType ClassLoader TypeArgument ReferenceType Integer VariableDeclarator reverse ClassCreator ReferenceType WeakHashMap TypeArgument ReferenceType ClassLoader TypeArgument ReferenceType Integer FieldDeclaration Modifier private BasicType int VariableDeclarator iota Literal 1 MethodDeclaration Modifier public synchronized BasicType int intern FormalParameter ReferenceType ClassLoader cl IfStatement BinaryOperation == MemberReference cl Literal null ReturnStatement Literal 0 End LocalVariableDeclaration ReferenceType Integer VariableDeclarator id MethodInvocation reverse MemberReference cl get IfStatement BinaryOperation == MemberReference id Literal null BlockStatement StatementExpression Assignment MemberReference id MemberReference ++ iota = StatementExpression MethodInvocation table MemberReference id ClassCreator ReferenceType WeakReference TypeArgument ReferenceType ClassLoader MemberReference cl put StatementExpression MethodInvocation reverse MemberReference cl MemberReference id put End ReturnStatement MemberReference id MethodDeclaration Modifier public synchronized ReferenceType ClassLoader get FormalParameter BasicType int id LocalVariableDeclaration ReferenceType WeakReference TypeArgument ReferenceType ClassLoader VariableDeclarator ref MethodInvocation table MemberReference id get IfStatement BinaryOperation == MemberReference ref Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation ref get",0
562,562,,1
422,422,,0
528,528,,0
333,333,"CompilationUnit PackageDeclaration hudson.cli Import hudson.ExtensionPoint Import hudson.Extension Import hudson.ExtensionList Import hudson.AbortException Import hudson.remoting.Channel Import hudson.remoting.Callable Import hudson.model.Hudson Import org.kohsuke.args4j.CmdLineParser Import org.kohsuke.args4j.CmdLineException Import java.io.PrintStream Import java.io.InputStream Import java.io.BufferedInputStream Import java.util.List Import java.util.Locale ClassDeclaration Modifier public abstract /**
 * Base class for Hudson CLI.
 *
 * <h2>How does a CLI command work</h2>
 * <p>
 * The users starts {@linkplain CLI the ""CLI agent""} on a remote system, by specifying arguments, like
 * <tt>""java -jar hudson-cli.jar command arg1 arg2 arg3""</tt>. The CLI agent creates
 * a remoting channel with the server, and it sends the entire arguments to the server, along with
 * the remoted stdin/out/err.
 *
 * <p>
 * The Hudson master then picks the right {@link CLICommand} to execute, clone it, and
 * calls {@link #main(List, InputStream, PrintStream, PrintStream)} method.
 *
 * <h2>Note for CLI command implementor</h2>
 * <ul>
 * <li>
 * Put {@link Extension} on your implementation to have it discovered by Hudson.
 *
 * <li>
 * Use <a href=""http://args4j.dev.java.net/"">args4j</a> annotation on your implementation to define
 * options and arguments (however, if you don't like that, you could override
 * the {@link #main(List, InputStream, PrintStream, PrintStream)} method directly.
 *
 * <li>
 * stdin, stdout, stderr are remoted, so proper buffering is necessary for good user experience.
 *
 * <li>
 * Send {@link Callable} to a CLI agent by using {@link #channel} to get local interaction,
 * such as uploading a file, asking for a password, etc.
 *
 * </ul>
 *
 * @author Kohsuke Kawaguchi
 * @since 1.302
 */ CLICommand FieldDeclaration /**
     * Connected to stdout and stderr of the CLI agent that initiated the session.
     * IOW, if you write to these streams, the person who launched the CLI command
     * will see the messages in his terminal.
     *
     * <p>
     * (In contrast, calling {@code System.out.println(...)} would print out
     * the message to the server log file, which is probably not what you want.
     */ Modifier protected transient ReferenceType PrintStream VariableDeclarator stdout VariableDeclarator stderr FieldDeclaration /**
     * Connected to stdin of the CLI agent.
     *
     * <p>
     * This input stream is buffered to hide the latency in the remoting.
     */ Modifier protected transient ReferenceType InputStream VariableDeclarator stdin FieldDeclaration /**
     * {@link Channel} that represents the CLI JVM. You can use this to
     * execute {@link Callable} on the CLI JVM, among other things.
     */ Modifier protected transient ReferenceType Channel VariableDeclarator channel MethodDeclaration /**
     * Gets the command name.
     *
     * <p>
     * For example, if the CLI is invoked as <tt>java -jar cli.jar foo arg1 arg2 arg4</tt>,
     * on the server side {@link CLICommand} that returns ""foo"" from {@link #getName()}
     * will be invoked.
     *
     * <p>
     * By default, this method creates ""foo-bar-zot"" from ""FooBarZotCommand"".
     */ Modifier public ReferenceType String getName LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation getName getClass StatementExpression Assignment MemberReference name MethodInvocation name BinaryOperation + MethodInvocation name Literal '.' lastIndexOf Literal 1 substring = IfStatement MethodInvocation name Literal ""Command"" endsWith StatementExpression Assignment MemberReference name MethodInvocation name Literal 0 BinaryOperation - MethodInvocation name length Literal 7 substring = End ReturnStatement MethodInvocation name MethodInvocation MemberReference Locale ENGLISH toLowerCase Literal ""([a-z0-9])([A-Z])"" Literal ""$1-$2"" replaceAll MethodDeclaration /**
     * Gets the quick summary of what this command does.
     * Used by the help command to generate the list of commands.
     */ Modifier public abstract ReferenceType String getShortDescription MethodDeclaration Modifier public BasicType int main FormalParameter ReferenceType List TypeArgument ReferenceType String args FormalParameter ReferenceType InputStream stdin FormalParameter ReferenceType PrintStream stdout FormalParameter ReferenceType PrintStream stderr StatementExpression Assignment This MemberReference stdin ClassCreator ReferenceType BufferedInputStream MemberReference stdin = StatementExpression Assignment This MemberReference stdout MemberReference stdout = StatementExpression Assignment This MemberReference stderr MemberReference stderr = StatementExpression Assignment This MemberReference channel MethodInvocation Channel current = LocalVariableDeclaration ReferenceType CmdLineParser VariableDeclarator p ClassCreator ReferenceType CmdLineParser This TryStatement StatementExpression MethodInvocation p MethodInvocation args ArrayCreator ReferenceType String MethodInvocation args size toArray parseArgument ReturnStatement MethodInvocation run CatchClause CatchClauseParameter CmdLineException e StatementExpression MethodInvocation stderr MethodInvocation e getMessage println StatementExpression MethodInvocation MemberReference stderr MemberReference p printUsage ReturnStatement Literal - 1 CatchClause CatchClauseParameter AbortException e StatementExpression MethodInvocation stderr MethodInvocation e getMessage println ReturnStatement Literal - 1 CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e MemberReference stderr printStackTrace ReturnStatement Literal - 1 MethodDeclaration /**
     * Executes the command, and return the exit code.
     *
     * @return
     *      0 to indicate a success, otherwise an error code.
     * @throws AbortException
     *      If the processing should be aborted. Hudson will report the error message
     *      without stack trace, and then exits this command.
     * @throws Exception
     *      All the other exceptions cause the stack trace to be dumped, and then
     *      the command exits with an error code.
     */ Modifier protected abstract BasicType int run Exception MethodDeclaration Modifier protected printUsage FormalParameter ReferenceType PrintStream stderr FormalParameter ReferenceType CmdLineParser p StatementExpression MethodInvocation stderr BinaryOperation + BinaryOperation + Literal ""java -jar hudson-cli.jar "" MethodInvocation getName Literal "" args..."" println StatementExpression MethodInvocation p MemberReference stderr printUsage MethodDeclaration /**
     * Returns all the registered {@link CLICommand}s.
     */ Modifier public static ReferenceType ExtensionList TypeArgument ReferenceType CLICommand all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType CLICommand getExtensionList getInstance MethodDeclaration /**
     * Obtains a copy of the command for invocation.
     */ Modifier public static ReferenceType CLICommand clone FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType CLICommand VariableDeclarator cmd MethodInvocation all BlockStatement IfStatement MethodInvocation name MethodInvocation cmd getName equals BlockStatement TryStatement ReturnStatement MethodInvocation cmd MethodInvocation newInstance getClass CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e CatchClause CatchClauseParameter InstantiationException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e End End ReturnStatement Literal null ReferenceType ExtensionPoint ReferenceType Cloneable",1
59,59,"CompilationUnit PackageDeclaration hudson.model ClassDeclaration Modifier public abstract /**
 * {@link Descriptor} for {@link UserProperty}.
 * 
 * @author Kohsuke Kawaguchi
 */ UserPropertyDescriptor ConstructorDeclaration Modifier protected UserPropertyDescriptor FormalParameter ReferenceType Class TypeArgument ReferenceType UserProperty extends clazz StatementExpression SuperConstructorInvocation MemberReference clazz ConstructorDeclaration Modifier protected /**
     * Infers the type of the corresponding {@link Describable} from the outer class.
     * This version works when you follow the common convention, where a descriptor
     * is written as the static nested class of the describable class.
     *
     * @since 1.278
     */ UserPropertyDescriptor MethodDeclaration /**
     * Creates a default instance of {@link UserProperty} to be associated
     * with {@link User} object that wasn't created from a persisted XML data.
     *
     * <p>
     * See {@link User} class javadoc for more details about the life cycle
     * of {@link User} and when this method is invoked.
     *
     * @return null
     *      if the implementation choose not to add any property object for such user.
     */ Modifier public abstract ReferenceType UserProperty newInstance FormalParameter ReferenceType User user MethodDeclaration /**
     * Whether or not the described property is enabled in the current context.
     * Defaults to true.  Over-ride in sub-classes as required.
     *
     * <p>
     * Returning false from this method essentially has the same effect of
     * making Hudson behaves as if this {@link UserPropertyDescriptor} is
     * not a part of {@link UserProperty#all()}.
     *
     * <p>
     * This mechanism is useful if the availability of the property is
     * contingent of some other settings. 
     */ Modifier public BasicType boolean isEnabled ReturnStatement Literal true ReferenceType Descriptor TypeArgument ReferenceType UserProperty",1
261,261,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.Util Import hudson.Extension Import hudson.maven.MavenBuild Import hudson.maven.MavenBuildProxy Import hudson.maven.MavenBuildProxy.BuildCallable Import hudson.maven.MavenBuilder Import hudson.maven.MavenModule Import hudson.maven.MavenReporter Import hudson.maven.MavenReporterDescriptor Import hudson.maven.MojoInfo Import hudson.model.Action Import hudson.model.BuildListener Import hudson.model.Result Import hudson.tasks.junit.TestResult Import hudson.tasks.test.TestResultProjectAction Import org.apache.maven.plugin.MojoFailureException Import org.apache.maven.project.MavenProject Import org.apache.tools.ant.DirectoryScanner Import org.apache.tools.ant.types.FileSet Import org.codehaus.plexus.component.configurator.ComponentConfigurationException Import org.codehaus.plexus.configuration.xml.XmlPlexusConfiguration Import java.io.File Import java.io.IOException ClassDeclaration Modifier public /**
 * Records the surefire test result.
 * @author Kohsuke Kawaguchi
 */ SurefireArchiver FieldDeclaration Modifier private ReferenceType TestResult VariableDeclarator result MethodDeclaration Modifier public BasicType boolean preExecute FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType MojoInfo mojo FormalParameter ReferenceType BuildListener listener InterruptedException IOException IfStatement MethodInvocation MemberReference mojo isSurefireTest BlockStatement LocalVariableDeclaration ReferenceType XmlPlexusConfiguration VariableDeclarator c Cast ReferenceType XmlPlexusConfiguration MethodInvocation mojo.configuration Literal ""testFailureIgnore"" getChild IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference c Literal null MethodInvocation c MethodInvocation Literal ""${maven.test.failure.ignore}"" equals getValue BinaryOperation == MethodInvocation System Literal ""maven.test.failure.ignore"" getProperty Literal null StatementExpression MethodInvocation c Literal ""true"" setValue End End ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean postExecute FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType MojoInfo mojo FormalParameter Modifier final ReferenceType BuildListener listener FormalParameter ReferenceType Throwable error InterruptedException IOException IfStatement MethodInvocation ! MemberReference mojo isSurefireTest ReturnStatement Literal true End StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages SurefireArchiver_Recording println getLogger LocalVariableDeclaration ReferenceType File VariableDeclarator reportsDir TryStatement StatementExpression Assignment MemberReference reportsDir MethodInvocation mojo Literal ""reportsDirectory"" ClassReference ReferenceType File getConfigurationValue = CatchClause CatchClauseParameter ComponentConfigurationException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages SurefireArchiver_NoReportsDir fatalError printStackTrace StatementExpression MethodInvocation build MemberReference Result FAILURE setResult ReturnStatement Literal true IfStatement MethodInvocation reportsDir exists BlockStatement LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs MethodInvocation Util MemberReference reportsDir Literal ""*.xml"" Literal ""testng-results.xml,testng-failed.xml"" createFileSet LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs getDirectoryScanner IfStatement BinaryOperation == MethodInvocation ds MemberReference length getIncludedFiles Literal 0 ReturnStatement Literal true End IfStatement BinaryOperation == MemberReference result Literal null BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator t BinaryOperation - MethodInvocation System currentTimeMillis MethodInvocation build getMilliSecsSinceBuildStart StatementExpression Assignment MemberReference result ClassCreator ReferenceType TestResult BinaryOperation - MemberReference t Literal 1000 MemberReference ds = StatementExpression MethodInvocation result BinaryOperation - MethodInvocation build MethodInvocation getTimeInMillis getTimestamp Literal 1000 MemberReference ds parse End LocalVariableDeclaration BasicType int VariableDeclarator failCount MethodInvocation build ClassCreator ReferenceType BuildCallable TypeArgument ReferenceType Integer TypeArgument ReferenceType IOException MethodDeclaration Modifier public ReferenceType Integer call FormalParameter ReferenceType MavenBuild build IOException InterruptedException LocalVariableDeclaration ReferenceType SurefireReport VariableDeclarator sr MethodInvocation build ClassReference ReferenceType SurefireReport getAction IfStatement BinaryOperation == MemberReference sr Literal null StatementExpression MethodInvocation build MethodInvocation ClassCreator ReferenceType SurefireReport MemberReference build MemberReference result MemberReference listener add getActions StatementExpression MethodInvocation sr MemberReference result MemberReference listener setResult End IfStatement BinaryOperation > MethodInvocation result getFailCount Literal 0 StatementExpression MethodInvocation build MemberReference Result UNSTABLE setResult End StatementExpression MethodInvocation build This SurefireArchiver registerAsProjectAction ReturnStatement MethodInvocation result getFailCount execute IfStatement BinaryOperation && BinaryOperation > MemberReference failCount Literal 0 BinaryOperation instanceof MemberReference error ReferenceType MojoFailureException BlockStatement StatementExpression Assignment MemberReference MavenBuilder markAsSuccess Literal true = End End ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType Action getProjectAction FormalParameter ReferenceType MavenModule module ReturnStatement ClassCreator ReferenceType TestResultProjectAction MemberReference module MethodDeclaration Modifier private BasicType boolean isSurefireTest FormalParameter ReferenceType MojoInfo mojo IfStatement MethodInvocation ! mojo Literal ""org.apache.maven.plugins"" Literal ""maven-surefire-plugin"" Literal ""test"" is ReturnStatement Literal false End TryStatement LocalVariableDeclaration ReferenceType Boolean VariableDeclarator skip MethodInvocation mojo Literal ""skip"" ClassReference ReferenceType Boolean getConfigurationValue IfStatement BinaryOperation && BinaryOperation != MemberReference skip Literal null MemberReference skip BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation >= MethodInvocation mojo.pluginName.version Literal ""2.3"" compareTo Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Boolean VariableDeclarator skipExec MethodInvocation mojo Literal ""skipExec"" ClassReference ReferenceType Boolean getConfigurationValue IfStatement BinaryOperation && BinaryOperation != MemberReference skipExec Literal null MemberReference skipExec BlockStatement ReturnStatement Literal false End End IfStatement BinaryOperation >= MethodInvocation mojo.pluginName.version Literal ""2.4"" compareTo Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Boolean VariableDeclarator skipTests MethodInvocation mojo Literal ""skipTests"" ClassReference ReferenceType Boolean getConfigurationValue IfStatement BinaryOperation && BinaryOperation != MemberReference skipTests Literal null MemberReference skipTests BlockStatement ReturnStatement Literal false End End CatchClause CatchClauseParameter ComponentConfigurationException e ReturnStatement Literal false ReturnStatement Literal true ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages SurefireArchiver_DisplayName MethodDeclaration Modifier public ReferenceType SurefireArchiver newAutoInstance FormalParameter ReferenceType MavenModule module ReturnStatement ClassCreator ReferenceType SurefireArchiver ReferenceType MavenReporterDescriptor FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType MavenReporter",0
98,98,"CompilationUnit PackageDeclaration hudson.util Import com.thoughtworks.xstream.converters.Converter Import com.thoughtworks.xstream.converters.MarshallingContext Import com.thoughtworks.xstream.converters.UnmarshallingContext Import com.thoughtworks.xstream.io.HierarchicalStreamReader Import com.thoughtworks.xstream.io.HierarchicalStreamWriter Import com.trilead.ssh2.crypto.Base64 Import hudson.model.Hudson Import hudson.Util Import javax.crypto.SecretKey Import javax.crypto.Cipher Import java.io.UnsupportedEncodingException Import java.io.IOException Import java.security.GeneralSecurityException ClassDeclaration Modifier public final /**
 * Glorified {@link String} that uses encryption in the persisted form, to avoid accidental exposure of a secret.
 *
 * <p>
 * Note that since the cryptography relies on {@link Hudson#getSecretKey()}, this is not meant as a protection
 * against code running in the same VM, nor against an attacker who has local file system access. 
 *
 * @author Kohsuke Kawaguchi
 */ Secret FieldDeclaration /**
     * Unencrypted secret text.
     */ Modifier private final ReferenceType String VariableDeclarator value ConstructorDeclaration Modifier private Secret FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference value MemberReference value = MethodDeclaration /**
     * Obtains the secret in a plain text.
     *
     * @see #getEncryptedValue()
     */ Modifier public ReferenceType String toString ReturnStatement MemberReference value MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object that ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference that ReferenceType Secret MethodInvocation value Cast ReferenceType Secret MemberReference that equals MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation value hashCode MethodDeclaration /**
     * Turns {@link Hudson#getSecretKey()} into an AES key. 
     */ Modifier private static ReferenceType SecretKey getKey UnsupportedEncodingException GeneralSecurityException LocalVariableDeclaration ReferenceType String VariableDeclarator secret MemberReference SECRET IfStatement BinaryOperation == MemberReference secret Literal null ReturnStatement MethodInvocation Hudson MethodInvocation getSecretKeyAsAES128 getInstance End ReturnStatement MethodInvocation Util MemberReference secret toAes128Key MethodDeclaration /**
     * Encrypts {@link #value} and returns it in an encoded printable form.
     *
     * @see #toString() 
     */ Modifier public ReferenceType String getEncryptedValue TryStatement LocalVariableDeclaration ReferenceType Cipher VariableDeclarator cipher MethodInvocation Cipher Literal ""AES"" getInstance StatementExpression MethodInvocation cipher MemberReference Cipher ENCRYPT_MODE MethodInvocation getKey init ReturnStatement ClassCreator ReferenceType String MethodInvocation Base64 MethodInvocation cipher BinaryOperation + MemberReference value MemberReference MAGIC doFinal encode CatchClause CatchClauseParameter GeneralSecurityException e ThrowStatement ClassCreator ReferenceType Error MemberReference e CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType Error MemberReference e MethodDeclaration /**
     * Reverse operation of {@link #getEncryptedValue()}. Returns null
     * if the given cipher text was invalid.
     */ Modifier public static ReferenceType Secret decrypt FormalParameter ReferenceType String data IfStatement BinaryOperation == MemberReference data Literal null ReturnStatement Literal null End TryStatement LocalVariableDeclaration ReferenceType Cipher VariableDeclarator cipher MethodInvocation Cipher Literal ""AES"" getInstance StatementExpression MethodInvocation cipher MemberReference Cipher DECRYPT_MODE MethodInvocation getKey init LocalVariableDeclaration ReferenceType String VariableDeclarator plainText ClassCreator ReferenceType String MethodInvocation cipher MethodInvocation Base64 MethodInvocation data toCharArray decode doFinal Literal ""UTF-8"" IfStatement MethodInvocation plainText MemberReference MAGIC endsWith ReturnStatement ClassCreator ReferenceType Secret MethodInvocation plainText Literal 0 BinaryOperation - MethodInvocation plainText length MethodInvocation MAGIC length substring End ReturnStatement Literal null CatchClause CatchClauseParameter GeneralSecurityException e ReturnStatement Literal null CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType Error MemberReference e CatchClause CatchClauseParameter IOException e ReturnStatement Literal null MethodDeclaration /**
     * Attempts to treat the given string first as a cipher text, and if it doesn't work,
     * treat the given string as the unencrypted secret value.
     *
     * <p>
     * Useful for recovering a value from a form field.
     *
     * @return never null
     */ Modifier public static ReferenceType Secret fromString FormalParameter ReferenceType String data LocalVariableDeclaration ReferenceType Secret VariableDeclarator s MethodInvocation MemberReference data decrypt IfStatement BinaryOperation == MemberReference s Literal null StatementExpression Assignment MemberReference s ClassCreator ReferenceType Secret MemberReference data = End ReturnStatement MemberReference s ClassDeclaration Modifier public final static ConverterImpl ConstructorDeclaration Modifier public ConverterImpl MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class type ReturnStatement BinaryOperation == MemberReference type ClassReference ReferenceType Secret MethodDeclaration Modifier public marshal FormalParameter ReferenceType Object source FormalParameter ReferenceType HierarchicalStreamWriter writer FormalParameter ReferenceType MarshallingContext context LocalVariableDeclaration ReferenceType Secret VariableDeclarator src Cast ReferenceType Secret MemberReference source StatementExpression MethodInvocation writer MethodInvocation src getEncryptedValue setValue MethodDeclaration Modifier public ReferenceType Object unmarshal FormalParameter ReferenceType HierarchicalStreamReader reader FormalParameter Modifier final ReferenceType UnmarshallingContext context ReturnStatement MethodInvocation Secret MethodInvocation reader getValue decrypt ReferenceType Converter FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator MAGIC Literal ""::::MAGIC::::"" FieldDeclaration /**
     * For testing only. Override the secret key so that we can test this class without {@link Hudson}.
     */ Modifier static ReferenceType String VariableDeclarator SECRET Literal null",0
394,394,,0
53,53,"CompilationUnit PackageDeclaration hudson.tasks.junit Import hudson.model.AbstractBuild Import hudson.model.ModelObject Import hudson.model.Api Import hudson.Util Import java.io.Serializable Import java.util.Collection Import java.util.Map Import java.util.WeakHashMap Import org.kohsuke.stapler.export.ExportedBean ClassDeclaration Modifier public abstract Annotation ExportedBean /**
 * Base class for all test result objects.
 *
 * @author Kohsuke Kawaguchi
 */ TestObject MethodDeclaration Modifier public abstract ReferenceType AbstractBuild TypeArgument ? TypeArgument ? getOwner MethodDeclaration /**
     * Gets the counter part of this {@link TestObject} in the previous run.
     *
     * @return null
     *      if no such counter part exists.
     */ Modifier public abstract ReferenceType TestObject getPreviousResult MethodDeclaration /**
     * Time took to run this test. In seconds.
     */ Modifier public abstract BasicType float getDuration MethodDeclaration /**
     * Returns the string representation of the {@link #getDuration()},
     * in a human readable format.
     */ Modifier public ReferenceType String getDurationString ReturnStatement MethodInvocation Util Cast BasicType long BinaryOperation * MethodInvocation getDuration Literal 1000 getTimeSpanString MethodDeclaration /**
     * Exposes this object through the remote API.
     */ Modifier public ReferenceType Api getApi ReturnStatement ClassCreator ReferenceType Api This MethodDeclaration /**
     * Gets the name of this object.
     */ Modifier public ReferenceType String getName ReturnStatement Literal """" MethodDeclaration /**
     * Gets the version of {@link #getName()} that's URL-safe.
     */ Modifier public ReferenceType String getSafeName ReturnStatement MethodInvocation MethodInvocation getName safe MethodDeclaration /**
     * #2988: uniquifies a {@link #getSafeName} amongst children of the parent.
     */ Modifier final protected synchronized ReferenceType String uniquifyName FormalParameter ReferenceType Collection TypeArgument ReferenceType TestObject extends siblings FormalParameter ReferenceType String base LocalVariableDeclaration ReferenceType String VariableDeclarator uniquified MemberReference base LocalVariableDeclaration BasicType int VariableDeclarator sequence Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType TestObject VariableDeclarator sibling MemberReference siblings BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference sibling This MethodInvocation uniquified MethodInvocation UNIQUIFIED_NAMES MemberReference sibling get equals BlockStatement StatementExpression Assignment MemberReference uniquified BinaryOperation + BinaryOperation + MemberReference base Literal '_' MemberReference ++ sequence = End End StatementExpression MethodInvocation UNIQUIFIED_NAMES This MemberReference uniquified put ReturnStatement MemberReference uniquified FieldDeclaration Modifier private final static ReferenceType Map TypeArgument ReferenceType TestObject TypeArgument ReferenceType String VariableDeclarator UNIQUIFIED_NAMES ClassCreator ReferenceType WeakHashMap TypeArgument ReferenceType TestObject TypeArgument ReferenceType String MethodDeclaration /**
     * Replaces URL-unsafe characters.
     */ Modifier protected static ReferenceType String safe FormalParameter ReferenceType String s ReturnStatement MethodInvocation s MethodInvocation Literal '\\' Literal '_' replace MethodInvocation Literal ':' Literal '_' replace Literal '/' Literal '_' replace FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType ModelObject ReferenceType Serializable",0
218,218,"CompilationUnit PackageDeclaration hudson.util Import hudson.ExtensionPoint Import hudson.security.SecurityRealm Import javax.servlet.Filter Import javax.servlet.FilterChain Import javax.servlet.FilterConfig Import javax.servlet.ServletException Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse Import java.io.IOException Import java.util.Arrays Import java.util.Collection Import java.util.List Import java.util.ArrayList Import java.util.Vector ClassDeclaration Modifier public /**
 * Servlet {@link Filter} that chains multiple {@link Filter}s, provided by plugins
 *
 * <p>
 * While this class by itself is not an extension point, I'm marking this class
 * as an extension point so that this class will be more discoverable.
 *
 * <p>
 * {@link SecurityRealm} that wants to contribute {@link Filter}s should first
 * check if {@link SecurityRealm#createFilter(FilterConfig)} is more appropriate.
 *
 * @see SecurityRealm
 */ PluginServletFilter FieldDeclaration Modifier private final static ReferenceType List TypeArgument ReferenceType Filter VariableDeclarator LIST ClassCreator ReferenceType Vector TypeArgument ReferenceType Filter FieldDeclaration Modifier private static ReferenceType FilterConfig VariableDeclarator filterConfig ConstructorDeclaration Modifier public PluginServletFilter MethodDeclaration Modifier public init FormalParameter ReferenceType FilterConfig filterConfig ServletException StatementExpression Assignment MemberReference PluginServletFilter filterConfig MemberReference filterConfig = SynchronizedStatement MemberReference LIST ForStatement EnhancedForControl VariableDeclaration ReferenceType Filter VariableDeclarator f MemberReference LIST BlockStatement StatementExpression MethodInvocation f MemberReference filterConfig init End MethodDeclaration Modifier public static addFilter FormalParameter ReferenceType Filter filter ServletException SynchronizedStatement MemberReference LIST IfStatement BinaryOperation != MemberReference filterConfig Literal null BlockStatement StatementExpression MethodInvocation filter MemberReference filterConfig init End StatementExpression MethodInvocation LIST MemberReference filter add MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter Modifier final ReferenceType FilterChain chain IOException ServletException StatementExpression ClassCreator MethodInvocation MemberReference request MemberReference response doFilter ReferenceType FilterChain FieldDeclaration Modifier private BasicType int VariableDeclarator position Literal 0 FieldDeclaration Modifier private final ReferenceType Filter VariableDeclarator filters MethodInvocation LIST ArrayCreator ReferenceType Filter MethodInvocation LIST size toArray MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response IOException ServletException IfStatement BinaryOperation == MemberReference position MemberReference filters length BlockStatement StatementExpression MethodInvocation chain MemberReference request MemberReference response doFilter BlockStatement StatementExpression MemberReference ArraySelector MemberReference ++ position MethodInvocation MemberReference request MemberReference response This doFilter filters End MethodDeclaration Modifier public destroy SynchronizedStatement MemberReference LIST ForStatement EnhancedForControl VariableDeclaration ReferenceType Filter VariableDeclarator f MemberReference LIST StatementExpression MethodInvocation f destroy End ReferenceType Filter ReferenceType ExtensionPoint",0
38,38,"CompilationUnit PackageDeclaration hudson.util Import hudson.model.Hudson Import hudson.triggers.SafeTimerTask Import hudson.triggers.Trigger Import org.apache.commons.io.FileUtils Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.ServletException Import javax.servlet.ServletContext Import javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR  Import java.io.File Import java.io.IOException Import java.util.Random Import java.util.logging.Logger Import java.util.logging.Level Import java.lang.management.ManagementFactory Import java.lang.reflect.Method ClassDeclaration Modifier public /**
 * Makes sure that no other Hudson uses our <tt>HUDSON_HOME</tt> directory,
 * to forestall the problem of running multiple instances of Hudson that point to the same data directory.
 *
 * <p>
 * This set up error occasionally happens especialy when the user is trying to reassign the context path of the app,
 * and it results in a hard-to-diagnose error, so we actively check this.
 *
 * <p>
 * The mechanism is simple. This class occasionally updates a known file inside the hudson home directory,
 * and whenever it does so, it monitors the timestamp of the file to make sure no one else is updating
 * this file. In this way, while we cannot detect the problem right away, within a reasonable time frame
 * we can detect the collision.
 *
 * <p>
 * More traditional way of doing this is to use a lock file with PID in it, but unfortunately in Java,
 * there's no reliabe way to obtain PID.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.178
 */ DoubleLaunchChecker FieldDeclaration /**
     * The timestamp of the owner file when we updated it for the last time.
     * 0 to indicate that there was no update before.
     */ Modifier private BasicType long VariableDeclarator lastWriteTime Literal 0L FieldDeclaration /**
     * Once the error is reported, the user can choose to ignore and proceed anyway,
     * in which case the flag is set to true.
     */ Modifier private BasicType boolean VariableDeclarator ignore Literal false FieldDeclaration Modifier private final ReferenceType Random VariableDeclarator random ClassCreator ReferenceType Random FieldDeclaration Modifier public final ReferenceType File VariableDeclarator home FieldDeclaration /**
     * ID string of the other Hudson that we are colliding with. 
     * Can be null.
     */ Modifier private ReferenceType String VariableDeclarator collidingId ConstructorDeclaration Modifier public DoubleLaunchChecker StatementExpression Assignment MemberReference home MethodInvocation Hudson MethodInvocation getRootDir getInstance = MethodDeclaration Modifier protected execute LocalVariableDeclaration ReferenceType File VariableDeclarator timestampFile ClassCreator ReferenceType File MemberReference home Literal "".owner"" LocalVariableDeclaration BasicType long VariableDeclarator t MethodInvocation timestampFile lastModified IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference t Literal 0 BinaryOperation != MemberReference lastWriteTime Literal 0 BinaryOperation != MemberReference t MemberReference lastWriteTime MemberReference ! ignore BlockStatement TryStatement StatementExpression Assignment MemberReference collidingId MethodInvocation FileUtils MemberReference timestampFile readFileToString = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE Literal ""Failed to read collision file"" MemberReference e log StatementExpression MethodInvocation Hudson MemberReference servletContext MethodInvocation Literal ""app"" This setAttribute getInstance StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Collision detected. timestamp="" MemberReference t Literal "", expected="" MemberReference lastWriteTime severe End TryStatement StatementExpression MethodInvocation FileUtils MemberReference timestampFile MethodInvocation getId writeStringToFile StatementExpression Assignment MemberReference lastWriteTime MethodInvocation timestampFile lastModified = CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference lastWriteTime Literal 0 = StatementExpression MethodInvocation schedule MethodDeclaration /**
     * Figures out a string that identifies this instance of Hudson.
     */ Modifier public ReferenceType String getId LocalVariableDeclaration ReferenceType Hudson VariableDeclarator h MethodInvocation Hudson getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator contextPath Literal """" TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m ClassReference MethodInvocation Literal ""getContextPath"" getMethod ReferenceType ServletContext StatementExpression Assignment MemberReference contextPath Cast ReferenceType String MethodInvocation m MemberReference h servletContext invoke = CatchClause CatchClauseParameter Exception e ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation h hashCode MemberReference contextPath Literal "" at "" MethodInvocation ManagementFactory MethodInvocation getName getRuntimeMXBean MethodDeclaration Modifier public ReferenceType String getCollidingId ReturnStatement MemberReference collidingId MethodDeclaration /**
     * Schedules the next execution.
     */ Modifier public schedule LocalVariableDeclaration BasicType long VariableDeclarator MINUTE BinaryOperation * Literal 1000 Literal 60 StatementExpression MethodInvocation Trigger.timer ClassCreator ReferenceType SafeTimerTask MethodDeclaration Modifier protected doRun StatementExpression MethodInvocation execute BinaryOperation * BinaryOperation + MethodInvocation random Literal 30 nextInt Literal 60 MemberReference MINUTE schedule MethodDeclaration /**
     * Serve all URLs with the index view.
     */ Modifier public doDynamic FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation rsp MemberReference SC_INTERNAL_SERVER_ERROR setStatus StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""index.jelly"" getView MethodDeclaration /**
     * Ignore the problem and go back to using Hudson.
     */ Modifier public doIgnore FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression Assignment MemberReference ignore Literal true = StatementExpression MethodInvocation Hudson MemberReference servletContext MethodInvocation Literal ""app"" MethodInvocation Hudson getInstance setAttribute getInstance StatementExpression MethodInvocation rsp BinaryOperation + MethodInvocation req getContextPath Literal '/' sendRedirect2 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType DoubleLaunchChecker getLogger",0
141,141,"CompilationUnit PackageDeclaration hudson.org.apache.tools.ant.taskdefs.cvslib ClassDeclaration /**
 * Represents a RCS File change.
 *
 * @version $Revision$ $Date$
 */ RCSFile FieldDeclaration Modifier private ReferenceType String VariableDeclarator m_name FieldDeclaration Modifier private ReferenceType String VariableDeclarator m_fullName FieldDeclaration Modifier private ReferenceType String VariableDeclarator m_revision FieldDeclaration Modifier private ReferenceType String VariableDeclarator m_previousRevision FieldDeclaration Modifier private BasicType boolean VariableDeclarator m_dead FieldDeclaration Modifier private ReferenceType String VariableDeclarator m_branch ConstructorDeclaration RCSFile FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType String fullName FormalParameter Modifier final ReferenceType String revision FormalParameter Modifier final ReferenceType String previousRevision FormalParameter Modifier final ReferenceType String branch FormalParameter Modifier final BasicType boolean dead StatementExpression Assignment MemberReference m_name MemberReference name = StatementExpression Assignment MemberReference m_fullName MemberReference fullName = StatementExpression Assignment MemberReference m_revision MemberReference revision = IfStatement MethodInvocation ! revision MemberReference previousRevision equals BlockStatement StatementExpression Assignment MemberReference m_previousRevision MemberReference previousRevision = End StatementExpression Assignment MemberReference m_branch MemberReference branch = StatementExpression Assignment MemberReference m_dead MemberReference dead = MethodDeclaration ReferenceType String getName ReturnStatement MemberReference m_name MethodDeclaration Modifier public ReferenceType String getFullName ReturnStatement MemberReference m_fullName MethodDeclaration ReferenceType String getRevision ReturnStatement MemberReference m_revision MethodDeclaration ReferenceType String getPreviousRevision ReturnStatement MemberReference m_previousRevision MethodDeclaration BasicType boolean isDead ReturnStatement MemberReference m_dead MethodDeclaration /**
     * Gets the name of this branch, if available.
     */ ReferenceType String getBranch ReturnStatement MemberReference m_branch",1
507,507,,0
34,34,CompilationUnit PackageDeclaration hudson.views Import hudson.Extension Import hudson.model.Descriptor Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public LastFailureColumn MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType ListViewColumn newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType LastFailureColumn MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages LastFailureColumn_DisplayName ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn ReferenceType ListViewColumn,1
501,501,,0
485,485,,0
476,476,,0
556,556,,0
220,220,"CompilationUnit PackageDeclaration hudson.util Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream ClassDeclaration Modifier public /**
 * {@link Thread} that copies {@link InputStream} to {@link OutputStream}.
 *
 * @author Kohsuke Kawaguchi
 */ StreamCopyThread FieldDeclaration Modifier private final ReferenceType InputStream VariableDeclarator in FieldDeclaration Modifier private final ReferenceType OutputStream VariableDeclarator out ConstructorDeclaration Modifier public StreamCopyThread FormalParameter ReferenceType String threadName FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out StatementExpression SuperConstructorInvocation MemberReference threadName StatementExpression Assignment This MemberReference in MemberReference in = StatementExpression Assignment This MemberReference out MemberReference out = MethodDeclaration Modifier public run TryStatement TryStatement LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 8192 LocalVariableDeclaration BasicType int VariableDeclarator len WhileStatement BinaryOperation > Assignment MemberReference len MethodInvocation in MemberReference buf read = Literal 0 StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference len write End StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e ReferenceType Thread",0
405,405,,0
208,208,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.maven.MavenModule Import hudson.maven.MavenReporter Import hudson.maven.MavenReporterDescriptor Import hudson.maven.MavenBuildProxy Import hudson.maven.MojoInfo Import hudson.maven.MavenBuild Import hudson.model.BuildListener Import org.apache.maven.project.MavenProject Import org.apache.maven.reporting.MavenReport Import java.io.IOException Import java.io.File Import java.util.Locale ClassDeclaration Modifier public /**
 * Watches out for executions of {@link MavenReport} mojos and record its output.
 * 
 * @author Kohsuke Kawaguchi
 */ ReportCollector FieldDeclaration Modifier private transient ReferenceType ReportAction VariableDeclarator action MethodDeclaration Modifier public BasicType boolean postExecute FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType MojoInfo mojo FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType Throwable error InterruptedException IOException IfStatement BinaryOperation instanceof MemberReference mojo mojo ReferenceType MavenReport ReturnStatement Literal true End LocalVariableDeclaration ReferenceType MavenReport VariableDeclarator report Cast ReferenceType MavenReport MemberReference mojo mojo LocalVariableDeclaration ReferenceType String VariableDeclarator reportPath MethodInvocation report MethodInvocation getPath getReportOutputDirectory LocalVariableDeclaration ReferenceType String VariableDeclarator projectReportPath MethodInvocation pom MethodInvocation getOutputDirectory getReporting IfStatement MethodInvocation ! reportPath MemberReference projectReportPath startsWith BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages MemberReference reportPath MemberReference projectReportPath ReportCollector_OutsideSite println getLogger ReturnStatement Literal true End IfStatement BinaryOperation == MemberReference action Literal null StatementExpression Assignment MemberReference action ClassCreator ReferenceType ReportAction = End LocalVariableDeclaration ReferenceType File VariableDeclarator top ClassCreator ReferenceType File MethodInvocation report getReportOutputDirectory BinaryOperation + MethodInvocation report getOutputName Literal "".html"" LocalVariableDeclaration ReferenceType String VariableDeclarator relPath MethodInvocation top MethodInvocation MethodInvocation projectReportPath length substring getPath StatementExpression MethodInvocation action ClassCreator ReferenceType ReportAction ReferenceType Entry MemberReference relPath MethodInvocation report MethodInvocation Locale getDefault getName add ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean leaveModule FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType BuildListener listener InterruptedException IOException IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation build ClassCreator ReferenceType AddActionTask MemberReference action executeAsync End StatementExpression Assignment MemberReference action Literal null = ReturnStatement SuperMethodInvocation MemberReference build MemberReference pom MemberReference listener leaveModule ClassDeclaration Modifier private final static AddActionTask FieldDeclaration Modifier private final ReferenceType ReportAction VariableDeclarator action ConstructorDeclaration Modifier public AddActionTask FormalParameter ReferenceType ReportAction action StatementExpression Assignment This MemberReference action MemberReference action = MethodDeclaration Modifier public ReferenceType Void call FormalParameter ReferenceType MavenBuild build IOException InterruptedException StatementExpression MethodInvocation build MemberReference action addAction ReturnStatement Literal null FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType MavenBuildProxy ReferenceType BuildCallable TypeArgument ReferenceType Void TypeArgument ReferenceType IOException MethodDeclaration Modifier public ReferenceType DescriptorImpl getDescriptor ReturnStatement MemberReference DescriptorImpl DESCRIPTOR ClassDeclaration Modifier public final static DescriptorImpl FieldDeclaration Modifier public final static ReferenceType DescriptorImpl VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ReportCollector_DisplayName MethodDeclaration Modifier public ReferenceType ReportCollector newAutoInstance FormalParameter ReferenceType MavenModule module ReturnStatement ClassCreator ReferenceType ReportCollector ReferenceType MavenReporterDescriptor FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType MavenReporter",0
306,306,"CompilationUnit PackageDeclaration hudson.search Import java.lang.annotation.ElementType.FIELD  Import java.lang.annotation.ElementType.METHOD  Import java.lang.annotation.Retention Import java.lang.annotation.RetentionPolicy.RUNTIME  Import java.lang.annotation.Target AnnotationDeclaration Modifier public Annotation Retention MemberReference RUNTIME Annotation Target ElementArrayValue MemberReference METHOD MemberReference FIELD /**
 * Indicates a {@link SearchItem} field/getter.
 *
 * <p>
 * Fields/getters annotated with this annotation must:
 * <ul>
 * <li>be on the class that extends from {@link SearchableModelObject}.
 * <li>have the return type / field type of {@link SearchableModelObject} (or its subtype.)
 * </ul>
 *
 * <p>
 * Such getter/field indicates an edge in the search graph, and will be added
 * automatically by {@link SearchIndexBuilder#addAllAnnotations(SearchableModelObject)}
 * to a search index. 
 *
 * @author Kohsuke Kawaguchi
 */ QuickSilver AnnotationMethod value ReferenceType String",0
188,188,"CompilationUnit PackageDeclaration /**
 * 
 */ hudson.security Import org.acegisecurity.GrantedAuthority Import org.acegisecurity.ldap.InitialDirContextFactory Import org.acegisecurity.ldap.LdapDataAccessException Import org.acegisecurity.providers.ldap.LdapAuthoritiesPopulator Import org.acegisecurity.providers.ldap.populator.DefaultLdapAuthoritiesPopulator Import org.acegisecurity.userdetails.ldap.LdapUserDetails Import hudson.security.SecurityRealm.SecurityComponents ClassDeclaration Modifier public /**
 * Implementation of {@link LdapAuthoritiesPopulator} that defers creation of a
 * {@link DefaultLdapAuthoritiesPopulator} until one is needed. This is done to
 * ensure that the groupSearchBase property can be set.
 * 
 * @author justinedelson
 * @deprecated as of 1.280
 *      {@link SecurityComponents} are now created after {@link SecurityRealm} is created, so
 *      the initialization order issue that this code was trying to address no longer exists.
 */ DeferredCreationLdapAuthoritiesPopulator FieldDeclaration /**
     * A default role which will be assigned to all authenticated users if set.
     */ Modifier private ReferenceType String VariableDeclarator defaultRole Literal null FieldDeclaration /**
     * An initial context factory is only required if searching for groups is
     * required.
     */ Modifier private ReferenceType InitialDirContextFactory VariableDeclarator initialDirContextFactory Literal null FieldDeclaration /**
     * Controls used to determine whether group searches should be performed
     * over the full sub-tree from the base DN.
     */ Modifier private BasicType boolean VariableDeclarator searchSubtree Literal false FieldDeclaration /**
     * The ID of the attribute which contains the role name for a group
     */ Modifier private ReferenceType String VariableDeclarator groupRoleAttribute Literal ""cn"" FieldDeclaration /**
     * The base DN from which the search for group membership should be
     * performed
     */ Modifier private ReferenceType String VariableDeclarator groupSearchBase Literal null FieldDeclaration /**
     * The pattern to be used for the user search. {0} is the user's DN
     */ Modifier private ReferenceType String VariableDeclarator groupSearchFilter Literal ""(| (member={0}) (uniqueMember={0}) (memberUid={0}))"" FieldDeclaration Modifier private ReferenceType String VariableDeclarator rolePrefix Literal ""ROLE_"" FieldDeclaration Modifier private BasicType boolean VariableDeclarator convertToUpperCase Literal true ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param initialDirContextFactory
     *            supplies the contexts used to search for user roles.
     * @param groupSearchBase
     *            if this is an empty string the search will be performed from
     *            the root DN of the context factory.
     */ DeferredCreationLdapAuthoritiesPopulator FormalParameter ReferenceType InitialDirContextFactory initialDirContextFactory FormalParameter ReferenceType String groupSearchBase StatementExpression This MethodInvocation MemberReference initialDirContextFactory setInitialDirContextFactory StatementExpression This MethodInvocation MemberReference groupSearchBase setGroupSearchBase MethodDeclaration Modifier public ReferenceType GrantedAuthority getGrantedAuthorities FormalParameter ReferenceType LdapUserDetails userDetails LdapDataAccessException ReturnStatement MethodInvocation MethodInvocation MemberReference userDetails getGrantedAuthorities create MethodDeclaration Modifier public setConvertToUpperCase FormalParameter BasicType boolean convertToUpperCase StatementExpression Assignment This MemberReference convertToUpperCase MemberReference convertToUpperCase = MethodDeclaration Modifier public setDefaultRole FormalParameter ReferenceType String defaultRole StatementExpression Assignment This MemberReference defaultRole MemberReference defaultRole = MethodDeclaration Modifier public setGroupRoleAttribute FormalParameter ReferenceType String groupRoleAttribute StatementExpression Assignment This MemberReference groupRoleAttribute MemberReference groupRoleAttribute = MethodDeclaration Modifier public setGroupSearchBase FormalParameter ReferenceType String groupSearchBase StatementExpression Assignment This MemberReference groupSearchBase MemberReference groupSearchBase = MethodDeclaration Modifier public setGroupSearchFilter FormalParameter ReferenceType String groupSearchFilter StatementExpression Assignment This MemberReference groupSearchFilter MemberReference groupSearchFilter = MethodDeclaration Modifier public setInitialDirContextFactory FormalParameter ReferenceType InitialDirContextFactory initialDirContextFactory StatementExpression Assignment This MemberReference initialDirContextFactory MemberReference initialDirContextFactory = MethodDeclaration Modifier public setRolePrefix FormalParameter ReferenceType String rolePrefix StatementExpression Assignment This MemberReference rolePrefix MemberReference rolePrefix = MethodDeclaration Modifier public setSearchSubtree FormalParameter BasicType boolean searchSubtree StatementExpression Assignment This MemberReference searchSubtree MemberReference searchSubtree = MethodDeclaration /**
     * Create a new DefaultLdapAuthoritiesPopulator object.
     * 
     * @return a DefaultLdapAuthoritiesPopulator.
     */ Modifier private ReferenceType DefaultLdapAuthoritiesPopulator create LocalVariableDeclaration ReferenceType DefaultLdapAuthoritiesPopulator VariableDeclarator populator ClassCreator ReferenceType DefaultLdapAuthoritiesPopulator MemberReference initialDirContextFactory MemberReference groupSearchBase StatementExpression MethodInvocation populator MemberReference convertToUpperCase setConvertToUpperCase IfStatement BinaryOperation != MemberReference defaultRole Literal null BlockStatement StatementExpression MethodInvocation populator MemberReference defaultRole setDefaultRole End StatementExpression MethodInvocation populator MemberReference groupRoleAttribute setGroupRoleAttribute StatementExpression MethodInvocation populator MemberReference groupSearchFilter setGroupSearchFilter StatementExpression MethodInvocation populator MemberReference rolePrefix setRolePrefix StatementExpression MethodInvocation populator MemberReference searchSubtree setSearchSubtree ReturnStatement MemberReference populator ReferenceType LdapAuthoritiesPopulator",1
60,60,"CompilationUnit PackageDeclaration hudson.model InterfaceDeclaration Modifier public /**
 * A listener for task related events from Executors
*
* @author Stephen Connolly
* @since 17-Jun-2008 18:58:12
*/ ExecutorListener MethodDeclaration /**
     * Called whenever a task is accepted by an executor.
     * @param executor The executor.
     * @param task The task.
     */ taskAccepted FormalParameter ReferenceType Executor executor FormalParameter ReferenceType Queue ReferenceType Task task MethodDeclaration /**
     * Called whenever a task is completed without any problems by an executor.
     * @param executor The executor.
     * @param task The task.
     * @param durationMS The number of milliseconds that the task took to complete.
     */ taskCompleted FormalParameter ReferenceType Executor executor FormalParameter ReferenceType Queue ReferenceType Task task FormalParameter BasicType long durationMS MethodDeclaration /**
     * Called whenever a task is completed without any problems by an executor.
     * @param executor The executor.
     * @param task The task.
     * @param durationMS The number of milliseconds that the task took to complete.
     * @param problems The exception that was thrown.
     */ taskCompletedWithProblems FormalParameter ReferenceType Executor executor FormalParameter ReferenceType Queue ReferenceType Task task FormalParameter BasicType long durationMS FormalParameter ReferenceType Throwable problems",0
488,488,,1
43,43,"CompilationUnit PackageDeclaration hudson.views Import hudson.ExtensionPoint Import hudson.ExtensionList Import hudson.Extension Import hudson.DescriptorExtensionList Import hudson.tasks.Publisher Import hudson.tasks.UserNameResolver Import hudson.model.Describable Import hudson.model.ListView Import hudson.model.Item Import hudson.model.Hudson Import hudson.model.Descriptor Import hudson.util.DescriptorList Import org.kohsuke.stapler.export.Exported ClassDeclaration Modifier public abstract /**
 * Extension point for adding a column to {@link ListView}.
 *
 * <p>
 * This object must have the <tt>column.jelly</tt>. This view
 * is called for each cell of this column. The {@link Item} object
 * is passed in the ""job"" variable. The view should render
 * the &lt;td> tag.
 * <p>
 * This object may have an additional <tt>columHeader.jelly</tt>. The default ColmnHeader
 * will render ColumnCaption.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.279
 */ ListViewColumn MethodDeclaration /**
     * Returns the name of the column that explains what this column means
     *
     * @return
     *      The convention is to use capitalization like ""Foo Bar Zot"".
     */ Modifier public Annotation Exported ReferenceType String getColumnCaption ReturnStatement MethodInvocation MethodInvocation getDisplayName getDescriptor MethodDeclaration /**
     * Returns all the registered {@link ListViewColumn} descriptors.
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType ListViewColumn TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType ListViewColumn getDescriptorList getInstance FieldDeclaration /**
     * All registered {@link ListViewColumn}s.
     * @deprecated as of 1.281
     *      Use {@link #all()} for read access and {@link Extension} for registration.
     */ Modifier public final static ReferenceType DescriptorList TypeArgument ReferenceType ListViewColumn VariableDeclarator LIST ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType ListViewColumn ClassReference ReferenceType ListViewColumn MethodDeclaration /**
     * Whether this column will be shown by default.
     * The default implementation is true.
     * @since 1.301
     */ Modifier public BasicType boolean shownByDefault ReturnStatement Literal true ReferenceType ExtensionPoint ReferenceType Describable TypeArgument ReferenceType ListViewColumn",1
550,550,,0
401,401,,0
74,74,"CompilationUnit PackageDeclaration hudson.model Import hudson.XmlFile Import hudson.BulkChange Import hudson.Util Import hudson.Util.singleQuote  Import hudson.scm.CVSSCM Import net.sf.json.JSONArray Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.Stapler Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.Ancestor Import org.springframework.util.StringUtils Import org.jvnet.tiger_types.Types Import org.apache.commons.io.IOUtils Import javax.servlet.http.HttpServletRequest Import javax.servlet.http.HttpServletResponse.SC_NOT_FOUND  Import javax.servlet.ServletException Import javax.servlet.RequestDispatcher Import java.io.File Import java.io.IOException Import java.io.InputStream Import java.util.ArrayList Import java.util.Collection Import java.util.LinkedHashMap Import java.util.List Import java.util.Map Import java.util.HashMap Import java.util.Locale Import java.util.Arrays Import java.util.Collections Import java.util.concurrent.ConcurrentHashMap Import java.util.logging.Level Import java.util.logging.Logger Import java.lang.reflect.Method Import java.lang.reflect.Modifier Import java.lang.reflect.Type Import java.lang.reflect.Field Import java.lang.reflect.ParameterizedType Import java.beans.Introspector ClassDeclaration Modifier public abstract /**
 * Metadata about a configurable instance.
 *
 * <p>
 * {@link Descriptor} is an object that has metadata about a {@link Describable}
 * object, and also serves as a factory (in a way this relationship is similar
 * to {@link Object}/{@link Class} relationship.
 *
 * A {@link Descriptor}/{@link Describable}
 * combination is used throughout in Hudson to implement a
 * configuration/extensibility mechanism.
 *
 * <p>
 * For example, Take the CVS support as an example, which is implemented
 * in {@link CVSSCM} class. Whenever a job is configured with CVS, a new
 * {@link CVSSCM} instance is created with the per-job configuration
 * information. This instance gets serialized to XML, and this instance
 * will be called to perform CVS operations for that job. This is the job
 * of {@link Describable} &mdash; each instance represents a specific
 * configuration of the CVS support (branch, CVSROOT, etc.)
 *
 * <p>
 * For Hudson to create such configured {@link CVSSCM} instance, Hudson
 * needs another object that captures the metadata of {@link CVSSCM},
 * and that is what a {@link Descriptor} is for. {@link CVSSCM} class
 * has a singleton descriptor, and this descriptor helps render
 * the configuration form, remember system-wide configuration (such as
 * where <tt>cvs.exe</tt> is), and works as a factory.
 *
 * <p>
 * {@link Descriptor} also usually have its associated views.
 *
 *
 * <h2>Persistence</h2>
 * <p>
 * {@link Descriptor} can persist data just by storing them in fields.
 * However, it is the responsibility of the derived type to properly
 * invoke {@link #save()} and {@link #load()}.
 *
 * <h2>Reflection Enhancement</h2>
 * {@link Descriptor} defines addition to the standard Java reflection
 * and provides reflective information about its corresponding {@link Describable}.
 * These are primarily used by tag libraries to
 * keep the Jelly scripts concise. 
 *
 * @author Kohsuke Kawaguchi
 * @see Describable
 */ Descriptor FieldDeclaration /**
     * Up to Hudson 1.61 this was used as the primary persistence mechanism.
     * Going forward Hudson simply persists all the non-transient fields
     * of {@link Descriptor}, just like others, so this is pointless.
     *
     * @deprecated
     */ Modifier private transient Annotation Deprecated ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator properties FieldDeclaration /**
     * The class being described by this descriptor.
     */ Modifier public final transient ReferenceType Class TypeArgument ReferenceType T extends VariableDeclarator clazz FieldDeclaration Modifier private final transient ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Method VariableDeclarator checkMethods ClassCreator ReferenceType ConcurrentHashMap TypeArgument ReferenceType String TypeArgument ReferenceType Method FieldDeclaration /**
     * Lazily computed list of properties on {@link #clazz}.
     */ Modifier private transient volatile ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType PropertyType VariableDeclarator propertyTypes ClassDeclaration Modifier public final static /**
     * Represents a readable property on {@link Describable}.
     */ PropertyType FieldDeclaration Modifier public final ReferenceType Class VariableDeclarator clazz FieldDeclaration Modifier public final ReferenceType Type VariableDeclarator type FieldDeclaration Modifier private volatile ReferenceType Class VariableDeclarator itemType ConstructorDeclaration PropertyType FormalParameter ReferenceType Class clazz FormalParameter ReferenceType Type type StatementExpression Assignment This MemberReference clazz MemberReference clazz = StatementExpression Assignment This MemberReference type MemberReference type = ConstructorDeclaration PropertyType FormalParameter ReferenceType Field f StatementExpression ExplicitConstructorInvocation MethodInvocation f getType MethodInvocation f getGenericType ConstructorDeclaration PropertyType FormalParameter ReferenceType Method getter StatementExpression ExplicitConstructorInvocation MethodInvocation getter getReturnType MethodInvocation getter getGenericReturnType MethodDeclaration Modifier public ReferenceType Enum getEnumConstants ReturnStatement Cast ReferenceType Enum MethodInvocation clazz getEnumConstants MethodDeclaration /**
         * If the property is a collection/array type, what is an item type?
         */ Modifier public ReferenceType Class getItemType IfStatement BinaryOperation == MemberReference itemType Literal null StatementExpression Assignment MemberReference itemType MethodInvocation computeItemType = End ReturnStatement MemberReference itemType MethodDeclaration Modifier private ReferenceType Class computeItemType IfStatement MethodInvocation clazz isArray BlockStatement ReturnStatement MethodInvocation clazz getComponentType End IfStatement ClassReference MethodInvocation MemberReference clazz isAssignableFrom ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Type VariableDeclarator col MethodInvocation Types MemberReference type ClassReference ReferenceType Collection getBaseClass IfStatement BinaryOperation instanceof MemberReference col ReferenceType ParameterizedType ReturnStatement MethodInvocation Types MethodInvocation Types MemberReference col Literal 0 getTypeArgument erasure ReturnStatement ClassReference ReferenceType Object End End ReturnStatement Literal null MethodDeclaration /**
         * Returns {@link Descriptor} whose 'clazz' is the same as {@link #getItemType() the item type}.
         */ Modifier public ReferenceType Descriptor getItemTypeDescriptor LocalVariableDeclaration ReferenceType Class VariableDeclarator itemType MethodInvocation getItemType ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor VariableDeclarator d MethodInvocation Hudson MethodInvocation ClassReference ReferenceType Descriptor getExtensionList getInstance IfStatement BinaryOperation == MemberReference d clazz MemberReference itemType ReturnStatement MemberReference d End End ReturnStatement Literal null ConstructorDeclaration Modifier protected Descriptor FormalParameter ReferenceType Class TypeArgument ReferenceType T extends clazz StatementExpression Assignment This MemberReference clazz MemberReference clazz = ConstructorDeclaration Modifier protected /**
     * Infers the type of the corresponding {@link Describable} from the outer class.
     * This version works when you follow the common convention, where a descriptor
     * is written as the static nested class of the describable class.
     * 
     * @since 1.278
     */ Descriptor StatementExpression Assignment This MemberReference clazz Cast ReferenceType Class TypeArgument ReferenceType T MethodInvocation MethodInvocation getEnclosingClass getClass = IfStatement BinaryOperation == MemberReference clazz Literal null ThrowStatement ClassCreator ReferenceType AssertionError BinaryOperation + MethodInvocation getClass Literal "" doesn't have an outer class. Use the constructor that takes the Class object explicitly."" End LocalVariableDeclaration ReferenceType Type VariableDeclarator bt MethodInvocation Types MethodInvocation getClass ClassReference ReferenceType Descriptor getBaseClass IfStatement BinaryOperation instanceof MemberReference bt ReferenceType ParameterizedType BlockStatement LocalVariableDeclaration ReferenceType ParameterizedType VariableDeclarator pt Cast ReferenceType ParameterizedType MemberReference bt LocalVariableDeclaration ReferenceType Class VariableDeclarator t MethodInvocation Types MethodInvocation pt ArraySelector Literal 0 getActualTypeArguments erasure IfStatement MethodInvocation ! t MemberReference clazz isAssignableFrom ThrowStatement ClassCreator ReferenceType AssertionError BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Outer class "" MemberReference clazz Literal "" of "" MethodInvocation getClass Literal "" is not assignable to "" MemberReference t Literal "". Perhaps wrong outer class?"" End End MethodDeclaration /**
     * Human readable name of this kind of configurable object.
     */ Modifier public abstract ReferenceType String getDisplayName MethodDeclaration /**
     * If the field ""xyz"" of a {@link Describable} has the corresponding ""doCheckXyz"" method,
     * return the form-field validation string. Otherwise null.
     * <p>
     * This method is used to hook up the form validation method to
     */ Modifier public ReferenceType String getCheckUrl FormalParameter ReferenceType String fieldName LocalVariableDeclaration ReferenceType String VariableDeclarator capitalizedFieldName MethodInvocation StringUtils MemberReference fieldName capitalize LocalVariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation checkMethods MemberReference fieldName get IfStatement BinaryOperation == MemberReference method Literal null BlockStatement StatementExpression Assignment MemberReference method MemberReference NONE = LocalVariableDeclaration ReferenceType String VariableDeclarator methodName BinaryOperation + Literal ""doCheck"" MemberReference capitalizedFieldName ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation MethodInvocation getMethods getClass BlockStatement IfStatement MethodInvocation m MethodInvocation MemberReference methodName equals getName BlockStatement StatementExpression Assignment MemberReference method MemberReference m = BreakStatement End End StatementExpression MethodInvocation checkMethods MemberReference fieldName MemberReference method put End IfStatement BinaryOperation == MemberReference method MemberReference NONE ReturnStatement Literal null End LocalVariableDeclaration ReferenceType StaplerRequest VariableDeclarator req MethodInvocation Stapler getCurrentRequest LocalVariableDeclaration ReferenceType Ancestor VariableDeclarator a MethodInvocation req ClassReference ReferenceType DescriptorByNameOwner findAncestor ReturnStatement BinaryOperation + MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation a getUrl Literal ""/descriptorByName/"" MethodInvocation clazz getName Literal ""/check"" MemberReference capitalizedFieldName Literal ""?value="" singleQuote Literal ""+toValue(this)"" MethodDeclaration /**
     * Obtains the property type of the given field of {@link #clazz}
     */ Modifier public ReferenceType PropertyType getPropertyType FormalParameter ReferenceType String field IfStatement BinaryOperation == MemberReference propertyTypes Literal null BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType PropertyType VariableDeclarator r ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType PropertyType ForStatement EnhancedForControl VariableDeclaration ReferenceType Field VariableDeclarator f MethodInvocation clazz getFields StatementExpression MethodInvocation r MethodInvocation f getName ClassCreator ReferenceType PropertyType MemberReference f put End ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation clazz getMethods IfStatement MethodInvocation m MethodInvocation Literal ""get"" startsWith getName StatementExpression MethodInvocation r MethodInvocation Introspector MethodInvocation m MethodInvocation Literal 3 substring getName decapitalize ClassCreator ReferenceType PropertyType MemberReference m put End End StatementExpression Assignment MemberReference propertyTypes MemberReference r = End ReturnStatement MethodInvocation propertyTypes MemberReference field get MethodDeclaration /**
     * Gets the class name nicely escaped to be usable as a key in the structured form submission.
     */ Modifier public final ReferenceType String getJsonSafeClassName ReturnStatement MethodInvocation clazz MethodInvocation Literal '.' Literal '-' replace getName MethodDeclaration /**
     * @deprecated
     *      Implement {@link #newInstance(StaplerRequest, JSONObject)} method instead.
     *      Deprecated as of 1.145. 
     */ Modifier public ReferenceType T newInstance FormalParameter ReferenceType StaplerRequest req FormException ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + MethodInvocation getClass Literal "" should implement newInstance(StaplerRequest,JSONObject)"" MethodDeclaration /**
     * Creates a configured instance from the submitted form.
     *
     * <p>
     * Hudson only invokes this method when the user wants an instance of <tt>T</tt>.
     * So there's no need to check that in the implementation.
     *
     * <p>
     * Starting 1.206, the default implementation of this method does the following:
     * <pre>
     * req.bindJSON(clazz,formData);
     * </pre>
     * <p>
     * ... which performs the databinding on the constructor of {@link #clazz}.
     *
     * @param req
     *      Always non-null. This object includes represents the entire submisison.
     * @param formData
     *      The JSON object that captures the configuration data for this {@link Descriptor}.
     *      See http://hudson.gotdns.com/wiki/display/HUDSON/Structured+Form+Submission
     *
     * @throws FormException
     *      Signals a problem in the submitted form.
     * @since 1.145
     */ Modifier public ReferenceType T newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation MethodInvocation Literal ""newInstance"" ClassReference ReferenceType StaplerRequest getMethod getClass IfStatement MethodInvocation ! Modifier MethodInvocation m MethodInvocation getModifiers getDeclaringClass isAbstract BlockStatement ReturnStatement MethodInvocation MemberReference req newInstance BlockStatement ReturnStatement MethodInvocation req MemberReference clazz MemberReference formData bindJSON End CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e MethodDeclaration /**
     * Returns the resource path to the help screen HTML, if any.
     *
     * <p>
     * Starting 1.282, this method uses ""convention over configuration"" &mdash; you should
     * just put the ""help.html"" (and its localized versions, if any) in the same directory
     * you put your Jelly view files, and this method will automatically does the right thing.
     *
     * <p>
     * This value is relative to the context root of Hudson, so normally
     * the values are something like <tt>""/plugin/emma/help.html""</tt> to
     * refer to static resource files in a plugin, or <tt>""/publisher/EmmaPublisher/abc""</tt>
     * to refer to Jelly script <tt>abc.jelly</tt> or a method <tt>EmmaPublisher.doAbc()</tt>.
     *
     * @return
     *      null to indicate that there's no help.
     */ Modifier public ReferenceType String getHelpFile ReturnStatement MethodInvocation Literal null getHelpFile MethodDeclaration /**
     * Returns the path to the help screen HTML for the given field.
     *
     * <p>
     * The help files are assumed to be at ""help/FIELDNAME.html"" with possible
     * locale variations.
     */ Modifier public ReferenceType String getHelpFile FormalParameter Modifier final ReferenceType String fieldName ForStatement ForControl VariableDeclaration ReferenceType Class VariableDeclarator c MemberReference clazz BinaryOperation != MemberReference c Literal null Assignment MemberReference c MethodInvocation c getSuperclass = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator page BinaryOperation + BinaryOperation + Literal ""/descriptor/"" MethodInvocation clazz getName Literal ""/help"" LocalVariableDeclaration ReferenceType String VariableDeclarator suffix IfStatement BinaryOperation == MemberReference fieldName Literal null BlockStatement StatementExpression Assignment MemberReference suffix Literal """" = BlockStatement StatementExpression Assignment MemberReference page BinaryOperation + Literal '/' MemberReference fieldName += StatementExpression Assignment MemberReference suffix BinaryOperation + Literal '-' MemberReference fieldName = End TryStatement IfStatement BinaryOperation != MethodInvocation Stapler MethodInvocation MemberReference c BinaryOperation + Literal ""help"" MemberReference suffix getView getCurrentRequest Literal null ReturnStatement MemberReference page End CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType Error MemberReference e LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation MemberReference c MemberReference suffix getHelpStream StatementExpression MethodInvocation IOUtils MemberReference in closeQuietly IfStatement BinaryOperation != MemberReference in Literal null ReturnStatement MemberReference page End End ReturnStatement Literal null MethodDeclaration /**
     * Checks if the given object is created from this {@link Descriptor}.
     */ Modifier public final BasicType boolean isInstance FormalParameter ReferenceType T instance ReturnStatement MethodInvocation clazz MemberReference instance isInstance MethodDeclaration /**
     * @deprecated
     *      As of 1.64. Use {@link #configure(StaplerRequest)}.
     */ Modifier public Annotation Deprecated BasicType boolean configure FormalParameter ReferenceType HttpServletRequest req FormException ReturnStatement Literal true MethodDeclaration /**
     * @deprecated
     *      As of 1.239, use {@link #configure(StaplerRequest, JSONObject)}.
     */ Modifier public BasicType boolean configure FormalParameter ReferenceType StaplerRequest req FormException ReturnStatement MethodInvocation Cast ReferenceType HttpServletRequest MemberReference req configure MethodDeclaration /**
     * Invoked when the global configuration page is submitted.
     *
     * Can be overriden to store descriptor-specific information.
     *
     * @param json
     *      The JSON object that captures the configuration data for this {@link Descriptor}.
     *      See http://hudson.gotdns.com/wiki/display/HUDSON/Structured+Form+Submission
     * @return false
     *      to keep the client in the same config page.
     */ Modifier public BasicType boolean configure FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject json FormException ReturnStatement MethodInvocation MemberReference req configure MethodDeclaration Modifier public ReferenceType String getConfigPage ReturnStatement MethodInvocation MemberReference clazz Literal ""config.jelly"" getViewPage MethodDeclaration Modifier public ReferenceType String getGlobalConfigPage ReturnStatement MethodInvocation MemberReference clazz Literal ""global.jelly"" getViewPage MethodDeclaration Modifier final protected ReferenceType String getViewPage FormalParameter ReferenceType Class TypeArgument ? clazz FormalParameter ReferenceType String pageName WhileStatement BinaryOperation != MemberReference clazz ClassReference ReferenceType Object BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + BinaryOperation + MethodInvocation clazz MethodInvocation Literal '.' Literal '/' replace MethodInvocation Literal '$' Literal '/' replace getName Literal ""/"" MemberReference pageName IfStatement BinaryOperation != MethodInvocation clazz MethodInvocation MemberReference name getResource getClassLoader Literal null ReturnStatement BinaryOperation + Literal '/' MemberReference name End StatementExpression Assignment MemberReference clazz MethodInvocation clazz getSuperclass = End ReturnStatement MemberReference pageName MethodDeclaration /**
     * Saves the configuration info to the disk.
     */ Modifier public synchronized save IfStatement MethodInvocation BulkChange This contains ReturnStatement End TryStatement StatementExpression MethodInvocation MethodInvocation This write getConfigFile CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + Literal ""Failed to save "" MethodInvocation getConfigFile MemberReference e log MethodDeclaration /**
     * Loads the data from the disk into this object.
     *
     * <p>
     * The constructor of the derived class must call this method.
     * (If we do that in the base class, the derived class won't
     * get a chance to set default values.)
     */ Modifier public synchronized load LocalVariableDeclaration ReferenceType XmlFile VariableDeclarator file MethodInvocation getConfigFile IfStatement MethodInvocation ! file exists ReturnStatement End TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation file This unmarshal IfStatement BinaryOperation instanceof MemberReference o ReferenceType Map BlockStatement LocalVariableDeclaration Annotation SuppressWarnings Literal ""unchecked"" ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator _o Cast ReferenceType Map MemberReference o StatementExpression MethodInvocation MemberReference _o convert StatementExpression MethodInvocation save End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + Literal ""Failed to load "" MemberReference file MemberReference e log MethodDeclaration /**
     * {@link Descriptor}s that has existed &lt;= 1.61 needs to
     * be able to read in the old configuration in a property bag
     * and reflect that into the new layout.
     */ Modifier protected convert FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object oldPropertyBag MethodDeclaration Modifier private ReferenceType XmlFile getConfigFile ReturnStatement ClassCreator ReferenceType XmlFile ClassCreator ReferenceType File MethodInvocation Hudson MethodInvocation getRootDir getInstance BinaryOperation + MethodInvocation clazz getName Literal "".xml"" MethodDeclaration /**
     * Serves <tt>help.html</tt> from the resource of {@link #clazz}.
     */ Modifier public doHelp FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation req getRestOfPath IfStatement MethodInvocation path Literal "".."" contains ThrowStatement ClassCreator ReferenceType ServletException BinaryOperation + Literal ""Illegal path: "" MemberReference path End StatementExpression Assignment MemberReference path MethodInvocation path Literal '/' Literal '-' replace = ForStatement ForControl VariableDeclaration ReferenceType Class VariableDeclarator c MemberReference clazz BinaryOperation != MemberReference c Literal null Assignment MemberReference c MethodInvocation c getSuperclass = BlockStatement LocalVariableDeclaration ReferenceType RequestDispatcher VariableDeclarator rd MethodInvocation Stapler MethodInvocation MemberReference c BinaryOperation + Literal ""help"" MemberReference path getView getCurrentRequest IfStatement BinaryOperation != MemberReference rd Literal null BlockStatement StatementExpression MethodInvocation rd MemberReference req MemberReference rsp forward ReturnStatement End LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation MemberReference c MemberReference path getHelpStream IfStatement BinaryOperation != MemberReference in Literal null BlockStatement StatementExpression MethodInvocation rsp Literal ""text/html;charset=UTF-8"" setContentType LocalVariableDeclaration ReferenceType String VariableDeclarator literal MethodInvocation IOUtils MemberReference in Literal ""UTF-8"" toString StatementExpression MethodInvocation rsp MethodInvocation MethodInvocation Util MemberReference literal MethodInvocation Collections Literal ""rootURL"" MethodInvocation req getContextPath singletonMap replaceMacro println getWriter StatementExpression MethodInvocation in close ReturnStatement End End StatementExpression MethodInvocation rsp MemberReference SC_NOT_FOUND sendError MethodDeclaration Modifier private ReferenceType InputStream getHelpStream FormalParameter ReferenceType Class c FormalParameter ReferenceType String suffix LocalVariableDeclaration ReferenceType Locale VariableDeclarator locale MethodInvocation Stapler MethodInvocation getLocale getCurrentRequest LocalVariableDeclaration ReferenceType String VariableDeclarator base BinaryOperation + BinaryOperation + MethodInvocation c MethodInvocation Literal '.' Literal '/' replace getName Literal ""/help"" MemberReference suffix LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl MethodInvocation c getClassLoader IfStatement BinaryOperation == MemberReference cl Literal null ReturnStatement Literal null End LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in StatementExpression Assignment MemberReference in MethodInvocation cl BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference base Literal '_' MethodInvocation locale getLanguage Literal '_' MethodInvocation locale getCountry Literal '_' MethodInvocation locale getVariant Literal "".html"" getResourceAsStream = IfStatement BinaryOperation != MemberReference in Literal null ReturnStatement MemberReference in End StatementExpression Assignment MemberReference in MethodInvocation cl BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference base Literal '_' MethodInvocation locale getLanguage Literal '_' MethodInvocation locale getCountry Literal "".html"" getResourceAsStream = IfStatement BinaryOperation != MemberReference in Literal null ReturnStatement MemberReference in End StatementExpression Assignment MemberReference in MethodInvocation cl BinaryOperation + BinaryOperation + BinaryOperation + MemberReference base Literal '_' MethodInvocation locale getLanguage Literal "".html"" getResourceAsStream = IfStatement BinaryOperation != MemberReference in Literal null ReturnStatement MemberReference in End ReturnStatement MethodInvocation cl BinaryOperation + MemberReference base Literal "".html"" getResourceAsStream MethodDeclaration Modifier public static TypeParameter T ReferenceType T toArray FormalParameter ReferenceType T values  ReturnStatement MemberReference values MethodDeclaration Modifier public static TypeParameter T ReferenceType List TypeArgument ReferenceType T toList FormalParameter ReferenceType T values  ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T MethodInvocation Arrays MemberReference values asList MethodDeclaration Modifier public static TypeParameter T ReferenceType Describable TypeArgument ReferenceType T ReferenceType Map TypeArgument ReferenceType Descriptor TypeArgument ReferenceType T TypeArgument ReferenceType T toMap FormalParameter ReferenceType Iterable TypeArgument ReferenceType T describables LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Descriptor TypeArgument ReferenceType T TypeArgument ReferenceType T VariableDeclarator m ClassCreator ReferenceType LinkedHashMap TypeArgument ReferenceType Descriptor TypeArgument ReferenceType T TypeArgument ReferenceType T ForStatement EnhancedForControl VariableDeclaration ReferenceType T VariableDeclarator d MemberReference describables BlockStatement StatementExpression MethodInvocation m MethodInvocation d getDescriptor MemberReference d put End ReturnStatement MemberReference m MethodDeclaration /**
     * Used to build {@link Describable} instance list from &lt;f:hetero-list> tag.
     *
     * @param req
     *      Request that represents the form submission.
     * @param formData
     *      Structured form data that represents the contains data for the list of describables.
     * @param key
     *      The JSON property name for 'formData' that represents the data for the list of describables.
     * @param descriptors
     *      List of descriptors to create instances from.
     * @return
     *      Can be empty but never null.
     */ Modifier public static TypeParameter T ReferenceType Describable TypeArgument ReferenceType T ReferenceType List TypeArgument ReferenceType T newInstancesFromHeteroList FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormalParameter ReferenceType String key FormalParameter ReferenceType Collection TypeArgument ReferenceType Descriptor TypeArgument ReferenceType T extends descriptors FormException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator items ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T IfStatement MethodInvocation ! formData MemberReference key has ReturnStatement MemberReference items End LocalVariableDeclaration ReferenceType JSONArray VariableDeclarator a MethodInvocation JSONArray MethodInvocation formData MemberReference key get fromObject ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference a BlockStatement LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator jo Cast ReferenceType JSONObject MemberReference o LocalVariableDeclaration ReferenceType String VariableDeclarator kind MethodInvocation jo Literal ""kind"" getString StatementExpression MethodInvocation items MethodInvocation MethodInvocation MemberReference req MemberReference jo newInstance MemberReference descriptors MemberReference kind find add End ReturnStatement MemberReference items MethodDeclaration /**
     * Finds a descriptor from a collection by its class name.
     */ Modifier public static TypeParameter T ReferenceType Descriptor ReferenceType T find FormalParameter ReferenceType Collection TypeArgument ReferenceType T extends list FormalParameter ReferenceType String className ForStatement EnhancedForControl VariableDeclaration ReferenceType T VariableDeclarator d MemberReference list BlockStatement IfStatement MethodInvocation d MethodInvocation getName MethodInvocation MemberReference className equals getClass ReturnStatement MemberReference d End End ReturnStatement Literal null MethodDeclaration Modifier public static ReferenceType Descriptor find FormalParameter ReferenceType String className ReturnStatement MethodInvocation MethodInvocation Hudson MethodInvocation ClassReference ReferenceType Descriptor getExtensionList getInstance MemberReference className find ClassDeclaration Modifier public final static FormException FieldDeclaration Modifier private final ReferenceType String VariableDeclarator formField ConstructorDeclaration Modifier public FormException FormalParameter ReferenceType String message FormalParameter ReferenceType String formField StatementExpression SuperConstructorInvocation MemberReference message StatementExpression Assignment This MemberReference formField MemberReference formField = ConstructorDeclaration Modifier public FormException FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable cause FormalParameter ReferenceType String formField StatementExpression SuperConstructorInvocation MemberReference message MemberReference cause StatementExpression Assignment This MemberReference formField MemberReference formField = ConstructorDeclaration Modifier public FormException FormalParameter ReferenceType Throwable cause FormalParameter ReferenceType String formField StatementExpression SuperConstructorInvocation MemberReference cause StatementExpression Assignment This MemberReference formField MemberReference formField = MethodDeclaration /**
         * Which form field contained an error?
         */ Modifier public ReferenceType String getFormField ReturnStatement MemberReference formField ReferenceType Exception FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Descriptor getLogger FieldDeclaration /**
     * Used in {@link #checkMethods} to indicate that there's no check method.
     */ Modifier private final static ReferenceType Method VariableDeclarator NONE TryStatement StatementExpression Assignment MemberReference NONE ClassReference MethodInvocation Literal ""toString"" getMethod ReferenceType Object = CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType AssertionError TypeParameter T ReferenceType Describable TypeArgument ReferenceType T ReferenceType Saveable",0
563,563,,0
543,543,,1
309,309,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.Launcher.LocalLauncher Import hudson.Proc Import hudson.FilePath Import hudson.model.Computer Import hudson.model.TaskListener Import hudson.remoting.Channel Import hudson.remoting.Which Import hudson.util.ArgumentListBuilder Import hudson.util.ClasspathBuilder Import hudson.util.StreamCopyThread Import java.io.BufferedInputStream Import java.io.BufferedOutputStream Import java.io.File Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.net.InetSocketAddress Import java.net.ServerSocket Import java.net.Socket Import java.util.Map Import java.util.concurrent.ExecutorService Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public /**
 * Various convenient subtype of {@link Channel}s.
 * 
 * @author Kohsuke Kawaguchi
 */ Channels MethodDeclaration /**
     * @deprecated
     *      Use {@link #forProcess(String, ExecutorService, InputStream, OutputStream, OutputStream, Proc)}
     */ Modifier public static ReferenceType Channel forProcess FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService execService FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType Proc proc IOException ReturnStatement MethodInvocation MemberReference name MemberReference execService MemberReference in MemberReference out Literal null MemberReference proc forProcess MethodDeclaration /**
     * Creates a channel that wraps a remote process, so that when we shut down the connection
     * we kill the process.
     */ Modifier public static ReferenceType Channel forProcess FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService execService FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType OutputStream header FormalParameter Modifier final ReferenceType Proc proc IOException ReturnStatement ClassCreator ReferenceType Channel MemberReference name MemberReference execService MemberReference in MemberReference out MemberReference header MethodDeclaration /**
             * Kill the process when the channel is severed.
             */ Modifier protected synchronized terminate FormalParameter ReferenceType IOException e StatementExpression SuperMethodInvocation MemberReference e terminate TryStatement StatementExpression MethodInvocation proc kill CatchClause CatchClauseParameter IOException x StatementExpression MethodInvocation LOGGER MemberReference Level INFO Literal ""Failed to terminate the severed connection"" MemberReference x log CatchClause CatchClauseParameter InterruptedException x StatementExpression MethodInvocation Thread MethodInvocation interrupt currentThread MethodDeclaration Modifier public synchronized close IOException StatementExpression SuperMethodInvocation close TryStatement StatementExpression MethodInvocation proc join CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Thread MethodInvocation interrupt currentThread MethodDeclaration Modifier public static ReferenceType Channel forProcess FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService execService FormalParameter Modifier final ReferenceType Process proc FormalParameter ReferenceType OutputStream header IOException LocalVariableDeclaration Modifier final ReferenceType Thread VariableDeclarator thread ClassCreator ReferenceType StreamCopyThread BinaryOperation + MemberReference name Literal "" stderr"" MethodInvocation proc getErrorStream MemberReference header StatementExpression MethodInvocation thread start ReturnStatement ClassCreator ReferenceType Channel MemberReference name MemberReference execService MethodInvocation proc getInputStream MethodInvocation proc getOutputStream MemberReference header MethodDeclaration /**
             * Kill the process when the channel is severed.
             */ Modifier protected synchronized terminate FormalParameter ReferenceType IOException e StatementExpression SuperMethodInvocation MemberReference e terminate StatementExpression MethodInvocation proc destroy MethodDeclaration Modifier public synchronized close IOException StatementExpression SuperMethodInvocation close TryStatement StatementExpression MethodInvocation proc waitFor StatementExpression MethodInvocation thread join CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Thread MethodInvocation interrupt currentThread MethodDeclaration /**
     * Launches a new JVM with the given classpath and system properties, establish a communication channel,
     * and return a {@link Channel} to it.
     *
     * @param displayName
     *      Human readable name of what this JVM represents. For example ""Selenium grid"" or ""Hadoop"".
     *      This token is used for messages to {@code listener}.
     * @param listener
     *      The progress of the launcher and the failure information will be sent here. Must not be null.
     * @param workDir
     *      If non-null, the new JVM will have this directory as the working directory. This must be a local path.
     * @param classpath
     *      The classpath of the new JVM. Can be null if you just need {@code slave.jar} (and everything else
     *      can be sent over the channel.) But if you have jars that are known to be necessary by the new JVM,
     *      setting it here will improve the classloading performance (by avoiding remote class file transfer.)
     *      Classes in this classpath will also take precedence over any other classes that's sent via the channel
     *      later, so it's also useful for making sure you gee the version of the classes you want.
     * @param systemProperties
     *      If the new JVM should have a certain system properties set. Can be null.
     *
     * @return
     *      never null
     * @since 1.300
     */ Modifier public static ReferenceType Channel newJVM FormalParameter ReferenceType String displayName FormalParameter ReferenceType TaskListener listener FormalParameter ReferenceType FilePath workDir FormalParameter ReferenceType ClasspathBuilder classpath FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String systemProperties IOException LocalVariableDeclaration ReferenceType ServerSocket VariableDeclarator serverSocket ClassCreator ReferenceType ServerSocket StatementExpression MethodInvocation serverSocket ClassCreator ReferenceType InetSocketAddress Literal ""localhost"" Literal 0 bind StatementExpression MethodInvocation serverSocket BinaryOperation * Literal 10 Literal 1000 setSoTimeout LocalVariableDeclaration ReferenceType ArgumentListBuilder VariableDeclarator args ClassCreator ReferenceType ArgumentListBuilder StatementExpression MethodInvocation args ClassCreator ReferenceType File MethodInvocation System Literal ""java.home"" getProperty Literal ""bin/java"" add IfStatement BinaryOperation != MemberReference systemProperties Literal null StatementExpression MethodInvocation args Literal ""-D"" MemberReference systemProperties addKeyValuePairs End StatementExpression MethodInvocation args MethodInvocation MethodInvocation Which ClassReference ReferenceType Channel jarFile add Literal ""-jar"" add IfStatement BinaryOperation != MemberReference classpath Literal null StatementExpression MethodInvocation args MethodInvocation MemberReference classpath add Literal ""-cp"" add End StatementExpression MethodInvocation args Literal ""-connectTo"" BinaryOperation + Literal ""localhost:"" MethodInvocation serverSocket getLocalPort add StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + Literal ""Starting "" MemberReference displayName println getLogger LocalVariableDeclaration ReferenceType Proc VariableDeclarator p ClassCreator MethodInvocation launch MethodInvocation MemberReference args cmds MethodInvocation MemberReference listener stdout MethodInvocation MemberReference workDir pwd MethodInvocation start ReferenceType LocalLauncher MemberReference listener LocalVariableDeclaration ReferenceType Socket VariableDeclarator s MethodInvocation serverSocket accept StatementExpression MethodInvocation serverSocket close ReturnStatement MethodInvocation BinaryOperation + Literal ""Channel to "" MemberReference displayName MemberReference Computer threadPoolForRemoting ClassCreator ReferenceType BufferedInputStream MethodInvocation s getInputStream ClassCreator ReferenceType BufferedOutputStream MethodInvocation s getOutputStream Literal null MemberReference p forProcess FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Channels getLogger",0
490,490,,0
415,415,,0
354,354,"CompilationUnit PackageDeclaration hudson.util Import java.io.FilterOutputStream Import java.io.IOException Import java.io.OutputStream ClassDeclaration Modifier public /**
 * Hex-binary encoding stream.
 *
 * TODO: use base64binary.
 *
 * @author Kohsuke Kawaguchi
 * @see DecodingStream
 */ EncodingStream ConstructorDeclaration Modifier public EncodingStream FormalParameter ReferenceType OutputStream out StatementExpression SuperConstructorInvocation MemberReference out MethodDeclaration Modifier public write FormalParameter BasicType int b IOException StatementExpression MethodInvocation out MethodInvocation chars BinaryOperation / MemberReference b Literal 16 charAt write StatementExpression MethodInvocation out MethodInvocation chars BinaryOperation % MemberReference b Literal 16 charAt write FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator chars Literal ""0123456789ABCDEF"" ReferenceType FilterOutputStream",1
371,371,,0
288,288,"CompilationUnit PackageDeclaration hudson.model Import com.trilead.ssh2.crypto.Base64 Import hudson.PluginWrapper Import hudson.Util Import hudson.Extension Import hudson.node_monitors.ArchitectureMonitor.DescriptorImpl Import hudson.util.TimeUnit2.DAYS  Import net.sf.json.JSONObject Import org.apache.commons.io.output.ByteArrayOutputStream Import javax.crypto.Cipher Import javax.crypto.CipherOutputStream Import javax.crypto.KeyGenerator Import javax.crypto.SecretKey Import javax.crypto.CipherInputStream Import javax.crypto.spec.SecretKeySpec Import java.io.IOException Import java.io.OutputStreamWriter Import java.io.FilterOutputStream Import java.io.OutputStream Import java.io.FilterInputStream Import java.io.InputStream Import java.io.DataInputStream Import java.security.GeneralSecurityException Import java.security.KeyFactory Import java.security.PublicKey Import java.security.spec.X509EncodedKeySpec Import java.util.ArrayList Import java.util.List Import java.util.zip.GZIPOutputStream ClassDeclaration Modifier public Annotation Extension /**
 * @author Kohsuke Kawaguchi
 */ UsageStatistics FieldDeclaration Modifier private final ReferenceType String VariableDeclarator keyImage FieldDeclaration /**
     * Lazily computed {@link PublicKey} representation of {@link #keyImage}.
     */ Modifier private transient volatile ReferenceType PublicKey VariableDeclarator key FieldDeclaration /**
     * When was the last time we asked a browser to send the usage stats for us?
     */ Modifier private transient volatile BasicType long VariableDeclarator lastAttempt Literal - 1 ConstructorDeclaration Modifier public UsageStatistics StatementExpression ExplicitConstructorInvocation MemberReference DEFAULT_KEY_BYTES ConstructorDeclaration Modifier public /**
     * Creates an instance with a specific public key image.
     */ UsageStatistics FormalParameter ReferenceType String keyImage StatementExpression SuperConstructorInvocation ClassReference ReferenceType UsageStatistics StatementExpression Assignment This MemberReference keyImage MemberReference keyImage = StatementExpression MethodInvocation load MethodDeclaration /**
     * Returns true if it's time for us to check for new version.
     */ Modifier public BasicType boolean isDue IfStatement BinaryOperation || MethodInvocation ! Hudson MethodInvocation isUsageStatisticsCollected getInstance MemberReference DISABLED ReturnStatement Literal false End LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis IfStatement BinaryOperation > BinaryOperation - MemberReference now MemberReference lastAttempt MemberReference DAY BlockStatement StatementExpression Assignment MemberReference lastAttempt MemberReference now = ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier private ReferenceType Cipher getCipher TryStatement IfStatement BinaryOperation == MemberReference key Literal null BlockStatement LocalVariableDeclaration ReferenceType KeyFactory VariableDeclarator keyFactory MethodInvocation KeyFactory Literal ""RSA"" getInstance StatementExpression Assignment MemberReference key MethodInvocation keyFactory ClassCreator ReferenceType X509EncodedKeySpec MethodInvocation Util MemberReference keyImage fromHexString generatePublic = End LocalVariableDeclaration ReferenceType Cipher VariableDeclarator cipher MethodInvocation Cipher Literal ""RSA"" getInstance StatementExpression MethodInvocation cipher MemberReference Cipher ENCRYPT_MODE MemberReference key init ReturnStatement MemberReference cipher CatchClause CatchClauseParameter GeneralSecurityException e ThrowStatement ClassCreator ReferenceType Error MemberReference e MethodDeclaration /**
     * Gets the encrypted usage stat data to be sent to the Hudson server.
     */ Modifier public ReferenceType String getStatData IOException LocalVariableDeclaration ReferenceType Hudson VariableDeclarator h MethodInvocation Hudson getInstance LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator o ClassCreator ReferenceType JSONObject StatementExpression MethodInvocation o Literal ""stat"" Literal 1 put StatementExpression MethodInvocation o Literal ""install"" MethodInvocation Util MethodInvocation h getSecretKey getDigestOf put StatementExpression MethodInvocation o Literal ""version"" MemberReference Hudson VERSION put LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JSONObject VariableDeclarator nodes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JSONObject ForStatement EnhancedForControl VariableDeclaration ReferenceType Computer VariableDeclarator c MethodInvocation h getComputers BlockStatement LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator n ClassCreator ReferenceType JSONObject IfStatement BinaryOperation == MethodInvocation c getNode MemberReference h BlockStatement StatementExpression MethodInvocation n Literal ""master"" Literal true put StatementExpression MethodInvocation n Literal ""jvm-vendor"" MethodInvocation System Literal ""java.vm.vendor"" getProperty put StatementExpression MethodInvocation n Literal ""jvm-version"" MethodInvocation System Literal ""java.version"" getProperty put End StatementExpression MethodInvocation n Literal ""executors"" MethodInvocation c getNumExecutors put LocalVariableDeclaration ReferenceType DescriptorImpl VariableDeclarator descriptor MethodInvocation h ClassReference ReferenceType DescriptorImpl getDescriptorByType StatementExpression MethodInvocation n Literal ""os"" MethodInvocation descriptor MemberReference c get put StatementExpression MethodInvocation nodes MemberReference n add End StatementExpression MethodInvocation o Literal ""nodes"" MemberReference nodes put LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JSONObject VariableDeclarator plugins ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JSONObject ForStatement EnhancedForControl VariableDeclaration ReferenceType PluginWrapper VariableDeclarator pw MethodInvocation h MethodInvocation getPlugins getPluginManager BlockStatement IfStatement MethodInvocation ! pw isActive ContinueStatement End LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator p ClassCreator ReferenceType JSONObject StatementExpression MethodInvocation p Literal ""name"" MethodInvocation pw getShortName put StatementExpression MethodInvocation p Literal ""version"" MethodInvocation pw getVersion put StatementExpression MethodInvocation plugins MemberReference p add End StatementExpression MethodInvocation o Literal ""plugins"" MemberReference plugins put LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator jobs ClassCreator ReferenceType JSONObject LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType TopLevelItem VariableDeclarator items MethodInvocation h getItems ForStatement EnhancedForControl VariableDeclaration ReferenceType TopLevelItemDescriptor VariableDeclarator d MethodInvocation Items all BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cnt Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType TopLevelItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation == MethodInvocation item getDescriptor MemberReference d StatementExpression MemberReference ++ cnt End End StatementExpression MethodInvocation jobs MethodInvocation d getJsonSafeClassName MemberReference cnt put End StatementExpression MethodInvocation o Literal ""jobs"" MemberReference jobs put TryStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator w ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType GZIPOutputStream ClassCreator ReferenceType CombinedCipherOutputStream MemberReference baos MethodInvocation getCipher Literal ""AES"" Literal ""UTF-8"" StatementExpression MethodInvocation o MemberReference w write StatementExpression MethodInvocation w close ReturnStatement ClassCreator ReferenceType String MethodInvocation Base64 MethodInvocation baos toByteArray encode CatchClause CatchClauseParameter GeneralSecurityException e ThrowStatement ClassCreator ReferenceType Error MemberReference e ClassDeclaration Modifier public final static /**
     * Assymetric cipher is slow and in case of Sun RSA implementation it can only encyrypt the first block.
     *
     * So first create a symmetric key, then place this key in the beginning of the stream by encrypting it
     * with the assymetric cipher. The rest of the stream will be encrypted by a symmetric cipher.
     */ CombinedCipherOutputStream ConstructorDeclaration Modifier public CombinedCipherOutputStream FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType Cipher asym FormalParameter ReferenceType String algorithm IOException GeneralSecurityException StatementExpression SuperConstructorInvocation MemberReference out LocalVariableDeclaration ReferenceType SecretKey VariableDeclarator symKey MethodInvocation KeyGenerator MethodInvocation generateKey MemberReference algorithm getInstance StatementExpression MethodInvocation out MethodInvocation asym MethodInvocation symKey getEncoded doFinal write LocalVariableDeclaration ReferenceType Cipher VariableDeclarator sym MethodInvocation Cipher MemberReference algorithm getInstance StatementExpression MethodInvocation sym MemberReference Cipher ENCRYPT_MODE MemberReference symKey init StatementExpression Assignment SuperMemberReference out ClassCreator ReferenceType CipherOutputStream MemberReference out MemberReference sym = ReferenceType FilterOutputStream ClassDeclaration Modifier public final static /**
     * The opposite of the {@link CombinedCipherOutputStream}.
     */ CombinedCipherInputStream ConstructorDeclaration Modifier public /**
         * @param keyLength
         *      Block size of the assymetric cipher, in bits. I thought I can get it from {@code asym.getBlockSize()}
         *      but that doesn't work with Sun's implementation.
         */ CombinedCipherInputStream FormalParameter ReferenceType InputStream in FormalParameter ReferenceType Cipher asym FormalParameter ReferenceType String algorithm FormalParameter BasicType int keyLength IOException GeneralSecurityException StatementExpression SuperConstructorInvocation MemberReference in LocalVariableDeclaration BasicType byte VariableDeclarator symKeyBytes ArrayCreator BasicType byte BinaryOperation / MemberReference keyLength Literal 8 StatementExpression ClassCreator MethodInvocation MemberReference symKeyBytes readFully ReferenceType DataInputStream MemberReference in LocalVariableDeclaration ReferenceType SecretKey VariableDeclarator symKey ClassCreator ReferenceType SecretKeySpec MethodInvocation asym MemberReference symKeyBytes doFinal MemberReference algorithm LocalVariableDeclaration ReferenceType Cipher VariableDeclarator sym MethodInvocation Cipher MemberReference algorithm getInstance StatementExpression MethodInvocation sym MemberReference Cipher DECRYPT_MODE MemberReference symKey init StatementExpression Assignment SuperMemberReference in ClassCreator ReferenceType CipherInputStream MemberReference in MemberReference sym = ReferenceType FilterInputStream FieldDeclaration /**
     * Public key to encrypt the usage statistics
     */ Modifier private final static ReferenceType String VariableDeclarator DEFAULT_KEY_BYTES Literal ""30819f300d06092a864886f70d010101050003818d0030818902818100c14970473bd90fd1f2d20e4fa6e36ea21f7d46db2f4104a3a8f2eb097d6e26278dfadf3fe9ed05bbbb00a4433f4b7151e6683a169182e6ff2f6b4f2bb6490b2cddef73148c37a2a7421fc75f99fb0fadab46f191806599a208652f4829fd6f76e13195fb81ff3f2fce15a8e9a85ebe15c07c90b34ebdb416bd119f0d74105f3b0203010001"" FieldDeclaration Modifier private final static BasicType long VariableDeclarator DAY MethodInvocation DAYS Literal 1 toMillis FieldDeclaration Modifier public static BasicType boolean VariableDeclarator DISABLED MethodInvocation Boolean BinaryOperation + ClassReference MethodInvocation getName ReferenceType UsageStatistics Literal "".disabled"" getBoolean ReferenceType PageDecorator",0
240,240,"CompilationUnit PackageDeclaration hudson.model InterfaceDeclaration Modifier public /**
 * Marker interface for {@link Action}s that should be displayed
 * at the top of the project page.
 *
 * {@link #getIconFileName()}, {@link #getUrlName()}, {@link #getDisplayName()}
 * are used to create a large, more visible icon in the top page to draw
 * users' attention.
 *
 * @author Kohsuke Kawaguchi
 */ ProminentProjectAction ReferenceType Action",0
169,169,"CompilationUnit PackageDeclaration hudson.model Import org.jvnet.localizer.Localizable Import org.jvnet.localizer.ResourceBundleHolder Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import java.io  Import java.lang.reflect.Field Import java.util.Collections Import java.util.List Import java.util.Locale ClassDeclaration Modifier public Annotation ExportedBean ElementValuePair defaultVisibility Literal 2 /**
 * Represents health of something (typically project).
 * A number between 0-100.
 *
 * @author connollys
 * @since 1.115
 */ HealthReport FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HEALTH_OVER_80 Literal ""health-80plus.gif"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HEALTH_60_TO_79 Literal ""health-60to79.gif"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HEALTH_40_TO_59 Literal ""health-40to59.gif"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HEALTH_20_TO_39 Literal ""health-20to39.gif"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HEALTH_0_TO_19 Literal ""health-00to19.gif"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HEALTH_UNKNOWN Literal ""empty.gif"" FieldDeclaration /**
     * The percentage health score (from 0 to 100 inclusive).
     */ Modifier private BasicType int VariableDeclarator score FieldDeclaration /**
     * The path to the icon corresponding to this health score or <code>null</code> to use the default icon
     * corresponding to the current health score.
     * <p/>
     * If the path begins with a '/' then it will be the absolute path, otherwise the image is assumed to be in one of
     * <code>/images/16x16/</code>, <code>/images/24x24/</code> or <code>/images/32x32/</code> depending on the icon
     * size selected by the user.
     */ Modifier private ReferenceType String VariableDeclarator iconUrl FieldDeclaration /**
     * Recover the health icon's tool-tip when deserializing.
     *
     * @deprecated use {@link #localizibleDescription}
     */ Modifier private transient Annotation Deprecated ReferenceType String VariableDeclarator description FieldDeclaration /**
     * The health icon's tool-tip.
     */ Modifier private ReferenceType Localizable VariableDeclarator localizibleDescription ConstructorDeclaration Modifier public Annotation Deprecated /**
     * Create a new HealthReport.
     *
     * @param score       The percentage health score (from 0 to 100 inclusive).
     * @param iconUrl     The path to the icon corresponding to this {@link Action}'s health or <code>null</code> to
     *                    display the default icon corresponding to the current health score.
     *                    <p/>
     *                    If the path begins with a '/' then it will be the absolute path, otherwise the image is
     *                    assumed to be in one of <code>/images/16x16/</code>, <code>/images/24x24/</code> or
     *                    <code>/images/32x32/</code> depending on the icon size selected by the user.
     *                    When calculating the url to display for absolute paths, the getIconUrl(String) method
     *                    will replace /32x32/ in the path with the appropriate size.
     * @param description The health icon's tool-tip.
     * @deprecated use {@link #HealthReport(int, String, org.jvnet.localizer.Localizable)}
     */ HealthReport FormalParameter BasicType int score FormalParameter ReferenceType String iconUrl FormalParameter ReferenceType String description StatementExpression ExplicitConstructorInvocation MemberReference score MemberReference iconUrl ClassCreator ReferenceType NonLocalizable MemberReference description ConstructorDeclaration Modifier public /**
     * Create a new HealthReport.
     *
     * @param score       The percentage health score (from 0 to 100 inclusive).
     * @param iconUrl     The path to the icon corresponding to this {@link Action}'s health or <code>null</code> to
     *                    display the default icon corresponding to the current health score.
     *                    <p/>
     *                    If the path begins with a '/' then it will be the absolute path, otherwise the image is
     *                    assumed to be in one of <code>/images/16x16/</code>, <code>/images/24x24/</code> or
     *                    <code>/images/32x32/</code> depending on the icon size selected by the user.
     *                    When calculating the url to display for absolute paths, the getIconUrl(String) method
     *                    will replace /32x32/ in the path with the appropriate size.
     * @param description The health icon's tool-tip.
     */ HealthReport FormalParameter BasicType int score FormalParameter ReferenceType String iconUrl FormalParameter ReferenceType Localizable description StatementExpression Assignment This MemberReference score MemberReference score = IfStatement BinaryOperation == MemberReference iconUrl Literal null BlockStatement IfStatement BinaryOperation < MemberReference score Literal 20 BlockStatement StatementExpression Assignment This MemberReference iconUrl MemberReference HEALTH_0_TO_19 = IfStatement BinaryOperation < MemberReference score Literal 40 BlockStatement StatementExpression Assignment This MemberReference iconUrl MemberReference HEALTH_20_TO_39 = IfStatement BinaryOperation < MemberReference score Literal 60 BlockStatement StatementExpression Assignment This MemberReference iconUrl MemberReference HEALTH_40_TO_59 = IfStatement BinaryOperation < MemberReference score Literal 80 BlockStatement StatementExpression Assignment This MemberReference iconUrl MemberReference HEALTH_60_TO_79 = BlockStatement StatementExpression Assignment This MemberReference iconUrl MemberReference HEALTH_OVER_80 = End End End End BlockStatement StatementExpression Assignment This MemberReference iconUrl MemberReference iconUrl = End StatementExpression Assignment This MemberReference description Literal null = StatementExpression MethodInvocation MemberReference description setLocalizibleDescription ConstructorDeclaration Modifier public Annotation Deprecated /**
     * Create a new HealthReport.
     *
     * @param score       The percentage health score (from 0 to 100 inclusive).
     * @param description The health icon's tool-tip.
     * @deprecated use {@link #HealthReport(int, org.jvnet.localizer.Localizable)}
     */ HealthReport FormalParameter BasicType int score FormalParameter ReferenceType String description StatementExpression ExplicitConstructorInvocation MemberReference score Literal null MemberReference description ConstructorDeclaration Modifier public /**
     * Create a new HealthReport.
     *
     * @param score       The percentage health score (from 0 to 100 inclusive).
     * @param description The health icon's tool-tip.
     */ HealthReport FormalParameter BasicType int score FormalParameter ReferenceType Localizable description StatementExpression ExplicitConstructorInvocation MemberReference score Literal null MemberReference description ConstructorDeclaration Modifier public /**
     * Create a new HealthReport.
     */ HealthReport StatementExpression ExplicitConstructorInvocation Literal 100 MemberReference HEALTH_UNKNOWN Literal """" MethodDeclaration /**
     * Getter for property 'score'.
     *
     * @return The percentage health score (from 0 to 100 inclusive).
     */ Modifier public Annotation Exported BasicType int getScore ReturnStatement MemberReference score MethodDeclaration /**
     * Setter for property 'score'.
     *
     * @param score Value to set for property 'score'.
     */ Modifier public setScore FormalParameter BasicType int score StatementExpression Assignment This MemberReference score MemberReference score = MethodDeclaration /**
     * Getter for property 'iconUrl'.
     *
     * @return Value for property 'iconUrl'.
     */ Modifier public Annotation Exported ReferenceType String getIconUrl ReturnStatement MemberReference iconUrl MethodDeclaration /**
     * Get's the iconUrl relative to the hudson root url, for the correct size.
     *
     * @param size The size, e.g. 32x32, 24x24 or 16x16.
     * @return The url relative to hudson's root url.
     */ Modifier public ReferenceType String getIconUrl FormalParameter ReferenceType String size IfStatement BinaryOperation == MemberReference iconUrl Literal null BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Hudson RESOURCE_PATH Literal ""/images/"" MemberReference size Literal ""/"" MemberReference HEALTH_UNKNOWN End IfStatement MethodInvocation iconUrl Literal ""/"" startsWith BlockStatement ReturnStatement MethodInvocation iconUrl Literal ""/32x32/"" BinaryOperation + BinaryOperation + Literal ""/"" MemberReference size Literal ""/"" replace End ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Hudson RESOURCE_PATH Literal ""/images/"" MemberReference size Literal ""/"" MemberReference iconUrl MethodDeclaration /**
     * Setter for property 'iconUrl'.
     *
     * @param iconUrl Value to set for property 'iconUrl'.
     */ Modifier public setIconUrl FormalParameter ReferenceType String iconUrl StatementExpression Assignment This MemberReference iconUrl MemberReference iconUrl = MethodDeclaration /**
     * Getter for property 'description'.
     *
     * @return Value for property 'description'.
     */ Modifier public Annotation Exported ReferenceType String getDescription ReturnStatement MethodInvocation MethodInvocation toString getLocalizableDescription MethodDeclaration /**
     * Setter for property 'description'.
     *
     * @param description Value to set for property 'description'.
     */ Modifier public setDescription FormalParameter ReferenceType String description StatementExpression MethodInvocation ClassCreator ReferenceType NonLocalizable MemberReference description setLocalizibleDescription MethodDeclaration /**
     * Getter for property 'localizibleDescription'.
     *
     * @return Value for property 'localizibleDescription'.
     */ Modifier public ReferenceType Localizable getLocalizableDescription ReturnStatement MemberReference localizibleDescription MethodDeclaration /**
     * Setter for property 'localizibleDescription'.
     *
     * @param localizibleDescription Value to set for property 'localizibleDescription'.
     */ Modifier public setLocalizibleDescription FormalParameter ReferenceType Localizable localizibleDescription StatementExpression Assignment This MemberReference localizibleDescription MemberReference localizibleDescription = MethodDeclaration /**
     * Getter for property 'aggregatedReports'.
     *
     * @return Value for property 'aggregatedReports'.
     */ Modifier public ReferenceType List TypeArgument ReferenceType HealthReport getAggregatedReports ReturnStatement MethodInvocation Collections emptyList MethodDeclaration /**
     * Getter for property 'aggregateReport'.
     *
     * @return Value for property 'aggregateReport'.
     */ Modifier public BasicType boolean isAggregateReport ReturnStatement Literal false MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public BasicType int compareTo FormalParameter ReferenceType HealthReport o ReturnStatement TernaryExpression BinaryOperation < This MemberReference score MemberReference o score Literal - 1 TernaryExpression BinaryOperation == This MemberReference score MemberReference o score Literal 0 Literal 1 MethodDeclaration /**
     * Utility method to find the report with the lowest health.
     */ Modifier public static ReferenceType HealthReport min FormalParameter ReferenceType HealthReport a FormalParameter ReferenceType HealthReport b IfStatement BinaryOperation && BinaryOperation == MemberReference a Literal null BinaryOperation == MemberReference b Literal null ReturnStatement Literal null End IfStatement BinaryOperation == MemberReference a Literal null ReturnStatement MemberReference b End IfStatement BinaryOperation == MemberReference b Literal null ReturnStatement MemberReference a End IfStatement BinaryOperation <= MethodInvocation a MemberReference b compareTo Literal 0 ReturnStatement MemberReference a End ReturnStatement MemberReference b MethodDeclaration /**
     * Utility method to find the report with the highest health.
     */ Modifier public static ReferenceType HealthReport max FormalParameter ReferenceType HealthReport a FormalParameter ReferenceType HealthReport b IfStatement BinaryOperation && BinaryOperation == MemberReference a Literal null BinaryOperation == MemberReference b Literal null ReturnStatement Literal null End IfStatement BinaryOperation == MemberReference a Literal null ReturnStatement MemberReference b End IfStatement BinaryOperation == MemberReference b Literal null ReturnStatement MemberReference a End IfStatement BinaryOperation >= MethodInvocation a MemberReference b compareTo Literal 0 ReturnStatement MemberReference a End ReturnStatement MemberReference b MethodDeclaration /**
     * Fix deserialization of older data.
     *
     * @return this.
     */ Modifier private ReferenceType Object readResolve IfStatement BinaryOperation == MemberReference localizibleDescription Literal null BlockStatement StatementExpression Assignment MemberReference localizibleDescription ClassCreator ReferenceType NonLocalizable TernaryExpression BinaryOperation == MemberReference description Literal null Literal """" MemberReference description = End ReturnStatement This ClassDeclaration Modifier private static /**
     * In order to provide backwards compatibility, we use this crazy class to fake out localization.
     */ NonLocalizable FieldDeclaration /**
         * The string that we don't know how to localize
         */ Modifier private final ReferenceType String VariableDeclarator nonLocalizable ConstructorDeclaration Modifier public /**
         * Creates a non-localizable string.
         *
         * @param nonLocalizable the string.
         */ NonLocalizable FormalParameter ReferenceType String nonLocalizable StatementExpression SuperConstructorInvocation Literal null Literal null StatementExpression Assignment This MemberReference nonLocalizable MemberReference nonLocalizable = MethodDeclaration /**
         * {@inheritDoc}
         */ Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Locale locale ReturnStatement MemberReference nonLocalizable MethodDeclaration /**
         * {@inheritDoc}
         */ Modifier public Annotation Override ReferenceType String toString ReturnStatement MemberReference nonLocalizable ReferenceType Localizable ReferenceType Serializable ReferenceType Comparable TypeArgument ReferenceType HealthReport",1
11,11,"CompilationUnit PackageDeclaration hudson.logging Import hudson.FeedAdapter Import hudson.Functions Import hudson.model.AbstractModelObject Import hudson.model.Hudson Import hudson.model.RSS Import hudson.tasks.Mailer Import hudson.util.CopyOnWriteMap Import org.apache.commons.io.filefilter.WildcardFileFilter Import org.kohsuke.stapler.QueryParameter Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.ServletException Import java.io.File Import java.io.FileFilter Import java.io.IOException Import java.text.ParseException Import java.util.ArrayList Import java.util.Calendar Import java.util.GregorianCalendar Import java.util.List Import java.util.Map Import java.util.logging.Level Import java.util.logging.LogRecord Import java.util.logging.Logger ClassDeclaration Modifier public /**
 * Owner of {@link LogRecorder}s, bound to ""/log"".
 *
 * @author Kohsuke Kawaguchi
 */ LogRecorderManager FieldDeclaration /**
     * {@link LogRecorder}s.
     */ Modifier public final transient ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType LogRecorder VariableDeclarator logRecorders ClassCreator ReferenceType CopyOnWriteMap ReferenceType Tree TypeArgument ReferenceType String TypeArgument ReferenceType LogRecorder MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal ""log"" MethodDeclaration Modifier public ReferenceType String getSearchUrl ReturnStatement Literal ""/log"" MethodDeclaration Modifier public ReferenceType LogRecorder getDynamic FormalParameter ReferenceType String token FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp ReturnStatement MethodInvocation MemberReference token getLogRecorder MethodDeclaration Modifier public ReferenceType LogRecorder getLogRecorder FormalParameter ReferenceType String token ReturnStatement MethodInvocation logRecorders MemberReference token get MethodDeclaration /**
     * Loads the configuration from disk.
     */ Modifier public load IOException StatementExpression MethodInvocation logRecorders clear LocalVariableDeclaration ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MethodInvocation Hudson MethodInvocation getRootDir getInstance Literal ""log"" LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation dir Cast ReferenceType FileFilter ClassCreator ReferenceType WildcardFileFilter Literal ""*.xml"" listFiles IfStatement BinaryOperation == MemberReference files Literal null ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator child MemberReference files BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation child getName StatementExpression Assignment MemberReference name MethodInvocation name Literal 0 BinaryOperation - MethodInvocation name length Literal 4 substring = LocalVariableDeclaration ReferenceType LogRecorder VariableDeclarator lr ClassCreator ReferenceType LogRecorder MemberReference name StatementExpression MethodInvocation lr load StatementExpression MethodInvocation logRecorders MemberReference name MemberReference lr put End MethodDeclaration /**
     * Creates a new log recorder.
     */ Modifier public doNewLogRecorder FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter Annotation QueryParameter ReferenceType String name IOException ServletException TryStatement StatementExpression MethodInvocation Hudson MemberReference name checkGoodName CatchClause CatchClauseParameter ParseException e StatementExpression MethodInvocation MemberReference e MemberReference req MemberReference rsp sendError ReturnStatement StatementExpression MethodInvocation logRecorders MemberReference name ClassCreator ReferenceType LogRecorder MemberReference name put StatementExpression MethodInvocation rsp BinaryOperation + MemberReference name Literal ""/configure"" sendRedirect2 MethodDeclaration /**
     * Configure the logging level.
     */ Modifier public doConfigLogger FormalParameter ReferenceType StaplerResponse rsp FormalParameter Annotation QueryParameter ReferenceType String name FormalParameter Annotation QueryParameter ReferenceType String level IOException StatementExpression MethodInvocation Hudson MethodInvocation MemberReference Hudson ADMINISTER checkPermission getInstance LocalVariableDeclaration ReferenceType Level VariableDeclarator lv IfStatement MethodInvocation level Literal ""inherit"" equals StatementExpression Assignment MemberReference lv Literal null = StatementExpression Assignment MemberReference lv MethodInvocation Level MethodInvocation level toUpperCase parse = End StatementExpression MethodInvocation Logger MethodInvocation MemberReference lv setLevel MemberReference name getLogger StatementExpression MethodInvocation rsp Literal ""all"" sendRedirect2 MethodDeclaration /**
     * RSS feed for log entries.
     */ Modifier public doRss FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference req MemberReference rsp MemberReference Hudson logRecords doRss MethodDeclaration /**
     * Renders the given log recorders as RSS.
     */ Modifier static doRss FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter ReferenceType List TypeArgument ReferenceType LogRecord logs IOException ServletException LocalVariableDeclaration ReferenceType String VariableDeclarator level MethodInvocation req Literal ""level"" getParameter IfStatement BinaryOperation != MemberReference level Literal null BlockStatement LocalVariableDeclaration ReferenceType Level VariableDeclarator threshold MethodInvocation Level MemberReference level parse LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType LogRecord VariableDeclarator filtered ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LogRecord ForStatement EnhancedForControl VariableDeclaration ReferenceType LogRecord VariableDeclarator r MemberReference logs BlockStatement IfStatement BinaryOperation >= MethodInvocation r MethodInvocation intValue getLevel MethodInvocation threshold intValue StatementExpression MethodInvocation filtered MemberReference r add End End StatementExpression Assignment MemberReference logs MemberReference filtered = End StatementExpression MethodInvocation RSS Literal ""Hudson log"" Literal """" MemberReference logs ClassCreator ReferenceType FeedAdapter TypeArgument ReferenceType LogRecord MethodDeclaration Modifier public ReferenceType String getEntryTitle FormalParameter ReferenceType LogRecord entry ReturnStatement MethodInvocation entry getMessage MethodDeclaration Modifier public ReferenceType String getEntryUrl FormalParameter ReferenceType LogRecord entry ReturnStatement Literal ""log"" MethodDeclaration Modifier public ReferenceType String getEntryID FormalParameter ReferenceType LogRecord entry ReturnStatement MethodInvocation String MethodInvocation entry getSequenceNumber valueOf MethodDeclaration Modifier public ReferenceType String getEntryDescription FormalParameter ReferenceType LogRecord entry ReturnStatement MethodInvocation Functions MemberReference entry printLogRecord MethodDeclaration Modifier public ReferenceType Calendar getEntryTimestamp FormalParameter ReferenceType LogRecord entry LocalVariableDeclaration ReferenceType GregorianCalendar VariableDeclarator cal ClassCreator ReferenceType GregorianCalendar StatementExpression MethodInvocation cal MethodInvocation entry getMillis setTimeInMillis ReturnStatement MemberReference cal MethodDeclaration Modifier public ReferenceType String getEntryAuthor FormalParameter ReferenceType LogRecord entry ReturnStatement MethodInvocation Mailer MethodInvocation getAdminAddress descriptor MemberReference req MemberReference rsp forwardToRss ReferenceType AbstractModelObject",1
191,191,"CompilationUnit PackageDeclaration hudson.scm Import hudson.model.AbstractBuild Import hudson.model.TaskAction Import hudson.model.BuildBadgeAction Import hudson.security.Permission Import hudson.security.ACL Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.ServletException Import java.io.IOException ClassDeclaration Modifier public abstract /**
 * Common part of {@link CVSSCM.TagAction} and {@link SubversionTagAction}.
 *
 * <p>
 * This class implements the action that tags the modules. Derived classes
 * need to provide <tt>tagForm.jelly</tt> view that displays a form for
 * letting user start tagging.
 *
 * @author Kohsuke Kawaguchi
 */ AbstractScmTagAction FieldDeclaration Modifier final protected ReferenceType AbstractBuild VariableDeclarator build ConstructorDeclaration Modifier protected AbstractScmTagAction FormalParameter ReferenceType AbstractBuild build StatementExpression Assignment This MemberReference build MemberReference build = MethodDeclaration Modifier public final ReferenceType String getUrlName ReturnStatement Literal ""tagBuild"" MethodDeclaration /**
     * Defaults to {@link SCM#TAG}.
     */ Modifier protected ReferenceType Permission getPermission ReturnStatement MemberReference SCM TAG MethodDeclaration Modifier public ReferenceType AbstractBuild getBuild ReturnStatement MemberReference build MethodDeclaration /**
     * This message is shown as the tool tip of the build badge icon.
     */ Modifier public ReferenceType String getTooltip ReturnStatement Literal null MethodDeclaration /**
     * Returns true if the build is tagged already.
     */ Modifier public abstract BasicType boolean isTagged MethodDeclaration Modifier protected ReferenceType ACL getACL ReturnStatement MethodInvocation build getACL MethodDeclaration Modifier public doIndex FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This MethodInvocation chooseAction getView MethodDeclaration Modifier protected synchronized ReferenceType String chooseAction IfStatement BinaryOperation != MemberReference workerThread Literal null ReturnStatement Literal ""inProgress.jelly"" End ReturnStatement Literal ""tagForm.jelly"" ReferenceType TaskAction ReferenceType BuildBadgeAction",0
112,112,"CompilationUnit PackageDeclaration hudson.scm.browsers Import hudson.Extension Import hudson.Util Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.scm.CVSChangeLogSet Import hudson.scm.CVSChangeLogSet.File Import hudson.scm.CVSChangeLogSet.Revision Import hudson.scm.CVSRepositoryBrowser Import hudson.scm.RepositoryBrowser Import hudson.util.FormValidation Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter Import javax.servlet.ServletException Import java.io.IOException Import java.net.URL Import java.util.regex.Pattern ClassDeclaration Modifier public final /**
 * Repository browser for CVS in a FishEye server.
 */ FishEyeCVS FieldDeclaration /**
     * The URL of the FishEye repository, e.g.
     * <tt>http://deadlock.netbeans.org/fisheye/browse/netbeans/</tt>
     */ Modifier public final ReferenceType URL VariableDeclarator url ConstructorDeclaration Modifier public Annotation DataBoundConstructor FishEyeCVS FormalParameter ReferenceType URL url StatementExpression Assignment This MemberReference url MethodInvocation MemberReference url normalizeToEndWithSlash = MethodDeclaration Modifier public Annotation Override ReferenceType URL getDiffLink FormalParameter ReferenceType File file IOException LocalVariableDeclaration ReferenceType Revision VariableDeclarator r ClassCreator ReferenceType Revision MethodInvocation file getRevision LocalVariableDeclaration ReferenceType Revision VariableDeclarator p MethodInvocation r getPrevious IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement Literal null End ReturnStatement ClassCreator ReferenceType URL MemberReference url BinaryOperation + MethodInvocation MethodInvocation file getFullName trimHeadSlash ClassCreator MethodInvocation BinaryOperation + Literal ""r1="" MemberReference p add MethodInvocation BinaryOperation + Literal ""r2="" MemberReference r add ReferenceType QueryBuilder MethodInvocation url getQuery MethodDeclaration Modifier public Annotation Override ReferenceType URL getFileLink FormalParameter ReferenceType File file IOException ReturnStatement ClassCreator ReferenceType URL MemberReference url BinaryOperation + MethodInvocation MethodInvocation file getFullName trimHeadSlash ClassCreator ReferenceType QueryBuilder MethodInvocation url getQuery MethodDeclaration Modifier public Annotation Override ReferenceType URL getChangeSetLink FormalParameter ReferenceType CVSChangeLogSet ReferenceType CVSChangeLog changeSet IOException ReturnStatement Literal null ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement Literal ""FishEye"" MethodDeclaration Modifier public ReferenceType FormValidation doCheck FormalParameter Annotation QueryParameter ReferenceType String value IOException ServletException StatementExpression Assignment MemberReference value MethodInvocation Util MemberReference value fixEmpty = IfStatement BinaryOperation == MemberReference value Literal null ReturnStatement MethodInvocation FormValidation ok End IfStatement MethodInvocation ! value Literal ""/"" endsWith StatementExpression Assignment MemberReference value Literal '/' += End IfStatement MethodInvocation ! URL_PATTERN MethodInvocation matches MemberReference value matcher ReturnStatement MethodInvocation FormValidation Literal ""The URL should end like <tt>.../browse/foobar/</tt>"" errorWithMarkup End IfStatement MethodInvocation ! Hudson MethodInvocation MemberReference Hudson ADMINISTER hasPermission getInstance ReturnStatement MethodInvocation FormValidation ok End LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator finalValue MemberReference value ReturnStatement ClassCreator MethodInvocation check ReferenceType FormValidation ReferenceType URLCheck MethodDeclaration Modifier protected Annotation Override ReferenceType FormValidation check IOException ServletException TryStatement IfStatement MethodInvocation MethodInvocation ClassCreator ReferenceType URL MemberReference finalValue open Literal ""FishEye"" findText BlockStatement ReturnStatement MethodInvocation FormValidation ok BlockStatement ReturnStatement MethodInvocation FormValidation Literal ""This is a valid URL but it doesn't look like FishEye"" error End CatchClause CatchClauseParameter IOException e ReturnStatement MethodInvocation MemberReference finalValue MemberReference e handleIOException FieldDeclaration Modifier private final static ReferenceType Pattern VariableDeclarator URL_PATTERN MethodInvocation Pattern Literal "".+/browse/[^/]+/"" compile ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType CVSRepositoryBrowser",0
414,414,,1
571,571,,0
40,40,"CompilationUnit PackageDeclaration hudson.slaves Import java.util.Map Import java.util.WeakHashMap Import hudson.model.Computer Import hudson.model.Hudson Import hudson.model.PeriodicWork Import hudson.triggers.SafeTimerTask Import hudson.Extension ClassDeclaration Modifier public Annotation Extension /**
 * Periodically checks the slaves and try to reconnect dead slaves.
 *
 * @author Kohsuke Kawaguchi
 * @author Stephen Connolly
 */ ComputerRetentionWork FieldDeclaration /**
     * Use weak hash map to avoid leaking {@link Computer}.
     */ Modifier private final ReferenceType Map TypeArgument ReferenceType Computer TypeArgument ReferenceType Long VariableDeclarator nextCheck ClassCreator ReferenceType WeakHashMap TypeArgument ReferenceType Computer TypeArgument ReferenceType Long MethodDeclaration Modifier public BasicType long getRecurrencePeriod ReturnStatement MemberReference MIN MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier protected Annotation SuppressWarnings Literal ""unchecked"" doRun LocalVariableDeclaration Modifier final BasicType long VariableDeclarator startRun MethodInvocation System currentTimeMillis ForStatement EnhancedForControl VariableDeclaration ReferenceType Computer VariableDeclarator c MethodInvocation Hudson MethodInvocation getComputers getInstance BlockStatement IfStatement BinaryOperation || MethodInvocation ! nextCheck MemberReference c containsKey BinaryOperation > MemberReference startRun MethodInvocation nextCheck MemberReference c get BlockStatement LocalVariableDeclaration Modifier final BasicType long VariableDeclarator waitInMins MethodInvocation Math Literal 1 MethodInvocation Math Literal 60 MethodInvocation c MethodInvocation MemberReference c check getRetentionStrategy max min StatementExpression MethodInvocation nextCheck MemberReference c BinaryOperation + MemberReference startRun BinaryOperation * BinaryOperation * MemberReference waitInMins Literal 1000 Literal 60 put End End ReferenceType PeriodicWork",0
459,459,,0
211,211,"CompilationUnit PackageDeclaration hudson.search Import hudson.util.EditDistance Import org.kohsuke.stapler.Ancestor Import org.kohsuke.stapler.QueryParameter Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.export.DataWriter Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import org.kohsuke.stapler.export.Flavor Import javax.servlet.ServletException Import javax.servlet.http.HttpServletResponse.SC_NOT_FOUND  Import java.io.IOException Import java.util.AbstractList Import java.util.ArrayList Import java.util.Collections Import java.util.HashSet Import java.util.List Import java.util.Set ClassDeclaration Modifier public /**
 * Web-bound object that serves QuickSilver-like search requests.
 *
 * @author Kohsuke Kawaguchi
 */ Search MethodDeclaration Modifier public doIndex FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Ancestor VariableDeclarator l MethodInvocation req getAncestors ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation l size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType Ancestor VariableDeclarator a MethodInvocation l MemberReference i get IfStatement BinaryOperation instanceof MethodInvocation a getObject ReferenceType SearchableModelObject BlockStatement LocalVariableDeclaration ReferenceType SearchableModelObject VariableDeclarator smo Cast ReferenceType SearchableModelObject MethodInvocation a getObject LocalVariableDeclaration ReferenceType SearchIndex VariableDeclarator index MethodInvocation smo getSearchIndex LocalVariableDeclaration ReferenceType String VariableDeclarator query MethodInvocation req Literal ""q"" getParameter IfStatement BinaryOperation != MemberReference query Literal null BlockStatement LocalVariableDeclaration ReferenceType SuggestedItem VariableDeclarator target MethodInvocation MemberReference index MemberReference query find IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation rsp BinaryOperation + MethodInvocation a getUrl MethodInvocation target getUrl sendRedirect2 ReturnStatement End End End End StatementExpression MethodInvocation rsp MemberReference SC_NOT_FOUND setStatus StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""search-failed.jelly"" getView MethodDeclaration /**
     * Used by OpenSearch auto-completion. Returns JSON array of the form:
     *
     * <pre>
     * [""queryString"",[""comp1"",""comp2"",...]]
     * </pre>
     *
     * See http://developer.mozilla.org/en/docs/Supporting_search_suggestions_in_search_plugins
     */ Modifier public doSuggestOpenSearch FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter Annotation QueryParameter ReferenceType String q IOException ServletException LocalVariableDeclaration ReferenceType DataWriter VariableDeclarator w MethodInvocation Flavor.JSON Literal null MemberReference rsp createDataWriter StatementExpression MethodInvocation w startArray StatementExpression MethodInvocation w MemberReference q value StatementExpression MethodInvocation w startArray ForStatement EnhancedForControl VariableDeclaration ReferenceType SuggestedItem VariableDeclarator item MethodInvocation MemberReference req MemberReference q getSuggestions StatementExpression MethodInvocation w MethodInvocation item getPath value End StatementExpression MethodInvocation w endArray StatementExpression MethodInvocation w endArray MethodDeclaration /**
     * Used by search box auto-completion. Returns JSON array.
     */ Modifier public doSuggest FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter Annotation QueryParameter ReferenceType String query IOException ServletException LocalVariableDeclaration ReferenceType Result VariableDeclarator r ClassCreator ReferenceType Result ForStatement EnhancedForControl VariableDeclaration ReferenceType SuggestedItem VariableDeclarator item MethodInvocation MemberReference req MemberReference query getSuggestions StatementExpression MethodInvocation r.suggestions ClassCreator ReferenceType Item MethodInvocation item getPath add End StatementExpression MethodInvocation rsp MemberReference req MemberReference r MemberReference Flavor JSON serveExposedBean MethodDeclaration /**
     * Gets the list of suggestions that match the given query.
     *
     * @return
     *      can be empty but never null. The size of the list is always smaller than
     *      a certain threshold to avoid showing too many options. 
     */ Modifier public ReferenceType List TypeArgument ReferenceType SuggestedItem getSuggestions FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType String query LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator paths ClassCreator ReferenceType HashSet TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SuggestedItem VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType SuggestedItem ForStatement EnhancedForControl VariableDeclaration ReferenceType SuggestedItem VariableDeclarator i MethodInvocation MethodInvocation MemberReference req makeSuggestIndex MemberReference query suggest BlockStatement IfStatement BinaryOperation > MethodInvocation r size Literal 20 BreakStatement End IfStatement MethodInvocation paths MethodInvocation i getPath add StatementExpression MethodInvocation r MemberReference i add End End ReturnStatement MemberReference r MethodDeclaration /**
     * Creates merged search index for suggestion.
     */ Modifier private ReferenceType SearchIndex makeSuggestIndex FormalParameter ReferenceType StaplerRequest req LocalVariableDeclaration ReferenceType SearchIndexBuilder VariableDeclarator builder ClassCreator ReferenceType SearchIndexBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Ancestor VariableDeclarator a MethodInvocation req getAncestors BlockStatement IfStatement BinaryOperation instanceof MethodInvocation a getObject ReferenceType SearchableModelObject BlockStatement LocalVariableDeclaration ReferenceType SearchableModelObject VariableDeclarator smo Cast ReferenceType SearchableModelObject MethodInvocation a getObject StatementExpression MethodInvocation builder MethodInvocation smo getSearchIndex add End End ReturnStatement MethodInvocation builder make ClassDeclaration Modifier public static Annotation ExportedBean Result FieldDeclaration Modifier public Annotation Exported ReferenceType List TypeArgument ReferenceType Item VariableDeclarator suggestions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Item ClassDeclaration Modifier public static Annotation ExportedBean ElementValuePair defaultVisibility Literal 999 Item FieldDeclaration Modifier public Annotation Exported ReferenceType String VariableDeclarator name ConstructorDeclaration Modifier public Item FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name = EnumDeclaration Modifier private Mode EnumBody EnumConstantDeclaration FIND MethodDeclaration find FormalParameter ReferenceType SearchIndex index FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result StatementExpression MethodInvocation index MemberReference token MemberReference result find EnumConstantDeclaration SUGGEST MethodDeclaration find FormalParameter ReferenceType SearchIndex index FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result StatementExpression MethodInvocation index MemberReference token MemberReference result suggest MethodDeclaration Modifier abstract find FormalParameter ReferenceType SearchIndex index FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result MethodDeclaration /**
     * Performs a search and returns the match, or null if no match was found.
     */ Modifier public static ReferenceType SuggestedItem find FormalParameter ReferenceType SearchIndex index FormalParameter ReferenceType String query LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SuggestedItem VariableDeclarator r MethodInvocation MemberReference Mode FIND MemberReference index MemberReference query find IfStatement MethodInvocation r isEmpty ReturnStatement Literal null ReturnStatement MethodInvocation r Literal 0 get End MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType SuggestedItem suggest FormalParameter ReferenceType SearchIndex index FormalParameter Modifier final ReferenceType String tokenList ClassDeclaration Tag FieldDeclaration Modifier final ReferenceType SuggestedItem VariableDeclarator item FieldDeclaration Modifier final BasicType int VariableDeclarator distance FieldDeclaration /** If the path to this suggestion starts with the token list, 1. Otherwise 0. */ Modifier final BasicType int VariableDeclarator prefixMatch ConstructorDeclaration Tag FormalParameter ReferenceType SuggestedItem i StatementExpression Assignment MemberReference item MemberReference i = StatementExpression Assignment MemberReference distance MethodInvocation EditDistance MethodInvocation i getPath MemberReference tokenList editDistance = StatementExpression Assignment MemberReference prefixMatch TernaryExpression MethodInvocation i MethodInvocation MemberReference tokenList startsWith getPath Literal 1 Literal 0 = MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Tag that LocalVariableDeclaration BasicType int VariableDeclarator r BinaryOperation - This MemberReference prefixMatch MemberReference that prefixMatch IfStatement BinaryOperation != MemberReference r Literal 0 ReturnStatement MemberReference - r End ReturnStatement BinaryOperation - This MemberReference distance MemberReference that distance ReferenceType Comparable TypeArgument ReferenceType Tag LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Tag VariableDeclarator buf ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Tag LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SuggestedItem VariableDeclarator items MethodInvocation MemberReference Mode SUGGEST MemberReference index MemberReference tokenList find ForStatement EnhancedForControl VariableDeclaration ReferenceType SuggestedItem VariableDeclarator i MemberReference items StatementExpression MethodInvocation buf ClassCreator ReferenceType Tag MemberReference i add End StatementExpression MethodInvocation Collections MemberReference buf sort StatementExpression MethodInvocation items clear ForStatement EnhancedForControl VariableDeclaration ReferenceType Tag VariableDeclarator t MemberReference buf StatementExpression MethodInvocation items MemberReference t item add End ReturnStatement MemberReference items ClassDeclaration Modifier final static TokenList FieldDeclaration Modifier private final ReferenceType String VariableDeclarator tokens ConstructorDeclaration Modifier public TokenList FormalParameter ReferenceType String tokenList StatementExpression Assignment MemberReference tokens MethodInvocation tokenList Literal ""(?<=\\s)(?=\\S)"" split = MethodDeclaration Modifier public BasicType int length ReturnStatement MemberReference tokens length MethodDeclaration /**
         * Returns {@link List} such that its <tt>get(end)</tt>
         * returns the concatanation of [token_start,...,token_end]
         * (both end inclusive.)
         */ Modifier public ReferenceType List TypeArgument ReferenceType String subSequence FormalParameter Modifier final BasicType int start ReturnStatement ClassCreator ReferenceType AbstractList TypeArgument ReferenceType String MethodDeclaration Modifier public ReferenceType String get FormalParameter BasicType int index LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference start BinaryOperation <= MemberReference i BinaryOperation + MemberReference start MemberReference index MemberReference ++ i StatementExpression MethodInvocation buf MemberReference ArraySelector MemberReference i tokens append End ReturnStatement MethodInvocation buf MethodInvocation trim toString MethodDeclaration Modifier public BasicType int size ReturnStatement BinaryOperation - MemberReference tokens length MemberReference start MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType SuggestedItem find FormalParameter ReferenceType Mode m FormalParameter ReferenceType SearchIndex index FormalParameter ReferenceType String tokenList LocalVariableDeclaration ReferenceType TokenList VariableDeclarator tokens ClassCreator ReferenceType TokenList MemberReference tokenList IfStatement BinaryOperation == MethodInvocation tokens length Literal 0 ReturnStatement MethodInvocation Collections emptyList End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SuggestedItem VariableDeclarator paths ArrayCreator ReferenceType List BinaryOperation + MethodInvocation tokens length Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MethodInvocation tokens length MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i paths ClassCreator ReferenceType ArrayList TypeArgument ReferenceType SuggestedItem = End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SearchItem VariableDeclarator items ClassCreator ReferenceType ArrayList TypeArgument ReferenceType SearchItem LocalVariableDeclaration BasicType int VariableDeclarator w Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation tokens Literal 0 subSequence BlockStatement StatementExpression MethodInvocation items clear StatementExpression MethodInvocation m MemberReference index MemberReference token MemberReference items find ForStatement EnhancedForControl VariableDeclaration ReferenceType SearchItem VariableDeclarator si MemberReference items StatementExpression MemberReference ArraySelector MemberReference w MethodInvocation ClassCreator ReferenceType SuggestedItem MemberReference si add paths End StatementExpression MemberReference ++ w End ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 1 BinaryOperation < MemberReference j MethodInvocation tokens length MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference w Literal 1 = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation tokens MemberReference j subSequence BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType SuggestedItem VariableDeclarator r MemberReference ArraySelector MemberReference j paths BlockStatement StatementExpression MethodInvocation items clear StatementExpression MethodInvocation m MethodInvocation r.item getSearchIndex MemberReference token MemberReference items find ForStatement EnhancedForControl VariableDeclaration ReferenceType SearchItem VariableDeclarator i MemberReference items StatementExpression MemberReference ArraySelector BinaryOperation + MemberReference j MemberReference w MethodInvocation ClassCreator ReferenceType SuggestedItem MemberReference r MemberReference i add paths End End StatementExpression MemberReference ++ w End End ReturnStatement MemberReference ArraySelector MethodInvocation tokens length paths",1
564,564,,0
454,454,,0
285,285,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.DescriptorExtensionList Import hudson.Extension Import hudson.Launcher Import hudson.model.Action Import hudson.model.Build Import hudson.model.BuildListener Import hudson.model.Describable Import hudson.model.Project Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.AbstractBuild Import java.util.List Import java.util.ArrayList Import java.util.Collections Import java.util.Comparator ClassDeclaration Modifier public abstract /**
 * {@link BuildStep}s that run after the build is completed.
 *
 * <p>
 * To register a custom {@link Publisher} from a plugin,
 * put {@link Extension} on your descriptor implementation.
 *
 * <p>
 * Starting 1.178, publishers are exposed to all kinds of different
 * project type, not just the freestyle project type (in particular,
 * the native maven2 job type.) This is convenient default for
 * {@link Publisher}s in particular initially, but we encourage advanced
 * plugins to consider writing MavenReporter, as it offers the
 * potential of reducing the amount of configuration needed to run the plugin.
 *
 * For those plugins that don't want {@link Publisher} to show up in
 * different job type, use {@link BuildStepDescriptor} for the base type
 * of your descriptor to control which job type it supports.
 *
 * @author Kohsuke Kawaguchi
 */ Publisher ConstructorDeclaration Modifier protected /**
     * @deprecated
     *      Don't extend from {@link Publisher} directly. Instead, choose {@link Recorder} or {@link Notifier}
     *      as your base class.
     */ Publisher MethodDeclaration /**
     * Default implementation that does nothing.
     */ Modifier public Annotation Deprecated Annotation Override BasicType boolean prebuild FormalParameter ReferenceType Build build FormalParameter ReferenceType BuildListener listener ReturnStatement Literal true MethodDeclaration /**
     * Default implementation that does nothing.
     */ Modifier public Annotation Deprecated Annotation Override ReferenceType Action getProjectAction FormalParameter ReferenceType Project project ReturnStatement Literal null MethodDeclaration /**
     * Returne true if this {@link Publisher} needs to run after the build result is
     * fully finalized.
     *
     * <p>
     * The execution of normal {@link Publisher}s are considered within a part
     * of the build. This allows publishers to mark the build as a failure, or
     * to include their execution time in the total build time.
     *
     * <p>
     * So normally, that is the preferrable behavior, but in a few cases
     * this is problematic. One of such cases is when a publisher needs to
     * trigger other builds, whcih in turn need to see this build as a
     * completed build. Those plugins that need to do this can return true
     * from this method, so that the {@link #perform(AbstractBuild, Launcher, BuildListener)} 
     * method is called after the build is marked as completed.
     *
     * <p>
     * When {@link Publisher} behaves this way, note that they can no longer
     * change the build status anymore.
     *
     * @author Kohsuke Kawaguchi
     * @since 1.153
     */ Modifier public BasicType boolean needsToRunAfterFinalized ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType Publisher getDescriptor ReturnStatement MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance ClassDeclaration Modifier public final static /**
     * {@link Publisher} has a special sort semantics that requires a subtype.
     *
     * @see DescriptorExtensionList#create(Hudson, Class) 
     */ DescriptorExtensionListImpl ConstructorDeclaration Modifier public DescriptorExtensionListImpl FormalParameter ReferenceType Hudson hudson StatementExpression SuperConstructorInvocation MemberReference hudson ClassReference ReferenceType Publisher MethodDeclaration Modifier protected Annotation Override ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher sort FormalParameter ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher r LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher VariableDeclarator copy ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher MemberReference r StatementExpression MethodInvocation Collections MemberReference copy This sort ReturnStatement MemberReference copy MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Descriptor TypeArgument ReferenceType Publisher lhs FormalParameter ReferenceType Descriptor TypeArgument ReferenceType Publisher rhs ReturnStatement BinaryOperation - MethodInvocation MemberReference lhs classify MethodInvocation MemberReference rhs classify MethodDeclaration /**
         * If recorder, return 0, if unknown return 1, if notifier returns 2.
         * This is used as a sort key.
         */ Modifier private BasicType int classify FormalParameter ReferenceType Descriptor TypeArgument ReferenceType Publisher d IfStatement ClassReference MethodInvocation MemberReference d clazz isAssignableFrom ReferenceType Recorder ReturnStatement Literal 0 End IfStatement ClassReference MethodInvocation MemberReference d clazz isAssignableFrom ReferenceType Notifier ReturnStatement Literal 2 End LocalVariableDeclaration ReferenceType Class TypeArgument ReferenceType Publisher extends VariableDeclarator kind MethodInvocation PublisherList.KIND MemberReference d get IfStatement BinaryOperation == MemberReference kind ClassReference ReferenceType Recorder ReturnStatement Literal 0 End IfStatement BinaryOperation == MemberReference kind ClassReference ReferenceType Notifier ReturnStatement Literal 2 End ReturnStatement Literal 1 ReferenceType DescriptorExtensionList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher ReferenceType Comparator TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher MethodDeclaration /**
     * Returns all the registered {@link Publisher} descriptors.
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType Publisher getDescriptorList getInstance ReferenceType BuildStepCompatibilityLayer ReferenceType BuildStep ReferenceType Describable TypeArgument ReferenceType Publisher",0
76,76,"CompilationUnit PackageDeclaration hudson.util Import org.apache.tools.ant.types.Resource Import java.io.InputStream Import java.io.IOException ClassDeclaration Modifier public /**
 * Wraps {@link InputStream} to {@link Resource}.
 * @author Kohsuke Kawaguchi
 */ StreamResource FieldDeclaration Modifier private final ReferenceType InputStream VariableDeclarator in ConstructorDeclaration Modifier public /**
     * @param name
     *      Used for display purpose.
     */ StreamResource FormalParameter ReferenceType String name FormalParameter ReferenceType InputStream in StatementExpression Assignment This MemberReference in MemberReference in = StatementExpression MethodInvocation MemberReference name setName MethodDeclaration Modifier public ReferenceType InputStream getInputStream IOException ReturnStatement MemberReference in ReferenceType Resource",1
469,469,,0
190,190,"CompilationUnit PackageDeclaration hudson.matrix Import hudson.Util Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.DataBoundConstructor Import java.util.ArrayList Import java.util.Enumeration Import java.util.Iterator Import java.util.List Import java.util.Arrays ClassDeclaration Modifier public final /**
 * Configuration axis.
 *
 * <p>
 * This class represents a single dimension of the configuration matrix.
 * For example, the JAX-WS RI test configuration might include
 * one axis ""container={glassfish,tomcat,jetty}"" and another axis
 * ""stax={sjsxp,woodstox}"", and so on.
 *
 * @author Kohsuke Kawaguchi
 */ Axis FieldDeclaration /**
     * Name of this axis.
     * Used as a variable name.
     */ Modifier public final ReferenceType String VariableDeclarator name FieldDeclaration /**
     * Possible values for this axis.
     */ Modifier public final ReferenceType List TypeArgument ReferenceType String VariableDeclarator values ConstructorDeclaration Modifier public Axis FormalParameter ReferenceType String name FormalParameter ReferenceType List TypeArgument ReferenceType String values StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference values ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MemberReference values = IfStatement MethodInvocation values isEmpty ThrowStatement ClassCreator ReferenceType IllegalArgumentException End ConstructorDeclaration Modifier public Axis FormalParameter ReferenceType String name FormalParameter ReferenceType String values  StatementExpression ExplicitConstructorInvocation MemberReference name MethodInvocation Arrays MemberReference values asList ConstructorDeclaration Modifier public Annotation DataBoundConstructor /**
     * Used to build {@link Axis} from form.
     *
     * Axis with empty values need to be removed later.
     */ Axis FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference values ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodInvocation Arrays MethodInvocation Util MemberReference value tokenize asList = MethodDeclaration /**
     * Returns ture if this axis is a system-reserved axis
     * that has special treatment.
     */ Modifier public BasicType boolean isSystem ReturnStatement BinaryOperation || MethodInvocation name Literal ""jdk"" equals MethodInvocation name Literal ""label"" equals MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType String iterator ReturnStatement MethodInvocation values iterator MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation values size MethodDeclaration Modifier public ReferenceType String value FormalParameter BasicType int index ReturnStatement MethodInvocation values MemberReference index get MethodDeclaration /**
     * The inverse of {@link #value(int)}.
     */ Modifier public BasicType int indexOf FormalParameter ReferenceType String value ReturnStatement MethodInvocation values MemberReference value indexOf MethodDeclaration /**
     * Axis is fully ordered so that we can convert between a list of axis
     * and a string unambiguously.
     */ Modifier public BasicType int compareTo FormalParameter ReferenceType Axis that ReturnStatement This MemberReference name MethodInvocation MemberReference that name compareTo MethodDeclaration Modifier public ReferenceType String toString ReturnStatement ClassCreator MethodInvocation MemberReference name append MethodInvocation Literal ""={"" append MethodInvocation MethodInvocation Util MemberReference values Literal "","" join append MethodInvocation Literal '}' append MethodInvocation toString ReferenceType StringBuilder MethodDeclaration /**
     * Used for generating the config UI.
     * If the axis is big and occupies a lot of space, use NL for separator
     * to display multi-line text
     */ Modifier public ReferenceType String getValueString LocalVariableDeclaration BasicType int VariableDeclarator len Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator value MemberReference values StatementExpression Assignment MemberReference len MethodInvocation value length += End ReturnStatement MethodInvocation Util MemberReference values TernaryExpression BinaryOperation > MemberReference len Literal 30 Literal ""\n"" Literal "" "" join MethodDeclaration /**
     * Parses the submitted form (where possible values are
     * presented as a list of checkboxes) and creates an axis
     */ Modifier public static ReferenceType Axis parsePrefixed FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator values ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator prefix BinaryOperation + MemberReference name Literal '.' LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation req getParameterNames WhileStatement MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paramName Cast ReferenceType String MethodInvocation e nextElement IfStatement MethodInvocation paramName MemberReference prefix startsWith StatementExpression MethodInvocation values MethodInvocation paramName MethodInvocation prefix length substring add End End IfStatement MethodInvocation values isEmpty ReturnStatement Literal null End ReturnStatement ClassCreator ReferenceType Axis MemberReference name MemberReference values ReferenceType Comparable TypeArgument ReferenceType Axis ReferenceType Iterable TypeArgument ReferenceType String",0
557,557,,1
232,232,"CompilationUnit PackageDeclaration hudson.org.apache.tools.ant.taskdefs.cvslib Import org.apache.tools.ant.BuildException Import org.apache.tools.ant.taskdefs.PumpStreamHandler Import java.io.ByteArrayOutputStream Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream ClassDeclaration /**
 * A dummy stream handler that just passes stuff to the parser.
 *
 * @version $Revision$ $Date$
 */ RedirectingStreamHandler ConstructorDeclaration RedirectingStreamHandler FormalParameter Modifier final ReferenceType ChangeLogParser parser StatementExpression ExplicitConstructorInvocation ClassCreator ReferenceType RedirectingOutputStream MemberReference parser Literal null ConstructorDeclaration RedirectingStreamHandler FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType InputStream in StatementExpression ExplicitConstructorInvocation MemberReference out ClassCreator ReferenceType ByteArrayOutputStream MemberReference in ConstructorDeclaration RedirectingStreamHandler FormalParameter ReferenceType OutputStream out FormalParameter ReferenceType OutputStream err FormalParameter ReferenceType InputStream in StatementExpression SuperConstructorInvocation MemberReference out MemberReference err MemberReference in MethodDeclaration ReferenceType String getErrors TryStatement LocalVariableDeclaration Modifier final ReferenceType ByteArrayOutputStream VariableDeclarator error Cast ReferenceType ByteArrayOutputStream MethodInvocation getErr ReturnStatement MethodInvocation error Literal ""ASCII"" toString CatchClause CatchClauseParameter Exception e ReturnStatement Literal null MethodDeclaration Modifier public stop StatementExpression SuperMethodInvocation stop TryStatement StatementExpression MethodInvocation MethodInvocation close getErr StatementExpression MethodInvocation MethodInvocation close getOut CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e ReferenceType PumpStreamHandler",0
105,105,"CompilationUnit PackageDeclaration hudson Import hudson.model.Hudson Import hudson.util.DescriptorList Import hudson.util.Memoizer Import hudson.util.Iterators Import hudson.ExtensionPoint.LegacyInstancesAreScopedToHudson Import java.util.AbstractList Import java.util.ArrayList Import java.util.Collections Import java.util.Iterator Import java.util.List Import java.util.Vector Import java.util.Comparator Import java.util.concurrent.CopyOnWriteArrayList ClassDeclaration Modifier public /**
 * Retains the known extension instances for the given type 'T'.
 *
 * <p>
 * Extensions are loaded lazily on demand and automatically by using {@link ExtensionFinder}, but this
 * class also provides a mechanism to provide compatibility with the older {@link DescriptorList}-based
 * manual registration,
 *
 * <p>
 * All {@link ExtensionList} instances should be owned by {@link Hudson}, even though
 * extension points can be defined by anyone on any type. Use {@link Hudson#getExtensionList(Class)}
 * and {@link Hudson#getDescriptorList(Class)} to obtain the instances.
 *
 * @param <T>
 *      Type of the extension point. This class holds instances of the subtypes of 'T'. 
 *
 * @author Kohsuke Kawaguchi
 * @since 1.286
 * @see Hudson#getExtensionList(Class)
 * @see Hudson#getDescriptorList(Class)
 */ ExtensionList FieldDeclaration Modifier public final ReferenceType Hudson VariableDeclarator hudson FieldDeclaration Modifier public final ReferenceType Class TypeArgument ReferenceType T VariableDeclarator extensionType FieldDeclaration /**
     * Once discovered, extensions are retained here.
     */ Modifier private volatile Annotation CopyOnWrite ReferenceType List TypeArgument ReferenceType T VariableDeclarator extensions FieldDeclaration /**
     * Place to store manually registered instances with the per-Hudson scope.
     * {@link CopyOnWriteArrayList} is used here to support concurrent iterations and mutation.
     */ Modifier private final ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType T VariableDeclarator legacyInstances ConstructorDeclaration Modifier protected ExtensionList FormalParameter ReferenceType Hudson hudson FormalParameter ReferenceType Class TypeArgument ReferenceType T extensionType StatementExpression ExplicitConstructorInvocation MemberReference hudson MemberReference extensionType ClassCreator ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType T ConstructorDeclaration Modifier protected /**
     *
     * @param legacyStore
     *      Place to store manually registered instances. The version of the constructor that
     *      omits this uses a new {@link Vector}, making the storage lifespan tied to the life of  {@link ExtensionList}.
     *      If the manually registerd instances are scoped to VM level, the caller should pass in a static list. 
     */ ExtensionList FormalParameter ReferenceType Hudson hudson FormalParameter ReferenceType Class TypeArgument ReferenceType T extensionType FormalParameter ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType T legacyStore StatementExpression Assignment This MemberReference hudson MemberReference hudson = StatementExpression Assignment This MemberReference extensionType MemberReference extensionType = StatementExpression Assignment This MemberReference legacyInstances MemberReference legacyStore = MethodDeclaration /**
     * Looks for the extension instance of the given type (subclasses excluded),
     * or return null.
     */ Modifier public TypeParameter U ReferenceType T ReferenceType U get FormalParameter ReferenceType Class TypeArgument ReferenceType U type ForStatement EnhancedForControl VariableDeclaration ReferenceType T VariableDeclarator ext This IfStatement BinaryOperation == MethodInvocation ext getClass MemberReference type ReturnStatement MethodInvocation type MemberReference ext cast End End ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType T iterator ReturnStatement MethodInvocation Iterators MethodInvocation MethodInvocation iterator ensureLoaded readOnly MethodDeclaration Modifier public ReferenceType T get FormalParameter BasicType int index ReturnStatement MethodInvocation MethodInvocation MemberReference index get ensureLoaded MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation MethodInvocation size ensureLoaded MethodDeclaration Modifier public synchronized Annotation Override BasicType boolean remove FormalParameter ReferenceType Object o StatementExpression MethodInvocation legacyInstances MemberReference o remove IfStatement BinaryOperation != MemberReference extensions Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T MemberReference extensions StatementExpression MethodInvocation r MemberReference o remove StatementExpression Assignment MemberReference extensions MethodInvocation MemberReference r sort = End ReturnStatement Literal true MethodDeclaration Modifier public synchronized Annotation Override ReferenceType T remove FormalParameter BasicType int index LocalVariableDeclaration ReferenceType T VariableDeclarator t MethodInvocation MemberReference index get StatementExpression MethodInvocation MemberReference t remove ReturnStatement MemberReference t MethodDeclaration /**
     * Write access will put the instance into a legacy store.
     *
     * @deprecated
     *      Prefer automatic registration.
     */ Modifier public synchronized Annotation Override BasicType boolean add FormalParameter ReferenceType T t StatementExpression MethodInvocation legacyInstances MemberReference t add IfStatement BinaryOperation != MemberReference extensions Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T MemberReference extensions StatementExpression MethodInvocation r MemberReference t add StatementExpression Assignment MemberReference extensions MethodInvocation MemberReference r sort = End ReturnStatement Literal true MethodDeclaration Modifier public Annotation Override add FormalParameter BasicType int index FormalParameter ReferenceType T element StatementExpression MethodInvocation MemberReference element add MethodDeclaration /**
     * Returns {@link ExtensionFinder}s used to search for the extension instances.
     */ Modifier protected ReferenceType Iterable TypeArgument ReferenceType ExtensionFinder extends finders ReturnStatement MethodInvocation hudson ClassReference ReferenceType ExtensionFinder getExtensionList MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType T ensureLoaded IfStatement BinaryOperation != MemberReference extensions Literal null ReturnStatement MemberReference extensions End IfStatement BinaryOperation == MethodInvocation Hudson MethodInvocation getPluginManager getInstance Literal null ReturnStatement MemberReference legacyInstances End SynchronizedStatement This IfStatement BinaryOperation == MemberReference extensions Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator r MethodInvocation load StatementExpression MethodInvocation r MemberReference legacyInstances addAll StatementExpression Assignment MemberReference extensions MethodInvocation MemberReference r sort = End ReturnStatement MemberReference extensions MethodDeclaration /**
     * Loads all the extensions.
     */ Modifier protected ReferenceType List TypeArgument ReferenceType T load LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T ForStatement EnhancedForControl VariableDeclaration ReferenceType ExtensionFinder VariableDeclarator finder MethodInvocation finders StatementExpression MethodInvocation r MethodInvocation finder MemberReference extensionType MemberReference hudson findExtensions addAll End ReturnStatement MemberReference r MethodDeclaration /**
     * If the {@link ExtensionList} implementation requires sorting extensions,
     * override this method to do so.
     *
     * <p>
     * The implementation should copy a list, do a sort, and return the new instance.
     */ Modifier protected ReferenceType List TypeArgument ReferenceType T sort FormalParameter ReferenceType List TypeArgument ReferenceType T r StatementExpression Assignment MemberReference r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T MemberReference r = StatementExpression MethodInvocation Collections MemberReference r ClassCreator ReferenceType Comparator TypeArgument ReferenceType T MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType T lhs FormalParameter ReferenceType T rhs LocalVariableDeclaration ReferenceType Extension VariableDeclarator el MethodInvocation lhs MethodInvocation ClassReference ReferenceType Extension getAnnotation getClass LocalVariableDeclaration ReferenceType Extension VariableDeclarator er MethodInvocation rhs MethodInvocation ClassReference ReferenceType Extension getAnnotation getClass LocalVariableDeclaration BasicType double VariableDeclarator l TernaryExpression BinaryOperation != MemberReference el Literal null MethodInvocation el ordinal Literal 0 LocalVariableDeclaration BasicType double VariableDeclarator r TernaryExpression BinaryOperation != MemberReference er Literal null MethodInvocation er ordinal Literal 0 IfStatement BinaryOperation > MemberReference l MemberReference r ReturnStatement Literal - 1 End IfStatement BinaryOperation < MemberReference l MemberReference r ReturnStatement Literal 1 End ReturnStatement Literal 0 sort ReturnStatement MemberReference r MethodDeclaration Modifier public static TypeParameter T ReferenceType ExtensionList TypeArgument ReferenceType T create FormalParameter ReferenceType Hudson hudson FormalParameter ReferenceType Class TypeArgument ReferenceType T type IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType ExtensionFinder ReturnStatement ClassCreator ReferenceType ExtensionList TypeArgument ReferenceType T MemberReference hudson MemberReference type MethodDeclaration /**
                 * If this ExtensionList is searching for ExtensionFinders, calling hudosn.getExtensionList
                 * results in infinite recursion.
                 */ Modifier protected Annotation Override ReferenceType Iterable TypeArgument ReferenceType ExtensionFinder extends finders ReturnStatement MethodInvocation Collections ClassCreator ReferenceType ExtensionFinder ReferenceType Sezpoz singleton End IfStatement BinaryOperation != MethodInvocation type ClassReference ReferenceType LegacyInstancesAreScopedToHudson getAnnotation Literal null ReturnStatement ClassCreator ReferenceType ExtensionList TypeArgument ReferenceType T MemberReference hudson MemberReference type BlockStatement ReturnStatement ClassCreator ReferenceType ExtensionList TypeArgument ReferenceType T MemberReference hudson MemberReference type MethodInvocation staticLegacyInstances MemberReference type get End FieldDeclaration /**
     * Places to store static-scope legacy instances.
     */ Modifier private final static ReferenceType Memoizer TypeArgument ReferenceType Class TypeArgument ReferenceType CopyOnWriteArrayList VariableDeclarator staticLegacyInstances ClassCreator ReferenceType Memoizer TypeArgument ReferenceType Class TypeArgument ReferenceType CopyOnWriteArrayList MethodDeclaration Modifier public ReferenceType CopyOnWriteArrayList compute FormalParameter ReferenceType Class key ReturnStatement ClassCreator ReferenceType CopyOnWriteArrayList MethodDeclaration /**
     * Exposed for the test harness to clear all legacy extension instances.
     */ Modifier public static clearLegacyInstances StatementExpression MethodInvocation staticLegacyInstances clear TypeParameter T ReferenceType AbstractList TypeArgument ReferenceType T",1
205,205,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.model.Action Import org.apache.maven.reporting.MavenReport Import java.util.List Import java.util.ArrayList Import java.io.Serializable ClassDeclaration Modifier public final /**
 * {@link Action} to display links to the generated {@link MavenReport Maven reports}.
 * @author Kohsuke Kawaguchi
 */ ReportAction FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType Entry VariableDeclarator entries ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Entry ClassDeclaration Modifier public final static Entry FieldDeclaration /**
         * Relative path to the top of the report withtin the project reporting directory.
         */ Modifier public final ReferenceType String VariableDeclarator path FieldDeclaration Modifier public final ReferenceType String VariableDeclarator title ConstructorDeclaration Modifier public Entry FormalParameter ReferenceType String path FormalParameter ReferenceType String title StatementExpression Assignment This MemberReference path MemberReference path = StatementExpression Assignment This MemberReference title MemberReference title = ConstructorDeclaration Modifier public ReportAction MethodDeclaration Modifier protected add FormalParameter ReferenceType Entry e StatementExpression MethodInvocation entries MemberReference e add MethodDeclaration Modifier public ReferenceType String getIconFileName ReturnStatement Literal ""n/a.gif"" MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ReportAction_DisplayName MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""mavenReports"" FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Action ReferenceType Serializable",0
456,456,,0
332,332,CompilationUnit PackageDeclaration hudson.views Import hudson.Extension Import hudson.model.Descriptor Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public LastSuccessColumn MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType ListViewColumn newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType LastSuccessColumn MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages LastSuccessColumn_DisplayName ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn ReferenceType ListViewColumn,0
278,278,"CompilationUnit PackageDeclaration hudson.security Import hudson.model.Descriptor Import hudson.model.Job Import hudson.util.RobustReflectionConverter Import hudson.Extension Import com.thoughtworks.xstream.io.HierarchicalStreamReader Import com.thoughtworks.xstream.converters.UnmarshallingContext Import com.thoughtworks.xstream.mapper.Mapper Import com.thoughtworks.xstream.core.JVM ClassDeclaration Modifier public /**
 * {@link GlobalMatrixAuthorizationStrategy} plus per-project ACL.
 *
 * <p>
 * Per-project ACL is stored in {@link AuthorizationMatrixProperty}.
 *
 * @author Kohsuke Kawaguchi
 */ ProjectMatrixAuthorizationStrategy MethodDeclaration Modifier public Annotation Override ReferenceType ACL getACL FormalParameter ReferenceType Job TypeArgument ? TypeArgument ? project LocalVariableDeclaration ReferenceType AuthorizationMatrixProperty VariableDeclarator amp MethodInvocation project ClassReference ReferenceType AuthorizationMatrixProperty getProperty IfStatement BinaryOperation && BinaryOperation != MemberReference amp Literal null MethodInvocation amp isUseProjectSecurity BlockStatement ReturnStatement MethodInvocation amp MethodInvocation MethodInvocation getRootACL newInheritingACL getACL BlockStatement ReturnStatement MethodInvocation getRootACL End FieldDeclaration Modifier public final static Annotation Extension ReferenceType Descriptor TypeArgument ReferenceType AuthorizationStrategy VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl MethodDeclaration Modifier protected Annotation Override ReferenceType GlobalMatrixAuthorizationStrategy create ReturnStatement ClassCreator ReferenceType ProjectMatrixAuthorizationStrategy MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ProjectMatrixAuthorizationStrategy_DisplayName ClassDeclaration Modifier public static ConverterImpl FieldDeclaration Modifier private ReferenceType RobustReflectionConverter VariableDeclarator ref ConstructorDeclaration Modifier public ConverterImpl FormalParameter ReferenceType Mapper m StatementExpression Assignment MemberReference ref ClassCreator ReferenceType RobustReflectionConverter MemberReference m ClassCreator MethodInvocation bestReflectionProvider ReferenceType JVM = MethodDeclaration Modifier protected ReferenceType GlobalMatrixAuthorizationStrategy create ReturnStatement ClassCreator ReferenceType ProjectMatrixAuthorizationStrategy MethodDeclaration Modifier public ReferenceType Object unmarshal FormalParameter ReferenceType HierarchicalStreamReader reader FormalParameter ReferenceType UnmarshallingContext context LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation reader peekNextChild IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation || MethodInvocation name Literal ""permission"" equals MethodInvocation name Literal ""useProjectSecurity"" equals ReturnStatement SuperMethodInvocation MemberReference reader MemberReference context unmarshal ReturnStatement MethodInvocation ref MemberReference reader MemberReference context unmarshal End MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class type ReturnStatement BinaryOperation == MemberReference type ClassReference ReferenceType ProjectMatrixAuthorizationStrategy ReferenceType GlobalMatrixAuthorizationStrategy ReferenceType ConverterImpl ReferenceType GlobalMatrixAuthorizationStrategy",0
418,418,,0
484,484,,0
398,398,,0
97,97,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.Extension Import hudson.model.Node Import hudson.tools.PropertyDescriptor ClassDeclaration Modifier public abstract /**
 * Descriptor for {@link NodeProperty}.
 *
 * <p>
 * Put {@link Extension} on your descriptor implementation to have it auto-registered.
 *
 * @since 1.286
 * @see NodeProperty
 */ NodePropertyDescriptor ConstructorDeclaration Modifier protected NodePropertyDescriptor FormalParameter ReferenceType Class TypeArgument ReferenceType NodeProperty TypeArgument ? extends clazz StatementExpression SuperConstructorInvocation MemberReference clazz ConstructorDeclaration Modifier protected NodePropertyDescriptor ReferenceType PropertyDescriptor TypeArgument ReferenceType NodeProperty TypeArgument ? TypeArgument ReferenceType Node",1
41,41,"CompilationUnit PackageDeclaration hudson.model Import com.thoughtworks.xstream.XStream Import hudson.CopyOnWrite Import hudson.FeedAdapter Import hudson.Util Import hudson.XmlFile Import hudson.BulkChange Import hudson.tasks.Mailer Import hudson.model.Descriptor.FormException Import hudson.security.ACL Import hudson.security.AccessControlled Import hudson.security.Permission Import hudson.util.RunList Import hudson.util.XStream2 Import net.sf.json.JSONObject Import org.acegisecurity.Authentication Import org.acegisecurity.providers.anonymous.AnonymousAuthenticationToken Import org.kohsuke.stapler.Stapler Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import org.apache.commons.io.filefilter.DirectoryFileFilter Import javax.servlet.ServletException Import java.io.File Import java.io.IOException Import java.io.FileFilter Import java.util.ArrayList Import java.util.Calendar Import java.util.Collection Import java.util.Collections Import java.util.HashMap Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Map Import java.util.Set Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public Annotation ExportedBean /**
 * Represents a user.
 *
 * <p>
 * In Hudson, {@link User} objects are created in on-demand basis;
 * for example, when a build is performed, its change log is computed
 * and as a result commits from users who Hudson has never seen may be discovered.
 * When this happens, new {@link User} object is created.
 *
 * <p>
 * If the persisted record for an user exists, the information is loaded at
 * that point, but if there's no such record, a fresh instance is created from
 * thin air (this is where {@link UserPropertyDescriptor#newInstance(User)} is
 * called to provide initial {@link UserProperty} objects.
 *
 * <p>
 * Such newly created {@link User} objects will be simply GC-ed without
 * ever leaving the persisted record, unless {@link User#save()} method
 * is explicitly invoked (perhaps as a result of a browser submitting a
 * configuration.)
 *
 *
 * @author Kohsuke Kawaguchi
 */ User FieldDeclaration Modifier private final transient ReferenceType String VariableDeclarator id FieldDeclaration Modifier private volatile ReferenceType String VariableDeclarator fullName FieldDeclaration Modifier private volatile ReferenceType String VariableDeclarator description FieldDeclaration /**
     * List of {@link UserProperty}s configured for this project.
     */ Modifier private volatile Annotation CopyOnWrite ReferenceType List TypeArgument ReferenceType UserProperty VariableDeclarator properties ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UserProperty ConstructorDeclaration Modifier private User FormalParameter ReferenceType String id StatementExpression Assignment This MemberReference id MemberReference id = StatementExpression Assignment This MemberReference fullName MemberReference id = StatementExpression MethodInvocation load MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType User that ReturnStatement This MemberReference id MethodInvocation MemberReference that id compareTo MethodDeclaration /**
     * Loads the other data from disk if it's available.
     */ Modifier private synchronized load StatementExpression MethodInvocation properties clear LocalVariableDeclaration ReferenceType XmlFile VariableDeclarator config MethodInvocation getConfigFile TryStatement IfStatement MethodInvocation config exists StatementExpression MethodInvocation config This unmarshal End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE BinaryOperation + Literal ""Failed to load "" MemberReference config MemberReference e log ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType UserProperty VariableDeclarator itr MethodInvocation properties iterator MethodInvocation itr hasNext BlockStatement IfStatement BinaryOperation == MethodInvocation itr next Literal null StatementExpression MethodInvocation itr remove End End ForStatement EnhancedForControl VariableDeclaration ReferenceType UserPropertyDescriptor VariableDeclarator d MethodInvocation UserProperty all BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference d clazz getProperty Literal null BlockStatement LocalVariableDeclaration ReferenceType UserProperty VariableDeclarator up MethodInvocation d This newInstance IfStatement BinaryOperation != MemberReference up Literal null StatementExpression MethodInvocation properties MemberReference up add End End End ForStatement EnhancedForControl VariableDeclaration ReferenceType UserProperty VariableDeclarator p MemberReference properties StatementExpression MethodInvocation p This setUser End MethodDeclaration Modifier public Annotation Exported ReferenceType String getId ReturnStatement MemberReference id MethodDeclaration Modifier public ReferenceType String getUrl ReturnStatement BinaryOperation + Literal ""user/"" MemberReference id MethodDeclaration Modifier public ReferenceType String getSearchUrl ReturnStatement BinaryOperation + Literal ""/user/"" MemberReference id MethodDeclaration /**
     * The URL of the user page.
     */ Modifier public Annotation Exported ElementValuePair visibility Literal 999 ReferenceType String getAbsoluteUrl ReturnStatement BinaryOperation + MethodInvocation Hudson MethodInvocation getRootUrl getInstance MethodInvocation getUrl MethodDeclaration /**
     * Gets the human readable name of this user.
     * This is configurable by the user.
     *
     * @return
     *      never null.
     */ Modifier public Annotation Exported ElementValuePair visibility Literal 999 ReferenceType String getFullName ReturnStatement MemberReference fullName MethodDeclaration /**
     * Sets the human readable name of thie user.
     */ Modifier public setFullName FormalParameter ReferenceType String name IfStatement BinaryOperation == MethodInvocation Util MemberReference name fixEmptyAndTrim Literal null StatementExpression Assignment MemberReference name MemberReference id = End StatementExpression Assignment This MemberReference fullName MemberReference name = MethodDeclaration Modifier public Annotation Exported ReferenceType String getDescription ReturnStatement MemberReference description MethodDeclaration /**
     * Gets the user properties configured for this user.
     */ Modifier public ReferenceType Map TypeArgument ReferenceType Descriptor TypeArgument ReferenceType UserProperty TypeArgument ReferenceType UserProperty getProperties ReturnStatement MethodInvocation Descriptor MemberReference properties toMap MethodDeclaration /**
     * Updates the user object by adding a property.
     */ Modifier public synchronized addProperty FormalParameter ReferenceType UserProperty p IOException LocalVariableDeclaration ReferenceType UserProperty VariableDeclarator old MethodInvocation MethodInvocation p getClass getProperty LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UserProperty VariableDeclarator ps ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UserProperty MemberReference properties IfStatement BinaryOperation != MemberReference old Literal null StatementExpression MethodInvocation ps MemberReference old remove End StatementExpression MethodInvocation ps MemberReference p add StatementExpression MethodInvocation p This setUser StatementExpression Assignment MemberReference properties MemberReference ps = StatementExpression MethodInvocation save MethodDeclaration /**
     * List of all {@link UserProperty}s exposed primarily for the remoting API.
     */ Modifier public Annotation Exported ElementValuePair name Literal ""property"" ElementValuePair inline Literal true ReferenceType List TypeArgument ReferenceType UserProperty getAllProperties ReturnStatement MethodInvocation Collections MemberReference properties unmodifiableList MethodDeclaration /**
     * Gets the specific property, or null.
     */ Modifier public TypeParameter T ReferenceType UserProperty ReferenceType T getProperty FormalParameter ReferenceType Class TypeArgument ReferenceType T clazz ForStatement EnhancedForControl VariableDeclaration ReferenceType UserProperty VariableDeclarator p MemberReference properties BlockStatement IfStatement MethodInvocation clazz MemberReference p isInstance ReturnStatement MethodInvocation clazz MemberReference p cast End End ReturnStatement Literal null MethodDeclaration /**
     * Accepts the new description.
     */ Modifier public synchronized doSubmitDescription FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference Hudson ADMINISTER checkPermission StatementExpression MethodInvocation req Literal ""UTF-8"" setCharacterEncoding StatementExpression Assignment MemberReference description MethodInvocation req Literal ""description"" getParameter = StatementExpression MethodInvocation save StatementExpression MethodInvocation rsp Literal ""."" sendRedirect MethodDeclaration /**
     * Gets the fallback ""unknown"" user instance.
     * <p>
     * This is used to avoid null {@link User} instance.
     */ Modifier public static ReferenceType User getUnknown ReturnStatement MethodInvocation Literal ""unknown"" get MethodDeclaration /**
     * Gets the {@link User} object by its id.
     *
     * @param create
     *      If true, this method will never return null for valid input
     *      (by creating a new {@link User} object if none exists.)
     *      If false, this method will return null if {@link User} object
     *      with the given name doesn't exist.
     */ Modifier public static ReferenceType User get FormalParameter ReferenceType String id FormalParameter BasicType boolean create IfStatement BinaryOperation == MemberReference id Literal null ReturnStatement Literal null End StatementExpression Assignment MemberReference id MethodInvocation id MethodInvocation Literal '/' Literal '_' replace MethodInvocation Literal '<' Literal '_' replace Literal '\\' Literal '_' replace = SynchronizedStatement MemberReference byName LocalVariableDeclaration ReferenceType User VariableDeclarator u MethodInvocation byName MemberReference id get IfStatement BinaryOperation && BinaryOperation == MemberReference u Literal null MemberReference create BlockStatement StatementExpression Assignment MemberReference u ClassCreator ReferenceType User MemberReference id = StatementExpression MethodInvocation byName MemberReference id MemberReference u put End ReturnStatement MemberReference u MethodDeclaration /**
     * Gets the {@link User} object by its id.
     */ Modifier public static ReferenceType User get FormalParameter ReferenceType String id ReturnStatement MethodInvocation MemberReference id Literal true get MethodDeclaration /**
     * Gets the {@link User} object representing the currently logged-in user, or null
     * if the current user is anonymous.
     * @since 1.172
     */ Modifier public static ReferenceType User current LocalVariableDeclaration ReferenceType Authentication VariableDeclarator a MethodInvocation Hudson getAuthentication IfStatement BinaryOperation instanceof MemberReference a ReferenceType AnonymousAuthenticationToken ReturnStatement Literal null End ReturnStatement MethodInvocation MethodInvocation a getName get FieldDeclaration Modifier private static volatile BasicType long VariableDeclarator lastScanned MethodDeclaration /**
     * Gets all the users.
     */ Modifier public static ReferenceType Collection TypeArgument ReferenceType User getAll IfStatement BinaryOperation > BinaryOperation - MethodInvocation System currentTimeMillis MemberReference lastScanned Literal 10000 BlockStatement StatementExpression Assignment MemberReference lastScanned MethodInvocation System currentTimeMillis = LocalVariableDeclaration ReferenceType File VariableDeclarator subdirs MethodInvocation MethodInvocation Cast ReferenceType FileFilter MemberReference DirectoryFileFilter INSTANCE listFiles getRootDir IfStatement BinaryOperation == MemberReference subdirs Literal null ReturnStatement MethodInvocation Collections emptyList End ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator subdir MemberReference subdirs IfStatement ClassCreator MethodInvocation exists ReferenceType File MemberReference subdir Literal ""config.xml"" StatementExpression MethodInvocation User MethodInvocation subdir getName get End End StatementExpression Assignment MemberReference lastScanned MethodInvocation System currentTimeMillis = End SynchronizedStatement MemberReference byName ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType User MethodInvocation byName values MethodDeclaration /**
     * Reloads the configuration from disk.
     */ Modifier public static reload ForStatement EnhancedForControl VariableDeclaration ReferenceType User VariableDeclarator u MethodInvocation byName MethodInvocation ArrayCreator ReferenceType User Literal 0 toArray values StatementExpression MethodInvocation u load End MethodDeclaration /**
     * Returns the user name.
     */ Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation getFullName MethodDeclaration /**
     * Gets the list of {@link Build}s that include changes by this user,
     * by the timestamp order.
     * 
     * TODO: do we need some index for this?
     */ Modifier public ReferenceType List TypeArgument ReferenceType AbstractBuild getBuilds LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractBuild VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractBuild ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject TypeArgument ? TypeArgument ? VariableDeclarator p MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AbstractProject getAllItems getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator b MethodInvocation p getBuilds IfStatement MethodInvocation b This hasParticipant StatementExpression MethodInvocation r MemberReference b add End End End StatementExpression MethodInvocation Collections MemberReference r MemberReference Run ORDER_BY_DATE sort ReturnStatement MemberReference r MethodDeclaration /**
     * Gets all the {@link AbstractProject}s that this user has committed to.
     * @since 1.191
     */ Modifier public ReferenceType Set TypeArgument ReferenceType AbstractProject TypeArgument ? TypeArgument ? getProjects LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject TypeArgument ? TypeArgument ? VariableDeclarator r ClassCreator ReferenceType HashSet TypeArgument ReferenceType AbstractProject TypeArgument ? TypeArgument ? ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject TypeArgument ? TypeArgument ? VariableDeclarator p MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AbstractProject getAllItems getInstance IfStatement MethodInvocation p This hasParticipant StatementExpression MethodInvocation r MemberReference p add End End ReturnStatement MemberReference r MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference fullName MethodDeclaration /**
     * The file we save our configuration.
     */ Modifier final protected ReferenceType XmlFile getConfigFile ReturnStatement ClassCreator ReferenceType XmlFile MemberReference XSTREAM ClassCreator ReferenceType File MethodInvocation getRootDir BinaryOperation + MemberReference id Literal ""/config.xml"" MethodDeclaration /**
     * Gets the directory where Hudson stores user information.
     */ Modifier private static ReferenceType File getRootDir ReturnStatement ClassCreator ReferenceType File MethodInvocation Hudson MethodInvocation getRootDir getInstance Literal ""users"" MethodDeclaration /**
     * Save the settings to a file.
     */ Modifier public synchronized save IOException IfStatement MethodInvocation BulkChange This contains ReturnStatement End StatementExpression MethodInvocation MethodInvocation This write getConfigFile MethodDeclaration /**
     * Exposed remote API.
     */ Modifier public ReferenceType Api getApi ReturnStatement ClassCreator ReferenceType Api This MethodDeclaration /**
     * Accepts submission from the configuration page.
     */ Modifier public doConfigSubmit FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference Hudson ADMINISTER checkPermission StatementExpression MethodInvocation req Literal ""UTF-8"" setCharacterEncoding TryStatement StatementExpression Assignment MemberReference fullName MethodInvocation req Literal ""fullName"" getParameter = StatementExpression Assignment MemberReference description MethodInvocation req Literal ""description"" getParameter = LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator json MethodInvocation req getSubmittedForm LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UserProperty VariableDeclarator props ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UserProperty LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType UserPropertyDescriptor VariableDeclarator d MethodInvocation UserProperty all BlockStatement LocalVariableDeclaration ReferenceType UserProperty VariableDeclarator p MethodInvocation d MemberReference req MethodInvocation json BinaryOperation + Literal ""userProperty"" MemberReference i getJSONObject newInstance StatementExpression MethodInvocation p This setUser StatementExpression MethodInvocation props MemberReference p add End StatementExpression Assignment This MemberReference properties MemberReference props = StatementExpression MethodInvocation save StatementExpression MethodInvocation rsp Literal ""."" sendRedirect CatchClause CatchClauseParameter FormException e StatementExpression MethodInvocation MemberReference e MemberReference req MemberReference rsp sendError MethodDeclaration Modifier public doRssAll FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference req MemberReference rsp Literal "" all builds"" MethodInvocation RunList MethodInvocation getBuilds fromRuns rss MethodDeclaration Modifier public doRssFailed FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference req MemberReference rsp Literal "" regression builds"" MethodInvocation RunList MethodInvocation regressionOnly MethodInvocation getBuilds fromRuns rss MethodDeclaration Modifier private rss FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter ReferenceType String suffix FormalParameter ReferenceType RunList runs IOException ServletException StatementExpression MethodInvocation RSS BinaryOperation + MethodInvocation getDisplayName MemberReference suffix MethodInvocation getUrl MethodInvocation runs newBuilds MemberReference FEED_ADAPTER MemberReference req MemberReference rsp forwardToRss FieldDeclaration /**
     * Keyed by {@link User#id}. This map is used to ensure
     * singleton-per-id semantics of {@link User} objects.
     */ Modifier private final static ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType User VariableDeclarator byName ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType User FieldDeclaration /**
     * Used to load/save user configuration.
     */ Modifier private final static ReferenceType XStream VariableDeclarator XSTREAM ClassCreator ReferenceType XStream2 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType User getLogger StatementExpression MethodInvocation XSTREAM Literal ""user"" ClassReference ReferenceType User alias FieldDeclaration /**
     * {@link FeedAdapter} to produce build status summary in the feed.
     */ Modifier public final static ReferenceType FeedAdapter TypeArgument ReferenceType Run VariableDeclarator FEED_ADAPTER ClassCreator ReferenceType FeedAdapter TypeArgument ReferenceType Run MethodDeclaration Modifier public ReferenceType String getEntryTitle FormalParameter ReferenceType Run entry ReturnStatement BinaryOperation + BinaryOperation + MemberReference entry Literal "" : "" MethodInvocation entry MemberReference message getBuildStatusSummary MethodDeclaration Modifier public ReferenceType String getEntryUrl FormalParameter ReferenceType Run entry ReturnStatement MethodInvocation entry getUrl MethodDeclaration Modifier public ReferenceType String getEntryID FormalParameter ReferenceType Run entry ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal ""tag:"" MethodInvocation entry MethodInvocation getName getParent Literal ':' MethodInvocation entry getId MethodDeclaration Modifier public ReferenceType String getEntryDescription FormalParameter ReferenceType Run entry ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Calendar getEntryTimestamp FormalParameter ReferenceType Run entry ReturnStatement MethodInvocation entry getTimestamp MethodDeclaration Modifier public ReferenceType String getEntryAuthor FormalParameter ReferenceType Run entry ReturnStatement MethodInvocation Mailer MethodInvocation getAdminAddress descriptor MethodDeclaration Modifier public ReferenceType ACL getACL LocalVariableDeclaration Modifier final ReferenceType ACL VariableDeclarator base MethodInvocation Hudson MethodInvocation getAuthorizationStrategy MethodInvocation This getACL getInstance ReturnStatement ClassCreator ReferenceType ACL MethodDeclaration Modifier public BasicType boolean hasPermission FormalParameter ReferenceType Authentication a FormalParameter ReferenceType Permission permission ReturnStatement BinaryOperation || MethodInvocation a MethodInvocation MemberReference id equals getName MethodInvocation base MemberReference a MemberReference permission hasPermission MethodDeclaration Modifier public checkPermission FormalParameter ReferenceType Permission permission StatementExpression MethodInvocation MethodInvocation MemberReference permission checkPermission getACL MethodDeclaration Modifier public BasicType boolean hasPermission FormalParameter ReferenceType Permission permission ReturnStatement MethodInvocation MethodInvocation MemberReference permission hasPermission getACL ReferenceType AbstractModelObject ReferenceType AccessControlled ReferenceType Saveable ReferenceType Comparable TypeArgument ReferenceType User",0
115,115,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.model.Node Import hudson.model.EnvironmentSpecific Import hudson.model.TaskListener Import java.io.IOException InterfaceDeclaration Modifier public /**
 * Represents any concept that can be adapted for a node.
 *
 * Mainly for documentation purposes.
 *
 * @author huybrechts
 * @since 1.286
 * @see EnvironmentSpecific
 * @param <T>
 *      Concrete type that represents the thing that can be adapted.
 */ NodeSpecific MethodDeclaration /**
     * Returns a specialized copy of T for functioning in the given node.
     */ ReferenceType T forNode FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException TypeParameter T ReferenceType NodeSpecific TypeArgument ReferenceType T",0
84,84,"CompilationUnit PackageDeclaration hudson.model Import net.sf.json.JSONObject Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.StaplerRequest Import hudson.Extension ClassDeclaration Modifier public /**
 * {@link ParameterDefinition} for doing file upload.
 *
 * <p>
 * The file will be then placed into the workspace at the beginning of a build.
 *
 * @author Kohsuke Kawaguchi
 */ FileParameterDefinition ConstructorDeclaration Modifier public Annotation DataBoundConstructor FileParameterDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType String description StatementExpression SuperConstructorInvocation MemberReference name MemberReference description MethodDeclaration Modifier public ReferenceType FileParameterValue createValue FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject jo LocalVariableDeclaration ReferenceType FileParameterValue VariableDeclarator p MethodInvocation req ClassReference ReferenceType FileParameterValue MemberReference jo bindJSON StatementExpression MethodInvocation p MethodInvocation getName setLocation StatementExpression MethodInvocation p MethodInvocation getDescription setDescription ReturnStatement MemberReference p ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages FileParameterDefinition_DisplayName MethodDeclaration Modifier public Annotation Override ReferenceType String getHelpFile ReturnStatement Literal ""/help/parameter/file.html"" ReferenceType ParameterDescriptor MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req ThrowStatement ClassCreator ReferenceType UnsupportedOperationException ReferenceType ParameterDefinition",0
100,100,"CompilationUnit PackageDeclaration hudson.model Import hudson.BulkChange Import java.io.IOException InterfaceDeclaration Modifier public /**
 * Object whose state is persisted to XML.
 *
 * @author Kohsuke Kawaguchi
 * @see BulkChange
 * @since 1.249
 */ Saveable MethodDeclaration /**
     * Persists the state of this object into XML.
     *
     * <p>
     * For making a bulk change efficiently, see {@link BulkChange}.
     *
     * @throws IOException
     *      if the persistence failed.
     */ save IOException ConstantDeclaration /**
     * {@link Saveable} that doesn't save anything.
     * @since 1.301.
     */ ReferenceType Saveable VariableDeclarator NOOP ClassCreator ReferenceType Saveable MethodDeclaration Modifier public save IOException",1
521,521,,0
419,419,,0
381,381,,0
284,284,"CompilationUnit PackageDeclaration hudson.util Import com.thoughtworks.xstream.converters.basic.AbstractBasicConverter Import com.thoughtworks.xstream.converters.basic.StringConverter ClassDeclaration Modifier public /**
 * The default {@link StringConverter} in XStream
 * uses {@link String#intern()}, which stresses the
 * (rather limited) PermGen space with a large XML file.
 *
 * <p>
 * Use this to avoid that (instead those strings will
 * now be allocated to the heap space.)
 *
 * @author Kohsuke Kawaguchi
 */ StringConverter2 MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class type ReturnStatement MethodInvocation type ClassReference ReferenceType String equals MethodDeclaration Modifier protected ReferenceType Object fromString FormalParameter ReferenceType String str ReturnStatement MemberReference str ReferenceType AbstractBasicConverter",1
295,295,"CompilationUnit PackageDeclaration hudson.tools Import hudson.FilePath Import hudson.model.DownloadService.Downloadable Import hudson.model.Node Import hudson.model.TaskListener Import net.sf.json.JSONObject Import org.kohsuke.stapler.DataBoundConstructor Import java.io.IOException Import java.util.Arrays Import java.util.Collections Import java.util.List Import java.net.URL ClassDeclaration Modifier public abstract /**
 * Partial convenience implementation of {@link ToolInstaller} that just downloads
 * an archive from the URL and extracts it.
 *
 * <p>
 * Each instance of this is configured to download from a specific URL identified by an ID.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.308
 */ DownloadFromUrlInstaller FieldDeclaration Modifier public final ReferenceType String VariableDeclarator id ConstructorDeclaration Modifier protected Annotation DataBoundConstructor DownloadFromUrlInstaller FormalParameter ReferenceType String id StatementExpression SuperConstructorInvocation Literal null StatementExpression Assignment This MemberReference id MemberReference id = MethodDeclaration /**
     * Checks if the specified expected location already contains the installed version of the tool.
     *
     * This check needs to run fairly efficiently. The current implementation uses the souce URL of {@link Installable},
     * based on the assumption that released bits do not change its content.
     */ Modifier protected BasicType boolean isUpToDate FormalParameter ReferenceType FilePath expectedLocation FormalParameter ReferenceType Installable i IOException InterruptedException LocalVariableDeclaration ReferenceType FilePath VariableDeclarator marker MethodInvocation expectedLocation Literal "".installedFrom"" child ReturnStatement BinaryOperation && MethodInvocation marker exists MethodInvocation marker MethodInvocation MemberReference i url equals readToString MethodDeclaration /**
     * Gets the {@link Installable} identified by {@link #id}.
     *
     * @return null if no such ID is found.
     */ Modifier public ReferenceType Installable getInstallable IOException ForStatement EnhancedForControl VariableDeclaration ReferenceType Installable VariableDeclarator i Cast ReferenceType DescriptorImpl TypeArgument ? MethodInvocation getDescriptor IfStatement MethodInvocation id MemberReference i id equals ReturnStatement MemberReference i End End ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType FilePath performInstallation FormalParameter ReferenceType ToolInstallation tool FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException LocalVariableDeclaration ReferenceType FilePath VariableDeclarator expected MethodInvocation MemberReference tool MemberReference node preferredLocation LocalVariableDeclaration ReferenceType Installable VariableDeclarator inst MethodInvocation getInstallable IfStatement BinaryOperation == MemberReference inst Literal null BlockStatement StatementExpression MethodInvocation log MethodInvocation BinaryOperation + Literal ""Invalid tool ID "" MemberReference id println getLogger ReturnStatement MemberReference expected End IfStatement MethodInvocation MemberReference expected MemberReference inst isUpToDate ReturnStatement MemberReference expected End IfStatement MethodInvocation expected ClassCreator ReferenceType URL MemberReference inst url MemberReference log BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unpacking "" MemberReference inst url Literal "" to "" MemberReference expected Literal "" on "" MethodInvocation node getDisplayName installIfNecessaryFrom BlockStatement StatementExpression MethodInvocation expected MethodInvocation delete Literal "".timestamp"" child LocalVariableDeclaration ReferenceType FilePath VariableDeclarator base MethodInvocation MemberReference expected findPullUpDirectory IfStatement BinaryOperation && BinaryOperation != MemberReference base Literal null BinaryOperation != MemberReference base MemberReference expected StatementExpression MethodInvocation base MemberReference expected moveAllChildrenTo End StatementExpression MethodInvocation expected MethodInvocation MemberReference inst url Literal ""UTF-8"" write Literal "".installedFrom"" child StatementExpression MethodInvocation expected ClassCreator ReferenceType ZipExtractionInstaller ReferenceType ChmodRecAPlusX act End ReturnStatement MemberReference expected MethodDeclaration /**
     * Often an archive contains an extra top-level directory that's unnecessary when extracted on the disk
     * into the expected location. If your installation sources provide that kind of archives, override
     * this method to find the real root location.
     *
     * <p>
     * The caller will ""pull up"" the discovered real root by throw away the intermediate directory,
     * so that the user-configured ""tool home"" directory contains the right files.
     *
     * <p>
     * The default implementation applies some heuristics to auto-determine if the pull up is necessary.
     * This should work for typical archive files.
     *
     * @param root
     *      The directory that contains the extracted archive. This directory contains nothing but the
     *      extracted archive. For example, if the user installed
     *      http://archive.apache.org/dist/ant/binaries/jakarta-ant-1.1.zip , this directory would contain
     *      a single directory ""jakarta-ant"".
     *
     * @return
     *      Return the real top directory inside {@code root} that contains the meat. In the above example,
     *      <tt>root.child(""jakarta-ant"")</tt> should be returned. If there's no directory to pull up,
     *      return null. 
     */ Modifier protected ReferenceType FilePath findPullUpDirectory FormalParameter ReferenceType FilePath root IOException InterruptedException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType FilePath VariableDeclarator children MethodInvocation root list IfStatement BinaryOperation != MethodInvocation children size Literal 1 ReturnStatement Literal null End IfStatement MethodInvocation children MethodInvocation isDirectory Literal 0 get ReturnStatement MethodInvocation children Literal 0 get End ReturnStatement Literal null ClassDeclaration Modifier public static abstract DescriptorImpl ConstructorDeclaration Modifier protected Annotation SuppressWarnings Literal ""deprecation"" DescriptorImpl StatementExpression MethodInvocation Downloadable MethodInvocation MethodInvocation createDownloadable add all MethodDeclaration Modifier protected ReferenceType Downloadable createDownloadable ReturnStatement ClassCreator ReferenceType Downloadable MethodInvocation getId MethodDeclaration /**
         * This ID needs to be unique, and needs to match the ID token in the JSON update file.
         * <p>
         * By default we use the fully-qualified class name of the {@link DownloadFromUrlInstaller} subtype.
         */ Modifier protected ReferenceType String getId ReturnStatement MethodInvocation clazz MethodInvocation Literal '$' Literal '.' replace getName MethodDeclaration /**
         * List of installable tools.
         *
         * <p>
         * The UI uses this information to populate the drop-down. Subtypes can override this method
         * if it wants to change the way the list is filled.
         *
         * @return never null.
         */ Modifier public ReferenceType List TypeArgument ReferenceType Installable extends getInstallables IOException LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator d MethodInvocation Downloadable MethodInvocation getData MethodInvocation getId get IfStatement BinaryOperation == MemberReference d Literal null ReturnStatement MethodInvocation Collections emptyList End ReturnStatement MethodInvocation Arrays Cast ReferenceType InstallableList MethodInvocation JSONObject MemberReference d ClassReference ReferenceType InstallableList toBean asList TypeParameter T ReferenceType DownloadFromUrlInstaller ReferenceType ToolInstallerDescriptor TypeArgument ReferenceType T ClassDeclaration Modifier public static /**
     * Used for JSON databinding to parse the obtained list.
     */ InstallableList FieldDeclaration Modifier public ReferenceType Installable VariableDeclarator list ArrayCreator ReferenceType Installable Literal 0 ClassDeclaration Modifier public static /**
     * Downloadable and installable tool.
     */ Installable FieldDeclaration /**
         * Used internally to uniquely identify the name.
         */ Modifier public ReferenceType String VariableDeclarator id FieldDeclaration /**
         * This is the human readable name.
         */ Modifier public ReferenceType String VariableDeclarator name FieldDeclaration /**
         * URL.
         */ Modifier public ReferenceType String VariableDeclarator url ReferenceType ToolInstaller",0
200,200,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.IOException InterfaceDeclaration Modifier public /**
 * Virtualized {@link Channel} that allows different implementations.
 * 
 * @author Kohsuke Kawaguchi
 */ VirtualChannel MethodDeclaration /**
     * Makes a remote procedure call.
     *
     * <p>
     * Sends {@link Callable} to the remote system, executes it, and returns its result.
     *
     * @throws InterruptedException
     *      If the current thread is interrupted while waiting for the completion.
     * @throws IOException
     *      If there's any error in the communication between {@link Channel}s.
     */ TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType V call FormalParameter ReferenceType Callable TypeArgument ReferenceType V TypeArgument ReferenceType T callable IOException T InterruptedException MethodDeclaration /**
     * Makes an asynchronous remote procedure call.
     *
     * <p>
     * Similar to {@link #call(Callable)} but returns immediately.
     * The result of the {@link Callable} can be obtained through the {@link Future} object.
     *
     * @return
     *      The {@link Future} object that can be used to wait for the completion.
     * @throws IOException
     *      If there's an error during the communication.
     */ TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType Future TypeArgument ReferenceType V callAsync FormalParameter Modifier final ReferenceType Callable TypeArgument ReferenceType V TypeArgument ReferenceType T callable IOException MethodDeclaration /**
     * Performs an orderly shut down of this channel (and the remote peer.)
     *
     * @throws IOException
     *      if the orderly shut-down failed.
     */ close IOException MethodDeclaration /**
     * Waits for this {@link Channel} to be closed down.
     *
     * The close-down of a {@link Channel} might be initiated locally or remotely.
     *
     * @throws InterruptedException
     *      If the current thread is interrupted while waiting for the completion.
     * @since 1.300
     */ Modifier public join InterruptedException MethodDeclaration /**
     * Waits for this {@link Channel} to be closed down, but only up the given milliseconds.
     *
     * @throws InterruptedException
     *      If the current thread is interrupted while waiting for the completion.
     * @since 1.300
     */ Modifier public join FormalParameter BasicType long timeout InterruptedException MethodDeclaration /**
     * Exports an object for remoting to the other {@link Channel}
     * by creating a remotable proxy.
     *
     * <p>
     * All the parameters and return values must be serializable.
     *
     * @param type
     *      Interface to be remoted.
     * @return
     *      the proxy object that implements <tt>T</tt>. This object can be transfered
     *      to the other {@link Channel}, and calling methods on it from the remote side
     *      will invoke the same method on the given local <tt>instance</tt> object.
     */ TypeParameter T ReferenceType T export FormalParameter ReferenceType Class TypeArgument ReferenceType T type FormalParameter ReferenceType T instance",0
181,181,"CompilationUnit PackageDeclaration hudson.security Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.Util Import hudson.Extension Import org.acegisecurity.Authentication Import org.acegisecurity.AuthenticationException Import org.acegisecurity.AuthenticationManager Import org.acegisecurity.BadCredentialsException Import org.acegisecurity.GrantedAuthority Import org.acegisecurity.GrantedAuthorityImpl Import org.acegisecurity.providers.UsernamePasswordAuthenticationToken Import org.acegisecurity.userdetails.UsernameNotFoundException Import org.acegisecurity.userdetails.UserDetailsService Import org.acegisecurity.userdetails.UserDetails Import org.acegisecurity.userdetails.User Import org.jvnet.libpam.PAM Import org.jvnet.libpam.PAMException Import org.jvnet.libpam.UnixUser Import org.jvnet.libpam.impl.CLibrary Import org.springframework.dao.DataAccessException Import org.kohsuke.stapler.DataBoundConstructor Import java.util.Set ClassDeclaration Modifier public /**
 * {@link SecurityRealm} that uses Unix PAM authentication.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.282
 */ PAMSecurityRealm FieldDeclaration Modifier public final ReferenceType String VariableDeclarator serviceName ConstructorDeclaration Modifier public Annotation DataBoundConstructor PAMSecurityRealm FormalParameter ReferenceType String serviceName StatementExpression Assignment MemberReference serviceName MethodInvocation Util MemberReference serviceName fixEmptyAndTrim = IfStatement BinaryOperation == MemberReference serviceName Literal null StatementExpression Assignment MemberReference serviceName Literal ""sshd"" = End StatementExpression Assignment This MemberReference serviceName MemberReference serviceName = MethodDeclaration Modifier public ReferenceType SecurityComponents createSecurityComponents ReturnStatement ClassCreator ReferenceType SecurityComponents ClassCreator ReferenceType AuthenticationManager MethodDeclaration Modifier public ReferenceType Authentication authenticate FormalParameter ReferenceType Authentication authentication AuthenticationException LocalVariableDeclaration ReferenceType String VariableDeclarator username MethodInvocation authentication MethodInvocation toString getPrincipal LocalVariableDeclaration ReferenceType String VariableDeclarator password MethodInvocation authentication MethodInvocation toString getCredentials TryStatement LocalVariableDeclaration ReferenceType UnixUser VariableDeclarator u ClassCreator MethodInvocation MemberReference username MemberReference password authenticate ReferenceType PAM MemberReference serviceName LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator grps MethodInvocation u getGroups LocalVariableDeclaration ReferenceType GrantedAuthority VariableDeclarator groups ArrayCreator ReferenceType GrantedAuthority MethodInvocation grps size LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator g MemberReference grps StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i groups ClassCreator ReferenceType GrantedAuthorityImpl MemberReference g = End ReturnStatement ClassCreator ReferenceType UsernamePasswordAuthenticationToken MemberReference username MemberReference password MemberReference groups CatchClause CatchClauseParameter PAMException e ThrowStatement ClassCreator ReferenceType BadCredentialsException MethodInvocation e getMessage MemberReference e ClassCreator ReferenceType UserDetailsService MethodDeclaration Modifier public ReferenceType UserDetails loadUserByUsername FormalParameter ReferenceType String username UsernameNotFoundException DataAccessException IfStatement MethodInvocation ! UnixUser MemberReference username exists ThrowStatement ClassCreator ReferenceType UsernameNotFoundException BinaryOperation + Literal ""No such Unix user: "" MemberReference username End ReturnStatement ClassCreator ReferenceType User MemberReference username Literal """" Literal true Literal true Literal true Literal true ArrayCreator ReferenceType GrantedAuthority ArrayInitializer MemberReference AUTHENTICATED_AUTHORITY MethodDeclaration Modifier public Annotation Override ReferenceType GroupDetails loadGroupByGroupname FormalParameter Modifier final ReferenceType String groupname UsernameNotFoundException DataAccessException IfStatement BinaryOperation == MethodInvocation CLibrary.libc MemberReference groupname getgrnam Literal null ThrowStatement ClassCreator ReferenceType UsernameNotFoundException MemberReference groupname End ReturnStatement ClassCreator ReferenceType GroupDetails MethodDeclaration Modifier public Annotation Override ReferenceType String getName ReturnStatement MemberReference groupname ClassDeclaration Modifier public final static DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages PAMSecurityRealm_DisplayName ReferenceType Descriptor TypeArgument ReferenceType SecurityRealm MethodDeclaration Modifier public static Annotation Extension ReferenceType DescriptorImpl install IfStatement MethodInvocation ! Hudson isWindows ReturnStatement ClassCreator ReferenceType DescriptorImpl End ReturnStatement Literal null ReferenceType SecurityRealm",0
347,347,"CompilationUnit PackageDeclaration hudson.model Import java.io.IOException Import java.util.ArrayList Import java.util.Arrays Import java.util.List Import javax.servlet.ServletException Import net.sf.json.JSONArray Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import hudson.Extension ClassDeclaration Modifier public /**
 * Keeps a list of the parameters defined for a project.
 *
 * <p>
 * This class also implements {@link Action} so that <tt>index.jelly</tt> provides
 * a form to enter build parameters. 
 */ ParametersDefinitionProperty FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType ParameterDefinition VariableDeclarator parameterDefinitions ConstructorDeclaration Modifier public ParametersDefinitionProperty FormalParameter ReferenceType List TypeArgument ReferenceType ParameterDefinition parameterDefinitions StatementExpression Assignment This MemberReference parameterDefinitions MemberReference parameterDefinitions = ConstructorDeclaration Modifier public ParametersDefinitionProperty FormalParameter ReferenceType ParameterDefinition parameterDefinitions  StatementExpression Assignment This MemberReference parameterDefinitions MethodInvocation Arrays MemberReference parameterDefinitions asList = MethodDeclaration Modifier public ReferenceType AbstractProject TypeArgument ? TypeArgument ? getOwner ReturnStatement MemberReference owner MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ParameterDefinition getParameterDefinitions ReturnStatement MemberReference parameterDefinitions MethodDeclaration Modifier public Annotation Override ReferenceType Action getJobAction FormalParameter ReferenceType AbstractProject TypeArgument ? TypeArgument ? job ReturnStatement This MethodDeclaration Modifier public ReferenceType AbstractProject TypeArgument ? TypeArgument ? getProject ReturnStatement Cast ReferenceType AbstractProject TypeArgument ? TypeArgument ? MemberReference owner MethodDeclaration /**
     * Interprets the form submission and schedules a build for a parameterized job.
     *
     * <p>
     * This method is supposed to be invoked from {@link AbstractProject#doBuild(StaplerRequest, StaplerResponse)}.
     */ Modifier public _doBuild FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException IfStatement MethodInvocation ! req MethodInvocation Literal ""POST"" equals getMethod BlockStatement StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""index.jelly"" getView ReturnStatement End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ParameterValue VariableDeclarator values ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ParameterValue LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator formData MethodInvocation req getSubmittedForm LocalVariableDeclaration ReferenceType JSONArray VariableDeclarator a MethodInvocation JSONArray MethodInvocation formData Literal ""parameter"" get fromObject ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference a BlockStatement LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator jo Cast ReferenceType JSONObject MemberReference o LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation jo Literal ""name"" getString LocalVariableDeclaration ReferenceType ParameterDefinition VariableDeclarator d MethodInvocation MemberReference name getParameterDefinition IfStatement BinaryOperation == MemberReference d Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""No such parameter definition: "" MemberReference name End LocalVariableDeclaration ReferenceType ParameterValue VariableDeclarator parameterValue MethodInvocation d MemberReference req MemberReference jo createValue StatementExpression MethodInvocation values MemberReference parameterValue add End StatementExpression MethodInvocation Hudson MethodInvocation getQueue MethodInvocation MemberReference owner Literal 0 ClassCreator ReferenceType ParametersAction MemberReference values ClassCreator ReferenceType CauseAction ClassCreator ReferenceType Cause ReferenceType UserCause schedule getInstance StatementExpression MethodInvocation rsp Literal ""."" sendRedirect MethodDeclaration Modifier public buildWithParameters FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ParameterValue VariableDeclarator values ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ParameterValue ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterDefinition VariableDeclarator d MemberReference parameterDefinitions BlockStatement LocalVariableDeclaration ReferenceType ParameterValue VariableDeclarator value MethodInvocation d MemberReference req createValue IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation values MemberReference value add BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""Parameter "" MethodInvocation d getName Literal "" was missing."" End End StatementExpression MethodInvocation Hudson MethodInvocation getQueue MethodInvocation MemberReference owner Literal 0 ClassCreator ReferenceType ParametersAction MemberReference values ClassCreator ReferenceType CauseAction ClassCreator ReferenceType Cause ReferenceType UserCause schedule getInstance StatementExpression MethodInvocation rsp Literal ""."" sendRedirect MethodDeclaration /**
     * Gets the {@link ParameterDefinition} of the given name, if any.
     */ Modifier public ReferenceType ParameterDefinition getParameterDefinition FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterDefinition VariableDeclarator pd MemberReference parameterDefinitions IfStatement MethodInvocation pd MethodInvocation MemberReference name equals getName ReturnStatement MemberReference pd End End ReturnStatement Literal null ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType Job extends jobType ReturnStatement ClassReference MethodInvocation MemberReference jobType isAssignableFrom ReferenceType AbstractProject MethodDeclaration Modifier public Annotation Override ReferenceType JobProperty TypeArgument ? newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException IfStatement MethodInvocation formData isNullObject BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator parameterized MethodInvocation formData Literal ""parameterized"" getJSONObject IfStatement MethodInvocation parameterized isNullObject BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ParameterDefinition VariableDeclarator parameterDefinitions MethodInvocation Descriptor MemberReference req MemberReference parameterized Literal ""parameter"" MethodInvocation ParameterDefinition all newInstancesFromHeteroList IfStatement MethodInvocation parameterDefinitions isEmpty ReturnStatement Literal null End ReturnStatement ClassCreator ReferenceType ParametersDefinitionProperty MemberReference parameterDefinitions MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ParametersDefinitionProperty_DisplayName ReferenceType JobPropertyDescriptor MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getIconFileName ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""parameters"" ReferenceType JobProperty TypeArgument ReferenceType AbstractProject TypeArgument ? TypeArgument ? ReferenceType Action",1
449,449,,0
24,24,"CompilationUnit PackageDeclaration hudson.security Import hudson.model.Hudson Import org.acegisecurity.AccessDeniedException Import org.acegisecurity.ui.AccessDeniedHandler Import org.kohsuke.stapler.Stapler Import javax.servlet.ServletException Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse Import javax.servlet.ServletConfig Import javax.servlet.ServletContext Import javax.servlet.http.HttpServletRequest Import javax.servlet.http.HttpServletResponse Import java.io.IOException Import java.util.Enumeration Import java.util.Vector ClassDeclaration Modifier public /**
 * Handles {@link AccessDeniedException} happened during request processing.
 * Specifically, send 403 error code and the login page.
 *
 * @author Kohsuke Kawaguchi
 */ AccessDeniedHandlerImpl MethodDeclaration Modifier public handle FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter ReferenceType AccessDeniedException accessDeniedException IOException ServletException LocalVariableDeclaration ReferenceType HttpServletRequest VariableDeclarator req Cast ReferenceType HttpServletRequest MemberReference request LocalVariableDeclaration ReferenceType HttpServletResponse VariableDeclarator rsp Cast ReferenceType HttpServletResponse MemberReference response StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_FORBIDDEN setStatus StatementExpression MethodInvocation req Literal ""exception"" MemberReference accessDeniedException setAttribute LocalVariableDeclaration ReferenceType Stapler VariableDeclarator stapler ClassCreator ReferenceType Stapler StatementExpression MethodInvocation stapler ClassCreator ReferenceType ServletConfig MethodDeclaration Modifier public ReferenceType String getServletName ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType ServletContext getServletContext ReturnStatement MethodInvocation Hudson MemberReference servletContext getInstance MethodDeclaration Modifier public ReferenceType String getInitParameter FormalParameter ReferenceType String name ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Enumeration getInitParameterNames ReturnStatement ClassCreator MethodInvocation elements ReferenceType Vector init StatementExpression MethodInvocation stapler MemberReference req MemberReference rsp MethodInvocation Hudson getInstance Literal ""/accessDenied"" invoke ReferenceType AccessDeniedHandler",0
314,314,"CompilationUnit PackageDeclaration hudson.model Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.graph_layouter.Layout Import org.kohsuke.graph_layouter.Navigator Import org.kohsuke.graph_layouter.Direction Import javax.servlet.ServletOutputStream Import javax.imageio.ImageIO Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Comparator Import java.util.HashMap Import java.util.List Import java.util.Map Import java.util.Set Import java.util.HashSet Import java.util.Stack Import java.util.Map.Entry Import java.io.IOException Import java.awt.Dimension Import java.awt.Font Import java.awt.Rectangle Import java.awt.Graphics2D Import java.awt.Color Import java.awt.Point Import java.awt.HeadlessException Import java.awt.FontMetrics Import java.awt.geom.AffineTransform Import java.awt.image.BufferedImage ClassDeclaration Modifier public final /**
 * Maintains the build dependencies between {@link AbstractProject}s
 * for efficient dependency computation.
 *
 * <p>
 * The ""master"" data of dependencies are owned/persisted/maintained by
 * individual {@link AbstractProject}s, but because of that, it's relatively
 * slow  to compute backward edges.
 *
 * <p>
 * This class builds the complete bi-directional dependency graph
 * by collecting information from all {@link AbstractProject}s.
 *
 * <p>
 * Once built, {@link DependencyGraph} is immutable, and every time
 * there's a change (which is relatively rare), a new instance
 * will be created. This eliminates the need of synchronization.
 *
 * @see Hudson#getDependencyGraph() 
 * @author Kohsuke Kawaguchi
 */ DependencyGraph FieldDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator forward ClassCreator ReferenceType HashMap TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject FieldDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator backward ClassCreator ReferenceType HashMap TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject FieldDeclaration Modifier private BasicType boolean VariableDeclarator built ConstructorDeclaration Modifier public /**
     * Builds the dependency graph.
     */ DependencyGraph ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AbstractProject getAllItems getInstance StatementExpression MethodInvocation p This buildDependencyGraph End StatementExpression Assignment MemberReference forward MethodInvocation MemberReference forward finalize = StatementExpression Assignment MemberReference backward MethodInvocation MemberReference backward finalize = StatementExpression Assignment MemberReference built Literal true = ConstructorDeclaration Modifier private /**
     * Special constructor for creating an empty graph
     */ DependencyGraph FormalParameter BasicType boolean dummy StatementExpression Assignment MemberReference forward Assignment MemberReference backward MethodInvocation Collections emptyMap = = StatementExpression Assignment MemberReference built Literal true = MethodDeclaration /**
     * Gets all the immediate downstream projects (IOW forward edges) of the given project.
     *
     * @return
     *      can be empty but never null.
     */ Modifier public ReferenceType List TypeArgument ReferenceType AbstractProject getDownstream FormalParameter ReferenceType AbstractProject p ReturnStatement MethodInvocation MemberReference forward MemberReference p get MethodDeclaration /**
     * Gets all the immediate upstream projects (IOW backward edges) of the given project.
     *
     * @return
     *      can be empty but never null.
     */ Modifier public ReferenceType List TypeArgument ReferenceType AbstractProject getUpstream FormalParameter ReferenceType AbstractProject p ReturnStatement MethodInvocation MemberReference backward MemberReference p get MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType AbstractProject get FormalParameter ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject map FormalParameter ReferenceType AbstractProject src LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator v MethodInvocation map MemberReference src get IfStatement BinaryOperation != MemberReference v Literal null ReturnStatement MemberReference v ReturnStatement MethodInvocation Collections emptyList End MethodDeclaration /**
     * Called during the dependency graph build phase to add a dependency edge.
     */ Modifier public addDependency FormalParameter ReferenceType AbstractProject upstream FormalParameter ReferenceType AbstractProject downstream IfStatement MemberReference built ThrowStatement ClassCreator ReferenceType IllegalStateException End IfStatement BinaryOperation == MemberReference upstream MemberReference downstream ReturnStatement End StatementExpression MethodInvocation MemberReference forward MemberReference upstream MemberReference downstream add StatementExpression MethodInvocation MemberReference backward MemberReference downstream MemberReference upstream add MethodDeclaration Modifier public addDependency FormalParameter ReferenceType AbstractProject upstream FormalParameter ReferenceType Collection TypeArgument ReferenceType AbstractProject extends downstream ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator p MemberReference downstream StatementExpression MethodInvocation MemberReference upstream MemberReference p addDependency End MethodDeclaration Modifier public addDependency FormalParameter ReferenceType Collection TypeArgument ReferenceType AbstractProject extends upstream FormalParameter ReferenceType AbstractProject downstream ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator p MemberReference upstream StatementExpression MethodInvocation MemberReference p MemberReference downstream addDependency End MethodDeclaration /**
     * Lists up {@link DependecyDeclarer} from the collection and let them builds dependencies.
     */ Modifier public addDependencyDeclarers FormalParameter ReferenceType AbstractProject upstream FormalParameter ReferenceType Collection TypeArgument ? possibleDependecyDeclarers ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference possibleDependecyDeclarers BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType DependecyDeclarer BlockStatement LocalVariableDeclaration ReferenceType DependecyDeclarer VariableDeclarator dd Cast ReferenceType DependecyDeclarer MemberReference o StatementExpression MethodInvocation dd MemberReference upstream This buildDependencyGraph End End MethodDeclaration /**
     * Returns true if a project has a non-direct dependency to another project.
     * <p>
     * A non-direct dependency is a path of dependency ""edge""s from the source to the destination,
     * where the length is greater than 1.
     */ Modifier public BasicType boolean hasIndirectDependencies FormalParameter ReferenceType AbstractProject src FormalParameter ReferenceType AbstractProject dst LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject VariableDeclarator visited ClassCreator ReferenceType HashSet TypeArgument ReferenceType AbstractProject LocalVariableDeclaration ReferenceType Stack TypeArgument ReferenceType AbstractProject VariableDeclarator queue ClassCreator ReferenceType Stack TypeArgument ReferenceType AbstractProject StatementExpression MethodInvocation queue MethodInvocation MemberReference src getDownstream addAll StatementExpression MethodInvocation queue MemberReference dst remove WhileStatement MethodInvocation ! queue isEmpty BlockStatement LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation queue pop IfStatement BinaryOperation == MemberReference p MemberReference dst ReturnStatement Literal true End IfStatement MethodInvocation visited MemberReference p add StatementExpression MethodInvocation queue MethodInvocation MemberReference p getDownstream addAll End End ReturnStatement Literal false MethodDeclaration /**
     * Gets all the direct and indirect upstream dependencies of the given project.
     */ Modifier public ReferenceType Set TypeArgument ReferenceType AbstractProject getTransitiveUpstream FormalParameter ReferenceType AbstractProject src ReturnStatement MethodInvocation MemberReference backward MemberReference src getTransitive MethodDeclaration /**
     * Gets all the direct and indirect downstream dependencies of the given project.
     */ Modifier public ReferenceType Set TypeArgument ReferenceType AbstractProject getTransitiveDownstream FormalParameter ReferenceType AbstractProject src ReturnStatement MethodInvocation MemberReference forward MemberReference src getTransitive MethodDeclaration Modifier private ReferenceType Set TypeArgument ReferenceType AbstractProject getTransitive FormalParameter ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject direction FormalParameter ReferenceType AbstractProject src LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject VariableDeclarator visited ClassCreator ReferenceType HashSet TypeArgument ReferenceType AbstractProject LocalVariableDeclaration ReferenceType Stack TypeArgument ReferenceType AbstractProject VariableDeclarator queue ClassCreator ReferenceType Stack TypeArgument ReferenceType AbstractProject StatementExpression MethodInvocation queue MemberReference src add WhileStatement MethodInvocation ! queue isEmpty BlockStatement LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation queue pop ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator child MethodInvocation MemberReference direction MemberReference p get BlockStatement IfStatement MethodInvocation visited MemberReference child add StatementExpression MethodInvocation queue MemberReference child add End End End ReturnStatement MemberReference visited MethodDeclaration Modifier private add FormalParameter ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject map FormalParameter ReferenceType AbstractProject src FormalParameter ReferenceType AbstractProject dst LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator set MethodInvocation map MemberReference src get IfStatement BinaryOperation == MemberReference set Literal null BlockStatement StatementExpression Assignment MemberReference set ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractProject = StatementExpression MethodInvocation map MemberReference src MemberReference set put End IfStatement MethodInvocation ! set MemberReference dst contains StatementExpression MethodInvocation set MemberReference dst add End MethodDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject finalize FormalParameter ReferenceType Map TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject m ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType AbstractProject TypeArgument ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator e MethodInvocation m entrySet BlockStatement StatementExpression MethodInvocation Collections MethodInvocation e getValue MemberReference NAME_COMPARATOR sort StatementExpression MethodInvocation e MethodInvocation Collections MethodInvocation e getValue unmodifiableList setValue End ReturnStatement MethodInvocation Collections MemberReference m unmodifiableMap MethodDeclaration /**
     * Experimental visualization of project dependencies.
     */ Modifier public doGraph FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException TryStatement LocalVariableDeclaration ReferenceType BufferedImage VariableDeclarator emptyImage ClassCreator ReferenceType BufferedImage Literal 1 Literal 1 MemberReference BufferedImage TYPE_INT_RGB LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator graphics MethodInvocation emptyImage createGraphics StatementExpression MethodInvocation graphics MemberReference FONT setFont LocalVariableDeclaration Modifier final ReferenceType FontMetrics VariableDeclarator fontMetrics MethodInvocation graphics getFontMetrics LocalVariableDeclaration ReferenceType Layout TypeArgument ReferenceType AbstractProject VariableDeclarator layout ClassCreator ReferenceType Layout TypeArgument ReferenceType AbstractProject ClassCreator ReferenceType Navigator TypeArgument ReferenceType AbstractProject MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType AbstractProject vertices LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractProject VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractProject ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AbstractProject getAllItems getInstance BlockStatement IfStatement BinaryOperation || MethodInvocation ! MethodInvocation isEmpty MemberReference p getDownstream MethodInvocation ! MethodInvocation isEmpty MemberReference p getUpstream StatementExpression MethodInvocation r MemberReference p add End End ReturnStatement MemberReference r MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType AbstractProject edge FormalParameter ReferenceType AbstractProject p ReturnStatement MethodInvocation MemberReference p getDownstream MethodDeclaration Modifier public ReferenceType Dimension getSize FormalParameter ReferenceType AbstractProject p LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MethodInvocation fontMetrics MethodInvocation p getDisplayName stringWidth BinaryOperation * MemberReference MARGIN Literal 2 ReturnStatement ClassCreator ReferenceType Dimension MemberReference w BinaryOperation + MethodInvocation fontMetrics getHeight BinaryOperation * MemberReference MARGIN Literal 2 MemberReference Direction LEFTRIGHT LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator area MethodInvocation layout calcDrawingArea StatementExpression MethodInvocation area Literal 4 Literal 4 grow LocalVariableDeclaration ReferenceType BufferedImage VariableDeclarator image ClassCreator ReferenceType BufferedImage MemberReference area width MemberReference area height MemberReference BufferedImage TYPE_INT_RGB LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator g2 MethodInvocation image createGraphics StatementExpression MethodInvocation g2 MethodInvocation AffineTransform MemberReference - area x MemberReference - area y getTranslateInstance setTransform StatementExpression MethodInvocation g2 MemberReference Color WHITE setPaint StatementExpression MethodInvocation g2 MemberReference area fill StatementExpression MethodInvocation g2 MemberReference FONT setFont StatementExpression MethodInvocation g2 MemberReference Color BLACK setPaint ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation layout vertices BlockStatement LocalVariableDeclaration Modifier final ReferenceType Point VariableDeclarator sp MethodInvocation MethodInvocation layout MemberReference p vertex center ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator q MethodInvocation layout MemberReference p edges BlockStatement LocalVariableDeclaration ReferenceType Point VariableDeclarator cur MemberReference sp ForStatement EnhancedForControl VariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation layout MemberReference p MemberReference q edge BlockStatement StatementExpression MethodInvocation g2 MemberReference cur x MemberReference cur y MemberReference pt x MemberReference pt y drawLine StatementExpression Assignment MemberReference cur MemberReference pt = End LocalVariableDeclaration Modifier final ReferenceType Point VariableDeclarator ep MethodInvocation MethodInvocation layout MemberReference q vertex center StatementExpression MethodInvocation g2 MemberReference cur x MemberReference cur y MemberReference ep x MemberReference ep y drawLine End End LocalVariableDeclaration BasicType int VariableDeclarator diff BinaryOperation + MethodInvocation fontMetrics getAscent BinaryOperation / MethodInvocation fontMetrics getLeading Literal 2 ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject VariableDeclarator p MethodInvocation layout vertices BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation layout MemberReference p vertex StatementExpression MethodInvocation g2 MemberReference Color WHITE setPaint StatementExpression MethodInvocation g2 MemberReference r x MemberReference r y MemberReference r width MemberReference r height fillRect StatementExpression MethodInvocation g2 MemberReference Color BLACK setPaint StatementExpression MethodInvocation g2 MemberReference r x MemberReference r y MemberReference r width MemberReference r height drawRect StatementExpression MethodInvocation g2 MethodInvocation p getDisplayName BinaryOperation + MemberReference r x MemberReference MARGIN BinaryOperation + BinaryOperation + MemberReference r y MemberReference MARGIN MemberReference diff drawString End StatementExpression MethodInvocation rsp Literal ""image/png"" setContentType LocalVariableDeclaration ReferenceType ServletOutputStream VariableDeclarator os MethodInvocation rsp getOutputStream StatementExpression MethodInvocation ImageIO MemberReference image Literal ""PNG"" MemberReference os write StatementExpression MethodInvocation os close CatchClause CatchClauseParameter HeadlessException e StatementExpression MethodInvocation rsp BinaryOperation + MethodInvocation req getContextPath Literal ""/images/headless.png"" sendRedirect2 MethodDeclaration Modifier private ReferenceType Point center FormalParameter ReferenceType Rectangle r ReturnStatement ClassCreator ReferenceType Point BinaryOperation + MemberReference r x BinaryOperation / MemberReference r width Literal 2 BinaryOperation + MemberReference r y BinaryOperation / MemberReference r height Literal 2 FieldDeclaration Modifier private final static ReferenceType Font VariableDeclarator FONT ClassCreator ReferenceType Font Literal ""TimesRoman"" MemberReference Font PLAIN Literal 10 FieldDeclaration /**
     * Margins between the project name and its bounding box.
     */ Modifier private final static BasicType int VariableDeclarator MARGIN Literal 4 FieldDeclaration Modifier private final static ReferenceType Comparator TypeArgument ReferenceType AbstractProject VariableDeclarator NAME_COMPARATOR ClassCreator ReferenceType Comparator TypeArgument ReferenceType AbstractProject MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType AbstractProject lhs FormalParameter ReferenceType AbstractProject rhs ReturnStatement MethodInvocation lhs MethodInvocation MethodInvocation rhs getName compareTo getName FieldDeclaration Modifier public final static ReferenceType DependencyGraph VariableDeclarator EMPTY ClassCreator ReferenceType DependencyGraph Literal false MethodDeclaration /**
     * Compare to Projects based on the topological order defined by this Dependency Graph
     */ Modifier public BasicType int compare FormalParameter ReferenceType AbstractProject o1 FormalParameter ReferenceType AbstractProject o2 LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject VariableDeclarator o1sdownstreams MethodInvocation MemberReference o1 getTransitiveDownstream LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType AbstractProject VariableDeclarator o2sdownstreams MethodInvocation MemberReference o2 getTransitiveDownstream IfStatement MethodInvocation o1sdownstreams MemberReference o2 contains BlockStatement IfStatement MethodInvocation o2sdownstreams MemberReference o1 contains ReturnStatement Literal 0 ReturnStatement Literal 1 End BlockStatement IfStatement MethodInvocation o2sdownstreams MemberReference o1 contains ReturnStatement Literal - 1 ReturnStatement Literal 0 End End ReferenceType Comparator TypeArgument ReferenceType AbstractProject",0
451,451,,0
529,529,,0
173,173,"CompilationUnit PackageDeclaration hudson.model Import java.util.Collection Import java.io.File InterfaceDeclaration Modifier public /**
 * Represents a grouping inherent to a kind of {@link Item}s.
 *
 * @author Kohsuke Kawaguchi
 * @see ItemGroupMixIn
 */ ItemGroup MethodDeclaration /**
     * Gets the full name of this {@link ItemGroup}.
     *
     * @see Item#getFullName() 
     */ ReferenceType String getFullName MethodDeclaration /**
     * @see Item#getFullDisplayName() 
     */ ReferenceType String getFullDisplayName MethodDeclaration /**
     * Gets all the items in this collection in a read-only view.
     */ ReferenceType Collection TypeArgument ReferenceType T getItems MethodDeclaration /**
     * Returns the path relative to the context root,
     * like ""foo/bar/zot/"". Note no leading slash but trailing slash.
     */ ReferenceType String getUrl MethodDeclaration /**
     * Gets the URL token that prefixes the URLs for child {@link Item}s.
     * Like ""job"", ""item"", etc.
     */ ReferenceType String getUrlChildPrefix MethodDeclaration /**
     * Gets the {@link Item} inside this group that has a given name.
     */ ReferenceType T getItem FormalParameter ReferenceType String name MethodDeclaration /**
     * Assigns the {@link Item#getRootDir() root directory} for children.
     */ ReferenceType File getRootDirFor FormalParameter ReferenceType T child TypeParameter T ReferenceType Item ReferenceType PersistenceRoot ReferenceType ModelObject",0
448,448,,0
0,0,"CompilationUnit PackageDeclaration hudson.maven Import hudson.model.BuildListener Import hudson.model.Cause Import hudson.model.Result Import hudson.model.StreamBuildListener Import java.io.ByteArrayOutputStream Import java.io.IOException Import java.io.OutputStream Import java.io.PrintStream Import java.io.PrintWriter Import java.io.Serializable Import java.util.List ClassDeclaration Modifier final /**
 * Delegating {@link BuildListener} that can have ""side"" {@link OutputStream}
 * that gets log outputs. The side stream can be changed at runtime.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.133
 */ SplittableBuildListener FieldDeclaration /**
     * The actual {@link BuildListener} where the output goes.
     */ Modifier private final ReferenceType BuildListener VariableDeclarator core FieldDeclaration /**
     * Used to accumulate data when no one is claiming the {@link #side},
     * so that the next one who set the {@link #side} can claim all the data.
     */ Modifier private ReferenceType ByteArrayOutputStream VariableDeclarator unclaimed ClassCreator ReferenceType ByteArrayOutputStream FieldDeclaration Modifier private ReferenceType OutputStream VariableDeclarator side MemberReference unclaimed FieldDeclaration /**
     * Constant {@link PrintStream} connected to both {@link #core} and {@link #side}.
     * This is so that we can change the side stream without the client noticing it.
     */ Modifier private final ReferenceType PrintStream VariableDeclarator logger ConstructorDeclaration Modifier public SplittableBuildListener FormalParameter ReferenceType BuildListener core StatementExpression Assignment This MemberReference core MemberReference core = LocalVariableDeclaration Modifier final ReferenceType OutputStream VariableDeclarator base MethodInvocation core getLogger StatementExpression Assignment MemberReference logger ClassCreator ReferenceType PrintStream ClassCreator ReferenceType OutputStream MethodDeclaration Modifier public write FormalParameter BasicType int b IOException StatementExpression MethodInvocation base MemberReference b write StatementExpression MethodInvocation side MemberReference b write MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException StatementExpression MethodInvocation base MemberReference b MemberReference off MemberReference len write StatementExpression MethodInvocation side MemberReference b MemberReference off MemberReference len write MethodDeclaration Modifier public flush IOException StatementExpression MethodInvocation base flush StatementExpression MethodInvocation side flush MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation base close StatementExpression MethodInvocation side close = MethodDeclaration Modifier public setSideOutputStream FormalParameter ReferenceType OutputStream os IOException IfStatement BinaryOperation == MemberReference os Literal null BlockStatement StatementExpression Assignment MemberReference os MemberReference unclaimed = BlockStatement StatementExpression MethodInvocation os MethodInvocation unclaimed toByteArray write StatementExpression Assignment MemberReference unclaimed ClassCreator ReferenceType ByteArrayOutputStream = End StatementExpression Assignment This MemberReference side MemberReference os = MethodDeclaration Modifier public started FormalParameter ReferenceType List TypeArgument ReferenceType Cause causes StatementExpression MethodInvocation core MemberReference causes started MethodDeclaration Modifier public finished FormalParameter ReferenceType Result result StatementExpression MethodInvocation core MemberReference result finished MethodDeclaration Modifier public ReferenceType PrintStream getLogger ReturnStatement MemberReference logger MethodDeclaration Modifier public ReferenceType PrintWriter error FormalParameter ReferenceType String msg StatementExpression MethodInvocation core MemberReference msg error ReturnStatement ClassCreator ReferenceType PrintWriter MemberReference logger MethodDeclaration Modifier public ReferenceType PrintWriter error FormalParameter ReferenceType String format FormalParameter ReferenceType Object args  StatementExpression MethodInvocation core MemberReference format MemberReference args error ReturnStatement ClassCreator ReferenceType PrintWriter MemberReference logger MethodDeclaration Modifier public ReferenceType PrintWriter fatalError FormalParameter ReferenceType String msg StatementExpression MethodInvocation core MemberReference msg fatalError ReturnStatement ClassCreator ReferenceType PrintWriter MemberReference logger MethodDeclaration Modifier public ReferenceType PrintWriter fatalError FormalParameter ReferenceType String format FormalParameter ReferenceType Object args  StatementExpression MethodInvocation core MemberReference format MemberReference args fatalError ReturnStatement ClassCreator ReferenceType PrintWriter MemberReference logger MethodDeclaration Modifier private ReferenceType Object writeReplace ReturnStatement ClassCreator ReferenceType StreamBuildListener MemberReference logger FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType BuildListener ReferenceType Serializable",1
27,27,"CompilationUnit PackageDeclaration hudson.cli Import hudson.Extension Import hudson.model.Hudson ClassDeclaration Modifier public Annotation Extension /**
 * Shows the version.
 *
 * @author Kohsuke Kawaguchi
 */ VersionCommand MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription ReturnStatement Literal ""Shows the Hudson version"" MethodDeclaration Modifier protected BasicType int run StatementExpression MethodInvocation stdout MemberReference Hudson VERSION println ReturnStatement Literal 0 ReferenceType CLICommand",1
425,425,,0
16,16,"CompilationUnit PackageDeclaration hudson.scheduler Import antlr.ANTLRException Import java.io.StringReader Import java.util.Calendar ClassDeclaration Modifier public final /**
 * Table for driving scheduled tasks.
 *
 * @author Kohsuke Kawaguchi
 */ CronTab FieldDeclaration /**
     * bits[0]: minutes
     * bits[1]: hours
     * bits[2]: days
     * bits[3]: months
     *
     * false:not scheduled &lt;-> true scheduled
     */ Modifier final BasicType long VariableDeclarator bits ArrayCreator BasicType long Literal 4 FieldDeclaration BasicType int VariableDeclarator dayOfWeek FieldDeclaration /**
     * Textual representation.
     */ Modifier private ReferenceType String VariableDeclarator spec ConstructorDeclaration Modifier public CronTab FormalParameter ReferenceType String format ANTLRException StatementExpression ExplicitConstructorInvocation MemberReference format Literal 1 ConstructorDeclaration Modifier public CronTab FormalParameter ReferenceType String format FormalParameter BasicType int line ANTLRException StatementExpression MethodInvocation MemberReference format MemberReference line set MethodDeclaration Modifier private set FormalParameter ReferenceType String format FormalParameter BasicType int line ANTLRException LocalVariableDeclaration ReferenceType CrontabLexer VariableDeclarator lexer ClassCreator ReferenceType CrontabLexer ClassCreator ReferenceType StringReader MemberReference format StatementExpression MethodInvocation lexer MemberReference line setLine LocalVariableDeclaration ReferenceType CrontabParser VariableDeclarator parser ClassCreator ReferenceType CrontabParser MemberReference lexer StatementExpression Assignment MemberReference spec MemberReference format = StatementExpression MethodInvocation parser This startRule IfStatement BinaryOperation != BinaryOperation & MemberReference dayOfWeek BinaryOperation << Literal 1 Literal 7 Literal 0 StatementExpression Assignment MemberReference dayOfWeek Literal 1 |= End MethodDeclaration /**
     * Returns true if the given calendar matches
     */ BasicType boolean check FormalParameter ReferenceType Calendar cal IfStatement MethodInvocation ! MemberReference ArraySelector Literal 0 bits MethodInvocation cal MemberReference Calendar MINUTE get checkBits ReturnStatement Literal false End IfStatement MethodInvocation ! MemberReference ArraySelector Literal 1 bits MethodInvocation cal MemberReference Calendar HOUR_OF_DAY get checkBits ReturnStatement Literal false End IfStatement MethodInvocation ! MemberReference ArraySelector Literal 2 bits MethodInvocation cal MemberReference Calendar DAY_OF_MONTH get checkBits ReturnStatement Literal false End IfStatement MethodInvocation ! MemberReference ArraySelector Literal 3 bits BinaryOperation + MethodInvocation cal MemberReference Calendar MONTH get Literal 1 checkBits ReturnStatement Literal false End IfStatement MethodInvocation ! MemberReference dayOfWeek BinaryOperation - MethodInvocation cal MemberReference Calendar DAY_OF_WEEK get Literal 1 checkBits ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration set FormalParameter ReferenceType String format ANTLRException StatementExpression MethodInvocation MemberReference format Literal 1 set MethodDeclaration /**
     * Returns true if n-th bit is on.
     */ Modifier private BasicType boolean checkBits FormalParameter BasicType long bitMask FormalParameter BasicType int n ReturnStatement BinaryOperation == BinaryOperation | MemberReference bitMask BinaryOperation << Literal 1L MemberReference n MemberReference bitMask MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal ""["" MethodInvocation Literal ""minute"" MemberReference ArraySelector Literal 0 bits toString Literal ',' MethodInvocation Literal ""hour"" MemberReference ArraySelector Literal 1 bits toString Literal ',' MethodInvocation Literal ""dayOfMonth"" MemberReference ArraySelector Literal 2 bits toString Literal ',' MethodInvocation Literal ""month"" MemberReference ArraySelector Literal 3 bits toString Literal ',' MethodInvocation Literal ""dayOfWeek"" MemberReference dayOfWeek toString Literal ']' MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType String key FormalParameter BasicType long bit ReturnStatement BinaryOperation + BinaryOperation + MemberReference key Literal '=' MethodInvocation Long MemberReference bit toHexString MethodDeclaration /**
     * Checks if this crontab entry looks reasonable,
     * and if not, return an warning message.
     *
     * <p>
     * The point of this method is to catch syntactically correct
     * but semantically suspicious combinations, like
     * ""* 0 * * *""
     */ Modifier public ReferenceType String checkSanity ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 5 MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator bitMask TernaryExpression BinaryOperation < MemberReference i Literal 4 MemberReference ArraySelector MemberReference i bits Cast BasicType long MemberReference dayOfWeek ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j MemberReference ArraySelector MemberReference i LOWER_BOUNDS BinaryOperation <= MemberReference j MemberReference ArraySelector MemberReference i UPPER_BOUNDS MemberReference ++ j BlockStatement IfStatement MethodInvocation ! MemberReference bitMask MemberReference j checkBits BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Do you really mean \""every minute\"" when you say \"""" MemberReference spec Literal ""\""? "" Literal ""Perhaps you meant \""0 "" MethodInvocation spec BinaryOperation + MethodInvocation spec Literal ' ' indexOf Literal 1 substring Literal ""\"""" End ReturnStatement Literal null End End End ReturnStatement Literal null FieldDeclaration Modifier private final static BasicType int VariableDeclarator LOWER_BOUNDS ArrayCreator BasicType int ArrayInitializer Literal 0 Literal 0 Literal 1 Literal 0 Literal 0 FieldDeclaration Modifier private final static BasicType int VariableDeclarator UPPER_BOUNDS ArrayCreator BasicType int ArrayInitializer Literal 59 Literal 23 Literal 31 Literal 12 Literal 7",1
328,328,"CompilationUnit PackageDeclaration hudson.util.spring Import groovy.lang.Binding Import groovy.lang.Closure Import groovy.lang.GroovyObject Import groovy.lang.MissingMethodException Import groovy.lang.MissingPropertyException Import groovy.lang.Script ClassDeclaration Modifier public abstract /**
 * {@link Script} that performs method invocations and property access like {@link Closure} does.
 *
 * <p>
 * For example, when the script is:
 *
 * <pre>
 * a = 1;
 * b(2);
 * <pre>
 *
 * <p>
 * Using {@link ClosureScript} as the base class would run it as:
 *
 * <pre>
 * delegate.a = 1;
 * delegate.b(2);
 * </pre>
 *
 * ... whereas in plain {@link Script}, this will be run as:
 *
 * <pre>
 * binding.setProperty(""a"",1);
 * ((Closure)binding.getProperty(""b"")).call(2);
 * </pre>
 *
 * @author Kohsuke Kawaguchi
 */ ClosureScript FieldDeclaration Modifier private ReferenceType GroovyObject VariableDeclarator delegate ConstructorDeclaration Modifier protected ClosureScript StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier protected ClosureScript FormalParameter ReferenceType Binding binding StatementExpression SuperConstructorInvocation MemberReference binding MethodDeclaration /**
     * Sets the delegation target.
     */ Modifier public setDelegate FormalParameter ReferenceType GroovyObject delegate StatementExpression Assignment This MemberReference delegate MemberReference delegate = MethodDeclaration Modifier public ReferenceType Object invokeMethod FormalParameter ReferenceType String name FormalParameter ReferenceType Object args TryStatement ReturnStatement MethodInvocation delegate MemberReference name MemberReference args invokeMethod CatchClause CatchClauseParameter MissingMethodException mme ReturnStatement SuperMethodInvocation MemberReference name MemberReference args invokeMethod MethodDeclaration Modifier public ReferenceType Object getProperty FormalParameter ReferenceType String property TryStatement ReturnStatement MethodInvocation delegate MemberReference property getProperty CatchClause CatchClauseParameter MissingPropertyException e ReturnStatement SuperMethodInvocation MemberReference property getProperty MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property FormalParameter ReferenceType Object newValue TryStatement StatementExpression MethodInvocation delegate MemberReference property MemberReference newValue setProperty CatchClause CatchClauseParameter MissingPropertyException e StatementExpression SuperMethodInvocation MemberReference property MemberReference newValue setProperty ReferenceType Script",1
185,185,"CompilationUnit PackageDeclaration hudson.model Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.export.Exported Import java.util.Map Import hudson.util.VariableResolver ClassDeclaration Modifier public /**
 * {@link ParameterValue} created from {@link StringParameterDefinition}.
 */ StringParameterValue FieldDeclaration Modifier public final Annotation Exported ElementValuePair visibility Literal 3 ReferenceType String VariableDeclarator value ConstructorDeclaration Modifier public Annotation DataBoundConstructor StringParameterValue FormalParameter ReferenceType String name FormalParameter ReferenceType String value StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference value Literal null ConstructorDeclaration Modifier public StringParameterValue FormalParameter ReferenceType String name FormalParameter ReferenceType String value FormalParameter ReferenceType String description StatementExpression SuperConstructorInvocation MemberReference name MemberReference description StatementExpression Assignment This MemberReference value MemberReference value = MethodDeclaration /**
     * Exposes the name/value as an environment variable.
     */ Modifier public Annotation Override buildEnvVars FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String env StatementExpression MethodInvocation env MethodInvocation name toUpperCase MemberReference value put MethodDeclaration Modifier public Annotation Override ReferenceType VariableResolver TypeArgument ReferenceType String createVariableResolver FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build ReturnStatement ClassCreator ReferenceType VariableResolver TypeArgument ReferenceType String MethodDeclaration Modifier public ReferenceType String resolve FormalParameter ReferenceType String name ReturnStatement TernaryExpression This StringParameterValue MemberReference name MethodInvocation MemberReference name equals MemberReference value Literal null MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration Modifier final BasicType int VariableDeclarator prime Literal 31 LocalVariableDeclaration BasicType int VariableDeclarator result SuperMethodInvocation hashCode StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * MemberReference prime MemberReference result TernaryExpression BinaryOperation == MemberReference value Literal null Literal 0 MethodInvocation value hashCode = ReturnStatement MemberReference result MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == This MemberReference obj ReturnStatement Literal true End IfStatement SuperMethodInvocation ! MemberReference obj equals ReturnStatement Literal false End IfStatement BinaryOperation != MethodInvocation getClass MethodInvocation obj getClass ReturnStatement Literal false End LocalVariableDeclaration ReferenceType StringParameterValue VariableDeclarator other Cast ReferenceType StringParameterValue MemberReference obj IfStatement BinaryOperation == MemberReference value Literal null BlockStatement IfStatement BinaryOperation != MemberReference other value Literal null ReturnStatement Literal false End IfStatement MethodInvocation ! value MemberReference other value equals ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""(StringParameterValue) "" MethodInvocation getName Literal ""='"" MemberReference value Literal ""'"" ReferenceType ParameterValue",1
282,282,"CompilationUnit PackageDeclaration hudson.model Import hudson.Extension Import hudson.model.MultiStageTimeSeries.TimeScale Import hudson.model.MultiStageTimeSeries.TrendChart Import hudson.util.ColorPalette Import hudson.util.NoOverlapCategoryAxis Import org.jfree.chart.ChartFactory Import org.jfree.chart.JFreeChart Import org.jfree.chart.axis.CategoryAxis Import org.jfree.chart.axis.CategoryLabelPositions Import org.jfree.chart.axis.NumberAxis Import org.jfree.chart.plot.CategoryPlot Import org.jfree.chart.plot.PlotOrientation Import org.jfree.chart.renderer.category.LineAndShapeRenderer Import org.jfree.data.category.CategoryDataset Import org.jfree.ui.RectangleInsets Import org.kohsuke.stapler.QueryParameter Import java.awt  Import java.io.IOException Import java.util.List ClassDeclaration Modifier public abstract /**
 * Utilization statistics for a node or a set of nodes.
 *
 * <h2>Implementation Note</h2>
 * <p>
 * Instances of this class is not capable of updating the statistics itself
 * &mdash; instead, it's done by the {@link LoadStatisticsUpdater} timer.
 * This is more efficient (as it allows us a single pass to update all stats),
 * but it's not clear to me if the loss of autonomy is worth it.
 *
 * @author Kohsuke Kawaguchi
 * @see Label#loadStatistics
 * @see Hudson#overallLoad
 */ LoadStatistics FieldDeclaration /**
     * Number of busy executors and how it changes over time.
     */ Modifier public final ReferenceType MultiStageTimeSeries VariableDeclarator busyExecutors FieldDeclaration /**
     * Number of total executors and how it changes over time.
     */ Modifier public final ReferenceType MultiStageTimeSeries VariableDeclarator totalExecutors FieldDeclaration /**
     * Number of {@link Queue.BuildableItem}s that can run on any node in this node set but blocked.
     */ Modifier public final ReferenceType MultiStageTimeSeries VariableDeclarator queueLength ConstructorDeclaration Modifier protected LoadStatistics FormalParameter BasicType int initialTotalExecutors FormalParameter BasicType int initialBusyExecutors StatementExpression Assignment This MemberReference totalExecutors ClassCreator ReferenceType MultiStageTimeSeries MethodInvocation Messages _LoadStatistics_Legends_TotalExecutors MemberReference ColorPalette BLUE MemberReference initialTotalExecutors MemberReference DECAY = StatementExpression Assignment This MemberReference busyExecutors ClassCreator ReferenceType MultiStageTimeSeries MethodInvocation Messages _LoadStatistics_Legends_BusyExecutors MemberReference ColorPalette RED MemberReference initialBusyExecutors MemberReference DECAY = StatementExpression Assignment This MemberReference queueLength ClassCreator ReferenceType MultiStageTimeSeries MethodInvocation Messages _LoadStatistics_Legends_QueueLength MemberReference ColorPalette GREY Literal 0 MemberReference DECAY = MethodDeclaration Modifier public BasicType float getLatestIdleExecutors FormalParameter ReferenceType TimeScale timeScale ReturnStatement BinaryOperation - MethodInvocation totalExecutors MethodInvocation getLatest MemberReference timeScale pick MethodInvocation busyExecutors MethodInvocation getLatest MemberReference timeScale pick MethodDeclaration /**
     * Computes the # of idle executors right now and obtains the snapshot value.
     */ Modifier public abstract BasicType int computeIdleExecutors MethodDeclaration /**
     * Computes the # of total executors right now and obtains the snapshot value.
     */ Modifier public abstract BasicType int computeTotalExecutors MethodDeclaration /**
     * Computes the # of queue length right now and obtains the snapshot value.
     */ Modifier public abstract BasicType int computeQueueLength MethodDeclaration /**
     * Creates a trend chart.
     */ Modifier public ReferenceType JFreeChart createChart FormalParameter ReferenceType CategoryDataset ds LocalVariableDeclaration Modifier final ReferenceType JFreeChart VariableDeclarator chart MethodInvocation ChartFactory Literal null Literal null Literal null MemberReference ds MemberReference PlotOrientation VERTICAL Literal true Literal true Literal false createLineChart StatementExpression MethodInvocation chart MemberReference Color white setBackgroundPaint LocalVariableDeclaration Modifier final ReferenceType CategoryPlot VariableDeclarator plot MethodInvocation chart getCategoryPlot StatementExpression MethodInvocation plot MemberReference Color WHITE setBackgroundPaint StatementExpression MethodInvocation plot Literal null setOutlinePaint StatementExpression MethodInvocation plot Literal true setRangeGridlinesVisible StatementExpression MethodInvocation plot MemberReference Color black setRangeGridlinePaint LocalVariableDeclaration Modifier final ReferenceType LineAndShapeRenderer VariableDeclarator renderer Cast ReferenceType LineAndShapeRenderer MethodInvocation plot getRenderer StatementExpression MethodInvocation renderer ClassCreator ReferenceType BasicStroke Literal 3 setBaseStroke StatementExpression MethodInvocation MemberReference renderer configureRenderer LocalVariableDeclaration Modifier final ReferenceType CategoryAxis VariableDeclarator domainAxis ClassCreator ReferenceType NoOverlapCategoryAxis Literal null StatementExpression MethodInvocation plot MemberReference domainAxis setDomainAxis StatementExpression MethodInvocation domainAxis MemberReference CategoryLabelPositions UP_90 setCategoryLabelPositions StatementExpression MethodInvocation domainAxis Literal 0.0 setLowerMargin StatementExpression MethodInvocation domainAxis Literal 0.0 setUpperMargin StatementExpression MethodInvocation domainAxis Literal 0.0 setCategoryMargin LocalVariableDeclaration Modifier final ReferenceType NumberAxis VariableDeclarator rangeAxis Cast ReferenceType NumberAxis MethodInvocation plot getRangeAxis StatementExpression MethodInvocation rangeAxis MethodInvocation NumberAxis createIntegerTickUnits setStandardTickUnits StatementExpression MethodInvocation plot ClassCreator ReferenceType RectangleInsets Literal 0 Literal 0 Literal 0 Literal 5.0 setInsets ReturnStatement MemberReference chart MethodDeclaration Modifier protected configureRenderer FormalParameter ReferenceType LineAndShapeRenderer renderer StatementExpression MethodInvocation renderer Literal 0 MemberReference ColorPalette BLUE setSeriesPaint StatementExpression MethodInvocation renderer Literal 1 MemberReference ColorPalette RED setSeriesPaint StatementExpression MethodInvocation renderer Literal 2 MemberReference ColorPalette GREY setSeriesPaint MethodDeclaration /**
     * Creates {@link CategoryDataset} which then becomes the basis
     * of the load statistics graph.
     */ Modifier public ReferenceType TrendChart createTrendChart FormalParameter ReferenceType TimeScale timeScale ReturnStatement MethodInvocation MultiStageTimeSeries MemberReference timeScale MemberReference totalExecutors MemberReference busyExecutors MemberReference queueLength createTrendChart MethodDeclaration /**
     * Generates the load statistics graph.
     */ Modifier public ReferenceType TrendChart doGraph FormalParameter Annotation QueryParameter ReferenceType String type IOException ReturnStatement MethodInvocation MethodInvocation TimeScale MemberReference type parse createTrendChart FieldDeclaration /**
     * With 0.90 decay ratio for every 10sec, half reduction is about 1 min.
     */ Modifier public final static BasicType float VariableDeclarator DECAY MethodInvocation Float MethodInvocation System BinaryOperation + ClassReference MethodInvocation getName ReferenceType LoadStatistics Literal "".decay"" Literal ""0.9"" getProperty parseFloat FieldDeclaration /**
     * Load statistics clock cycle in milliseconds. Specify a small value for quickly debugging this feature and node provisioning through cloud.
     */ Modifier public static BasicType int VariableDeclarator CLOCK MethodInvocation Integer BinaryOperation + ClassReference MethodInvocation getName ReferenceType LoadStatistics Literal "".clock"" BinaryOperation * Literal 10 Literal 1000 getInteger ClassDeclaration Modifier public static Annotation Extension /**
     * Periodically update the load statistics average.
     */ LoadStatisticsUpdater MethodDeclaration Modifier public BasicType long getRecurrencePeriod ReturnStatement MemberReference CLOCK MethodDeclaration Modifier protected doRun LocalVariableDeclaration ReferenceType Hudson VariableDeclarator h MethodInvocation Hudson getInstance LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType hudson ReferenceType model ReferenceType Queue ReferenceType BuildableItem VariableDeclarator bis MethodInvocation h MethodInvocation getBuildableItems getQueue ForStatement EnhancedForControl VariableDeclaration ReferenceType Label VariableDeclarator l MethodInvocation h getLabels BlockStatement StatementExpression MethodInvocation l.loadStatistics.totalExecutors MethodInvocation l getTotalExecutors update StatementExpression MethodInvocation l.loadStatistics.busyExecutors MethodInvocation l getBusyExecutors update LocalVariableDeclaration BasicType int VariableDeclarator q Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType hudson ReferenceType model ReferenceType Queue ReferenceType BuildableItem VariableDeclarator bi MemberReference bis BlockStatement IfStatement BinaryOperation == MethodInvocation bi.task getAssignedLabel MemberReference l StatementExpression MemberReference ++ q End End StatementExpression MethodInvocation l.loadStatistics.queueLength MemberReference q update End LocalVariableDeclaration ReferenceType ComputerSet VariableDeclarator cs MethodInvocation h getComputer StatementExpression MethodInvocation h.overallLoad.totalExecutors MethodInvocation cs getTotalExecutors update StatementExpression MethodInvocation h.overallLoad.busyExecutors MethodInvocation cs getBusyExecutors update LocalVariableDeclaration BasicType int VariableDeclarator q Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType hudson ReferenceType model ReferenceType Queue ReferenceType BuildableItem VariableDeclarator bi MemberReference bis BlockStatement IfStatement BinaryOperation == MethodInvocation bi.task getAssignedLabel Literal null StatementExpression MemberReference ++ q End End StatementExpression MethodInvocation h.overallLoad.queueLength MemberReference q update StatementExpression MethodInvocation h.overallLoad.totalQueueLength MethodInvocation bis size update ReferenceType PeriodicWork",0
311,311,"CompilationUnit PackageDeclaration /**
 * Code for launching the remote agent through JNLP.
 *
 * <p>
 * This involves in getting the connection parameters through command line,
 * which is provided from <tt>slave-agent.jnlp.jelly</tt> file in the core.
 */ hudson.remoting.jnlp",0
257,257,"CompilationUnit PackageDeclaration hudson.model Import net.sf.json.JSONObject Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public JobParameterDefinition ConstructorDeclaration Modifier public Annotation DataBoundConstructor JobParameterDefinition FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name ClassDeclaration Modifier public static DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement Literal ""Project Parameter"" MethodDeclaration Modifier public Annotation Override ReferenceType ParameterDefinition newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement MethodInvocation req ClassReference ReferenceType JobParameterDefinition MemberReference formData bindJSON ReferenceType ParameterDescriptor MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject jo ReturnStatement MethodInvocation req ClassReference ReferenceType JobParameterValue MemberReference jo bindJSON MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req ThrowStatement ClassCreator ReferenceType UnsupportedOperationException ReferenceType ParameterDefinition",0
399,399,,0
244,244,"CompilationUnit PackageDeclaration hudson.maven Import org.apache.maven.project.MavenProject Import org.apache.maven.model.Plugin Import org.apache.maven.model.Extension Import org.apache.maven.model.Dependency Import org.apache.maven.model.ReportPlugin Import java.io.Serializable ClassDeclaration Modifier public /**
 * Version independent name of a Maven project.
 * 
 * @author Kohsuke Kawaguchi
 * @see ModuleDependency
 */ ModuleName FieldDeclaration Modifier public final ReferenceType String VariableDeclarator groupId FieldDeclaration Modifier public final ReferenceType String VariableDeclarator artifactId ConstructorDeclaration Modifier public ModuleName FormalParameter ReferenceType String groupId FormalParameter ReferenceType String artifactId StatementExpression Assignment This MemberReference groupId MemberReference groupId = StatementExpression Assignment This MemberReference artifactId MemberReference artifactId = ConstructorDeclaration Modifier public ModuleName FormalParameter ReferenceType MavenProject project StatementExpression ExplicitConstructorInvocation MethodInvocation project getGroupId MethodInvocation project getArtifactId ConstructorDeclaration Modifier public ModuleName FormalParameter ReferenceType Plugin plugin StatementExpression ExplicitConstructorInvocation MethodInvocation plugin getGroupId MethodInvocation plugin getArtifactId ConstructorDeclaration Modifier public ModuleName FormalParameter ReferenceType ReportPlugin plugin StatementExpression ExplicitConstructorInvocation MethodInvocation plugin getGroupId MethodInvocation plugin getArtifactId ConstructorDeclaration Modifier public ModuleName FormalParameter ReferenceType Extension ext StatementExpression ExplicitConstructorInvocation MethodInvocation ext getGroupId MethodInvocation ext getArtifactId ConstructorDeclaration Modifier public ModuleName FormalParameter ReferenceType Dependency dep StatementExpression ExplicitConstructorInvocation MethodInvocation dep getGroupId MethodInvocation dep getArtifactId MethodDeclaration /**
     * Returns the ""groupId:artifactId"" form.
     */ Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MemberReference groupId Literal ':' MemberReference artifactId MethodDeclaration /**
     * Returns the ""groupId$artifactId"" form,
     * which is safe for the use as a file name, unlike {@link #toString()}.
     */ Modifier public ReferenceType String toFileSystemName ReturnStatement BinaryOperation + BinaryOperation + MemberReference groupId Literal '$' MemberReference artifactId MethodDeclaration Modifier public static ReferenceType ModuleName fromFileSystemName FormalParameter ReferenceType String n LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation n Literal '$' indexOf IfStatement BinaryOperation < MemberReference idx Literal 0 ThrowStatement ClassCreator ReferenceType IllegalArgumentException MemberReference n End ReturnStatement ClassCreator ReferenceType ModuleName MethodInvocation n Literal 0 MemberReference idx substring MethodInvocation n BinaryOperation + MemberReference idx Literal 1 substring MethodDeclaration Modifier public static ReferenceType ModuleName fromString FormalParameter ReferenceType String n LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation Math MethodInvocation n Literal ':' indexOf MethodInvocation n Literal '$' indexOf max IfStatement BinaryOperation < MemberReference idx Literal 0 ThrowStatement ClassCreator ReferenceType IllegalArgumentException MemberReference n End ReturnStatement ClassCreator ReferenceType ModuleName MethodInvocation n Literal 0 MemberReference idx substring MethodInvocation n BinaryOperation + MemberReference idx Literal 1 substring MethodDeclaration /**
     * Checks if the given name is valid module name string format
     * created by {@link #toString()}.
     */ Modifier public static BasicType boolean isValid FormalParameter ReferenceType String n ReturnStatement BinaryOperation > MethodInvocation Math MethodInvocation n Literal ':' indexOf MethodInvocation n Literal '$' indexOf max Literal 0 MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation == This MemberReference o ReturnStatement Literal true End IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation != MethodInvocation getClass MethodInvocation o getClass ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ModuleName VariableDeclarator that Cast ReferenceType ModuleName MemberReference o ReturnStatement BinaryOperation && MethodInvocation artifactId MemberReference that artifactId equals MethodInvocation groupId MemberReference that groupId equals MethodDeclaration Modifier public BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator result StatementExpression Assignment MemberReference result MethodInvocation groupId hashCode = StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * Literal 31 MemberReference result MethodInvocation artifactId hashCode = ReturnStatement MemberReference result MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType ModuleName that LocalVariableDeclaration BasicType int VariableDeclarator r This MemberReference groupId MethodInvocation MemberReference that groupId compareTo IfStatement BinaryOperation != MemberReference r Literal 0 ReturnStatement MemberReference r End ReturnStatement This MemberReference artifactId MethodInvocation MemberReference that artifactId compareTo FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Comparable TypeArgument ReferenceType ModuleName ReferenceType Serializable",0
93,93,"CompilationUnit PackageDeclaration hudson.model Import hudson.util.StreamTaskListener Import java.io.File Import java.io.IOException Import java.io.Reader Import java.lang.ref.WeakReference Import org.kohsuke.stapler.framework.io.LargeText Import org.kohsuke.stapler.framework.io.ByteBuffer ClassDeclaration Modifier public abstract /**
 * {@link Thread} for performing one-off task.
 *
 * <p>
 * Designed to be used inside {@link TaskAction}.
 *
 * 
 *
 * @author Kohsuke Kawaguchi
 * @since 1.191
 * @see TaskAction
 */ TaskThread FieldDeclaration /**
     * Represents the output from this task thread.
     */ Modifier private final ReferenceType LargeText VariableDeclarator text FieldDeclaration /**
     * Represents the interface to produce output.
     */ Modifier private ReferenceType TaskListener VariableDeclarator listener FieldDeclaration Modifier private final ReferenceType TaskAction VariableDeclarator owner FieldDeclaration Modifier private volatile BasicType boolean VariableDeclarator isRunning ConstructorDeclaration Modifier protected /**
     *
     * @param output
     *      Determines where the output from this task thread goes.
     */ TaskThread FormalParameter ReferenceType TaskAction owner FormalParameter ReferenceType ListenerAndText output StatementExpression SuperConstructorInvocation MethodInvocation owner getDisplayName StatementExpression Assignment This MemberReference owner MemberReference owner = StatementExpression Assignment This MemberReference text MemberReference output text = StatementExpression Assignment This MemberReference listener MemberReference output listener = MethodDeclaration Modifier public ReferenceType Reader readAll IOException ReturnStatement MethodInvocation text readAll MethodDeclaration /**
     * Registers that this {@link TaskThread} is run for the specified
     * {@link TaskAction}. This can be explicitly called from subtypes
     * to associate a single {@link TaskThread} across multiple tag actions.
     */ Modifier final protected associateWith FormalParameter ReferenceType TaskAction action StatementExpression Assignment MemberReference action workerThread This = StatementExpression Assignment MemberReference action log ClassCreator ReferenceType WeakReference TypeArgument ReferenceType LargeText MemberReference text = MethodDeclaration /**
     * Starts the task execution asynchronously.
     */ Modifier public start StatementExpression MethodInvocation MemberReference owner associateWith StatementExpression SuperMethodInvocation start MethodDeclaration Modifier public BasicType boolean isRunning ReturnStatement MemberReference isRunning MethodDeclaration /**
     * Determines where the output of this {@link TaskThread} goes.
     * <p>
     * Subclass can override this to send the output to a file, for example.
     */ Modifier protected ReferenceType ListenerAndText createListener IOException ReturnStatement MethodInvocation ListenerAndText forMemory MethodDeclaration Modifier public final run StatementExpression Assignment MemberReference isRunning Literal true = TryStatement StatementExpression MethodInvocation MemberReference listener perform StatementExpression MethodInvocation listener MethodInvocation Literal ""Completed"" println getLogger StatementExpression Assignment MemberReference owner workerThread Literal null = CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation listener MethodInvocation Literal ""Aborted"" println getLogger CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e MethodInvocation listener getLogger printStackTrace StatementExpression Assignment MemberReference listener Literal null = StatementExpression Assignment MemberReference isRunning Literal false = StatementExpression MethodInvocation text markAsComplete MethodDeclaration /**
     * Do the actual work.
     *
     * @throws Exception
     *      The exception is recorded and reported as a failure.
     */ Modifier protected abstract perform FormalParameter ReferenceType TaskListener listener Exception ClassDeclaration Modifier public final static /**
     * Tuple of {@link TaskListener} and {@link LargeText}, representing
     * the interface for producing output and how to retrieve it later.
     */ ListenerAndText FieldDeclaration Modifier final ReferenceType TaskListener VariableDeclarator listener FieldDeclaration Modifier final ReferenceType LargeText VariableDeclarator text ConstructorDeclaration Modifier public ListenerAndText FormalParameter ReferenceType TaskListener listener FormalParameter ReferenceType LargeText text StatementExpression Assignment This MemberReference listener MemberReference listener = StatementExpression Assignment This MemberReference text MemberReference text = MethodDeclaration /**
         * Creates one that's backed by memory.
         */ Modifier public static ReferenceType ListenerAndText forMemory LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator log ClassCreator ReferenceType ByteBuffer ReturnStatement ClassCreator ReferenceType ListenerAndText ClassCreator ReferenceType StreamTaskListener MemberReference log ClassCreator ReferenceType LargeText MemberReference log Literal false MethodDeclaration /**
         * Creates one that's backed by a file. 
         */ Modifier public static ReferenceType ListenerAndText forFile FormalParameter ReferenceType File f IOException ReturnStatement ClassCreator ReferenceType ListenerAndText ClassCreator ReferenceType StreamTaskListener MemberReference f ClassCreator ReferenceType LargeText MemberReference f Literal false ReferenceType Thread",0
317,317,"CompilationUnit PackageDeclaration hudson.security Import com.thoughtworks.xstream.converters.Converter Import com.thoughtworks.xstream.converters.MarshallingContext Import com.thoughtworks.xstream.converters.UnmarshallingContext Import com.thoughtworks.xstream.io.HierarchicalStreamReader Import com.thoughtworks.xstream.io.HierarchicalStreamWriter Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.Item Import hudson.util.FormValidation Import hudson.util.VersionNumber Import hudson.util.FormValidation.Kind Import hudson.Functions Import hudson.Extension Import net.sf.json.JSONObject Import org.acegisecurity.userdetails.UsernameNotFoundException Import org.acegisecurity.acls.sid.Sid Import org.kohsuke.stapler.Stapler Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.QueryParameter Import org.springframework.dao.DataAccessException Import javax.servlet.ServletException Import java.util.ArrayList Import java.util.Arrays Import java.util.HashMap Import java.util.HashSet Import java.util.List Import java.util.Map Import java.util.Map.Entry Import java.util.Set Import java.io.IOException Import java.io.Serializable ClassDeclaration Modifier public /**
 * Role-based authorization via a matrix.
 *
 * @author Kohsuke Kawaguchi
 */ GlobalMatrixAuthorizationStrategy FieldDeclaration Modifier private transient ReferenceType SidACL VariableDeclarator acl ClassCreator ReferenceType AclImpl FieldDeclaration /**
     * List up all permissions that are granted.
     *
     * Strings are either the granted authority or the principal,
     * which is not distinguished.
     */ Modifier private final ReferenceType Map TypeArgument ReferenceType Permission TypeArgument ReferenceType Set TypeArgument ReferenceType String VariableDeclarator grantedPermissions ClassCreator ReferenceType HashMap TypeArgument ReferenceType Permission TypeArgument ReferenceType Set TypeArgument ReferenceType String FieldDeclaration Modifier private final ReferenceType Set TypeArgument ReferenceType String VariableDeclarator sids ClassCreator ReferenceType HashSet TypeArgument ReferenceType String MethodDeclaration /**
     * Adds to {@link #grantedPermissions}.
     * Use of this method should be limited during construction,
     * as this object itself is considered immutable once populated.
     */ Modifier public add FormalParameter ReferenceType Permission p FormalParameter ReferenceType String sid LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator set MethodInvocation grantedPermissions MemberReference p get IfStatement BinaryOperation == MemberReference set Literal null StatementExpression MethodInvocation grantedPermissions MemberReference p Assignment MemberReference set ClassCreator ReferenceType HashSet TypeArgument ReferenceType String = put End StatementExpression MethodInvocation set MemberReference sid add StatementExpression MethodInvocation sids MemberReference sid add MethodDeclaration /**
     * Works like {@link #add(Permission, String)} but takes both parameters
     * from a single string of the form <tt>PERMISSIONID:sid</tt>
     */ Modifier private add FormalParameter ReferenceType String shortForm LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation shortForm Literal ':' indexOf StatementExpression MethodInvocation MethodInvocation Permission MethodInvocation shortForm Literal 0 MemberReference idx substring fromId MethodInvocation shortForm BinaryOperation + MemberReference idx Literal 1 substring add MethodDeclaration Modifier public Annotation Override ReferenceType SidACL getRootACL ReturnStatement MemberReference acl MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType String getGroups ReturnStatement MemberReference sids MethodDeclaration /**
     * In earlier version of Hudson we used to use reflection converter, which calls this method.
     * This is now unmarshaller via {@link ConverterImpl}
     */ Modifier private ReferenceType Object readResolve StatementExpression MethodInvocation MemberReference grantedPermissions migrateHudson2324 StatementExpression Assignment MemberReference acl ClassCreator ReferenceType AclImpl = ReturnStatement This MethodDeclaration /**
     * Due to HUDSON-2324, we want to inject Item.READ permission to everyone who has Hudson.READ,
     * to remain backward compatible
     * @param grantedPermissions
     */ Modifier static migrateHudson2324 FormalParameter ReferenceType Map TypeArgument ReferenceType Permission TypeArgument ReferenceType Set TypeArgument ReferenceType String grantedPermissions IfStatement MethodInvocation Hudson MethodInvocation ClassCreator ReferenceType VersionNumber Literal ""1.300.*"" isUpgradedFromBefore getInstance BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator f MethodInvocation grantedPermissions MemberReference Hudson READ get IfStatement BinaryOperation != MemberReference f Literal null BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator t MethodInvocation grantedPermissions MemberReference Item READ get IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference f addAll StatementExpression Assignment MemberReference t ClassCreator ReferenceType HashSet TypeArgument ReferenceType String MemberReference f = End StatementExpression MethodInvocation grantedPermissions MemberReference Item READ MemberReference t put End End MethodDeclaration /**
     * Checks if the given SID has the given permission.
     */ Modifier public BasicType boolean hasPermission FormalParameter ReferenceType String sid FormalParameter ReferenceType Permission p ForStatement ForControl BinaryOperation != MemberReference p Literal null Assignment MemberReference p MemberReference p impliedBy = BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator set MethodInvocation grantedPermissions MemberReference p get IfStatement BinaryOperation && BinaryOperation != MemberReference set Literal null MethodInvocation set MemberReference sid contains ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration /**
     * Checks if the permission is explicitly given, instead of implied through {@link Permission#impliedBy}.
     */ Modifier public BasicType boolean hasExplicitPermission FormalParameter ReferenceType String sid FormalParameter ReferenceType Permission p LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator set MethodInvocation grantedPermissions MemberReference p get ReturnStatement BinaryOperation && BinaryOperation != MemberReference set Literal null MethodInvocation set MemberReference sid contains MethodDeclaration /**
     * Returns all SIDs configured in this matrix, minus ""anonymous""
     *
     * @return
     *      Always non-null.
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getAllSIDs LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator r ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator set MethodInvocation grantedPermissions values StatementExpression MethodInvocation r MemberReference set addAll End StatementExpression MethodInvocation r Literal ""anonymous"" remove LocalVariableDeclaration ReferenceType String VariableDeclarator data MethodInvocation r ArrayCreator ReferenceType String MethodInvocation r size toArray StatementExpression MethodInvocation Arrays MemberReference data sort ReturnStatement MethodInvocation Arrays MemberReference data asList ClassDeclaration Modifier private final AclImpl MethodDeclaration Modifier protected ReferenceType Boolean hasPermission FormalParameter ReferenceType Sid p FormalParameter ReferenceType Permission permission IfStatement This GlobalMatrixAuthorizationStrategy MethodInvocation MethodInvocation MemberReference p toString MemberReference permission hasPermission ReturnStatement Literal true End ReturnStatement Literal null ReferenceType SidACL FieldDeclaration Modifier public final static Annotation Extension ReferenceType DescriptorImpl VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public static /**
     * Persist {@link GlobalMatrixAuthorizationStrategy} as a list of IDs that
     * represent {@link GlobalMatrixAuthorizationStrategy#grantedPermissions}.
     */ ConverterImpl MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class type ReturnStatement BinaryOperation == MemberReference type ClassReference ReferenceType GlobalMatrixAuthorizationStrategy MethodDeclaration Modifier public marshal FormalParameter ReferenceType Object source FormalParameter ReferenceType HierarchicalStreamWriter writer FormalParameter ReferenceType MarshallingContext context LocalVariableDeclaration ReferenceType GlobalMatrixAuthorizationStrategy VariableDeclarator strategy Cast ReferenceType GlobalMatrixAuthorizationStrategy MemberReference source ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType Permission TypeArgument ReferenceType Set TypeArgument ReferenceType String VariableDeclarator e MethodInvocation strategy.grantedPermissions entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation e MethodInvocation getId getKey ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator sid MethodInvocation e getValue BlockStatement StatementExpression MethodInvocation writer Literal ""permission"" startNode StatementExpression MethodInvocation context BinaryOperation + BinaryOperation + MemberReference p Literal ':' MemberReference sid convertAnother StatementExpression MethodInvocation writer endNode End End MethodDeclaration Modifier public ReferenceType Object unmarshal FormalParameter ReferenceType HierarchicalStreamReader reader FormalParameter Modifier final ReferenceType UnmarshallingContext context LocalVariableDeclaration ReferenceType GlobalMatrixAuthorizationStrategy VariableDeclarator as MethodInvocation create WhileStatement MethodInvocation reader hasMoreChildren BlockStatement StatementExpression MethodInvocation reader moveDown LocalVariableDeclaration ReferenceType String VariableDeclarator id Cast ReferenceType String MethodInvocation context MemberReference as ClassReference ReferenceType String convertAnother StatementExpression MethodInvocation as MemberReference id add StatementExpression MethodInvocation reader moveUp End StatementExpression MethodInvocation MemberReference as grantedPermissions migrateHudson2324 ReturnStatement MemberReference as MethodDeclaration Modifier protected ReferenceType GlobalMatrixAuthorizationStrategy create ReturnStatement ClassCreator ReferenceType GlobalMatrixAuthorizationStrategy ReferenceType Converter ClassDeclaration Modifier public static DescriptorImpl ConstructorDeclaration Modifier protected DescriptorImpl FormalParameter ReferenceType Class TypeArgument ReferenceType GlobalMatrixAuthorizationStrategy extends clazz StatementExpression SuperConstructorInvocation MemberReference clazz ConstructorDeclaration Modifier public DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages GlobalMatrixAuthorizationStrategy_DisplayName MethodDeclaration Modifier public ReferenceType AuthorizationStrategy newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException LocalVariableDeclaration ReferenceType GlobalMatrixAuthorizationStrategy VariableDeclarator gmas MethodInvocation create ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType JSONObject VariableDeclarator r Cast ReferenceType Set TypeArgument ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType JSONObject MethodInvocation formData MethodInvocation entrySet Literal ""data"" getJSONObject BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sid MethodInvocation r getKey ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Boolean VariableDeclarator e Cast ReferenceType Set TypeArgument ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Boolean MethodInvocation r MethodInvocation entrySet getValue BlockStatement IfStatement MethodInvocation e getValue BlockStatement LocalVariableDeclaration ReferenceType Permission VariableDeclarator p MethodInvocation Permission MethodInvocation e getKey fromId StatementExpression MethodInvocation gmas MemberReference p MemberReference sid add End End End ReturnStatement MemberReference gmas MethodDeclaration Modifier protected ReferenceType GlobalMatrixAuthorizationStrategy create ReturnStatement ClassCreator ReferenceType GlobalMatrixAuthorizationStrategy MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/security/global-matrix.html"" MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType PermissionGroup getAllGroups LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType PermissionGroup VariableDeclarator groups ClassCreator ReferenceType ArrayList TypeArgument ReferenceType PermissionGroup MethodInvocation PermissionGroup getAll StatementExpression MethodInvocation groups MethodInvocation PermissionGroup ClassReference ReferenceType Permission get remove ReturnStatement MemberReference groups MethodDeclaration Modifier public BasicType boolean showPermission FormalParameter ReferenceType Permission p ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType FormValidation doCheckName FormalParameter Annotation QueryParameter ReferenceType String value IOException ServletException ReturnStatement MethodInvocation MemberReference value MethodInvocation Hudson getInstance MemberReference Hudson ADMINISTER doCheckName MethodDeclaration ReferenceType FormValidation doCheckName FormalParameter ReferenceType String value FormalParameter ReferenceType AccessControlled subject FormalParameter ReferenceType Permission permission IOException ServletException IfStatement MethodInvocation ! subject MemberReference permission hasPermission ReturnStatement MethodInvocation FormValidation ok End LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator v MethodInvocation value Literal 1 BinaryOperation - MethodInvocation value length Literal 1 substring LocalVariableDeclaration ReferenceType SecurityRealm VariableDeclarator sr MethodInvocation Hudson MethodInvocation getSecurityRealm getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator ev MethodInvocation Functions MemberReference v escape IfStatement MethodInvocation v Literal ""authenticated"" equals ReturnStatement MethodInvocation FormValidation MemberReference Kind OK BinaryOperation + MethodInvocation Literal ""user.gif"" makeImg MemberReference ev respond End TryStatement StatementExpression MethodInvocation sr MemberReference v loadUserByUsername ReturnStatement MethodInvocation FormValidation MemberReference Kind OK BinaryOperation + MethodInvocation Literal ""person.gif"" makeImg MemberReference ev respond CatchClause CatchClauseParameter UserMayOrMayNotExistException e ReturnStatement MethodInvocation FormValidation MemberReference Kind OK MemberReference ev respond CatchClause CatchClauseParameter UsernameNotFoundException e CatchClause CatchClauseParameter DataAccessException e TryStatement StatementExpression MethodInvocation sr MemberReference v loadGroupByGroupname ReturnStatement MethodInvocation FormValidation MemberReference Kind OK BinaryOperation + MethodInvocation Literal ""user.gif"" makeImg MemberReference ev respond CatchClause CatchClauseParameter UserMayOrMayNotExistException e ReturnStatement MethodInvocation FormValidation MemberReference Kind OK MemberReference ev respond CatchClause CatchClauseParameter UsernameNotFoundException e CatchClause CatchClauseParameter DataAccessException e ReturnStatement MethodInvocation FormValidation MemberReference Kind ERROR BinaryOperation + MethodInvocation Literal ""error.gif"" makeImg MemberReference ev respond MethodDeclaration Modifier private ReferenceType String makeImg FormalParameter ReferenceType String gif ReturnStatement MethodInvocation String Literal ""<img src='%s%s/images/16x16/%s' style='margin-right:0.2em'>"" MethodInvocation Stapler MethodInvocation getContextPath getCurrentRequest MemberReference Hudson RESOURCE_PATH MemberReference gif format ReferenceType Descriptor TypeArgument ReferenceType AuthorizationStrategy ReferenceType AuthorizationStrategy",0
316,316,"CompilationUnit PackageDeclaration hudson.model Import hudson.EnvVars Import hudson.slaves.NodeSpecific InterfaceDeclaration Modifier public /**
 * Represents any concept that can be adapted for a certain environment.
 * 
 * Mainly for documentation purposes.
 *
 * @since 1.286
 * @param <T>
 *      Concrete type that represents the thing that can be adapted.
 * @see NodeSpecific
 */ EnvironmentSpecific MethodDeclaration /**
	 * Returns a specialized copy of T for functioning in the given environment.
	 */ ReferenceType T forEnvironment FormalParameter ReferenceType EnvVars environment TypeParameter T ReferenceType EnvironmentSpecific TypeArgument ReferenceType T",0
230,230,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.Authentication Import org.acegisecurity.GrantedAuthority Import org.acegisecurity.acls.sid.GrantedAuthoritySid Import org.acegisecurity.acls.sid.PrincipalSid Import org.acegisecurity.acls.sid.Sid Import java.util.ArrayList Import java.util.List ClassDeclaration Modifier public /**
 * Accses control list.
 *
 * @author Kohsuke Kawaguchi
 */ SparseACL ClassDeclaration Modifier public final static Entry FieldDeclaration Modifier public final ReferenceType Sid VariableDeclarator sid FieldDeclaration Modifier public final ReferenceType Permission VariableDeclarator permission FieldDeclaration Modifier public final BasicType boolean VariableDeclarator allowed ConstructorDeclaration Modifier public Entry FormalParameter ReferenceType Sid sid FormalParameter ReferenceType Permission permission FormalParameter BasicType boolean allowed StatementExpression Assignment This MemberReference sid MemberReference sid = StatementExpression Assignment This MemberReference permission MemberReference permission = StatementExpression Assignment This MemberReference allowed MemberReference allowed = FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType Entry VariableDeclarator entries ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Entry FieldDeclaration Modifier private ReferenceType ACL VariableDeclarator parent ConstructorDeclaration Modifier public SparseACL FormalParameter ReferenceType ACL parent StatementExpression Assignment This MemberReference parent MemberReference parent = MethodDeclaration Modifier public add FormalParameter ReferenceType Entry e StatementExpression MethodInvocation entries MemberReference e add MethodDeclaration Modifier public add FormalParameter ReferenceType Sid sid FormalParameter ReferenceType Permission permission FormalParameter BasicType boolean allowed StatementExpression MethodInvocation ClassCreator ReferenceType Entry MemberReference sid MemberReference permission MemberReference allowed add MethodDeclaration Modifier public BasicType boolean hasPermission FormalParameter ReferenceType Authentication a FormalParameter ReferenceType Permission permission IfStatement BinaryOperation == MemberReference a MemberReference SYSTEM ReturnStatement Literal true End LocalVariableDeclaration ReferenceType Boolean VariableDeclarator b MethodInvocation MemberReference a MemberReference permission _hasPermission IfStatement BinaryOperation != MemberReference b Literal null ReturnStatement MemberReference b End IfStatement BinaryOperation != MemberReference parent Literal null ReturnStatement MethodInvocation parent MemberReference a MemberReference permission hasPermission End ReturnStatement Literal false MethodDeclaration Modifier protected Annotation Override ReferenceType Boolean hasPermission FormalParameter ReferenceType Sid p FormalParameter ReferenceType Permission permission ForStatement ForControl BinaryOperation != MemberReference permission Literal null Assignment MemberReference permission MemberReference permission impliedBy = BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry VariableDeclarator e MemberReference entries BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference e permission MemberReference permission MethodInvocation e.sid MemberReference p equals ReturnStatement MemberReference e allowed End End End ReturnStatement Literal null ReferenceType SidACL",0
369,369,,1
357,357,,0
10,10,"CompilationUnit PackageDeclaration hudson.scheduler Import antlr.ANTLRException Import java.util.Calendar Import java.util.Collection Import java.util.Vector ClassDeclaration Modifier public final /**
 * {@link CronTab} list (logically OR-ed).
 *
 * @author Kohsuke Kawaguchi
 */ CronTabList FieldDeclaration Modifier private final ReferenceType Vector TypeArgument ReferenceType CronTab VariableDeclarator tabs ConstructorDeclaration Modifier public CronTabList FormalParameter ReferenceType Collection TypeArgument ReferenceType CronTab tabs StatementExpression Assignment This MemberReference tabs ClassCreator ReferenceType Vector TypeArgument ReferenceType CronTab MemberReference tabs = MethodDeclaration /**
     * Returns true if the given calendar matches
     */ Modifier public synchronized BasicType boolean check FormalParameter ReferenceType Calendar cal ForStatement EnhancedForControl VariableDeclaration ReferenceType CronTab VariableDeclarator tab MemberReference tabs BlockStatement IfStatement MethodInvocation tab MemberReference cal check ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration /**
     * Checks if this crontab entry looks reasonable,
     * and if not, return an warning message.
     *
     * <p>
     * The point of this method is to catch syntactically correct
     * but semantically suspicious combinations, like
     * ""* 0 * * *""
     */ Modifier public ReferenceType String checkSanity ForStatement EnhancedForControl VariableDeclaration ReferenceType CronTab VariableDeclarator tab MemberReference tabs BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation tab checkSanity IfStatement BinaryOperation != MemberReference s Literal null ReturnStatement MemberReference s End End ReturnStatement Literal null MethodDeclaration Modifier public static ReferenceType CronTabList create FormalParameter ReferenceType String format ANTLRException LocalVariableDeclaration ReferenceType Vector TypeArgument ReferenceType CronTab VariableDeclarator r ClassCreator ReferenceType Vector TypeArgument ReferenceType CronTab LocalVariableDeclaration BasicType int VariableDeclarator lineNumber Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation format Literal ""\\r?\\n"" split BlockStatement StatementExpression MemberReference ++ lineNumber StatementExpression Assignment MemberReference line MethodInvocation line trim = IfStatement BinaryOperation || BinaryOperation == MethodInvocation line length Literal 0 MethodInvocation line Literal ""#"" startsWith ContinueStatement End TryStatement StatementExpression MethodInvocation r ClassCreator ReferenceType CronTab MemberReference line MemberReference lineNumber add CatchClause CatchClauseParameter ANTLRException e ThrowStatement ClassCreator ReferenceType ANTLRException MethodInvocation Messages MemberReference line MethodInvocation e toString CronTabList_InvalidInput MemberReference e End ReturnStatement ClassCreator ReferenceType CronTabList MemberReference r",0
581,581,,0
236,236,"CompilationUnit PackageDeclaration hudson.remoting Import hudson.remoting.ExportTable.ExportList Import java.io.EOFException Import java.io.IOException Import java.io.InputStream Import java.io.ObjectInputStream Import java.io.ObjectOutputStream Import java.io.OutputStream Import java.io.PrintWriter Import java.io.UnsupportedEncodingException Import java.util.Collections Import java.util.Hashtable Import java.util.Map Import java.util.Vector Import java.util.concurrent  Import java.util.concurrent.atomic.AtomicLong Import java.util.concurrent.atomic.AtomicInteger Import java.util.logging.Level Import java.util.logging.Logger Import java.net.URL ClassDeclaration Modifier public /**
 * Represents a communication channel to the remote peer.
 *
 * <p>
 * A {@link Channel} is a mechanism for two JVMs to communicate over
 * bi-directional {@link InputStream}/{@link OutputStream} pair.
 * {@link Channel} represents an endpoint of the stream, and thus
 * two {@link Channel}s are always used in a pair.
 *
 * <p>
 * Communication is established as soon as two {@link Channel} instances
 * are created at the end fo the stream pair
 * until the stream is terminated via {@link #close()}.
 *
 * <p>
 * The basic unit of remoting is an executable {@link Callable} object.
 * An application can create a {@link Callable} object, and execute it remotely
 * by using the {@link #call(Callable)} method or {@link #callAsync(Callable)} method.
 *
 * <p>
 * In this sense, {@link Channel} is a mechanism to delegate/offload computation
 * to other JVMs and somewhat like an agent system. This is bit different from
 * remoting technologies like CORBA or web services, where the server exposes a
 * certain functionality that clients invoke. 
 *
 * <p>
 * {@link Callable} object, as well as the return value / exceptions,
 * are transported by using Java serialization. All the necessary class files
 * are also shipped over {@link Channel} on-demand, so there's no need to
 * pre-deploy such classes on both JVMs. 
 *
 *
 * <h2>Implementor's Note</h2>
 * <p>
 * {@link Channel} builds its features in a layered model. Its higher-layer
 * features are built on top of its lower-layer features, and they
 * are called layer-0, layer-1, etc.
 *
 * <ul>
 * <li>
 *  <b>Layer 0</b>:
 *  See {@link Command} for more details. This is for higher-level features,
 *  and not likely useful for applications directly.
 * <li>
 *  <b>Layer 1</b>:
 *  See {@link Request} for more details. This is for higher-level features,
 *  and not likely useful for applications directly.
 * </ul>
 *
 * @author Kohsuke Kawaguchi
 */ Channel FieldDeclaration Modifier private final ReferenceType ObjectInputStream VariableDeclarator ois FieldDeclaration Modifier private final ReferenceType ObjectOutputStream VariableDeclarator oos FieldDeclaration Modifier private final ReferenceType String VariableDeclarator name FieldDeclaration Modifier final BasicType boolean VariableDeclarator isRestricted FieldDeclaration Modifier final ReferenceType ExecutorService VariableDeclarator executor FieldDeclaration /**
     * If true, the incoming link is already shut down,
     * and reader is already terminated.
     */ Modifier private volatile BasicType boolean VariableDeclarator inClosed Literal false FieldDeclaration /**
     * If true, the outgoing link is already shut down,
     * and no command can be sent.
     */ Modifier private volatile BasicType boolean VariableDeclarator outClosed Literal false FieldDeclaration Modifier final ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Request TypeArgument ? TypeArgument ? VariableDeclarator pendingCalls ClassCreator ReferenceType Hashtable TypeArgument ReferenceType Integer TypeArgument ReferenceType Request TypeArgument ? TypeArgument ? FieldDeclaration /**
     * Records the {@link Request}s being executed on this channel, sent by the remote peer.
     */ Modifier final ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Request TypeArgument ? TypeArgument ? VariableDeclarator executingCalls MethodInvocation Collections ClassCreator ReferenceType Hashtable TypeArgument ReferenceType Integer TypeArgument ReferenceType Request TypeArgument ? TypeArgument ? synchronizedMap FieldDeclaration /**
     * {@link ClassLoader}s that are proxies of the remote classloaders.
     */ Modifier final ReferenceType ImportedClassLoaderTable VariableDeclarator importedClassLoaders ClassCreator ReferenceType ImportedClassLoaderTable This FieldDeclaration /**
     * Objects exported via {@link #export(Class, Object)}.
     */ Modifier private final ReferenceType ExportTable TypeArgument ReferenceType Object VariableDeclarator exportedObjects ClassCreator ReferenceType ExportTable TypeArgument ReferenceType Object FieldDeclaration /**
     * Registered listeners. 
     */ Modifier private final ReferenceType Vector TypeArgument ReferenceType Listener VariableDeclarator listeners ClassCreator ReferenceType Vector TypeArgument ReferenceType Listener FieldDeclaration Modifier private BasicType int VariableDeclarator gcCounter FieldDeclaration /**
     * Total number of nanoseconds spent for remote class loading.
     * <p>
     * Remote code execution often results in classloading activity
     * (more precisely, when the remote peer requests some computation
     * on this channel, this channel often has to load necessary
     * classes from the remote peer.)
     * <p>
     * This counter represents the total amount of time this channel
     * had to spend loading classes from the remote peer. The time
     * measurement doesn't include the time locally spent to actually
     * define the class (as the local classloading would have incurred
     * the same cost.)
     */ Modifier public final ReferenceType AtomicLong VariableDeclarator classLoadingTime ClassCreator ReferenceType AtomicLong FieldDeclaration /**
     * Total counts of remote classloading activities. Used in a pair
     * with {@link #classLoadingTime}.
     */ Modifier public final ReferenceType AtomicInteger VariableDeclarator classLoadingCount ClassCreator ReferenceType AtomicInteger FieldDeclaration /**
     * Total number of nanoseconds spent for remote resource loading.
     * @see #classLoadingTime
     */ Modifier public final ReferenceType AtomicLong VariableDeclarator resourceLoadingTime ClassCreator ReferenceType AtomicLong FieldDeclaration /**
     * Total count of remote resource loading.
     * @see #classLoadingCount
     */ Modifier public final ReferenceType AtomicInteger VariableDeclarator resourceLoadingCount ClassCreator ReferenceType AtomicInteger FieldDeclaration /**
     * Property bag that contains application-specific stuff.
     */ Modifier private final ReferenceType Hashtable TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator properties ClassCreator ReferenceType Hashtable TypeArgument ReferenceType Object TypeArgument ReferenceType Object FieldDeclaration /**
     * Proxy to the remote {@link Channel} object.
     */ Modifier private ReferenceType IChannel VariableDeclarator remoteChannel EnumDeclaration Modifier public /**
     * Communication mode.
     * @since 1.161
     */ Mode EnumBody EnumConstantDeclaration /**
         * Send binary data over the stream. Most efficient.
         */ BINARY ArrayCreator BasicType byte ArrayInitializer Literal 0 Literal 0 Literal 0 Literal 0 EnumConstantDeclaration /**
         * Send ASCII over the stream. Uses base64, so the efficiency goes down by 33%,
         * but this is useful where stream is binary-unsafe, such as telnet.
         */ TEXT Literal ""<===[HUDSON TRANSMISSION BEGINS]===>"" MethodDeclaration Modifier protected ReferenceType OutputStream wrap FormalParameter ReferenceType OutputStream os ReturnStatement MethodInvocation BinarySafeStream MemberReference os wrap MethodDeclaration Modifier protected ReferenceType InputStream wrap FormalParameter ReferenceType InputStream is ReturnStatement MethodInvocation BinarySafeStream MemberReference is wrap EnumConstantDeclaration /**
         * Let the remote peer decide the transmission mode and follow that.
         * Note that if both ends use NEGOTIATE, it will dead lock.
         */ NEGOTIATE ArrayCreator BasicType byte Literal 0 FieldDeclaration /**
         * Preamble used to indicate the tranmission mode.
         * Because of the algorithm we use to detect the preamble,
         * the string cannot be any random string. For example,
         * if the preamble is ""AAB"", we'll fail to find a preamble
         * in ""AAAB"".
         */ Modifier private final BasicType byte VariableDeclarator preamble ConstructorDeclaration Mode FormalParameter ReferenceType String preamble TryStatement StatementExpression Assignment This MemberReference preamble MethodInvocation preamble Literal ""US-ASCII"" getBytes = CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType Error MemberReference e ConstructorDeclaration Mode FormalParameter BasicType byte preamble StatementExpression Assignment This MemberReference preamble MemberReference preamble = MethodDeclaration Modifier protected ReferenceType OutputStream wrap FormalParameter ReferenceType OutputStream os ReturnStatement MemberReference os MethodDeclaration Modifier protected ReferenceType InputStream wrap FormalParameter ReferenceType InputStream is ReturnStatement MemberReference is ConstructorDeclaration Modifier public Channel FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService exec FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os IOException StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference exec MemberReference Mode BINARY MemberReference is MemberReference os Literal null ConstructorDeclaration Modifier public Channel FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService exec FormalParameter ReferenceType Mode mode FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os IOException StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference exec MemberReference mode MemberReference is MemberReference os Literal null ConstructorDeclaration Modifier public Channel FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService exec FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter ReferenceType OutputStream header IOException StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference exec MemberReference Mode BINARY MemberReference is MemberReference os MemberReference header ConstructorDeclaration Modifier public Channel FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService exec FormalParameter ReferenceType Mode mode FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter ReferenceType OutputStream header IOException StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference exec MemberReference mode MemberReference is MemberReference os MemberReference header Literal false ConstructorDeclaration Modifier public /**
     * Creates a new channel.
     * 
     * @param name
     *      Human readable name of this channel. Used for debug/logging. Can be anything.
     * @param exec
     *      Commands sent from the remote peer will be executed by using this {@link Executor}.
     * @param mode
     *      The encoding to be used over the stream.
     * @param is
     *      Stream connected to the remote peer. It's the caller's responsibility to do
     *      buffering on this stream, if that's necessary.
     * @param os
     *      Stream connected to the remote peer. It's the caller's responsibility to do
     *      buffering on this stream, if that's necessary.
     * @param header
     *      If non-null, receive the portion of data in <tt>is</tt> before
     *      the data goes into the ""binary mode"". This is useful
     *      when the established communication channel might include some data that might
     *      be useful for debugging/trouble-shooting.
     * @param restricted
     *      If true, this channel won't accept {@link Command}s that allow the remote end to execute arbitrary closures
     *      --- instead they can only call methods on objects that are exported by this channel.
     *      This also prevents the remote end from loading classes into JVM.
     *
     *      Note that it still allows the remote end to deserialize arbitrary object graph
     *      (provided that all the classes are already available in this JVM), so exactly how
     *      safe the resulting behavior is is up to discussion.
     */ Channel FormalParameter ReferenceType String name FormalParameter ReferenceType ExecutorService exec FormalParameter ReferenceType Mode mode FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter ReferenceType OutputStream header FormalParameter BasicType boolean restricted IOException StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference executor MemberReference exec = StatementExpression Assignment This MemberReference isRestricted MemberReference restricted = LocalVariableDeclaration ReferenceType ObjectOutputStream VariableDeclarator oos Literal null IfStatement BinaryOperation != MethodInvocation This Literal false export Literal 1 ThrowStatement ClassCreator ReferenceType AssertionError End StatementExpression Assignment MemberReference remoteChannel MethodInvocation RemoteInvocationHandler This Literal 1 ClassReference ReferenceType IChannel Literal false wrap = IfStatement BinaryOperation != MemberReference mode MemberReference Mode NEGOTIATE BlockStatement StatementExpression MethodInvocation os MemberReference mode preamble write StatementExpression Assignment MemberReference oos ClassCreator ReferenceType ObjectOutputStream MethodInvocation mode MemberReference os wrap = StatementExpression MethodInvocation oos flush End BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ptr ArrayCreator BasicType int Literal 2 LocalVariableDeclaration ReferenceType Mode VariableDeclarator modes ArrayInitializer MemberReference Mode BINARY MemberReference Mode TEXT WhileStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation is read IfStatement BinaryOperation == MemberReference ch Literal - 1 ThrowStatement ClassCreator ReferenceType EOFException Literal ""unexpected stream termination"" End ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 2 MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator preamble MemberReference ArraySelector MemberReference i MemberReference preamble modes IfStatement BinaryOperation == MemberReference ArraySelector MemberReference ArraySelector MemberReference i ptr preamble MemberReference ch BlockStatement IfStatement BinaryOperation == MemberReference ++ ArraySelector MemberReference i ptr MemberReference preamble length BlockStatement IfStatement BinaryOperation == MemberReference mode MemberReference Mode NEGOTIATE BlockStatement StatementExpression Assignment MemberReference mode MemberReference ArraySelector MemberReference i modes = StatementExpression MethodInvocation os MemberReference mode preamble write StatementExpression Assignment MemberReference oos ClassCreator ReferenceType ObjectOutputStream MethodInvocation mode MemberReference os wrap = StatementExpression MethodInvocation oos flush BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i modes MemberReference mode ThrowStatement ClassCreator ReferenceType IOException Literal ""Protocol negotiation failure"" End End StatementExpression Assignment This MemberReference oos MemberReference oos = StatementExpression Assignment This MemberReference ois ClassCreator ReferenceType ObjectInputStream MethodInvocation mode MemberReference is wrap = StatementExpression ClassCreator MethodInvocation start ReferenceType ReaderThread MemberReference name ReturnStatement End BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ptr Literal 0 = End End IfStatement BinaryOperation != MemberReference header Literal null StatementExpression MethodInvocation header MemberReference ch write End End ClassDeclaration Modifier public static abstract /**
     * Callback ""interface"" for changes in the state of {@link Channel}.
     */ Listener MethodDeclaration /**
         * When the channel was closed normally or abnormally due to an error.
         *
         * @param cause
         *      if the channel is closed abnormally, this parameter
         *      represents an exception that has triggered it.
         */ Modifier public onClosed FormalParameter ReferenceType Channel channel FormalParameter ReferenceType IOException cause MethodDeclaration BasicType boolean isOutClosed ReturnStatement MemberReference outClosed MethodDeclaration /**
     * Sends a command to the remote end and executes it there.
     *
     * <p>
     * This is the lowest layer of abstraction in {@link Channel}.
     * {@link Command}s are executed on a remote system in the order they are sent.
     */ Modifier synchronized send FormalParameter ReferenceType Command cmd IOException IfStatement MemberReference outClosed ThrowStatement ClassCreator ReferenceType IOException Literal ""already closed"" End IfStatement MethodInvocation logger MemberReference Level FINE isLoggable StatementExpression MethodInvocation logger BinaryOperation + Literal ""Send "" MemberReference cmd fine End LocalVariableDeclaration ReferenceType Channel VariableDeclarator old MethodInvocation Channel This setCurrent TryStatement StatementExpression MethodInvocation oos MemberReference cmd writeObject StatementExpression MethodInvocation oos flush StatementExpression MethodInvocation Channel MemberReference old setCurrent IfStatement BinaryOperation instanceof MemberReference cmd ReferenceType CloseCommand StatementExpression MethodInvocation oos reset End MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public TypeParameter T ReferenceType T export FormalParameter ReferenceType Class TypeArgument ReferenceType T type FormalParameter ReferenceType T instance ReturnStatement MethodInvocation MemberReference type MemberReference instance Literal true export MethodDeclaration /**
     * @param userProxy
     *      If true, the returned proxy will be capable to handle classes
     *      defined in the user classloader as parameters and return values.
     *      Such proxy relies on {@link RemoteClassLoader} and related mechanism,
     *      so it's not usable for implementing lower-layer services that are
     *      used by {@link RemoteClassLoader}.
     *
     *      To create proxies for objects inside remoting, pass in false. 
     */ TypeParameter T ReferenceType T export FormalParameter ReferenceType Class TypeArgument ReferenceType T type FormalParameter ReferenceType T instance FormalParameter BasicType boolean userProxy IfStatement BinaryOperation == MemberReference instance Literal null ReturnStatement Literal null End IfStatement BinaryOperation == BinaryOperation % MemberReference gcCounter Literal 10000 Literal 0 TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType GCCommand send CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation logger MemberReference Level WARNING Literal ""Unable to send GC command"" MemberReference e log End LocalVariableDeclaration Modifier final BasicType int VariableDeclarator id MethodInvocation MemberReference instance export ReturnStatement MethodInvocation RemoteInvocationHandler Literal null MemberReference id MemberReference type MemberReference userProxy wrap MethodDeclaration BasicType int export FormalParameter ReferenceType Object instance ReturnStatement MethodInvocation exportedObjects MemberReference instance export MethodDeclaration BasicType int export FormalParameter ReferenceType Object instance FormalParameter BasicType boolean automaticUnexport ReturnStatement MethodInvocation exportedObjects MemberReference instance MemberReference automaticUnexport export MethodDeclaration ReferenceType Object getExportedObject FormalParameter BasicType int oid ReturnStatement MethodInvocation exportedObjects MemberReference oid get MethodDeclaration unexport FormalParameter BasicType int id StatementExpression MethodInvocation exportedObjects MemberReference id unexport MethodDeclaration /**
     * Preloads jar files on the remote side.
     *
     * <p>
     * This is a performance improvement method that can be safely
     * ignored if your goal is just to make things working.
     *
     * <p>
     * Normally, classes are transferred over the network one at a time,
     * on-demand. This design is mainly driven by how Java classloading works
     * &mdash; we can't predict what classes will be necessarily upfront very easily.
     *
     * <p>
     * Classes are loaded only once, so for long-running {@link Channel},
     * this is normally an acceptable overhead. But sometimes, for example
     * when a channel is short-lived, or when you know that you'll need
     * a majority of classes in certain jar files, then it is more efficient
     * to send a whole jar file over the network upfront and thereby
     * avoiding individual class transfer over the network.
     *
     * <p>
     * That is what this method does. It ensures that a series of jar files
     * are copied to the remote side (AKA ""preloading."")
     * Classloading will consult the preloaded jars before performing
     * network transfer of class files.
     *
     * @param classLoaderRef
     *      This parameter is used to identify the remote classloader
     *      that will prefetch the specified jar files. That is, prefetching
     *      will ensure that prefetched jars will kick in
     *      when this {@link Callable} object is actually executed remote side.
     *
     *      <p>
     *      {@link RemoteClassLoader}s are created wisely, one per local {@link ClassLoader},
     *      so this parameter doesn't have to be exactly the same {@link Callable}
     *      to be executed later &mdash; it just has to be of the same class.
     * @param classesInJar
     *      {@link Class} objects that identify jar files to be preloaded.
     *      Jar files that contain the specified classes will be preloaded into the remote peer.
     *      You just need to specify one class per one jar.
     * @return
     *      true if the preloading actually happened. false if all the jars
     *      are already preloaded. This method is implemented in such a way that
     *      unnecessary jar file transfer will be avoided, and the return value
     *      will tell you if this optimization kicked in. Under normal circumstances
     *      your program shouldn't depend on this return value. It's just a hint.
     * @throws IOException
     *      if the preloading fails.
     */ Modifier public BasicType boolean preloadJar FormalParameter ReferenceType Callable TypeArgument ? TypeArgument ? classLoaderRef FormalParameter ReferenceType Class classesInJar  IOException InterruptedException ReturnStatement MethodInvocation MethodInvocation UserRequest MemberReference classLoaderRef getClassLoader MemberReference classesInJar preloadJar MethodDeclaration Modifier public BasicType boolean preloadJar FormalParameter ReferenceType ClassLoader local FormalParameter ReferenceType Class classesInJar  IOException InterruptedException LocalVariableDeclaration ReferenceType URL VariableDeclarator jars ArrayCreator ReferenceType URL MemberReference classesInJar length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classesInJar length MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i jars MethodInvocation Which MethodInvocation toURI MethodInvocation toURL MemberReference ArraySelector MemberReference i classesInJar jarFile = End ReturnStatement MethodInvocation ClassCreator ReferenceType PreloadJarTask MemberReference jars MemberReference local call MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType V call FormalParameter ReferenceType Callable TypeArgument ReferenceType V TypeArgument ReferenceType T callable IOException T InterruptedException LocalVariableDeclaration ReferenceType UserRequest TypeArgument ReferenceType V TypeArgument ReferenceType T VariableDeclarator request Literal null TryStatement StatementExpression Assignment MemberReference request ClassCreator ReferenceType UserRequest TypeArgument ReferenceType V TypeArgument ReferenceType T This MemberReference callable = LocalVariableDeclaration ReferenceType UserResponse TypeArgument ReferenceType V TypeArgument ReferenceType T VariableDeclarator r MethodInvocation request This call ReturnStatement MethodInvocation r This MethodInvocation UserRequest MemberReference callable getClassLoader retrieve CatchClause CatchClauseParameter ClassNotFoundException e LocalVariableDeclaration ReferenceType IOException VariableDeclarator x ClassCreator ReferenceType IOException Literal ""Remote call failed"" StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x CatchClause CatchClauseParameter Error e LocalVariableDeclaration ReferenceType IOException VariableDeclarator x ClassCreator ReferenceType IOException Literal ""Remote call failed"" StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x IfStatement BinaryOperation != MemberReference request Literal null StatementExpression MethodInvocation request releaseExports End MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType Future TypeArgument ReferenceType V callAsync FormalParameter Modifier final ReferenceType Callable TypeArgument ReferenceType V TypeArgument ReferenceType T callable IOException LocalVariableDeclaration Modifier final ReferenceType Future TypeArgument ReferenceType UserResponse TypeArgument ReferenceType V TypeArgument ReferenceType T VariableDeclarator f ClassCreator MethodInvocation This callAsync ReferenceType UserRequest TypeArgument ReferenceType V TypeArgument ReferenceType T This MemberReference callable ReturnStatement ClassCreator ReferenceType FutureAdapter TypeArgument ReferenceType V TypeArgument ReferenceType UserResponse TypeArgument ReferenceType V TypeArgument ReferenceType T MemberReference f MethodDeclaration Modifier protected ReferenceType V adapt FormalParameter ReferenceType UserResponse TypeArgument ReferenceType V TypeArgument ReferenceType T r ExecutionException TryStatement ReturnStatement MethodInvocation r This Channel MethodInvocation UserRequest MemberReference callable getClassLoader retrieve CatchClause CatchClauseParameter Throwable t ThrowStatement ClassCreator ReferenceType ExecutionException MemberReference t MethodDeclaration /**
     * Aborts the connection in response to an error.
     */ Modifier protected synchronized terminate FormalParameter ReferenceType IOException e StatementExpression Assignment MemberReference outClosed Assignment MemberReference inClosed Literal true = = TryStatement SynchronizedStatement MemberReference pendingCalls ForStatement EnhancedForControl VariableDeclaration ReferenceType Request TypeArgument ? TypeArgument ? VariableDeclarator req MethodInvocation pendingCalls values StatementExpression MethodInvocation req MemberReference e abort End StatementExpression MethodInvocation pendingCalls clear SynchronizedStatement MemberReference executingCalls ForStatement EnhancedForControl VariableDeclaration ReferenceType Request TypeArgument ? TypeArgument ? VariableDeclarator r MethodInvocation executingCalls values BlockStatement LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType concurrent ReferenceType Future TypeArgument ? VariableDeclarator f MemberReference r future IfStatement BinaryOperation != MemberReference f Literal null StatementExpression MethodInvocation f Literal true cancel End End StatementExpression MethodInvocation executingCalls clear StatementExpression MethodInvocation notifyAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Listener VariableDeclarator l MethodInvocation listeners ArrayCreator ReferenceType Listener MethodInvocation listeners size toArray StatementExpression MethodInvocation l This MemberReference e onClosed End MethodDeclaration /**
     * Registers a new {@link Listener}.
     *
     * @see #removeListener(Listener)
     */ Modifier public addListener FormalParameter ReferenceType Listener l StatementExpression MethodInvocation listeners MemberReference l add MethodDeclaration /**
     * Removes a listener.
     *
     * @return
     *      false if the given listener has not been registered to begin with.
     */ Modifier public BasicType boolean removeListener FormalParameter ReferenceType Listener l ReturnStatement MethodInvocation listeners MemberReference l remove MethodDeclaration /**
     * Waits for this {@link Channel} to be closed down.
     *
     * The close-down of a {@link Channel} might be initiated locally or remotely.
     *
     * @throws InterruptedException
     *      If the current thread is interrupted while waiting for the completion.
     */ Modifier public synchronized join InterruptedException WhileStatement BinaryOperation || MemberReference ! inClosed MemberReference ! outClosed StatementExpression MethodInvocation wait End MethodDeclaration /**
     * Waits for this {@link Channel} to be closed down, but only up the given milliseconds.
     *
     * @throws InterruptedException
     *      If the current thread is interrupted while waiting for the completion.
     * @since 1.299
     */ Modifier public synchronized join FormalParameter BasicType long timeout InterruptedException LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis WhileStatement BinaryOperation && BinaryOperation < BinaryOperation - MethodInvocation System currentTimeMillis MemberReference start MemberReference timeout BinaryOperation || MemberReference ! inClosed MemberReference ! outClosed StatementExpression MethodInvocation BinaryOperation - BinaryOperation + MemberReference timeout MemberReference start MethodInvocation System currentTimeMillis wait End ClassDeclaration Modifier private final static /**
     * Notifies the remote peer that we are closing down.
     *
     * Execution of this command also triggers the {@link ReaderThread} to shut down
     * and quit. The {@link CloseCommand} is always the last command to be sent on
     * {@link ObjectOutputStream}, and it's the last command to be read.
     */ CloseCommand MethodDeclaration Modifier protected execute FormalParameter ReferenceType Channel channel TryStatement StatementExpression MethodInvocation channel close StatementExpression MethodInvocation channel ClassCreator ReferenceType OrderlyShutdown MemberReference createdAt terminate CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation logger MemberReference Level SEVERE BinaryOperation + Literal ""close command failed on "" MemberReference channel name MemberReference e log StatementExpression MethodInvocation logger MemberReference Level INFO Literal ""close command created at"" MemberReference createdAt log MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal ""close"" ReferenceType Command ClassDeclaration Modifier private final static /**
     * Signals the orderly shutdown of the channel, but captures
     * where the termination was initiated as a nested exception.
     */ OrderlyShutdown ConstructorDeclaration Modifier private OrderlyShutdown FormalParameter ReferenceType Throwable cause StatementExpression SuperConstructorInvocation MethodInvocation cause getMessage StatementExpression MethodInvocation MemberReference cause initCause FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType IOException MethodDeclaration /**
     * Resets all the performance counters.
     */ Modifier public resetPerformanceCounters StatementExpression MethodInvocation classLoadingCount Literal 0 set StatementExpression MethodInvocation classLoadingTime Literal 0 set StatementExpression MethodInvocation resourceLoadingCount Literal 0 set StatementExpression MethodInvocation resourceLoadingTime Literal 0 set MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public synchronized close IOException IfStatement MemberReference outClosed ReturnStatement End StatementExpression MethodInvocation ClassCreator ReferenceType CloseCommand send StatementExpression Assignment MemberReference outClosed Literal true = TryStatement StatementExpression MethodInvocation oos close CatchClause CatchClauseParameter IOException e MethodDeclaration /**
     * Gets the application specific property set by {@link #setProperty(Object, Object)}.
     * These properties are also accessible from the remote channel via {@link #getRemoteProperty(Object)}.
     *
     * <p>
     * This mechanism can be used for one side to discover contextual objects created by the other JVM
     * (as opposed to executing {@link Callable}, which cannot have any reference to the context
     * of the remote {@link Channel}.
     */ Modifier public ReferenceType Object getProperty FormalParameter ReferenceType Object key ReturnStatement MethodInvocation properties MemberReference key get MethodDeclaration /**
     * Works like {@link #getProperty(Object)} but wait until some value is set by someone.
     */ Modifier public ReferenceType Object waitForProperty FormalParameter ReferenceType Object key InterruptedException SynchronizedStatement MemberReference properties WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation properties MemberReference key get IfStatement BinaryOperation != MemberReference v Literal null ReturnStatement MemberReference v End StatementExpression MethodInvocation properties wait End MethodDeclaration Modifier public ReferenceType Object setProperty FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value SynchronizedStatement MemberReference properties LocalVariableDeclaration ReferenceType Object VariableDeclarator old MethodInvocation properties MemberReference key MemberReference value put StatementExpression MethodInvocation properties notifyAll ReturnStatement MemberReference old MethodDeclaration Modifier public ReferenceType Object getRemoteProperty FormalParameter ReferenceType Object key ReturnStatement MethodInvocation remoteChannel MemberReference key getProperty MethodDeclaration Modifier public ReferenceType Object waitForRemoteProperty FormalParameter ReferenceType Object key InterruptedException ReturnStatement MethodInvocation remoteChannel MemberReference key waitForProperty MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "":"" MemberReference name MethodDeclaration /**
     * Dumps the list of exported objects and their allocation traces to the given output.
     */ Modifier public dumpExportTable FormalParameter ReferenceType PrintWriter w IOException StatementExpression MethodInvocation exportedObjects MemberReference w dump MethodDeclaration Modifier public ReferenceType ExportList startExportRecording ReturnStatement MethodInvocation exportedObjects startRecording ClassDeclaration Modifier private final ReaderThread ConstructorDeclaration Modifier public ReaderThread FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation BinaryOperation + Literal ""Channel reader thread: "" MemberReference name MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Command VariableDeclarator cmd Literal null TryStatement WhileStatement MemberReference ! inClosed BlockStatement TryStatement LocalVariableDeclaration ReferenceType Channel VariableDeclarator old MethodInvocation Channel This Channel setCurrent TryStatement StatementExpression Assignment MemberReference cmd Cast ReferenceType Command MethodInvocation ois readObject = StatementExpression MethodInvocation Channel MemberReference old setCurrent CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation logger MemberReference Level SEVERE Literal ""Unable to read a command"" MemberReference e log IfStatement MethodInvocation logger MemberReference Level FINE isLoggable StatementExpression MethodInvocation logger BinaryOperation + Literal ""Received "" MemberReference cmd fine End TryStatement StatementExpression MethodInvocation cmd This Channel execute CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation logger MemberReference Level SEVERE BinaryOperation + Literal ""Failed to execute command "" MemberReference cmd MemberReference t log StatementExpression MethodInvocation logger MemberReference Level SEVERE Literal ""This command is created here"" MemberReference cmd createdAt log End StatementExpression MethodInvocation ois close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation logger MemberReference Level SEVERE BinaryOperation + Literal ""I/O error in channel "" MemberReference name MemberReference e log StatementExpression MethodInvocation MemberReference e terminate ReferenceType Thread MethodDeclaration Modifier static ReferenceType Channel setCurrent FormalParameter ReferenceType Channel channel LocalVariableDeclaration ReferenceType Channel VariableDeclarator old MethodInvocation CURRENT get StatementExpression MethodInvocation CURRENT MemberReference channel set ReturnStatement MemberReference old MethodDeclaration /**
     * This method can be invoked during the serialization/deserialization of
     * objects when they are transferred to the remote {@link Channel},
     * as well as during {@link Callable#call()} is invoked. 
     *
     * @return null
     *      if the calling thread is not performing serialization.
     */ Modifier public static ReferenceType Channel current ReturnStatement MethodInvocation CURRENT get FieldDeclaration /**
     * Remembers the current ""channel"" associated for this thread.
     */ Modifier private final static ReferenceType ThreadLocal TypeArgument ReferenceType Channel VariableDeclarator CURRENT ClassCreator ReferenceType ThreadLocal TypeArgument ReferenceType Channel FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator logger MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Channel getLogger ReferenceType VirtualChannel ReferenceType IChannel",0
201,201,"CompilationUnit PackageDeclaration hudson.model Import hudson.remoting.Channel Import hudson.remoting.PingThread Import hudson.remoting.Channel.Mode Import hudson.util.ChunkedOutputStream Import hudson.util.ChunkedInputStream Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.http.HttpServletResponse Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.util.UUID Import java.util.logging.Logger ClassDeclaration Modifier abstract /**
 * Builds a {@link Channel} on top of two HTTP streams (one used for each direction.)
 *
 * @author Kohsuke Kawaguchi
 */ FullDuplexHttpChannel FieldDeclaration Modifier private ReferenceType Channel VariableDeclarator channel FieldDeclaration Modifier private ReferenceType InputStream VariableDeclarator upload FieldDeclaration Modifier private final ReferenceType UUID VariableDeclarator uuid FieldDeclaration Modifier private final BasicType boolean VariableDeclarator restricted FieldDeclaration Modifier private BasicType boolean VariableDeclarator completed ConstructorDeclaration Modifier public FullDuplexHttpChannel FormalParameter ReferenceType UUID uuid FormalParameter BasicType boolean restricted IOException StatementExpression Assignment This MemberReference uuid MemberReference uuid = StatementExpression Assignment This MemberReference restricted MemberReference restricted = MethodDeclaration /**
     * This is where we send the data to the client.
     *
     * <p>
     * If this connection is lost, we'll abort the channel.
     */ Modifier public synchronized download FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp InterruptedException IOException StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_OK setStatus StatementExpression MethodInvocation rsp Literal ""Transfer-Encoding"" Literal ""chunked"" addHeader LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out MethodInvocation rsp getOutputStream IfStatement MemberReference DIY_CHUNKING StatementExpression Assignment MemberReference out ClassCreator ReferenceType ChunkedOutputStream MemberReference out = End StatementExpression MethodInvocation out Literal MethodInvocation getBytes ""Starting HTTP duplex channel"" write StatementExpression MethodInvocation out flush WhileStatement BinaryOperation == MemberReference upload Literal null StatementExpression MethodInvocation wait End TryStatement StatementExpression Assignment MemberReference channel ClassCreator ReferenceType Channel BinaryOperation + Literal ""HTTP full-duplex channel "" MemberReference uuid MemberReference Computer threadPoolForRemoting MemberReference Mode BINARY MemberReference upload MemberReference out Literal null MemberReference restricted = LocalVariableDeclaration ReferenceType PingThread VariableDeclarator ping ClassCreator ReferenceType PingThread MemberReference channel MethodDeclaration Modifier protected Annotation Override onDead StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + Literal ""Duplex-HTTP session "" MemberReference uuid Literal "" is terminated"" info TryStatement StatementExpression MethodInvocation upload close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e StatementExpression MethodInvocation ping start StatementExpression MethodInvocation MemberReference channel main StatementExpression MethodInvocation channel join StatementExpression MethodInvocation ping interrupt StatementExpression Assignment MemberReference completed Literal true = StatementExpression MethodInvocation notify MethodDeclaration Modifier protected abstract main FormalParameter ReferenceType Channel channel IOException InterruptedException MethodDeclaration /**
     * This is where we receive inputs from the client.
     */ Modifier public synchronized upload FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp InterruptedException IOException StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_OK setStatus LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation req getInputStream IfStatement MemberReference DIY_CHUNKING StatementExpression Assignment MemberReference in ClassCreator ReferenceType ChunkedInputStream MemberReference in = End StatementExpression Assignment MemberReference upload MemberReference in = StatementExpression MethodInvocation notify WhileStatement MemberReference ! completed StatementExpression MethodInvocation wait End MethodDeclaration Modifier public ReferenceType Channel getChannel ReturnStatement MemberReference channel FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType FullDuplexHttpChannel getLogger FieldDeclaration /**
     * Set to true if the servlet container doesn't support chunked encoding.
     */ Modifier public static BasicType boolean VariableDeclarator DIY_CHUNKING MethodInvocation Boolean Literal ""hudson.diyChunking"" getBoolean",0
519,519,,1
382,382,,1
505,505,,0
51,51,CompilationUnit PackageDeclaration hudson.views Import hudson.Extension Import hudson.model.Descriptor Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public WeatherColumn MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType ListViewColumn newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType WeatherColumn MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages WeatherColumn_DisplayName ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn ReferenceType ListViewColumn,0
373,373,,0
269,269,"CompilationUnit PackageDeclaration hudson.model Import hudson.Util Import hudson.model.Queue.QueueAction Import hudson.tasks.BuildStep Import hudson.tasks.BuildWrapper Import hudson.util.VariableResolver Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import java.util.Arrays Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Map Import java.util.Set ClassDeclaration Modifier public Annotation ExportedBean /**
 * Records the parameter values used for a build.
 *
 * <P>
 * This object is associated with the build record so that we remember what parameters
 * were used for what build. It is also attached to the queue item to remember parameter
 * that were specified when scheduling.
 */ ParametersAction FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType ParameterValue VariableDeclarator parameters FieldDeclaration /**
     * @deprecated since 1.283; kept to avoid warnings loading old build data, but now transient.
     */ Modifier private transient ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator build ConstructorDeclaration Modifier public ParametersAction FormalParameter ReferenceType List TypeArgument ReferenceType ParameterValue parameters StatementExpression Assignment This MemberReference parameters MemberReference parameters = ConstructorDeclaration Modifier public ParametersAction FormalParameter ReferenceType ParameterValue parameters  StatementExpression ExplicitConstructorInvocation MethodInvocation Arrays MemberReference parameters asList MethodDeclaration Modifier public createBuildWrappers FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Collection TypeArgument ReferenceType BuildWrapper super result ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterValue VariableDeclarator p MemberReference parameters BlockStatement LocalVariableDeclaration ReferenceType BuildWrapper VariableDeclarator w MethodInvocation p MemberReference build createBuildWrapper IfStatement BinaryOperation != MemberReference w Literal null StatementExpression MethodInvocation result MemberReference w add End End MethodDeclaration Modifier public buildEnvVars FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String env ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterValue VariableDeclarator p MemberReference parameters StatementExpression MethodInvocation p MemberReference build MemberReference env buildEnvVars End MethodDeclaration /**
     * Performs a variable subsitution to the given text and return it.
     */ Modifier public ReferenceType String substitute FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType String text ReturnStatement MethodInvocation Util MemberReference text MethodInvocation MemberReference build createVariableResolver replaceMacro MethodDeclaration /**
     * Creates an {@link VariableResolver} that aggregates all the parameters.
     *
     * <p>
     * If you are a {@link BuildStep}, most likely you should call {@link AbstractBuild#getBuildVariableResolver()}. 
     */ Modifier public ReferenceType VariableResolver TypeArgument ReferenceType String createVariableResolver FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build LocalVariableDeclaration ReferenceType VariableResolver VariableDeclarator resolvers ArrayCreator ReferenceType VariableResolver BinaryOperation + MethodInvocation parameters size Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterValue VariableDeclarator p MemberReference parameters StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i resolvers MethodInvocation p MemberReference build createVariableResolver = End StatementExpression Assignment MemberReference ArraySelector MemberReference i resolvers MethodInvocation build getBuildVariableResolver = ReturnStatement ClassCreator ReferenceType VariableResolver ReferenceType Union TypeArgument ReferenceType String MemberReference resolvers MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType ParameterValue iterator ReturnStatement MethodInvocation parameters iterator MethodDeclaration Modifier public Annotation Exported ElementValuePair visibility Literal 2 ReferenceType List TypeArgument ReferenceType ParameterValue getParameters ReturnStatement MethodInvocation Collections MemberReference parameters unmodifiableList MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ParameterAction_DisplayName MethodDeclaration Modifier public ReferenceType String getIconFileName ReturnStatement Literal ""document-properties.gif"" MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""parameters"" MethodDeclaration /**
     * Allow an other build of the same project to be scheduled, if it has other parameters.
     */ Modifier public BasicType boolean shouldSchedule FormalParameter ReferenceType List TypeArgument ReferenceType Action actions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ParametersAction VariableDeclarator others MethodInvocation Util MemberReference actions ClassReference ReferenceType ParametersAction filter IfStatement MethodInvocation others isEmpty BlockStatement ReturnStatement MethodInvocation ! parameters isEmpty BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ParameterValue VariableDeclarator parameters ClassCreator ReferenceType HashSet TypeArgument ReferenceType ParameterValue ForStatement EnhancedForControl VariableDeclaration ReferenceType ParametersAction VariableDeclarator other MemberReference others BlockStatement StatementExpression MethodInvocation parameters MemberReference other parameters addAll End ReturnStatement MethodInvocation ! parameters ClassCreator ReferenceType HashSet TypeArgument ReferenceType ParameterValue This MemberReference parameters equals End ReferenceType Action ReferenceType Iterable TypeArgument ReferenceType ParameterValue ReferenceType QueueAction",0
322,322,"CompilationUnit PackageDeclaration hudson.model Import hudson.ExtensionPoint Import hudson.Extension InterfaceDeclaration Modifier public /**
 * Marker interface for actions that are added to {@link Hudson}.
 *
 * <p>
 * Extend from this interface and put {@link Extension} on your subtype
 * to have them auto-registered to {@link Hudson}.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.311
 */ RootAction ReferenceType Action ReferenceType ExtensionPoint",0
238,238,"CompilationUnit PackageDeclaration hudson.model Import java.io.IOException Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.List Import javax.servlet.ServletException Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.DataBoundConstructor Import hudson.model.Descriptor.FormException Import hudson.Extension ClassDeclaration Modifier public /**
 * {@link View} that only contains projects for which the current user has access to.
 *
 * @since 1.220
 * @author Tom Huybrechts
 */ MyView ConstructorDeclaration Modifier public Annotation DataBoundConstructor MyView FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name MethodDeclaration Modifier public Annotation Override BasicType boolean contains FormalParameter ReferenceType TopLevelItem item ReturnStatement MethodInvocation item MemberReference Job CONFIGURE hasPermission MethodDeclaration Modifier public Annotation Override ReferenceType Item doCreateItem FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException ReturnStatement MethodInvocation Hudson MethodInvocation MemberReference req MemberReference rsp doCreateItem getInstance MethodDeclaration Modifier public Annotation Override ReferenceType Collection TypeArgument ReferenceType TopLevelItem getItems LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType TopLevelItem VariableDeclarator items ClassCreator ReferenceType ArrayList TypeArgument ReferenceType TopLevelItem ForStatement EnhancedForControl VariableDeclaration ReferenceType TopLevelItem VariableDeclarator item MethodInvocation Hudson MethodInvocation getItems getInstance BlockStatement IfStatement MethodInvocation item MemberReference Job CONFIGURE hasPermission BlockStatement StatementExpression MethodInvocation items MemberReference item add End End ReturnStatement MethodInvocation Collections MemberReference items unmodifiableList MethodDeclaration Modifier public Annotation Override ReferenceType String getPostConstructLandingPage ReturnStatement Literal """" MethodDeclaration Modifier public Annotation Override onJobRenamed FormalParameter ReferenceType Item item FormalParameter ReferenceType String oldName FormalParameter ReferenceType String newName MethodDeclaration Modifier protected Annotation Override submit FormalParameter ReferenceType StaplerRequest req IOException ServletException FormException ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration /**
         * If the security is not enabled, there's no point in having
         * this type of views.
         */ Modifier public Annotation Override BasicType boolean isInstantiable ReturnStatement MethodInvocation Hudson MethodInvocation isUseSecurity getInstance MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages MyView_DisplayName ReferenceType ViewDescriptor ReferenceType View",0
536,536,,0
170,170,"CompilationUnit PackageDeclaration hudson.util Import java.io.OutputStream Import java.io.IOException Import java.io.ByteArrayOutputStream Import java.io.InputStream ClassDeclaration Modifier public /**
 * {@link ByteArrayOutputStream} re-implementation.
 *
 * <p>
 * This version allows one to read while writing is in progress. 
 *
 * @author Kohsuke Kawaguchi
 * @deprecated Moved to stapler
 */ ByteBuffer FieldDeclaration Modifier private BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 8192 FieldDeclaration /**
     * Size of the data.
     */ Modifier private BasicType int VariableDeclarator size Literal 0 MethodDeclaration Modifier public synchronized write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException StatementExpression MethodInvocation MemberReference len ensureCapacity StatementExpression MethodInvocation System MemberReference b MemberReference off MemberReference buf MemberReference size MemberReference len arraycopy StatementExpression Assignment MemberReference size MemberReference len += MethodDeclaration Modifier public synchronized write FormalParameter BasicType int b IOException StatementExpression MethodInvocation Literal 1 ensureCapacity StatementExpression Assignment MemberReference ArraySelector MemberReference ++ size buf Cast BasicType byte MemberReference b = MethodDeclaration Modifier public synchronized BasicType long length ReturnStatement MemberReference size MethodDeclaration Modifier private ensureCapacity FormalParameter BasicType int len IfStatement BinaryOperation > BinaryOperation - MemberReference buf length MemberReference size MemberReference len ReturnStatement End LocalVariableDeclaration BasicType byte VariableDeclarator n ArrayCreator BasicType byte MethodInvocation Math BinaryOperation * MemberReference buf length Literal 2 BinaryOperation + MemberReference size MemberReference len max StatementExpression MethodInvocation System MemberReference buf Literal 0 MemberReference n Literal 0 MemberReference size arraycopy StatementExpression Assignment This MemberReference buf MemberReference n = MethodDeclaration Modifier public synchronized ReferenceType String toString ReturnStatement ClassCreator ReferenceType String MemberReference buf Literal 0 MemberReference size MethodDeclaration /**
     * Writes the contents of this buffer to another OutputStream.
     */ Modifier public synchronized writeTo FormalParameter ReferenceType OutputStream os IOException StatementExpression MethodInvocation os MemberReference buf Literal 0 MemberReference size write MethodDeclaration /**
     * Creates an {@link InputStream} that reads from the underlying buffer.
     */ Modifier public ReferenceType InputStream newInputStream ReturnStatement ClassCreator ReferenceType InputStream FieldDeclaration Modifier private BasicType int VariableDeclarator pos Literal 0 MethodDeclaration Modifier public BasicType int read IOException SynchronizedStatement This ByteBuffer IfStatement BinaryOperation >= MemberReference pos MemberReference size ReturnStatement Literal - 1 End ReturnStatement MemberReference ArraySelector MemberReference ++ pos buf MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException SynchronizedStatement This ByteBuffer IfStatement BinaryOperation == MemberReference size MemberReference pos ReturnStatement Literal - 1 End LocalVariableDeclaration BasicType int VariableDeclarator sz MethodInvocation Math MemberReference len BinaryOperation - MemberReference size MemberReference pos min StatementExpression MethodInvocation System MemberReference buf MemberReference pos MemberReference b MemberReference off MemberReference sz arraycopy StatementExpression Assignment MemberReference pos MemberReference sz += ReturnStatement MemberReference sz MethodDeclaration Modifier public BasicType int available IOException SynchronizedStatement This ByteBuffer ReturnStatement BinaryOperation - MemberReference size MemberReference pos MethodDeclaration Modifier public BasicType long skip FormalParameter BasicType long n IOException SynchronizedStatement This ByteBuffer LocalVariableDeclaration BasicType int VariableDeclarator diff Cast BasicType int MethodInvocation Math MemberReference n BinaryOperation - MemberReference size MemberReference pos min StatementExpression Assignment MemberReference pos MemberReference diff += ReturnStatement MemberReference diff ReferenceType OutputStream",0
233,233,"CompilationUnit PackageDeclaration hudson.model.listeners Import hudson.ExtensionPoint Import hudson.ExtensionListView Import hudson.Extension Import hudson.DescriptorExtensionList Import hudson.ExtensionList Import hudson.scm.RepositoryBrowser Import hudson.model.Run Import hudson.model.TaskListener Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.util.CopyOnWriteList ClassDeclaration Modifier public abstract /**
 * Receives notifications about builds.
 *
 * <p>
 * Listener is always Hudson-wide, so once registered it gets notifications for every build
 * that happens in this Hudson.
 *
 * <p>
 * This is an abstract class so that methods added in the future won't break existing listeners.
 * 
 * @author Kohsuke Kawaguchi
 * @since 1.145
 */ RunListener FieldDeclaration Modifier public final ReferenceType Class TypeArgument ReferenceType R VariableDeclarator targetType ConstructorDeclaration Modifier protected RunListener FormalParameter ReferenceType Class TypeArgument ReferenceType R targetType StatementExpression Assignment This MemberReference targetType MemberReference targetType = MethodDeclaration /**
     * Called after a build is completed.
     *
     * @param r
     *      The completed build.
     * @param listener
     *      The listener for this build. This can be used to produce log messages, for example,
     *      which becomes a part of the ""console output"" of this build. But when this method runs,
     *      the build is considered completed, so its status cannot be changed anymore.
     */ Modifier public onCompleted FormalParameter ReferenceType R r FormalParameter ReferenceType TaskListener listener MethodDeclaration /**
     * Called after a build is moved to the {@link Run.State#COMPLETED} state.
     *
     * <p>
     * At this point, all the records related to a build is written down to the disk. As such,
     * {@link TaskListener} is no longer available. This happens later than {@link #onCompleted(Run, TaskListener)}.
     */ Modifier public onFinalized FormalParameter ReferenceType R r MethodDeclaration /**
     * Called when a build is started (i.e. it was in the queue, and will now start running
     * on an executor)
     *
     * @param r
     *      The started build.
     * @param listener
     *      The listener for this build. This can be used to produce log messages, for example,
     *      which becomes a part of the ""console output"" of this build.
     */ Modifier public onStarted FormalParameter ReferenceType R r FormalParameter ReferenceType TaskListener listener MethodDeclaration /**
     * Called right before a build is going to be deleted.
     *
     * @param r The build.
     */ Modifier public onDeleted FormalParameter ReferenceType R r MethodDeclaration /**
     * Registers this object as an active listener so that it can start getting
     * callbacks invoked.
     *
     * @deprecated
     *      Put {@link Extension} on your class to get it auto-registered.
     */ Modifier public register StatementExpression MethodInvocation MethodInvocation This add all MethodDeclaration /**
     * Reverse operation of {@link #register()}.
     */ Modifier public unregister StatementExpression MethodInvocation MethodInvocation This remove all FieldDeclaration /**
     * List of registered listeners.
     * @deprecated as of 1.281
     *      Use {@link #all()} for read access, and use {@link Extension} for registration.
     */ Modifier public final static ReferenceType CopyOnWriteList TypeArgument ReferenceType RunListener VariableDeclarator LISTENERS MethodInvocation ExtensionListView ClassReference ReferenceType RunListener createCopyOnWriteList MethodDeclaration /**
     * Fires the {@link #onCompleted} event.
     */ Modifier public static fireCompleted FormalParameter ReferenceType Run r FormalParameter ReferenceType TaskListener listener ForStatement EnhancedForControl VariableDeclaration ReferenceType RunListener VariableDeclarator l MethodInvocation all BlockStatement IfStatement MethodInvocation l.targetType MemberReference r isInstance StatementExpression MethodInvocation l MemberReference r MemberReference listener onCompleted End End MethodDeclaration /**
     * Fires the {@link #onStarted} event.
     */ Modifier public static fireStarted FormalParameter ReferenceType Run r FormalParameter ReferenceType TaskListener listener ForStatement EnhancedForControl VariableDeclaration ReferenceType RunListener VariableDeclarator l MethodInvocation all BlockStatement IfStatement MethodInvocation l.targetType MemberReference r isInstance StatementExpression MethodInvocation l MemberReference r MemberReference listener onStarted End End MethodDeclaration /**
     * Fires the {@link #onFinalized(Run)} event.
     */ Modifier public static fireFinalized FormalParameter ReferenceType Run r ForStatement EnhancedForControl VariableDeclaration ReferenceType RunListener VariableDeclarator l MethodInvocation all BlockStatement IfStatement MethodInvocation l.targetType MemberReference r isInstance StatementExpression MethodInvocation l MemberReference r onFinalized End End MethodDeclaration /**
     * Fires the {@link #onFinalized(Run)} event.
     */ Modifier public static fireDeleted FormalParameter ReferenceType Run r ForStatement EnhancedForControl VariableDeclaration ReferenceType RunListener VariableDeclarator l MethodInvocation all BlockStatement IfStatement MethodInvocation l.targetType MemberReference r isInstance StatementExpression MethodInvocation l MemberReference r onDeleted End End MethodDeclaration /**
     * Returns all the registered {@link RunListener} descriptors.
     */ Modifier public static ReferenceType ExtensionList TypeArgument ReferenceType RunListener all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType RunListener getExtensionList getInstance TypeParameter R ReferenceType Run ReferenceType ExtensionPoint",1
299,299,"CompilationUnit PackageDeclaration hudson.util.jna Import com.sun.jna.win32.StdCallLibrary Import com.sun.jna.Native InterfaceDeclaration Modifier public /**
 * JNA interface to Windows Kernel32 exports.
 * 
 * @author Kohsuke Kawaguchi
 */ Kernel32 ConstantDeclaration Modifier public final static ReferenceType Kernel32 VariableDeclarator INSTANCE Cast ReferenceType Kernel32 MethodInvocation Native Literal ""kernel32"" ClassReference ReferenceType Kernel32 loadLibrary MethodDeclaration /**
     * See http://msdn.microsoft.com/en-us/library/aa365240(VS.85).aspx
     */ BasicType boolean MoveFileExA FormalParameter ReferenceType String existingFileName FormalParameter ReferenceType String newFileName FormalParameter BasicType int flags ConstantDeclaration Modifier final static BasicType int VariableDeclarator MOVEFILE_COPY_ALLOWED Literal 2 ConstantDeclaration Modifier final static BasicType int VariableDeclarator MOVEFILE_CREATE_HARDLINK Literal 16 ConstantDeclaration Modifier final static BasicType int VariableDeclarator MOVEFILE_DELAY_UNTIL_REBOOT Literal 4 ConstantDeclaration Modifier final static BasicType int VariableDeclarator MOVEFILE_FAIL_IF_NOT_TRACKABLE Literal 32 ConstantDeclaration Modifier final static BasicType int VariableDeclarator MOVEFILE_REPLACE_EXISTING Literal 1 ConstantDeclaration Modifier final static BasicType int VariableDeclarator MOVEFILE_WRITE_THROUGH Literal 8 ReferenceType StdCallLibrary",0
568,568,,0
101,101,"CompilationUnit PackageDeclaration hudson.util Import com.thoughtworks.xstream.converters.ConversionException Import com.thoughtworks.xstream.converters.SingleValueConverter Import com.thoughtworks.xstream.converters.UnmarshallingContext Import com.thoughtworks.xstream.converters.Converter Import com.thoughtworks.xstream.converters.MarshallingContext Import com.thoughtworks.xstream.converters.reflection.ReflectionConverter Import com.thoughtworks.xstream.converters.reflection.ReflectionProvider Import com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker Import com.thoughtworks.xstream.converters.reflection.ObjectAccessException Import com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider Import com.thoughtworks.xstream.converters.reflection.NonExistentFieldException Import com.thoughtworks.xstream.core.util.Primitives Import com.thoughtworks.xstream.io.HierarchicalStreamReader Import com.thoughtworks.xstream.io.HierarchicalStreamWriter Import com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper Import com.thoughtworks.xstream.mapper.Mapper Import com.thoughtworks.xstream.mapper.CannotResolveClassException Import java.lang.reflect.Field Import java.util.Iterator Import java.util.Map Import java.util.Set Import java.util.HashSet Import java.util.Collection Import java.util.HashMap Import java.util.logging.Logger Import java.util.logging.Level ClassDeclaration Modifier public /**
 * Custom {@link ReflectionConverter} that handle errors more gracefully.
 *
 * <ul>
 * <li>If the field is missing, the value is ignored instead of causing an error.
 *     This makes evolution easy.
 * <li>If the type found in XML is no longer available, the element is skipped
 *     instead of causing an error.
 * </ul>
 *
 */ RobustReflectionConverter FieldDeclaration Modifier final protected ReferenceType ReflectionProvider VariableDeclarator reflectionProvider FieldDeclaration Modifier final protected ReferenceType Mapper VariableDeclarator mapper FieldDeclaration Modifier protected transient ReferenceType SerializationMethodInvoker VariableDeclarator serializationMethodInvoker FieldDeclaration Modifier private transient ReferenceType ReflectionProvider VariableDeclarator pureJavaReflectionProvider ConstructorDeclaration Modifier public RobustReflectionConverter FormalParameter ReferenceType Mapper mapper FormalParameter ReferenceType ReflectionProvider reflectionProvider StatementExpression Assignment This MemberReference mapper MemberReference mapper = StatementExpression Assignment This MemberReference reflectionProvider MemberReference reflectionProvider = StatementExpression Assignment MemberReference serializationMethodInvoker ClassCreator ReferenceType SerializationMethodInvoker = MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class type ReturnStatement Literal true MethodDeclaration Modifier public marshal FormalParameter ReferenceType Object original FormalParameter Modifier final ReferenceType HierarchicalStreamWriter writer FormalParameter Modifier final ReferenceType MarshallingContext context LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator source MethodInvocation serializationMethodInvoker MemberReference original callWriteReplace IfStatement BinaryOperation != MethodInvocation source getClass MethodInvocation original getClass BlockStatement StatementExpression MethodInvocation writer MethodInvocation mapper Literal ""resolves-to"" aliasForAttribute MethodInvocation mapper MethodInvocation source getClass serializedClass addAttribute End StatementExpression MethodInvocation MemberReference source MemberReference writer MemberReference context doMarshal MethodDeclaration Modifier protected doMarshal FormalParameter Modifier final ReferenceType Object source FormalParameter Modifier final ReferenceType HierarchicalStreamWriter writer FormalParameter Modifier final ReferenceType MarshallingContext context LocalVariableDeclaration Modifier final ReferenceType Set VariableDeclarator seenFields ClassCreator ReferenceType HashSet LocalVariableDeclaration Modifier final ReferenceType Set VariableDeclarator seenAsAttributes ClassCreator ReferenceType HashSet StatementExpression MethodInvocation reflectionProvider MemberReference source ClassCreator ReferenceType ReflectionProvider ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType String fieldName FormalParameter ReferenceType Class type FormalParameter ReferenceType Class definedIn FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType SingleValueConverter VariableDeclarator converter MethodInvocation mapper MemberReference fieldName MemberReference type getConverterFromItemType IfStatement BinaryOperation == MemberReference converter Literal null BlockStatement StatementExpression Assignment MemberReference converter MethodInvocation mapper MemberReference type getConverterFromItemType = End IfStatement BinaryOperation != MemberReference converter Literal null BlockStatement IfStatement BinaryOperation != MemberReference value Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator str MethodInvocation converter MemberReference value toString IfStatement BinaryOperation != MemberReference str Literal null BlockStatement StatementExpression MethodInvocation writer MethodInvocation mapper MemberReference fieldName aliasForAttribute MemberReference str addAttribute End End StatementExpression MethodInvocation seenAsAttributes MemberReference fieldName add End visitSerializableFields StatementExpression MethodInvocation reflectionProvider MemberReference source ClassCreator ReferenceType ReflectionProvider ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType String fieldName FormalParameter ReferenceType Class fieldType FormalParameter ReferenceType Class definedIn FormalParameter ReferenceType Object newObj IfStatement BinaryOperation && MethodInvocation ! seenAsAttributes MemberReference fieldName contains BinaryOperation != MemberReference newObj Literal null BlockStatement LocalVariableDeclaration ReferenceType Mapper ReferenceType ImplicitCollectionMapping VariableDeclarator mapping MethodInvocation mapper MethodInvocation source getClass MemberReference fieldName getImplicitCollectionDefForFieldName IfStatement BinaryOperation != MemberReference mapping Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation mapping getItemFieldName Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator list Cast ReferenceType Collection MemberReference newObj ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation list iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation iter next StatementExpression MethodInvocation MemberReference fieldName MethodInvocation mapping getItemFieldName MethodInvocation mapping getItemType MemberReference definedIn MemberReference obj writeField End BlockStatement StatementExpression MethodInvocation context MemberReference newObj convertAnother End BlockStatement StatementExpression MethodInvocation MemberReference fieldName MemberReference fieldName MemberReference fieldType MemberReference definedIn MemberReference newObj writeField StatementExpression MethodInvocation seenFields MemberReference fieldName add End End MethodDeclaration Modifier private writeField FormalParameter ReferenceType String fieldName FormalParameter ReferenceType String aliasName FormalParameter ReferenceType Class fieldType FormalParameter ReferenceType Class definedIn FormalParameter ReferenceType Object newObj TryStatement IfStatement MethodInvocation ! mapper MemberReference definedIn MemberReference aliasName shouldSerializeMember BlockStatement ReturnStatement End StatementExpression MethodInvocation ExtendedHierarchicalStreamWriterHelper MemberReference writer MethodInvocation mapper MemberReference definedIn MemberReference aliasName serializedMember MemberReference fieldType startNode LocalVariableDeclaration ReferenceType Class VariableDeclarator actualType MethodInvocation newObj getClass LocalVariableDeclaration ReferenceType Class VariableDeclarator defaultType MethodInvocation mapper MemberReference fieldType defaultImplementationOf IfStatement MethodInvocation ! actualType MemberReference defaultType equals BlockStatement StatementExpression MethodInvocation writer MethodInvocation mapper Literal ""class"" aliasForAttribute MethodInvocation mapper MemberReference actualType serializedClass addAttribute End IfStatement MethodInvocation seenFields MemberReference aliasName contains BlockStatement StatementExpression MethodInvocation writer MethodInvocation mapper Literal ""defined-in"" aliasForAttribute MethodInvocation mapper MemberReference definedIn serializedClass addAttribute End LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation reflectionProvider MemberReference definedIn MemberReference fieldName getField StatementExpression MethodInvocation MemberReference context MemberReference newObj MemberReference field marshallField StatementExpression MethodInvocation writer endNode CatchClause CatchClauseParameter RuntimeException e ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Failed to serialize "" MethodInvocation definedIn getName Literal ""#"" MemberReference fieldName Literal "" for "" MethodInvocation source getClass MemberReference e visitSerializableFields MethodDeclaration Modifier protected marshallField FormalParameter Modifier final ReferenceType MarshallingContext context FormalParameter ReferenceType Object newObj FormalParameter ReferenceType Field field StatementExpression MethodInvocation context MemberReference newObj convertAnother MethodDeclaration Modifier public ReferenceType Object unmarshal FormalParameter Modifier final ReferenceType HierarchicalStreamReader reader FormalParameter Modifier final ReferenceType UnmarshallingContext context LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation MemberReference reader MemberReference context instantiateNewInstance StatementExpression Assignment MemberReference result MethodInvocation MemberReference result MemberReference reader MemberReference context doUnmarshal = ReturnStatement MethodInvocation serializationMethodInvoker MemberReference result callReadResolve MethodDeclaration Modifier public ReferenceType Object doUnmarshal FormalParameter Modifier final ReferenceType Object result FormalParameter Modifier final ReferenceType HierarchicalStreamReader reader FormalParameter Modifier final ReferenceType UnmarshallingContext context LocalVariableDeclaration Modifier final ReferenceType SeenFields VariableDeclarator seenFields ClassCreator ReferenceType SeenFields LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation reader getAttributeNames WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator attrAlias Cast ReferenceType String MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator attrName MethodInvocation mapper MemberReference attrAlias attributeForAlias LocalVariableDeclaration ReferenceType Class VariableDeclarator classDefiningField MethodInvocation MemberReference reader determineWhichClassDefinesField LocalVariableDeclaration BasicType boolean VariableDeclarator fieldExistsInClass MethodInvocation MemberReference result MemberReference attrName fieldDefinedInClass IfStatement MemberReference fieldExistsInClass BlockStatement LocalVariableDeclaration ReferenceType SingleValueConverter VariableDeclarator converter MethodInvocation mapper MemberReference attrName getConverterFromAttribute LocalVariableDeclaration ReferenceType Class VariableDeclarator type MethodInvocation reflectionProvider MemberReference result MemberReference attrName MemberReference classDefiningField getFieldType IfStatement BinaryOperation == MemberReference converter Literal null BlockStatement StatementExpression Assignment MemberReference converter MethodInvocation mapper MemberReference type getConverterFromItemType = End IfStatement BinaryOperation != MemberReference converter Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation converter MethodInvocation reader MemberReference attrAlias getAttribute fromString IfStatement MethodInvocation type isPrimitive BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Primitives MemberReference type box = End IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation ! type MethodInvocation value getClass isAssignableFrom BlockStatement ThrowStatement ClassCreator ReferenceType ConversionException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Cannot convert type "" MethodInvocation value MethodInvocation getName getClass Literal "" to type "" MethodInvocation type getName End StatementExpression MethodInvocation reflectionProvider MemberReference result MemberReference attrName MemberReference value MemberReference classDefiningField writeField StatementExpression MethodInvocation seenFields MemberReference classDefiningField MemberReference attrName add End End End LocalVariableDeclaration ReferenceType Map VariableDeclarator implicitCollectionsForCurrentObject Literal null WhileStatement MethodInvocation reader hasMoreChildren BlockStatement StatementExpression MethodInvocation reader moveDown TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator fieldName MethodInvocation mapper MethodInvocation result getClass MethodInvocation reader getNodeName realMember LocalVariableDeclaration BasicType boolean VariableDeclarator implicitCollectionHasSameName BinaryOperation != MethodInvocation mapper MethodInvocation result getClass MethodInvocation reader getNodeName getImplicitCollectionDefForFieldName Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator classDefiningField MethodInvocation MemberReference reader determineWhichClassDefinesField LocalVariableDeclaration BasicType boolean VariableDeclarator fieldExistsInClass BinaryOperation && MemberReference ! implicitCollectionHasSameName MethodInvocation MemberReference result MemberReference fieldName fieldDefinedInClass LocalVariableDeclaration ReferenceType Class VariableDeclarator type MethodInvocation MemberReference reader MemberReference fieldExistsInClass MemberReference result MemberReference fieldName MemberReference classDefiningField determineType LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator value IfStatement MemberReference fieldExistsInClass BlockStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation reflectionProvider MethodInvocation result getClass MemberReference fieldName getField StatementExpression Assignment MemberReference value MethodInvocation MemberReference context MemberReference result MemberReference type MemberReference field unmarshallField = LocalVariableDeclaration ReferenceType Class VariableDeclarator definedType MethodInvocation reflectionProvider MemberReference result MemberReference fieldName MemberReference classDefiningField getFieldType IfStatement MethodInvocation ! definedType isPrimitive BlockStatement StatementExpression Assignment MemberReference type MemberReference definedType = End BlockStatement StatementExpression Assignment MemberReference value MethodInvocation context MemberReference result MemberReference type convertAnother = End IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation ! type MethodInvocation value getClass isAssignableFrom BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Cannot convert type "" MethodInvocation value MethodInvocation getName getClass Literal "" to type "" MethodInvocation type getName warning BlockStatement IfStatement MemberReference fieldExistsInClass BlockStatement StatementExpression MethodInvocation reflectionProvider MemberReference result MemberReference fieldName MemberReference value MemberReference classDefiningField writeField StatementExpression MethodInvocation seenFields MemberReference classDefiningField MemberReference fieldName add BlockStatement StatementExpression Assignment MemberReference implicitCollectionsForCurrentObject MethodInvocation MemberReference context MemberReference value MemberReference implicitCollectionsForCurrentObject MemberReference result MemberReference fieldName writeValueToImplicitCollection = End End CatchClause CatchClauseParameter NonExistentFieldException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + Literal ""Skipping a non-existent field "" MethodInvocation e getFieldName MemberReference e log CatchClause CatchClauseParameter CannotResolveClassException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING Literal ""Skipping a non-existend type"" MemberReference e log StatementExpression MethodInvocation reader moveUp End ReturnStatement MemberReference result MethodDeclaration Modifier private BasicType boolean fieldDefinedInClass FormalParameter ReferenceType Object result FormalParameter ReferenceType String attrName ReturnStatement BinaryOperation != MethodInvocation reflectionProvider MethodInvocation result getClass MemberReference attrName getFieldOrNull Literal null MethodDeclaration Modifier protected ReferenceType Object unmarshallField FormalParameter Modifier final ReferenceType UnmarshallingContext context FormalParameter Modifier final ReferenceType Object result FormalParameter ReferenceType Class type FormalParameter ReferenceType Field field ReturnStatement MethodInvocation context MemberReference result MemberReference type convertAnother MethodDeclaration Modifier private ReferenceType Map writeValueToImplicitCollection FormalParameter ReferenceType UnmarshallingContext context FormalParameter ReferenceType Object value FormalParameter ReferenceType Map implicitCollections FormalParameter ReferenceType Object result FormalParameter ReferenceType String itemFieldName LocalVariableDeclaration ReferenceType String VariableDeclarator fieldName MethodInvocation mapper MethodInvocation context getRequiredType MethodInvocation value getClass MemberReference itemFieldName getFieldNameForItemTypeAndName IfStatement BinaryOperation != MemberReference fieldName Literal null BlockStatement IfStatement BinaryOperation == MemberReference implicitCollections Literal null BlockStatement StatementExpression Assignment MemberReference implicitCollections ClassCreator ReferenceType HashMap = End LocalVariableDeclaration ReferenceType Collection VariableDeclarator collection Cast ReferenceType Collection MethodInvocation implicitCollections MemberReference fieldName get IfStatement BinaryOperation == MemberReference collection Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator fieldType MethodInvocation mapper MethodInvocation reflectionProvider MemberReference result MemberReference fieldName Literal null getFieldType defaultImplementationOf IfStatement ClassReference ! MethodInvocation MemberReference fieldType isAssignableFrom ReferenceType Collection BlockStatement ThrowStatement ClassCreator ReferenceType ObjectAccessException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Field "" MemberReference fieldName Literal "" of "" MethodInvocation result MethodInvocation getName getClass Literal "" is configured for an implicit Collection, but field is of type "" MethodInvocation fieldType getName End IfStatement BinaryOperation == MemberReference pureJavaReflectionProvider Literal null BlockStatement StatementExpression Assignment MemberReference pureJavaReflectionProvider ClassCreator ReferenceType PureJavaReflectionProvider = End StatementExpression Assignment MemberReference collection Cast ReferenceType Collection MethodInvocation pureJavaReflectionProvider MemberReference fieldType newInstance = StatementExpression MethodInvocation reflectionProvider MemberReference result MemberReference fieldName MemberReference collection Literal null writeField StatementExpression MethodInvocation implicitCollections MemberReference fieldName MemberReference collection put End StatementExpression MethodInvocation collection MemberReference value add End ReturnStatement MemberReference implicitCollections MethodDeclaration Modifier private ReferenceType Class determineWhichClassDefinesField FormalParameter ReferenceType HierarchicalStreamReader reader LocalVariableDeclaration ReferenceType String VariableDeclarator definedIn MethodInvocation reader MethodInvocation mapper Literal ""defined-in"" aliasForAttribute getAttribute ReturnStatement TernaryExpression BinaryOperation == MemberReference definedIn Literal null Literal null MethodInvocation mapper MemberReference definedIn realClass MethodDeclaration Modifier protected ReferenceType Object instantiateNewInstance FormalParameter ReferenceType HierarchicalStreamReader reader FormalParameter ReferenceType UnmarshallingContext context LocalVariableDeclaration ReferenceType String VariableDeclarator readResolveValue MethodInvocation reader MethodInvocation mapper Literal ""resolves-to"" aliasForAttribute getAttribute LocalVariableDeclaration ReferenceType Object VariableDeclarator currentObject MethodInvocation context currentObject IfStatement BinaryOperation != MemberReference currentObject Literal null BlockStatement ReturnStatement MemberReference currentObject IfStatement BinaryOperation != MemberReference readResolveValue Literal null BlockStatement ReturnStatement MethodInvocation reflectionProvider MethodInvocation mapper MemberReference readResolveValue realClass newInstance BlockStatement ReturnStatement MethodInvocation reflectionProvider MethodInvocation context getRequiredType newInstance End End ClassDeclaration Modifier private static SeenFields FieldDeclaration Modifier private ReferenceType Set VariableDeclarator seen ClassCreator ReferenceType HashSet MethodDeclaration Modifier public add FormalParameter ReferenceType Class definedInCls FormalParameter ReferenceType String fieldName LocalVariableDeclaration ReferenceType String VariableDeclarator uniqueKey MemberReference fieldName IfStatement BinaryOperation != MemberReference definedInCls Literal null BlockStatement StatementExpression Assignment MemberReference uniqueKey BinaryOperation + BinaryOperation + Literal "" ["" MethodInvocation definedInCls getName Literal ""]"" += End IfStatement MethodInvocation seen MemberReference uniqueKey contains BlockStatement ThrowStatement ClassCreator ReferenceType DuplicateFieldException MemberReference uniqueKey BlockStatement StatementExpression MethodInvocation seen MemberReference uniqueKey add End MethodDeclaration Modifier private ReferenceType Class determineType FormalParameter ReferenceType HierarchicalStreamReader reader FormalParameter BasicType boolean validField FormalParameter ReferenceType Object result FormalParameter ReferenceType String fieldName FormalParameter ReferenceType Class definedInCls LocalVariableDeclaration ReferenceType String VariableDeclarator classAttribute MethodInvocation reader MethodInvocation mapper Literal ""class"" aliasForAttribute getAttribute LocalVariableDeclaration ReferenceType Class VariableDeclarator fieldType MethodInvocation reflectionProvider MemberReference result MemberReference fieldName MemberReference definedInCls getFieldType IfStatement BinaryOperation != MemberReference classAttribute Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator specifiedType MethodInvocation mapper MemberReference classAttribute realClass IfStatement MethodInvocation fieldType MemberReference specifiedType isAssignableFrom ReturnStatement MemberReference specifiedType End End IfStatement MemberReference ! validField BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator itemType MethodInvocation mapper MethodInvocation result getClass MemberReference fieldName getItemTypeForItemFieldName IfStatement BinaryOperation != MemberReference itemType Literal null BlockStatement ReturnStatement MemberReference itemType BlockStatement ReturnStatement MethodInvocation mapper MethodInvocation reader getNodeName realClass End BlockStatement ReturnStatement MethodInvocation mapper MemberReference fieldType defaultImplementationOf End MethodDeclaration Modifier private ReferenceType Object readResolve StatementExpression Assignment MemberReference serializationMethodInvoker ClassCreator ReferenceType SerializationMethodInvoker = ReturnStatement This ClassDeclaration Modifier public static DuplicateFieldException ConstructorDeclaration Modifier public DuplicateFieldException FormalParameter ReferenceType String msg StatementExpression SuperConstructorInvocation MemberReference msg StatementExpression MethodInvocation Literal ""duplicate-field"" MemberReference msg add ReferenceType ConversionException FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType RobustReflectionConverter getLogger ReferenceType Converter",1
192,192,"CompilationUnit PackageDeclaration hudson.model Import hudson.CopyOnWrite ClassDeclaration Modifier public final /**
 * Scalar value that changes over the time (such as load average, Q length, # of executors, etc.)
 *
 * <p>
 * This class computes <a href=""http://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average"">
 * the exponential moving average</a> from the raw data (to be supplied by {@link #update(float)}).
 *
 * @author Kohsuke Kawaguchi
 */ TimeSeries FieldDeclaration /**
     * Decay ratio. Normally 1-e for some small e.
     */ Modifier private final BasicType float VariableDeclarator decay FieldDeclaration /**
     * Historical exponential moving average data. Newer ones first.
     */ Modifier private volatile Annotation CopyOnWrite BasicType float VariableDeclarator history FieldDeclaration /**
     * Maximum history size.
     */ Modifier private final BasicType int VariableDeclarator historySize ConstructorDeclaration Modifier public TimeSeries FormalParameter BasicType float initialValue FormalParameter BasicType float decay FormalParameter BasicType int historySize StatementExpression Assignment This MemberReference history ArrayCreator BasicType float ArrayInitializer MemberReference initialValue = StatementExpression Assignment This MemberReference decay MemberReference decay = StatementExpression Assignment This MemberReference historySize MemberReference historySize = MethodDeclaration /**
     * Pushes a new data point.
     *
     * <p>
     * Exponential moving average is calculated, and the {@link #history} is updated.
     * This method needs to be called periodically and regularly, and it represents
     * the raw data stream.
     */ Modifier public update FormalParameter BasicType float newData LocalVariableDeclaration BasicType float VariableDeclarator data BinaryOperation + BinaryOperation * MemberReference ArraySelector Literal 0 history MemberReference decay BinaryOperation * MemberReference newData BinaryOperation - Literal 1 MemberReference decay LocalVariableDeclaration BasicType float VariableDeclarator r ArrayCreator BasicType float MethodInvocation Math BinaryOperation + MemberReference history length Literal 1 MemberReference historySize min StatementExpression MethodInvocation System MemberReference history Literal 0 MemberReference r Literal 1 MethodInvocation Math MemberReference history length BinaryOperation - MemberReference r length Literal 1 min arraycopy StatementExpression Assignment MemberReference ArraySelector Literal 0 r MemberReference data = StatementExpression Assignment MemberReference history MemberReference r = MethodDeclaration /**
     * Gets the history data of the exponential moving average. The returned array should be treated
     * as read-only and immutable.
     *
     * @return
     *      Always non-null, contains at least one entry.
     */ Modifier public BasicType float getHistory ReturnStatement MemberReference history MethodDeclaration /**
     * Gets the most up-to-date data point value. {@code getHistory[0]}.
     */ Modifier public BasicType float getLatest ReturnStatement MemberReference ArraySelector Literal 0 history MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation Float MemberReference ArraySelector Literal 0 history toString",1
463,463,,1
235,235,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.EnvVars Import hudson.Util Import hudson.Extension Import hudson.model.Descriptor Import hudson.model.TaskListener Import hudson.remoting.Channel Import hudson.util.ProcessTreeKiller Import hudson.util.StreamCopyThread Import hudson.util.FormValidation Import java.io.IOException Import java.util.Date Import java.util.logging.Level Import java.util.logging.Logger Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter ClassDeclaration Modifier public /**
 * {@link ComputerLauncher} through a remote login mechanism like ssh/rsh.
 *
 * @author Stephen Connolly
 * @author Kohsuke Kawaguchi
*/ CommandLauncher FieldDeclaration /**
     * Command line to launch the agent, like
     * ""ssh myslave java -jar /path/to/hudson-remoting.jar""
     */ Modifier private final ReferenceType String VariableDeclarator agentCommand FieldDeclaration /**
     * Optional environment variables to add to the current environment. Can be null.
     */ Modifier private final ReferenceType EnvVars VariableDeclarator env ConstructorDeclaration Modifier public Annotation DataBoundConstructor CommandLauncher FormalParameter ReferenceType String command StatementExpression ExplicitConstructorInvocation MemberReference command Literal null ConstructorDeclaration Modifier public CommandLauncher FormalParameter ReferenceType String command FormalParameter ReferenceType EnvVars env StatementExpression Assignment This MemberReference agentCommand MemberReference command = StatementExpression Assignment This MemberReference env MemberReference env = MethodDeclaration Modifier public ReferenceType String getCommand ReturnStatement MemberReference agentCommand MethodDeclaration /**
     * Gets the formatted current time stamp.
     */ Modifier private static ReferenceType String getTimestamp ReturnStatement MethodInvocation String Literal ""[%1$tD %1$tT]"" ClassCreator ReferenceType Date format MethodDeclaration Modifier public Annotation Override launch FormalParameter ReferenceType SlaveComputer computer FormalParameter Modifier final ReferenceType TaskListener listener LocalVariableDeclaration ReferenceType EnvVars VariableDeclarator _cookie Literal null LocalVariableDeclaration ReferenceType Process VariableDeclarator _proc Literal null TryStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation hudson.model.Messages MethodInvocation getTimestamp Slave_Launching println getLogger IfStatement BinaryOperation == MethodInvocation MethodInvocation trim MethodInvocation length getCommand Literal 0 BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages CommandLauncher_NoLaunchCommand println getLogger ReturnStatement End StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + Literal ""$ "" MethodInvocation getCommand println getLogger LocalVariableDeclaration ReferenceType ProcessBuilder VariableDeclarator pb ClassCreator ReferenceType ProcessBuilder MethodInvocation Util MethodInvocation getCommand tokenize LocalVariableDeclaration Modifier final ReferenceType EnvVars VariableDeclarator cookie Assignment MemberReference _cookie MethodInvocation ProcessTreeKiller createCookie = StatementExpression MethodInvocation pb MethodInvocation MemberReference cookie putAll environment IfStatement BinaryOperation != MemberReference env Literal null BlockStatement StatementExpression MethodInvocation pb MethodInvocation MemberReference env putAll environment End LocalVariableDeclaration Modifier final ReferenceType Process VariableDeclarator proc Assignment MemberReference _proc MethodInvocation pb start = StatementExpression ClassCreator MethodInvocation start ReferenceType StreamCopyThread BinaryOperation + Literal ""stderr copier for remote agent on "" MethodInvocation computer getDisplayName MethodInvocation proc getErrorStream MethodInvocation listener getLogger StatementExpression MethodInvocation computer MethodInvocation proc getInputStream MethodInvocation proc getOutputStream MethodInvocation listener getLogger ClassCreator ReferenceType Channel ReferenceType Listener MethodDeclaration Modifier public onClosed FormalParameter ReferenceType Channel channel FormalParameter ReferenceType IOException cause IfStatement BinaryOperation != MemberReference cause Literal null BlockStatement StatementExpression MethodInvocation cause MethodInvocation listener MethodInvocation hudson.model.Messages MethodInvocation getTimestamp Slave_Terminated error printStackTrace End StatementExpression MethodInvocation ProcessTreeKiller MethodInvocation MemberReference proc MemberReference cookie kill get setChannel StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""slave agent launched for "" MethodInvocation computer getDisplayName info CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages ComputerLauncher_abortedLaunch error printStackTrace CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages ComputerLauncher_unexpectedError error printStackTrace CatchClause CatchClauseParameter Error e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages ComputerLauncher_unexpectedError error printStackTrace CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Util MemberReference e MemberReference listener displayIOException LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation Util MemberReference e getWin32ErrorMessage IfStatement BinaryOperation == MemberReference msg Literal null BlockStatement StatementExpression Assignment MemberReference msg Literal """" = BlockStatement StatementExpression Assignment MemberReference msg BinaryOperation + Literal "" : "" MemberReference msg = End StatementExpression Assignment MemberReference msg MethodInvocation hudson.model.Messages MethodInvocation computer getDisplayName MemberReference msg Slave_UnableToLaunch = StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE MemberReference msg MemberReference e log StatementExpression MethodInvocation e MethodInvocation listener MemberReference msg error printStackTrace IfStatement BinaryOperation != MemberReference _proc Literal null StatementExpression MethodInvocation ProcessTreeKiller MethodInvocation MemberReference _proc MemberReference _cookie kill get End FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType CommandLauncher getLogger ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages CommandLauncher_displayName MethodDeclaration Modifier public ReferenceType FormValidation doCheckCommand FormalParameter Annotation QueryParameter ReferenceType String value IfStatement BinaryOperation == MethodInvocation Util MemberReference value fixEmptyAndTrim Literal null ReturnStatement MethodInvocation FormValidation Literal ""Command is empty"" error ReturnStatement MethodInvocation FormValidation ok End ReferenceType Descriptor TypeArgument ReferenceType ComputerLauncher ReferenceType ComputerLauncher",1
457,457,,0
217,217,"CompilationUnit PackageDeclaration hudson.tools Import hudson.DescriptorExtensionList Import hudson.EnvVars Import hudson.Extension Import hudson.ExtensionPoint Import hudson.model.Describable Import hudson.model.EnvironmentSpecific Import hudson.model.Hudson Import hudson.model.Node Import hudson.model.Saveable Import hudson.model.TaskListener Import hudson.slaves.NodeSpecific Import hudson.util.DescribableList Import java.io.Serializable Import java.io.IOException Import java.util.List Import com.thoughtworks.xstream.annotations.XStreamSerializable ClassDeclaration Modifier public abstract /**
 * Formalization of a tool installed in nodes used for builds
 * (examples include things like JDKs, Ants, Mavens, and Groovys)
 *
 * <p>
 * You can define such a concept in your plugin entirely on your own, without extending from
 * this class, but choosing this class as a base class has several benefits:
 *
 * <ul>
 * <li>Hudson allows admins to specify different locations for tools on some slaves.
 *     For example, JDK on the master might be on /usr/local/java but on a Windows slave
 *     it could be at c:\Program Files\Java
 * <li>Hudson can verify the existence of tools and provide warnings and diagnostics for
 *     admins. (TBD)
 * <li>Hudson can perform automatic installations for users. (TBD)
 * </ul>
 *
 * <p>
 * Implementations of this class are strongly encouraged to also implement {@link NodeSpecific}
 * (by using {@link #translateFor(Node, TaskListener)}) and
 * {@link EnvironmentSpecific} (by using {@link EnvVars#expand(String)}.)
 *
 * <p>
 * To contribute an extension point, put {@link Extension} on your {@link ToolDescriptor} class.
 *
 * @author huybrechts
 * @since 1.286
 */ ToolInstallation FieldDeclaration Modifier private final ReferenceType String VariableDeclarator name FieldDeclaration Modifier private final ReferenceType String VariableDeclarator home FieldDeclaration /**
     * {@link ToolProperty}s that are associated with this tool.
     */ Modifier private transient Annotation XStreamSerializable ReferenceType DescribableList TypeArgument ReferenceType ToolProperty TypeArgument ? TypeArgument ReferenceType ToolPropertyDescriptor VariableDeclarator properties ClassCreator ReferenceType DescribableList TypeArgument ReferenceType ToolProperty TypeArgument ? TypeArgument ReferenceType ToolPropertyDescriptor MemberReference Saveable NOOP ConstructorDeclaration Modifier public /**
     * @deprecated
     *      as of 1.302. Use {@link #ToolInstallation(String, String, List)} 
     */ ToolInstallation FormalParameter ReferenceType String name FormalParameter ReferenceType String home StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference home MemberReference home = ConstructorDeclaration Modifier public ToolInstallation FormalParameter ReferenceType String name FormalParameter ReferenceType String home FormalParameter ReferenceType List TypeArgument ReferenceType ToolProperty TypeArgument ? extends properties StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference home MemberReference home = IfStatement BinaryOperation != MemberReference properties Literal null BlockStatement TryStatement StatementExpression This MemberReference properties MethodInvocation MemberReference properties replaceBy ForStatement EnhancedForControl VariableDeclaration ReferenceType ToolProperty TypeArgument ? VariableDeclarator p MemberReference properties StatementExpression MethodInvocation MemberReference p This _setTool End CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e End MethodDeclaration Modifier private TypeParameter T ReferenceType ToolInstallation _setTool FormalParameter ReferenceType ToolProperty TypeArgument ReferenceType T prop FormalParameter ReferenceType ToolInstallation t StatementExpression MethodInvocation prop MethodInvocation prop MethodInvocation MemberReference t cast type setTool MethodDeclaration /**
     * Gets the human readable name that identifies this tool among other {@link ToolInstallation}s of the same kind.
     */ Modifier public ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration /**
     * Gets the home directory of this tool.
     * 
     * The path can be in Unix format as well as in Windows format.
     * Must be absolute.
     */ Modifier public ReferenceType String getHome ReturnStatement MemberReference home MethodDeclaration Modifier public ReferenceType DescribableList TypeArgument ReferenceType ToolProperty TypeArgument ? TypeArgument ReferenceType ToolPropertyDescriptor getProperties AssertStatement BinaryOperation != MemberReference properties Literal null ReturnStatement MemberReference properties MethodDeclaration Modifier public ReferenceType ToolDescriptor TypeArgument ? getDescriptor ReturnStatement Cast ReferenceType ToolDescriptor MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance MethodDeclaration /**
     * Finds a tool on a node.
     * Checks if the location of the tool is overridden for the given node, and if so,
     * return the node-specific home directory.
     * Also checks available {@link ToolLocationTranslator}s.
     * Otherwise returns {@code installation.getHome()}.
     *
     * <p>
     * This is the core logic behind {@link NodeSpecific#forNode(Node, TaskListener)} for {@link ToolInstallation},
     * and meant to be used by the {@code forNode} implementations.
     *
     * @return
     *      never null.
     */ Modifier protected Annotation SuppressWarnings Literal ""deprecation"" ReferenceType String translateFor FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException ReturnStatement MethodInvocation ToolLocationNodeProperty MemberReference node This MemberReference log getToolHome MethodDeclaration /**
     * Invoked by XStream when this object is read into memory.
     */ Modifier private ReferenceType Object readResolve IfStatement BinaryOperation == MemberReference properties Literal null StatementExpression Assignment MemberReference properties ClassCreator ReferenceType DescribableList TypeArgument ReferenceType ToolProperty TypeArgument ? TypeArgument ReferenceType ToolPropertyDescriptor MemberReference Saveable NOOP = End ForStatement EnhancedForControl VariableDeclaration ReferenceType ToolProperty TypeArgument ? VariableDeclarator p MemberReference properties StatementExpression MethodInvocation MemberReference p This _setTool End ReturnStatement This MethodDeclaration /**
     * Returns all the registered {@link ToolDescriptor}s.
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType ToolInstallation TypeArgument ReferenceType ToolDescriptor TypeArgument ? all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType ToolInstallation getDescriptorList getInstance FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable ReferenceType Describable TypeArgument ReferenceType ToolInstallation ReferenceType ExtensionPoint",0
544,544,,0
579,579,,0
17,17,"CompilationUnit PackageDeclaration hudson Import com.thoughtworks.xstream.XStream Import com.thoughtworks.xstream.converters.ConversionException Import com.thoughtworks.xstream.converters.Converter Import com.thoughtworks.xstream.io.StreamException Import com.thoughtworks.xstream.io.xml.XppReader Import hudson.model.Descriptor Import hudson.util.AtomicFileWriter Import hudson.util.IOException2 Import hudson.util.XStream2 Import org.xml.sax.Attributes Import org.xml.sax.Locator Import org.xml.sax.SAXException Import org.xml.sax.ext.Locator2 Import org.xml.sax.helpers.DefaultHandler Import javax.xml.parsers.ParserConfigurationException Import javax.xml.parsers.SAXParserFactory Import java.io.BufferedReader Import java.io.File Import java.io.FileInputStream Import java.io.IOException Import java.io.InputStreamReader Import java.io.Reader Import java.io.Writer Import java.io.StringWriter Import java.util.logging.Logger ClassDeclaration Modifier public final /**
 * Represents an XML data file that Hudson uses as a data file.
 *
 *
 * <h2>Evolving data format</h2>
 * <p>
 * Changing data format requires a particular care so that users with
 * the old data format can migrate to the newer data format smoothly.
 *
 * <p>
 * Adding a field is the easiest. When you read an old XML that does
 * not have any data, the newly added field is left to the VM-default
 * value (if you let XStream create the object, such as
 * {@link #read()} &mdash; which is the majority), or to the value initialized by the
 * constructor (if the object is created via <tt>new</tt> and then its
 * value filled by XStream, such as {@link #unmarshal(Object)}.)
 *
 * <p>
 * Removing a field requires that you actually leave the field with
 * <tt>transient</tt> keyword. When you read the old XML, XStream
 * will set the value to this field. But when the data is saved,
 * the field will no longer will be written back to XML.
 * (It might be possible to tweak XStream so that we can simply
 * remove fields from the class. Any help appreciated.)
 *
 * <p>
 * Changing the data structure is usually a combination of the two
 * above. You'd leave the old data store with <tt>transient</tt>,
 * and then add the new data. When you are reading the old XML,
 * only the old field will be set. When you are reading the new XML,
 * only the new field will be set. You'll then need to alter the code
 * so that it will be able to correctly handle both situations,
 * and that as soon as you see data in the old field, you'll have to convert
 * that into the new data structure, so that the next <tt>save</tt> operation
 * will write the new data (otherwise you'll end up losing the data, because
 * old fields will be never written back.)
 *
 * <p>
 * In some limited cases (specifically when the class is the root object
 * to be read from XML, such as {@link Descriptor}), it is possible
 * to completely and drastically change the data format. See
 * {@link Descriptor#load()} for more about this technique.
 *
 * <p>
 * There's a few other possibilities, such as implementing a custom
 * {@link Converter} for XStream, or {@link XStream#alias(String, Class) registering an alias}.
 *
 * @author Kohsuke Kawaguchi
 */ XmlFile FieldDeclaration Modifier private final ReferenceType XStream VariableDeclarator xs FieldDeclaration Modifier private final ReferenceType File VariableDeclarator file ConstructorDeclaration Modifier public XmlFile FormalParameter ReferenceType File file StatementExpression ExplicitConstructorInvocation MemberReference DEFAULT_XSTREAM MemberReference file ConstructorDeclaration Modifier public XmlFile FormalParameter ReferenceType XStream xs FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference xs MemberReference xs = StatementExpression Assignment This MemberReference file MemberReference file = MethodDeclaration Modifier public ReferenceType File getFile ReturnStatement MemberReference file MethodDeclaration /**
     * Loads the contents of this file into a new object.
     */ Modifier public ReferenceType Object read IOException StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""Reading "" MemberReference file fine LocalVariableDeclaration ReferenceType Reader VariableDeclarator r ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MemberReference file Literal ""UTF-8"" TryStatement ReturnStatement MethodInvocation xs MemberReference r fromXML CatchClause CatchClauseParameter StreamException e ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + Literal ""Unable to read "" MemberReference file MemberReference e CatchClause CatchClauseParameter ConversionException e ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + Literal ""Unable to read "" MemberReference file MemberReference e StatementExpression MethodInvocation r close MethodDeclaration /**
     * Loads the contents of this file into an existing object.
     *
     * @return
     *      The unmarshalled object. Usually the same as <tt>o</tt>, but would be different
     *      if the XML representation if completely new.
     */ Modifier public ReferenceType Object unmarshal FormalParameter ReferenceType Object o IOException LocalVariableDeclaration ReferenceType Reader VariableDeclarator r ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MemberReference file Literal ""UTF-8"" TryStatement ReturnStatement MethodInvocation xs ClassCreator ReferenceType XppReader MemberReference r MemberReference o unmarshal CatchClause CatchClauseParameter StreamException e ThrowStatement ClassCreator ReferenceType IOException2 MemberReference e CatchClause CatchClauseParameter ConversionException e ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + Literal ""Unable to read "" MemberReference file MemberReference e StatementExpression MethodInvocation r close MethodDeclaration Modifier public write FormalParameter ReferenceType Object o IOException StatementExpression MethodInvocation mkdirs LocalVariableDeclaration ReferenceType AtomicFileWriter VariableDeclarator w ClassCreator ReferenceType AtomicFileWriter MemberReference file TryStatement StatementExpression MethodInvocation w Literal ""<?xml version='1.0' encoding='UTF-8'?>\n"" write StatementExpression MethodInvocation xs MemberReference o MemberReference w toXML StatementExpression MethodInvocation w commit CatchClause CatchClauseParameter StreamException e ThrowStatement ClassCreator ReferenceType IOException2 MemberReference e StatementExpression MethodInvocation w close MethodDeclaration Modifier public BasicType boolean exists ReturnStatement MethodInvocation file exists MethodDeclaration Modifier public delete StatementExpression MethodInvocation file delete MethodDeclaration Modifier public mkdirs StatementExpression MethodInvocation file MethodInvocation mkdirs getParentFile MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation file toString MethodDeclaration /**
     * Opens a {@link Reader} that loads XML.
     * This method uses {@link #sniffEncoding() the right encoding},
     * not just the system default encoding.
     */ Modifier public ReferenceType Reader readRaw IOException ReturnStatement ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MemberReference file MethodInvocation sniffEncoding MethodDeclaration /**
     * Returns the XML file read as a string.
     */ Modifier public ReferenceType String asString IOException LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator w ClassCreator ReferenceType StringWriter StatementExpression MethodInvocation MemberReference w writeRawTo ReturnStatement MethodInvocation w toString MethodDeclaration /**
     * Writes the raw XML to the given {@link Writer}.
     * Writer will not be closed by the implementation.
     */ Modifier public writeRawTo FormalParameter ReferenceType Writer w IOException LocalVariableDeclaration ReferenceType Reader VariableDeclarator r MethodInvocation readRaw TryStatement StatementExpression MethodInvocation Util MemberReference r MemberReference w copyStream StatementExpression MethodInvocation r close MethodDeclaration /**
     * Parses the beginning of the file and determines the encoding.
     *
     * @throws IOException
     *      if failed to detect encoding.
     * @return
     *      always non-null.
     */ Modifier public ReferenceType String sniffEncoding IOException ClassDeclaration Eureka FieldDeclaration Modifier final ReferenceType String VariableDeclarator encoding ConstructorDeclaration Modifier public Eureka FormalParameter ReferenceType String encoding StatementExpression Assignment This MemberReference encoding MemberReference encoding = ReferenceType SAXException TryStatement StatementExpression MethodInvocation JAXP MethodInvocation MemberReference file ClassCreator ReferenceType DefaultHandler FieldDeclaration Modifier private ReferenceType Locator VariableDeclarator loc MethodDeclaration Modifier public setDocumentLocator FormalParameter ReferenceType Locator locator StatementExpression Assignment This MemberReference loc MemberReference locator = MethodDeclaration Modifier public startDocument SAXException StatementExpression MethodInvocation attempt MethodDeclaration Modifier public startElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String localName FormalParameter ReferenceType String qName FormalParameter ReferenceType Attributes attributes SAXException StatementExpression MethodInvocation attempt ThrowStatement ClassCreator ReferenceType Eureka Literal null MethodDeclaration Modifier private attempt Eureka IfStatement BinaryOperation == MemberReference loc Literal null ReturnStatement End IfStatement BinaryOperation instanceof MemberReference loc ReferenceType Locator2 BlockStatement LocalVariableDeclaration ReferenceType Locator2 VariableDeclarator loc2 Cast ReferenceType Locator2 MemberReference loc LocalVariableDeclaration ReferenceType String VariableDeclarator e MethodInvocation loc2 getEncoding IfStatement BinaryOperation != MemberReference e Literal null ThrowStatement ClassCreator ReferenceType Eureka MemberReference e End End parse newSAXParser ThrowStatement ClassCreator ReferenceType AssertionError CatchClause CatchClauseParameter Eureka e IfStatement BinaryOperation == MemberReference e encoding Literal null ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Failed to detect encoding of "" MemberReference file End ReturnStatement MemberReference e encoding CatchClause CatchClauseParameter SAXException e ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + Literal ""Failed to detect encoding of "" MemberReference file MemberReference e CatchClause CatchClauseParameter ParserConfigurationException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e FieldDeclaration /**
     * {@link XStream} instance is supposed to be thread-safe.
     */ Modifier private final static ReferenceType XStream VariableDeclarator DEFAULT_XSTREAM ClassCreator ReferenceType XStream2 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType XmlFile getLogger FieldDeclaration Modifier private final static ReferenceType SAXParserFactory VariableDeclarator JAXP MethodInvocation SAXParserFactory newInstance StatementExpression MethodInvocation JAXP Literal true setNamespaceAware",0
446,446,,0
376,376,,0
14,14,"CompilationUnit PackageDeclaration hudson.model Import com.thoughtworks.xstream.converters.Converter Import com.thoughtworks.xstream.converters.basic.AbstractBasicConverter Import org.kohsuke.stapler.export.CustomExportedBean Import java.io.Serializable ClassDeclaration Modifier public final /**
 * The build outcome.
 *
 * @author Kohsuke Kawaguchi
 */ Result FieldDeclaration /**
     * The build had no errors.
     */ Modifier public final static ReferenceType Result VariableDeclarator SUCCESS ClassCreator ReferenceType Result Literal ""SUCCESS"" MemberReference BallColor BLUE Literal 0 FieldDeclaration /**
     * The build had some errors but they were not fatal.
     * For example, some tests failed.
     */ Modifier public final static ReferenceType Result VariableDeclarator UNSTABLE ClassCreator ReferenceType Result Literal ""UNSTABLE"" MemberReference BallColor YELLOW Literal 1 FieldDeclaration /**
     * The build had a fatal error.
     */ Modifier public final static ReferenceType Result VariableDeclarator FAILURE ClassCreator ReferenceType Result Literal ""FAILURE"" MemberReference BallColor RED Literal 2 FieldDeclaration /**
     * The module was not built.
     * <p>
     * This status code is used in a multi-stage build (like maven2)
     * where a problem in earlier stage prevented later stages from building.
     */ Modifier public final static ReferenceType Result VariableDeclarator NOT_BUILT ClassCreator ReferenceType Result Literal ""NOT_BUILT"" MemberReference BallColor GREY Literal 3 FieldDeclaration /**
     * The build was manually aborted.
     */ Modifier public final static ReferenceType Result VariableDeclarator ABORTED ClassCreator ReferenceType Result Literal ""ABORTED"" MemberReference BallColor ABORTED Literal 4 FieldDeclaration Modifier private final ReferenceType String VariableDeclarator name FieldDeclaration /**
     * Bigger numbers are worse.
     */ Modifier private final BasicType int VariableDeclarator ordinal FieldDeclaration /**
     * Default ball color for this status.
     */ Modifier public final ReferenceType BallColor VariableDeclarator color ConstructorDeclaration Modifier private Result FormalParameter ReferenceType String name FormalParameter ReferenceType BallColor color FormalParameter BasicType int ordinal StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference color MemberReference color = StatementExpression Assignment This MemberReference ordinal MemberReference ordinal = MethodDeclaration /**
     * Combines two {@link Result}s and returns the worse one.
     */ Modifier public ReferenceType Result combine FormalParameter ReferenceType Result that IfStatement BinaryOperation < This MemberReference ordinal MemberReference that ordinal ReturnStatement MemberReference that ReturnStatement This End MethodDeclaration Modifier public BasicType boolean isWorseThan FormalParameter ReferenceType Result that ReturnStatement BinaryOperation > This MemberReference ordinal MemberReference that ordinal MethodDeclaration Modifier public BasicType boolean isWorseOrEqualTo FormalParameter ReferenceType Result that ReturnStatement BinaryOperation >= This MemberReference ordinal MemberReference that ordinal MethodDeclaration Modifier public BasicType boolean isBetterThan FormalParameter ReferenceType Result that ReturnStatement BinaryOperation < This MemberReference ordinal MemberReference that ordinal MethodDeclaration Modifier public BasicType boolean isBetterOrEqualTo FormalParameter ReferenceType Result that ReturnStatement BinaryOperation <= This MemberReference ordinal MemberReference that ordinal MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference name MethodDeclaration Modifier private ReferenceType Object readResolve ForStatement EnhancedForControl VariableDeclaration ReferenceType Result VariableDeclarator r MemberReference all IfStatement BinaryOperation == MemberReference ordinal MemberReference r ordinal ReturnStatement MemberReference r End End ReturnStatement MemberReference FAILURE MethodDeclaration Modifier public ReferenceType String toExportedObject ReturnStatement MemberReference name FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L FieldDeclaration Modifier private final static ReferenceType Result VariableDeclarator all ArrayCreator ReferenceType Result ArrayInitializer MemberReference SUCCESS MemberReference UNSTABLE MemberReference FAILURE MemberReference NOT_BUILT MemberReference ABORTED FieldDeclaration Modifier public final static ReferenceType Converter VariableDeclarator conv ClassCreator ReferenceType AbstractBasicConverter MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class clazz ReturnStatement BinaryOperation == MemberReference clazz ClassReference ReferenceType Result MethodDeclaration Modifier protected ReferenceType Object fromString FormalParameter ReferenceType String s ForStatement EnhancedForControl VariableDeclaration ReferenceType Result VariableDeclarator r MemberReference all IfStatement MethodInvocation s MemberReference r name equals ReturnStatement MemberReference r End End ReturnStatement MemberReference FAILURE ReferenceType Serializable ReferenceType CustomExportedBean",0
276,276,"CompilationUnit PackageDeclaration hudson.model Import hudson.FilePath Import hudson.Util Import hudson.util.IOException2 Import hudson.FilePath.FileCallable Import hudson.remoting.VirtualChannel Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.HttpResponse Import org.apache.tools.ant.types.FileSet Import org.apache.tools.ant.DirectoryScanner Import javax.servlet.ServletException Import javax.servlet.http.HttpServletResponse Import java.io.File Import java.io.FilenameFilter Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.io.Serializable Import java.util.ArrayList Import java.util.Arrays Import java.util.Collections Import java.util.Comparator Import java.util.List Import java.util.StringTokenizer Import java.util.logging.Logger Import java.util.logging.Level ClassDeclaration Modifier public final /**
 * Has convenience methods to serve file system.
 *
 * <p>
 * This object can be used in a mix-in style to provide a directory browsing capability
 * to a {@link ModelObject}. 
 *
 * @author Kohsuke Kawaguchi
 */ DirectoryBrowserSupport FieldDeclaration Modifier public final ReferenceType ModelObject VariableDeclarator owner FieldDeclaration Modifier public final ReferenceType String VariableDeclarator title FieldDeclaration Modifier private final ReferenceType FilePath VariableDeclarator base FieldDeclaration Modifier private final ReferenceType String VariableDeclarator icon FieldDeclaration Modifier private final BasicType boolean VariableDeclarator serveDirIndex FieldDeclaration Modifier private ReferenceType String VariableDeclarator indexFileName Literal ""index.html"" ConstructorDeclaration Modifier public /**
     * @deprecated
     *      Use {@link #DirectoryBrowserSupport(ModelObject, String)}
     */ DirectoryBrowserSupport FormalParameter ReferenceType ModelObject owner StatementExpression ExplicitConstructorInvocation MemberReference owner MethodInvocation owner getDisplayName ConstructorDeclaration Modifier public /**
     * @deprecated as of 1.297
     *      Use {@link #DirectoryBrowserSupport(ModelObject, FilePath, String, String, boolean)}
     */ DirectoryBrowserSupport FormalParameter ReferenceType ModelObject owner FormalParameter ReferenceType String title StatementExpression ExplicitConstructorInvocation MemberReference owner Literal null MemberReference title Literal null Literal false ConstructorDeclaration Modifier public /**
     * @param owner
     *      The parent model object under which the directory browsing is added.
     * @param base
     *      The root of the directory that's bound to URL.
     * @param title
     *      Used in the HTML caption. 
     * @param icon
     *      The icon file name, like ""folder.gif""
     * @param serveDirIndex
     *      True to generate the directory index.
     *      False to serve ""index.html""
     */ DirectoryBrowserSupport FormalParameter ReferenceType ModelObject owner FormalParameter ReferenceType FilePath base FormalParameter ReferenceType String title FormalParameter ReferenceType String icon FormalParameter BasicType boolean serveDirIndex StatementExpression Assignment This MemberReference owner MemberReference owner = StatementExpression Assignment This MemberReference base MemberReference base = StatementExpression Assignment This MemberReference title MemberReference title = StatementExpression Assignment This MemberReference icon MemberReference icon = StatementExpression Assignment This MemberReference serveDirIndex MemberReference serveDirIndex = MethodDeclaration Modifier public generateResponse FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter ReferenceType Object node IOException ServletException TryStatement StatementExpression MethodInvocation MemberReference req MemberReference rsp MemberReference base MemberReference icon MemberReference serveDirIndex serveFile CatchClause CatchClauseParameter InterruptedException e ThrowStatement ClassCreator ReferenceType IOException2 Literal ""interrupted"" MemberReference e MethodDeclaration /**
     * If the directory is requested but the directory listing is disabled, a file of this name
     * is served. By default it's ""index.html"".
     * @since 1.312
     */ Modifier public setIndexFileName FormalParameter ReferenceType String fileName StatementExpression Assignment This MemberReference indexFileName MemberReference fileName = MethodDeclaration /**
     * Serves a file from the file system (Maps the URL to a directory in a file system.)
     *
     * @param icon
     *      The icon file name, like ""folder-open.gif""
     * @param serveDirIndex
     *      True to generate the directory index.
     *      False to serve ""index.html""
     * @deprecated as of 1.297
     *      Instead of calling this method explicitly, just return the {@link DirectoryBrowserSupport} object
     *      from the {@code doXYZ} method and let Stapler generate a response for you.
     */ Modifier public final serveFile FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter ReferenceType FilePath root FormalParameter ReferenceType String icon FormalParameter BasicType boolean serveDirIndex IOException ServletException InterruptedException LocalVariableDeclaration ReferenceType String VariableDeclarator pattern MethodInvocation req Literal ""pattern"" getParameter IfStatement BinaryOperation == MemberReference pattern Literal null StatementExpression Assignment MemberReference pattern MethodInvocation req Literal ""path"" getParameter = End IfStatement BinaryOperation != MemberReference pattern Literal null BlockStatement StatementExpression MethodInvocation rsp MemberReference pattern sendRedirect2 ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MemberReference req getPath IfStatement BinaryOperation != MethodInvocation path MethodInvocation Literal ""/../"" indexOf Literal '\\' Literal '/' replace Literal - 1 BlockStatement StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_BAD_REQUEST sendError ReturnStatement End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator _base ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator _rest ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType int VariableDeclarator restSize Literal - 1 LocalVariableDeclaration BasicType boolean VariableDeclarator zip Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator plain Literal false BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator inBase Literal true LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator pathTokens ClassCreator ReferenceType StringTokenizer MemberReference path Literal ""/"" WhileStatement MethodInvocation pathTokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pathElement MethodInvocation pathTokens nextToken IfStatement BinaryOperation && BinaryOperation && BinaryOperation || MethodInvocation pathElement Literal ""?"" contains MethodInvocation pathElement Literal ""*"" contains MemberReference inBase ClassCreator ! ReferenceType FilePath MemberReference root BinaryOperation + TernaryExpression BinaryOperation > MethodInvocation _base length Literal 0 BinaryOperation + MemberReference _base Literal ""/"" Literal """" MemberReference pathElement StatementExpression Assignment MemberReference inBase Literal false = End IfStatement MethodInvocation pathElement Literal ""*zip*"" equals BlockStatement StatementExpression Assignment MemberReference zip Literal true = BreakStatement End IfStatement MethodInvocation pathElement Literal ""*plain*"" equals BlockStatement StatementExpression Assignment MemberReference plain Literal true = BreakStatement End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb TernaryExpression MemberReference inBase MemberReference _base MemberReference _rest IfStatement BinaryOperation > MethodInvocation sb length Literal 0 StatementExpression MethodInvocation sb Literal '/' append End StatementExpression MethodInvocation sb MemberReference pathElement append IfStatement MemberReference ! inBase StatementExpression MemberReference ++ restSize End End StatementExpression Assignment MemberReference restSize MethodInvocation Math MemberReference restSize Literal 0 max = LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation _base toString LocalVariableDeclaration ReferenceType String VariableDeclarator rest MethodInvocation _rest toString LocalVariableDeclaration ReferenceType FilePath VariableDeclarator baseFile ClassCreator ReferenceType FilePath MemberReference root MemberReference base IfStatement MethodInvocation baseFile isDirectory BlockStatement IfStatement MemberReference zip BlockStatement StatementExpression MethodInvocation rsp Literal ""application/zip"" setContentType StatementExpression MethodInvocation baseFile MethodInvocation rsp getOutputStream MemberReference rest createZipArchive ReturnStatement End IfStatement MemberReference plain BlockStatement StatementExpression MethodInvocation rsp Literal ""text/plain;charset=UTF-8"" setContentType LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os MethodInvocation rsp getOutputStream TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator kid MethodInvocation baseFile ClassCreator ReferenceType SimpleChildList act BlockStatement StatementExpression MethodInvocation os MethodInvocation kid Literal ""UTF-8"" getBytes write StatementExpression MethodInvocation os Literal '\n' write End StatementExpression MethodInvocation os flush StatementExpression MethodInvocation os close ReturnStatement End IfStatement BinaryOperation == MethodInvocation rest length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator reqUrl MethodInvocation req getRequestURL IfStatement BinaryOperation != MethodInvocation reqUrl BinaryOperation - MethodInvocation reqUrl length Literal 1 charAt Literal '/' BlockStatement StatementExpression MethodInvocation rsp MethodInvocation reqUrl MethodInvocation toString Literal '/' append sendRedirect2 ReturnStatement End End LocalVariableDeclaration ReferenceType FileCallable TypeArgument ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path VariableDeclarator glob Literal null IfStatement BinaryOperation > MethodInvocation rest length Literal 0 BlockStatement StatementExpression Assignment MemberReference glob ClassCreator ReferenceType PatternScanner MemberReference rest MethodInvocation MemberReference restSize createBackRef = IfStatement MemberReference serveDirIndex BlockStatement StatementExpression Assignment MemberReference glob ClassCreator ReferenceType ChildPathBuilder = End End IfStatement BinaryOperation != MemberReference glob Literal null BlockStatement StatementExpression MethodInvocation req Literal ""it"" This setAttribute LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Path VariableDeclarator parentPaths MethodInvocation MemberReference base MemberReference restSize buildParentPath StatementExpression MethodInvocation req Literal ""parentPath"" MemberReference parentPaths setAttribute StatementExpression MethodInvocation req Literal ""backPath"" MethodInvocation MemberReference restSize createBackRef setAttribute StatementExpression MethodInvocation req Literal ""topPath"" MethodInvocation BinaryOperation + MethodInvocation parentPaths size MemberReference restSize createBackRef setAttribute StatementExpression MethodInvocation req Literal ""files"" MethodInvocation baseFile MemberReference glob act setAttribute StatementExpression MethodInvocation req Literal ""icon"" MemberReference icon setAttribute StatementExpression MethodInvocation req Literal ""path"" MemberReference path setAttribute StatementExpression MethodInvocation req Literal ""pattern"" MemberReference rest setAttribute StatementExpression MethodInvocation req Literal ""dir"" MemberReference baseFile setAttribute StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""dir.jelly"" getView ReturnStatement End StatementExpression Assignment MemberReference baseFile MethodInvocation baseFile MemberReference indexFileName child = End IfStatement MethodInvocation ! baseFile exists BlockStatement StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_NOT_FOUND sendError ReturnStatement End LocalVariableDeclaration BasicType boolean VariableDeclarator view MethodInvocation rest Literal ""*view*"" equals IfStatement MethodInvocation rest Literal ""*fingerprint*"" equals BlockStatement StatementExpression MethodInvocation rsp MethodInvocation Hudson MethodInvocation MethodInvocation baseFile digest getFingerprint getInstance Literal ""/"" MemberReference req forward ReturnStatement End LocalVariableDeclaration ReferenceType ContentInfo VariableDeclarator ci MethodInvocation baseFile ClassCreator ReferenceType ContentInfo act IfStatement MethodInvocation LOGGER MemberReference Level FINE isLoggable StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Serving "" MemberReference baseFile Literal "" with lastModified="" MemberReference ci lastModified Literal "", contentLength="" MemberReference ci contentLength fine End LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation baseFile read IfStatement MemberReference view BlockStatement StatementExpression MethodInvocation rsp Literal ""Content-Disposition"" BinaryOperation + Literal ""inline; filename="" MethodInvocation baseFile getName setHeader StatementExpression MethodInvocation rsp MemberReference req MemberReference in MemberReference ci lastModified Literal - 1 MemberReference ci contentLength Literal ""plain.txt"" serveFile BlockStatement StatementExpression MethodInvocation rsp MemberReference req MemberReference in MemberReference ci lastModified Literal - 1 MemberReference ci contentLength MethodInvocation baseFile getName serveFile End MethodDeclaration Modifier private ReferenceType String getPath FormalParameter ReferenceType StaplerRequest req LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation req getRestOfPath IfStatement BinaryOperation == MethodInvocation path length Literal 0 StatementExpression Assignment MemberReference path Literal ""/"" = End ReturnStatement MemberReference path ClassDeclaration Modifier private final static ContentInfo FieldDeclaration BasicType int VariableDeclarator contentLength FieldDeclaration BasicType long VariableDeclarator lastModified MethodDeclaration Modifier public ReferenceType ContentInfo invoke FormalParameter ReferenceType File f FormalParameter ReferenceType VirtualChannel channel IOException StatementExpression Assignment MemberReference contentLength Cast BasicType int MethodInvocation f length = StatementExpression Assignment MemberReference lastModified MethodInvocation f lastModified = ReturnStatement This FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType FileCallable TypeArgument ReferenceType ContentInfo MethodDeclaration /**
     * Builds a list of {@link Path} that represents ancestors
     * from a string like ""/foo/bar/zot"".
     */ Modifier private ReferenceType List TypeArgument ReferenceType Path buildParentPath FormalParameter ReferenceType String pathList FormalParameter BasicType int restSize LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Path VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Path LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference pathList Literal ""/"" LocalVariableDeclaration BasicType int VariableDeclarator total MethodInvocation tokens countTokens LocalVariableDeclaration BasicType int VariableDeclarator current Literal 1 WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation tokens nextToken StatementExpression MethodInvocation r ClassCreator ReferenceType Path MethodInvocation BinaryOperation + BinaryOperation - MemberReference total MemberReference current MemberReference restSize createBackRef MemberReference token Literal true Literal 0 Literal true add StatementExpression MemberReference ++ current End ReturnStatement MemberReference r MethodDeclaration Modifier private static ReferenceType String createBackRef FormalParameter BasicType int times IfStatement BinaryOperation == MemberReference times Literal 0 ReturnStatement Literal ""./"" End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder BinaryOperation * Literal 3 MemberReference times ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference times MemberReference ++ i StatementExpression MethodInvocation buf Literal ""../"" append End ReturnStatement MethodInvocation buf toString ClassDeclaration Modifier public final static /**
     * Represents information about one file or folder.
     */ Path FieldDeclaration /**
         * Relative URL to this path from the current page.
         */ Modifier private final ReferenceType String VariableDeclarator href FieldDeclaration /**
         * Name of this path. Just the file name portion.
         */ Modifier private final ReferenceType String VariableDeclarator title FieldDeclaration Modifier private final BasicType boolean VariableDeclarator isFolder FieldDeclaration /**
         * File size, or null if this is not a file.
         */ Modifier private final BasicType long VariableDeclarator size FieldDeclaration /**
         * If the current user can read the file. 
         */ Modifier private final BasicType boolean VariableDeclarator isReadable ConstructorDeclaration Modifier public Path FormalParameter ReferenceType String href FormalParameter ReferenceType String title FormalParameter BasicType boolean isFolder FormalParameter BasicType long size FormalParameter BasicType boolean isReadable StatementExpression Assignment This MemberReference href MemberReference href = StatementExpression Assignment This MemberReference title MemberReference title = StatementExpression Assignment This MemberReference isFolder MemberReference isFolder = StatementExpression Assignment This MemberReference size MemberReference size = StatementExpression Assignment This MemberReference isReadable MemberReference isReadable = MethodDeclaration Modifier public BasicType boolean isFolder ReturnStatement MemberReference isFolder MethodDeclaration Modifier public BasicType boolean isReadable ReturnStatement MemberReference isReadable MethodDeclaration Modifier public ReferenceType String getHref ReturnStatement MemberReference href MethodDeclaration Modifier public ReferenceType String getTitle ReturnStatement MemberReference title MethodDeclaration Modifier public ReferenceType String getIconName IfStatement MemberReference isReadable ReturnStatement TernaryExpression MemberReference isFolder Literal ""folder.gif"" Literal ""text.gif"" ReturnStatement TernaryExpression MemberReference isFolder Literal ""folder-error.gif"" Literal ""text-error.gif"" End MethodDeclaration Modifier public BasicType long getSize ReturnStatement MemberReference size FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable ClassDeclaration Modifier private final static FileComparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType File lhs FormalParameter ReferenceType File rhs LocalVariableDeclaration BasicType int VariableDeclarator r BinaryOperation - MethodInvocation MemberReference lhs dirRank MethodInvocation MemberReference rhs dirRank IfStatement BinaryOperation != MemberReference r Literal 0 ReturnStatement MemberReference r End ReturnStatement MethodInvocation lhs MethodInvocation MethodInvocation rhs getName compareTo getName MethodDeclaration Modifier private BasicType int dirRank FormalParameter ReferenceType File f IfStatement MethodInvocation f isDirectory ReturnStatement Literal 0 ReturnStatement Literal 1 End ReferenceType Comparator TypeArgument ReferenceType File ClassDeclaration Modifier private final static /**
     * Simple list of names of children of a folder.
     * Subfolders will have a trailing slash appended.
     */ SimpleChildList FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String invoke FormalParameter ReferenceType File f FormalParameter ReferenceType VirtualChannel channel IOException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator kids MethodInvocation f list ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator kid MemberReference kids BlockStatement IfStatement ClassCreator MethodInvocation isDirectory ReferenceType File MemberReference f MemberReference kid BlockStatement StatementExpression MethodInvocation r BinaryOperation + MemberReference kid Literal ""/"" add BlockStatement StatementExpression MethodInvocation r MemberReference kid add End End ReturnStatement MemberReference r ReferenceType FileCallable TypeArgument ReferenceType List TypeArgument ReferenceType String ClassDeclaration Modifier private final static /**
     * Builds a list of list of {@link Path}. The inner
     * list of {@link Path} represents one child item to be shown
     * (this mechanism is used to skip empty intermediate directory.)
     */ ChildPathBuilder MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path invoke FormalParameter ReferenceType File cur FormalParameter ReferenceType VirtualChannel channel IOException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType List TypeArgument ReferenceType Path LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation cur listFiles IfStatement BinaryOperation != MemberReference files Literal null BlockStatement StatementExpression MethodInvocation Arrays MemberReference files ClassCreator ReferenceType FileComparator sort ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator f MemberReference files BlockStatement LocalVariableDeclaration ReferenceType Path VariableDeclarator p ClassCreator ReferenceType Path MethodInvocation Util MethodInvocation f getName rawEncode MethodInvocation f getName MethodInvocation f isDirectory MethodInvocation f length MethodInvocation f canRead IfStatement MethodInvocation ! f isDirectory BlockStatement StatementExpression MethodInvocation r MethodInvocation Collections MemberReference p singletonList add BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Path VariableDeclarator l ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Path StatementExpression MethodInvocation l MemberReference p add LocalVariableDeclaration ReferenceType String VariableDeclarator relPath MethodInvocation Util MethodInvocation f getName rawEncode WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator sub MethodInvocation f ClassCreator ReferenceType FilenameFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ReturnStatement BinaryOperation && BinaryOperation && MethodInvocation ! name Literal ""."" startsWith MethodInvocation ! name Literal ""CVS"" equals MethodInvocation ! name Literal "".svn"" equals listFiles IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference sub Literal null BinaryOperation != MemberReference sub length Literal 1 MemberReference ! ArraySelector Literal 0 MethodInvocation isDirectory sub BreakStatement End StatementExpression Assignment MemberReference f MemberReference ArraySelector Literal 0 sub = StatementExpression Assignment MemberReference relPath BinaryOperation + Literal '/' MethodInvocation Util MethodInvocation f getName rawEncode += StatementExpression MethodInvocation l ClassCreator ReferenceType Path MemberReference relPath MethodInvocation f getName Literal true Literal 0 MethodInvocation f canRead add End StatementExpression MethodInvocation r MemberReference l add End End End ReturnStatement MemberReference r FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType FileCallable TypeArgument ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path ClassDeclaration Modifier private static /**
     * Runs ant GLOB against the current {@link FilePath} and returns matching
     * paths.
     */ PatternScanner FieldDeclaration Modifier private final ReferenceType String VariableDeclarator pattern FieldDeclaration /**
         * String like ""../../../"" that cancels the 'rest' portion. Can be ""./""
         */ Modifier private final ReferenceType String VariableDeclarator baseRef ConstructorDeclaration Modifier public PatternScanner FormalParameter ReferenceType String pattern FormalParameter ReferenceType String baseRef StatementExpression Assignment This MemberReference pattern MemberReference pattern = StatementExpression Assignment This MemberReference baseRef MemberReference baseRef = MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path invoke FormalParameter ReferenceType File baseDir FormalParameter ReferenceType VirtualChannel channel IOException LocalVariableDeclaration ReferenceType FileSet VariableDeclarator fs MethodInvocation Util MemberReference baseDir MemberReference pattern createFileSet LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator ds MethodInvocation fs getDirectoryScanner LocalVariableDeclaration ReferenceType String VariableDeclarator files MethodInvocation ds getIncludedFiles IfStatement BinaryOperation > MemberReference files length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType List TypeArgument ReferenceType Path MemberReference files length ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator match MemberReference files BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Path VariableDeclarator file MethodInvocation MemberReference baseDir ClassCreator ReferenceType File MemberReference baseDir MemberReference match buildPathList StatementExpression MethodInvocation r MemberReference file add End ReturnStatement MemberReference r End ReturnStatement Literal null MethodDeclaration /**
         * Builds a path list from the current workspace directory down to the specified file path.
         */ Modifier private ReferenceType List TypeArgument ReferenceType Path buildPathList FormalParameter ReferenceType File baseDir FormalParameter ReferenceType File filePath IOException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Path VariableDeclarator pathList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Path LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator href ClassCreator ReferenceType StringBuilder MemberReference baseRef StatementExpression MethodInvocation MemberReference baseDir MemberReference filePath MemberReference pathList MemberReference href buildPathList ReturnStatement MemberReference pathList MethodDeclaration /**
         * Builds the path list and href recursively top-down.
         */ Modifier private buildPathList FormalParameter ReferenceType File baseDir FormalParameter ReferenceType File filePath FormalParameter ReferenceType List TypeArgument ReferenceType Path pathList FormalParameter ReferenceType StringBuilder href IOException LocalVariableDeclaration ReferenceType File VariableDeclarator parent MethodInvocation filePath getParentFile IfStatement MethodInvocation ! baseDir MemberReference parent equals BlockStatement StatementExpression MethodInvocation MemberReference baseDir MemberReference parent MemberReference pathList MemberReference href buildPathList End StatementExpression MethodInvocation href MethodInvocation Util MethodInvocation filePath getName rawEncode append IfStatement MethodInvocation filePath isDirectory BlockStatement StatementExpression MethodInvocation href Literal ""/"" append End LocalVariableDeclaration ReferenceType Path VariableDeclarator path ClassCreator ReferenceType Path MethodInvocation href toString MethodInvocation filePath getName MethodInvocation filePath isDirectory MethodInvocation filePath length MethodInvocation filePath canRead StatementExpression MethodInvocation pathList MemberReference path add FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType FileCallable TypeArgument ReferenceType List TypeArgument ReferenceType List TypeArgument ReferenceType Path FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType DirectoryBrowserSupport getLogger ReferenceType HttpResponse",0
491,491,,0
114,114,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.ExtensionPoint Import hudson.Util Import hudson.DescriptorExtensionList Import hudson.Extension Import hudson.model.Computer Import hudson.model.Describable Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.util.DescriptorList Import org.kohsuke.stapler.DataBoundConstructor Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public abstract /**
 * Controls when to take {@link Computer} offline, bring it back online, or even to destroy it.
 * <p/>
 * <b>EXPERIMENTAL: SIGNATURE MAY CHANGE IN FUTURE RELEASES</b>
 *
 * @author Stephen Connolly
 * @author Kohsuke Kawaguchi
 */ RetentionStrategy MethodDeclaration /**
     * This method will be called periodically to allow this strategy to decide what to do with it's owning slave.
     *
     * @param c {@link Computer} for which this strategy is assigned. This computer may be online or offline.
     *          This object also exposes a bunch of properties that the callee can use to decide what action to take.
     * @return The number of minutes after which the strategy would like to be checked again. The strategy may be
     *         rechecked earlier or later that this!
     */ Modifier public abstract BasicType long check FormalParameter ReferenceType T c MethodDeclaration /**
     * This method is called to determine whether manual launching of the slave is allowed at this point in time.
     * @param c {@link Computer} for which this strategy is assigned. This computer may be online or offline.
     *          This object also exposes a bunch of properties that the callee can use to decide if manual launching is
     * allowed at this time.
     * @return {@code true} if manual launching of the slave is allowed at this point in time.
     */ Modifier public BasicType boolean isManualLaunchAllowed FormalParameter ReferenceType T c ReturnStatement Literal true MethodDeclaration /**
     * Called when a new {@link Computer} object is introduced (such as when Hudson started, or when
     * a new slave is added.)
     *
     * <p>
     * The default implementation of this method delegates to {@link #check(Computer)},
     * but this allows {@link RetentionStrategy} to distinguish the first time invocation from the rest.
     *
     * @since 1.275
     */ Modifier public start FormalParameter ReferenceType T c StatementExpression MethodInvocation MemberReference c check MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType RetentionStrategy TypeArgument ? getDescriptor ReturnStatement MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance MethodDeclaration /**
     * Returns all the registered {@link RetentionStrategy} descriptors.
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType RetentionStrategy TypeArgument ? TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RetentionStrategy TypeArgument ? all ReturnStatement Cast ReferenceType DescriptorExtensionList MethodInvocation Hudson MethodInvocation ClassReference ReferenceType RetentionStrategy getDescriptorList getInstance FieldDeclaration /**
     * All registered {@link RetentionStrategy} implementations.
     * @deprecated as of 1.286
     *      Use {@link #all()} for read access, and {@link Extension} for registration.
     */ Modifier public final static ReferenceType DescriptorList TypeArgument ReferenceType RetentionStrategy TypeArgument ? VariableDeclarator LIST ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType RetentionStrategy TypeArgument ? Cast ReferenceType Class ClassReference ReferenceType RetentionStrategy FieldDeclaration /**
     * Dummy instance that doesn't do any attempt to retention.
     */ Modifier public final static ReferenceType RetentionStrategy TypeArgument ReferenceType Computer VariableDeclarator NOOP ClassCreator ReferenceType RetentionStrategy TypeArgument ReferenceType Computer MethodDeclaration Modifier public BasicType long check FormalParameter ReferenceType Computer c ReturnStatement Literal 1 MethodDeclaration Modifier public Annotation Override start FormalParameter ReferenceType Computer c StatementExpression MethodInvocation c Literal false connect MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType RetentionStrategy TypeArgument ? getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier private final ReferenceType DescriptorImpl VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal """" ReferenceType Descriptor TypeArgument ReferenceType RetentionStrategy TypeArgument ? FieldDeclaration /**
     * Convenient singleton instance, since this {@link RetentionStrategy} is stateless.
     */ Modifier public final static ReferenceType Always VariableDeclarator INSTANCE ClassCreator ReferenceType Always ClassDeclaration Modifier public static /**
     * {@link RetentionStrategy} that tries to keep the node online all the time.
     */ Always ConstructorDeclaration Modifier public Annotation DataBoundConstructor /**
         * Constructs a new Always.
         */ Always MethodDeclaration Modifier public BasicType long check FormalParameter ReferenceType SlaveComputer c IfStatement BinaryOperation && BinaryOperation && MethodInvocation c isOffline MethodInvocation ! c isConnecting MethodInvocation c isLaunchSupported StatementExpression MethodInvocation c tryReconnect End ReturnStatement Literal 1 ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages RetentionStrategy_Always_displayName ReferenceType Descriptor TypeArgument ReferenceType RetentionStrategy TypeArgument ? ReferenceType RetentionStrategy TypeArgument ReferenceType SlaveComputer ClassDeclaration Modifier public static /**
     * {@link hudson.slaves.RetentionStrategy} that tries to keep the node offline when not in use.
     */ Demand FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator logger MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Demand getLogger FieldDeclaration /**
         * The delay (in minutes) for which the slave must be in demand before tring to launch it.
         */ Modifier private final BasicType long VariableDeclarator inDemandDelay FieldDeclaration /**
         * The delay (in minutes) for which the slave must be idle before taking it offline.
         */ Modifier private final BasicType long VariableDeclarator idleDelay ConstructorDeclaration Modifier public Annotation DataBoundConstructor Demand FormalParameter BasicType long inDemandDelay FormalParameter BasicType long idleDelay StatementExpression Assignment This MemberReference inDemandDelay MethodInvocation Math Literal 1 MemberReference inDemandDelay max = StatementExpression Assignment This MemberReference idleDelay MethodInvocation Math Literal 1 MemberReference idleDelay max = MethodDeclaration /**
         * Getter for property 'inDemandDelay'.
         *
         * @return Value for property 'inDemandDelay'.
         */ Modifier public BasicType long getInDemandDelay ReturnStatement MemberReference inDemandDelay MethodDeclaration /**
         * Getter for property 'idleDelay'.
         *
         * @return Value for property 'idleDelay'.
         */ Modifier public BasicType long getIdleDelay ReturnStatement MemberReference idleDelay MethodDeclaration Modifier public synchronized BasicType long check FormalParameter ReferenceType SlaveComputer c IfStatement MethodInvocation c isOffline BlockStatement LocalVariableDeclaration Modifier final BasicType long VariableDeclarator demandMilliseconds BinaryOperation - MethodInvocation System currentTimeMillis MethodInvocation c getDemandStartMilliseconds IfStatement BinaryOperation > MemberReference demandMilliseconds BinaryOperation * BinaryOperation * MemberReference inDemandDelay Literal 1000 Literal 60 BlockStatement StatementExpression MethodInvocation logger MemberReference Level INFO Literal ""Launching computer {0} as it has been in demand for {1}"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation c getName MethodInvocation Util MemberReference demandMilliseconds getTimeSpanString log IfStatement MethodInvocation c isLaunchSupported StatementExpression MethodInvocation c Literal false connect End End IfStatement MethodInvocation c isIdle BlockStatement LocalVariableDeclaration Modifier final BasicType long VariableDeclarator idleMilliseconds BinaryOperation - MethodInvocation System currentTimeMillis MethodInvocation c getIdleStartMilliseconds IfStatement BinaryOperation > MemberReference idleMilliseconds BinaryOperation * BinaryOperation * MemberReference idleDelay Literal 1000 Literal 60 BlockStatement StatementExpression MethodInvocation logger MemberReference Level INFO Literal ""Disconnecting computer {0} as it has been idle for {1}"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation c getName MethodInvocation Util MemberReference idleMilliseconds getTimeSpanString log StatementExpression MethodInvocation c disconnect End End End ReturnStatement Literal 1 ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages RetentionStrategy_Demand_displayName ReferenceType Descriptor TypeArgument ReferenceType RetentionStrategy TypeArgument ? ReferenceType RetentionStrategy TypeArgument ReferenceType SlaveComputer TypeParameter T ReferenceType Computer ReferenceType Describable TypeArgument ReferenceType RetentionStrategy TypeArgument ? ReferenceType ExtensionPoint",0
4,4,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.Extension Import hudson.ExtensionPoint ClassDeclaration Modifier public abstract /**
 * {@link BuildStep}s that run after the build is completed.
 *
 * <p>
 * {@link Notifier} is a kind of {@link Publisher} that sends out the outcome of the builds to
 * other systems and humans. This marking ensures that notifiers are run after the build result
 * is set to its final values by other {@link Recorder}s.
 *
 * <p>
 * To register a custom {@link Publisher} from a plugin,
 * put {@link Extension} on your descriptor.
 *
 *
 * @author Kohsuke Kawaguchi
 * @since 1.286
 * @see Recorder
 */ Notifier ConstructorDeclaration Modifier protected Annotation SuppressWarnings Literal ""deprecation"" Notifier MethodDeclaration Modifier public ReferenceType BuildStepDescriptor getDescriptor ReturnStatement Cast ReferenceType BuildStepDescriptor SuperMethodInvocation getDescriptor ReferenceType Publisher ReferenceType ExtensionPoint",0
359,359,,0
64,64,"CompilationUnit PackageDeclaration hudson.util Import org.xml.sax.helpers.XMLFilterImpl Import org.xml.sax.XMLFilter Import org.xml.sax.ContentHandler Import org.xml.sax.Attributes Import org.xml.sax.SAXException Import org.apache.commons.jelly.XMLOutput Import java.util.Stack Import java.util.Map Import java.util.HashMap Import java.util.Set Import java.util.HashSet Import java.util.Arrays ClassDeclaration Modifier public /**
 * {@link XMLFilter} that checks the proper nesting of table related tags.
 *
 * <p>
 * Browser often ""fixes"" HTML by moving tables into the right place,
 * so failure to generate proper tables can result in a hard-to-track bugs.
 *
 * <p>
 * TODO: where to apply this in stapler?
 * JellyClassTearOff creates XMLOutput. Perhaps we define a decorator?
 * We can also wrap Script. would that work better?
 *
 * @author Kohsuke Kawaguchi
 */ TableNestChecker FieldDeclaration Modifier private final ReferenceType Stack TypeArgument ReferenceType Checker VariableDeclarator elements ClassCreator ReferenceType Stack TypeArgument ReferenceType Checker FieldDeclaration Modifier private final ReferenceType Stack TypeArgument ReferenceType String VariableDeclarator tagNames ClassCreator ReferenceType Stack TypeArgument ReferenceType String MethodDeclaration Modifier public static applyTo FormalParameter ReferenceType XMLOutput xo StatementExpression MethodInvocation xo ClassCreator ReferenceType TableNestChecker MethodInvocation xo getContentHandler setContentHandler ConstructorDeclaration Modifier public TableNestChecker StatementExpression MethodInvocation elements MemberReference ALL_ALLOWED push ConstructorDeclaration Modifier public TableNestChecker FormalParameter ReferenceType ContentHandler target StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference target setContentHandler MethodDeclaration Modifier public startElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String localName FormalParameter ReferenceType String qName FormalParameter ReferenceType Attributes atts SAXException LocalVariableDeclaration ReferenceType String VariableDeclarator tagName MethodInvocation localName toUpperCase IfStatement MethodInvocation ! elements MethodInvocation MemberReference tagName isAllowed peek ThrowStatement ClassCreator ReferenceType SAXException BinaryOperation + BinaryOperation + MemberReference tagName Literal "" is not allowed inside "" MethodInvocation tagNames peek End LocalVariableDeclaration ReferenceType Checker VariableDeclarator next MethodInvocation CHECKERS MemberReference tagName get IfStatement BinaryOperation == MemberReference next Literal null StatementExpression Assignment MemberReference next MemberReference ALL_ALLOWED = End StatementExpression MethodInvocation elements MemberReference next push StatementExpression MethodInvocation tagNames MemberReference tagName push StatementExpression SuperMethodInvocation MemberReference uri MemberReference localName MemberReference qName MemberReference atts startElement MethodDeclaration Modifier public endElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String localName FormalParameter ReferenceType String qName SAXException StatementExpression MethodInvocation elements pop StatementExpression MethodInvocation tagNames pop StatementExpression SuperMethodInvocation MemberReference uri MemberReference localName MemberReference qName endElement InterfaceDeclaration Modifier private Checker MethodDeclaration BasicType boolean isAllowed FormalParameter ReferenceType String childTag FieldDeclaration Modifier private final static ReferenceType Checker VariableDeclarator ALL_ALLOWED ClassCreator ReferenceType Checker MethodDeclaration Modifier public BasicType boolean isAllowed FormalParameter ReferenceType String childTag ReturnStatement Literal true ClassDeclaration Modifier private final static InList FieldDeclaration Modifier private final ReferenceType Set TypeArgument ReferenceType String VariableDeclarator tags ConstructorDeclaration Modifier private InList FormalParameter ReferenceType String tags  StatementExpression Assignment This MemberReference tags ClassCreator ReferenceType HashSet TypeArgument ReferenceType String MethodInvocation Arrays MemberReference tags asList = MethodDeclaration Modifier public BasicType boolean isAllowed FormalParameter ReferenceType String childTag ReturnStatement MethodInvocation tags MemberReference childTag contains ReferenceType Checker FieldDeclaration Modifier private final static ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Checker VariableDeclarator CHECKERS ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Checker StatementExpression MethodInvocation CHECKERS Literal ""TABLE"" ClassCreator ReferenceType InList Literal ""TR"" Literal ""THEAD"" Literal ""TBODY"" put LocalVariableDeclaration ReferenceType InList VariableDeclarator rows ClassCreator ReferenceType InList Literal ""TR"" StatementExpression MethodInvocation CHECKERS Literal ""THEAD"" MemberReference rows put StatementExpression MethodInvocation CHECKERS Literal ""THEAD"" MemberReference rows put StatementExpression MethodInvocation CHECKERS Literal ""TR"" ClassCreator ReferenceType InList Literal ""TD"" Literal ""TH"" put ReferenceType XMLFilterImpl",1
362,362,,0
189,189,"CompilationUnit PackageDeclaration hudson.scm Import hudson.ExtensionPoint Import hudson.DescriptorExtensionList Import hudson.Extension Import hudson.tasks.BuildWrapper Import hudson.model.Describable Import hudson.model.Descriptor Import hudson.model.Hudson Import java.io.IOException Import java.io.Serializable Import java.net.URL Import java.net.MalformedURLException ClassDeclaration Modifier public abstract /**
 * Connects Hudson to repository browsers like ViewCVS or FishEye,
 * so that Hudson can generate links to them. 
 *
 * <p>
 * {@link RepositoryBrowser} instance is normally created as
 * a result of job configuration, and  stores immutable
 * configuration information (such as the URL of the FishEye site).
 *
 * <p>
 * {@link RepositoryBrowser} is persisted with {@link SCM}.
 *
 * <p>
 * To have Hudson recognize {@link RepositoryBrowser}, put {@link Extension} on your {@link Descriptor}.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.89
 * @see RepositoryBrowsers
 */ RepositoryBrowser MethodDeclaration /**
     * Determines the link to the given change set.
     *
     * @return
     *      null if this repository browser doesn't have any meaningful
     *      URL for a change set (for example, ViewCVS doesn't have
     *      any page for a change set, whereas FishEye does.)
     */ Modifier public abstract ReferenceType URL getChangeSetLink FormalParameter ReferenceType E changeSet IOException MethodDeclaration /**
     * If the given string starts with '/', return a string that removes it.
     */ Modifier protected static ReferenceType String trimHeadSlash FormalParameter ReferenceType String s IfStatement MethodInvocation s Literal ""/"" startsWith ReturnStatement MethodInvocation s Literal 1 substring End ReturnStatement MemberReference s MethodDeclaration /**
     * Normalize the URL so that it ends with '/'.
     * <p>
     * An attention is paid to preserve the query parameters in URL if any. 
     */ Modifier protected static ReferenceType URL normalizeToEndWithSlash FormalParameter ReferenceType URL url IfStatement MethodInvocation url MethodInvocation Literal ""/"" endsWith getPath ReturnStatement MemberReference url End LocalVariableDeclaration ReferenceType String VariableDeclarator q MethodInvocation url getQuery StatementExpression Assignment MemberReference q TernaryExpression BinaryOperation != MemberReference q Literal null BinaryOperation + Literal '?' MemberReference q Literal """" = TryStatement ReturnStatement ClassCreator ReferenceType URL MemberReference url BinaryOperation + BinaryOperation + MethodInvocation url getPath Literal '/' MemberReference q CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType Error MemberReference e MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? getDescriptor ReturnStatement MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance MethodDeclaration /**
     * Returns all the registered {@link RepositoryBrowser} descriptors.
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType RepositoryBrowser TypeArgument ? TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? all ReturnStatement Cast ReferenceType DescriptorExtensionList MethodInvocation Hudson MethodInvocation ClassReference ReferenceType RepositoryBrowser getDescriptorList getInstance FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L TypeParameter E ReferenceType ChangeLogSet ReferenceType Entry ReferenceType ExtensionPoint ReferenceType Describable TypeArgument ReferenceType RepositoryBrowser TypeArgument ? ReferenceType Serializable",0
256,256,"CompilationUnit PackageDeclaration hudson.maven Import org.apache.maven.BuildFailureException Import org.apache.maven.SettingsConfigurationException Import org.apache.maven.artifact.Artifact Import org.apache.maven.artifact.factory.ArtifactFactory Import org.apache.maven.artifact.manager.WagonManager Import org.apache.maven.artifact.repository.ArtifactRepository Import org.apache.maven.artifact.repository.ArtifactRepositoryFactory Import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy Import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout Import org.apache.maven.artifact.resolver.ArtifactNotFoundException Import org.apache.maven.artifact.resolver.ArtifactResolutionException Import org.apache.maven.artifact.resolver.ArtifactResolver Import org.apache.maven.embedder.MavenEmbedderException Import org.apache.maven.embedder.MavenEmbedderLogger Import org.apache.maven.embedder.MavenEmbedderLoggerManager Import org.apache.maven.embedder.PlexusLoggerAdapter Import org.apache.maven.embedder.SummaryPluginDescriptor Import org.apache.maven.execution.MavenSession Import org.apache.maven.execution.ReactorManager Import org.apache.maven.lifecycle.LifecycleExecutionException Import org.apache.maven.lifecycle.LifecycleExecutor Import org.apache.maven.model.Model Import org.apache.maven.model.io.xpp3.MavenXpp3Reader Import org.apache.maven.model.io.xpp3.MavenXpp3Writer Import org.apache.maven.monitor.event.DefaultEventDispatcher Import org.apache.maven.monitor.event.EventDispatcher Import org.apache.maven.monitor.event.EventMonitor Import org.apache.maven.plugin.MojoExecutionException Import org.apache.maven.plugin.descriptor.PluginDescriptor Import org.apache.maven.plugin.descriptor.PluginDescriptorBuilder Import org.apache.maven.profiles.DefaultProfileManager Import org.apache.maven.profiles.ProfileManager Import org.apache.maven.project.DuplicateProjectException Import org.apache.maven.project.MavenProject Import org.apache.maven.project.MavenProjectBuilder Import org.apache.maven.project.ProjectBuildingException Import org.apache.maven.project.InvalidProjectModelException Import org.apache.maven.project.validation.ModelValidationResult Import org.apache.maven.settings.MavenSettingsBuilder Import org.apache.maven.settings.RuntimeInfo Import org.apache.maven.settings.Settings Import org.apache.maven.settings.Proxy Import org.apache.maven.settings.Server Import org.apache.maven.settings.Mirror Import org.apache.maven.wagon.events.TransferListener Import org.codehaus.classworlds.ClassWorld Import org.codehaus.classworlds.DuplicateRealmException Import org.codehaus.plexus.PlexusContainer Import org.codehaus.plexus.PlexusContainerException Import org.codehaus.plexus.component.repository.ComponentDescriptor Import org.codehaus.plexus.component.repository.exception.ComponentLifecycleException Import org.codehaus.plexus.component.repository.exception.ComponentLookupException Import org.codehaus.plexus.configuration.PlexusConfiguration Import org.codehaus.plexus.configuration.PlexusConfigurationException Import org.codehaus.plexus.embed.Embedder Import org.codehaus.plexus.util.DirectoryScanner Import org.codehaus.plexus.util.dag.CycleDetectedException Import org.codehaus.plexus.util.xml.pull.XmlPullParserException Import org.codehaus.plexus.util.xml.Xpp3Dom Import java.io.File Import java.io.FileNotFoundException Import java.io.FileReader Import java.io.IOException Import java.io.InputStream Import java.io.InputStreamReader Import java.io.Writer Import java.net.URL Import java.util.ArrayList Import java.util.Collections Import java.util.Date Import java.util.Iterator Import java.util.List Import java.util.Properties Import java.lang.reflect.Field Import hudson.Util ClassDeclaration Modifier public /**
 * Class intended to be used by clients who wish to embed Maven into their applications
 *
 * @author <a href=""mailto:jason@maven.org"">Jason van Zyl</a>
 */ MavenEmbedder FieldDeclaration Modifier public final static ReferenceType String VariableDeclarator userHome MethodInvocation System Literal ""user.home"" getProperty FieldDeclaration Modifier private ReferenceType Embedder VariableDeclarator embedder FieldDeclaration Modifier private ReferenceType MavenProjectBuilder VariableDeclarator mavenProjectBuilder FieldDeclaration Modifier private ReferenceType ArtifactRepositoryFactory VariableDeclarator artifactRepositoryFactory FieldDeclaration Modifier private ReferenceType MavenSettingsBuilder VariableDeclarator settingsBuilder FieldDeclaration Modifier private ReferenceType LifecycleExecutor VariableDeclarator lifecycleExecutor FieldDeclaration Modifier private ReferenceType WagonManager VariableDeclarator wagonManager FieldDeclaration Modifier private ReferenceType MavenXpp3Reader VariableDeclarator modelReader FieldDeclaration Modifier private ReferenceType MavenXpp3Writer VariableDeclarator modelWriter FieldDeclaration Modifier private ReferenceType ProfileManager VariableDeclarator profileManager FieldDeclaration Modifier private ReferenceType PluginDescriptorBuilder VariableDeclarator pluginDescriptorBuilder FieldDeclaration Modifier private ReferenceType ArtifactFactory VariableDeclarator artifactFactory FieldDeclaration Modifier private ReferenceType ArtifactResolver VariableDeclarator artifactResolver FieldDeclaration Modifier private ReferenceType ArtifactRepositoryLayout VariableDeclarator defaultArtifactRepositoryLayout FieldDeclaration Modifier private ReferenceType Settings VariableDeclarator settings FieldDeclaration Modifier private ReferenceType ArtifactRepository VariableDeclarator localRepository FieldDeclaration Modifier private ReferenceType File VariableDeclarator localRepositoryDirectory FieldDeclaration Modifier private ReferenceType ClassLoader VariableDeclarator classLoader FieldDeclaration Modifier private ReferenceType MavenEmbedderLogger VariableDeclarator logger FieldDeclaration Modifier private BasicType boolean VariableDeclarator interactiveMode FieldDeclaration Modifier private BasicType boolean VariableDeclarator offline FieldDeclaration Modifier private ReferenceType String VariableDeclarator globalChecksumPolicy FieldDeclaration Modifier private ReferenceType String VariableDeclarator profiles FieldDeclaration Modifier private ReferenceType Properties VariableDeclarator systemProperties FieldDeclaration /**
     * This option determines whether the embedder is to be aligned to the user
     * installation.
     */ Modifier private BasicType boolean VariableDeclarator alignWithUserInstallation FieldDeclaration /**
     * Installation of Maven. We don't really read jar files from here,
     * but we do read <tt>conf/settings.xml</tt>.
     *
     * <p>
     * For compatibility reasons, this field may be null,
     * when {@link MavenEmbedder} is invoked from old plugins
     * who don't give us this value.
     */ Modifier private final ReferenceType File VariableDeclarator mavenHome ConstructorDeclaration Modifier public MavenEmbedder FormalParameter ReferenceType File mavenHome StatementExpression Assignment This MemberReference mavenHome MemberReference mavenHome = MethodDeclaration Modifier public setInteractiveMode FormalParameter BasicType boolean interactiveMode StatementExpression Assignment This MemberReference interactiveMode MemberReference interactiveMode = MethodDeclaration Modifier public BasicType boolean isInteractiveMode ReturnStatement MemberReference interactiveMode MethodDeclaration Modifier public setOffline FormalParameter BasicType boolean offline StatementExpression Assignment This MemberReference offline MemberReference offline = MethodDeclaration Modifier public BasicType boolean isOffline ReturnStatement MemberReference offline MethodDeclaration Modifier public setGlobalChecksumPolicy FormalParameter ReferenceType String globalChecksumPolicy StatementExpression Assignment This MemberReference globalChecksumPolicy MemberReference globalChecksumPolicy = MethodDeclaration Modifier public ReferenceType String getGlobalChecksumPolicy ReturnStatement MemberReference globalChecksumPolicy MethodDeclaration Modifier public BasicType boolean isAlignWithUserInstallation ReturnStatement MemberReference alignWithUserInstallation MethodDeclaration Modifier public setAlignWithUserInstallation FormalParameter BasicType boolean alignWithUserInstallation StatementExpression Assignment This MemberReference alignWithUserInstallation MemberReference alignWithUserInstallation = MethodDeclaration /**
     * Activates/deactivates profiles.
     * ','-separated profile list, or null. This works exactly like the CLI ""-P"" option.
     *
     * This method needs to be called before the embedder is {@link #start() started}.
     */ Modifier public setProfiles FormalParameter ReferenceType String profiles StatementExpression Assignment This MemberReference profiles MemberReference profiles = MethodDeclaration /**
     * Sets the properties that the embedded Maven sees as system properties.
     *
     * <p>
     * In various places inside Maven, {@link System#getProperties()} are still referenced,
     * and still in other places, the values given to this method is only used as overrides
     * and not the replacement of the real {@link System#getProperties()}. So Maven still
     * doesn't quite behave as it should, but at least this allows Hudson to add system properties
     * to Maven without really messing up our current JVM.
     */ Modifier public setSystemProperties FormalParameter ReferenceType Properties props StatementExpression Assignment This MemberReference systemProperties MemberReference props = MethodDeclaration /**
     * Set the classloader to use with the maven embedder.
     *
     * @param classLoader
     */ Modifier public setClassLoader FormalParameter ReferenceType ClassLoader classLoader StatementExpression Assignment This MemberReference classLoader MemberReference classLoader = MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MemberReference classLoader MethodDeclaration Modifier public setLocalRepositoryDirectory FormalParameter ReferenceType File localRepositoryDirectory StatementExpression Assignment This MemberReference localRepositoryDirectory MemberReference localRepositoryDirectory = MethodDeclaration Modifier public ReferenceType File getLocalRepositoryDirectory ReturnStatement MemberReference localRepositoryDirectory MethodDeclaration Modifier public ReferenceType ArtifactRepository getLocalRepository ReturnStatement MemberReference localRepository MethodDeclaration Modifier public ReferenceType MavenEmbedderLogger getLogger ReturnStatement MemberReference logger MethodDeclaration Modifier public setLogger FormalParameter ReferenceType MavenEmbedderLogger logger StatementExpression Assignment This MemberReference logger MemberReference logger = MethodDeclaration Modifier public ReferenceType Model readModel FormalParameter ReferenceType File model XmlPullParserException FileNotFoundException IOException ReturnStatement MethodInvocation modelReader ClassCreator ReferenceType FileReader MemberReference model read MethodDeclaration Modifier public writeModel FormalParameter ReferenceType Writer writer FormalParameter ReferenceType Model model IOException StatementExpression MethodInvocation modelWriter MemberReference writer MemberReference model write MethodDeclaration Modifier public ReferenceType MavenProject readProject FormalParameter ReferenceType File mavenProject ProjectBuildingException TryStatement ReturnStatement MethodInvocation mavenProjectBuilder MemberReference mavenProject MemberReference localRepository MemberReference profileManager build CatchClause CatchClauseParameter InvalidProjectModelException e ThrowStatement ClassCreator ReferenceType ProjectBuildingException MethodInvocation e getProjectId MethodInvocation e getMessage MemberReference e MethodDeclaration Modifier public Annotation Override ReferenceType String getMessage LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation e getMessage LocalVariableDeclaration ReferenceType ModelValidationResult VariableDeclarator vr MethodInvocation e getValidationResult IfStatement BinaryOperation != MemberReference vr Literal null StatementExpression Assignment MemberReference msg BinaryOperation + Literal ""\n"" MethodInvocation vr Literal ""- "" render += End ReturnStatement MemberReference msg MethodDeclaration Modifier public ReferenceType MavenProject readProjectWithDependencies FormalParameter ReferenceType File mavenProject FormalParameter ReferenceType TransferListener transferListener ProjectBuildingException ArtifactResolutionException ArtifactNotFoundException ReturnStatement MethodInvocation mavenProjectBuilder MemberReference mavenProject MemberReference localRepository MemberReference profileManager MemberReference transferListener buildWithDependencies MethodDeclaration Modifier public ReferenceType MavenProject readProjectWithDependencies FormalParameter ReferenceType File mavenProject ProjectBuildingException ArtifactResolutionException ArtifactNotFoundException ReturnStatement MethodInvocation mavenProjectBuilder MemberReference mavenProject MemberReference localRepository MemberReference profileManager buildWithDependencies MethodDeclaration Modifier public ReferenceType List collectProjects FormalParameter ReferenceType File basedir FormalParameter ReferenceType String includes FormalParameter ReferenceType String excludes MojoExecutionException LocalVariableDeclaration ReferenceType List VariableDeclarator projects ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator poms MethodInvocation MemberReference basedir MemberReference includes MemberReference excludes getPomFiles ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation poms iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pom Cast ReferenceType File MethodInvocation i next TryStatement LocalVariableDeclaration ReferenceType MavenProject VariableDeclarator p MethodInvocation MemberReference pom readProject StatementExpression MethodInvocation projects MemberReference p add CatchClause CatchClauseParameter ProjectBuildingException e ThrowStatement ClassCreator ReferenceType MojoExecutionException BinaryOperation + Literal ""Error loading "" MemberReference pom MemberReference e End ReturnStatement MemberReference projects MethodDeclaration Modifier public ReferenceType Artifact createArtifact FormalParameter ReferenceType String groupId FormalParameter ReferenceType String artifactId FormalParameter ReferenceType String version FormalParameter ReferenceType String scope FormalParameter ReferenceType String type ReturnStatement MethodInvocation artifactFactory MemberReference groupId MemberReference artifactId MemberReference version MemberReference scope MemberReference type createArtifact MethodDeclaration Modifier public ReferenceType Artifact createArtifactWithClassifier FormalParameter ReferenceType String groupId FormalParameter ReferenceType String artifactId FormalParameter ReferenceType String version FormalParameter ReferenceType String type FormalParameter ReferenceType String classifier ReturnStatement MethodInvocation artifactFactory MemberReference groupId MemberReference artifactId MemberReference version MemberReference type MemberReference classifier createArtifactWithClassifier MethodDeclaration Modifier public resolve FormalParameter ReferenceType Artifact artifact FormalParameter ReferenceType List remoteRepositories FormalParameter ReferenceType ArtifactRepository localRepository ArtifactResolutionException ArtifactNotFoundException StatementExpression MethodInvocation artifactResolver MemberReference artifact MemberReference remoteRepositories MemberReference localRepository resolve MethodDeclaration Modifier public ReferenceType List getAvailablePlugins LocalVariableDeclaration ReferenceType List VariableDeclarator plugins ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation plugins MethodInvocation Literal ""org.apache.maven.plugins"" Literal ""maven-jar-plugin"" Literal ""Maven Jar Plug-in"" makeMockPlugin add StatementExpression MethodInvocation plugins MethodInvocation Literal ""org.apache.maven.plugins"" Literal ""maven-compiler-plugin"" Literal ""Maven Compiler Plug-in"" makeMockPlugin add ReturnStatement MemberReference plugins MethodDeclaration Modifier public ReferenceType PluginDescriptor getPluginDescriptor FormalParameter ReferenceType SummaryPluginDescriptor summaryPluginDescriptor MavenEmbedderException LocalVariableDeclaration ReferenceType PluginDescriptor VariableDeclarator pluginDescriptor TryStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation classLoader BinaryOperation + BinaryOperation + Literal ""/plugins/"" MethodInvocation summaryPluginDescriptor getArtifactId Literal "".xml"" getResourceAsStream StatementExpression Assignment MemberReference pluginDescriptor MethodInvocation pluginDescriptorBuilder ClassCreator ReferenceType InputStreamReader MemberReference is build = CatchClause CatchClauseParameter PlexusConfigurationException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Error retrieving plugin descriptor."" MemberReference e ReturnStatement MemberReference pluginDescriptor MethodDeclaration Modifier private ReferenceType SummaryPluginDescriptor makeMockPlugin FormalParameter ReferenceType String groupId FormalParameter ReferenceType String artifactId FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType SummaryPluginDescriptor MemberReference groupId MemberReference artifactId MemberReference name MethodDeclaration Modifier public execute FormalParameter ReferenceType MavenProject project FormalParameter ReferenceType List goals FormalParameter ReferenceType EventMonitor eventMonitor FormalParameter ReferenceType TransferListener transferListener FormalParameter ReferenceType Properties properties FormalParameter ReferenceType File executionRootDirectory CycleDetectedException LifecycleExecutionException BuildFailureException DuplicateProjectException StatementExpression MethodInvocation MethodInvocation Collections MemberReference project singletonList MemberReference goals MemberReference eventMonitor MemberReference transferListener MemberReference properties MemberReference executionRootDirectory execute MethodDeclaration Modifier public execute FormalParameter ReferenceType List projects FormalParameter ReferenceType List goals FormalParameter ReferenceType EventMonitor eventMonitor FormalParameter ReferenceType TransferListener transferListener FormalParameter ReferenceType Properties properties FormalParameter ReferenceType File executionRootDirectory CycleDetectedException LifecycleExecutionException BuildFailureException DuplicateProjectException LocalVariableDeclaration ReferenceType ReactorManager VariableDeclarator rm ClassCreator ReferenceType ReactorManager MemberReference projects LocalVariableDeclaration ReferenceType EventDispatcher VariableDeclarator eventDispatcher ClassCreator ReferenceType DefaultEventDispatcher StatementExpression MethodInvocation eventDispatcher MemberReference eventMonitor addEventMonitor StatementExpression MethodInvocation rm MemberReference ReactorManager FAIL_FAST setFailureBehavior LocalVariableDeclaration ReferenceType MavenSession VariableDeclarator session ClassCreator ReferenceType MavenSession MethodInvocation embedder getContainer MemberReference settings MemberReference localRepository MemberReference eventDispatcher MemberReference rm MemberReference goals MethodInvocation executionRootDirectory getAbsolutePath MemberReference properties ClassCreator ReferenceType Date StatementExpression MethodInvocation session Literal true setUsingPOMsFromFilesystem IfStatement BinaryOperation != MemberReference transferListener Literal null BlockStatement StatementExpression MethodInvocation wagonManager MemberReference transferListener setDownloadMonitor End IfStatement BinaryOperation != MemberReference properties Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation properties MethodInvocation iterator keySet MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator key Cast ReferenceType String MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation properties MemberReference key getProperty StatementExpression MethodInvocation System MemberReference key MemberReference value setProperty End End StatementExpression MethodInvocation lifecycleExecutor MemberReference session MemberReference rm MethodInvocation session getEventDispatcher execute MethodDeclaration Modifier public ReferenceType List getLifecyclePhases MavenEmbedderException LocalVariableDeclaration ReferenceType List VariableDeclarator phases ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType ComponentDescriptor VariableDeclarator descriptor MethodInvocation embedder MethodInvocation MemberReference LifecycleExecutor ROLE getComponentDescriptor getContainer LocalVariableDeclaration ReferenceType PlexusConfiguration VariableDeclarator configuration MethodInvocation descriptor getConfiguration LocalVariableDeclaration ReferenceType PlexusConfiguration VariableDeclarator phasesConfigurations MethodInvocation configuration MethodInvocation Literal 0 getChild MethodInvocation Literal ""phases"" getChild MethodInvocation Literal ""phase"" getChildren Literal ""lifecycles"" getChild TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference phasesConfigurations length MemberReference ++ i BlockStatement StatementExpression MethodInvocation phases MemberReference ArraySelector MemberReference i MethodInvocation getValue phasesConfigurations add End CatchClause CatchClauseParameter PlexusConfigurationException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot retrieve default lifecycle phasesConfigurations."" MemberReference e ReturnStatement MemberReference phases FieldDeclaration Modifier public final static ReferenceType String VariableDeclarator DEFAULT_LOCAL_REPO_ID Literal ""local"" FieldDeclaration Modifier public final static ReferenceType String VariableDeclarator DEFAULT_LAYOUT_ID Literal ""default"" MethodDeclaration Modifier public ReferenceType ArtifactRepository createLocalRepository FormalParameter ReferenceType File localRepository ComponentLookupException ReturnStatement MethodInvocation MethodInvocation localRepository getAbsolutePath MemberReference DEFAULT_LOCAL_REPO_ID createLocalRepository MethodDeclaration Modifier public ReferenceType ArtifactRepository createLocalRepository FormalParameter ReferenceType Settings settings ComponentLookupException ReturnStatement MethodInvocation MethodInvocation settings getLocalRepository MemberReference DEFAULT_LOCAL_REPO_ID createLocalRepository MethodDeclaration Modifier public ReferenceType ArtifactRepository createLocalRepository FormalParameter ReferenceType String url FormalParameter ReferenceType String repositoryId ComponentLookupException IfStatement MethodInvocation ! url Literal ""file:"" startsWith BlockStatement StatementExpression Assignment MemberReference url BinaryOperation + Literal ""file://"" MemberReference url = End ReturnStatement MethodInvocation MemberReference url MemberReference repositoryId createRepository MethodDeclaration Modifier public ReferenceType ArtifactRepository createRepository FormalParameter ReferenceType String url FormalParameter ReferenceType String repositoryId ComponentLookupException LocalVariableDeclaration ReferenceType String VariableDeclarator updatePolicyFlag MemberReference ArtifactRepositoryPolicy UPDATE_POLICY_ALWAYS LocalVariableDeclaration ReferenceType String VariableDeclarator checksumPolicyFlag MemberReference ArtifactRepositoryPolicy CHECKSUM_POLICY_WARN LocalVariableDeclaration ReferenceType ArtifactRepositoryPolicy VariableDeclarator snapshotsPolicy ClassCreator ReferenceType ArtifactRepositoryPolicy Literal true MemberReference updatePolicyFlag MemberReference checksumPolicyFlag LocalVariableDeclaration ReferenceType ArtifactRepositoryPolicy VariableDeclarator releasesPolicy ClassCreator ReferenceType ArtifactRepositoryPolicy Literal true MemberReference updatePolicyFlag MemberReference checksumPolicyFlag ReturnStatement MethodInvocation artifactRepositoryFactory MemberReference repositoryId MemberReference url MemberReference defaultArtifactRepositoryLayout MemberReference snapshotsPolicy MemberReference releasesPolicy createArtifactRepository MethodDeclaration Modifier private ReferenceType RuntimeInfo createRuntimeInfo FormalParameter ReferenceType Settings settings LocalVariableDeclaration ReferenceType RuntimeInfo VariableDeclarator runtimeInfo ClassCreator ReferenceType RuntimeInfo MemberReference settings StatementExpression MethodInvocation runtimeInfo MemberReference Boolean FALSE setPluginUpdateOverride ReturnStatement MemberReference runtimeInfo MethodDeclaration Modifier private ReferenceType List getPomFiles FormalParameter ReferenceType File basedir FormalParameter ReferenceType String includes FormalParameter ReferenceType String excludes LocalVariableDeclaration ReferenceType DirectoryScanner VariableDeclarator scanner ClassCreator ReferenceType DirectoryScanner StatementExpression MethodInvocation scanner MemberReference basedir setBasedir StatementExpression MethodInvocation scanner MemberReference includes setIncludes StatementExpression MethodInvocation scanner MemberReference excludes setExcludes StatementExpression MethodInvocation scanner scan LocalVariableDeclaration ReferenceType List VariableDeclarator poms ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation scanner MemberReference length getIncludedFiles MemberReference ++ i BlockStatement StatementExpression MethodInvocation poms ClassCreator ReferenceType File MemberReference basedir MethodInvocation scanner ArraySelector MemberReference i getIncludedFiles add End ReturnStatement MemberReference poms MethodDeclaration Modifier public start MavenEmbedderException StatementExpression MethodInvocation detectUserInstallation IfStatement BinaryOperation == MemberReference classLoader Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""A classloader must be specified using setClassLoader(ClassLoader)."" End StatementExpression Assignment MemberReference embedder ClassCreator ReferenceType Embedder = IfStatement BinaryOperation != MemberReference logger Literal null BlockStatement StatementExpression MethodInvocation embedder ClassCreator ReferenceType MavenEmbedderLoggerManager ClassCreator ReferenceType PlexusLoggerAdapter MemberReference logger setLoggerManager End IfStatement BinaryOperation != MemberReference overridingComponentsXml Literal null BlockStatement TryStatement StatementExpression MethodInvocation embedder MemberReference overridingComponentsXml setConfiguration CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException MemberReference e End TryStatement LocalVariableDeclaration ReferenceType ClassWorld VariableDeclarator classWorld ClassCreator ReferenceType ClassWorld StatementExpression MethodInvocation classWorld Literal ""plexus.core"" MemberReference classLoader newRealm StatementExpression MethodInvocation embedder MemberReference classWorld start StatementExpression Assignment MemberReference modelReader ClassCreator ReferenceType MavenXpp3Reader = StatementExpression Assignment MemberReference modelWriter ClassCreator ReferenceType MavenXpp3Writer = StatementExpression Assignment MemberReference pluginDescriptorBuilder ClassCreator ReferenceType PluginDescriptorBuilder = StatementExpression Assignment MemberReference profileManager ClassCreator ReferenceType DefaultProfileManager MethodInvocation embedder getContainer MemberReference systemProperties = StatementExpression MethodInvocation activeProfiles StatementExpression Assignment MemberReference mavenProjectBuilder Cast ReferenceType MavenProjectBuilder MethodInvocation embedder MemberReference MavenProjectBuilder ROLE lookup = StatementExpression Assignment MemberReference artifactRepositoryFactory Cast ReferenceType ArtifactRepositoryFactory MethodInvocation embedder MemberReference ArtifactRepositoryFactory ROLE lookup = StatementExpression Assignment MemberReference artifactFactory Cast ReferenceType ArtifactFactory MethodInvocation embedder MemberReference ArtifactFactory ROLE lookup = StatementExpression Assignment MemberReference artifactResolver Cast ReferenceType ArtifactResolver MethodInvocation embedder MemberReference ArtifactResolver ROLE lookup = StatementExpression Assignment MemberReference defaultArtifactRepositoryLayout Cast ReferenceType ArtifactRepositoryLayout MethodInvocation embedder MemberReference ArtifactRepositoryLayout ROLE MemberReference DEFAULT_LAYOUT_ID lookup = StatementExpression Assignment MemberReference lifecycleExecutor Cast ReferenceType LifecycleExecutor MethodInvocation embedder MemberReference LifecycleExecutor ROLE lookup = StatementExpression Assignment MemberReference wagonManager Cast ReferenceType WagonManager MethodInvocation embedder MemberReference WagonManager ROLE lookup = StatementExpression MethodInvocation createMavenSettings StatementExpression MethodInvocation profileManager MemberReference settings loadSettingsProfiles StatementExpression Assignment MemberReference localRepository MethodInvocation MemberReference settings createLocalRepository = StatementExpression MethodInvocation MemberReference wagonManager MemberReference settings resolveParameters CatchClause CatchClauseParameter PlexusContainerException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot start Plexus embedder."" MemberReference e CatchClause CatchClauseParameter DuplicateRealmException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot create Classworld realm for the embedder."" MemberReference e CatchClause CatchClauseParameter ComponentLookupException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot lookup required component."" MemberReference e CatchClause CatchClauseParameter SettingsConfigurationException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot start Plexus embedder."" MemberReference e CatchClause CatchClauseParameter ComponentLifecycleException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot start Plexus embedder."" MemberReference e MethodDeclaration Modifier private detectUserInstallation IfStatement ClassCreator MethodInvocation exists ReferenceType File MemberReference userHome Literal "".m2"" BlockStatement StatementExpression Assignment MemberReference alignWithUserInstallation Literal true = End MethodDeclaration /**
     * Create the Settings that will be used with the embedder. If we are aligning with the user
     * installation then we lookup the standard settings builder and use that to create our
     * settings. Otherwise we constructs a settings object and populate the information
     * ourselves.
     *
     * @throws MavenEmbedderException
     * @throws ComponentLookupException
     */ Modifier private createMavenSettings MavenEmbedderException ComponentLookupException IfStatement MemberReference alignWithUserInstallation BlockStatement StatementExpression Assignment MemberReference settingsBuilder Cast ReferenceType MavenSettingsBuilder MethodInvocation embedder MemberReference MavenSettingsBuilder ROLE lookup = IfStatement BinaryOperation != MemberReference mavenHome Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation settingsBuilder MethodInvocation Literal ""globalSettingsFile"" getDeclaredField getClass StatementExpression MethodInvocation field Literal true setAccessible StatementExpression MethodInvocation field MemberReference settingsBuilder ClassCreator MethodInvocation getAbsoluteFile ReferenceType File MemberReference mavenHome Literal ""conf/settings.xml"" set CatchClause CatchClauseParameter NoSuchFieldException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException MemberReference e End TryStatement StatementExpression Assignment MemberReference settings MethodInvocation settingsBuilder buildSettings = CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Error creating settings."" MemberReference e CatchClause CatchClauseParameter XmlPullParserException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Error creating settings."" MemberReference e BlockStatement IfStatement BinaryOperation == MemberReference localRepository Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""When not aligning with a user install you must specify a local repository location using the setLocalRepositoryDirectory( File ) method."" End StatementExpression Assignment MemberReference settings ClassCreator ReferenceType Settings = StatementExpression MethodInvocation settings MethodInvocation localRepositoryDirectory getAbsolutePath setLocalRepository StatementExpression MethodInvocation settings MethodInvocation MemberReference settings createRuntimeInfo setRuntimeInfo StatementExpression MethodInvocation settings MemberReference offline setOffline StatementExpression MethodInvocation settings MemberReference interactiveMode setInteractiveMode End MethodDeclaration Modifier public stop MavenEmbedderException TryStatement StatementExpression MethodInvocation embedder MemberReference mavenProjectBuilder release StatementExpression MethodInvocation embedder MemberReference artifactRepositoryFactory release StatementExpression MethodInvocation embedder MemberReference settingsBuilder release StatementExpression MethodInvocation embedder MemberReference lifecycleExecutor release CatchClause CatchClauseParameter ComponentLifecycleException e ThrowStatement ClassCreator ReferenceType MavenEmbedderException Literal ""Cannot stop the embedder."" MemberReference e FieldDeclaration Modifier private ReferenceType URL VariableDeclarator overridingComponentsXml MethodDeclaration /**
     * Sets the URL of the <tt>components.xml</tt> that overrides those found
     * in the rest of classpath. Hudson uses this to replace certain key components
     * by its own versions.
     *
     * This should become unnecessary when MNG-2777 is resolved.
     */ Modifier public setOverridingComponentsXml FormalParameter ReferenceType URL overridingComponentsXml StatementExpression Assignment This MemberReference overridingComponentsXml MemberReference overridingComponentsXml = MethodDeclaration /**
     * Gets the {@link PlexusContainer} that hosts Maven.
     *
     * See MNG-2778
     */ Modifier public ReferenceType PlexusContainer getContainer ReturnStatement MethodInvocation embedder getContainer MethodDeclaration /**
     * Actives profiles, as if the ""-P"" command line option is used.
     *
     * <p>
     * In Maven CLI this is done before the {@link ProfileManager#loadSettingsProfiles(Settings)}
     * is called. I don't know if that's a hard requirement or just a coincidence,
     * but since I can't be sure, I'm following the exact call order that Maven CLI does,
     * and not allowing this method to be called afterward.
     */ Modifier private activeProfiles IfStatement BinaryOperation == MethodInvocation Util MemberReference profiles fixEmptyAndTrim Literal null ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation Util MemberReference profiles Literal "","" tokenize BlockStatement IfStatement MethodInvocation token Literal ""-"" startsWith BlockStatement StatementExpression MethodInvocation profileManager MethodInvocation token Literal 1 substring explicitlyDeactivate IfStatement MethodInvocation token Literal ""+"" startsWith BlockStatement StatementExpression MethodInvocation profileManager MethodInvocation token Literal 1 substring explicitlyActivate BlockStatement StatementExpression MethodInvocation profileManager MemberReference token explicitlyActivate End End End MethodDeclaration Modifier public ReferenceType Settings getSettings ReturnStatement MemberReference settings MethodDeclaration Modifier public ReferenceType Object lookup FormalParameter ReferenceType String role ComponentLookupException ReturnStatement MethodInvocation MethodInvocation MemberReference role lookup getContainer MethodDeclaration Modifier public ReferenceType Object lookup FormalParameter ReferenceType String role FormalParameter ReferenceType String hint ComponentLookupException ReturnStatement MethodInvocation MethodInvocation MemberReference role MemberReference hint lookup getContainer MethodDeclaration /**
     * {@link WagonManager} can't configure itself from {@link Settings}, so we need to baby-sit them.
     * So much for dependency injection.
     */ Modifier private resolveParameters FormalParameter ReferenceType WagonManager wagonManager FormalParameter ReferenceType Settings settings ComponentLookupException ComponentLifecycleException SettingsConfigurationException LocalVariableDeclaration ReferenceType Proxy VariableDeclarator proxy MethodInvocation settings getActiveProxy IfStatement BinaryOperation != MemberReference proxy Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation proxy getHost Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SettingsConfigurationException Literal ""Proxy in settings.xml has no host"" End StatementExpression MethodInvocation wagonManager MethodInvocation proxy getProtocol MethodInvocation proxy getHost MethodInvocation proxy getPort MethodInvocation proxy getUsername MethodInvocation proxy getPassword MethodInvocation proxy getNonProxyHosts addProxy End ForStatement EnhancedForControl VariableDeclaration ReferenceType Server VariableDeclarator server Cast ReferenceType List TypeArgument ReferenceType Server MethodInvocation settings getServers BlockStatement StatementExpression MethodInvocation wagonManager MethodInvocation server getId MethodInvocation server getUsername MethodInvocation server getPassword MethodInvocation server getPrivateKey MethodInvocation server getPassphrase addAuthenticationInfo StatementExpression MethodInvocation wagonManager MethodInvocation server getId MethodInvocation server getFilePermissions MethodInvocation server getDirectoryPermissions addPermissionInfo IfStatement BinaryOperation != MethodInvocation server getConfiguration Literal null BlockStatement StatementExpression MethodInvocation wagonManager MethodInvocation server getId Cast ReferenceType Xpp3Dom MethodInvocation server getConfiguration addConfiguration End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Mirror VariableDeclarator mirror Cast ReferenceType List TypeArgument ReferenceType Mirror MethodInvocation settings getMirrors BlockStatement StatementExpression MethodInvocation wagonManager MethodInvocation mirror getId MethodInvocation mirror getMirrorOf MethodInvocation mirror getUrl addMirror End",0
54,54,"CompilationUnit PackageDeclaration hudson.tools Import hudson.DescriptorExtensionList Import hudson.ExtensionPoint Import hudson.model.Describable Import hudson.model.Hudson Import java.util.List ClassDeclaration Modifier public abstract /**
 * Extensible property of {@link ToolInstallation}.
 *
 * <p>
 * Plugins can contribute this extension point to add additional data or UI actions to {@link ToolInstallation}.
 * {@link ToolProperty}s show up in the configuration screen of a tool, and they are persisted with the {@link ToolInstallation} object.
 *
 *
 * <h2>Views</h2>
 * <dl>
 * <dt>config.jelly</dt>
 * <dd>Added to the configuration page of the tool.
 * <dl>
 *
 * @param <T>
 *      {@link ToolProperty} can choose to only work with a certain subtype of {@link ToolInstallation}, and this 'T'
 *      represents that type. Also see {@link ToolPropertyDescriptor#isApplicable(Class)}.
 *
 * @since 1.303
 */ ToolProperty FieldDeclaration Modifier protected transient ReferenceType T VariableDeclarator tool MethodDeclaration Modifier protected setTool FormalParameter ReferenceType T tool StatementExpression Assignment This MemberReference tool MemberReference tool = MethodDeclaration Modifier public ReferenceType ToolPropertyDescriptor getDescriptor ReturnStatement Cast ReferenceType ToolPropertyDescriptor MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance MethodDeclaration /**
     * What is your 'T'?
     */ Modifier public abstract ReferenceType Class TypeArgument ReferenceType T type MethodDeclaration /**
     * Lists up all the registered {@link ToolPropertyDescriptor}s in the system.
     *
     * @see ToolDescriptor#getPropertyDescriptors() 
     */ Modifier public static ReferenceType DescriptorExtensionList TypeArgument ReferenceType ToolProperty TypeArgument ? TypeArgument ReferenceType ToolPropertyDescriptor all ReturnStatement Cast ReferenceType DescriptorExtensionList MethodInvocation Hudson MethodInvocation ClassReference ReferenceType ToolProperty getDescriptorList getInstance TypeParameter T ReferenceType ToolInstallation ReferenceType Describable TypeArgument ReferenceType ToolProperty TypeArgument ? ReferenceType ExtensionPoint",0
467,467,,0
412,412,,0
78,78,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.Authentication Import org.acegisecurity.context.SecurityContext Import org.acegisecurity.userdetails.UserDetails Import javax.servlet.http.HttpSession InterfaceDeclaration Modifier public /**
 * {@link UserDetails} that can mark {@link Authentication} invalid.
 *
 * <p>
 * Tomcat persists sessions by using Java serialization (and
 * that includes the security token created by Acegi, which includes this object)
 * and when that happens, the next time the server comes back
 * it will try to deserialize {@link SecurityContext} that Acegi
 * puts into {@link HttpSession} (which transitively includes {@link UserDetails}
 * that can be implemented by Hudson.
 *
 * <p>
 * Such {@link UserDetails} implementation can override the {@link #isInvalid()}
 * method and return false, so that such {@link SecurityContext} will be
 * dropped before the rest of Acegi sees it.
 *
 * <p>
 * See https://hudson.dev.java.net/issues/show_bug.cgi?id=1482
 * 
 * @author Kohsuke Kawaguchi
 * @deprecated
 *      Starting 1.285, Hudson stops persisting {@link Authentication} altogether
 *      (see {@link NotSerilizableSecurityContext}), so there's no need to use this mechanism.
 */ InvalidatableUserDetails MethodDeclaration BasicType boolean isInvalid ReferenceType UserDetails",1
393,393,,0
248,248,"CompilationUnit PackageDeclaration hudson.model Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.DataBoundConstructor Import org.apache.commons.lang.StringUtils Import net.sf.json.JSONObject Import hudson.Extension Import java.util.ArrayList Import java.util.List Import java.util.Arrays ClassDeclaration Modifier public /**
 * @author huybrechts
 */ ChoiceParameterDefinition FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType String VariableDeclarator choices ConstructorDeclaration Modifier public Annotation DataBoundConstructor ChoiceParameterDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType String choices FormalParameter ReferenceType String description StatementExpression SuperConstructorInvocation MemberReference name MemberReference description StatementExpression Assignment This MemberReference choices MethodInvocation Arrays MethodInvocation choices Literal ""\\r?\\n"" split asList = IfStatement BinaryOperation == MethodInvocation choices length Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""No choices found"" End ConstructorDeclaration Modifier public ChoiceParameterDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType String choices FormalParameter ReferenceType String description StatementExpression SuperConstructorInvocation MemberReference name MemberReference description StatementExpression Assignment This MemberReference choices ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodInvocation Arrays MemberReference choices asList = IfStatement This MemberReference choices MethodInvocation isEmpty BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""No choices found"" End MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getChoices ReturnStatement MemberReference choices MethodDeclaration Modifier public ReferenceType String getChoicesText ReturnStatement MethodInvocation StringUtils MemberReference choices Literal ""\n"" join MethodDeclaration Modifier public Annotation Override ReferenceType StringParameterValue getDefaultParameterValue ReturnStatement ClassCreator ReferenceType StringParameterValue MethodInvocation getName MethodInvocation choices Literal 0 get MethodInvocation getDescription MethodDeclaration Modifier private checkValue FormalParameter ReferenceType StringParameterValue value IfStatement MethodInvocation ! choices MemberReference value value contains BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Illegal choice: "" MemberReference value value End MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject jo LocalVariableDeclaration ReferenceType StringParameterValue VariableDeclarator value MethodInvocation req ClassReference ReferenceType StringParameterValue MemberReference jo bindJSON StatementExpression MethodInvocation value MethodInvocation getDescription setDescription StatementExpression MethodInvocation MemberReference value checkValue ReturnStatement MemberReference value MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req LocalVariableDeclaration ReferenceType StringParameterValue VariableDeclarator result LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation req MethodInvocation getName getParameterValues IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation getDefaultParameterValue = IfStatement BinaryOperation != MemberReference value length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Illegal number of parameter values for "" MethodInvocation getName Literal "": "" MemberReference value length BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType StringParameterValue MethodInvocation getName MemberReference ArraySelector Literal 0 value MethodInvocation getDescription = End End StatementExpression MethodInvocation MemberReference result checkValue ReturnStatement MemberReference result ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ChoiceParameterDefinition_DisplayName MethodDeclaration Modifier public Annotation Override ReferenceType String getHelpFile ReturnStatement Literal ""/help/parameter/choice.html"" ReferenceType ParameterDescriptor ReferenceType ParameterDefinition",0
310,310,"CompilationUnit PackageDeclaration hudson.model Import hudson.tasks.BuildWrapper Import hudson.tasks.Builder Import hudson.util.VariableResolver Import java.io.Serializable Import java.util.Map Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean ClassDeclaration Modifier public abstract Annotation ExportedBean /**
 * A value for a parameter in a build.
 *
 * Created by {@link ParameterDefinition#createValue(StaplerRequest, JSONObject)} for
 * a particular build (although this 'owner' build object is passed in for every method
 * call as a parameter so that the parameter won't have to persist it.)
 *
 * <h2>Persistence</h2>
 * <p>
 * Instances of {@link ParameterValue}s are persisted into build's <tt>build.xml</tt>
 * through XStream (via {@link ParametersAction}), so instances need to be persistable.
 *
 * <h2>Assocaited Views</h2>
 * <h4>value.jelly</h4>
 * The <tt>value.jelly</tt> view contributes a UI fragment to display the parameter
 * values used for a build.
 *
 * <h2>Notes</h2>
 * <ol>
 * <li>{@link ParameterValue} is used to record values of the past build, but
 *     {@link ParameterDefinition} used back then might be gone already, or represent
 *     a different parameter now. So don't try to use the name to infer
 *     {@link ParameterDefinition} is.
 * </ol>
 * @see ParameterDefinition
 */ ParameterValue FieldDeclaration Modifier final protected ReferenceType String VariableDeclarator name FieldDeclaration Modifier private ReferenceType String VariableDeclarator description ConstructorDeclaration Modifier protected ParameterValue FormalParameter ReferenceType String name FormalParameter ReferenceType String description StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference description MemberReference description = ConstructorDeclaration Modifier protected ParameterValue FormalParameter ReferenceType String name StatementExpression ExplicitConstructorInvocation MemberReference name Literal null MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement MemberReference description MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String description StatementExpression Assignment This MemberReference description MemberReference description = MethodDeclaration /**
     * Name of the parameter.
     *
     * This uniquely distinguishes {@link ParameterValue} among other parameters
     * for the same build. This must be the same as {@link ParameterDefinition#getName()}.
     */ Modifier public final Annotation Exported ElementValuePair visibility Literal 3 ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration /**
     * Adds environmental variables for the builds to the given map.
     *
     * <p>
     * This provides a means for a parameter to pass the parameter
     * values to the build to be performed.
     *
     * <p>
     * When this method is invoked, the map already contains the
     * current ""planned export"" list. The implementation is
     * expected to add more values to this map (or do nothing)
     *
     * <p>
     * Environment variables should be by convention all upper case.
     * (This is so that a Windows/Unix heterogenous environment
     * won't get inconsistent result depending on which platform to
     * execute.)
     *
     * @param env
     *      never null.
     * @param build
     *      The build for which this parameter is being used. Never null.
     */ Modifier public buildEnvVars FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String env MethodDeclaration /**
     * Called at the beginning of a build to let a {@link ParameterValue}
     * contributes a {@link BuildWrapper} to the build.
     *
     * <p>
     * This provides a means for a parameter to perform more extensive
     * set up / tear down during a build.
     *
     * @param build
     *      The build for which this parameter is being used. Never null.
     * @return
     *      null if the parameter has no {@link BuildWrapper} to contribute to.
     */ Modifier public ReferenceType BuildWrapper createBuildWrapper FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build ReturnStatement Literal null MethodDeclaration /**
     * Returns a {@link VariableResolver} so that other components like {@link Builder}s
     * can perform variable substitution to reflect parameter values into the build process.
     *
     * <p.
     * This is yet another means in which a {@link ParameterValue} can influence
     * a build.
     *
     * @param build
     *      The build for which this parameter is being used. Never null.
     * @return
     *      if the parameter value is not interested in participating to the
     *      variable replacement process, return {@link VariableResolver#NONE}.
     */ Modifier public ReferenceType VariableResolver TypeArgument ReferenceType String createVariableResolver FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build ReturnStatement MemberReference VariableResolver NONE MethodDeclaration /**
     * Accessing {@link ParameterDefinition} is not a good idea.
     *
     * @deprecated
     *    parameter definition may change any time. So if you find yourself
     *    in need of accessing the information from {@link ParameterDefinition},
     *    instead copy them in {@link ParameterDefinition#createValue(StaplerRequest, JSONObject)}
     *    into {@link ParameterValue}.
     */ Modifier public ReferenceType ParameterDefinition getDefinition ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration Modifier final BasicType int VariableDeclarator prime Literal 31 LocalVariableDeclaration BasicType int VariableDeclarator result Literal 1 StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * MemberReference prime MemberReference result TernaryExpression BinaryOperation == MemberReference name Literal null Literal 0 MethodInvocation name hashCode = ReturnStatement MemberReference result MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == This MemberReference obj ReturnStatement Literal true End IfStatement BinaryOperation == MemberReference obj Literal null ReturnStatement Literal false End IfStatement BinaryOperation != MethodInvocation getClass MethodInvocation obj getClass ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ParameterValue VariableDeclarator other Cast ReferenceType ParameterValue MemberReference obj IfStatement BinaryOperation == MemberReference name Literal null BlockStatement IfStatement BinaryOperation != MemberReference other name Literal null ReturnStatement Literal false End IfStatement MethodInvocation ! name MemberReference other name equals ReturnStatement Literal false End End ReturnStatement Literal true ReferenceType Serializable",0
349,349,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.FilePath Import hudson.Extension Import hudson.maven.MavenBuild Import hudson.maven.MavenBuildProxy Import hudson.maven.MavenBuildProxy.BuildCallable Import hudson.maven.MavenModule Import hudson.maven.MavenReporter Import hudson.maven.MavenReporterDescriptor Import hudson.maven.MojoInfo Import hudson.maven.MavenModuleSetBuild Import hudson.model.BuildListener Import hudson.model.FingerprintMap Import hudson.model.Hudson Import hudson.tasks.Fingerprinter.FingerprintAction Import org.apache.maven.artifact.Artifact Import org.apache.maven.project.MavenProject Import java.io.File Import java.io.IOException Import java.util.Collection Import java.util.HashMap Import java.util.HashSet Import java.util.Map Import java.util.Map.Entry Import java.util.Set Import java.util.List ClassDeclaration Modifier public /**
 * Records fingerprints of the builds to keep track of dependencies.
 *
 * @author Kohsuke Kawaguchi
 */ MavenFingerprinter FieldDeclaration /**
     * Files whose fingerprints were already recorded.
     */ Modifier private transient ReferenceType Set TypeArgument ReferenceType File VariableDeclarator files FieldDeclaration /**
     * Fingerprints for files that were used.
     */ Modifier private transient ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator used FieldDeclaration /**
     * Fingerprints for files that were produced.
     */ Modifier private transient ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator produced MethodDeclaration Modifier public BasicType boolean preBuild FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType BuildListener listener InterruptedException IOException StatementExpression Assignment MemberReference files ClassCreator ReferenceType HashSet TypeArgument ReferenceType File = StatementExpression Assignment MemberReference used ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String = StatementExpression Assignment MemberReference produced ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String = ReturnStatement Literal true MethodDeclaration /**
     * Mojos perform different dependency resolution, so we need to check this for each mojo.
     */ Modifier public BasicType boolean postExecute FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType MojoInfo mojo FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType Throwable error InterruptedException IOException StatementExpression MethodInvocation MethodInvocation pom getArtifacts MemberReference used record StatementExpression MethodInvocation MethodInvocation pom getArtifact MemberReference produced record StatementExpression MethodInvocation MethodInvocation pom getAttachedArtifacts MemberReference produced record StatementExpression MethodInvocation MethodInvocation pom getGroupId MethodInvocation pom getFile MemberReference produced record ReturnStatement Literal true MethodDeclaration /**
     * Sends the collected fingerprints over to the master and record them.
     */ Modifier public BasicType boolean postBuild FormalParameter ReferenceType MavenBuildProxy build FormalParameter ReferenceType MavenProject pom FormalParameter ReferenceType BuildListener listener InterruptedException IOException StatementExpression MethodInvocation build ClassCreator ReferenceType BuildCallable TypeArgument ReferenceType Void TypeArgument ReferenceType IOException FieldDeclaration Modifier private final ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator u MemberReference used FieldDeclaration Modifier private final ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator p MemberReference produced MethodDeclaration Modifier public ReferenceType Void call FormalParameter ReferenceType MavenBuild build IOException InterruptedException LocalVariableDeclaration ReferenceType FingerprintMap VariableDeclarator map MethodInvocation Hudson MethodInvocation getFingerprintMap getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation p entrySet StatementExpression MethodInvocation map MethodInvocation MemberReference build add MemberReference build MethodInvocation e getKey MethodInvocation e getValue getOrCreate End ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation u entrySet StatementExpression MethodInvocation map MethodInvocation MemberReference build add Literal null MethodInvocation e getKey MethodInvocation e getValue getOrCreate End LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator all ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String MemberReference u StatementExpression MethodInvocation all MemberReference p putAll StatementExpression MethodInvocation build MethodInvocation ClassCreator ReferenceType FingerprintAction MemberReference build MemberReference all add getActions ReturnStatement Literal null executeAsync ReturnStatement Literal true MethodDeclaration Modifier private record FormalParameter ReferenceType Collection TypeArgument ReferenceType Artifact artifacts FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String record IOException InterruptedException ForStatement EnhancedForControl VariableDeclaration ReferenceType Artifact VariableDeclarator a MemberReference artifacts StatementExpression MethodInvocation MemberReference a MemberReference record record End MethodDeclaration /**
     * Records the fingerprint of the given {@link Artifact}.
     *
     * <p>
     * This method contains the logic to avoid doubly recording the fingerprint
     * of the same file.
     */ Modifier private record FormalParameter ReferenceType Artifact a FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String record IOException InterruptedException LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation a getFile IfStatement BinaryOperation == MemberReference files Literal null ThrowStatement ClassCreator ReferenceType InternalError End StatementExpression MethodInvocation MethodInvocation a getGroupId MemberReference f MemberReference record record MethodDeclaration Modifier private record FormalParameter ReferenceType String groupId FormalParameter ReferenceType File f FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String record IOException InterruptedException IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference f Literal null MethodInvocation ! f exists MethodInvocation f isDirectory MethodInvocation ! files MemberReference f add ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator digest ClassCreator MethodInvocation digest ReferenceType FilePath MemberReference f StatementExpression MethodInvocation record BinaryOperation + BinaryOperation + MemberReference groupId Literal ':' MethodInvocation f getName MemberReference digest put ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages MavenFingerprinter_DisplayName MethodDeclaration Modifier public ReferenceType MavenReporter newAutoInstance FormalParameter ReferenceType MavenModule module ReturnStatement ClassCreator ReferenceType MavenFingerprinter ReferenceType MavenReporterDescriptor MethodDeclaration /**
     * Creates {@link FingerprintAction} for {@link MavenModuleSetBuild}
     * by aggregating all fingerprints from module builds.
     */ Modifier public static aggregate FormalParameter ReferenceType MavenModuleSetBuild mmsb IOException LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator records ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType List TypeArgument ReferenceType MavenBuild VariableDeclarator builds MethodInvocation mmsb MethodInvocation values getModuleBuilds BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenBuild VariableDeclarator build MemberReference builds BlockStatement LocalVariableDeclaration ReferenceType FingerprintAction VariableDeclarator fa MethodInvocation build ClassReference ReferenceType FingerprintAction getAction IfStatement BinaryOperation != MemberReference fa Literal null StatementExpression MethodInvocation records MethodInvocation fa getRecords putAll End End End IfStatement MethodInvocation ! records isEmpty BlockStatement LocalVariableDeclaration ReferenceType FingerprintMap VariableDeclarator map MethodInvocation Hudson MethodInvocation getFingerprintMap getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation records entrySet StatementExpression MethodInvocation map MethodInvocation MemberReference mmsb add Literal null MethodInvocation e getKey MethodInvocation e getValue getOrCreate End StatementExpression MethodInvocation mmsb ClassCreator ReferenceType FingerprintAction MemberReference mmsb MemberReference records addAction End FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType MavenReporter",1
292,292,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.CopyOnWrite Import hudson.EnvVars Import hudson.Extension Import hudson.FilePath Import hudson.Launcher Import hudson.Util Import hudson.model  Import hudson.remoting.Callable Import hudson.slaves.NodeSpecific Import hudson.tools.ToolDescriptor Import hudson.tools.ToolInstallation Import hudson.tools.DownloadFromUrlInstaller Import hudson.tools.ToolInstaller Import hudson.tools.ToolProperty Import hudson.util.ArgumentListBuilder Import hudson.util.VariableResolver Import hudson.util.FormValidation Import net.sf.json.JSONObject Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.QueryParameter Import java.io.File Import java.io.IOException Import java.util.Map Import java.util.Properties Import java.util.List Import java.util.Collections ClassDeclaration Modifier public /**
 * Ant launcher.
 *
 * @author Kohsuke Kawaguchi
 */ Ant FieldDeclaration /**
     * The targets, properties, and other Ant options.
     * Either separated by whitespace or newline.
     */ Modifier private final ReferenceType String VariableDeclarator targets FieldDeclaration /**
     * Identifies {@link AntInstallation} to be used.
     */ Modifier private final ReferenceType String VariableDeclarator antName FieldDeclaration /**
     * ANT_OPTS if not null.
     */ Modifier private final ReferenceType String VariableDeclarator antOpts FieldDeclaration /**
     * Optional build script path relative to the workspace.
     * Used for the Ant '-f' option.
     */ Modifier private final ReferenceType String VariableDeclarator buildFile FieldDeclaration /**
     * Optional properties to be passed to Ant. Follows {@link Properties} syntax.
     */ Modifier private final ReferenceType String VariableDeclarator properties ConstructorDeclaration Modifier public Annotation DataBoundConstructor Ant FormalParameter ReferenceType String targets FormalParameter ReferenceType String antName FormalParameter ReferenceType String antOpts FormalParameter ReferenceType String buildFile FormalParameter ReferenceType String properties StatementExpression Assignment This MemberReference targets MemberReference targets = StatementExpression Assignment This MemberReference antName MemberReference antName = StatementExpression Assignment This MemberReference antOpts MethodInvocation Util MemberReference antOpts fixEmptyAndTrim = StatementExpression Assignment This MemberReference buildFile MethodInvocation Util MemberReference buildFile fixEmptyAndTrim = StatementExpression Assignment This MemberReference properties MethodInvocation Util MemberReference properties fixEmptyAndTrim = MethodDeclaration Modifier public ReferenceType String getBuildFile ReturnStatement MemberReference buildFile MethodDeclaration Modifier public ReferenceType String getProperties ReturnStatement MemberReference properties MethodDeclaration Modifier public ReferenceType String getTargets ReturnStatement MemberReference targets MethodDeclaration /**
     * Gets the Ant to invoke,
     * or null to invoke the default one.
     */ Modifier public ReferenceType AntInstallation getAnt ForStatement EnhancedForControl VariableDeclaration ReferenceType AntInstallation VariableDeclarator i MethodInvocation MethodInvocation getInstallations getDescriptor BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference antName Literal null MethodInvocation i MethodInvocation MemberReference antName equals getName ReturnStatement MemberReference i End End ReturnStatement Literal null MethodDeclaration /**
     * Gets the ANT_OPTS parameter, or null.
     */ Modifier public ReferenceType String getAntOpts ReturnStatement MemberReference antOpts MethodDeclaration Modifier public BasicType boolean perform FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener InterruptedException IOException LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator proj MethodInvocation build getProject LocalVariableDeclaration ReferenceType ArgumentListBuilder VariableDeclarator args ClassCreator ReferenceType ArgumentListBuilder LocalVariableDeclaration ReferenceType EnvVars VariableDeclarator env MethodInvocation build MemberReference listener getEnvironment LocalVariableDeclaration ReferenceType AntInstallation VariableDeclarator ai MethodInvocation getAnt IfStatement BinaryOperation == MemberReference ai Literal null BlockStatement StatementExpression MethodInvocation args TernaryExpression MethodInvocation launcher isUnix Literal ""ant"" Literal ""ant.bat"" add BlockStatement StatementExpression Assignment MemberReference ai MethodInvocation ai MethodInvocation Computer MethodInvocation getNode currentComputer MemberReference listener forNode = StatementExpression Assignment MemberReference ai MethodInvocation ai MemberReference env forEnvironment = LocalVariableDeclaration ReferenceType String VariableDeclarator exe MethodInvocation ai MemberReference launcher getExecutable IfStatement BinaryOperation == MemberReference exe Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages MethodInvocation ai getName Ant_ExecutableNotFound fatalError ReturnStatement Literal false End StatementExpression MethodInvocation args MemberReference exe add End LocalVariableDeclaration ReferenceType VariableResolver TypeArgument ReferenceType String VariableDeclarator vr MethodInvocation build getBuildVariableResolver LocalVariableDeclaration ReferenceType String VariableDeclarator buildFile MethodInvocation env This MemberReference buildFile expand LocalVariableDeclaration ReferenceType String VariableDeclarator targets MethodInvocation Util MethodInvocation env This MemberReference targets expand MemberReference vr replaceMacro LocalVariableDeclaration ReferenceType FilePath VariableDeclarator buildFilePath MethodInvocation MethodInvocation proj getModuleRoot MemberReference buildFile MemberReference targets buildFilePath IfStatement MethodInvocation ! buildFilePath exists BlockStatement LocalVariableDeclaration ReferenceType FilePath VariableDeclarator buildFilePath2 MethodInvocation MethodInvocation proj getWorkspace MemberReference buildFile MemberReference targets buildFilePath IfStatement MethodInvocation buildFilePath2 exists BlockStatement StatementExpression Assignment MemberReference buildFilePath MemberReference buildFilePath2 = BlockStatement StatementExpression MethodInvocation listener BinaryOperation + Literal ""Unable to find build script at "" MemberReference buildFilePath fatalError ReturnStatement Literal false End End IfStatement BinaryOperation != MemberReference buildFile Literal null BlockStatement StatementExpression MethodInvocation args Literal ""-file"" MethodInvocation buildFilePath getName add End StatementExpression MethodInvocation args Literal ""-D"" MethodInvocation build getBuildVariables addKeyValuePairs StatementExpression MethodInvocation args Literal ""-D"" MemberReference properties MemberReference vr addKeyValuePairsFromPropertyString StatementExpression MethodInvocation args MethodInvocation targets Literal ""[\t\r\n]+"" Literal "" "" replaceAll addTokenized IfStatement BinaryOperation != MemberReference ai Literal null StatementExpression MethodInvocation env Literal ""ANT_HOME"" MethodInvocation ai getHome put End IfStatement BinaryOperation != MemberReference antOpts Literal null StatementExpression MethodInvocation env Literal ""ANT_OPTS"" MethodInvocation env MemberReference antOpts expand put End IfStatement MethodInvocation ! launcher isUnix BlockStatement StatementExpression MethodInvocation args Literal ""&&"" Literal ""exit"" Literal ""%%ERRORLEVEL%%"" add StatementExpression Assignment MemberReference args ClassCreator MethodInvocation Literal ""cmd.exe"" Literal ""/C"" add MethodInvocation MethodInvocation args toStringWithQuote addQuoted ReferenceType ArgumentListBuilder = End LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis TryStatement LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation launcher MethodInvocation MemberReference args cmds MethodInvocation MemberReference env envs MethodInvocation MemberReference listener stdout MethodInvocation MethodInvocation buildFilePath getParent pwd MethodInvocation join launch ReturnStatement BinaryOperation == MemberReference r Literal 0 CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Util MemberReference e MemberReference listener displayIOException LocalVariableDeclaration ReferenceType String VariableDeclarator errorMessage MethodInvocation Messages Ant_ExecFailed IfStatement BinaryOperation && BinaryOperation == MemberReference ai Literal null BinaryOperation < BinaryOperation - MethodInvocation System currentTimeMillis MemberReference startTime Literal 1000 BlockStatement IfStatement BinaryOperation == MethodInvocation MethodInvocation getInstallations getDescriptor Literal null StatementExpression Assignment MemberReference errorMessage MethodInvocation Messages Ant_GlobalConfigNeeded += StatementExpression Assignment MemberReference errorMessage MethodInvocation Messages Ant_ProjectConfigNeeded += End End StatementExpression MethodInvocation e MethodInvocation listener MemberReference errorMessage fatalError printStackTrace ReturnStatement Literal false MethodDeclaration Modifier private static ReferenceType FilePath buildFilePath FormalParameter ReferenceType FilePath base FormalParameter ReferenceType String buildFile FormalParameter ReferenceType String targets IfStatement BinaryOperation != MemberReference buildFile Literal null ReturnStatement MethodInvocation base MemberReference buildFile child End LocalVariableDeclaration ReferenceType String VariableDeclarator tokens MethodInvocation Util MemberReference targets tokenize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MemberReference tokens length Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator a MemberReference ArraySelector MemberReference i tokens IfStatement BinaryOperation || BinaryOperation || MethodInvocation a Literal ""-f"" equals MethodInvocation a Literal ""-file"" equals MethodInvocation a Literal ""-buildfile"" equals ReturnStatement MethodInvocation base MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 tokens child End End ReturnStatement MethodInvocation base Literal ""build.xml"" child MethodDeclaration Modifier public ReferenceType DescriptorImpl getDescriptor ReturnStatement Cast ReferenceType DescriptorImpl SuperMethodInvocation getDescriptor ClassDeclaration Modifier public static Annotation Extension DescriptorImpl FieldDeclaration Modifier private volatile Annotation CopyOnWrite ReferenceType AntInstallation VariableDeclarator installations ArrayCreator ReferenceType AntInstallation Literal 0 ConstructorDeclaration Modifier public DescriptorImpl StatementExpression MethodInvocation load ConstructorDeclaration Modifier protected DescriptorImpl FormalParameter ReferenceType Class TypeArgument ReferenceType Ant extends clazz StatementExpression SuperConstructorInvocation MemberReference clazz MethodDeclaration /**
         * Obtains the {@link AntInstallation.DescriptorImpl} instance.
         */ Modifier public ReferenceType AntInstallation ReferenceType DescriptorImpl getToolDescriptor ReturnStatement MethodInvocation ToolInstallation MethodInvocation ClassReference AntInstallation ReferenceType DescriptorImpl get all MethodDeclaration Modifier public BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType AbstractProject extends jobType ReturnStatement Literal true MethodDeclaration Modifier protected convert FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object oldPropertyBag IfStatement MethodInvocation oldPropertyBag Literal ""installations"" containsKey StatementExpression Assignment MemberReference installations Cast ReferenceType AntInstallation MethodInvocation oldPropertyBag Literal ""installations"" get = End MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/project-config/ant.html"" MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages Ant_DisplayName MethodDeclaration Modifier public ReferenceType AntInstallation getInstallations ReturnStatement MemberReference installations MethodDeclaration Modifier public ReferenceType Ant newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement Cast ReferenceType Ant MethodInvocation req MemberReference clazz MemberReference formData bindJSON MethodDeclaration Modifier public setInstallations FormalParameter ReferenceType AntInstallation antInstallations  StatementExpression Assignment This MemberReference installations MemberReference antInstallations = StatementExpression MethodInvocation save ReferenceType BuildStepDescriptor TypeArgument ReferenceType Builder ClassDeclaration Modifier public final static /**
     * Represents the Ant installation on the system.
     */ AntInstallation FieldDeclaration Modifier private final ReferenceType String VariableDeclarator antHome ConstructorDeclaration Modifier public Annotation DataBoundConstructor AntInstallation FormalParameter ReferenceType String name FormalParameter ReferenceType String home FormalParameter ReferenceType List TypeArgument ReferenceType ToolProperty TypeArgument ? extends properties StatementExpression SuperConstructorInvocation MemberReference name MethodInvocation MemberReference home launderHome MemberReference properties StatementExpression Assignment This MemberReference antHome SuperMethodInvocation getHome = ConstructorDeclaration Modifier public /**
         * @deprecated as of 1.308
         *      Use {@link #AntInstallation(String, String, List)}
         */ AntInstallation FormalParameter ReferenceType String name FormalParameter ReferenceType String home StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference home MethodInvocation TypeArgument ReferenceType ToolProperty TypeArgument ? Collections MethodDeclaration Modifier private static ReferenceType String launderHome FormalParameter ReferenceType String home IfStatement BinaryOperation || MethodInvocation home Literal ""/"" endsWith MethodInvocation home Literal ""\\"" endsWith BlockStatement ReturnStatement MethodInvocation home Literal 0 BinaryOperation - MethodInvocation home length Literal 1 substring BlockStatement ReturnStatement MemberReference home End MethodDeclaration /**
         * install directory.
         *
         * @deprecated as of 1.307. Use {@link #getHome()}.
         */ Modifier public ReferenceType String getAntHome ReturnStatement MethodInvocation getHome MethodDeclaration Modifier public ReferenceType String getHome IfStatement BinaryOperation != MemberReference antHome Literal null ReturnStatement MemberReference antHome End ReturnStatement SuperMethodInvocation getHome MethodDeclaration /**
         * Gets the executable path of this Ant on the given target system.
         */ Modifier public ReferenceType String getExecutable FormalParameter ReferenceType Launcher launcher IOException InterruptedException ReturnStatement MethodInvocation launcher MethodInvocation ClassCreator ReferenceType Callable TypeArgument ReferenceType String TypeArgument ReferenceType IOException MethodDeclaration Modifier public ReferenceType String call IOException LocalVariableDeclaration ReferenceType File VariableDeclarator exe MethodInvocation getExeFile IfStatement MethodInvocation exe exists ReturnStatement MethodInvocation exe getPath End ReturnStatement Literal null call getChannel MethodDeclaration Modifier private ReferenceType File getExeFile LocalVariableDeclaration ReferenceType String VariableDeclarator execName IfStatement MethodInvocation Hudson isWindows StatementExpression Assignment MemberReference execName Literal ""ant.bat"" = StatementExpression Assignment MemberReference execName Literal ""ant"" = End LocalVariableDeclaration ReferenceType String VariableDeclarator antHome MethodInvocation Util MethodInvocation getAntHome MemberReference EnvVars masterEnvVars replaceMacro ReturnStatement ClassCreator ReferenceType File MemberReference antHome BinaryOperation + Literal ""bin/"" MemberReference execName MethodDeclaration /**
         * Returns true if the executable exists.
         */ Modifier public BasicType boolean getExists IOException InterruptedException ReturnStatement BinaryOperation != MethodInvocation ClassCreator ReferenceType Launcher ReferenceType LocalLauncher MemberReference TaskListener NULL getExecutable Literal null FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L MethodDeclaration Modifier public ReferenceType AntInstallation forEnvironment FormalParameter ReferenceType EnvVars environment ReturnStatement ClassCreator ReferenceType AntInstallation MethodInvocation getName MethodInvocation environment MemberReference antHome expand MethodInvocation MethodInvocation toList getProperties MethodDeclaration Modifier public ReferenceType AntInstallation forNode FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException ReturnStatement ClassCreator ReferenceType AntInstallation MethodInvocation getName MethodInvocation MemberReference node MemberReference log translateFor MethodInvocation MethodInvocation toList getProperties ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement Literal ""Ant"" MethodDeclaration Modifier public Annotation Override ReferenceType AntInstallation getInstallations ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference Ant ReferenceType DescriptorImpl getDescriptorByType MethodInvocation getInstallations getInstance MethodDeclaration Modifier public Annotation Override setInstallations FormalParameter ReferenceType AntInstallation installations  StatementExpression MethodInvocation Hudson MethodInvocation ClassReference Ant ReferenceType DescriptorImpl getDescriptorByType MethodInvocation MemberReference installations setInstallations getInstance MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType ToolInstaller extends getDefaultInstallers ReturnStatement MethodInvocation Collections ClassCreator ReferenceType AntInstaller Literal null singletonList MethodDeclaration Modifier public Annotation Override BasicType boolean configure FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject json FormException StatementExpression MethodInvocation MethodInvocation req MethodInvocation ArrayCreator ReferenceType AntInstallation Literal 0 toArray ClassReference ReferenceType AntInstallation MethodInvocation json Literal ""ant"" get bindJSONToList setInstallations ReturnStatement Literal true MethodDeclaration /**
             * Checks if the ANT_HOME is valid.
             */ Modifier public ReferenceType FormValidation doCheckHome FormalParameter Annotation QueryParameter ReferenceType File value IfStatement MethodInvocation ! Hudson MethodInvocation MemberReference Hudson ADMINISTER hasPermission getInstance ReturnStatement MethodInvocation FormValidation ok End IfStatement MethodInvocation value MethodInvocation Literal """" equals getPath ReturnStatement MethodInvocation FormValidation ok End IfStatement MethodInvocation ! value isDirectory ReturnStatement MethodInvocation FormValidation MethodInvocation Messages MemberReference value Ant_NotADirectory error End LocalVariableDeclaration ReferenceType File VariableDeclarator antJar ClassCreator ReferenceType File MemberReference value Literal ""lib/ant.jar"" IfStatement MethodInvocation ! antJar exists ReturnStatement MethodInvocation FormValidation MethodInvocation Messages MemberReference value Ant_NotAntDirectory error End ReturnStatement MethodInvocation FormValidation ok ReferenceType ToolDescriptor TypeArgument ReferenceType AntInstallation ReferenceType ToolInstallation ReferenceType EnvironmentSpecific TypeArgument ReferenceType AntInstallation ReferenceType NodeSpecific TypeArgument ReferenceType AntInstallation ClassDeclaration Modifier public static /**
     * Automatic Ant installer from apache.org.
     */ AntInstaller ConstructorDeclaration Modifier public Annotation DataBoundConstructor AntInstaller FormalParameter ReferenceType String id StatementExpression SuperConstructorInvocation MemberReference id ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages InstallFromApache MethodDeclaration Modifier public Annotation Override BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType ToolInstallation extends toolType ReturnStatement BinaryOperation == MemberReference toolType ClassReference ReferenceType AntInstallation ReferenceType DownloadFromUrlInstaller ReferenceType DescriptorImpl TypeArgument ReferenceType AntInstaller ReferenceType DownloadFromUrlInstaller ReferenceType Builder",0
82,82,"CompilationUnit PackageDeclaration hudson.model Import java.util.ArrayList Import java.util.List Import org.kohsuke.stapler.Stapler Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean ClassDeclaration Modifier public abstract Annotation ExportedBean /**
 * Cause object base class.  This class hierarchy is used to keep track of why 
 * a given build was started.   The Cause object is connected to a build via the
 * CauseAction object.
 *
 * @author Michael Donohue
 */ Cause MethodDeclaration Modifier public abstract Annotation Exported ElementValuePair visibility Literal 3 ReferenceType String getShortDescription ClassDeclaration Modifier public static LegacyCodeCause FieldDeclaration Modifier private ReferenceType StackTraceElement VariableDeclarator stackTrace ConstructorDeclaration Modifier public LegacyCodeCause StatementExpression Assignment MemberReference stackTrace ClassCreator MethodInvocation getStackTrace ReferenceType Exception = MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription ReturnStatement MethodInvocation Messages Cause_LegacyCodeCause_ShortDescription ReferenceType Cause ClassDeclaration Modifier public static UpstreamCause FieldDeclaration Modifier private ReferenceType String VariableDeclarator upstreamProject VariableDeclarator upstreamUrl FieldDeclaration Modifier private BasicType int VariableDeclarator upstreamBuild FieldDeclaration Modifier private transient Annotation Deprecated ReferenceType Cause VariableDeclarator upstreamCause FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Cause VariableDeclarator upstreamCauses ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Cause ConstructorDeclaration Modifier public UpstreamCause FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? up StatementExpression ExplicitConstructorInvocation Cast ReferenceType Run TypeArgument ? TypeArgument ? MemberReference up ConstructorDeclaration Modifier public UpstreamCause FormalParameter ReferenceType Run TypeArgument ? TypeArgument ? up StatementExpression Assignment MemberReference upstreamBuild MethodInvocation up getNumber = StatementExpression Assignment MemberReference upstreamProject MethodInvocation up MethodInvocation getName getParent = StatementExpression Assignment MemberReference upstreamUrl MethodInvocation up MethodInvocation getUrl getParent = LocalVariableDeclaration ReferenceType CauseAction VariableDeclarator ca MethodInvocation up ClassReference ReferenceType CauseAction getAction StatementExpression Assignment MemberReference upstreamCauses TernaryExpression BinaryOperation == MemberReference ca Literal null Literal null MethodInvocation ca getCauses = MethodDeclaration Modifier public ReferenceType String getUpstreamProject ReturnStatement MemberReference upstreamProject MethodDeclaration Modifier public BasicType int getUpstreamBuild ReturnStatement MemberReference upstreamBuild MethodDeclaration Modifier public ReferenceType String getUpstreamUrl ReturnStatement MemberReference upstreamUrl MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription ReturnStatement MethodInvocation Messages MemberReference upstreamProject MethodInvocation Integer MemberReference upstreamBuild toString Cause_UpstreamCause_ShortDescription MethodDeclaration Modifier private ReferenceType Object readResolve IfStatement BinaryOperation != MemberReference upstreamCause Literal null BlockStatement IfStatement BinaryOperation == MemberReference upstreamCauses Literal null StatementExpression Assignment MemberReference upstreamCauses ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Cause = End StatementExpression MethodInvocation upstreamCauses MemberReference upstreamCause add StatementExpression Assignment MemberReference upstreamCause Literal null = End ReturnStatement This ReferenceType Cause ClassDeclaration Modifier public static UserCause FieldDeclaration Modifier private ReferenceType String VariableDeclarator authenticationName ConstructorDeclaration Modifier public UserCause StatementExpression Assignment This MemberReference authenticationName MethodInvocation Hudson MethodInvocation getName getAuthentication = MethodDeclaration Modifier public ReferenceType String getUserName ReturnStatement MemberReference authenticationName MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription ReturnStatement MethodInvocation Messages MemberReference authenticationName Cause_UserCause_ShortDescription ReferenceType Cause ClassDeclaration Modifier public static RemoteCause FieldDeclaration Modifier private ReferenceType String VariableDeclarator addr FieldDeclaration Modifier private ReferenceType String VariableDeclarator note ConstructorDeclaration Modifier public RemoteCause FormalParameter ReferenceType String host FormalParameter ReferenceType String note StatementExpression Assignment This MemberReference addr MemberReference host = StatementExpression Assignment This MemberReference note MemberReference note = MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription IfStatement BinaryOperation != MemberReference note Literal null BlockStatement ReturnStatement MethodInvocation Messages MemberReference addr MemberReference note Cause_RemoteCause_ShortDescriptionWithNote BlockStatement ReturnStatement MethodInvocation Messages MemberReference addr Cause_RemoteCause_ShortDescription End ReferenceType Cause",1
277,277,"CompilationUnit PackageDeclaration hudson Import java.io.File EnumDeclaration Modifier public /**
 * Strategy object that absorbs the platform differences.
 *
 * <p>
 * Do not switch/case on this enum, or do a comparison, as we may add new constants.
 *
 * @author Kohsuke Kawaguchi
 */ Platform EnumBody EnumConstantDeclaration WINDOWS Literal ';' EnumConstantDeclaration UNIX Literal ':' FieldDeclaration /**
     * The character that separates paths in environment variables like PATH and CLASSPATH. 
     * On Windows ';' and on Unix ':'.
     *
     * @see File#pathSeparator
     */ Modifier public final BasicType char VariableDeclarator pathSeparator ConstructorDeclaration Modifier private Platform FormalParameter BasicType char pathSeparator StatementExpression Assignment This MemberReference pathSeparator MemberReference pathSeparator = MethodDeclaration Modifier public static ReferenceType Platform current IfStatement BinaryOperation == MemberReference File pathSeparatorChar Literal ':' ReturnStatement MemberReference UNIX End ReturnStatement MemberReference WINDOWS",1
196,196,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.maven.MavenAggregatedReport Import hudson.maven.MavenBuild Import hudson.maven.MavenModule Import hudson.maven.MavenModuleSet Import hudson.maven.MavenModuleSetBuild Import hudson.model.Action Import hudson.tasks.test.AbstractTestResultAction Import hudson.tasks.test.AggregatedTestResultAction Import hudson.tasks.test.TestResultProjectAction Import hudson.tasks.junit.CaseResult Import java.util.List Import java.util.Map ClassDeclaration Modifier public /**
 * {@link MavenAggregatedReport} for surefire report.
 * 
 * @author Kohsuke Kawaguchi
 */ SurefireAggregatedReport ConstructorDeclaration SurefireAggregatedReport FormalParameter ReferenceType MavenModuleSetBuild owner StatementExpression SuperConstructorInvocation MemberReference owner MethodDeclaration Modifier public update FormalParameter ReferenceType Map TypeArgument ReferenceType MavenModule TypeArgument ReferenceType List TypeArgument ReferenceType MavenBuild moduleBuilds FormalParameter ReferenceType MavenBuild newBuild StatementExpression SuperMethodInvocation Cast ReferenceType MavenModuleSetBuild MemberReference owner update MethodDeclaration Modifier public ReferenceType Class TypeArgument ReferenceType SurefireReport getIndividualActionType ReturnStatement ClassReference ReferenceType SurefireReport MethodDeclaration Modifier public ReferenceType Action getProjectAction FormalParameter ReferenceType MavenModuleSet moduleSet ReturnStatement ClassCreator ReferenceType TestResultProjectAction MemberReference moduleSet MethodDeclaration Modifier protected Annotation Override ReferenceType String getChildName FormalParameter ReferenceType AbstractTestResultAction tr ReturnStatement Cast ReferenceType MavenModule MethodInvocation tr.owner getProject MethodDeclaration Modifier public Annotation Override ReferenceType MavenBuild resolveChild FormalParameter ReferenceType Child child LocalVariableDeclaration ReferenceType MavenModuleSet VariableDeclarator mms Cast ReferenceType MavenModuleSet MethodInvocation owner getProject LocalVariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation mms MemberReference child name getModule IfStatement BinaryOperation != MemberReference m Literal null ReturnStatement MethodInvocation m MemberReference child build getBuildByNumber End ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType SurefireReport getChildReport FormalParameter ReferenceType Child child LocalVariableDeclaration ReferenceType MavenBuild VariableDeclarator b MethodInvocation MemberReference child resolveChild IfStatement BinaryOperation == MemberReference b Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation b ClassReference ReferenceType SurefireReport getAction MethodDeclaration /**
     * 
     */ Modifier public Annotation Override ReferenceType String getTestResultPath FormalParameter ReferenceType CaseResult it LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator path ClassCreator ReferenceType StringBuilder Literal ""../"" StatementExpression MethodInvocation path MethodInvocation it MethodInvocation getProject MethodInvocation getShortUrl getOwner append StatementExpression MethodInvocation path MethodInvocation it MethodInvocation getNumber getOwner append StatementExpression MethodInvocation path Literal ""/"" append StatementExpression MethodInvocation path MethodInvocation getUrlName append StatementExpression MethodInvocation path Literal ""/"" append StatementExpression MethodInvocation path MethodInvocation it Literal null getRelativePathFrom append ReturnStatement MethodInvocation path toString ReferenceType AggregatedTestResultAction ReferenceType MavenAggregatedReport",0
124,124,"CompilationUnit PackageDeclaration hudson.util Import hudson.Util Import java.util.ArrayList Import java.util.List Import java.util.StringTokenizer Import java.util.Arrays Import java.util.Map Import java.util.Properties Import java.util.BitSet Import java.util.Properties Import java.util.Map.Entry Import java.io.Serializable Import java.io.StringReader Import java.io.ByteArrayInputStream Import java.io.IOException Import java.io.File Import java.io.StringReader Import java.io.ByteArrayInputStream Import java.io.IOException Import org.jvnet.animal_sniffer.IgnoreJRERequirement ClassDeclaration Modifier public /**
 * Used to build up arguments for a process invocation.
 *
 * @author Kohsuke Kawaguchi
 */ ArgumentListBuilder FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType String VariableDeclarator args ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String FieldDeclaration Modifier private ReferenceType BitSet VariableDeclarator mask ClassCreator ReferenceType BitSet MethodDeclaration Modifier public ReferenceType ArgumentListBuilder add FormalParameter ReferenceType Object a ReturnStatement MethodInvocation MethodInvocation a toString add MethodDeclaration Modifier public ReferenceType ArgumentListBuilder add FormalParameter ReferenceType File f ReturnStatement MethodInvocation MethodInvocation f getAbsolutePath add MethodDeclaration Modifier public ReferenceType ArgumentListBuilder add FormalParameter ReferenceType String a IfStatement BinaryOperation != MemberReference a Literal null StatementExpression MethodInvocation args MemberReference a add End ReturnStatement This MethodDeclaration Modifier public ReferenceType ArgumentListBuilder prepend FormalParameter ReferenceType String args  LocalVariableDeclaration ReferenceType BitSet VariableDeclarator nm ClassCreator ReferenceType BitSet BinaryOperation + This MemberReference args MethodInvocation size MemberReference args length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MemberReference args MethodInvocation size MemberReference ++ i StatementExpression MethodInvocation nm BinaryOperation + MemberReference i MemberReference args length MethodInvocation mask MemberReference i get set End StatementExpression Assignment MemberReference mask MemberReference nm = StatementExpression This MemberReference args MethodInvocation Literal 0 MethodInvocation Arrays MemberReference args asList addAll ReturnStatement This MethodDeclaration /**
     * Adds an argument by quoting it.
     * This is necessary only in a rare circumstance,
     * such as when adding argument for ssh and rsh.
     *
     * Normal process invocations don't need it, because each
     * argument is treated as its own string and never merged into one. 
     */ Modifier public ReferenceType ArgumentListBuilder addQuoted FormalParameter ReferenceType String a ReturnStatement MethodInvocation BinaryOperation + BinaryOperation + Literal '""' MemberReference a Literal '""' add MethodDeclaration Modifier public ReferenceType ArgumentListBuilder add FormalParameter ReferenceType String args  ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator arg MemberReference args BlockStatement StatementExpression MethodInvocation MemberReference arg add End ReturnStatement This MethodDeclaration /**
     * Decomposes the given token into multiple arguments by splitting via whitespace.
     */ Modifier public ReferenceType ArgumentListBuilder addTokenized FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null ReturnStatement This End StatementExpression MethodInvocation MethodInvocation Util MemberReference s tokenize add ReturnStatement This MethodDeclaration /**
     * Adds key value pairs as ""-Dkey=value -Dkey=value ...""
     *
     * <tt>-D</tt> portion is configurable as the 'prefix' parameter.
     * @since 1.114
     */ Modifier public ReferenceType ArgumentListBuilder addKeyValuePairs FormalParameter ReferenceType String prefix FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String props ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation props entrySet StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference prefix MethodInvocation e getKey Literal '=' MethodInvocation e getValue add End ReturnStatement This MethodDeclaration /**
     * Adds key value pairs as ""-Dkey=value -Dkey=value ..."" by parsing a given string using {@link Properties}.
     *
     * @param prefix
     *      The '-D' portion of the example.
     * @param properties
     *      The persisted form of {@link Properties}. For example, ""abc=def\nghi=jkl"". Can be null, in which
     *      case this method becomes no-op.
     * @param vr
     *      {@link VariableResolver} to be performed on the values.
     * @since 1.262
     */ Modifier public ReferenceType ArgumentListBuilder addKeyValuePairsFromPropertyString FormalParameter ReferenceType String prefix FormalParameter ReferenceType String properties FormalParameter ReferenceType VariableResolver vr IOException IfStatement BinaryOperation == MemberReference properties Literal null ReturnStatement This End ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator entry MethodInvocation MethodInvocation entrySet MemberReference properties load BlockStatement StatementExpression MethodInvocation args BinaryOperation + BinaryOperation + BinaryOperation + MemberReference prefix MethodInvocation entry getKey Literal ""="" MethodInvocation Util MethodInvocation entry MethodInvocation toString getValue MemberReference vr replaceMacro add End ReturnStatement This MethodDeclaration Modifier private Annotation IgnoreJRERequirement ReferenceType Properties load FormalParameter ReferenceType String properties IOException LocalVariableDeclaration ReferenceType Properties VariableDeclarator p ClassCreator ReferenceType Properties TryStatement StatementExpression MethodInvocation p ClassCreator ReferenceType StringReader MemberReference properties load CatchClause CatchClauseParameter NoSuchMethodError e StatementExpression MethodInvocation p ClassCreator ReferenceType ByteArrayInputStream MethodInvocation properties getBytes load ReturnStatement MemberReference p MethodDeclaration Modifier public ReferenceType String toCommandArray ReturnStatement MethodInvocation args ArrayCreator ReferenceType String MethodInvocation args size toArray MethodDeclaration Modifier public ReferenceType ArgumentListBuilder clone LocalVariableDeclaration ReferenceType ArgumentListBuilder VariableDeclarator r ClassCreator ReferenceType ArgumentListBuilder StatementExpression MethodInvocation r.args This MemberReference args addAll ReturnStatement MemberReference r MethodDeclaration /**
     * Re-initializes the arguments list.
     */ Modifier public clear StatementExpression MethodInvocation args clear MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String toList ReturnStatement MemberReference args MethodDeclaration Modifier public ReferenceType String toStringWithQuote LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator arg MemberReference args BlockStatement IfStatement BinaryOperation > MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ' ' append End IfStatement BinaryOperation || BinaryOperation >= MethodInvocation arg Literal ' ' indexOf Literal 0 BinaryOperation == MethodInvocation arg length Literal 0 StatementExpression MethodInvocation buf MethodInvocation MemberReference arg append MethodInvocation Literal '""' append Literal '""' append StatementExpression MethodInvocation buf MemberReference arg append End End ReturnStatement MethodInvocation buf toString MethodDeclaration /**
     * Returns true if there are any masked arguments.
     * @return true if there are any masked arguments; false otherwise
     */ Modifier public BasicType boolean hasMaskedArguments ReturnStatement BinaryOperation > MethodInvocation mask length Literal 0 MethodDeclaration /**
     * Returns an array of booleans where the masked arguments are marked as true
     * @return an array of booleans.
     */ Modifier public BasicType boolean toMaskArray LocalVariableDeclaration BasicType boolean VariableDeclarator mask ArrayCreator BasicType boolean MethodInvocation args size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference mask length MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i mask This MemberReference mask MethodInvocation MemberReference i get = End ReturnStatement MemberReference mask MethodDeclaration /**
     * Add a masked argument
     * @param string the argument
     */ Modifier public addMasked FormalParameter ReferenceType String string StatementExpression MethodInvocation mask MethodInvocation args size set StatementExpression MethodInvocation MemberReference string add FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable",0
385,385,,0
267,267,"CompilationUnit PackageDeclaration hudson.triggers Import hudson.model.Descriptor Import hudson.model.Item Import hudson.util.DescriptorList Import hudson.Extension Import java.util.List Import java.util.ArrayList ClassDeclaration Modifier public /**
 * List of all installed {@link Trigger}s.
 *
 * @author Kohsuke Kawaguchi
 * @deprecated as of 1.286
 *      See each member for how to migrate your code.
 */ Triggers FieldDeclaration /**
     * All registered {@link TriggerDescriptor} implementations.
     * @deprecated as of 1.286
     *      Use {@link Trigger#all()} for read access, and {@link Extension} for registration.
     */ Modifier public final static ReferenceType List TypeArgument ReferenceType TriggerDescriptor VariableDeclarator TRIGGERS Cast ReferenceType List ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType Trigger TypeArgument ? Cast ReferenceType Class ClassReference ReferenceType Trigger MethodDeclaration /**
     * Returns a subset of {@link TriggerDescriptor}s that applys to the given item.
     *
     * @deprecated as of 1.286
     *      Use {@link Trigger#for_(Item)}.
     */ Modifier public static ReferenceType List TypeArgument ReferenceType TriggerDescriptor getApplicableTriggers FormalParameter ReferenceType Item i ReturnStatement MethodInvocation Trigger MemberReference i for_",0
453,453,,0
129,129,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.FilePath Import hudson.Extension Import hudson.model.Descriptor Import hudson.model.AbstractProject Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public /**
 * Executes commands by using Windows batch file.
 *
 * @author Kohsuke Kawaguchi
 */ BatchFile ConstructorDeclaration Modifier public BatchFile FormalParameter ReferenceType String command StatementExpression SuperConstructorInvocation MemberReference command MethodDeclaration Modifier protected ReferenceType String buildCommandLine FormalParameter ReferenceType FilePath script ReturnStatement ArrayCreator ReferenceType String ArrayInitializer Literal ""cmd"" Literal ""/c"" Literal ""call"" MethodInvocation script getRemote MethodDeclaration Modifier protected ReferenceType String getContents ReturnStatement BinaryOperation + MemberReference command Literal ""\r\nexit %ERRORLEVEL%"" MethodDeclaration Modifier protected ReferenceType String getFileExtension ReturnStatement Literal "".bat"" ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/project-config/batch.html"" MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages BatchFile_DisplayName MethodDeclaration Modifier public ReferenceType Builder newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject data ReturnStatement ClassCreator ReferenceType BatchFile MethodInvocation data Literal ""batchFile"" getString MethodDeclaration Modifier public BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType AbstractProject extends jobType ReturnStatement Literal true ReferenceType BuildStepDescriptor TypeArgument ReferenceType Builder ReferenceType CommandInterpreter",0
35,35,"CompilationUnit PackageDeclaration hudson.util.spring Import groovy.lang.Binding Import groovy.lang.Closure Import groovy.lang.GString Import groovy.lang.GroovyObject Import groovy.lang.GroovyObjectSupport Import groovy.lang.GroovyShell Import groovy.lang.MetaClass Import groovy.lang.MissingMethodException Import org.apache.commons.lang.ArrayUtils Import org.codehaus.groovy.control.CompilerConfiguration Import org.codehaus.groovy.runtime.DefaultGroovyMethods Import org.codehaus.groovy.runtime.InvokerHelper Import org.springframework.beans.factory.config.BeanDefinition Import org.springframework.beans.factory.config.RuntimeBeanReference Import org.springframework.beans.factory.support.ManagedList Import org.springframework.beans.factory.support.ManagedMap Import org.springframework.context.ApplicationContext Import org.springframework.context.support.StaticApplicationContext Import org.springframework.core.io.Resource Import org.springframework.core.io.support.PathMatchingResourcePatternResolver Import org.springframework.web.context.WebApplicationContext Import java.io.IOException Import java.io.InputStream Import java.util.Arrays Import java.util.HashMap Import java.util.List Import java.util.ListIterator Import java.util.Map Import java.util.Map.Entry ClassDeclaration Modifier public /**
 * <p>Runtime bean configuration wrapper. Like a Groovy builder, but more of a DSL for
 * Spring configuration. Allows syntax like:</p>
 *
 * <pre>
 * import org.hibernate.SessionFactory
 * import org.apache.commons.dbcp.BasicDataSource
 *
 * BeanBuilder builder = new BeanBuilder()
 * builder.beans {
 *   dataSource(BasicDataSource) {                  // <--- invokeMethod
 *      driverClassName = ""org.hsqldb.jdbcDriver""
 *      url = ""jdbc:hsqldb:mem:grailsDB""
 *      username = ""sa""                            // <-- setProperty
 *      password = """"
 *      settings = [mynew:""setting""]
 *  }
 *  sessionFactory(SessionFactory) {
 *  	   dataSource = dataSource                 // <-- getProperty for retrieving refs
 *  }
 *  myService(MyService) {
 *      nestedBean = { AnotherBean bean->          // <-- setProperty with closure for nested bean
 *      		dataSource = dataSource
 *      }
 *  }
 * }
 * </pre>
 * <p>
 *   You can also use the Spring IO API to load resources containing beans defined as a Groovy
 *   script using either the constructors or the loadBeans(Resource[] resources) method
 * </p>
 *
 * @author Graeme Rocher
 * @since 0.4
 *
 */ BeanBuilder FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator ANONYMOUS_BEAN Literal ""bean"" FieldDeclaration Modifier private ReferenceType RuntimeSpringConfiguration VariableDeclarator springConfig ClassCreator ReferenceType DefaultRuntimeSpringConfiguration FieldDeclaration Modifier private ReferenceType BeanConfiguration VariableDeclarator currentBeanConfig FieldDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType DeferredProperty VariableDeclarator deferredProperties ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType DeferredProperty FieldDeclaration Modifier private ReferenceType ApplicationContext VariableDeclarator parentCtx FieldDeclaration Modifier private ReferenceType Map VariableDeclarator binding ClassCreator ReferenceType HashMap FieldDeclaration Modifier private ReferenceType ClassLoader VariableDeclarator classLoader Literal null ConstructorDeclaration Modifier public BeanBuilder StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier public BeanBuilder FormalParameter ReferenceType ClassLoader classLoader StatementExpression SuperConstructorInvocation StatementExpression Assignment This MemberReference classLoader MemberReference classLoader = ConstructorDeclaration Modifier public BeanBuilder FormalParameter ReferenceType ApplicationContext parent StatementExpression SuperConstructorInvocation StatementExpression Assignment This MemberReference parentCtx MemberReference parent = StatementExpression Assignment This MemberReference springConfig ClassCreator ReferenceType DefaultRuntimeSpringConfiguration MemberReference parent = ConstructorDeclaration Modifier public BeanBuilder FormalParameter ReferenceType ApplicationContext parent FormalParameter ReferenceType ClassLoader classLoader StatementExpression SuperConstructorInvocation StatementExpression Assignment This MemberReference parentCtx MemberReference parent = StatementExpression Assignment This MemberReference springConfig ClassCreator ReferenceType DefaultRuntimeSpringConfiguration MemberReference parent = StatementExpression Assignment This MemberReference classLoader MemberReference classLoader = MethodDeclaration /**
     * Parses the bean definition groovy script.
     */ Modifier public parse FormalParameter ReferenceType InputStream script StatementExpression MethodInvocation MemberReference script ClassCreator ReferenceType Binding parse MethodDeclaration /**
     * Parses the bean definition groovy script by first exporting the given {@link Binding}. 
     */ Modifier public parse FormalParameter ReferenceType InputStream script FormalParameter ReferenceType Binding binding StatementExpression MethodInvocation MemberReference binding setBinding LocalVariableDeclaration ReferenceType CompilerConfiguration VariableDeclarator cc ClassCreator ReferenceType CompilerConfiguration StatementExpression MethodInvocation cc ClassReference MethodInvocation getName ReferenceType ClosureScript setScriptBaseClass LocalVariableDeclaration ReferenceType GroovyShell VariableDeclarator shell ClassCreator ReferenceType GroovyShell MemberReference classLoader MemberReference binding MemberReference cc LocalVariableDeclaration ReferenceType ClosureScript VariableDeclarator s Cast ReferenceType ClosureScript MethodInvocation shell MemberReference script parse StatementExpression MethodInvocation s This setDelegate StatementExpression MethodInvocation s run MethodDeclaration /**
	 * Retrieves the parent ApplicationContext
	 * @return The parent ApplicationContext
	 */ Modifier public ReferenceType ApplicationContext getParentCtx ReturnStatement MemberReference parentCtx MethodDeclaration /**
	 * Retrieves the RuntimeSpringConfiguration instance used the the BeanBuilder
	 * @return The RuntimeSpringConfiguration instance
	 */ Modifier public ReferenceType RuntimeSpringConfiguration getSpringConfig ReturnStatement MemberReference springConfig MethodDeclaration /**
	 * Retrieves a BeanDefinition for the given name
	 * @param name The bean definition
	 * @return The BeanDefinition instance
	 */ Modifier public ReferenceType BeanDefinition getBeanDefinition FormalParameter ReferenceType String name IfStatement MethodInvocation ! MethodInvocation MemberReference name containsBean getSpringConfig ReturnStatement Literal null End ReturnStatement MethodInvocation MethodInvocation MemberReference name getBeanConfig MethodInvocation getBeanDefinition getSpringConfig MethodDeclaration /**
     * Retrieves all BeanDefinitions for this BeanBuilder
     *
     * @return A map of BeanDefinition instances with the bean id as the key
     */ Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType BeanDefinition getBeanDefinitions LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType BeanDefinition VariableDeclarator beanDefinitions ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType BeanDefinition ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator beanName MethodInvocation MethodInvocation getBeanNames getSpringConfig BlockStatement LocalVariableDeclaration ReferenceType BeanDefinition VariableDeclarator bd MethodInvocation MethodInvocation MemberReference beanName getBeanConfig MethodInvocation getBeanDefinition getSpringConfig StatementExpression MethodInvocation beanDefinitions MemberReference beanName MemberReference bd put End ReturnStatement MemberReference beanDefinitions MethodDeclaration /**
	 * Sets the runtime Spring configuration instance to use. This is not necessary to set
	 * and is configured to default value if not, but is useful for integrating with other
	 * spring configuration mechanisms @see org.codehaus.groovy.grails.commons.spring.GrailsRuntimeConfigurator
	 *
	 * @param springConfig The spring config
	 */ Modifier public setSpringConfig FormalParameter ReferenceType RuntimeSpringConfiguration springConfig StatementExpression Assignment This MemberReference springConfig MemberReference springConfig = ClassDeclaration Modifier private static /**
	 * This class is used to defer the adding of a property to a bean definition until later
	 * This is for a case where you assign a property to a list that may not contain bean references at
	 * that point of asignment, but may later hence it would need to be managed
	 *
	 * @author Graeme Rocher
	 */ DeferredProperty FieldDeclaration Modifier private ReferenceType BeanConfiguration VariableDeclarator config FieldDeclaration Modifier private ReferenceType String VariableDeclarator name FieldDeclaration Modifier private ReferenceType Object VariableDeclarator value ConstructorDeclaration DeferredProperty FormalParameter ReferenceType BeanConfiguration config FormalParameter ReferenceType String name FormalParameter ReferenceType Object value StatementExpression Assignment This MemberReference config MemberReference config = StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference value MemberReference value = MethodDeclaration Modifier public setInBeanConfig StatementExpression This MemberReference config MethodInvocation MemberReference name MemberReference value addProperty ClassDeclaration Modifier private /**
	 * A RuntimeBeanReference that takes care of adding new properties to runtime references
	 *
	 * @author Graeme Rocher
	 * @since 0.4
	 *
	 */ ConfigurableRuntimeBeanReference FieldDeclaration Modifier private ReferenceType MetaClass VariableDeclarator metaClass FieldDeclaration Modifier private ReferenceType BeanConfiguration VariableDeclarator beanConfig ConstructorDeclaration Modifier public ConfigurableRuntimeBeanReference FormalParameter ReferenceType String beanName FormalParameter ReferenceType BeanConfiguration beanConfig StatementExpression ExplicitConstructorInvocation MemberReference beanName MemberReference beanConfig Literal false ConstructorDeclaration Modifier public ConfigurableRuntimeBeanReference FormalParameter ReferenceType String beanName FormalParameter ReferenceType BeanConfiguration beanConfig FormalParameter BasicType boolean toParent StatementExpression SuperConstructorInvocation MemberReference beanName MemberReference toParent StatementExpression Assignment This MemberReference beanConfig MemberReference beanConfig = IfStatement BinaryOperation == MemberReference beanConfig Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument [beanConfig] cannot be null"" End StatementExpression Assignment This MemberReference metaClass MethodInvocation InvokerHelper This getMetaClass = MethodDeclaration Modifier public ReferenceType MetaClass getMetaClass ReturnStatement This MemberReference metaClass MethodDeclaration Modifier public ReferenceType Object getProperty FormalParameter ReferenceType String property IfStatement MethodInvocation property Literal ""beanName"" equals ReturnStatement MethodInvocation getBeanName IfStatement MethodInvocation property Literal ""source"" equals ReturnStatement MethodInvocation getSource IfStatement BinaryOperation != This MemberReference beanConfig Literal null BlockStatement ReturnStatement ClassCreator ReferenceType WrappedPropertyValue MemberReference property MethodInvocation beanConfig MemberReference property getPropertyValue ReturnStatement This MemberReference metaClass MethodInvocation This MemberReference property getProperty End End End ClassDeclaration Modifier private /**
		 * Wraps a BeanConfiguration property an ensures that any RuntimeReference additions to it are
		 * deferred for resolution later
		 *
		 * @author Graeme Rocher
		 * @since 0.4
		 *
		 */ WrappedPropertyValue FieldDeclaration Modifier private ReferenceType Object VariableDeclarator propertyValue FieldDeclaration Modifier private ReferenceType String VariableDeclarator propertyName ConstructorDeclaration Modifier public WrappedPropertyValue FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object propertyValue StatementExpression Assignment This MemberReference propertyValue MemberReference propertyValue = StatementExpression Assignment This MemberReference propertyName MemberReference propertyName = MethodDeclaration Modifier public leftShift FormalParameter ReferenceType Object value StatementExpression MethodInvocation InvokerHelper MemberReference propertyValue Literal ""leftShift"" MemberReference value invokeMethod IfStatement BinaryOperation instanceof MemberReference value ReferenceType RuntimeBeanReference BlockStatement StatementExpression MethodInvocation deferredProperties MethodInvocation beanConfig getName ClassCreator ReferenceType DeferredProperty MemberReference beanConfig MemberReference propertyName MemberReference propertyValue put End ReferenceType GroovyObjectSupport MethodDeclaration Modifier public ReferenceType Object invokeMethod FormalParameter ReferenceType String name FormalParameter ReferenceType Object args ReturnStatement This MemberReference metaClass MethodInvocation This MemberReference name MemberReference args invokeMethod MethodDeclaration Modifier public setMetaClass FormalParameter ReferenceType MetaClass metaClass StatementExpression Assignment This MemberReference metaClass MemberReference metaClass = MethodDeclaration Modifier public setProperty FormalParameter ReferenceType String property FormalParameter ReferenceType Object newValue IfStatement MethodInvocation ! MemberReference beanConfig MemberReference property MemberReference newValue addToDeferred BlockStatement StatementExpression MethodInvocation beanConfig MemberReference property MemberReference newValue setPropertyValue End ReferenceType RuntimeBeanReference ReferenceType GroovyObject MethodDeclaration /**
	 * Takes a resource pattern as (@see org.springframework.core.io.support.PathMatchingResourcePatternResolver)
	 * This allows you load multiple bean resources in this single builder
	 *
	 * eg loadBeans(""classpath:*Beans.groovy"")
	 *
	 * @param resourcePattern
	 * @throws IOException When the path cannot be matched
	 */ Modifier public loadBeans FormalParameter ReferenceType String resourcePattern IOException StatementExpression MethodInvocation ClassCreator MethodInvocation MemberReference resourcePattern getResources ReferenceType PathMatchingResourcePatternResolver loadBeans MethodDeclaration /**
	 * Loads a single Resource into the bean builder
	 *
	 * @param resource The resource to load
	 * @throws IOException When an error occurs
	 */ Modifier public loadBeans FormalParameter ReferenceType Resource resource IOException StatementExpression MethodInvocation ArrayCreator ReferenceType Resource ArrayInitializer MemberReference resource loadBeans MethodDeclaration /**
	 * Loads a set of given beans
	 * @param resources The resources to load
	 * @throws IOException
	 */ Modifier public loadBeans FormalParameter ReferenceType Resource resources IOException LocalVariableDeclaration ReferenceType Closure VariableDeclarator beans ClassCreator ReferenceType Closure This MethodDeclaration Modifier public ReferenceType Object call FormalParameter ReferenceType Object args ReturnStatement MethodInvocation Cast ReferenceType Closure MemberReference ArraySelector Literal 0 args beans LocalVariableDeclaration ReferenceType Binding VariableDeclarator b ClassCreator ReferenceType Binding StatementExpression MethodInvocation b Literal ""beans"" MemberReference beans setVariable LocalVariableDeclaration ReferenceType GroovyShell VariableDeclarator shell TernaryExpression BinaryOperation != MemberReference classLoader Literal null ClassCreator ReferenceType GroovyShell MemberReference classLoader MemberReference b ClassCreator ReferenceType GroovyShell MemberReference b ForStatement EnhancedForControl VariableDeclaration ReferenceType Resource VariableDeclarator resource MemberReference resources BlockStatement StatementExpression MethodInvocation shell MethodInvocation resource getInputStream evaluate End MethodDeclaration Modifier public registerBeans FormalParameter ReferenceType StaticApplicationContext ctx StatementExpression MethodInvocation finalizeDeferredProperties StatementExpression MethodInvocation springConfig MemberReference ctx registerBeansWithContext MethodDeclaration Modifier public ReferenceType RuntimeBeanReference ref FormalParameter ReferenceType String refName ReturnStatement MethodInvocation MemberReference refName Literal false ref MethodDeclaration Modifier public ReferenceType RuntimeBeanReference parentRef FormalParameter ReferenceType String refName ReturnStatement MethodInvocation MemberReference refName Literal true ref MethodDeclaration Modifier public ReferenceType RuntimeBeanReference ref FormalParameter ReferenceType String refName FormalParameter BasicType boolean parentRef ReturnStatement ClassCreator ReferenceType RuntimeBeanReference MemberReference refName MemberReference parentRef MethodDeclaration /**
	 * This method is invoked by Groovy when a method that's not defined in Java is invoked.
     * We use that as a syntax for bean definition. 
	 */ Modifier public ReferenceType Object methodMissing FormalParameter ReferenceType String name FormalParameter ReferenceType Object arg LocalVariableDeclaration ReferenceType Object VariableDeclarator args Cast ReferenceType Object MemberReference arg IfStatement BinaryOperation == MemberReference args length Literal 0 ThrowStatement ClassCreator ReferenceType MissingMethodException MemberReference name MethodInvocation getClass MemberReference args End IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Closure BlockStatement ReturnStatement MethodInvocation MemberReference name MemberReference args invokeBeanDefiningMethod IfStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Class BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType RuntimeBeanReference BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Map BlockStatement ReturnStatement MethodInvocation MemberReference name MemberReference args invokeBeanDefiningMethod IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 1 BinaryOperation instanceof MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args ReferenceType Closure BlockStatement ReturnStatement MethodInvocation MemberReference name MemberReference args invokeBeanDefiningMethod End End End LocalVariableDeclaration ReferenceType WebApplicationContext VariableDeclarator ctx MethodInvocation springConfig getUnrefreshedApplicationContext LocalVariableDeclaration ReferenceType MetaClass VariableDeclarator mc MethodInvocation DefaultGroovyMethods MemberReference ctx getMetaClass IfStatement MethodInvocation ! mc MethodInvocation isEmpty MemberReference ctx MemberReference name MemberReference args respondsTo BlockStatement ReturnStatement MethodInvocation mc MemberReference ctx MemberReference name MemberReference args invokeMethod End ReturnStatement This MethodDeclaration Modifier public ReferenceType WebApplicationContext createApplicationContext StatementExpression MethodInvocation finalizeDeferredProperties ReturnStatement MethodInvocation springConfig getApplicationContext MethodDeclaration Modifier private finalizeDeferredProperties ForStatement EnhancedForControl VariableDeclaration ReferenceType DeferredProperty VariableDeclarator dp MethodInvocation deferredProperties values BlockStatement IfStatement BinaryOperation instanceof MemberReference dp value ReferenceType List BlockStatement StatementExpression Assignment MemberReference dp value MethodInvocation MemberReference dp value manageListIfNecessary = IfStatement BinaryOperation instanceof MemberReference dp value ReferenceType Map BlockStatement StatementExpression Assignment MemberReference dp value MethodInvocation MemberReference dp value manageMapIfNecessary = End End StatementExpression MethodInvocation dp setInBeanConfig End StatementExpression MethodInvocation deferredProperties clear MethodDeclaration Modifier private BasicType boolean addToDeferred FormalParameter ReferenceType BeanConfiguration beanConfig FormalParameter ReferenceType String property FormalParameter ReferenceType Object newValue IfStatement BinaryOperation instanceof MemberReference newValue ReferenceType List BlockStatement StatementExpression MethodInvocation deferredProperties BinaryOperation + MethodInvocation currentBeanConfig getName MemberReference property ClassCreator ReferenceType DeferredProperty MemberReference currentBeanConfig MemberReference property MemberReference newValue put ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference newValue ReferenceType Map BlockStatement StatementExpression MethodInvocation deferredProperties BinaryOperation + MethodInvocation currentBeanConfig getName MemberReference property ClassCreator ReferenceType DeferredProperty MemberReference currentBeanConfig MemberReference property MemberReference newValue put ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration /**
	 * This method is called when a bean definition node is called
	 *
	 * @param name The name of the bean to define
	 * @param args The arguments to the bean. The first argument is the class name, the last argument is sometimes a closure. All
	 * the arguments in between are constructor arguments
	 * @return The bean configuration instance
	 */ Modifier private ReferenceType BeanConfiguration invokeBeanDefiningMethod FormalParameter ReferenceType String name FormalParameter ReferenceType Object args LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator old MemberReference currentBeanConfig TryStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Class BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator beanClass TernaryExpression BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Class Cast ReferenceType Class MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 0 MethodInvocation getClass args IfStatement BinaryOperation >= MemberReference args length Literal 1 BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args ReferenceType Closure BlockStatement IfStatement BinaryOperation != BinaryOperation - MemberReference args length Literal 1 Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator constructorArgs MethodInvocation ArrayUtils MemberReference args Literal 1 BinaryOperation - MemberReference args length Literal 1 subarray StatementExpression MethodInvocation MemberReference constructorArgs filterGStringReferences IfStatement MethodInvocation name MemberReference ANONYMOUS_BEAN equals StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference beanClass MethodInvocation Arrays MemberReference constructorArgs asList createSingletonBean = StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference name MemberReference beanClass MethodInvocation Arrays MemberReference constructorArgs asList addSingletonBean = End BlockStatement IfStatement MethodInvocation name MemberReference ANONYMOUS_BEAN equals StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference beanClass createSingletonBean = StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference name MemberReference beanClass addSingletonBean = End End BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator constructorArgs MethodInvocation ArrayUtils MemberReference args Literal 1 MemberReference args length subarray StatementExpression MethodInvocation MemberReference constructorArgs filterGStringReferences IfStatement MethodInvocation name MemberReference ANONYMOUS_BEAN equals StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference beanClass MethodInvocation Arrays MemberReference constructorArgs asList createSingletonBean = StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference name MemberReference beanClass MethodInvocation Arrays MemberReference constructorArgs asList addSingletonBean = End End End IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType RuntimeBeanReference BlockStatement StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference name addSingletonBean = StatementExpression MethodInvocation currentBeanConfig Cast ReferenceType RuntimeBeanReference MemberReference ArraySelector Literal 0 args setFactoryBean IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Map BlockStatement StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference name addSingletonBean = LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator factoryBeanEntry Cast ReferenceType Map ReferenceType Entry Cast ReferenceType Map MemberReference ArraySelector Literal 0 args StatementExpression MethodInvocation currentBeanConfig MethodInvocation factoryBeanEntry MethodInvocation toString getKey setFactoryBean StatementExpression MethodInvocation currentBeanConfig MethodInvocation factoryBeanEntry MethodInvocation toString getValue setFactoryMethod IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType Closure BlockStatement StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference name addAbstractBean = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator constructorArgs IfStatement BinaryOperation instanceof MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args ReferenceType Closure BlockStatement StatementExpression Assignment MemberReference constructorArgs MethodInvocation ArrayUtils MemberReference args Literal 0 BinaryOperation - MemberReference args length Literal 1 subarray = BlockStatement StatementExpression Assignment MemberReference constructorArgs MethodInvocation ArrayUtils MemberReference args Literal 0 MemberReference args length subarray = End StatementExpression MethodInvocation MemberReference constructorArgs filterGStringReferences StatementExpression Assignment MemberReference currentBeanConfig ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name Literal null MethodInvocation Arrays MemberReference constructorArgs asList = StatementExpression MethodInvocation springConfig MemberReference name MemberReference currentBeanConfig addBeanConfiguration End End End End IfStatement BinaryOperation instanceof MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args ReferenceType Closure BlockStatement LocalVariableDeclaration ReferenceType Closure VariableDeclarator callable Cast ReferenceType Closure MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args StatementExpression MethodInvocation callable This setDelegate StatementExpression MethodInvocation callable MemberReference Closure DELEGATE_FIRST setResolveStrategy StatementExpression MethodInvocation callable ArrayCreator ReferenceType Object ArrayInitializer MemberReference currentBeanConfig call End ReturnStatement MemberReference currentBeanConfig StatementExpression Assignment MemberReference currentBeanConfig MemberReference old = MethodDeclaration Modifier private filterGStringReferences FormalParameter ReferenceType Object constructorArgs ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference constructorArgs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator constructorArg MemberReference ArraySelector MemberReference i constructorArgs IfStatement BinaryOperation instanceof MemberReference constructorArg ReferenceType GString StatementExpression Assignment MemberReference ArraySelector MemberReference i constructorArgs MethodInvocation constructorArg toString = End End MethodDeclaration /**
	 * When an methods argument is only a closure it is a set of bean definitions
	 *
	 * @param callable The closure argument
	 */ Modifier public ReferenceType BeanBuilder beans FormalParameter ReferenceType Closure callable StatementExpression MethodInvocation callable This setDelegate StatementExpression MethodInvocation callable call StatementExpression MethodInvocation finalizeDeferredProperties ReturnStatement This MethodDeclaration /**
	 * This method overrides property setting in the scope of the BeanBuilder to set
	 * properties on the current BeanConfiguration
	 */ Modifier public setProperty FormalParameter ReferenceType String name FormalParameter ReferenceType Object value IfStatement BinaryOperation != MemberReference currentBeanConfig Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference value ReferenceType GString StatementExpression Assignment MemberReference value MethodInvocation value toString = End IfStatement MethodInvocation MemberReference currentBeanConfig MemberReference name MemberReference value addToDeferred BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference value ReferenceType Closure BlockStatement LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator current MemberReference currentBeanConfig TryStatement LocalVariableDeclaration ReferenceType Closure VariableDeclarator callable Cast ReferenceType Closure MemberReference value LocalVariableDeclaration ReferenceType Class VariableDeclarator parameterType MethodInvocation callable ArraySelector Literal 0 getParameterTypes IfStatement MethodInvocation parameterType ClassReference ReferenceType Object equals BlockStatement StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig Literal """" createSingletonBean = StatementExpression MethodInvocation callable ArrayCreator ReferenceType Object ArrayInitializer MemberReference currentBeanConfig call BlockStatement StatementExpression Assignment MemberReference currentBeanConfig MethodInvocation springConfig MemberReference parameterType createSingletonBean = StatementExpression MethodInvocation callable Literal null call End StatementExpression Assignment MemberReference value MethodInvocation currentBeanConfig getBeanDefinition = StatementExpression Assignment MemberReference currentBeanConfig MemberReference current = End End StatementExpression MethodInvocation currentBeanConfig MemberReference name MemberReference value addProperty BlockStatement StatementExpression MethodInvocation binding MemberReference name MemberReference value put End MethodDeclaration /**
	 * Checks whether there are any runtime refs inside a Map and converts
	 * it to a ManagedMap if necessary
	 *
	 * @param value The current map
	 * @return A ManagedMap or a normal map
	 */ Modifier private ReferenceType Object manageMapIfNecessary FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator map Cast ReferenceType Map MemberReference value LocalVariableDeclaration BasicType boolean VariableDeclarator containsRuntimeRefs Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType Object TypeArgument ReferenceType Object VariableDeclarator e MethodInvocation map entrySet BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation e getValue IfStatement BinaryOperation instanceof MemberReference v ReferenceType RuntimeBeanReference BlockStatement StatementExpression Assignment MemberReference containsRuntimeRefs Literal true = End IfStatement BinaryOperation instanceof MemberReference v ReferenceType BeanConfiguration BlockStatement LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator c Cast ReferenceType BeanConfiguration MemberReference v StatementExpression MethodInvocation e MethodInvocation c getBeanDefinition setValue StatementExpression Assignment MemberReference containsRuntimeRefs Literal true = End End IfStatement MemberReference containsRuntimeRefs BlockStatement LocalVariableDeclaration ReferenceType ManagedMap VariableDeclarator m ClassCreator ReferenceType ManagedMap StatementExpression MethodInvocation m MemberReference map putAll ReturnStatement MemberReference m End ReturnStatement MemberReference value MethodDeclaration /**
	 * Checks whether there are any runtime refs inside the list and
	 * converts it to a ManagedList if necessary
	 *
	 * @param value The object that represents the list
	 * @return Either a new list or a managed one
	 */ Modifier private ReferenceType Object manageListIfNecessary FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType List VariableDeclarator list Cast ReferenceType List MemberReference value LocalVariableDeclaration BasicType boolean VariableDeclarator containsRuntimeRefs Literal false ForStatement ForControl VariableDeclaration ReferenceType ListIterator VariableDeclarator i MethodInvocation list listIterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator e MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference e ReferenceType RuntimeBeanReference BlockStatement StatementExpression Assignment MemberReference containsRuntimeRefs Literal true = End IfStatement BinaryOperation instanceof MemberReference e ReferenceType BeanConfiguration BlockStatement LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator c Cast ReferenceType BeanConfiguration MemberReference e StatementExpression MethodInvocation i MethodInvocation c getBeanDefinition set StatementExpression Assignment MemberReference containsRuntimeRefs Literal true = End End IfStatement MemberReference containsRuntimeRefs BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator tmp ClassCreator ReferenceType ManagedList StatementExpression MethodInvocation tmp Cast ReferenceType List MemberReference value addAll StatementExpression Assignment MemberReference value MemberReference tmp = End ReturnStatement MemberReference value MethodDeclaration /**
	 * This method overrides property retrieval in the scope of the BeanBuilder to either:
	 *
	 * a) Retrieve a variable from the bean builder's binding if it exits
	 * b) Retrieve a RuntimeBeanReference for a specific bean if it exists
	 * c) Otherwise just delegate to super.getProperty which will resolve properties from the BeanBuilder itself
	 */ Modifier public ReferenceType Object getProperty FormalParameter ReferenceType String name IfStatement MethodInvocation binding MemberReference name containsKey BlockStatement ReturnStatement MethodInvocation binding MemberReference name get BlockStatement IfStatement MethodInvocation springConfig MemberReference name containsBean BlockStatement LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator beanConfig MethodInvocation springConfig MemberReference name getBeanConfig IfStatement BinaryOperation != MemberReference beanConfig Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ConfigurableRuntimeBeanReference MemberReference name MethodInvocation springConfig MemberReference name getBeanConfig Literal false ReturnStatement ClassCreator ReferenceType RuntimeBeanReference MemberReference name Literal false End IfStatement BinaryOperation != MemberReference currentBeanConfig Literal null BlockStatement IfStatement MethodInvocation currentBeanConfig MemberReference name hasProperty ReturnStatement MethodInvocation currentBeanConfig MemberReference name getPropertyValue BlockStatement LocalVariableDeclaration ReferenceType DeferredProperty VariableDeclarator dp MethodInvocation deferredProperties BinaryOperation + MethodInvocation currentBeanConfig getName MemberReference name get IfStatement BinaryOperation != MemberReference dp Literal null BlockStatement ReturnStatement MemberReference dp value BlockStatement ReturnStatement SuperMethodInvocation MemberReference name getProperty End End BlockStatement ReturnStatement SuperMethodInvocation MemberReference name getProperty End End End MethodDeclaration /**
	 * Sets the binding (the variables available in the scope of the BeanBuilder)
	 * @param b The Binding instance
	 */ Modifier public setBinding FormalParameter ReferenceType Binding b StatementExpression Assignment This MemberReference binding MethodInvocation b getVariables = ReferenceType GroovyObjectSupport",1
268,268,"CompilationUnit PackageDeclaration hudson.model Import net.sf.json.JSONObject Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.StaplerRequest Import hudson.Extension ClassDeclaration Modifier public RunParameterDefinition FieldDeclaration Modifier private final ReferenceType String VariableDeclarator projectName ConstructorDeclaration Modifier public Annotation DataBoundConstructor RunParameterDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType String projectName FormalParameter ReferenceType String description StatementExpression SuperConstructorInvocation MemberReference name MemberReference description StatementExpression Assignment This MemberReference projectName MemberReference projectName = MethodDeclaration Modifier public ReferenceType String getProjectName ReturnStatement MemberReference projectName MethodDeclaration Modifier public ReferenceType Job getProject ReturnStatement Cast ReferenceType Job MethodInvocation Hudson MethodInvocation MemberReference projectName getItem getInstance ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages RunParameterDefinition_DisplayName MethodDeclaration Modifier public Annotation Override ReferenceType String getHelpFile ReturnStatement Literal ""/help/parameter/run.html"" MethodDeclaration Modifier public Annotation Override ReferenceType ParameterDefinition newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement MethodInvocation req ClassReference ReferenceType RunParameterDefinition MemberReference formData bindJSON ReferenceType ParameterDescriptor MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue getDefaultParameterValue ReturnStatement ClassCreator ReferenceType RunParameterValue MethodInvocation getName MethodInvocation MethodInvocation getLastBuild MethodInvocation getExternalizableId getProject MethodInvocation getDescription MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject jo LocalVariableDeclaration ReferenceType RunParameterValue VariableDeclarator value MethodInvocation req ClassReference ReferenceType RunParameterValue MemberReference jo bindJSON StatementExpression MethodInvocation value MethodInvocation getDescription setDescription ReturnStatement MemberReference value MethodDeclaration Modifier public Annotation Override ReferenceType ParameterValue createValue FormalParameter ReferenceType StaplerRequest req LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation req MethodInvocation getName getParameterValues IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement MethodInvocation getDefaultParameterValue IfStatement BinaryOperation != MemberReference value length Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Illegal number of parameter values for "" MethodInvocation getName Literal "": "" MemberReference value length BlockStatement ReturnStatement ClassCreator ReferenceType RunParameterValue MethodInvocation getName MemberReference ArraySelector Literal 0 value MethodInvocation getDescription End End ReferenceType ParameterDefinition",0
560,560,,1
37,37,"CompilationUnit PackageDeclaration hudson.os Import org.jruby.ext.posix.POSIX Import org.jruby.ext.posix.POSIXFactory Import org.jruby.ext.posix.POSIXHandler Import org.jruby.ext.posix.POSIX.ERRORS Import java.io.File Import java.io.InputStream Import java.io.PrintStream Import java.util.logging.Logger ClassDeclaration Modifier public /**
 * POSIX API wrapper.
 * 
 * @author Kohsuke Kawaguchi
 */ PosixAPI MethodDeclaration Modifier public static ReferenceType POSIX get ReturnStatement MemberReference posix FieldDeclaration Modifier private final static ReferenceType POSIX VariableDeclarator posix MethodInvocation POSIXFactory ClassCreator ReferenceType POSIXHandler MethodDeclaration Modifier public error FormalParameter ReferenceType ERRORS errors FormalParameter ReferenceType String s ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + MemberReference s Literal "" "" MemberReference errors MethodDeclaration Modifier public unimplementedError FormalParameter ReferenceType String s ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MemberReference s MethodDeclaration Modifier public warn FormalParameter ReferenceType WARNING_ID warning_id FormalParameter ReferenceType String s FormalParameter ReferenceType Object objects  StatementExpression MethodInvocation LOGGER MemberReference s fine MethodDeclaration Modifier public BasicType boolean isVerbose ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType File getCurrentWorkingDirectory ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType String getEnv ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType InputStream getInputStream ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType PrintStream getOutputStream ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public BasicType int getPID ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType PrintStream getErrorStream ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal true getPOSIX FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType PosixAPI getLogger",0
57,57,"CompilationUnit PackageDeclaration hudson.model Import hudson.Util.combine  Import hudson.AbortException Import hudson.BulkChange Import hudson.CloseProofOutputStream Import hudson.EnvVars Import hudson.ExtensionPoint Import hudson.FeedAdapter Import hudson.FilePath Import hudson.Util Import hudson.XmlFile Import hudson.matrix.MatrixBuild Import hudson.matrix.MatrixRun Import hudson.model.listeners.RunListener Import hudson.search.SearchIndexBuilder Import hudson.security.ACL Import hudson.security.AccessControlled Import hudson.security.Permission Import hudson.security.PermissionGroup Import hudson.tasks.LogRotator Import hudson.tasks.Mailer Import hudson.tasks.test.AbstractTestResultAction Import hudson.util.IOException2 Import hudson.util.LogTaskListener Import hudson.util.XStream2 Import hudson.util.ProcessTreeKiller Import java.io.BufferedReader Import java.io.File Import java.io.FileInputStream Import java.io.FileOutputStream Import java.io.FileReader Import java.io.IOException Import java.io.InputStreamReader Import java.io.PrintStream Import java.io.PrintWriter Import java.io.Reader Import java.io.Writer Import java.nio.charset.Charset Import java.text.DateFormat Import java.text.ParseException Import java.text.SimpleDateFormat Import java.util.ArrayList Import java.util.Calendar Import java.util.Collections Import java.util.Comparator Import java.util.Date Import java.util.GregorianCalendar Import java.util.HashMap Import java.util.LinkedList Import java.util.List Import java.util.Locale Import java.util.Map Import java.util.logging.Level Import java.util.logging.Logger Import java.util.zip.GZIPInputStream Import javax.servlet.ServletException Import javax.servlet.http.HttpServletResponse Import org.kohsuke.stapler.QueryParameter Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import org.kohsuke.stapler.framework.io.LargeText Import com.thoughtworks.xstream.XStream ClassDeclaration Modifier public abstract Annotation ExportedBean /**
 * A particular execution of {@link Job}.
 *
 * <p>
 * Custom {@link Run} type is always used in conjunction with
 * a custom {@link Job} type, so there's no separate registration
 * mechanism for custom {@link Run} types.
 *
 * @author Kohsuke Kawaguchi
 * @see RunListener
 */ Run FieldDeclaration Modifier final protected transient ReferenceType JobT VariableDeclarator project FieldDeclaration /**
     * Build number.
     *
     * <p>
     * In earlier versions &lt; 1.24, this number is not unique nor continuous,
     * but going forward, it will, and this really replaces the build id.
     */ Modifier public BasicType int VariableDeclarator number FieldDeclaration /**
     * Previous build. Can be null.
     * These two fields are maintained and updated by {@link RunMap}.
     */ Modifier protected transient volatile ReferenceType RunT VariableDeclarator previousBuild FieldDeclaration /**
     * Next build. Can be null.
     */ Modifier protected transient volatile ReferenceType RunT VariableDeclarator nextBuild FieldDeclaration /**
     * When the build is scheduled.
     */ Modifier final protected transient BasicType long VariableDeclarator timestamp FieldDeclaration /**
     * The build result.
     * This value may change while the state is in {@link State#BUILDING}.
     */ Modifier protected volatile ReferenceType Result VariableDeclarator result FieldDeclaration /**
     * Human-readable description. Can be null.
     */ Modifier protected volatile ReferenceType String VariableDeclarator description FieldDeclaration /**
     * The current build state.
     */ Modifier protected transient volatile ReferenceType State VariableDeclarator state EnumDeclaration Modifier private static State EnumBody EnumConstantDeclaration /**
         * Build is created/queued but we haven't started building it.
         */ NOT_STARTED EnumConstantDeclaration /**
         * Build is in progress.
         */ BUILDING EnumConstantDeclaration /**
         * Build is completed now, and the status is determined,
         * but log files are still being updated.
         */ POST_PRODUCTION EnumConstantDeclaration /**
         * Build is completed now, and log file is closed.
         */ COMPLETED FieldDeclaration /**
     * Number of milli-seconds it took to run this build.
     */ Modifier protected BasicType long VariableDeclarator duration FieldDeclaration /**
     * Charset in which the log file is written.
     * For compatibility reason, this field may be null.
     * For persistence, this field is string and not {@link Charset}.
     *
     * @see #getCharset()
     * @since 1.257
     */ Modifier protected ReferenceType String VariableDeclarator charset FieldDeclaration /**
     * Keeps this log entries.
     */ Modifier private BasicType boolean VariableDeclarator keepLog FieldDeclaration Modifier final protected static ReferenceType ThreadLocal TypeArgument ReferenceType SimpleDateFormat VariableDeclarator ID_FORMATTER ClassCreator ReferenceType ThreadLocal TypeArgument ReferenceType SimpleDateFormat MethodDeclaration Modifier protected Annotation Override ReferenceType SimpleDateFormat initialValue ReturnStatement ClassCreator ReferenceType SimpleDateFormat Literal ""yyyy-MM-dd_HH-mm-ss"" ConstructorDeclaration Modifier protected /**
     * Creates a new {@link Run}.
     */ Run FormalParameter ReferenceType JobT job IOException StatementExpression ExplicitConstructorInvocation MemberReference job ClassCreator ReferenceType GregorianCalendar StatementExpression Assignment This MemberReference number MethodInvocation project assignBuildNumber = ConstructorDeclaration Modifier protected /**
     * Constructor for creating a {@link Run} object in
     * an arbitrary state.
     */ Run FormalParameter ReferenceType JobT job FormalParameter ReferenceType Calendar timestamp StatementExpression ExplicitConstructorInvocation MemberReference job MethodInvocation timestamp getTimeInMillis ConstructorDeclaration Modifier protected Run FormalParameter ReferenceType JobT job FormalParameter BasicType long timestamp StatementExpression Assignment This MemberReference project MemberReference job = StatementExpression Assignment This MemberReference timestamp MemberReference timestamp = StatementExpression Assignment This MemberReference state MemberReference State NOT_STARTED = ConstructorDeclaration Modifier protected /**
     * Loads a run from a log file.
     */ Run FormalParameter ReferenceType JobT project FormalParameter ReferenceType File buildDir IOException StatementExpression ExplicitConstructorInvocation MemberReference project MethodInvocation MemberReference buildDir parseTimestampFromBuildDir StatementExpression Assignment This MemberReference state MemberReference State COMPLETED = StatementExpression Assignment This MemberReference result MemberReference Result FAILURE = StatementExpression MethodInvocation MethodInvocation This unmarshal getDataFile MethodDeclaration Modifier static BasicType long parseTimestampFromBuildDir FormalParameter ReferenceType File buildDir IOException TryStatement ReturnStatement MethodInvocation ID_FORMATTER MethodInvocation MethodInvocation buildDir getName parse MethodInvocation getTime get CatchClause CatchClauseParameter ParseException e ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + Literal ""Invalid directory name "" MemberReference buildDir MemberReference e CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + Literal ""Invalid directory name "" MemberReference buildDir MemberReference e MethodDeclaration /**
     * Ordering based on build numbers.
     */ Modifier public BasicType int compareTo FormalParameter ReferenceType RunT that ReturnStatement BinaryOperation - This MemberReference number MemberReference that number MethodDeclaration /**
     * Returns the build result.
     *
     * <p>
     * When a build is {@link #isBuilding() in progress}, this method
     * may return null or a temporary intermediate result.
     */ Modifier public Annotation Exported ReferenceType Result getResult ReturnStatement MemberReference result MethodDeclaration Modifier public setResult FormalParameter ReferenceType Result r AssertStatement BinaryOperation == MemberReference state MemberReference State BUILDING LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator caller MethodInvocation MethodInvocation Thread MethodInvocation getStackTrace currentThread Literal ""setResult"" findCaller IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MemberReference r = StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation toString Literal "" : result is set to "" MemberReference r Literal "" by "" MemberReference caller fine BlockStatement IfStatement MethodInvocation r MemberReference result isWorseThan BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation toString Literal "" : result is set to "" MemberReference r Literal "" by "" MemberReference caller fine StatementExpression Assignment MemberReference result MemberReference r = End End MethodDeclaration /**
     * Gets the subset of {@link #getActions()} that consists of {@link BuildBadgeAction}s.
     */ Modifier public ReferenceType List TypeArgument ReferenceType BuildBadgeAction getBadgeActions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType BuildBadgeAction VariableDeclarator r Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation getActions BlockStatement IfStatement BinaryOperation instanceof MemberReference a ReferenceType BuildBadgeAction BlockStatement IfStatement BinaryOperation == MemberReference r Literal null StatementExpression Assignment MemberReference r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType BuildBadgeAction = End StatementExpression MethodInvocation r Cast ReferenceType BuildBadgeAction MemberReference a add End End IfStatement MethodInvocation isKeepLog BlockStatement IfStatement BinaryOperation == MemberReference r Literal null StatementExpression Assignment MemberReference r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType BuildBadgeAction = End StatementExpression MethodInvocation r ClassCreator ReferenceType KeepLogBuildBadge add End IfStatement BinaryOperation == MemberReference r Literal null ReturnStatement MethodInvocation Collections emptyList ReturnStatement MemberReference r End MethodDeclaration Modifier private ReferenceType StackTraceElement findCaller FormalParameter ReferenceType StackTraceElement stackTrace FormalParameter ReferenceType String callee ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MemberReference stackTrace length Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator e MemberReference ArraySelector MemberReference i stackTrace IfStatement MethodInvocation e MethodInvocation MemberReference callee equals getMethodName ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 stackTrace End End ReturnStatement Literal null MethodDeclaration /**
     * Returns true if the build is not completed yet.
     * This includes ""not started yet"" state.
     */ Modifier public Annotation Exported BasicType boolean isBuilding ReturnStatement BinaryOperation < MethodInvocation state MemberReference State POST_PRODUCTION compareTo Literal 0 MethodDeclaration /**
     * Returns true if the log file is still being updated.
     */ Modifier public BasicType boolean isLogUpdated ReturnStatement BinaryOperation < MethodInvocation state MemberReference State COMPLETED compareTo Literal 0 MethodDeclaration /**
     * Gets the {@link Executor} building this job, if it's being built.
     * Otherwise null.
     */ Modifier public ReferenceType Executor getExecutor ForStatement EnhancedForControl VariableDeclaration ReferenceType Computer VariableDeclarator c MethodInvocation Hudson MethodInvocation getComputers getInstance BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Executor VariableDeclarator e MethodInvocation c getExecutors BlockStatement IfStatement BinaryOperation == MethodInvocation e getCurrentExecutable This ReturnStatement MemberReference e End End End ReturnStatement Literal null MethodDeclaration /**
     * Gets the charset in which the log file is written.
     * @return never null.
     * @since 1.257
     */ Modifier public final ReferenceType Charset getCharset IfStatement BinaryOperation == MemberReference charset Literal null ReturnStatement MethodInvocation Charset defaultCharset End ReturnStatement MethodInvocation Charset MemberReference charset forName MethodDeclaration /**
     * Returns true if this log file should be kept and not deleted.
     *
     * This is used as a signal to the {@link LogRotator}.
     */ Modifier public final Annotation Exported BasicType boolean isKeepLog ReturnStatement BinaryOperation != MethodInvocation getWhyKeepLog Literal null MethodDeclaration /**
     * If {@link #isKeepLog()} returns true, returns a human readable
     * one-line string that explains why it's being kept.
     */ Modifier public ReferenceType String getWhyKeepLog IfStatement MemberReference keepLog ReturnStatement MethodInvocation Messages Run_MarkedExplicitly End ReturnStatement Literal null MethodDeclaration /**
     * The project this build is for.
     */ Modifier public ReferenceType JobT getParent ReturnStatement MemberReference project MethodDeclaration /**
     * When the build is scheduled.
     */ Modifier public Annotation Exported ReferenceType Calendar getTimestamp LocalVariableDeclaration ReferenceType GregorianCalendar VariableDeclarator c ClassCreator ReferenceType GregorianCalendar StatementExpression MethodInvocation c MemberReference timestamp setTimeInMillis ReturnStatement MemberReference c MethodDeclaration Modifier public Annotation Exported ReferenceType String getDescription ReturnStatement MemberReference description MethodDeclaration /**
     * Returns the length-limited description.
     * @return The length-limited description.
     */ Modifier public ReferenceType String getTruncatedDescription LocalVariableDeclaration Modifier final BasicType int VariableDeclarator maxDescrLength Literal 100 IfStatement BinaryOperation || BinaryOperation == MemberReference description Literal null BinaryOperation < MethodInvocation description length MemberReference maxDescrLength BlockStatement ReturnStatement MemberReference description End LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator ending Literal ""..."" LocalVariableDeclaration BasicType int VariableDeclarator sz MethodInvocation description length LocalVariableDeclaration BasicType boolean VariableDeclarator inTag Literal false LocalVariableDeclaration BasicType int VariableDeclarator displayChars Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator lastTruncatablePoint Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference sz MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation description MemberReference i charAt IfStatement BinaryOperation == MemberReference ch Literal '<' BlockStatement StatementExpression Assignment MemberReference inTag Literal true = IfStatement BinaryOperation == MemberReference ch Literal '>' BlockStatement StatementExpression Assignment MemberReference inTag Literal false = IfStatement BinaryOperation <= MemberReference displayChars BinaryOperation - MemberReference maxDescrLength MethodInvocation ending length BlockStatement StatementExpression Assignment MemberReference lastTruncatablePoint BinaryOperation + MemberReference i Literal 1 = End End End IfStatement MemberReference ! inTag BlockStatement StatementExpression MemberReference ++ displayChars IfStatement BinaryOperation <= MemberReference displayChars BinaryOperation - MemberReference maxDescrLength MethodInvocation ending length BlockStatement IfStatement BinaryOperation == MemberReference ch Literal ' ' BlockStatement StatementExpression Assignment MemberReference lastTruncatablePoint MemberReference i = End End End End LocalVariableDeclaration ReferenceType String VariableDeclarator truncDesc MemberReference description IfStatement BinaryOperation >= MemberReference displayChars MemberReference maxDescrLength BlockStatement StatementExpression Assignment MemberReference truncDesc BinaryOperation + MethodInvocation truncDesc Literal 0 MemberReference lastTruncatablePoint substring MemberReference ending = End ReturnStatement MemberReference truncDesc MethodDeclaration /**
     * Gets the string that says how long since this build has started.
     *
     * @return
     *      string like ""3 minutes"" ""1 day"" etc.
     */ Modifier public ReferenceType String getTimestampString LocalVariableDeclaration BasicType long VariableDeclarator duration BinaryOperation - ClassCreator MethodInvocation getTimeInMillis ReferenceType GregorianCalendar MemberReference timestamp ReturnStatement MethodInvocation Util MemberReference duration getPastTimeString MethodDeclaration /**
     * Returns the timestamp formatted in xs:dateTime.
     */ Modifier public ReferenceType String getTimestampString2 ReturnStatement MethodInvocation Util.XS_DATETIME_FORMATTER ClassCreator ReferenceType Date MemberReference timestamp format MethodDeclaration /**
     * Gets the string that says how long the build took to run.
     */ Modifier public ReferenceType String getDurationString IfStatement MethodInvocation isBuilding ReturnStatement BinaryOperation + MethodInvocation Util BinaryOperation - MethodInvocation System currentTimeMillis MemberReference timestamp getTimeSpanString Literal "" and counting"" End ReturnStatement MethodInvocation Util MemberReference duration getTimeSpanString MethodDeclaration /**
     * Gets the millisecond it took to build.
     */ Modifier public Annotation Exported BasicType long getDuration ReturnStatement MemberReference duration MethodDeclaration /**
     * Gets the icon color for display.
     */ Modifier public ReferenceType BallColor getIconColor IfStatement MethodInvocation ! isBuilding BlockStatement ReturnStatement MethodInvocation MemberReference color getResult End LocalVariableDeclaration ReferenceType BallColor VariableDeclarator baseColor IfStatement BinaryOperation == MemberReference previousBuild Literal null StatementExpression Assignment MemberReference baseColor MemberReference BallColor GREY = StatementExpression Assignment MemberReference baseColor MethodInvocation previousBuild getIconColor = End ReturnStatement MethodInvocation baseColor anime MethodDeclaration /**
     * Returns true if the build is still queued and hasn't started yet.
     */ Modifier public BasicType boolean hasntStartedYet ReturnStatement BinaryOperation == MemberReference state MemberReference State NOT_STARTED MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getFullDisplayName MethodDeclaration Modifier public Annotation Exported ReferenceType String getFullDisplayName ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation project getFullDisplayName Literal "" #"" MemberReference number MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement BinaryOperation + Literal ""#"" MemberReference number MethodDeclaration Modifier public Annotation Exported ElementValuePair visibility Literal 2 BasicType int getNumber ReturnStatement MemberReference number MethodDeclaration Modifier public ReferenceType RunT getPreviousBuild ReturnStatement MemberReference previousBuild MethodDeclaration /**
     * Returns the last build that didn't fail before this build.
     */ Modifier public ReferenceType RunT getPreviousNotFailedBuild LocalVariableDeclaration ReferenceType RunT VariableDeclarator r MemberReference previousBuild WhileStatement BinaryOperation && BinaryOperation != MemberReference r Literal null BinaryOperation == MethodInvocation r getResult MemberReference Result FAILURE StatementExpression Assignment MemberReference r MemberReference r previousBuild = End ReturnStatement MemberReference r MethodDeclaration /**
     * Returns the last failed build before this build.
     */ Modifier public ReferenceType RunT getPreviousFailedBuild LocalVariableDeclaration ReferenceType RunT VariableDeclarator r MemberReference previousBuild WhileStatement BinaryOperation && BinaryOperation != MemberReference r Literal null BinaryOperation != MethodInvocation r getResult MemberReference Result FAILURE StatementExpression Assignment MemberReference r MemberReference r previousBuild = End ReturnStatement MemberReference r MethodDeclaration Modifier public ReferenceType RunT getNextBuild ReturnStatement MemberReference nextBuild MethodDeclaration /**
     * Returns the URL of this {@link Run}, relative to the context root of Hudson.
     *
     * @return
     *      String like ""job/foo/32/"" with trailing slash but no leading slash. 
     */ Modifier public ReferenceType String getUrl ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation project getUrl MethodInvocation getNumber Literal '/' MethodDeclaration /**
     * Obtains the absolute URL to this build.
     *
     * @deprecated
     *      This method shall <b>NEVER</b> be used during HTML page rendering, as it won't work with
     *      network set up like Apache reverse proxy.
     *      This method is only intended for the remote API clients who cannot resolve relative references
     *      (even this won't work for the same reason, which should be fixed.)
     */ Modifier public final Annotation Exported ElementValuePair visibility Literal 2 ElementValuePair name Literal ""url"" ReferenceType String getAbsoluteUrl ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation project getAbsoluteUrl MethodInvocation getNumber Literal '/' MethodDeclaration Modifier public final ReferenceType String getSearchUrl ReturnStatement BinaryOperation + MethodInvocation getNumber Literal ""/"" MethodDeclaration /**
     * Unique ID of this build.
     */ Modifier public ReferenceType String getId ReturnStatement MethodInvocation ID_FORMATTER MethodInvocation ClassCreator ReferenceType Date MemberReference timestamp format get MethodDeclaration Modifier public ReferenceType Descriptor getDescriptorByName FormalParameter ReferenceType String className ReturnStatement MethodInvocation Hudson MethodInvocation MemberReference className getDescriptorByName getInstance MethodDeclaration /**
     * Root directory of this {@link Run} on the master.
     *
     * Files related to this {@link Run} should be stored below this directory.
     */ Modifier public ReferenceType File getRootDir LocalVariableDeclaration ReferenceType File VariableDeclarator f ClassCreator ReferenceType File MethodInvocation project getBuildDir MethodInvocation getId StatementExpression MethodInvocation f mkdirs ReturnStatement MemberReference f MethodDeclaration /**
     * Gets the directory where the artifacts are archived.
     */ Modifier public ReferenceType File getArtifactsDir ReturnStatement ClassCreator ReferenceType File MethodInvocation getRootDir Literal ""archive"" MethodDeclaration /**
     * Gets the first {@value #CUTOFF} artifacts (relative to {@link #getArtifactsDir()}.
     */ Modifier public Annotation Exported ReferenceType List TypeArgument ReferenceType Artifact getArtifacts LocalVariableDeclaration ReferenceType ArtifactList VariableDeclarator r ClassCreator ReferenceType ArtifactList StatementExpression MethodInvocation MethodInvocation getArtifactsDir Literal """" Literal """" MemberReference r addArtifacts StatementExpression MethodInvocation r computeDisplayName ReturnStatement MemberReference r MethodDeclaration /**
     * Returns true if this run has any artifacts.
     *
     * <p>
     * The strange method name is so that we can access it from EL.
     */ Modifier public BasicType boolean getHasArtifacts ReturnStatement MethodInvocation ! MethodInvocation isEmpty getArtifacts MethodDeclaration Modifier private addArtifacts FormalParameter ReferenceType File dir FormalParameter ReferenceType String path FormalParameter ReferenceType String pathHref FormalParameter ReferenceType List TypeArgument ReferenceType Artifact r LocalVariableDeclaration ReferenceType String VariableDeclarator children MethodInvocation dir list IfStatement BinaryOperation == MemberReference children Literal null ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator child MemberReference children BlockStatement IfStatement BinaryOperation > MethodInvocation r size MemberReference CUTOFF ReturnStatement End LocalVariableDeclaration ReferenceType File VariableDeclarator sub ClassCreator ReferenceType File MemberReference dir MemberReference child IfStatement MethodInvocation sub isDirectory BlockStatement StatementExpression MethodInvocation MemberReference sub BinaryOperation + BinaryOperation + MemberReference path MemberReference child Literal '/' BinaryOperation + BinaryOperation + MemberReference pathHref MethodInvocation Util MemberReference child rawEncode Literal '/' MemberReference r addArtifacts BlockStatement StatementExpression MethodInvocation r ClassCreator ReferenceType Artifact BinaryOperation + MemberReference path MemberReference child BinaryOperation + MemberReference pathHref MethodInvocation Util MemberReference child rawEncode add End End FieldDeclaration Modifier private final static BasicType int VariableDeclarator CUTOFF Literal 17 ClassDeclaration Modifier public final ArtifactList MethodDeclaration Modifier public computeDisplayName IfStatement BinaryOperation > MethodInvocation size MemberReference CUTOFF ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator maxDepth Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator len ArrayCreator BasicType int MethodInvocation size LocalVariableDeclaration ReferenceType String VariableDeclarator tokens ArrayCreator ReferenceType String MethodInvocation size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tokens length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i tokens MethodInvocation MemberReference relativePath MethodInvocation Literal ""[\\\\/]+"" split MemberReference i get = StatementExpression Assignment MemberReference maxDepth MethodInvocation Math MemberReference maxDepth MemberReference ArraySelector MemberReference i MemberReference length tokens max = StatementExpression Assignment MemberReference ArraySelector MemberReference i len Literal 1 = End LocalVariableDeclaration BasicType boolean VariableDeclarator collision LocalVariableDeclaration BasicType int VariableDeclarator depth Literal 0 DoStatement BinaryOperation && MemberReference collision BinaryOperation < MemberReference ++ depth MemberReference maxDepth BlockStatement StatementExpression Assignment MemberReference collision Literal false = LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Integer VariableDeclarator names ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Integer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tokens length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MemberReference ArraySelector MemberReference i tokens LocalVariableDeclaration ReferenceType String VariableDeclarator displayName MethodInvocation MemberReference token MemberReference ArraySelector MemberReference i len combineLast LocalVariableDeclaration ReferenceType Integer VariableDeclarator j MethodInvocation names MemberReference displayName MemberReference i put IfStatement BinaryOperation != MemberReference j Literal null BlockStatement StatementExpression Assignment MemberReference collision Literal true = IfStatement BinaryOperation >= MemberReference j Literal 0 StatementExpression MemberReference ++ ArraySelector MemberReference j len End StatementExpression MemberReference ++ ArraySelector MemberReference i len StatementExpression MethodInvocation names MemberReference displayName Literal - 1 put End End End ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tokens length MemberReference ++ i StatementExpression Assignment MethodInvocation MemberReference displayPath MemberReference i get MethodInvocation MemberReference ArraySelector MemberReference i tokens MemberReference ArraySelector MemberReference i len combineLast = End MethodDeclaration /**
         * Combines last N token into the ""a/b/c"" form.
         */ Modifier private ReferenceType String combineLast FormalParameter ReferenceType String token FormalParameter BasicType int n LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation Math Literal 0 BinaryOperation - MemberReference token length MemberReference n max BinaryOperation < MemberReference i MemberReference token length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal '/' append End StatementExpression MethodInvocation buf MemberReference ArraySelector MemberReference i token append End ReturnStatement MethodInvocation buf toString ReferenceType ArrayList TypeArgument ReferenceType Artifact ClassDeclaration Modifier public Annotation ExportedBean /**
     * A build artifact.
     */ Artifact FieldDeclaration /**
         * Relative path name from {@link Run#getArtifactsDir()}
         */ Modifier public final Annotation Exported ElementValuePair visibility Literal 3 ReferenceType String VariableDeclarator relativePath FieldDeclaration /**
         * Truncated form of {@link #relativePath} just enough
         * to disambiguate {@link Artifact}s.
         */ ReferenceType String VariableDeclarator displayPath FieldDeclaration Modifier private ReferenceType String VariableDeclarator href ConstructorDeclaration Artifact FormalParameter ReferenceType String relativePath FormalParameter ReferenceType String href StatementExpression Assignment This MemberReference relativePath MemberReference relativePath = StatementExpression Assignment This MemberReference href MemberReference href = MethodDeclaration /**
         * Gets the artifact file.
         */ Modifier public ReferenceType File getFile ReturnStatement ClassCreator ReferenceType File MethodInvocation getArtifactsDir MemberReference relativePath MethodDeclaration /**
         * Returns just the file name portion, without the path.
         */ Modifier public Annotation Exported ElementValuePair visibility Literal 3 ReferenceType String getFileName ReturnStatement MethodInvocation MethodInvocation getName getFile MethodDeclaration Modifier public Annotation Exported ElementValuePair visibility Literal 3 ReferenceType String getDisplayPath ReturnStatement MemberReference displayPath MethodDeclaration Modifier public ReferenceType String getHref ReturnStatement MemberReference href MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference relativePath MethodDeclaration /**
     * Returns the log file.
     */ Modifier public ReferenceType File getLogFile ReturnStatement ClassCreator ReferenceType File MethodInvocation getRootDir Literal ""log"" MethodDeclaration /**
     * Returns a Reader that reads from the log file.
     * It will use a gzip-compressed log file (log.gz) if that exists.
     * @throws IOException 
     * @return a reader from the log file, or null if none exists
     */ Modifier public ReferenceType Reader getLogReader IOException LocalVariableDeclaration ReferenceType File VariableDeclarator logFile MethodInvocation getLogFile IfStatement MethodInvocation logFile exists BlockStatement ReturnStatement ClassCreator ReferenceType FileReader MemberReference logFile End LocalVariableDeclaration ReferenceType File VariableDeclarator compressedLogFile ClassCreator ReferenceType File MethodInvocation logFile getParentFile BinaryOperation + MethodInvocation logFile getName Literal "".gz"" IfStatement MethodInvocation compressedLogFile exists BlockStatement ReturnStatement ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType GZIPInputStream ClassCreator ReferenceType FileInputStream MemberReference compressedLogFile End ReturnStatement Literal null MethodDeclaration Modifier protected ReferenceType SearchIndexBuilder makeSearchIndex LocalVariableDeclaration ReferenceType SearchIndexBuilder VariableDeclarator builder SuperMethodInvocation MethodInvocation Literal ""console"" add MethodInvocation Literal ""changes"" add makeSearchIndex ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation getActions BlockStatement IfStatement BinaryOperation != MethodInvocation a getIconFileName Literal null StatementExpression MethodInvocation builder MethodInvocation a getUrlName add End End ReturnStatement MemberReference builder MethodDeclaration Modifier public ReferenceType Api getApi ReturnStatement ClassCreator ReferenceType Api This MethodDeclaration Modifier public checkPermission FormalParameter ReferenceType Permission p StatementExpression MethodInvocation MethodInvocation MemberReference p checkPermission getACL MethodDeclaration Modifier public BasicType boolean hasPermission FormalParameter ReferenceType Permission p ReturnStatement MethodInvocation MethodInvocation MemberReference p hasPermission getACL MethodDeclaration Modifier public ReferenceType ACL getACL ReturnStatement MethodInvocation MethodInvocation getACL getParent MethodDeclaration /**
     * Deletes this build and its entire log
     *
     * @throws IOException
     *      if we fail to delete.
     */ Modifier public synchronized delete IOException StatementExpression MethodInvocation RunListener This fireDeleted LocalVariableDeclaration ReferenceType File VariableDeclarator link ClassCreator ReferenceType File MethodInvocation project getBuildDir MethodInvocation String MethodInvocation getNumber valueOf StatementExpression MethodInvocation link delete LocalVariableDeclaration ReferenceType File VariableDeclarator rootDir MethodInvocation getRootDir LocalVariableDeclaration ReferenceType File VariableDeclarator tmp ClassCreator ReferenceType File MethodInvocation rootDir getParentFile BinaryOperation + Literal '.' MethodInvocation rootDir getName LocalVariableDeclaration BasicType boolean VariableDeclarator renamingSucceeded MethodInvocation rootDir MemberReference tmp renameTo StatementExpression MethodInvocation Util MemberReference tmp deleteRecursive IfStatement MethodInvocation tmp exists StatementExpression MethodInvocation tmp deleteOnExit End IfStatement MemberReference ! renamingSucceeded ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + MemberReference rootDir Literal "" is in use"" End StatementExpression MethodInvocation removeRunFromParent MethodDeclaration Modifier private Annotation SuppressWarnings Literal ""unchecked"" removeRunFromParent StatementExpression MethodInvocation MethodInvocation Cast ReferenceType RunT This removeRun getParent InterfaceDeclaration Modifier protected static Runner MethodDeclaration /**
         * Performs the main build and returns the status code.
         *
         * @throws Exception
         *      exception will be recorded and the build will be considered a failure.
         */ ReferenceType Result run FormalParameter ReferenceType BuildListener listener Exception RunnerAbortedException MethodDeclaration /**
         * Performs the post-build action.
         * <p>
         * This method is called after the status of the build is determined.
         * This is a good opportunity to do notifications based on the result
         * of the build. When this method is called, the build is not really
         * finalized yet, and the build is still considered in progress --- for example,
         * even if the build is successful, this build still won't be picked up
         * by {@link Job#getLastSuccessfulBuild()}.
         */ post FormalParameter ReferenceType BuildListener listener Exception MethodDeclaration /**
         * Performs final clean up action.
         * <p>
         * This method is called after {@link #post(BuildListener)},
         * after the build result is fully finalized. This is the point
         * where the build is already considered completed.
         * <p>
         * Among other things, this is often a necessary pre-condition
         * before invoking other builds that depend on this build.
         */ cleanUp FormalParameter ReferenceType BuildListener listener Exception ClassDeclaration Modifier public final static /**
     * Used in {@link Runner#run} to indicates that a fatal error in a build
     * is reported to {@link BuildListener} and the build should be simply aborted
     * without further recording a stack trace.
     */ RunnerAbortedException ReferenceType RuntimeException MethodDeclaration Modifier final protected run FormalParameter ReferenceType Runner job IfStatement BinaryOperation != MemberReference result Literal null ReturnStatement End LocalVariableDeclaration ReferenceType BuildListener VariableDeclarator listener Literal null LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator log Literal null StatementExpression MethodInvocation onStartBuilding TryStatement LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System currentTimeMillis TryStatement TryStatement StatementExpression Assignment MemberReference log ClassCreator ReferenceType PrintStream ClassCreator ReferenceType FileOutputStream MethodInvocation getLogFile = LocalVariableDeclaration ReferenceType Charset VariableDeclarator charset MethodInvocation Computer MethodInvocation getDefaultCharset currentComputer StatementExpression Assignment This MemberReference charset MethodInvocation charset name = StatementExpression Assignment MemberReference listener ClassCreator ReferenceType StreamBuildListener ClassCreator ReferenceType PrintStream ClassCreator ReferenceType CloseProofOutputStream MemberReference log MemberReference charset = LocalVariableDeclaration ReferenceType CauseAction VariableDeclarator causeAction MethodInvocation ClassReference ReferenceType CauseAction getAction StatementExpression MethodInvocation listener TernaryExpression BinaryOperation != MemberReference causeAction Literal null MethodInvocation causeAction getCauses Literal null started StatementExpression MethodInvocation RunListener This MemberReference listener fireStarted StatementExpression MethodInvocation Util MethodInvocation MethodInvocation getBuildDir getParent MethodInvocation getId MethodInvocation String MethodInvocation getNumber valueOf MemberReference listener createSymlink StatementExpression MethodInvocation MethodInvocation job MemberReference listener run setResult StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + MethodInvocation toString Literal "" main build action completed: "" MemberReference result info CatchClause CatchClauseParameter ThreadDeath t ThrowStatement MemberReference t CatchClause CatchClauseParameter AbortException e StatementExpression Assignment MemberReference result MemberReference Result FAILURE = CatchClause CatchClauseParameter RunnerAbortedException e StatementExpression Assignment MemberReference result MemberReference Result FAILURE = CatchClause CatchClauseParameter InterruptedException e StatementExpression Assignment MemberReference result MemberReference Result ABORTED = StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages Run_BuildAborted println getLogger StatementExpression MethodInvocation LOGGER MemberReference Level INFO BinaryOperation + MethodInvocation toString Literal "" aborted"" MemberReference e log CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation MemberReference listener MemberReference e handleFatalBuildProblem StatementExpression Assignment MemberReference result MemberReference Result FAILURE = StatementExpression MethodInvocation job MemberReference listener post CatchClause CatchClauseParameter ThreadDeath t ThrowStatement MemberReference t CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation MemberReference listener MemberReference e handleFatalBuildProblem StatementExpression Assignment MemberReference result MemberReference Result FAILURE = LocalVariableDeclaration BasicType long VariableDeclarator end MethodInvocation System currentTimeMillis StatementExpression Assignment MemberReference duration BinaryOperation - MemberReference end MemberReference start = StatementExpression Assignment MemberReference state MemberReference State POST_PRODUCTION = TryStatement StatementExpression MethodInvocation job MemberReference listener cleanUp CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation MemberReference listener MemberReference e handleFatalBuildProblem StatementExpression MethodInvocation RunListener This MemberReference listener fireCompleted IfStatement BinaryOperation != MemberReference listener Literal null StatementExpression MethodInvocation listener MemberReference result finished End IfStatement BinaryOperation != MemberReference log Literal null StatementExpression MethodInvocation log close End TryStatement StatementExpression MethodInvocation save CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE Literal ""Failed to save build record"" MemberReference e log TryStatement StatementExpression MethodInvocation MethodInvocation logRotate getParent CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE Literal ""Failed to rotate log"" MemberReference e log CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE Literal ""Failed to rotate log"" MemberReference e log StatementExpression MethodInvocation onEndBuilding MethodDeclaration /**
     * Handles a fatal build problem (exception) that occurred during the build.
     */ Modifier private handleFatalBuildProblem FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType Throwable e IfStatement BinaryOperation != MemberReference listener Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference e ReferenceType IOException StatementExpression MethodInvocation Util Cast ReferenceType IOException MemberReference e MemberReference listener displayIOException End LocalVariableDeclaration ReferenceType Writer VariableDeclarator w MethodInvocation listener MethodInvocation e getMessage fatalError IfStatement BinaryOperation != MemberReference w Literal null BlockStatement TryStatement StatementExpression MethodInvocation e ClassCreator ReferenceType PrintWriter MemberReference w printStackTrace StatementExpression MethodInvocation w close CatchClause CatchClauseParameter IOException e1 End End MethodDeclaration /**
     * Called when a job started building.
     */ Modifier protected onStartBuilding StatementExpression Assignment MemberReference state MemberReference State BUILDING = MethodDeclaration /**
     * Called when a job finished building normally or abnormally.
     */ Modifier protected onEndBuilding StatementExpression Assignment MemberReference state MemberReference State COMPLETED = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MemberReference Result FAILURE = StatementExpression MethodInvocation LOGGER BinaryOperation + MethodInvocation toString Literal "": No build result is set, so marking as failure. This shouldn't happen"" warning End StatementExpression MethodInvocation RunListener This fireFinalized MethodDeclaration /**
     * Save the settings to a file.
     */ Modifier public synchronized save IOException IfStatement MethodInvocation BulkChange This contains ReturnStatement End StatementExpression MethodInvocation MethodInvocation This write getDataFile MethodDeclaration Modifier private ReferenceType XmlFile getDataFile ReturnStatement ClassCreator ReferenceType XmlFile MemberReference XSTREAM ClassCreator ReferenceType File MethodInvocation getRootDir Literal ""build.xml"" MethodDeclaration /**
     * Gets the log of the build as a string.
     *
     * @deprecated Use {@link #getLog(int)} instead as it avoids loading
     * the whole log into memory unnecessarily.
     */ Modifier public Annotation Deprecated ReferenceType String getLog IOException ReturnStatement MethodInvocation Util MethodInvocation getLogFile MethodInvocation getCharset loadFile MethodDeclaration /**
     * Gets the log of the build as a list of strings (one per log line).
     * The number of lines returned is constrained by the maxLines parameter.
     *
     * @param maxLines The maximum number of log lines to return.  If the log
     * is bigger than this, only the most recent lines are returned.
     * @return A list of log lines.  Will have no more than maxLines elements.
     * @throws IOException If there is a problem reading the log file.
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getLog FormalParameter BasicType int maxLines IOException LocalVariableDeclaration BasicType int VariableDeclarator lineCount Literal 0 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator logLines ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MethodInvocation getLogFile MethodInvocation getCharset TryStatement ForStatement ForControl VariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation reader readLine BinaryOperation != MemberReference line Literal null Assignment MemberReference line MethodInvocation reader readLine = BlockStatement StatementExpression MethodInvocation logLines MemberReference line add StatementExpression MemberReference ++ lineCount IfStatement BinaryOperation > MemberReference lineCount MemberReference maxLines StatementExpression MethodInvocation logLines Literal 0 remove End End StatementExpression MethodInvocation reader close IfStatement BinaryOperation > MemberReference lineCount MemberReference maxLines StatementExpression MethodInvocation logLines Literal 0 BinaryOperation + BinaryOperation + Literal ""[...truncated "" BinaryOperation - MemberReference lineCount BinaryOperation - MemberReference maxLines Literal 1 Literal "" lines...]"" set End ReturnStatement MemberReference logLines MethodDeclaration Modifier public doBuildStatus FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression MethodInvocation rsp BinaryOperation + BinaryOperation + MethodInvocation req getContextPath Literal ""/nocacheImages/48x48/"" MethodInvocation getBuildStatusUrl sendRedirect2 MethodDeclaration Modifier public ReferenceType String getBuildStatusUrl ReturnStatement MethodInvocation MethodInvocation getImage getIconColor ClassDeclaration Modifier public static Summary FieldDeclaration /**
         * Is this build worse or better, compared to the previous build?
         */ Modifier public BasicType boolean VariableDeclarator isWorse FieldDeclaration Modifier public ReferenceType String VariableDeclarator message ConstructorDeclaration Modifier public Summary FormalParameter BasicType boolean worse FormalParameter ReferenceType String message StatementExpression Assignment This MemberReference isWorse MemberReference worse = StatementExpression Assignment This MemberReference message MemberReference message = MethodDeclaration /**
     * Gets an object that computes the single line summary of this build.
     */ Modifier public ReferenceType Summary getBuildStatusSummary LocalVariableDeclaration ReferenceType Run VariableDeclarator prev MethodInvocation getPreviousBuild IfStatement BinaryOperation == MethodInvocation getResult MemberReference Result SUCCESS BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference prev Literal null BinaryOperation == MethodInvocation prev getResult MemberReference Result SUCCESS ReturnStatement ClassCreator ReferenceType Summary Literal false Literal ""stable"" ReturnStatement ClassCreator ReferenceType Summary Literal false Literal ""back to normal"" End End IfStatement BinaryOperation == MethodInvocation getResult MemberReference Result FAILURE BlockStatement LocalVariableDeclaration ReferenceType RunT VariableDeclarator since MethodInvocation getPreviousNotFailedBuild IfStatement BinaryOperation == MemberReference since Literal null ReturnStatement ClassCreator ReferenceType Summary Literal false Literal ""broken for a long time"" End IfStatement BinaryOperation == MemberReference since MemberReference prev ReturnStatement ClassCreator ReferenceType Summary Literal true Literal ""broken since this build"" End ReturnStatement ClassCreator ReferenceType Summary Literal false BinaryOperation + Literal ""broken since "" MethodInvocation since getDisplayName End IfStatement BinaryOperation == MethodInvocation getResult MemberReference Result ABORTED ReturnStatement ClassCreator ReferenceType Summary Literal false Literal ""aborted"" End IfStatement BinaryOperation == MethodInvocation getResult MemberReference Result UNSTABLE BlockStatement IfStatement BinaryOperation instanceof Cast ReferenceType Run This ReferenceType Build BlockStatement LocalVariableDeclaration ReferenceType AbstractTestResultAction VariableDeclarator trN Cast ReferenceType Build Cast ReferenceType Run This LocalVariableDeclaration ReferenceType AbstractTestResultAction VariableDeclarator trP TernaryExpression BinaryOperation == MemberReference prev Literal null Literal null Cast ReferenceType Build MemberReference prev IfStatement BinaryOperation == MemberReference trP Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference trN Literal null BinaryOperation > MethodInvocation trN getFailCount Literal 0 ReturnStatement ClassCreator ReferenceType Summary Literal false MethodInvocation MethodInvocation trN getFailCount Literal ""test failure"" combine ReturnStatement ClassCreator ReferenceType Summary Literal false Literal ""unstable"" End End IfStatement BinaryOperation == MethodInvocation trP getFailCount Literal 0 ReturnStatement ClassCreator ReferenceType Summary Literal true BinaryOperation + MethodInvocation MethodInvocation trN getFailCount Literal ""test"" combine Literal "" started to fail"" End IfStatement BinaryOperation < MethodInvocation trP getFailCount MethodInvocation trN getFailCount ReturnStatement ClassCreator ReferenceType Summary Literal true BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation BinaryOperation - MethodInvocation trN getFailCount MethodInvocation trP getFailCount Literal ""more test"" combine Literal "" are failing ("" MethodInvocation trN getFailCount Literal "" total)"" End IfStatement BinaryOperation > MethodInvocation trP getFailCount MethodInvocation trN getFailCount ReturnStatement ClassCreator ReferenceType Summary Literal false BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation BinaryOperation - MethodInvocation trP getFailCount MethodInvocation trN getFailCount Literal ""less test"" combine Literal "" are failing ("" MethodInvocation trN getFailCount Literal "" total)"" End ReturnStatement ClassCreator ReferenceType Summary Literal false BinaryOperation + MethodInvocation MethodInvocation trN getFailCount Literal ""test"" combine Literal "" are still failing"" End End ReturnStatement ClassCreator ReferenceType Summary Literal false Literal ""?"" MethodDeclaration /**
     * Serves the artifacts.
     */ Modifier public ReferenceType DirectoryBrowserSupport doArtifact ReturnStatement ClassCreator ReferenceType DirectoryBrowserSupport This ClassCreator ReferenceType FilePath MethodInvocation getArtifactsDir BinaryOperation + BinaryOperation + MethodInvocation project getDisplayName Literal ' ' MethodInvocation getDisplayName Literal ""package.gif"" Literal true MethodDeclaration /**
     * Returns the build number in the body.
     */ Modifier public doBuildNumber FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression MethodInvocation rsp Literal ""text/plain"" setContentType StatementExpression MethodInvocation rsp Literal ""US-ASCII"" setCharacterEncoding StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_OK setStatus StatementExpression MethodInvocation rsp MethodInvocation MemberReference number print getWriter MethodDeclaration /**
     * Returns the build time stamp in the body.
     */ Modifier public doBuildTimestamp FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter Annotation QueryParameter ReferenceType String format IOException StatementExpression MethodInvocation rsp Literal ""text/plain"" setContentType StatementExpression MethodInvocation rsp Literal ""US-ASCII"" setCharacterEncoding StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_OK setStatus LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator df TernaryExpression BinaryOperation == MemberReference format Literal null MethodInvocation DateFormat MemberReference DateFormat SHORT MemberReference DateFormat SHORT MemberReference Locale ENGLISH getDateTimeInstance ClassCreator ReferenceType SimpleDateFormat MemberReference format MethodInvocation req getLocale StatementExpression MethodInvocation rsp MethodInvocation MethodInvocation df MethodInvocation MethodInvocation getTime getTimestamp format print getWriter MethodDeclaration /**
     * Handles incremental log output.
     */ Modifier public doProgressiveLog FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression ClassCreator MethodInvocation MemberReference req MemberReference rsp doProgressText ReferenceType LargeText MethodInvocation getLogFile MethodInvocation getCharset MethodInvocation ! isLogUpdated MethodDeclaration Modifier public doToggleLogKeep FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference UPDATE checkPermission StatementExpression MethodInvocation MemberReference ! keepLog keepLog StatementExpression MethodInvocation rsp MemberReference req forwardToPreviousPage MethodDeclaration /**
     * Marks this build to keep the log.
     */ Modifier public final keepLog IOException StatementExpression MethodInvocation Literal true keepLog MethodDeclaration Modifier public keepLog FormalParameter BasicType boolean newValue IOException StatementExpression Assignment MemberReference keepLog MemberReference newValue = StatementExpression MethodInvocation save MethodDeclaration /**
     * Deletes the build when the button is pressed.
     */ Modifier public doDoDelete FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference DELETE checkPermission LocalVariableDeclaration ReferenceType String VariableDeclarator why MethodInvocation getWhyKeepLog IfStatement BinaryOperation != MemberReference why Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Messages MethodInvocation toString MemberReference why Run_UnableToDelete MemberReference req MemberReference rsp sendError ReturnStatement End StatementExpression MethodInvocation delete StatementExpression MethodInvocation rsp BinaryOperation + BinaryOperation + MethodInvocation req getContextPath Literal '/' MethodInvocation MethodInvocation getUrl getParent sendRedirect2 MethodDeclaration Modifier public setDescription FormalParameter ReferenceType String description IOException StatementExpression MethodInvocation MemberReference UPDATE checkPermission StatementExpression Assignment This MemberReference description MemberReference description = StatementExpression MethodInvocation save MethodDeclaration /**
     * Accepts the new description.
     */ Modifier public synchronized doSubmitDescription FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation req Literal ""UTF-8"" setCharacterEncoding StatementExpression MethodInvocation MethodInvocation req Literal ""description"" getParameter setDescription StatementExpression MethodInvocation rsp Literal ""."" sendRedirect MethodDeclaration /**
     * @deprecated as of 1.292
     *      Use {@link #getEnvironment()} instead.
     */ Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String getEnvVars TryStatement ReturnStatement MethodInvocation getEnvironment CatchClause CatchClauseParameter IOException e ReturnStatement ClassCreator ReferenceType EnvVars CatchClause CatchClauseParameter InterruptedException e ReturnStatement ClassCreator ReferenceType EnvVars MethodDeclaration /**
     * @deprecated as of 1.305 use {@link #getEnvironment(TaskListener)}
     */ Modifier public ReferenceType EnvVars getEnvironment IOException InterruptedException ReturnStatement MethodInvocation ClassCreator ReferenceType LogTaskListener MemberReference LOGGER MemberReference Level INFO getEnvironment MethodDeclaration /**
     * Returns the map that contains environmental variables to be used for launching
     * processes for this build.
     *
     * <p>
     * {@link BuildStep}s that invoke external processes should use this.
     * This allows {@link BuildWrapper}s and other project configurations (such as JDK selection)
     * to take effect.
     *
     * <p>
     * Unlike earlier {@link #getEnvVars()}, this map contains the whole environment,
     * not just the overrides, so one can introspect values to change its behavior.
     * @since 1.305
     */ Modifier public ReferenceType EnvVars getEnvironment FormalParameter ReferenceType TaskListener log IOException InterruptedException LocalVariableDeclaration ReferenceType EnvVars VariableDeclarator env MethodInvocation Computer MethodInvocation getEnvironment MethodInvocation MethodInvocation getCharacteristicEnvVars overrideAll currentComputer LocalVariableDeclaration ReferenceType String VariableDeclarator rootUrl MethodInvocation Hudson MethodInvocation getRootUrl getInstance IfStatement BinaryOperation != MemberReference rootUrl Literal null StatementExpression MethodInvocation env Literal ""HUDSON_URL"" MemberReference rootUrl put End IfStatement MethodInvocation ! env Literal ""HUDSON_HOME"" containsKey StatementExpression MethodInvocation env Literal ""HUDSON_HOME"" MethodInvocation Hudson MethodInvocation getRootDir MethodInvocation getPath getInstance put End LocalVariableDeclaration ReferenceType Thread VariableDeclarator t MethodInvocation Thread currentThread IfStatement BinaryOperation instanceof MemberReference t ReferenceType Executor BlockStatement LocalVariableDeclaration ReferenceType Executor VariableDeclarator e Cast ReferenceType Executor MemberReference t StatementExpression MethodInvocation env Literal ""EXECUTOR_NUMBER"" MethodInvocation String MethodInvocation e getNumber valueOf put StatementExpression MethodInvocation env Literal ""NODE_NAME"" MethodInvocation e MethodInvocation getName getOwner put End ReturnStatement MemberReference env MethodDeclaration /**
     * Builds up the environment variable map that's sufficient to identify a process
     * as ours. This is used to kill run-away processes via {@link ProcessTreeKiller}.
     */ Modifier final protected ReferenceType EnvVars getCharacteristicEnvVars LocalVariableDeclaration ReferenceType EnvVars VariableDeclarator env ClassCreator ReferenceType EnvVars StatementExpression MethodInvocation env Literal ""BUILD_NUMBER"" MethodInvocation String MemberReference number valueOf put StatementExpression MethodInvocation env Literal ""BUILD_ID"" MethodInvocation getId put StatementExpression MethodInvocation env Literal ""BUILD_TAG"" BinaryOperation + BinaryOperation + BinaryOperation + Literal ""hudson-"" MethodInvocation MethodInvocation getName getParent Literal ""-"" MemberReference number put StatementExpression MethodInvocation env Literal ""JOB_NAME"" MethodInvocation MethodInvocation getFullName getParent put ReturnStatement MemberReference env MethodDeclaration Modifier public ReferenceType String getExternalizableId ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation project getName Literal ""#"" MethodInvocation getNumber MethodDeclaration Modifier public static ReferenceType Run TypeArgument ? TypeArgument ? fromExternalizableId FormalParameter ReferenceType String id LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation id Literal '#' lastIndexOf IfStatement BinaryOperation <= MemberReference hash Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Invalid id"" End LocalVariableDeclaration ReferenceType String VariableDeclarator jobName MethodInvocation id Literal 0 MemberReference hash substring LocalVariableDeclaration BasicType int VariableDeclarator number MethodInvocation Integer MethodInvocation id BinaryOperation + MemberReference hash Literal 1 substring parseInt LocalVariableDeclaration ReferenceType Job TypeArgument ? TypeArgument ? VariableDeclarator job Cast ReferenceType Job TypeArgument ? TypeArgument ? MethodInvocation Hudson MethodInvocation MemberReference jobName getItem getInstance ReturnStatement MethodInvocation job MemberReference number getBuildByNumber FieldDeclaration Modifier public final static ReferenceType XStream VariableDeclarator XSTREAM ClassCreator ReferenceType XStream2 StatementExpression MethodInvocation XSTREAM Literal ""build"" ClassReference ReferenceType FreeStyleBuild alias StatementExpression MethodInvocation XSTREAM Literal ""matrix-build"" ClassReference ReferenceType MatrixBuild alias StatementExpression MethodInvocation XSTREAM Literal ""matrix-run"" ClassReference ReferenceType MatrixRun alias StatementExpression MethodInvocation XSTREAM MemberReference Result conv registerConverter FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Run getLogger FieldDeclaration /**
     * Sort by date. Newer ones first. 
     */ Modifier public final static ReferenceType Comparator TypeArgument ReferenceType Run VariableDeclarator ORDER_BY_DATE ClassCreator ReferenceType Comparator TypeArgument ReferenceType Run MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Run lhs FormalParameter ReferenceType Run rhs LocalVariableDeclaration BasicType long VariableDeclarator lt MethodInvocation lhs MethodInvocation getTimeInMillis getTimestamp LocalVariableDeclaration BasicType long VariableDeclarator rt MethodInvocation rhs MethodInvocation getTimeInMillis getTimestamp IfStatement BinaryOperation > MemberReference lt MemberReference rt ReturnStatement Literal - 1 End IfStatement BinaryOperation < MemberReference lt MemberReference rt ReturnStatement Literal 1 End ReturnStatement Literal 0 FieldDeclaration /**
     * {@link FeedAdapter} to produce feed from the summary of this build.
     */ Modifier public final static ReferenceType FeedAdapter TypeArgument ReferenceType Run VariableDeclarator FEED_ADAPTER ClassCreator ReferenceType DefaultFeedAdapter FieldDeclaration /**
     * {@link FeedAdapter} to produce feeds to show one build per project.
     */ Modifier public final static ReferenceType FeedAdapter TypeArgument ReferenceType Run VariableDeclarator FEED_ADAPTER_LATEST ClassCreator ReferenceType DefaultFeedAdapter MethodDeclaration /**
         * The entry unique ID needs to be tied to a project, so that
         * new builds will replace the old result.
         */ Modifier public ReferenceType String getEntryID FormalParameter ReferenceType Run e ReturnStatement BinaryOperation + Literal ""tag:hudson.dev.java.net,2008:"" MethodInvocation e MethodInvocation getAbsoluteUrl getParent ClassDeclaration Modifier public final /**
     * {@link BuildBadgeAction} that shows the logs are being kept.
     */ KeepLogBuildBadge MethodDeclaration Modifier public ReferenceType String getIconFileName ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getWhyKeepLog ReturnStatement This Run MethodInvocation getWhyKeepLog ReferenceType BuildBadgeAction FieldDeclaration Modifier public final static ReferenceType PermissionGroup VariableDeclarator PERMISSIONS ClassCreator ReferenceType PermissionGroup ClassReference ReferenceType Run MethodInvocation Messages _Run_Permissions_Title FieldDeclaration Modifier public final static ReferenceType Permission VariableDeclarator DELETE ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Delete"" MethodInvocation Messages _Run_DeletePermission_Description MemberReference Permission DELETE FieldDeclaration Modifier public final static ReferenceType Permission VariableDeclarator UPDATE ClassCreator ReferenceType Permission MemberReference PERMISSIONS Literal ""Update"" MethodInvocation Messages _Run_UpdatePermission_Description MemberReference Permission UPDATE ClassDeclaration Modifier private static DefaultFeedAdapter MethodDeclaration Modifier public ReferenceType String getEntryTitle FormalParameter ReferenceType Run entry ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference entry Literal "" ("" MethodInvocation entry getResult Literal "")"" MethodDeclaration Modifier public ReferenceType String getEntryUrl FormalParameter ReferenceType Run entry ReturnStatement MethodInvocation entry getUrl MethodDeclaration Modifier public ReferenceType String getEntryID FormalParameter ReferenceType Run entry ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""tag:"" Literal ""hudson.dev.java.net,"" MethodInvocation entry MethodInvocation MemberReference Calendar YEAR get getTimestamp Literal "":"" MethodInvocation entry MethodInvocation getName getParent Literal ':' MethodInvocation entry getId MethodDeclaration Modifier public ReferenceType String getEntryDescription FormalParameter ReferenceType Run entry ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Calendar getEntryTimestamp FormalParameter ReferenceType Run entry ReturnStatement MethodInvocation entry getTimestamp MethodDeclaration Modifier public ReferenceType String getEntryAuthor FormalParameter ReferenceType Run entry ReturnStatement MethodInvocation Mailer MethodInvocation getAdminAddress descriptor ReferenceType FeedAdapter TypeArgument ReferenceType Run MethodDeclaration Modifier public Annotation Override ReferenceType Object getDynamic FormalParameter ReferenceType String token FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp LocalVariableDeclaration ReferenceType Object VariableDeclarator result SuperMethodInvocation MemberReference token MemberReference req MemberReference rsp getDynamic IfStatement BinaryOperation == MemberReference result Literal null StatementExpression Assignment MemberReference result ClassCreator ReferenceType RedirectUp = End ReturnStatement MemberReference result ClassDeclaration Modifier public static RedirectUp MethodDeclaration Modifier public doDynamic FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_NOT_FOUND setStatus StatementExpression MethodInvocation rsp Literal ""text/html;charset=UTF-8"" setContentType LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out MethodInvocation rsp getWriter StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""<html><head>"" Literal ""<meta http-equiv='refresh' content='1;url=..'/>"" Literal ""<script>window.location.replace('..');</script>"" Literal ""</head>"" Literal ""<body style='background-color:white; color:white;'>"" Literal ""Not found</body></html>"" println StatementExpression MethodInvocation out flush TypeParameter JobT ReferenceType Job TypeArgument ReferenceType JobT TypeArgument ReferenceType RunT TypeParameter RunT ReferenceType Run TypeArgument ReferenceType JobT TypeArgument ReferenceType RunT ReferenceType Actionable ReferenceType ExtensionPoint ReferenceType Comparable TypeArgument ReferenceType RunT ReferenceType AccessControlled ReferenceType PersistenceRoot ReferenceType DescriptorByNameOwner",0
104,104,"CompilationUnit PackageDeclaration hudson.util Import java.util.Map ClassDeclaration Modifier public /**
 * Model object used to display the error top page if
 * we find out that XStream is running in pure-java mode.
 *
 * <p>
 * <tt>index.jelly</tt> would display a nice friendly error page.
 *
 * @author Kohsuke Kawaguchi
 */ IncompatibleVMDetected MethodDeclaration Modifier public ReferenceType Map getSystemProperties ReturnStatement MethodInvocation System getProperties ReferenceType ErrorObject",0
85,85,"CompilationUnit PackageDeclaration hudson.model Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import java.util.List Import java.util.Vector Import java.util.concurrent.CopyOnWriteArrayList ClassDeclaration Modifier public abstract Annotation ExportedBean /**
 * {@link ModelObject} that can have additional {@link Action}s.
 *
 * @author Kohsuke Kawaguchi
 */ Actionable FieldDeclaration /**
     * Actions contributed to this model object.
     *
     * Typed more strongly than it should to improve the serialization signature.
     */ Modifier private volatile ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType Action VariableDeclarator actions MethodDeclaration /**
     * Gets actions contributed to this build.
     *
     * <p>
     * A new {@link Action} can be added by {@code getActions().add(...)}.
     *
     * @return
     *      may be empty but never null.
     */ Modifier public synchronized Annotation Exported ReferenceType List TypeArgument ReferenceType Action getActions IfStatement BinaryOperation == MemberReference actions Literal null StatementExpression Assignment MemberReference actions ClassCreator ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType Action = End ReturnStatement MemberReference actions MethodDeclaration /**
     * Gets all actions of a specified type that contributed to this build.
     *
     * @param type The type of action to return.
     * @return
     *      may be empty but never null.
     * @see #getAction(Class)
     */ Modifier public TypeParameter T ReferenceType Action ReferenceType List TypeArgument ReferenceType T getActions FormalParameter ReferenceType Class TypeArgument ReferenceType T type LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator result ClassCreator ReferenceType Vector TypeArgument ReferenceType T ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation getActions IfStatement MethodInvocation type MemberReference a isInstance StatementExpression MethodInvocation result MethodInvocation type MemberReference a cast add End End ReturnStatement MemberReference result MethodDeclaration /**
     * Adds a new action.
     *
     * Short for <tt>getActions().add(a)</tt>
     */ Modifier public addAction FormalParameter ReferenceType Action a IfStatement BinaryOperation == MemberReference a Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException End StatementExpression MethodInvocation MethodInvocation MemberReference a add getActions MethodDeclaration Modifier public ReferenceType Action getAction FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference actions Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation actions MemberReference index get MethodDeclaration /**
     * Gets the action (first instance to be found) of a specified type that contributed to this build.
     *
     * @param type
     * @return The action or <code>null</code> if no such actions exist.
     * @see #getActions(Class)
     */ Modifier public TypeParameter T ReferenceType Action ReferenceType T getAction FormalParameter ReferenceType Class TypeArgument ReferenceType T type ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation getActions IfStatement MethodInvocation type MemberReference a isInstance ReturnStatement MethodInvocation type MemberReference a cast End End ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object getDynamic FormalParameter ReferenceType String token FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation getActions BlockStatement IfStatement BinaryOperation == MemberReference a Literal null ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator urlName MethodInvocation a getUrlName IfStatement BinaryOperation == MemberReference urlName Literal null ContinueStatement End IfStatement MethodInvocation urlName MemberReference token equals ReturnStatement MemberReference a End End ReturnStatement Literal null ReferenceType AbstractModelObject",0
283,283,"CompilationUnit PackageDeclaration hudson.diagnosis Import hudson.util.TimeUnit2 Import hudson.util.ColorPalette Import hudson.Extension Import hudson.model.PeriodicWork Import hudson.model.MultiStageTimeSeries Import hudson.model.MultiStageTimeSeries.TrendChart Import hudson.model.MultiStageTimeSeries.TimeScale Import java.lang.management.MemoryPoolMXBean Import java.lang.management.MemoryType Import java.lang.management.MemoryUsage Import java.lang.management.ManagementFactory Import java.util.List Import java.util.ArrayList Import java.io.IOException Import org.kohsuke.stapler.QueryParameter ClassDeclaration Modifier public final Annotation Extension /**
 * Monitors the memory usage of the system in OS specific way.
 *
 * @author Kohsuke Kawaguchi
 */ MemoryUsageMonitor ClassDeclaration Modifier public final /**
     * A memory group is conceptually a set of memory pools. 
     */ MemoryGroup FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType MemoryPoolMXBean VariableDeclarator pools ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MemoryPoolMXBean FieldDeclaration /**
         * Trend of the memory usage, after GCs.
         * So this shows the accurate snapshot of the footprint of live objects.
         */ Modifier public final ReferenceType MultiStageTimeSeries VariableDeclarator used ClassCreator ReferenceType MultiStageTimeSeries MethodInvocation Messages _MemoryUsageMonitor_USED MemberReference ColorPalette RED Literal 0 Literal 0 FieldDeclaration /**
         * Trend of the maximum memory size, after GCs.
         */ Modifier public final ReferenceType MultiStageTimeSeries VariableDeclarator max ClassCreator ReferenceType MultiStageTimeSeries MethodInvocation Messages _MemoryUsageMonitor_TOTAL MemberReference ColorPalette BLUE Literal 0 Literal 0 ConstructorDeclaration Modifier private MemoryGroup FormalParameter ReferenceType List TypeArgument ReferenceType MemoryPoolMXBean pools FormalParameter ReferenceType MemoryType type ForStatement EnhancedForControl VariableDeclaration ReferenceType MemoryPoolMXBean VariableDeclarator pool MemberReference pools BlockStatement IfStatement BinaryOperation == MethodInvocation pool getType MemberReference type StatementExpression This MemberReference pools MethodInvocation MemberReference pool add End End MethodDeclaration Modifier private update LocalVariableDeclaration BasicType long VariableDeclarator used Literal 0 LocalVariableDeclaration BasicType long VariableDeclarator max Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType MemoryPoolMXBean VariableDeclarator pool MemberReference pools BlockStatement LocalVariableDeclaration ReferenceType MemoryUsage VariableDeclarator usage MethodInvocation pool getCollectionUsage IfStatement BinaryOperation == MemberReference usage Literal null ContinueStatement End StatementExpression Assignment MemberReference used MethodInvocation usage getUsed += StatementExpression Assignment MemberReference max MethodInvocation usage getMax += End StatementExpression Assignment MemberReference used Literal 1024 /= StatementExpression Assignment MemberReference max Literal 1024 /= StatementExpression This MemberReference used MethodInvocation MemberReference used update StatementExpression This MemberReference max MethodInvocation MemberReference max update MethodDeclaration /**
         * Generates the memory usage statistics graph.
         */ Modifier public ReferenceType TrendChart doGraph FormalParameter Annotation QueryParameter ReferenceType String type IOException ReturnStatement MethodInvocation MultiStageTimeSeries MethodInvocation TimeScale MemberReference type parse MemberReference used MemberReference max createTrendChart FieldDeclaration Modifier public final ReferenceType MemoryGroup VariableDeclarator heap FieldDeclaration Modifier public final ReferenceType MemoryGroup VariableDeclarator nonHeap ConstructorDeclaration Modifier public MemoryUsageMonitor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MemoryPoolMXBean VariableDeclarator pools MethodInvocation ManagementFactory getMemoryPoolMXBeans StatementExpression Assignment MemberReference heap ClassCreator ReferenceType MemoryGroup MemberReference pools MemberReference MemoryType HEAP = StatementExpression Assignment MemberReference nonHeap ClassCreator ReferenceType MemoryGroup MemberReference pools MemberReference MemoryType NON_HEAP = MethodDeclaration Modifier public BasicType long getRecurrencePeriod ReturnStatement MethodInvocation TimeUnit2.SECONDS Literal 10 toMillis MethodDeclaration Modifier protected doRun StatementExpression MethodInvocation heap update StatementExpression MethodInvocation nonHeap update ReferenceType PeriodicWork",1
337,337,"CompilationUnit PackageDeclaration hudson.model Import hudson.util.StreamTaskListener Import hudson.util.NullStream Import hudson.util.FormValidation Import hudson.Launcher Import hudson.Extension Import hudson.EnvVars Import hudson.slaves.NodeSpecific Import hudson.tools.ToolInstallation Import hudson.tools.ToolDescriptor Import hudson.tools.ToolProperty Import hudson.tools.JDKInstaller Import java.io.File Import java.io.IOException Import java.util.Map Import java.util.List Import java.util.Arrays Import java.util.Collections Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter ClassDeclaration Modifier public final /**
 * Information about JDK installation.
 *
 * @author Kohsuke Kawaguchi
 */ JDK FieldDeclaration Modifier private Annotation Deprecated ReferenceType String VariableDeclarator javaHome ConstructorDeclaration Modifier public JDK FormalParameter ReferenceType String name FormalParameter ReferenceType String javaHome StatementExpression SuperConstructorInvocation MemberReference name MemberReference javaHome MethodInvocation TypeArgument ReferenceType ToolProperty TypeArgument ? Collections ConstructorDeclaration Modifier public Annotation DataBoundConstructor JDK FormalParameter ReferenceType String name FormalParameter ReferenceType String home FormalParameter ReferenceType List TypeArgument ReferenceType ToolProperty TypeArgument ? extends properties StatementExpression SuperConstructorInvocation MemberReference name MemberReference home MemberReference properties MethodDeclaration /**
     * install directory.
     *
     * @deprecated as of 1.304
     *      Use {@link #getHome()}
     */ Modifier public ReferenceType String getJavaHome ReturnStatement MethodInvocation getHome MethodDeclaration Modifier public Annotation SuppressWarnings ElementArrayValue Literal ""deprecation"" Annotation Override ReferenceType String getHome IfStatement BinaryOperation != MemberReference javaHome Literal null ReturnStatement MemberReference javaHome End ReturnStatement SuperMethodInvocation getHome MethodDeclaration /**
     * Gets the path to the bin directory.
     */ Modifier public ReferenceType File getBinDir ReturnStatement ClassCreator ReferenceType File MethodInvocation getHome Literal ""bin"" MethodDeclaration /**
     * Gets the path to 'java'.
     */ Modifier private ReferenceType File getExecutable LocalVariableDeclaration ReferenceType String VariableDeclarator execName IfStatement BinaryOperation == MemberReference File separatorChar Literal '\\' StatementExpression Assignment MemberReference execName Literal ""java.exe"" = StatementExpression Assignment MemberReference execName Literal ""java"" = End ReturnStatement ClassCreator ReferenceType File MethodInvocation getHome BinaryOperation + Literal ""bin/"" MemberReference execName MethodDeclaration /**
     * Returns true if the executable exists.
     */ Modifier public BasicType boolean getExists ReturnStatement MethodInvocation MethodInvocation exists getExecutable MethodDeclaration /**
     * Sets PATH and JAVA_HOME from this JDK.
     */ Modifier public buildEnvVars FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String env StatementExpression MethodInvocation env Literal ""PATH+JDK"" MethodInvocation MethodInvocation getPath getBinDir put StatementExpression MethodInvocation env Literal ""JAVA_HOME"" MethodInvocation getHome put MethodDeclaration Modifier public ReferenceType JDK forNode FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException ReturnStatement ClassCreator ReferenceType JDK MethodInvocation getName MethodInvocation MemberReference node MemberReference log translateFor MethodDeclaration Modifier public ReferenceType JDK forEnvironment FormalParameter ReferenceType EnvVars environment ReturnStatement ClassCreator ReferenceType JDK MethodInvocation getName MethodInvocation environment MethodInvocation getHome expand MethodDeclaration /**
     * Checks if ""java"" is in PATH on the given node.
     *
     * <p>
     * If it's not, then the user must specify a configured JDK,
     * so this is often useful for form field validation.
     */ Modifier public static BasicType boolean isDefaultJDKValid FormalParameter ReferenceType Node n TryStatement LocalVariableDeclaration ReferenceType TaskListener VariableDeclarator listener ClassCreator ReferenceType StreamTaskListener ClassCreator ReferenceType NullStream LocalVariableDeclaration ReferenceType Launcher VariableDeclarator launcher MethodInvocation n MemberReference listener createLauncher ReturnStatement BinaryOperation == MethodInvocation launcher MethodInvocation Literal ""java"" Literal ""-fullversion"" cmds MethodInvocation MemberReference listener stdout MethodInvocation join launch Literal 0 CatchClause CatchClauseParameter IOException e ReturnStatement Literal false CatchClause CatchClauseParameter InterruptedException e ReturnStatement Literal false ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal ""JDK"" MethodDeclaration Modifier public Annotation Override ReferenceType JDK getInstallations ReturnStatement MethodInvocation Hudson MethodInvocation getJDKs MethodInvocation ArrayCreator ReferenceType JDK Literal 0 toArray getInstance MethodDeclaration Modifier public synchronized Annotation Override setInstallations FormalParameter ReferenceType JDK jdks  LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JDK VariableDeclarator list MethodInvocation Hudson MethodInvocation getJDKs getInstance StatementExpression MethodInvocation list clear StatementExpression MethodInvocation list MethodInvocation Arrays MemberReference jdks asList addAll MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType JDKInstaller getDefaultInstallers ReturnStatement MethodInvocation Collections ClassCreator ReferenceType JDKInstaller Literal null Literal false singletonList MethodDeclaration /**
         * Checks if the JAVA_HOME is a valid JAVA_HOME path.
         */ Modifier public ReferenceType FormValidation doCheckHome FormalParameter Annotation QueryParameter ReferenceType File value StatementExpression MethodInvocation Hudson MethodInvocation MemberReference Hudson ADMINISTER checkPermission getInstance IfStatement MethodInvocation value MethodInvocation Literal """" equals getPath ReturnStatement MethodInvocation FormValidation ok End IfStatement MethodInvocation ! value isDirectory ReturnStatement MethodInvocation FormValidation MethodInvocation Messages MemberReference value Hudson_NotADirectory error End LocalVariableDeclaration ReferenceType File VariableDeclarator toolsJar ClassCreator ReferenceType File MemberReference value Literal ""lib/tools.jar"" LocalVariableDeclaration ReferenceType File VariableDeclarator mac ClassCreator ReferenceType File MemberReference value Literal ""lib/dt.jar"" IfStatement BinaryOperation && MethodInvocation ! toolsJar exists MethodInvocation ! mac exists ReturnStatement MethodInvocation FormValidation MethodInvocation Messages MemberReference value Hudson_NotJDKDir error End ReturnStatement MethodInvocation FormValidation ok ReferenceType ToolDescriptor TypeArgument ReferenceType JDK ReferenceType ToolInstallation ReferenceType NodeSpecific TypeArgument ReferenceType JDK ReferenceType EnvironmentSpecific TypeArgument ReferenceType JDK",0
551,551,,0
94,94,"CompilationUnit PackageDeclaration hudson.tasks.junit Import hudson.model.AbstractBuild Import org.dom4j.Element Import org.kohsuke.stapler.export.Exported Import java.util.Comparator Import java.text.DecimalFormat Import java.text.ParseException ClassDeclaration Modifier public final /**
 * One test result.
 *
 * @author Kohsuke Kawaguchi
 */ CaseResult FieldDeclaration Modifier private final BasicType float VariableDeclarator duration FieldDeclaration /**
     * In JUnit, a test is a method of a class. This field holds the fully qualified class name
     * that the test was in.
     */ Modifier private final ReferenceType String VariableDeclarator className FieldDeclaration /**
     * This field retains the method name.
     */ Modifier private final ReferenceType String VariableDeclarator testName FieldDeclaration Modifier private final BasicType boolean VariableDeclarator skipped FieldDeclaration Modifier private final ReferenceType String VariableDeclarator errorStackTrace FieldDeclaration Modifier private final ReferenceType String VariableDeclarator errorDetails FieldDeclaration Modifier private transient ReferenceType SuiteResult VariableDeclarator parent FieldDeclaration Modifier private transient ReferenceType ClassResult VariableDeclarator classResult FieldDeclaration /**
     * Some tools report stdout and stderr at testcase level (such as Maven surefire plugin), others do so at
     * the suite level (such as Ant JUnit task.)
     *
     * If these information are reported at the test case level, these fields are set,
     * otherwise null, in which case {@link SuiteResult#stdout}.
     */ Modifier private final ReferenceType String VariableDeclarator stdout VariableDeclarator stderr FieldDeclaration /**
     * This test has been failing since this build number (not id.)
     *
     * If {@link #isPassed() passing}, this field is left unused to 0.
     */ Modifier private BasicType int VariableDeclarator failedSince MethodDeclaration Modifier private static BasicType float parseTime FormalParameter ReferenceType Element testCase LocalVariableDeclaration ReferenceType String VariableDeclarator time MethodInvocation testCase Literal ""time"" attributeValue IfStatement BinaryOperation != MemberReference time Literal null BlockStatement StatementExpression Assignment MemberReference time MethodInvocation time Literal "","" Literal """" replace = TryStatement ReturnStatement MethodInvocation Float MemberReference time parseFloat CatchClause CatchClauseParameter NumberFormatException e TryStatement ReturnStatement ClassCreator MethodInvocation MemberReference time parse MethodInvocation floatValue ReferenceType DecimalFormat CatchClause CatchClauseParameter ParseException x End ReturnStatement Literal 0.0f ConstructorDeclaration CaseResult FormalParameter ReferenceType SuiteResult parent FormalParameter ReferenceType Element testCase FormalParameter ReferenceType String testClassName LocalVariableDeclaration ReferenceType String VariableDeclarator nameAttr MethodInvocation testCase Literal ""name"" attributeValue IfStatement BinaryOperation && BinaryOperation == MemberReference testClassName Literal null MethodInvocation nameAttr Literal ""."" contains BlockStatement StatementExpression Assignment MemberReference testClassName MethodInvocation nameAttr Literal 0 MethodInvocation nameAttr Literal '.' lastIndexOf substring = StatementExpression Assignment MemberReference nameAttr MethodInvocation nameAttr BinaryOperation + MethodInvocation nameAttr Literal '.' lastIndexOf Literal 1 substring = End StatementExpression Assignment MemberReference className MemberReference testClassName = StatementExpression Assignment MemberReference testName MemberReference nameAttr = StatementExpression Assignment MemberReference errorStackTrace MethodInvocation MemberReference testCase getError = StatementExpression Assignment MemberReference errorDetails MethodInvocation MemberReference testCase getErrorMessage = StatementExpression Assignment This MemberReference parent MemberReference parent = StatementExpression Assignment MemberReference duration MethodInvocation MemberReference testCase parseTime = StatementExpression Assignment MemberReference skipped MethodInvocation MemberReference testCase isMarkedAsSkipped = StatementExpression Assignment MemberReference stdout MethodInvocation testCase Literal ""system-out"" elementText = StatementExpression Assignment MemberReference stderr MethodInvocation testCase Literal ""system-err"" elementText = ConstructorDeclaration /**
     * Used to create a fake failure, when Hudson fails to load data from XML files.
     */ CaseResult FormalParameter ReferenceType SuiteResult parent FormalParameter ReferenceType String testName FormalParameter ReferenceType String errorStackTrace StatementExpression ExplicitConstructorInvocation MemberReference parent MethodInvocation parent getName MemberReference testName MemberReference errorStackTrace Literal """" Literal null Literal null Literal 0.0f Literal false ConstructorDeclaration CaseResult FormalParameter ReferenceType SuiteResult parent FormalParameter ReferenceType String testClassName FormalParameter ReferenceType String testName FormalParameter ReferenceType String errorStackTrace FormalParameter ReferenceType String errorDetails FormalParameter ReferenceType String stdout FormalParameter ReferenceType String stderr FormalParameter BasicType float duration FormalParameter BasicType boolean skipped StatementExpression Assignment This MemberReference className MemberReference testClassName = StatementExpression Assignment This MemberReference testName MemberReference testName = StatementExpression Assignment This MemberReference errorStackTrace MemberReference errorStackTrace = StatementExpression Assignment This MemberReference errorDetails MemberReference errorDetails = StatementExpression Assignment This MemberReference parent MemberReference parent = StatementExpression Assignment This MemberReference duration MemberReference duration = StatementExpression Assignment This MemberReference skipped MemberReference skipped = StatementExpression Assignment This MemberReference stdout MemberReference stdout = StatementExpression Assignment This MemberReference stderr MemberReference stderr = MethodDeclaration Modifier private static ReferenceType String getError FormalParameter ReferenceType Element testCase LocalVariableDeclaration ReferenceType String VariableDeclarator msg MethodInvocation testCase Literal ""error"" elementText IfStatement BinaryOperation != MemberReference msg Literal null ReturnStatement MemberReference msg End ReturnStatement MethodInvocation testCase Literal ""failure"" elementText MethodDeclaration Modifier private static ReferenceType String getErrorMessage FormalParameter ReferenceType Element testCase LocalVariableDeclaration ReferenceType Element VariableDeclarator msg MethodInvocation testCase Literal ""error"" element IfStatement BinaryOperation == MemberReference msg Literal null BlockStatement StatementExpression Assignment MemberReference msg MethodInvocation testCase Literal ""failure"" element = End IfStatement BinaryOperation == MemberReference msg Literal null BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation msg Literal ""message"" attributeValue MethodDeclaration /**
     * If the testCase element includes the skipped element (as output by TestNG), then
     * the test has neither passed nor failed, it was never run.
     */ Modifier private static BasicType boolean isMarkedAsSkipped FormalParameter ReferenceType Element testCase ReturnStatement BinaryOperation != MethodInvocation testCase Literal ""skipped"" element Literal null MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MemberReference testName MethodDeclaration /**
     * Gets the name of the test, which is returned from {@code TestCase.getName()}
     *
     * <p>
     * Note that this may contain any URL-unfriendly character.
     */ Modifier public Annotation Exported ElementValuePair visibility Literal 999 Annotation Override ReferenceType String getName ReturnStatement MemberReference testName MethodDeclaration /**
     * Gets the duration of the test, in seconds
     */ Modifier public Annotation Exported BasicType float getDuration ReturnStatement MemberReference duration MethodDeclaration /**
     * Gets the version of {@link #getName()} that's URL-safe.
     */ Modifier public Annotation Override ReferenceType String getSafeName LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MemberReference testName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation buf length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation buf MemberReference i charAt IfStatement MethodInvocation ! Character MemberReference ch isJavaIdentifierPart StatementExpression MethodInvocation buf MemberReference i Literal '_' setCharAt End End ReturnStatement MethodInvocation MethodInvocation classResult getChildren MethodInvocation buf toString uniquifyName MethodDeclaration /**
     * Gets the class name of a test class.
     */ Modifier public Annotation Exported ReferenceType String getClassName ReturnStatement MemberReference className MethodDeclaration /**
     * Gets the simple (not qualified) class name.
     */ Modifier public ReferenceType String getSimpleName LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation className Literal '.' lastIndexOf ReturnStatement MethodInvocation className BinaryOperation + MemberReference idx Literal 1 substring MethodDeclaration /**
     * Gets the package name of a test case
     */ Modifier public ReferenceType String getPackageName LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation className Literal '.' lastIndexOf IfStatement BinaryOperation < MemberReference idx Literal 0 ReturnStatement Literal ""(root)"" ReturnStatement MethodInvocation className Literal 0 MemberReference idx substring End MethodDeclaration Modifier public ReferenceType String getFullName ReturnStatement BinaryOperation + BinaryOperation + MemberReference className Literal '.' MethodInvocation getName MethodDeclaration /**
     * If this test failed, then return the build number
     * when this test started failing.
     */ Modifier public Annotation Exported BasicType int getFailedSince ReturnStatement MemberReference failedSince MethodDeclaration /**
     * Gets the number of consecutive builds (including this)
     * that this test case has been failing.
     */ Modifier public Annotation Exported BasicType int getAge IfStatement MethodInvocation isPassed ReturnStatement Literal 0 ReturnStatement BinaryOperation + BinaryOperation - MethodInvocation MethodInvocation getNumber getOwner MemberReference failedSince Literal 1 End MethodDeclaration /**
     * The stdout of this test.
     *
     * <p>
     * Depending on the tool that produced the XML report, this method works somewhat inconsistently.
     * With some tools (such as Maven surefire plugin), you get the accurate information, that is
     * the stdout from this test case. With some other tools (such as the JUnit task in Ant), this
     * method returns the stdout produced by the entire test suite.
     *
     * <p>
     * If you need to know which is the case, compare this output from {@link SuiteResult#getStdout()}.
     * @since 1.294
     */ Modifier public Annotation Exported ReferenceType String getStdout IfStatement BinaryOperation != MemberReference stdout Literal null ReturnStatement MemberReference stdout End ReturnStatement MethodInvocation MethodInvocation getStdout getParent MethodDeclaration /**
     * The stderr of this test.
     *
     * @see #getStdout()
     * @since 1.294
     */ Modifier public Annotation Exported ReferenceType String getStderr IfStatement BinaryOperation != MemberReference stderr Literal null ReturnStatement MemberReference stderr End ReturnStatement MethodInvocation MethodInvocation getStderr getParent MethodDeclaration Modifier public Annotation Override ReferenceType CaseResult getPreviousResult LocalVariableDeclaration ReferenceType SuiteResult VariableDeclarator pr MethodInvocation parent getPreviousResult IfStatement BinaryOperation == MemberReference pr Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation pr MethodInvocation getName getCase MethodDeclaration /**
     * If there was an error or a failure, this is the stack trace, or otherwise null.
     */ Modifier public Annotation Exported ReferenceType String getErrorStackTrace ReturnStatement MemberReference errorStackTrace MethodDeclaration /**
     * If there was an error or a failure, this is the text from the message.
     */ Modifier public Annotation Exported ReferenceType String getErrorDetails ReturnStatement MemberReference errorDetails MethodDeclaration /**
     * @return true if the test was not skipped and did not fail, false otherwise.
     */ Modifier public BasicType boolean isPassed ReturnStatement BinaryOperation && MemberReference ! skipped BinaryOperation == MemberReference errorStackTrace Literal null MethodDeclaration /**
     * Tests whether the test was skipped or not.  TestNG allows tests to be
     * skipped if their dependencies fail or they are part of a group that has
     * been configured to be skipped.
     * @return true if the test was not executed, false otherwise.
     */ Modifier public Annotation Exported BasicType boolean isSkipped ReturnStatement MemberReference skipped MethodDeclaration Modifier public ReferenceType SuiteResult getParent ReturnStatement MemberReference parent MethodDeclaration Modifier public ReferenceType AbstractBuild TypeArgument ? TypeArgument ? getOwner ReturnStatement MethodInvocation parent MethodInvocation getOwner getParent MethodDeclaration /**
     * Gets the relative path to this test case from the given object.
     */ Modifier public ReferenceType String getRelativePathFrom FormalParameter ReferenceType TestObject it IfStatement BinaryOperation == MemberReference it This ReturnStatement Literal ""."" End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation buf MethodInvocation getSafeName append IfStatement BinaryOperation != MemberReference it MemberReference classResult BlockStatement StatementExpression MethodInvocation buf Literal 0 Literal '/' insert StatementExpression MethodInvocation buf Literal 0 MethodInvocation classResult getSafeName insert LocalVariableDeclaration ReferenceType PackageResult VariableDeclarator pkg MethodInvocation classResult getParent IfStatement BinaryOperation != MemberReference it MemberReference pkg BlockStatement StatementExpression MethodInvocation buf Literal 0 Literal '/' insert StatementExpression MethodInvocation buf Literal 0 MethodInvocation pkg getSafeName insert End End ReturnStatement MethodInvocation buf toString MethodDeclaration Modifier public freeze FormalParameter ReferenceType SuiteResult parent StatementExpression Assignment This MemberReference parent MemberReference parent = IfStatement BinaryOperation && MethodInvocation ! isPassed BinaryOperation == MemberReference failedSince Literal 0 BlockStatement LocalVariableDeclaration ReferenceType CaseResult VariableDeclarator prev MethodInvocation getPreviousResult IfStatement BinaryOperation && BinaryOperation != MemberReference prev Literal null MethodInvocation ! prev isPassed StatementExpression Assignment This MemberReference failedSince MemberReference prev failedSince = StatementExpression Assignment This MemberReference failedSince MethodInvocation MethodInvocation getNumber getOwner = End End MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType CaseResult that ReturnStatement This MethodInvocation getFullName MethodInvocation MethodInvocation that getFullName compareTo MethodDeclaration Modifier public Annotation Exported ElementValuePair name Literal ""status"" ReferenceType Status getStatus IfStatement MemberReference skipped BlockStatement ReturnStatement MemberReference Status SKIPPED End LocalVariableDeclaration ReferenceType CaseResult VariableDeclarator pr MethodInvocation getPreviousResult IfStatement BinaryOperation == MemberReference pr Literal null BlockStatement ReturnStatement TernaryExpression MethodInvocation isPassed MemberReference Status PASSED MemberReference Status FAILED End IfStatement MethodInvocation pr isPassed BlockStatement ReturnStatement TernaryExpression MethodInvocation isPassed MemberReference Status PASSED MemberReference Status REGRESSION BlockStatement ReturnStatement TernaryExpression MethodInvocation isPassed MemberReference Status FIXED MemberReference Status FAILED End MethodDeclaration setClass FormalParameter ReferenceType ClassResult classResult StatementExpression Assignment This MemberReference classResult MemberReference classResult = EnumDeclaration Modifier public /**
     * Constants that represent the status of this test.
     */ Status EnumBody EnumConstantDeclaration /**
         * This test runs OK, just like its previous run.
         */ PASSED Literal ""result-passed"" MethodInvocation Messages CaseResult_Status_Passed Literal true EnumConstantDeclaration /**
         * This test was skipped due to configuration or the
         * failure or skipping of a method that it depends on.
         */ SKIPPED Literal ""result-skipped"" MethodInvocation Messages CaseResult_Status_Skipped Literal false EnumConstantDeclaration /**
         * This test failed, just like its previous run.
         */ FAILED Literal ""result-failed"" MethodInvocation Messages CaseResult_Status_Failed Literal false EnumConstantDeclaration /**
         * This test has been failing, but now it runs OK.
         */ FIXED Literal ""result-fixed"" MethodInvocation Messages CaseResult_Status_Fixed Literal true EnumConstantDeclaration /**
         * This test has been running OK, but now it failed.
         */ REGRESSION Literal ""result-regression"" MethodInvocation Messages CaseResult_Status_Regression Literal false FieldDeclaration Modifier private final ReferenceType String VariableDeclarator cssClass FieldDeclaration Modifier private final ReferenceType String VariableDeclarator message FieldDeclaration Modifier public final BasicType boolean VariableDeclarator isOK ConstructorDeclaration Status FormalParameter ReferenceType String cssClass FormalParameter ReferenceType String message FormalParameter BasicType boolean OK StatementExpression Assignment This MemberReference cssClass MemberReference cssClass = StatementExpression Assignment This MemberReference message MemberReference message = StatementExpression Assignment MemberReference isOK MemberReference OK = MethodDeclaration Modifier public ReferenceType String getCssClass ReturnStatement MemberReference cssClass MethodDeclaration Modifier public ReferenceType String getMessage ReturnStatement MemberReference message MethodDeclaration Modifier public BasicType boolean isRegression ReturnStatement BinaryOperation == This MemberReference REGRESSION FieldDeclaration /**
     * For sorting errors by age.
     */ Modifier final static ReferenceType Comparator TypeArgument ReferenceType CaseResult VariableDeclarator BY_AGE ClassCreator ReferenceType Comparator TypeArgument ReferenceType CaseResult MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType CaseResult lhs FormalParameter ReferenceType CaseResult rhs ReturnStatement BinaryOperation - MethodInvocation lhs getAge MethodInvocation rhs getAge FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType TestObject ReferenceType Comparable TypeArgument ReferenceType CaseResult",0
178,178,"CompilationUnit PackageDeclaration hudson.diagnosis Import hudson.model.AdministrativeMonitor Import hudson.model.Hudson Import hudson.Extension Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import java.io.IOException ClassDeclaration Modifier public Annotation Extension /**
 * If Hudson is run with a lot of jobs but no views, suggest the user that they can create views.
 *
 * <p>
 * I noticed at an user visit that some users didn't notice the '+' icon in the tab bar. 
 *
 * @author Kohsuke Kawaguchi
 */ TooManyJobsButNoView MethodDeclaration Modifier public BasicType boolean isActivated LocalVariableDeclaration ReferenceType Hudson VariableDeclarator h MethodInvocation Hudson getInstance ReturnStatement BinaryOperation && BinaryOperation == MethodInvocation h MethodInvocation size getViews Literal 1 BinaryOperation > MethodInvocation h MethodInvocation size getItemMap MemberReference THRESHOLD MethodDeclaration /**
     * Depending on whether the user said ""yes"" or ""no"", send him to the right place.
     */ Modifier public doAct FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException IfStatement MethodInvocation req Literal ""no"" hasParameter BlockStatement StatementExpression MethodInvocation Literal true disable StatementExpression MethodInvocation rsp BinaryOperation + MethodInvocation req getContextPath Literal ""/manage"" sendRedirect BlockStatement StatementExpression MethodInvocation rsp BinaryOperation + MethodInvocation req getContextPath Literal ""/newView"" sendRedirect End FieldDeclaration Modifier public final static BasicType int VariableDeclarator THRESHOLD Literal 16 ReferenceType AdministrativeMonitor",0
126,126,"CompilationUnit PackageDeclaration hudson.cli Import hudson.Extension ClassDeclaration Modifier public Annotation Extension /**
 * Show the list of all commands.
 *
 * @author Kohsuke Kawaguchi
 */ HelpCommand MethodDeclaration Modifier public Annotation Override ReferenceType String getShortDescription ReturnStatement Literal ""Lists all the available commands"" MethodDeclaration Modifier protected BasicType int run ForStatement EnhancedForControl VariableDeclaration ReferenceType CLICommand VariableDeclarator c MethodInvocation CLICommand all BlockStatement StatementExpression MethodInvocation stderr BinaryOperation + Literal ""  "" MethodInvocation c getName println StatementExpression MethodInvocation stderr BinaryOperation + Literal ""    "" MethodInvocation c getShortDescription println End ReturnStatement Literal 0 ReferenceType CLICommand",1
330,330,"CompilationUnit PackageDeclaration hudson.search Import java.lang.reflect.Field Import java.lang.reflect.Method Import java.lang.reflect.InvocationTargetException Import java.util.ArrayList Import java.util.List Import java.util.Map Import java.util.HashMap Import java.beans.Introspector ClassDeclaration Modifier final /**
 * Parsed {@link QuickSilver}s so that {@link SearchIndex} can be easily created.
 * One instance per one class.
 *
 * @author Kohsuke Kawaguchi
 */ ParsedQuickSilver FieldDeclaration Modifier private final static ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType ParsedQuickSilver VariableDeclarator TABLE ClassCreator ReferenceType HashMap TypeArgument ReferenceType Class TypeArgument ReferenceType ParsedQuickSilver MethodDeclaration Modifier static synchronized ReferenceType ParsedQuickSilver get FormalParameter ReferenceType Class TypeArgument ReferenceType SearchableModelObject extends clazz LocalVariableDeclaration ReferenceType ParsedQuickSilver VariableDeclarator pqs MethodInvocation TABLE MemberReference clazz get IfStatement BinaryOperation == MemberReference pqs Literal null StatementExpression MethodInvocation TABLE MemberReference clazz Assignment MemberReference pqs ClassCreator ReferenceType ParsedQuickSilver MemberReference clazz = put End ReturnStatement MemberReference pqs FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType Getter VariableDeclarator getters ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Getter ConstructorDeclaration Modifier private ParsedQuickSilver FormalParameter ReferenceType Class TypeArgument ReferenceType SearchableModelObject extends clazz LocalVariableDeclaration ReferenceType QuickSilver VariableDeclarator qs ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation clazz getMethods BlockStatement StatementExpression Assignment MemberReference qs MethodInvocation m ClassReference ReferenceType QuickSilver getAnnotation = IfStatement BinaryOperation != MemberReference qs Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator url MethodInvocation MemberReference m stripGetPrefix IfStatement BinaryOperation == MethodInvocation qs MemberReference length value Literal 0 StatementExpression MethodInvocation getters ClassCreator ReferenceType MethodGetter MemberReference url MethodInvocation MemberReference url splitName MemberReference m add BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation qs value StatementExpression MethodInvocation getters ClassCreator ReferenceType MethodGetter MemberReference url MemberReference name MemberReference m add End End End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Field VariableDeclarator f MethodInvocation clazz getFields BlockStatement StatementExpression Assignment MemberReference qs MethodInvocation f ClassReference ReferenceType QuickSilver getAnnotation = IfStatement BinaryOperation != MemberReference qs Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation qs MemberReference length value Literal 0 StatementExpression MethodInvocation getters ClassCreator ReferenceType FieldGetter MethodInvocation f getName MethodInvocation MethodInvocation f getName splitName MemberReference f add BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation qs value StatementExpression MethodInvocation getters ClassCreator ReferenceType FieldGetter MethodInvocation f getName MemberReference name MemberReference f add End End End End MethodDeclaration /**
     * Convert names like ""abcDefGhi"" to ""abc def ghi"".
     */ Modifier private ReferenceType String splitName FormalParameter ReferenceType String url LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder BinaryOperation + MethodInvocation url length Literal 5 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation url Literal ""(?<=[a-z])(?=[A-Z])"" split BlockStatement IfStatement BinaryOperation > MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ' ' append End StatementExpression MethodInvocation buf MethodInvocation Introspector MemberReference token decapitalize append End ReturnStatement MethodInvocation buf toString MethodDeclaration Modifier private ReferenceType String stripGetPrefix FormalParameter ReferenceType Method m LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation m getName IfStatement MethodInvocation n Literal ""get"" startsWith StatementExpression Assignment MemberReference n MethodInvocation Introspector MethodInvocation n Literal 3 substring decapitalize = End ReturnStatement MemberReference n ClassDeclaration Modifier static abstract Getter FieldDeclaration Modifier final ReferenceType String VariableDeclarator url FieldDeclaration Modifier final ReferenceType String VariableDeclarator searchName ConstructorDeclaration Modifier protected Getter FormalParameter ReferenceType String url FormalParameter ReferenceType String searchName StatementExpression Assignment This MemberReference url MemberReference url = StatementExpression Assignment This MemberReference searchName MemberReference searchName = MethodDeclaration Modifier abstract ReferenceType Object get FormalParameter ReferenceType Object obj ClassDeclaration Modifier final static MethodGetter FieldDeclaration Modifier private final ReferenceType Method VariableDeclarator method ConstructorDeclaration Modifier public MethodGetter FormalParameter ReferenceType String url FormalParameter ReferenceType String searchName FormalParameter ReferenceType Method method StatementExpression SuperConstructorInvocation MemberReference url MemberReference searchName StatementExpression Assignment This MemberReference method MemberReference method = MethodDeclaration ReferenceType Object get FormalParameter ReferenceType Object obj TryStatement ReturnStatement MethodInvocation method MemberReference obj invoke CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement MethodInvocation MemberReference e toError CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator x MethodInvocation e getTargetException IfStatement BinaryOperation instanceof MemberReference x ReferenceType Error ThrowStatement Cast ReferenceType Error MemberReference x End IfStatement BinaryOperation instanceof MemberReference x ReferenceType RuntimeException ThrowStatement Cast ReferenceType RuntimeException MemberReference x End ThrowStatement ClassCreator ReferenceType Error MemberReference e ReferenceType Getter ClassDeclaration Modifier final static FieldGetter FieldDeclaration Modifier private final ReferenceType Field VariableDeclarator field ConstructorDeclaration Modifier public FieldGetter FormalParameter ReferenceType String url FormalParameter ReferenceType String searchName FormalParameter ReferenceType Field field StatementExpression SuperConstructorInvocation MemberReference url MemberReference searchName StatementExpression Assignment This MemberReference field MemberReference field = MethodDeclaration ReferenceType Object get FormalParameter ReferenceType Object obj TryStatement ReturnStatement MethodInvocation field MemberReference obj get CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement MethodInvocation MemberReference e toError ReferenceType Getter MethodDeclaration Modifier private static ReferenceType IllegalAccessError toError FormalParameter ReferenceType IllegalAccessException e LocalVariableDeclaration ReferenceType IllegalAccessError VariableDeclarator iae ClassCreator ReferenceType IllegalAccessError StatementExpression MethodInvocation iae MemberReference e initCause ReturnStatement MemberReference iae MethodDeclaration Modifier public addTo FormalParameter ReferenceType SearchIndexBuilder builder FormalParameter Modifier final ReferenceType Object instance ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Getter VariableDeclarator getter MemberReference getters StatementExpression MethodInvocation builder ClassCreator ReferenceType SearchItem MethodDeclaration Modifier public ReferenceType String getSearchName ReturnStatement MemberReference getter searchName MethodDeclaration Modifier public ReferenceType String getSearchUrl ReturnStatement MemberReference getter url MethodDeclaration Modifier public ReferenceType SearchIndex getSearchIndex LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation getter MemberReference instance get IfStatement BinaryOperation == MemberReference child Literal null ReturnStatement MemberReference SearchIndex EMPTY End ReturnStatement Cast ReferenceType SearchableModelObject MemberReference child add End",0
270,270,"CompilationUnit PackageDeclaration hudson.maven Import hudson  Import hudson.model  Import hudson.model.Descriptor.FormException Import hudson.model.ItemGroupMixIn.loadChildren  Import hudson.model.Queue Import hudson.model.Queue.Task Import hudson.search.CollectionSearchIndex Import hudson.search.SearchIndexBuilder Import hudson.tasks.Maven.MavenInstallation Import hudson.tasks  Import hudson.tasks.junit.JUnitResultArchiver Import hudson.util.CopyOnWriteMap Import hudson.util.DescribableList Import hudson.util.Function1 Import hudson.util.FormValidation Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.QueryParameter Import javax.servlet.ServletException Import java.io.File Import java.io.IOException Import java.util  Import net.sf.json.JSONObject Import org.kohsuke.stapler.export.Exported ClassDeclaration Modifier public final /**
 * Group of {@link MavenModule}s.
 *
 * <p>
 * This corresponds to the group of Maven POMs that constitute a single
 * tree of projects. This group serves as the grouping of those related
 * modules.
 *
 * @author Kohsuke Kawaguchi
 */ MavenModuleSet FieldDeclaration /**
     * All {@link MavenModule}s, keyed by their {@link MavenModule#getModuleName()} module name}s.
     */ Modifier transient ReferenceType Map TypeArgument ReferenceType ModuleName TypeArgument ReferenceType MavenModule VariableDeclarator modules ClassCreator ReferenceType CopyOnWriteMap ReferenceType Tree TypeArgument ReferenceType ModuleName TypeArgument ReferenceType MavenModule FieldDeclaration /**
     * Topologically sorted list of modules. This only includes live modules,
     * since archived ones usually don't have consistent history.
     */ Modifier transient Annotation CopyOnWrite ReferenceType List TypeArgument ReferenceType MavenModule VariableDeclarator sortedActiveModules FieldDeclaration /**
     * Name of the top-level module. Null until the root module is determined.
     */ Modifier private ReferenceType ModuleName VariableDeclarator rootModule FieldDeclaration Modifier private ReferenceType String VariableDeclarator rootPOM FieldDeclaration Modifier private ReferenceType String VariableDeclarator goals FieldDeclaration /**
     * Default goals specified in POM. Can be null.
     */ Modifier private ReferenceType String VariableDeclarator defaultGoals FieldDeclaration /**
     * Identifies {@link MavenInstallation} to be used.
     * Null to indicate 'default' maven.
     */ Modifier private ReferenceType String VariableDeclarator mavenName FieldDeclaration /**
     * Equivalent of CLI <tt>MAVEN_OPTS</tt>. Can be null.
     */ Modifier private ReferenceType String VariableDeclarator mavenOpts FieldDeclaration /**
     * If true, the build will be aggregator style, meaning
     * all the modules are executed in a single Maven invocation, as in CLI.
     * False otherwise, meaning each module is built separately and possibly in parallel.
     *
     * @since 1.133
     */ Modifier private BasicType boolean VariableDeclarator aggregatorStyleBuild Literal true FieldDeclaration /**
     * If true, the build will use its own local Maven repository
     * via ""-Dmaven.repo.local=..."".
     * <p>
     * This would consume additional disk space, but provides isolation with other builds on the same machine,
     * such as mixing SNAPSHOTS. Maven also doesn't try to coordinate the concurrent access to Maven repositories
     * from multiple Maven process, so this helps there too.
     *
     * @since 1.223
     */ Modifier private BasicType boolean VariableDeclarator usePrivateRepository Literal false FieldDeclaration /**
     * If true, do not automatically schedule a build when one of the project dependencies is built.
     * <p>
     * See HUDSON-1714.
     */ Modifier private BasicType boolean VariableDeclarator ignoreUpstremChanges Literal false FieldDeclaration /**
     * Reporters configured at {@link MavenModuleSet} level. Applies to all {@link MavenModule} builds.
     */ Modifier private ReferenceType DescribableList TypeArgument ReferenceType MavenReporter TypeArgument ReferenceType Descriptor TypeArgument ReferenceType MavenReporter VariableDeclarator reporters ClassCreator ReferenceType DescribableList TypeArgument ReferenceType MavenReporter TypeArgument ReferenceType Descriptor TypeArgument ReferenceType MavenReporter This FieldDeclaration /**
     * List of active {@link Publisher}s configured for this project.
     * @since 1.176
     */ Modifier private ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher VariableDeclarator publishers ClassCreator ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher This FieldDeclaration /**
     * List of active ${link BuildWrapper}s configured for this project.
     * @since 1.212
     */ Modifier private ReferenceType DescribableList TypeArgument ReferenceType BuildWrapper TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper VariableDeclarator buildWrappers ClassCreator ReferenceType DescribableList TypeArgument ReferenceType BuildWrapper TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper This ConstructorDeclaration Modifier public MavenModuleSet FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MethodInvocation Hudson getInstance MemberReference name MethodDeclaration Modifier public ReferenceType String getUrlChildPrefix ReturnStatement Literal ""."" MethodDeclaration Modifier public ReferenceType Hudson getParent ReturnStatement MethodInvocation Hudson getInstance MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType MavenModule getItems ReturnStatement MethodInvocation modules values MethodDeclaration Modifier public Annotation Exported ReferenceType Collection TypeArgument ReferenceType MavenModule getModules ReturnStatement MethodInvocation getItems MethodDeclaration Modifier public ReferenceType MavenModule getItem FormalParameter ReferenceType String name ReturnStatement MethodInvocation modules MethodInvocation ModuleName MemberReference name fromString get MethodDeclaration Modifier public ReferenceType MavenModule getModule FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name getItem MethodDeclaration Modifier protected updateTransientActions StatementExpression SuperMethodInvocation updateTransientActions ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator module MethodInvocation modules values BlockStatement StatementExpression MethodInvocation module updateTransientActions End IfStatement BinaryOperation != MemberReference publishers Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType BuildStep VariableDeclarator step MemberReference publishers BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation step This getProjectAction IfStatement BinaryOperation != MemberReference a Literal null StatementExpression MethodInvocation transientActions MemberReference a add End End End IfStatement BinaryOperation != MemberReference buildWrappers Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType BuildWrapper VariableDeclarator step MemberReference buildWrappers BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation step This getProjectAction IfStatement BinaryOperation != MemberReference a Literal null StatementExpression MethodInvocation transientActions MemberReference a add End End End MethodDeclaration Modifier protected addTransientActionsFromBuild FormalParameter ReferenceType MavenModuleSetBuild build FormalParameter ReferenceType Set TypeArgument ReferenceType Class added IfStatement BinaryOperation == MemberReference build Literal null ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation build getActions IfStatement BinaryOperation instanceof MemberReference a ReferenceType MavenAggregatedReport IfStatement MethodInvocation added MethodInvocation a getClass add StatementExpression MethodInvocation transientActions Cast ReferenceType MavenAggregatedReport MemberReference a add End End End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MavenReporter VariableDeclarator list MemberReference build projectActionReporters IfStatement BinaryOperation == MemberReference list Literal null ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenReporter VariableDeclarator step MemberReference list BlockStatement IfStatement MethodInvocation ! added MethodInvocation step getClass add ContinueStatement End LocalVariableDeclaration ReferenceType Action VariableDeclarator a MethodInvocation step This getAggregatedProjectAction IfStatement BinaryOperation != MemberReference a Literal null StatementExpression MethodInvocation transientActions MemberReference a add End End MethodDeclaration /**
     * Called by {@link MavenModule#doDoDelete(StaplerRequest, StaplerResponse)}.
     * Real deletion is done by the caller, and this method only adjusts the
     * data structure the parent maintains.
     */ onModuleDeleted FormalParameter ReferenceType MavenModule module StatementExpression MethodInvocation modules MethodInvocation module getModuleName remove MethodDeclaration /**
     * Returns true if there's any disabled module.
     */ Modifier public BasicType boolean hasDisabledModule ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation modules values BlockStatement IfStatement MethodInvocation m isDisabled ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration /**
     * Possibly empty list of all disabled modules (if disabled==true)
     * or all enabeld modules (if disabled==false)
     */ Modifier public ReferenceType List TypeArgument ReferenceType MavenModule getDisabledModules FormalParameter BasicType boolean disabled IfStatement BinaryOperation && MemberReference ! disabled BinaryOperation != MemberReference sortedActiveModules Literal null ReturnStatement MemberReference sortedActiveModules End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MavenModule VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MavenModule ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation modules values BlockStatement IfStatement BinaryOperation == MethodInvocation m isDisabled MemberReference disabled StatementExpression MethodInvocation r MemberReference m add End End ReturnStatement MemberReference r MethodDeclaration Modifier public ReferenceType Indenter TypeArgument ReferenceType MavenModule createIndenter ReturnStatement ClassCreator ReferenceType Indenter TypeArgument ReferenceType MavenModule MethodDeclaration Modifier protected BasicType int getNestLevel FormalParameter ReferenceType MavenModule job ReturnStatement MemberReference job nestLevel MethodDeclaration Modifier public BasicType boolean isAggregatorStyleBuild ReturnStatement MemberReference aggregatorStyleBuild MethodDeclaration Modifier public BasicType boolean usesPrivateRepository ReturnStatement MemberReference usePrivateRepository MethodDeclaration Modifier public BasicType boolean ignoreUpstremChanges ReturnStatement MemberReference ignoreUpstremChanges MethodDeclaration /**
     * List of active {@link MavenReporter}s that should be applied to all module builds.
     */ Modifier public ReferenceType DescribableList TypeArgument ReferenceType MavenReporter TypeArgument ReferenceType Descriptor TypeArgument ReferenceType MavenReporter getReporters ReturnStatement MemberReference reporters MethodDeclaration /**
     * List of active {@link Publisher}s. Can be empty but never null.
     */ Modifier public ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher getPublishers ReturnStatement MemberReference publishers MethodDeclaration Modifier public Annotation Override ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher getPublishersList ReturnStatement MemberReference publishers MethodDeclaration /**
     * List of active {@link BuildWrapper}s. Can be empty but never null.
     */ Modifier public ReferenceType DescribableList TypeArgument ReferenceType BuildWrapper TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper getBuildWrappers ReturnStatement MemberReference buildWrappers MethodDeclaration Modifier public ReferenceType Object getDynamic FormalParameter ReferenceType String token FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IfStatement MethodInvocation ModuleName MemberReference token isValid ReturnStatement MethodInvocation MemberReference token getModule End ReturnStatement SuperMethodInvocation MemberReference token MemberReference req MemberReference rsp getDynamic MethodDeclaration Modifier public ReferenceType File getRootDirFor FormalParameter ReferenceType MavenModule child ReturnStatement ClassCreator ReferenceType File MethodInvocation getModulesDir MethodInvocation child MethodInvocation toFileSystemName getModuleName MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Job getAllJobs LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Job VariableDeclarator jobs ClassCreator ReferenceType HashSet TypeArgument ReferenceType Job MethodInvocation getItems StatementExpression MethodInvocation jobs This add ReturnStatement MemberReference jobs MethodDeclaration /**
     * Gets the workspace of this job.
     */ Modifier public ReferenceType FilePath getWorkspace LocalVariableDeclaration ReferenceType Node VariableDeclarator node MethodInvocation getLastBuiltOn IfStatement BinaryOperation == MemberReference node Literal null StatementExpression Assignment MemberReference node MethodInvocation Hudson getInstance = End ReturnStatement MethodInvocation node This getWorkspaceFor MethodDeclaration Modifier protected Annotation Override ReferenceType Class TypeArgument ReferenceType MavenModuleSetBuild getBuildClass ReturnStatement ClassReference ReferenceType MavenModuleSetBuild MethodDeclaration Modifier protected Annotation Override ReferenceType SearchIndexBuilder makeSearchIndex ReturnStatement SuperMethodInvocation MethodInvocation ClassCreator ReferenceType CollectionSearchIndex TypeArgument ReferenceType MavenModule MethodDeclaration Modifier protected ReferenceType MavenModule get FormalParameter ReferenceType String key ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation modules values BlockStatement IfStatement MethodInvocation m MethodInvocation MemberReference key equals getDisplayName ReturnStatement MemberReference m End End ReturnStatement Literal null MethodDeclaration Modifier protected ReferenceType Collection TypeArgument ReferenceType MavenModule all ReturnStatement MethodInvocation modules values MethodDeclaration Modifier protected ReferenceType String getName FormalParameter ReferenceType MavenModule o ReturnStatement MethodInvocation o getName add makeSearchIndex MethodDeclaration Modifier public Annotation Override BasicType boolean isFingerprintConfigured ReturnStatement Literal true MethodDeclaration Modifier public onLoad FormalParameter ReferenceType ItemGroup TypeArgument ReferenceType Item extends parent FormalParameter ReferenceType String name IOException StatementExpression Assignment MemberReference modules MethodInvocation Collections emptyMap = StatementExpression SuperMethodInvocation MemberReference parent MemberReference name onLoad StatementExpression Assignment MemberReference modules MethodInvocation This MethodInvocation getModulesDir ClassCreator ReferenceType Function1 TypeArgument ReferenceType ModuleName TypeArgument ReferenceType MavenModule MethodDeclaration Modifier public ReferenceType ModuleName call FormalParameter ReferenceType MavenModule module ReturnStatement MethodInvocation module getModuleName loadChildren = LocalVariableDeclaration ReferenceType MavenModule VariableDeclarator root MethodInvocation getRootModule IfStatement BinaryOperation && BinaryOperation != MemberReference root Literal null BinaryOperation != MethodInvocation root getChildren Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MavenModule VariableDeclarator sortedList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MavenModule LocalVariableDeclaration ReferenceType Stack TypeArgument ReferenceType MavenModule VariableDeclarator q ClassCreator ReferenceType Stack TypeArgument ReferenceType MavenModule StatementExpression Assignment MemberReference root nestLevel Literal 0 = StatementExpression MethodInvocation q MemberReference root push WhileStatement MethodInvocation ! q isEmpty BlockStatement LocalVariableDeclaration ReferenceType MavenModule VariableDeclarator p MethodInvocation q pop StatementExpression MethodInvocation sortedList MemberReference p add LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MavenModule VariableDeclarator children MethodInvocation p getChildren IfStatement BinaryOperation != MemberReference children Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MemberReference children StatementExpression Assignment MemberReference m nestLevel BinaryOperation + MemberReference p nestLevel Literal 1 = End ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation children size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i StatementExpression MethodInvocation q MethodInvocation children MemberReference i get push End End End StatementExpression Assignment This MemberReference sortedActiveModules MemberReference sortedList = BlockStatement StatementExpression Assignment This MemberReference sortedActiveModules MethodInvocation Literal false getDisabledModules = End IfStatement BinaryOperation == MemberReference reporters Literal null StatementExpression Assignment MemberReference reporters ClassCreator ReferenceType DescribableList TypeArgument ReferenceType MavenReporter TypeArgument ReferenceType Descriptor TypeArgument ReferenceType MavenReporter This = End StatementExpression MethodInvocation reporters This setOwner IfStatement BinaryOperation == MemberReference publishers Literal null StatementExpression Assignment MemberReference publishers ClassCreator ReferenceType DescribableList TypeArgument ReferenceType Publisher TypeArgument ReferenceType Descriptor TypeArgument ReferenceType Publisher This = End StatementExpression MethodInvocation publishers This setOwner IfStatement BinaryOperation == MemberReference buildWrappers Literal null StatementExpression Assignment MemberReference buildWrappers ClassCreator ReferenceType DescribableList TypeArgument ReferenceType BuildWrapper TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper This = End StatementExpression MethodInvocation buildWrappers This setOwner StatementExpression MethodInvocation updateTransientActions MethodDeclaration Modifier private ReferenceType File getModulesDir ReturnStatement ClassCreator ReferenceType File MethodInvocation getRootDir Literal ""modules"" MethodDeclaration /**
     * To make it easy to grasp relationship among modules
     * and the module set, we'll align the build numbers of
     * all the modules.
     *
     * <p>
     * This method is invoked from {@link Executor#run()},
     * and because of the mutual exclusion among {@link MavenModuleSetBuild}
     * and {@link MavenBuild}, we can safely touch all the modules.
     */ Modifier public synchronized BasicType int assignBuildNumber IOException StatementExpression MethodInvocation updateNextBuildNumber ReturnStatement SuperMethodInvocation assignBuildNumber MethodDeclaration Modifier public logRotate IOException InterruptedException StatementExpression SuperMethodInvocation logRotate ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation modules values StatementExpression MethodInvocation m logRotate End MethodDeclaration /**
     * The next build of {@link MavenModuleSet} must have
     * the build number newer than any of the current module build.
     */ updateNextBuildNumber IOException LocalVariableDeclaration BasicType int VariableDeclarator next This MemberReference nextBuildNumber ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation modules values StatementExpression Assignment MemberReference next MethodInvocation Math MemberReference next MethodInvocation m getNextBuildNumber max = End IfStatement BinaryOperation != This MemberReference nextBuildNumber MemberReference next BlockStatement StatementExpression Assignment This MemberReference nextBuildNumber MemberReference next = StatementExpression This MethodInvocation saveNextBuildNumber End MethodDeclaration Modifier protected buildDependencyGraph FormalParameter ReferenceType DependencyGraph graph StatementExpression MethodInvocation publishers This MemberReference graph buildDependencyGraph StatementExpression MethodInvocation buildWrappers This MemberReference graph buildDependencyGraph MethodDeclaration Modifier public ReferenceType MavenModule getRootModule IfStatement BinaryOperation == MemberReference rootModule Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation modules MemberReference rootModule get MethodDeclaration Modifier public ReferenceType MavenInstallation inferMavenInstallation ReturnStatement MethodInvocation getMaven MethodDeclaration Modifier protected Annotation Override ReferenceType Set TypeArgument ReferenceType ResourceActivity getResourceActivities LocalVariableDeclaration Modifier final ReferenceType Set TypeArgument ReferenceType ResourceActivity VariableDeclarator activities ClassCreator ReferenceType HashSet TypeArgument ReferenceType ResourceActivity StatementExpression MethodInvocation activities SuperMethodInvocation getResourceActivities addAll StatementExpression MethodInvocation activities MethodInvocation Util MemberReference publishers ClassReference ReferenceType ResourceActivity filter addAll StatementExpression MethodInvocation activities MethodInvocation Util MemberReference buildWrappers ClassReference ReferenceType ResourceActivity filter addAll ReturnStatement MemberReference activities MethodDeclaration /**
     * Gets the location of top-level <tt>pom.xml</tt> relative to the workspace root.
     */ Modifier public ReferenceType String getRootPOM IfStatement BinaryOperation == MemberReference rootPOM Literal null ReturnStatement Literal ""pom.xml"" End ReturnStatement MemberReference rootPOM MethodDeclaration Modifier public setRootPOM FormalParameter ReferenceType String rootPOM StatementExpression Assignment This MemberReference rootPOM MemberReference rootPOM = MethodDeclaration Modifier public ReferenceType AbstractProject TypeArgument ? TypeArgument ? asProject ReturnStatement This MethodDeclaration /**
     * Gets the list of goals to execute.
     */ Modifier public ReferenceType String getGoals IfStatement BinaryOperation == MemberReference goals Literal null BlockStatement IfStatement BinaryOperation != MemberReference defaultGoals Literal null ReturnStatement MemberReference defaultGoals End ReturnStatement Literal ""install"" End ReturnStatement MemberReference goals MethodDeclaration Modifier public setGoals FormalParameter ReferenceType String goals StatementExpression Assignment This MemberReference goals MemberReference goals = MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String getMavenArgument FormalParameter ReferenceType String shortForm FormalParameter ReferenceType String longForm LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator args ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration BasicType boolean VariableDeclarator switchFound Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation Util MethodInvocation getGoals tokenize BlockStatement IfStatement MemberReference switchFound BlockStatement StatementExpression MethodInvocation args MemberReference t add StatementExpression Assignment MemberReference switchFound Literal false = IfStatement BinaryOperation || MethodInvocation t MemberReference shortForm equals MethodInvocation t MemberReference longForm equals StatementExpression Assignment MemberReference switchFound Literal true = IfStatement MethodInvocation t MemberReference shortForm startsWith BlockStatement StatementExpression MethodInvocation args MethodInvocation t MethodInvocation shortForm length substring add IfStatement MethodInvocation t MemberReference longForm startsWith BlockStatement StatementExpression MethodInvocation args MethodInvocation t MethodInvocation longForm length substring add End End End End End ReturnStatement MemberReference args MethodDeclaration /**
     * If the list of configured goals contain the ""-P"" option,
     * return the configured profiles. Otherwise null.
     */ Modifier public ReferenceType String getProfiles ReturnStatement MethodInvocation Util MethodInvocation Literal ""-P"" Literal ""--activate-profiles"" getMavenArgument Literal "","" join MethodDeclaration /**
     * Gets the system properties explicitly set in the Maven command line (the ""-D"" option.)
     */ Modifier public ReferenceType Properties getMavenProperties LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation Literal ""-D"" Literal ""--define"" getMavenArgument BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation arg Literal '=' indexOf IfStatement BinaryOperation < MemberReference idx Literal 0 StatementExpression MethodInvocation props MemberReference arg Literal ""true"" put StatementExpression MethodInvocation props MethodInvocation arg Literal 0 MemberReference idx substring MethodInvocation arg BinaryOperation + MemberReference idx Literal 1 substring put End End ReturnStatement MemberReference props MethodDeclaration /**
     * Possibly null, whitespace-separated (including TAB, NL, etc) VM options
     * to be used to launch Maven process.
     */ Modifier public ReferenceType String getMavenOpts ReturnStatement MemberReference mavenOpts MethodDeclaration /**
     * Gets the Maven to invoke.
     * If null, we pick any random Maven installation.
     */ Modifier public ReferenceType MavenInstallation getMaven ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenInstallation VariableDeclarator i MethodInvocation DESCRIPTOR MethodInvocation getInstallations getMavenDescriptor BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference mavenName Literal null MethodInvocation i MethodInvocation MemberReference mavenName equals getName ReturnStatement MemberReference i End End ReturnStatement Literal null MethodDeclaration Modifier public setMaven FormalParameter ReferenceType String mavenName StatementExpression Assignment This MemberReference mavenName MemberReference mavenName = MethodDeclaration /**
     * Returns the {@link MavenModule}s that are in the queue.
     */ Modifier public ReferenceType List TypeArgument ReferenceType Queue ReferenceType Item getQueueItems LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Queue ReferenceType Item VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType hudson ReferenceType model ReferenceType Queue ReferenceType Item ForStatement EnhancedForControl VariableDeclaration ReferenceType Queue ReferenceType Item VariableDeclarator item MethodInvocation Hudson MethodInvocation getQueue MethodInvocation getItems getInstance BlockStatement LocalVariableDeclaration ReferenceType Task VariableDeclarator t MemberReference item task IfStatement BinaryOperation || BinaryOperation && BinaryOperation instanceof MemberReference t ReferenceType MavenModule BinaryOperation == Cast ReferenceType MavenModule MemberReference t This BinaryOperation == MemberReference t This StatementExpression MethodInvocation r MemberReference item add End End ReturnStatement MemberReference r MethodDeclaration /**
     * Gets the list of goals specified by the user,
     * without taking inheritance and POM default goals
     * into account.
     *
     * <p>
     * This is only used to present the UI screen, and in
     * all the other cases {@link #getGoals()} should be used.
     */ Modifier public ReferenceType String getUserConfiguredGoals ReturnStatement MemberReference goals MethodDeclaration reconfigure FormalParameter ReferenceType PomInfo rootPom IOException IfStatement BinaryOperation && BinaryOperation != This MemberReference rootModule Literal null This MemberReference rootModule MethodInvocation MemberReference rootPom name equals ReturnStatement End StatementExpression Assignment This MemberReference rootModule MemberReference rootPom name = StatementExpression Assignment This MemberReference defaultGoals MemberReference rootPom defaultGoal = StatementExpression MethodInvocation save MethodDeclaration Modifier protected submit FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException FormException StatementExpression SuperMethodInvocation MemberReference req MemberReference rsp submit LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator json MethodInvocation req getSubmittedForm StatementExpression Assignment MemberReference rootPOM MethodInvocation Util MethodInvocation req MethodInvocation trim Literal ""rootPOM"" getParameter fixEmpty = IfStatement BinaryOperation && BinaryOperation != MemberReference rootPOM Literal null MethodInvocation rootPOM Literal ""pom.xml"" equals StatementExpression Assignment MemberReference rootPOM Literal null = End StatementExpression Assignment MemberReference goals MethodInvocation Util MethodInvocation req MethodInvocation trim Literal ""goals"" getParameter fixEmpty = StatementExpression Assignment MemberReference mavenOpts MethodInvocation Util MethodInvocation req MethodInvocation trim Literal ""mavenOpts"" getParameter fixEmpty = StatementExpression Assignment MemberReference mavenName MethodInvocation req Literal ""maven_version"" getParameter = StatementExpression Assignment MemberReference aggregatorStyleBuild MethodInvocation ! req Literal ""maven.perModuleBuild"" hasParameter = StatementExpression Assignment MemberReference usePrivateRepository MethodInvocation req Literal ""maven.usePrivateRepository"" hasParameter = StatementExpression Assignment MemberReference ignoreUpstremChanges MethodInvocation ! json Literal ""triggerByDependency"" has = StatementExpression MethodInvocation reporters MemberReference req MemberReference json MethodInvocation MavenReporters getConfigurableList rebuild StatementExpression MethodInvocation publishers MemberReference req MemberReference json MethodInvocation BuildStepDescriptor MethodInvocation Publisher all This MethodInvocation getClass filter rebuild StatementExpression MethodInvocation buildWrappers MemberReference req MemberReference json MethodInvocation BuildWrappers This getFor rebuild StatementExpression MethodInvocation updateTransientActions MethodDeclaration /**
     * Delete all disabled modules.
     */ Modifier public doDoDeleteAllDisabledModules FormalParameter ReferenceType StaplerResponse rsp IOException InterruptedException StatementExpression MethodInvocation MemberReference DELETE checkPermission ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator m MethodInvocation Literal true getDisabledModules StatementExpression MethodInvocation m delete End StatementExpression MethodInvocation rsp Literal ""."" sendRedirect2 MethodDeclaration /**
     * Check the location of POM.
     */ Modifier public ReferenceType FormValidation doCheckRootPOM FormalParameter Annotation QueryParameter ReferenceType String value IOException ServletException LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation getModuleRoot IfStatement BinaryOperation == MemberReference ws Literal null ReturnStatement MethodInvocation FormValidation ok End ReturnStatement MethodInvocation ws MemberReference value Literal true Literal true validateRelativePath MethodDeclaration Modifier public ReferenceType TopLevelItemDescriptor getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static Annotation Extension ElementValuePair ordinal Literal 900 ReferenceType DescriptorImpl VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public final static DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages MavenModuleSet_DiplayName MethodDeclaration Modifier public ReferenceType MavenModuleSet newInstance FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType MavenModuleSet MemberReference name MethodDeclaration Modifier public ReferenceType Maven ReferenceType DescriptorImpl getMavenDescriptor ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference Maven ReferenceType DescriptorImpl getDescriptorByType getInstance MethodDeclaration Modifier public Annotation Override BasicType boolean isApplicable FormalParameter ReferenceType Descriptor descriptor ReturnStatement MethodInvocation ! NOT_APPLICABLE_TYPES MemberReference descriptor clazz contains FieldDeclaration Modifier private final static ReferenceType Set TypeArgument ReferenceType Class VariableDeclarator NOT_APPLICABLE_TYPES ClassCreator ReferenceType HashSet TypeArgument ReferenceType Class MethodInvocation Arrays ClassReference ReferenceType ArtifactArchiver ClassReference ReferenceType Fingerprinter ClassReference ReferenceType JavadocArchiver ClassReference ReferenceType Mailer ClassReference ReferenceType JUnitResultArchiver asList ReferenceType AbstractProjectDescriptor ReferenceType AbstractMavenProject TypeArgument ReferenceType MavenModuleSet TypeArgument ReferenceType MavenModuleSetBuild ReferenceType TopLevelItem ReferenceType ItemGroup TypeArgument ReferenceType MavenModule ReferenceType SCMedItem ReferenceType Saveable",0
239,239,"CompilationUnit PackageDeclaration hudson.tools Import hudson.ExtensionList Import hudson.ExtensionPoint Import hudson.scm.CVSChangeLogSet.File Import hudson.slaves.NodeSpecific Import hudson.model.Hudson Import hudson.model.Node Import hudson.model.TaskListener Import java.io.IOException ClassDeclaration Modifier public abstract /**
 * This Hudson-wide extension points can participate in determining the actual node-specific path
 * of the {@link ToolInstallation} for the given {@link Node}.
 *
 * <p>
 * This extension point is useful when there's a deterministic rule of where tools are installed.
 * One can program such a logic and contribute a {@link ToolLocationTranslator}.
 * Compared to manually specifying {@link ToolLocationNodeProperty}, duplicated configurations
 * can be avoided this way. 
 *
 * <p>
 * Entry point to the translation process is
 *
 * @author Kohsuke Kawaguchi
 * @since 1.299
 * @see ToolInstallation#translateFor(Node, TaskListener)
 */ ToolLocationTranslator MethodDeclaration /**
     * Called for each {@link ToolInstallation#translateFor(Node, TaskListener)} invocations
     * (which normally means it's invoked for each {@link NodeSpecific#forNode(Node, TaskListener)})
     * to translate the tool location into the node specific location.
     *
     * <p>
     * If this implementation is capable of determining the location, return the path in the absolute file name.
     * (This method doesn't return {@link File} so that it can handle path names of a different OS.
     *
     * <p>
     * Otherwise return null to let other {@link ToolLocationTranslator}s a chance to do translations
     * on their own. 
     */ Modifier public abstract ReferenceType String getToolHome FormalParameter ReferenceType Node node FormalParameter ReferenceType ToolInstallation installation FormalParameter ReferenceType TaskListener log IOException InterruptedException MethodDeclaration /**
     * Returns all the registered {@link ToolLocationTranslator}s.
     */ Modifier public static ReferenceType ExtensionList TypeArgument ReferenceType ToolLocationTranslator all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType ToolLocationTranslator getExtensionList getInstance ReferenceType ExtensionPoint",0
68,68,"CompilationUnit PackageDeclaration hudson.security Import hudson.CopyOnWrite Import hudson.model.Hudson Import java.util.List Import java.util.Collections Import java.util.ArrayList Import java.util.Iterator Import java.util.Map Import java.util.concurrent.CopyOnWriteArrayList Import java.util.concurrent.ConcurrentHashMap Import org.jvnet.localizer.Localizable ClassDeclaration Modifier public final /**
 * Group of {@link Permission}s that share the same {@link Permission#owner owner}.
 *
 * Sortable by the owner class name.
 */ PermissionGroup FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType Permission VariableDeclarator permisisons ClassCreator ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType Permission FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType Permission VariableDeclarator permisisonsView MethodInvocation Collections MemberReference permisisons unmodifiableList FieldDeclaration Modifier public final ReferenceType Class VariableDeclarator owner FieldDeclaration /**
     * Human readable title of this permission group.
     * This should be short.
     */ Modifier public final ReferenceType Localizable VariableDeclarator title ConstructorDeclaration Modifier public PermissionGroup FormalParameter ReferenceType Class owner FormalParameter ReferenceType Localizable title StatementExpression Assignment This MemberReference owner MemberReference owner = StatementExpression Assignment This MemberReference title MemberReference title = SynchronizedStatement ClassReference ReferenceType PermissionGroup LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType PermissionGroup VariableDeclarator allGroups ClassCreator ReferenceType ArrayList TypeArgument ReferenceType PermissionGroup MemberReference ALL StatementExpression MethodInvocation allGroups This add StatementExpression MethodInvocation Collections MemberReference allGroups sort StatementExpression Assignment MemberReference ALL MethodInvocation Collections MemberReference allGroups unmodifiableList = StatementExpression MethodInvocation PERMISSIONS MemberReference owner This put MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType Permission iterator ReturnStatement MethodInvocation permisisons iterator MethodDeclaration add FormalParameter ReferenceType Permission p StatementExpression MethodInvocation permisisons MemberReference p add MethodDeclaration /**
     * Lists up all the permissions in this group.
     */ Modifier public ReferenceType List TypeArgument ReferenceType Permission getPermissions ReturnStatement MemberReference permisisonsView MethodDeclaration /**
     * Finds a permission that has the given name.
     */ Modifier public ReferenceType Permission find FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Permission VariableDeclarator p MemberReference permisisons BlockStatement IfStatement MethodInvocation p.name MemberReference name equals ReturnStatement MemberReference p End End ReturnStatement Literal null MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType PermissionGroup that LocalVariableDeclaration BasicType int VariableDeclarator r BinaryOperation - This MethodInvocation compareOrder MethodInvocation that compareOrder IfStatement BinaryOperation != MemberReference r Literal 0 ReturnStatement MemberReference r End ReturnStatement This MemberReference owner MethodInvocation getName MethodInvocation MethodInvocation that.owner getName compareTo MethodDeclaration Modifier private BasicType int compareOrder IfStatement BinaryOperation == MemberReference owner ClassReference ReferenceType Hudson ReturnStatement Literal 0 End ReturnStatement Literal 1 MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation permisisons size FieldDeclaration /**
     * All groups. Sorted.
     */ Modifier private static Annotation CopyOnWrite ReferenceType List TypeArgument ReferenceType PermissionGroup VariableDeclarator ALL MethodInvocation Collections emptyList MethodDeclaration /**
     * Returns all the {@link PermissionGroup}s available in the system.
     * @return
     *      always non-null. Read-only.
     */ Modifier public static ReferenceType List TypeArgument ReferenceType PermissionGroup getAll ReturnStatement MemberReference ALL MethodDeclaration /**
     * Gets the {@link PermissionGroup} whose {@link PermissionGroup#owner} is the given class.
     *
     * @return  null if not found.
     */ Modifier public static ReferenceType PermissionGroup get FormalParameter ReferenceType Class owner ReturnStatement MethodInvocation PERMISSIONS MemberReference owner get FieldDeclaration /**
     * All the permissions in the system, keyed by their owners.
     */ Modifier private final static ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType PermissionGroup VariableDeclarator PERMISSIONS ClassCreator ReferenceType ConcurrentHashMap TypeArgument ReferenceType Class TypeArgument ReferenceType PermissionGroup ReferenceType Iterable TypeArgument ReferenceType Permission ReferenceType Comparable TypeArgument ReferenceType PermissionGroup",1
228,228,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.Authentication Import org.acegisecurity.GrantedAuthority Import org.acegisecurity.acls.sid.PrincipalSid Import org.acegisecurity.acls.sid.GrantedAuthoritySid Import org.acegisecurity.acls.sid.Sid ClassDeclaration Modifier public abstract /**
 * {@link ACL} that checks permissions based on {@link GrantedAuthority}
 * of the {@link Authentication}.
 *
 * @author Kohsuke Kawaguchi
 */ SidACL MethodDeclaration Modifier public Annotation Override BasicType boolean hasPermission FormalParameter ReferenceType Authentication a FormalParameter ReferenceType Permission permission IfStatement BinaryOperation == MemberReference a MemberReference SYSTEM ReturnStatement Literal true End LocalVariableDeclaration ReferenceType Boolean VariableDeclarator b MethodInvocation MemberReference a MemberReference permission _hasPermission IfStatement BinaryOperation == MemberReference b Literal null StatementExpression Assignment MemberReference b Literal false = End ReturnStatement MemberReference b MethodDeclaration /**
     * Implementation that backs up {@link #hasPermission(Authentication, Permission)}.
     *
     * @return
     *      true or false if {@link #hasPermission(Sid, Permission)} returns it.
     *      Otherwise null, indicating that this ACL doesn't have any entry for it.
     */ Modifier protected ReferenceType Boolean _hasPermission FormalParameter ReferenceType Authentication a FormalParameter ReferenceType Permission permission LocalVariableDeclaration ReferenceType Boolean VariableDeclarator b MethodInvocation ClassCreator ReferenceType PrincipalSid MemberReference a MemberReference permission hasPermission IfStatement BinaryOperation != MemberReference b Literal null ReturnStatement MemberReference b End ForStatement EnhancedForControl VariableDeclaration ReferenceType GrantedAuthority VariableDeclarator ga MethodInvocation a getAuthorities BlockStatement StatementExpression Assignment MemberReference b MethodInvocation ClassCreator ReferenceType GrantedAuthoritySid MemberReference ga MemberReference permission hasPermission = IfStatement BinaryOperation != MemberReference b Literal null ReturnStatement MemberReference b End End StatementExpression Assignment MemberReference b MethodInvocation MemberReference EVERYONE MemberReference permission hasPermission = IfStatement BinaryOperation != MemberReference b Literal null ReturnStatement MemberReference b End StatementExpression Assignment MemberReference b MethodInvocation MemberReference ANONYMOUS MemberReference permission hasPermission = IfStatement BinaryOperation != MemberReference b Literal null ReturnStatement MemberReference b End ReturnStatement Literal null MethodDeclaration /**
     * Checks if the given {@link Sid} has the given {@link Permission}.
     *
     * <p>
     * {@link #hasPermission(Authentication, Permission)} is implemented
     * by checking authentication's {@link GrantedAuthority} by using
     * this method.
     *
     * <p>
     * It is the implementor's responsibility to recognize {@link Permission#impliedBy}
     * and take that into account.
     *
     * @return
     *      true if the access should be granted, false if it should be denied.
     *      The null value indicates that the ACL does no rule for this Sid/Permission
     *      combination. The caller can decide what to do &mash; such as consulting the higher level ACL,
     *      or denying the access (if the model is no-access-by-default.)  
     */ Modifier protected abstract ReferenceType Boolean hasPermission FormalParameter ReferenceType Sid p FormalParameter ReferenceType Permission permission MethodDeclaration Modifier protected ReferenceType String toString FormalParameter ReferenceType Sid p IfStatement BinaryOperation instanceof MemberReference p ReferenceType GrantedAuthoritySid ReturnStatement Cast ReferenceType GrantedAuthoritySid MemberReference p End IfStatement BinaryOperation instanceof MemberReference p ReferenceType PrincipalSid ReturnStatement Cast ReferenceType PrincipalSid MemberReference p End IfStatement BinaryOperation == MemberReference p MemberReference EVERYONE ReturnStatement Literal ""role_everyone"" End ReturnStatement MethodInvocation p toString MethodDeclaration /**
     * Creates a new {@link SidACL} that first consults 'this' {@link SidACL} and then delegate to
     * the given parent {@link SidACL}. By doing this at the {@link SidACL} level and not at the
     * {@link ACL} level, this allows the child ACLs to have an explicit deny entry.
     * Note that the combined ACL calls hasPermission(Sid,Permission) in the child and parent
     * SidACLs directly, so if these override _hasPermission then this custom behavior will
     * not be applied.
     */ Modifier public final ReferenceType SidACL newInheritingACL FormalParameter Modifier final ReferenceType SidACL parent LocalVariableDeclaration Modifier final ReferenceType SidACL VariableDeclarator child This ReturnStatement ClassCreator ReferenceType SidACL MethodDeclaration Modifier protected ReferenceType Boolean hasPermission FormalParameter ReferenceType Sid p FormalParameter ReferenceType Permission permission LocalVariableDeclaration ReferenceType Boolean VariableDeclarator b MethodInvocation child MemberReference p MemberReference permission hasPermission IfStatement BinaryOperation != MemberReference b Literal null ReturnStatement MemberReference b End ReturnStatement MethodInvocation parent MemberReference p MemberReference permission hasPermission ReferenceType ACL",0
182,182,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.Extension Import hudson.ExtensionList Import hudson.ExtensionListView Import hudson.ExtensionPoint Import hudson.model.AbstractProject Import hudson.model.Hudson Import hudson.model.User Import hudson.scm.CVSSCM Import hudson.scm.SCM Import java.util.HashMap Import java.util.List Import java.util.Map Import java.util.regex.Matcher Import java.util.regex.Pattern ClassDeclaration Modifier public abstract /**
 * Infers e-mail addresses for the user when none is specified.
 *
 * <p>
 * This is an extension point of Hudson. Plugins tha contribute new implementation
 * of this class should put {@link Extension} on your implementation class, like this:
 *
 * <pre>
 * &#64;Extension
 * class MyMailAddressResolver extends {@link MailAddressResolver} {
 *   ...
 * }
 * </pre>
 *
 * @author Kohsuke Kawaguchi
 * @since 1.192
 */ MailAddressResolver MethodDeclaration /**
     * Infers e-mail address of the given user.
     *
     * <p>
     * This method is called when a {@link User} without explicitly configured e-mail
     * address is used, as an attempt to infer e-mail address.
     *
     * <p>
     * The normal strategy is to look at {@link User#getProjects() the projects that the user
     * is participating}, then use the repository information to infer the e-mail address.
     *
     * <p>
     * When multiple resolvers are installed, they are consulted in order and
     * the search will be over when an address is inferred by someone.
     *
     * <p>
     * Since {@link MailAddressResolver} is singleton, this method can be invoked concurrently
     * from multiple threads.
     *
     * @return
     *      null if the inference failed.
     */ Modifier public abstract ReferenceType String findMailAddressFor FormalParameter ReferenceType User u MethodDeclaration Modifier public static ReferenceType String resolve FormalParameter ReferenceType User u ForStatement EnhancedForControl VariableDeclaration ReferenceType MailAddressResolver VariableDeclarator r MethodInvocation all BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator email MethodInvocation r MemberReference u findMailAddressFor IfStatement BinaryOperation != MemberReference email Literal null ReturnStatement MemberReference email End End LocalVariableDeclaration ReferenceType String VariableDeclarator extractedAddress MethodInvocation MethodInvocation u getId extractAddressFromId IfStatement BinaryOperation != MemberReference extractedAddress Literal null ReturnStatement MemberReference extractedAddress End IfStatement MethodInvocation u MethodInvocation Literal ""@"" contains getId ReturnStatement MethodInvocation u getId End LocalVariableDeclaration ReferenceType String VariableDeclarator ds MethodInvocation Mailer MethodInvocation getDefaultSuffix descriptor IfStatement BinaryOperation != MemberReference ds Literal null ReturnStatement BinaryOperation + MethodInvocation u getId MemberReference ds ReturnStatement Literal null End MethodDeclaration /**
     * Tries to extract an email address from the user id, or returns null
     */ Modifier private static ReferenceType String extractAddressFromId FormalParameter ReferenceType String id LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation EMAIL_ADDRESS_REGEXP MemberReference id matcher IfStatement MethodInvocation m matches ReturnStatement MethodInvocation m Literal 1 group End ReturnStatement Literal null FieldDeclaration /**
     * Matches strings like ""Kohsuke Kawaguchi &lt;kohsuke.kawaguchi@sun.com>""
     * @see #extractAddressFromId(String)
     */ Modifier private final static ReferenceType Pattern VariableDeclarator EMAIL_ADDRESS_REGEXP MethodInvocation Pattern Literal ""^.*<([^>]+)>.*$"" compile FieldDeclaration /**
     * All registered {@link MailAddressResolver} implementations.
     *
     * @deprecated as of 1.286
     *      Use {@link #all()} for read access and {@link Extension} for registration.
     */ Modifier public final static ReferenceType List TypeArgument ReferenceType MailAddressResolver VariableDeclarator LIST MethodInvocation ExtensionListView ClassReference ReferenceType MailAddressResolver createList MethodDeclaration /**
     * Returns all the registered {@link MailAddressResolver} descriptors.
     */ Modifier public static ReferenceType ExtensionList TypeArgument ReferenceType MailAddressResolver all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType MailAddressResolver getExtensionList getInstance ClassDeclaration Modifier public static Annotation Extension /**
     * {@link MailAddressResolver} implemenations that cover well-known major public sites.
     *
     * <p>
     * Since this has low UI visibility, we are open to having a large number of rules here.
     * If you'd like to add one, please contribute more rules.
     */ DefaultAddressResolver MethodDeclaration Modifier public ReferenceType String findMailAddressFor FormalParameter ReferenceType User u ForStatement EnhancedForControl VariableDeclaration ReferenceType AbstractProject TypeArgument ? TypeArgument ? VariableDeclarator p MethodInvocation u getProjects BlockStatement LocalVariableDeclaration ReferenceType SCM VariableDeclarator scm MethodInvocation p getScm IfStatement BinaryOperation instanceof MemberReference scm ReferenceType CVSSCM BlockStatement LocalVariableDeclaration ReferenceType CVSSCM VariableDeclarator cvsscm Cast ReferenceType CVSSCM MemberReference scm LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference u MethodInvocation cvsscm getCvsRoot findMailAddressFor IfStatement BinaryOperation != MemberReference s Literal null ReturnStatement MemberReference s End End End ReturnStatement Literal null MethodDeclaration /**
         *
         * @param scm
         *      String that represents SCM connectivity.
         */ Modifier protected ReferenceType String findMailAddressFor FormalParameter ReferenceType User u FormalParameter ReferenceType String scm ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Pattern TypeArgument ReferenceType String VariableDeclarator e MethodInvocation RULE_TABLE entrySet IfStatement MethodInvocation e MethodInvocation MemberReference scm matcher MethodInvocation matches getKey ReturnStatement BinaryOperation + MethodInvocation u getId MethodInvocation e getValue End End ReturnStatement Literal null FieldDeclaration Modifier private final static ReferenceType Map TypeArgument ReferenceType Pattern TypeArgument ReferenceType String VariableDeclarator RULE_TABLE ClassCreator ReferenceType HashMap TypeArgument ReferenceType Pattern TypeArgument ReferenceType String BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator username Literal ""([A-Za-z0-9_\\-])+"" LocalVariableDeclaration ReferenceType String VariableDeclarator host Literal ""(.*.dev.java.net|kohsuke.sfbay.*)"" LocalVariableDeclaration ReferenceType Pattern VariableDeclarator cvsUrl MethodInvocation Pattern BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "":pserver:"" MemberReference username Literal ""@"" MemberReference host Literal "":/cvs"" compile StatementExpression MethodInvocation RULE_TABLE MemberReference cvsUrl Literal ""@dev.java.net"" put BlockStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator cvsUrl MethodInvocation Pattern Literal "":(pserver|ext):([^@]+)@([^.]+).cvs.(sourceforge|sf).net:.+"" compile StatementExpression MethodInvocation RULE_TABLE MemberReference cvsUrl Literal ""@users.sourceforge.net"" put ReferenceType MailAddressResolver ReferenceType ExtensionPoint",0
67,67,"CompilationUnit PackageDeclaration hudson.util Import org.jfree.chart.axis.CategoryAxis Import org.jfree.chart.axis.ValueAxis Import org.jfree.chart.entity.EntityCollection Import org.jfree.chart.labels.CategoryToolTipGenerator Import org.jfree.chart.plot.CategoryPlot Import org.jfree.chart.renderer.AreaRendererEndType Import org.jfree.chart.renderer.category.CategoryItemRendererState Import org.jfree.chart.renderer.category.StackedAreaRenderer Import org.jfree.chart.urls.CategoryURLGenerator Import org.jfree.data.category.CategoryDataset Import org.jfree.ui.RectangleEdge Import java.awt.Graphics2D Import java.awt.Polygon Import java.awt.Paint Import java.awt.geom.Rectangle2D ClassDeclaration Modifier public /**
 * Modified {@link StackedAreaRenderer}.
 *
 * <ol>
 * <li>Built-in support for {@link #generateToolTip(CategoryDataset, int, int) tooltip}
 *     and {@link #generateURL(CategoryDataset, int, int) hyperlinks} for clickable map.
 * <li>Clickable map hit test is modified so that the entire area is clickable,
 *     not just the small area around each data point.
 * <li>Rendering algorithm is modified so that
 *     {@link #getItemPaint(int, int) different color on the same data series}
 *     will look more natural.
 * </ol>
 *
 * @author Kohsuke Kawaguchi
*/ StackedAreaRenderer2 ConstructorDeclaration Modifier public StackedAreaRenderer2 StatementExpression MethodInvocation MemberReference AreaRendererEndType TRUNCATE setEndType StatementExpression MethodInvocation This setItemURLGenerator StatementExpression MethodInvocation This setToolTipGenerator MethodDeclaration /**
     * Override this method to specify the hyperlink target of the given data point.
     */ Modifier public ReferenceType String generateURL FormalParameter ReferenceType CategoryDataset dataset FormalParameter BasicType int row FormalParameter BasicType int column ReturnStatement Literal null MethodDeclaration /**
     * Override this method to specify the tool tip text of the given data point.
     */ Modifier public ReferenceType String generateToolTip FormalParameter ReferenceType CategoryDataset dataset FormalParameter BasicType int row FormalParameter BasicType int column ReturnStatement Literal null MethodDeclaration /**
     * Override this method to specify the color to draw the given area.
     */ Modifier public ReferenceType Paint getItemPaint FormalParameter BasicType int row FormalParameter BasicType int column ReturnStatement SuperMethodInvocation MemberReference row MemberReference column getItemPaint MethodDeclaration Modifier public Annotation Override drawItem FormalParameter ReferenceType Graphics2D g2 FormalParameter ReferenceType CategoryItemRendererState state FormalParameter ReferenceType Rectangle2D dataArea FormalParameter ReferenceType CategoryPlot plot FormalParameter ReferenceType CategoryAxis domainAxis FormalParameter ReferenceType ValueAxis rangeAxis FormalParameter ReferenceType CategoryDataset dataset FormalParameter BasicType int row FormalParameter BasicType int column FormalParameter BasicType int pass LocalVariableDeclaration ReferenceType Number VariableDeclarator dataValue MethodInvocation dataset MemberReference row MemberReference column getValue IfStatement BinaryOperation == MemberReference dataValue Literal null BlockStatement ReturnStatement End LocalVariableDeclaration BasicType double VariableDeclarator value MethodInvocation dataValue doubleValue LocalVariableDeclaration BasicType double VariableDeclarator xx1 MethodInvocation domainAxis MemberReference column MethodInvocation getColumnCount MemberReference dataArea MethodInvocation plot getDomainAxisEdge getCategoryMiddle LocalVariableDeclaration BasicType double VariableDeclarator previousHeightx1 MethodInvocation MemberReference dataset MemberReference row MemberReference column getPreviousHeight LocalVariableDeclaration BasicType double VariableDeclarator y1 BinaryOperation + MemberReference value MemberReference previousHeightx1 LocalVariableDeclaration ReferenceType RectangleEdge VariableDeclarator location MethodInvocation plot getRangeAxisEdge LocalVariableDeclaration BasicType double VariableDeclarator yy1 MethodInvocation rangeAxis MemberReference y1 MemberReference dataArea MemberReference location valueToJava2D StatementExpression MethodInvocation g2 MethodInvocation MemberReference row MemberReference column getItemPaint setPaint StatementExpression MethodInvocation g2 MethodInvocation MemberReference row MemberReference column getItemStroke setStroke LocalVariableDeclaration ReferenceType EntityCollection VariableDeclarator entities MethodInvocation state getEntityCollection IfStatement BinaryOperation == MemberReference column Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference pass Literal 1 BlockStatement IfStatement MethodInvocation MemberReference row MemberReference column isItemLabelVisible BlockStatement StatementExpression MethodInvocation MemberReference g2 MethodInvocation plot getOrientation MemberReference dataset MemberReference row MemberReference column MemberReference xx1 MemberReference yy1 BinaryOperation < MemberReference y1 Literal 0.0 drawItemLabel End End BlockStatement LocalVariableDeclaration ReferenceType Number VariableDeclarator previousValue MethodInvocation dataset MemberReference row BinaryOperation - MemberReference column Literal 1 getValue IfStatement BinaryOperation != MemberReference previousValue Literal null BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator xx0 MethodInvocation domainAxis BinaryOperation - MemberReference column Literal 1 MethodInvocation getColumnCount MemberReference dataArea MethodInvocation plot getDomainAxisEdge getCategoryMiddle LocalVariableDeclaration BasicType double VariableDeclarator y0 MethodInvocation previousValue doubleValue LocalVariableDeclaration BasicType double VariableDeclarator previousHeightx0 MethodInvocation MemberReference dataset MemberReference row BinaryOperation - MemberReference column Literal 1 getPreviousHeight StatementExpression Assignment MemberReference y0 MemberReference previousHeightx0 += LocalVariableDeclaration BasicType double VariableDeclarator previousHeightxx0 MethodInvocation rangeAxis MemberReference previousHeightx0 MemberReference dataArea MemberReference location valueToJava2D LocalVariableDeclaration BasicType double VariableDeclarator previousHeightxx1 MethodInvocation rangeAxis MemberReference previousHeightx1 MemberReference dataArea MemberReference location valueToJava2D LocalVariableDeclaration BasicType double VariableDeclarator yy0 MethodInvocation rangeAxis MemberReference y0 MemberReference dataArea MemberReference location valueToJava2D IfStatement BinaryOperation == MemberReference pass Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Polygon VariableDeclarator p ClassCreator ReferenceType Polygon StatementExpression MethodInvocation p Cast BasicType int MemberReference xx0 Cast BasicType int MemberReference yy0 addPoint StatementExpression MethodInvocation p BinaryOperation / Cast BasicType int BinaryOperation + MemberReference xx0 MemberReference xx1 Literal 2 BinaryOperation / Cast BasicType int BinaryOperation + MemberReference yy0 MemberReference yy1 Literal 2 addPoint StatementExpression MethodInvocation p BinaryOperation / Cast BasicType int BinaryOperation + MemberReference xx0 MemberReference xx1 Literal 2 BinaryOperation / Cast BasicType int BinaryOperation + MemberReference previousHeightxx0 MemberReference previousHeightxx1 Literal 2 addPoint StatementExpression MethodInvocation p Cast BasicType int MemberReference xx0 Cast BasicType int MemberReference previousHeightxx0 addPoint StatementExpression MethodInvocation g2 MethodInvocation MemberReference row BinaryOperation - MemberReference column Literal 1 getItemPaint setPaint StatementExpression MethodInvocation g2 MethodInvocation MemberReference row BinaryOperation - MemberReference column Literal 1 getItemStroke setStroke StatementExpression MethodInvocation g2 MemberReference p fill IfStatement BinaryOperation != MemberReference entities Literal null StatementExpression MethodInvocation MemberReference entities MemberReference dataset MemberReference row BinaryOperation - MemberReference column Literal 1 MemberReference p addItemEntity End StatementExpression Assignment MemberReference p ClassCreator ReferenceType Polygon = StatementExpression MethodInvocation p Cast BasicType int MemberReference xx1 Cast BasicType int MemberReference yy1 addPoint StatementExpression MethodInvocation p BinaryOperation / Cast BasicType int BinaryOperation + MemberReference xx0 MemberReference xx1 Literal 2 BinaryOperation / Cast BasicType int BinaryOperation + MemberReference yy0 MemberReference yy1 Literal 2 addPoint StatementExpression MethodInvocation p BinaryOperation / Cast BasicType int BinaryOperation + MemberReference xx0 MemberReference xx1 Literal 2 BinaryOperation / Cast BasicType int BinaryOperation + MemberReference previousHeightxx0 MemberReference previousHeightxx1 Literal 2 addPoint StatementExpression MethodInvocation p Cast BasicType int MemberReference xx1 Cast BasicType int MemberReference previousHeightxx1 addPoint StatementExpression MethodInvocation g2 MethodInvocation MemberReference row MemberReference column getItemPaint setPaint StatementExpression MethodInvocation g2 MethodInvocation MemberReference row MemberReference column getItemStroke setStroke StatementExpression MethodInvocation g2 MemberReference p fill IfStatement BinaryOperation != MemberReference entities Literal null StatementExpression MethodInvocation MemberReference entities MemberReference dataset MemberReference row MemberReference column MemberReference p addItemEntity End BlockStatement IfStatement MethodInvocation MemberReference row MemberReference column isItemLabelVisible BlockStatement StatementExpression MethodInvocation MemberReference g2 MethodInvocation plot getOrientation MemberReference dataset MemberReference row MemberReference column MemberReference xx1 MemberReference yy1 BinaryOperation < MemberReference y1 Literal 0.0 drawItemLabel End End End End ReferenceType StackedAreaRenderer ReferenceType CategoryToolTipGenerator ReferenceType CategoryURLGenerator",0
165,165,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.ui.rememberme.TokenBasedRememberMeServices Import org.acegisecurity.userdetails.UserDetails Import org.acegisecurity.Authentication Import org.apache.commons.codec.digest.DigestUtils ClassDeclaration Modifier public /**
 * {@link TokenBasedRememberMeServices} with modification so as not to rely
 * on the user password being available.
 *
 * <p>
 * This allows remember-me to work with security realms where the password
 * is never available in clear text.
 *
 * @author Kohsuke Kawaguchi
 */ TokenBasedRememberMeServices2 MethodDeclaration Modifier protected ReferenceType String makeTokenSignature FormalParameter BasicType long tokenExpiryTime FormalParameter ReferenceType UserDetails userDetails LocalVariableDeclaration ReferenceType String VariableDeclarator expectedTokenSignature MethodInvocation DigestUtils BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation userDetails getUsername Literal "":"" MemberReference tokenExpiryTime Literal "":"" Literal ""N/A"" Literal "":"" MethodInvocation getKey md5Hex ReturnStatement MemberReference expectedTokenSignature MethodDeclaration Modifier protected ReferenceType String retrievePassword FormalParameter ReferenceType Authentication successfulAuthentication ReturnStatement Literal ""N/A"" ReferenceType TokenBasedRememberMeServices",0
287,287,"CompilationUnit PackageDeclaration hudson.model ClassDeclaration Modifier public abstract /**
 * {@link Descriptor} for {@link View}.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.269
 */ ViewDescriptor MethodDeclaration /**
     * Returns the human-readable name of this type of view. Used
     * in the view creation screen. The string should look like
     * ""Abc Def Ghi"".
     */ Modifier public abstract ReferenceType String getDisplayName MethodDeclaration /**
     * Some special views are not instantiable, and for those
     * this method returns false.
     */ Modifier public BasicType boolean isInstantiable ReturnStatement Literal true MethodDeclaration /**
     * Jelly fragment included in the ""new view"" page.
     */ Modifier public final ReferenceType String getNewViewDetailPage ReturnStatement BinaryOperation + BinaryOperation + Literal '/' MethodInvocation clazz MethodInvocation Literal '.' Literal '/' replace MethodInvocation Literal '$' Literal '/' replace getName Literal ""/newViewDetail.jelly"" ConstructorDeclaration Modifier protected ViewDescriptor FormalParameter ReferenceType Class TypeArgument ReferenceType View extends clazz StatementExpression SuperConstructorInvocation MemberReference clazz ConstructorDeclaration Modifier protected ViewDescriptor ReferenceType Descriptor TypeArgument ReferenceType View",0
548,548,,0
58,58,"CompilationUnit PackageDeclaration hudson Import hudson.model.Descriptor Import hudson.model.Describable Import hudson.model.Hudson Import hudson.model.ViewDescriptor Import hudson.model.Descriptor.FormException Import hudson.util.Memoizer Import hudson.util.Iterators Import hudson.util.Iterators.FlattenIterator Import hudson.slaves.NodeDescriptor Import hudson.tasks.Publisher Import hudson.tasks.Publisher.DescriptorExtensionListImpl Import java.util.List Import java.util.ArrayList Import java.util.Iterator Import java.util.logging.Logger Import java.util.concurrent.CopyOnWriteArrayList Import java.lang.reflect.Type Import java.lang.reflect.ParameterizedType Import org.jvnet.tiger_types.Types Import org.kohsuke.stapler.Stapler Import net.sf.json.JSONObject ClassDeclaration Modifier public /**
 * {@link ExtensionList} for holding a set of {@link Descriptor}s, which is a group of descriptors for
 * the same extension point.
 *
 * Use {@link Hudson#getDescriptorList(Class)} to obtain instances.
 *
 * @param <D>
 *      Represents the descriptor type. This is {@code Descriptor<T>} normally but often there are subtypes
 *      of descriptors, like {@link ViewDescriptor}, {@link NodeDescriptor}, etc, and this parameter points
 *      to those for better type safety of users.
 *
 *      The actual value of 'D' is not necessary for the operation of this code, so it's purely for convenience
 *      of the users of this class.
 *
 * @since 1.286
 */ DescriptorExtensionList MethodDeclaration /**
     * Creates a new instance.
     */ Modifier public static TypeParameter T ReferenceType Describable TypeArgument ReferenceType T TypeParameter D ReferenceType Descriptor TypeArgument ReferenceType T ReferenceType DescriptorExtensionList TypeArgument ReferenceType T TypeArgument ReferenceType D create FormalParameter ReferenceType Hudson hudson FormalParameter ReferenceType Class TypeArgument ReferenceType T describableType IfStatement BinaryOperation == MemberReference describableType Cast ReferenceType Class ClassReference ReferenceType Publisher ReturnStatement Cast ReferenceType DescriptorExtensionList ClassCreator ReferenceType DescriptorExtensionListImpl MemberReference hudson End ReturnStatement ClassCreator ReferenceType DescriptorExtensionList TypeArgument ReferenceType T TypeArgument ReferenceType D MemberReference hudson MemberReference describableType FieldDeclaration /**
     * Type of the {@link Describable} that this extension list retains.
     */ Modifier private final ReferenceType Class TypeArgument ReferenceType T VariableDeclarator describableType ConstructorDeclaration Modifier protected DescriptorExtensionList FormalParameter ReferenceType Hudson hudson FormalParameter ReferenceType Class TypeArgument ReferenceType T describableType StatementExpression SuperConstructorInvocation MemberReference hudson Cast ReferenceType Class ClassReference ReferenceType Descriptor MethodInvocation legacyDescriptors MemberReference describableType get StatementExpression Assignment This MemberReference describableType MemberReference describableType = MethodDeclaration /**
     * Finds the descriptor that has the matching fully-qualified class name.
     *
     * @param fqcn
     *      Fully qualified name of the descriptor, not the describable.
     */ Modifier public ReferenceType D find FormalParameter ReferenceType String fqcn ReturnStatement MethodInvocation Descriptor This MemberReference fqcn find MethodDeclaration /**
     * Creates a new instance of a {@link Describable}
     * from the structured form submission data posted
     * by a radio button group.
     */ Modifier public ReferenceType T newInstanceFromRadioList FormalParameter ReferenceType JSONObject config FormException IfStatement MethodInvocation config isNullObject ReturnStatement Literal null End LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation config Literal ""value"" getInt ReturnStatement MethodInvocation MethodInvocation MethodInvocation Stapler getCurrentRequest MemberReference config newInstance MemberReference idx get MethodDeclaration Modifier public ReferenceType T newInstanceFromRadioList FormalParameter ReferenceType JSONObject parent FormalParameter ReferenceType String name FormException ReturnStatement MethodInvocation MethodInvocation parent MemberReference name getJSONObject newInstanceFromRadioList MethodDeclaration /**
     * Finds a descriptor by their {@link Descriptor#clazz}.
     *
     * If none is found, null is returned.
     */ Modifier public ReferenceType Descriptor TypeArgument ReferenceType T findByName FormalParameter ReferenceType String fullyQualifiedClassName ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType T VariableDeclarator d This IfStatement MethodInvocation d.clazz MethodInvocation MemberReference fullyQualifiedClassName equals getName ReturnStatement MemberReference d End End ReturnStatement Literal null MethodDeclaration /**
     * Loading the descriptors in this case means filtering the descriptor from the master {@link ExtensionList}.
     */ Modifier protected Annotation Override ReferenceType List TypeArgument ReferenceType D load LocalVariableDeclaration ReferenceType List VariableDeclarator r ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor VariableDeclarator d MethodInvocation hudson ClassReference ReferenceType Descriptor getExtensionList BlockStatement LocalVariableDeclaration ReferenceType Type VariableDeclarator subTyping MethodInvocation Types MethodInvocation d getClass ClassReference ReferenceType Descriptor getBaseClass IfStatement BinaryOperation instanceof MemberReference subTyping ReferenceType ParameterizedType BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + MethodInvocation d getClass Literal "" doesn't extend Descriptor with a type parameter"" severe ContinueStatement End IfStatement BinaryOperation == MethodInvocation Types MethodInvocation Types MemberReference subTyping Literal 0 getTypeArgument erasure Cast ReferenceType Class MemberReference describableType StatementExpression MethodInvocation r MemberReference d add End End ReturnStatement MemberReference r FieldDeclaration /**
     * Stores manually registered Descriptor instances. Keyed by the {@link Describable} type.
     */ Modifier private final static ReferenceType Memoizer TypeArgument ReferenceType Class TypeArgument ReferenceType CopyOnWriteArrayList VariableDeclarator legacyDescriptors ClassCreator ReferenceType Memoizer TypeArgument ReferenceType Class TypeArgument ReferenceType CopyOnWriteArrayList MethodDeclaration Modifier public ReferenceType CopyOnWriteArrayList compute FormalParameter ReferenceType Class key ReturnStatement ClassCreator ReferenceType CopyOnWriteArrayList MethodDeclaration /**
     * List up all the legacy instances currently in use.
     */ Modifier public static ReferenceType Iterable TypeArgument ReferenceType Descriptor listLegacyInstances ReturnStatement ClassCreator ReferenceType Iterable TypeArgument ReferenceType Descriptor MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType Descriptor iterator ReturnStatement ClassCreator ReferenceType FlattenIterator TypeArgument ReferenceType Descriptor TypeArgument ReferenceType CopyOnWriteArrayList MethodInvocation legacyDescriptors values MethodDeclaration Modifier protected ReferenceType Iterator expand FormalParameter ReferenceType CopyOnWriteArrayList v ReturnStatement MethodInvocation v iterator MethodDeclaration /**
     * Exposed just for the test harness. Clear legacy instances.
     */ Modifier public static clearLegacyInstances StatementExpression MethodInvocation legacyDescriptors clear FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType DescriptorExtensionList getLogger TypeParameter T ReferenceType Describable TypeArgument ReferenceType T TypeParameter D ReferenceType Descriptor TypeArgument ReferenceType T ReferenceType ExtensionList TypeArgument ReferenceType D",0
433,433,,0
575,575,,0
590,590,,0
123,123,"CompilationUnit PackageDeclaration hudson.maven Import hudson.FilePath Import hudson.Launcher Import hudson.Proc Import hudson.AbortException Import hudson.EnvVars Import hudson.slaves.Channels Import hudson.Util.fixNull  Import hudson.maven.agent.Main Import hudson.maven.agent.Maven21Interceptor Import hudson.maven.agent.PluginManagerInterceptor Import hudson.model.BuildListener Import hudson.model.Computer Import hudson.model.Executor Import hudson.model.Hudson Import hudson.model.JDK Import hudson.model.Node Import hudson.model.Run.RunnerAbortedException Import hudson.model.TaskListener Import hudson.remoting.Callable Import hudson.remoting.Channel Import hudson.remoting.RemoteInputStream Import hudson.remoting.RemoteOutputStream Import hudson.remoting.SocketInputStream Import hudson.remoting.SocketOutputStream Import hudson.remoting.Which Import hudson.tasks.Maven.MavenInstallation Import hudson.util.ArgumentListBuilder Import hudson.util.IOException2 Import java.io.BufferedInputStream Import java.io.BufferedOutputStream Import java.io.File Import java.io.FilenameFilter Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.io.Serializable Import java.net.ServerSocket Import java.net.Socket Import java.net.SocketTimeoutException Import java.util.Arrays Import java.util.logging.Logger ClassDeclaration Modifier final /**
 * Launches the maven process.
 *
 * @author Kohsuke Kawaguchi
 */ MavenProcessFactory FieldDeclaration Modifier private final ReferenceType MavenModuleSet VariableDeclarator mms FieldDeclaration Modifier private final ReferenceType Launcher VariableDeclarator launcher FieldDeclaration /**
     * Environment variables to be set to the maven process.
     * The same variables are exposed to the system property as well.
     */ Modifier private final ReferenceType EnvVars VariableDeclarator envVars FieldDeclaration /**
     * Optional working directory. Because of the process reuse, we can't always guarantee
     * that the returned Maven process has this as the working directory. But for the
     * aggregator style build, the process reuse is disabled, so in practice this always works.
     *
     * Also, Maven is supposed to work correctly regardless of the process current directory,
     * so a good behaving maven project shouldn't rely on the current project.
     */ Modifier private final ReferenceType FilePath VariableDeclarator workDir ConstructorDeclaration MavenProcessFactory FormalParameter ReferenceType MavenModuleSet mms FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType EnvVars envVars FormalParameter ReferenceType FilePath workDir StatementExpression Assignment This MemberReference mms MemberReference mms = StatementExpression Assignment This MemberReference launcher MemberReference launcher = StatementExpression Assignment This MemberReference envVars MemberReference envVars = StatementExpression Assignment This MemberReference workDir MemberReference workDir = ClassDeclaration Modifier private final static /**
     * Represents a bi-directional connection.
     *
     * <p>
     * This implementation is remoting aware, so it can be safely sent to the remote callable object.
     *
     * <p>
     * When we run Maven on a slave, the master may not have a direct TCP/IP connectivty to the slave.
     * That means the {@link Channel} between the master and the Maven needs to be tunneled through
     * the channel between master and the slave, then go to TCP socket to the Maven.
     */ Connection FieldDeclaration Modifier public ReferenceType InputStream VariableDeclarator in FieldDeclaration Modifier public ReferenceType OutputStream VariableDeclarator out ConstructorDeclaration Connection FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out StatementExpression Assignment This MemberReference in MemberReference in = StatementExpression Assignment This MemberReference out MemberReference out = MethodDeclaration Modifier private ReferenceType Object writeReplace ReturnStatement ClassCreator ReferenceType Connection ClassCreator ReferenceType RemoteInputStream MemberReference in ClassCreator ReferenceType RemoteOutputStream MemberReference out MethodDeclaration Modifier private ReferenceType Object readResolve StatementExpression Assignment This MemberReference in ClassCreator ReferenceType BufferedInputStream MemberReference in = StatementExpression Assignment This MemberReference out ClassCreator ReferenceType BufferedOutputStream MemberReference out = ReturnStatement This FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable InterfaceDeclaration Acceptor MethodDeclaration ReferenceType Connection accept IOException MethodDeclaration BasicType int getPort ClassDeclaration Modifier private final static /**
     * Opens a server socket and returns {@link Acceptor} so that
     * we can accept a connection later on it.
     */ SocketHandler MethodDeclaration Modifier public ReferenceType Acceptor call IOException ReturnStatement ClassCreator ReferenceType AcceptorImpl FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ClassDeclaration Modifier final static AcceptorImpl FieldDeclaration Modifier private final transient ReferenceType ServerSocket VariableDeclarator serverSocket FieldDeclaration Modifier private transient ReferenceType Socket VariableDeclarator socket ConstructorDeclaration AcceptorImpl IOException StatementExpression Assignment This MemberReference serverSocket ClassCreator ReferenceType ServerSocket = StatementExpression MethodInvocation serverSocket Literal null bind StatementExpression MethodInvocation serverSocket BinaryOperation * Literal 10 Literal 1000 setSoTimeout MethodDeclaration Modifier public ReferenceType Connection accept IOException StatementExpression Assignment MemberReference socket MethodInvocation serverSocket accept = StatementExpression MethodInvocation serverSocket close ReturnStatement ClassCreator ReferenceType Connection ClassCreator ReferenceType SocketInputStream MemberReference socket ClassCreator ReferenceType SocketOutputStream MemberReference socket MethodDeclaration Modifier public BasicType int getPort ReturnStatement MethodInvocation serverSocket getLocalPort MethodDeclaration /**
             * When sent to the remote node, send a proxy.
             */ Modifier private ReferenceType Object writeReplace ReturnStatement MethodInvocation Channel MethodInvocation ClassReference ReferenceType Acceptor This export current ReferenceType Acceptor ReferenceType Serializable ReferenceType Callable TypeArgument ReferenceType Acceptor TypeArgument ReferenceType IOException MethodDeclaration /**
     * Starts maven process.
     */ Modifier public ReferenceType Channel newProcess FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType OutputStream out IOException InterruptedException IfStatement MemberReference debug StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + Literal ""Using env variables: "" MemberReference envVars println getLogger End TryStatement LocalVariableDeclaration Modifier final ReferenceType Acceptor VariableDeclarator acceptor MethodInvocation launcher MethodInvocation ClassCreator ReferenceType SocketHandler call getChannel LocalVariableDeclaration Modifier final ReferenceType ArgumentListBuilder VariableDeclarator cmdLine MethodInvocation MemberReference listener MethodInvocation acceptor getPort buildMavenCmdLine LocalVariableDeclaration ReferenceType String VariableDeclarator cmds MethodInvocation cmdLine toCommandArray LocalVariableDeclaration Modifier final ReferenceType Proc VariableDeclarator proc MethodInvocation launcher MethodInvocation MemberReference cmds cmds MethodInvocation MemberReference envVars envs MethodInvocation MemberReference out stdout MethodInvocation MemberReference workDir pwd MethodInvocation start launch LocalVariableDeclaration ReferenceType Connection VariableDeclarator con TryStatement StatementExpression Assignment MemberReference con MethodInvocation acceptor accept = CatchClause CatchClauseParameter SocketTimeoutException e IfStatement MethodInvocation ! proc isAlive ThrowStatement ClassCreator ReferenceType AbortException BinaryOperation + Literal ""Failed to launch Maven. Exit code = "" MethodInvocation proc join End ThrowStatement MemberReference e ReturnStatement MethodInvocation Channels BinaryOperation + Literal ""Channel to Maven "" MethodInvocation Arrays MemberReference cmds toString MemberReference Computer threadPoolForRemoting ClassCreator ReferenceType BufferedInputStream MemberReference con in ClassCreator ReferenceType BufferedOutputStream MemberReference con out MethodInvocation listener getLogger MemberReference proc forProcess CatchClause CatchClauseParameter IOException e IfStatement MethodInvocation MethodInvocation Literal ""java: not found"" contains MethodInvocation e getMessage fixNull BlockStatement LocalVariableDeclaration ReferenceType JDK VariableDeclarator jdk MethodInvocation mms getJDK IfStatement BinaryOperation == MemberReference jdk Literal null ThrowStatement ClassCreator ReferenceType IOException2 BinaryOperation + MethodInvocation mms getDisplayName Literal "" is not configured with a JDK, but your PATH doesn't include Java"" MemberReference e End End ThrowStatement MemberReference e MethodDeclaration /**
     * Builds the command line argument list to launch the maven process.
     *
     * UGLY.
     */ Modifier private ReferenceType ArgumentListBuilder buildMavenCmdLine FormalParameter ReferenceType BuildListener listener FormalParameter BasicType int tcpPort IOException InterruptedException LocalVariableDeclaration ReferenceType MavenInstallation VariableDeclarator mvn MethodInvocation MemberReference listener getMavenInstallation IfStatement BinaryOperation == MemberReference mvn Literal null BlockStatement StatementExpression MethodInvocation listener Literal ""Maven version is not configured for this project. Can't determine which Maven to run"" error ThrowStatement ClassCreator ReferenceType RunnerAbortedException End IfStatement BinaryOperation == MethodInvocation mvn getHome Literal null BlockStatement StatementExpression MethodInvocation listener Literal ""Maven '%s' doesn't have its home set"" MethodInvocation mvn getName error ThrowStatement ClassCreator ReferenceType RunnerAbortedException End LocalVariableDeclaration ReferenceType String VariableDeclarator classWorldsJar MethodInvocation launcher MethodInvocation ClassCreator ReferenceType GetClassWorldsJar MethodInvocation mvn getHome MemberReference listener call getChannel LocalVariableDeclaration BasicType boolean VariableDeclarator isMaster BinaryOperation == MethodInvocation getCurrentNode MethodInvocation Hudson getInstance LocalVariableDeclaration ReferenceType FilePath VariableDeclarator slaveRoot Literal null IfStatement MemberReference ! isMaster StatementExpression Assignment MemberReference slaveRoot MethodInvocation MethodInvocation getRootPath getCurrentNode = End LocalVariableDeclaration ReferenceType ArgumentListBuilder VariableDeclarator args ClassCreator ReferenceType ArgumentListBuilder LocalVariableDeclaration ReferenceType JDK VariableDeclarator jdk MethodInvocation MemberReference listener getJava IfStatement BinaryOperation == MemberReference jdk Literal null BlockStatement StatementExpression MethodInvocation args Literal ""java"" add BlockStatement StatementExpression MethodInvocation args BinaryOperation + MethodInvocation jdk getJavaHome Literal ""/bin/java"" add End IfStatement BinaryOperation != MemberReference debugPort Literal 0 StatementExpression MethodInvocation args BinaryOperation + Literal ""-Xrunjdwp:transport=dt_socket,server=y,address="" MemberReference debugPort add End IfStatement MemberReference yjp StatementExpression MethodInvocation args Literal ""-agentlib:yjpagent=tracing"" add End StatementExpression MethodInvocation args MethodInvocation getMavenOpts addTokenized StatementExpression MethodInvocation args Literal ""-cp"" add StatementExpression MethodInvocation args BinaryOperation + BinaryOperation + TernaryExpression MemberReference isMaster MethodInvocation Which MethodInvocation getAbsolutePath ClassReference ReferenceType Main jarFile MethodInvocation slaveRoot MethodInvocation getRemote Literal ""maven-agent.jar"" child TernaryExpression MethodInvocation launcher isUnix Literal "":"" Literal "";"" MemberReference classWorldsJar add StatementExpression MethodInvocation args ClassReference MethodInvocation getName ReferenceType Main add StatementExpression MethodInvocation args MethodInvocation mvn getHome add LocalVariableDeclaration ReferenceType String VariableDeclarator remotingJar MethodInvocation launcher MethodInvocation ClassCreator ReferenceType GetRemotingJar call getChannel IfStatement BinaryOperation == MemberReference remotingJar Literal null BlockStatement StatementExpression MethodInvocation listener Literal ""Failed to determine the location of slave.jar"" error ThrowStatement ClassCreator ReferenceType RunnerAbortedException End StatementExpression MethodInvocation args MemberReference remotingJar add StatementExpression MethodInvocation args TernaryExpression MemberReference isMaster MethodInvocation Which MethodInvocation getAbsolutePath ClassReference ReferenceType PluginManagerInterceptor jarFile MethodInvocation slaveRoot MethodInvocation getRemote Literal ""maven-interceptor.jar"" child add StatementExpression MethodInvocation args MemberReference tcpPort add IfStatement MethodInvocation mvn MemberReference launcher isMaven2_1 BlockStatement StatementExpression MethodInvocation args TernaryExpression MemberReference isMaster MethodInvocation Which MethodInvocation getAbsolutePath ClassReference ReferenceType Maven21Interceptor jarFile MethodInvocation slaveRoot MethodInvocation getRemote Literal ""maven2.1-interceptor.jar"" child add End ReturnStatement MemberReference args MethodDeclaration Modifier public ReferenceType String getMavenOpts ReturnStatement MethodInvocation envVars MethodInvocation mms getMavenOpts expand MethodDeclaration Modifier public ReferenceType MavenInstallation getMavenInstallation FormalParameter ReferenceType TaskListener log IOException InterruptedException LocalVariableDeclaration ReferenceType MavenInstallation VariableDeclarator mi MethodInvocation mms getMaven IfStatement BinaryOperation != MemberReference mi Literal null StatementExpression Assignment MemberReference mi MethodInvocation mi MethodInvocation MemberReference envVars forEnvironment MethodInvocation getCurrentNode MemberReference log forNode = End ReturnStatement MemberReference mi MethodDeclaration Modifier public ReferenceType JDK getJava FormalParameter ReferenceType TaskListener log IOException InterruptedException LocalVariableDeclaration ReferenceType JDK VariableDeclarator jdk MethodInvocation mms getJDK IfStatement BinaryOperation != MemberReference jdk Literal null StatementExpression Assignment MemberReference jdk MethodInvocation jdk MethodInvocation MemberReference envVars forEnvironment MethodInvocation getCurrentNode MemberReference log forNode = End ReturnStatement MemberReference jdk ClassDeclaration Modifier private final static /**
     * Finds classworlds.jar
     */ GetClassWorldsJar FieldDeclaration Modifier private final ReferenceType String VariableDeclarator mvnHome FieldDeclaration Modifier private final ReferenceType TaskListener VariableDeclarator listener ConstructorDeclaration Modifier private GetClassWorldsJar FormalParameter ReferenceType String mvnHome FormalParameter ReferenceType TaskListener listener StatementExpression Assignment This MemberReference mvnHome MemberReference mvnHome = StatementExpression Assignment This MemberReference listener MemberReference listener = MethodDeclaration Modifier public ReferenceType String call IOException LocalVariableDeclaration ReferenceType File VariableDeclarator home ClassCreator ReferenceType File MemberReference mvnHome LocalVariableDeclaration ReferenceType File VariableDeclarator bootDir ClassCreator ReferenceType File MemberReference home Literal ""core/boot"" LocalVariableDeclaration ReferenceType File VariableDeclarator classworlds MethodInvocation bootDir MemberReference CLASSWORLDS_FILTER listFiles IfStatement BinaryOperation || BinaryOperation == MemberReference classworlds Literal null BinaryOperation == MemberReference classworlds length Literal 0 BlockStatement StatementExpression Assignment MemberReference bootDir ClassCreator ReferenceType File MemberReference home Literal ""boot"" = StatementExpression Assignment MemberReference classworlds MethodInvocation bootDir MemberReference CLASSWORLDS_FILTER listFiles = IfStatement BinaryOperation || BinaryOperation == MemberReference classworlds Literal null BinaryOperation == MemberReference classworlds length Literal 0 BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages MemberReference home MavenProcessFactory_ClassWorldsNotFound error ThrowStatement ClassCreator ReferenceType RunnerAbortedException End End ReturnStatement MemberReference ArraySelector Literal 0 MethodInvocation getAbsolutePath classworlds ReferenceType Callable TypeArgument ReferenceType String TypeArgument ReferenceType IOException ClassDeclaration Modifier private final static GetRemotingJar MethodDeclaration Modifier public ReferenceType String call IOException ReturnStatement MethodInvocation Which MethodInvocation getPath ClassReference hudson.remoting ReferenceType Launcher jarFile ReferenceType Callable TypeArgument ReferenceType String TypeArgument ReferenceType IOException MethodDeclaration /**
     * Returns the current {@link Node} on which we are buildling.
     */ Modifier private ReferenceType Node getCurrentNode ReturnStatement MethodInvocation Executor MethodInvocation getOwner MethodInvocation getNode currentExecutor FieldDeclaration Modifier private final static ReferenceType FilenameFilter VariableDeclarator CLASSWORLDS_FILTER ClassCreator ReferenceType FilenameFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File dir FormalParameter ReferenceType String name ReturnStatement BinaryOperation && MethodInvocation name Literal ""classworlds"" startsWith MethodInvocation name Literal "".jar"" endsWith FieldDeclaration /**
     * Set true to produce debug output.
     */ Modifier public static BasicType boolean VariableDeclarator debug Literal false FieldDeclaration /**
     * If not 0, launch Maven with a debugger port.
     */ Modifier public static BasicType int VariableDeclarator debugPort FieldDeclaration Modifier public static BasicType boolean VariableDeclarator profile MethodInvocation Boolean Literal ""hudson.maven.profile"" getBoolean FieldDeclaration /**
     * If true, launch Maven with YJP offline profiler agent.
     */ Modifier public static BasicType boolean VariableDeclarator yjp MethodInvocation Boolean Literal ""hudson.maven.yjp"" getBoolean LocalVariableDeclaration ReferenceType String VariableDeclarator port MethodInvocation System Literal ""hudson.maven.debugPort"" getProperty IfStatement BinaryOperation != MemberReference port Literal null StatementExpression Assignment MemberReference debugPort MethodInvocation Integer MemberReference port parseInt = End FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType MavenProcessFactory getLogger ReferenceType ProcessCache ReferenceType Factory",0
65,65,"CompilationUnit PackageDeclaration hudson.org.apache.tools.ant.taskdefs Import java.io.BufferedOutputStream Import java.io.ByteArrayInputStream Import java.io.ByteArrayOutputStream Import java.io.File Import java.io.FileOutputStream Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.io.PrintStream Import java.util.ArrayList Import java.util.List Import java.util.Vector Import java.util.logging.Level Import java.util.logging.Logger Import org.apache.tools.ant.BuildException Import org.apache.tools.ant.Project Import org.apache.tools.ant.Task Import org.apache.tools.ant.taskdefs.ExecuteStreamHandler Import org.apache.tools.ant.taskdefs.PumpStreamHandler Import org.apache.tools.ant.taskdefs.LogOutputStream Import org.apache.tools.ant.taskdefs.Execute Import org.apache.tools.ant.types.Commandline Import org.apache.tools.ant.types.Environment Import org.apache.tools.ant.util.StringUtils ClassDeclaration Modifier public abstract /**
 * original Cvs.java 1.20
 *
 *  NOTE: This implementation has been moved here from Cvs.java with
 *  the addition of some accessors for extensibility.  Another task
 *  can extend this with some customized output processing.
 *
 * @since Ant 1.5
 */ AbstractCvsTask FieldDeclaration /**
     * Default compression level to use, if compression is enabled via
     * setCompression( true ).
     */ Modifier public final static BasicType int VariableDeclarator DEFAULT_COMPRESSION_LEVEL Literal 3 FieldDeclaration Modifier private final static BasicType int VariableDeclarator MAXIMUM_COMRESSION_LEVEL Literal 9 FieldDeclaration Modifier private ReferenceType Commandline VariableDeclarator cmd ClassCreator ReferenceType Commandline FieldDeclaration /** list of Commandline children */ Modifier private ReferenceType Vector VariableDeclarator vecCommandlines ClassCreator ReferenceType Vector FieldDeclaration /**
     * the CVSROOT variable.
     */ Modifier private ReferenceType String VariableDeclarator cvsRoot FieldDeclaration /**
     * the CVS_RSH variable.
     */ Modifier private ReferenceType String VariableDeclarator cvsRsh FieldDeclaration /**
     * the package/module to check out.
     */ Modifier private ReferenceType String VariableDeclarator cvsPackage FieldDeclaration /**
     * the tag
     */ Modifier private ReferenceType String VariableDeclarator tag FieldDeclaration /**
     * the default command.
     */ Modifier private final static ReferenceType String VariableDeclarator DEFAULT_COMMAND Literal ""checkout"" FieldDeclaration /**
     * the CVS command to execute.
     */ Modifier private ReferenceType String VariableDeclarator command Literal null FieldDeclaration /**
     * suppress information messages.
     */ Modifier private BasicType boolean VariableDeclarator quiet Literal false FieldDeclaration /**
     * suppress all messages.
     */ Modifier private BasicType boolean VariableDeclarator reallyquiet Literal false FieldDeclaration /**
     * compression level to use.
     */ Modifier private BasicType int VariableDeclarator compression Literal 0 FieldDeclaration /**
     * report only, don't change any files.
     */ Modifier private BasicType boolean VariableDeclarator noexec Literal false FieldDeclaration /**
     * CVS port
     */ Modifier private BasicType int VariableDeclarator port Literal 0 FieldDeclaration /**
     * CVS password file
     */ Modifier private ReferenceType File VariableDeclarator passFile Literal null FieldDeclaration /**
     * the directory where the checked out files should be placed.
     */ Modifier private ReferenceType File VariableDeclarator dest FieldDeclaration /** whether or not to append stdout/stderr to existing files */ Modifier private BasicType boolean VariableDeclarator append Literal false FieldDeclaration /**
     * the file to direct standard output from the command.
     */ Modifier private ReferenceType File VariableDeclarator output FieldDeclaration /**
     * the file to direct standard error from the command.
     */ Modifier private ReferenceType File VariableDeclarator error FieldDeclaration /**
     * If true it will stop the build if cvs exits with error.
     * Default is false. (Iulian)
     */ Modifier private BasicType boolean VariableDeclarator failOnError Literal false FieldDeclaration /**
     * Create accessors for the following, to allow different handling of
     * the output.
     */ Modifier private ReferenceType OutputStream VariableDeclarator outputStream FieldDeclaration Modifier private ReferenceType OutputStream VariableDeclarator errorStream FieldDeclaration Modifier private ReferenceType String VariableDeclarator cvsExe Literal ""cvs"" ConstructorDeclaration Modifier public /** empty no-arg constructor*/ AbstractCvsTask StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public setCvsExe FormalParameter ReferenceType String cvsExe StatementExpression Assignment This MemberReference cvsExe MemberReference cvsExe = MethodDeclaration /**
     * find the handler and instantiate it if it does not exist yet
     * @return handler for output and error streams
     */ Modifier protected ReferenceType ExecuteStreamHandler getExecuteStreamHandler FormalParameter ReferenceType InputStream input ReturnStatement ClassCreator ReferenceType PumpStreamHandler MethodInvocation getOutputStream MethodInvocation getErrorStream MemberReference input MethodDeclaration /**
     * sets a stream to which the output from the cvs executable should be sent
     * @param outputStream stream to which the stdout from cvs should go
     */ Modifier protected setOutputStream FormalParameter ReferenceType OutputStream outputStream StatementExpression Assignment This MemberReference outputStream MemberReference outputStream = MethodDeclaration /**
     * access the stream to which the stdout from cvs should go
     * if this stream has already been set, it will be returned
     * if the stream has not yet been set, if the attribute output
     * has been set, the output stream will go to the output file
     * otherwise the output will go to ant's logging system
     * @return output stream to which cvs' stdout should go to
     */ Modifier protected ReferenceType OutputStream getOutputStream IfStatement BinaryOperation == This MemberReference outputStream Literal null BlockStatement IfStatement BinaryOperation != MemberReference output Literal null BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MethodInvocation output getPath MemberReference append setOutputStream CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_INFO setOutputStream End End ReturnStatement This MemberReference outputStream MethodDeclaration /**
     * sets a stream to which the stderr from the cvs exe should go
     * @param errorStream an output stream willing to process stderr
     */ Modifier protected setErrorStream FormalParameter ReferenceType OutputStream errorStream StatementExpression Assignment This MemberReference errorStream MemberReference errorStream = MethodDeclaration /**
     * access the stream to which the stderr from cvs should go
     * if this stream has already been set, it will be returned
     * if the stream has not yet been set, if the attribute error
     * has been set, the output stream will go to the file denoted by the error attribute
     * otherwise the stderr output will go to ant's logging system
     * @return output stream to which cvs' stderr should go to
     */ Modifier protected ReferenceType OutputStream getErrorStream IfStatement BinaryOperation == This MemberReference errorStream Literal null BlockStatement IfStatement BinaryOperation != MemberReference error Literal null BlockStatement TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType PrintStream ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType FileOutputStream MethodInvocation error getPath MemberReference append setErrorStream CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType LogOutputStream This MemberReference Project MSG_WARN setErrorStream End End ReturnStatement This MemberReference errorStream MethodDeclaration /**
     * Sets up the environment for toExecute and then runs it.
     * @param toExecute the command line to execute
     * @throws BuildException if failonError is set to true and the cvs command fails
     */ Modifier protected runCommand FormalParameter ReferenceType Commandline toExecute BuildException LocalVariableDeclaration ReferenceType Environment VariableDeclarator env ClassCreator ReferenceType Environment IfStatement BinaryOperation > MemberReference port Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal ""CVS_CLIENT_PORT"" setKey StatementExpression MethodInvocation var MethodInvocation String MemberReference port valueOf setValue StatementExpression MethodInvocation env MemberReference var addVariable End IfStatement BinaryOperation == MemberReference passFile Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator defaultPassFile ClassCreator ReferenceType File BinaryOperation + BinaryOperation + MethodInvocation System Literal ""cygwin.user.home"" MethodInvocation System Literal ""user.home"" getProperty getProperty MemberReference File separatorChar Literal "".cvspass"" IfStatement MethodInvocation defaultPassFile exists BlockStatement StatementExpression This MethodInvocation MemberReference defaultPassFile setPassfile End End IfStatement BinaryOperation != MemberReference passFile Literal null BlockStatement IfStatement BinaryOperation && MethodInvocation passFile isFile MethodInvocation passFile canRead BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal ""CVS_PASSFILE"" setKey StatementExpression MethodInvocation var MethodInvocation String MemberReference passFile valueOf setValue StatementExpression MethodInvocation env MemberReference var addVariable StatementExpression MethodInvocation BinaryOperation + Literal ""Using cvs passfile: "" MethodInvocation String MemberReference passFile valueOf MemberReference Project MSG_INFO log IfStatement MethodInvocation ! passFile canRead BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal ""cvs passfile: "" MethodInvocation String MemberReference passFile valueOf Literal "" ignored as it is not readable"" MemberReference Project MSG_WARN log BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal ""cvs passfile: "" MethodInvocation String MemberReference passFile valueOf Literal "" ignored as it is not a file"" MemberReference Project MSG_WARN log End End End IfStatement BinaryOperation != MemberReference cvsRsh Literal null BlockStatement LocalVariableDeclaration ReferenceType Environment ReferenceType Variable VariableDeclarator var ClassCreator ReferenceType Environment ReferenceType Variable StatementExpression MethodInvocation var Literal ""CVS_RSH"" setKey StatementExpression MethodInvocation var MethodInvocation String MemberReference cvsRsh valueOf setValue StatementExpression MethodInvocation env MemberReference var addVariable End LocalVariableDeclaration ReferenceType String VariableDeclarator argv MethodInvocation toExecute getCommandline LocalVariableDeclaration ReferenceType InputStream VariableDeclarator input Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator inputText Literal null IfStatement ClassCreator MethodInvocation isFile ReferenceType File Literal ""/usr/bin/xargs"" BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator sz Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator arg MemberReference argv BlockStatement StatementExpression Assignment MemberReference sz BinaryOperation + MethodInvocation arg length Literal 1 += End IfStatement BinaryOperation > MemberReference sz Literal 125000 BlockStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator _argv ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation _argv Literal ""/usr/bin/xargs"" add LocalVariableDeclaration BasicType boolean VariableDeclarator prefix Literal true ForStatement LOAD EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MemberReference argv BlockStatement IfStatement MethodInvocation s Literal ""--"" equals BlockStatement StatementExpression Assignment MemberReference prefix Literal false = StatementExpression Assignment MemberReference baos ClassCreator ReferenceType ByteArrayOutputStream = IfStatement MemberReference prefix BlockStatement StatementExpression MethodInvocation _argv MemberReference s add BlockStatement ForStatement EnhancedForControl VariableDeclaration BasicType byte VariableDeclarator b MethodInvocation s getBytes BlockStatement IfStatement BinaryOperation < MemberReference b Literal 0 BlockStatement StatementExpression Assignment MemberReference baos Literal null = BreakStatement LOAD End StatementExpression MethodInvocation baos Literal '\\' write StatementExpression MethodInvocation baos MemberReference b write End StatementExpression MethodInvocation baos Literal '\n' write End End End IfStatement BinaryOperation != MemberReference baos Literal null BlockStatement StatementExpression MethodInvocation Logger MethodInvocation MemberReference Level INFO Literal ""Using xargs to run very long command line ({0} bytes)"" MemberReference sz log ClassReference MethodInvocation getName ReferenceType AbstractCvsTask getLogger StatementExpression Assignment MemberReference input ClassCreator ReferenceType ByteArrayInputStream MethodInvocation baos toByteArray = StatementExpression Assignment MemberReference inputText MethodInvocation baos toString = StatementExpression Assignment MemberReference argv MethodInvocation _argv ArrayCreator ReferenceType String MethodInvocation _argv size toArray = End End End LocalVariableDeclaration ReferenceType Execute VariableDeclarator exe ClassCreator ReferenceType Execute MethodInvocation MemberReference input getExecuteStreamHandler Literal null StatementExpression MethodInvocation exe MethodInvocation getProject setAntRun IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement StatementExpression Assignment MemberReference dest MethodInvocation MethodInvocation getBaseDir getProject = End IfStatement MethodInvocation ! dest exists BlockStatement StatementExpression MethodInvocation dest mkdirs End StatementExpression MethodInvocation exe MemberReference dest setWorkingDirectory StatementExpression MethodInvocation exe MemberReference argv setCommandline StatementExpression MethodInvocation exe MethodInvocation env getVariables setEnvironment TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator actualCommandLine MethodInvocation MemberReference exe executeToString StatementExpression MethodInvocation MemberReference actualCommandLine MemberReference Project MSG_VERBOSE log LocalVariableDeclaration BasicType int VariableDeclarator retCode MethodInvocation exe execute StatementExpression MethodInvocation BinaryOperation + Literal ""retCode="" MemberReference retCode MemberReference Project MSG_DEBUG log IfStatement BinaryOperation && MemberReference failOnError MethodInvocation Execute MemberReference retCode isFailure BlockStatement ThrowStatement ClassCreator ReferenceType BuildException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""cvs exited with error code "" MemberReference retCode MemberReference StringUtils LINE_SEP Literal ""Command line was ["" MemberReference actualCommandLine Literal ""] in "" MemberReference dest Literal ""\nInput text:\nSTART==>"" MemberReference inputText Literal ""<==END"" MethodInvocation getLocation End CatchClause CatchClauseParameter IOException e IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal ""Caught exception: "" MethodInvocation e getMessage MemberReference Project MSG_WARN log End CatchClause CatchClauseParameter BuildException e IfStatement MemberReference failOnError BlockStatement ThrowStatement MemberReference e BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getException IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference t MemberReference e = End StatementExpression MethodInvocation BinaryOperation + Literal ""Caught exception: "" MethodInvocation t getMessage MemberReference Project MSG_WARN log End CatchClause CatchClauseParameter Exception e IfStatement MemberReference failOnError BlockStatement ThrowStatement ClassCreator ReferenceType BuildException MemberReference e MethodInvocation getLocation BlockStatement StatementExpression MethodInvocation BinaryOperation + Literal ""Caught exception: "" MethodInvocation e getMessage MemberReference Project MSG_WARN log End IfStatement BinaryOperation != MemberReference outputStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation outputStream close CatchClause CatchClauseParameter IOException e End IfStatement BinaryOperation != MemberReference errorStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation errorStream close CatchClause CatchClauseParameter IOException e End MethodDeclaration /**
     * do the work
     * @throws BuildException if failonerror is set to true and the cvs command fails.
     */ Modifier public execute BuildException LocalVariableDeclaration ReferenceType String VariableDeclarator savedCommand MethodInvocation getCommand IfStatement BinaryOperation && BinaryOperation == This MethodInvocation getCommand Literal null BinaryOperation == MethodInvocation vecCommandlines size Literal 0 BlockStatement StatementExpression This MethodInvocation MemberReference AbstractCvsTask DEFAULT_COMMAND setCommand End LocalVariableDeclaration ReferenceType String VariableDeclarator c This MethodInvocation getCommand LocalVariableDeclaration ReferenceType Commandline VariableDeclarator cloned Literal null IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression Assignment MemberReference cloned Cast ReferenceType Commandline MethodInvocation cmd clone = StatementExpression MethodInvocation cloned MethodInvocation MemberReference c setLine Literal true createArgument StatementExpression This MethodInvocation MemberReference cloned Literal true addConfiguredCommandline End TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation vecCommandlines size MemberReference ++ i BlockStatement StatementExpression This MethodInvocation Cast ReferenceType Commandline MethodInvocation vecCommandlines MemberReference i elementAt runCommand End IfStatement BinaryOperation != MemberReference cloned Literal null BlockStatement StatementExpression MethodInvocation MemberReference cloned removeCommandline End StatementExpression MethodInvocation MemberReference savedCommand setCommand MethodDeclaration Modifier private ReferenceType String executeToString FormalParameter ReferenceType Execute execute LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator stringBuffer ClassCreator ReferenceType StringBuffer MethodInvocation Commandline MethodInvocation execute getCommandline describeCommand LocalVariableDeclaration ReferenceType String VariableDeclarator newLine MemberReference StringUtils LINE_SEP LocalVariableDeclaration ReferenceType String VariableDeclarator variableArray MethodInvocation execute getEnvironment IfStatement BinaryOperation != MemberReference variableArray Literal null BlockStatement StatementExpression MethodInvocation stringBuffer MemberReference newLine append StatementExpression MethodInvocation stringBuffer MemberReference newLine append StatementExpression MethodInvocation stringBuffer Literal ""environment:"" append StatementExpression MethodInvocation stringBuffer MemberReference newLine append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator z Literal 0 BinaryOperation < MemberReference z MemberReference variableArray length MemberReference ++ z BlockStatement StatementExpression MethodInvocation stringBuffer MemberReference newLine append StatementExpression MethodInvocation stringBuffer Literal ""\t"" append StatementExpression MethodInvocation stringBuffer MemberReference ArraySelector MemberReference z variableArray append End End ReturnStatement MethodInvocation stringBuffer toString MethodDeclaration /**
     * The CVSROOT variable.
     *
     * @param root the CVSROOT variable
     */ Modifier public setCvsRoot FormalParameter ReferenceType String root IfStatement BinaryOperation != MemberReference root Literal null BlockStatement IfStatement MethodInvocation root MethodInvocation Literal """" equals trim BlockStatement StatementExpression Assignment MemberReference root Literal null = End End StatementExpression Assignment This MemberReference cvsRoot MemberReference root = MethodDeclaration /**
     * access the CVSROOT variable
     * @return CVSROOT
     */ Modifier public ReferenceType String getCvsRoot ReturnStatement This MemberReference cvsRoot MethodDeclaration /**
     * The CVS_RSH variable.
     *
     * @param rsh the CVS_RSH variable
     */ Modifier public setCvsRsh FormalParameter ReferenceType String rsh IfStatement BinaryOperation != MemberReference rsh Literal null BlockStatement IfStatement MethodInvocation rsh MethodInvocation Literal """" equals trim BlockStatement StatementExpression Assignment MemberReference rsh Literal null = End End StatementExpression Assignment This MemberReference cvsRsh MemberReference rsh = MethodDeclaration /**
     * access the CVS_RSH variable
     * @return the CVS_RSH variable
     */ Modifier public ReferenceType String getCvsRsh ReturnStatement This MemberReference cvsRsh MethodDeclaration /**
     * Port used by CVS to communicate with the server.
     *
     * @param port port of CVS
     */ Modifier public setPort FormalParameter BasicType int port StatementExpression Assignment This MemberReference port MemberReference port = MethodDeclaration /**
     * access the port of CVS
     * @return the port of CVS
     */ Modifier public BasicType int getPort ReturnStatement This MemberReference port MethodDeclaration /**
     * Password file to read passwords from.
     *
     * @param passFile password file to read passwords from
     */ Modifier public setPassfile FormalParameter ReferenceType File passFile StatementExpression Assignment This MemberReference passFile MemberReference passFile = MethodDeclaration /**
     * find the password file
     * @return password file
     */ Modifier public ReferenceType File getPassFile ReturnStatement This MemberReference passFile MethodDeclaration /**
     * The directory where the checked out files should be placed.
     *
     * <p>Note that this is different from CVS's -d command line
     * switch as Ant will never shorten pathnames to avoid empty
     * directories.</p>
     *
     * @param dest directory where the checked out files should be placed
     */ Modifier public setDest FormalParameter ReferenceType File dest StatementExpression Assignment This MemberReference dest MemberReference dest = MethodDeclaration /**
     * get the file where the checked out files should be placed
     *
     * @return directory where the checked out files should be placed
     */ Modifier public ReferenceType File getDest ReturnStatement This MemberReference dest MethodDeclaration /**
     * The package/module to operate upon.
     *
     * @param p package or module to operate upon
     */ Modifier public setPackage FormalParameter ReferenceType String p  StatementExpression Assignment This MemberReference cvsPackage MemberReference p = MethodDeclaration /**
     * access the package or module to operate upon
     *
     * @return package/module
     */ Modifier public ReferenceType String getPackage ReturnStatement This MemberReference cvsPackage MethodDeclaration /**
     * tag or branch
     * @return tag or branch
     * @since ant 1.6.1
     */ Modifier public ReferenceType String getTag ReturnStatement MemberReference tag MethodDeclaration /**
     * The tag of the package/module to operate upon.
     * @param p tag
     */ Modifier public setTag FormalParameter ReferenceType String p IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null BinaryOperation > MethodInvocation p MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference tag MemberReference p = StatementExpression MethodInvocation BinaryOperation + Literal ""-r"" MemberReference p addCommandArgument End MethodDeclaration /**
     * This needs to be public to allow configuration
     *      of commands externally.
     * @param arg command argument
     */ Modifier public addCommandArgument FormalParameter ReferenceType String arg StatementExpression This MethodInvocation MemberReference cmd MemberReference arg addCommandArgument MethodDeclaration /**
     * This method adds a command line argument to an external command.
     *
     * I do not understand what this method does in this class ???
     * particularly not why it is public ????
     * AntoineLL July 23d 2003
     *
     * @param c  command line to which one argument should be added
     * @param arg argument to add
     */ Modifier public addCommandArgument FormalParameter ReferenceType Commandline c FormalParameter ReferenceType String arg StatementExpression MethodInvocation c MethodInvocation MemberReference arg setValue createArgument MethodDeclaration /**
     * Use the most recent revision no later than the given date.
     * @param p a date as string in a format that the CVS executable can understand
     * see man cvs
     */ Modifier public setDate FormalParameter ReferenceType String p IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null BinaryOperation > MethodInvocation p MethodInvocation length trim Literal 0 BlockStatement StatementExpression MethodInvocation Literal ""-D"" addCommandArgument StatementExpression MethodInvocation MemberReference p addCommandArgument End MethodDeclaration /**
     * The CVS command to execute.
     *
     * This should be deprecated, it is better to use the Commandline class ?
     * AntoineLL July 23d 2003
     *
     * @param c a command as string
     */ Modifier public setCommand FormalParameter ReferenceType String c StatementExpression Assignment This MemberReference command MemberReference c = MethodDeclaration /**
     * accessor to a command line as string
     *
     * This should be deprecated
     * AntoineLL July 23d 2003
     *
     * @return command line as string
     */ Modifier public ReferenceType String getCommand ReturnStatement This MemberReference command MethodDeclaration /**
     * If true, suppress informational messages.
     * @param q  if true, suppress informational messages
     */ Modifier public setQuiet FormalParameter BasicType boolean q StatementExpression Assignment MemberReference quiet MemberReference q = MethodDeclaration /**
     * If true, suppress all messages.
     * @param q  if true, suppress all messages
     * @since Ant 1.6
     */ Modifier public setReallyquiet FormalParameter BasicType boolean q StatementExpression Assignment MemberReference reallyquiet MemberReference q = MethodDeclaration /**
     * If true, report only and don't change any files.
     *
     * @param ne if true, report only and do not change any files.
     */ Modifier public setNoexec FormalParameter BasicType boolean ne StatementExpression Assignment MemberReference noexec MemberReference ne = MethodDeclaration /**
     * The file to direct standard output from the command.
     * @param output a file to which stdout should go
     */ Modifier public setOutput FormalParameter ReferenceType File output StatementExpression Assignment This MemberReference output MemberReference output = MethodDeclaration /**
     * The file to direct standard error from the command.
     *
     * @param error a file to which stderr should go
     */ Modifier public setError FormalParameter ReferenceType File error StatementExpression Assignment This MemberReference error MemberReference error = MethodDeclaration /**
     * Whether to append output/error when redirecting to a file.
     * @param value true indicated you want to append
     */ Modifier public setAppend FormalParameter BasicType boolean value StatementExpression Assignment This MemberReference append MemberReference value = MethodDeclaration /**
     * Stop the build process if the command exits with
     * a return code other than 0.
     * Defaults to false.
     * @param failOnError stop the build process if the command exits with
     * a return code other than 0
     */ Modifier public setFailOnError FormalParameter BasicType boolean failOnError StatementExpression Assignment This MemberReference failOnError MemberReference failOnError = MethodDeclaration /**
     * Configure a commandline element for things like cvsRoot, quiet, etc.
     * @param c the command line which will be configured
     * if the commandline is initially null, the function is a noop
     * otherwise the function append to the commandline arguments concerning
     * <ul>
     * <li>
     * cvs package
     * </li>
     * <li>
     * compression
     * </li>
     * <li>
     * quiet or reallyquiet
     * </li>
     * <li>cvsroot</li>
     * <li>noexec</li>
     * </ul>
     */ Modifier protected configureCommandline FormalParameter ReferenceType Commandline c IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation c MemberReference cvsExe setExecutable IfStatement BinaryOperation != MemberReference cvsPackage Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MemberReference cvsPackage StatementExpression MethodInvocation c MethodInvocation MemberReference s setValue createArgument End End IfStatement BinaryOperation && BinaryOperation > This MemberReference compression Literal 0 BinaryOperation <= This MemberReference compression MemberReference MAXIMUM_COMRESSION_LEVEL BlockStatement StatementExpression MethodInvocation c MethodInvocation BinaryOperation + Literal ""-z"" This MemberReference compression setValue Literal true createArgument End IfStatement BinaryOperation && MemberReference quiet MemberReference ! reallyquiet BlockStatement StatementExpression MethodInvocation c MethodInvocation Literal ""-q"" setValue Literal true createArgument End IfStatement MemberReference reallyquiet BlockStatement StatementExpression MethodInvocation c MethodInvocation Literal ""-Q"" setValue Literal true createArgument End IfStatement MemberReference noexec BlockStatement StatementExpression MethodInvocation c MethodInvocation Literal ""-n"" setValue Literal true createArgument End IfStatement BinaryOperation != MemberReference cvsRoot Literal null BlockStatement StatementExpression MethodInvocation c MethodInvocation BinaryOperation + Literal ""-d"" MemberReference cvsRoot setLine Literal true createArgument End MethodDeclaration /**
     * remove a particular command from a vector of command lines
     * @param c command line which should be removed
     */ Modifier protected removeCommandline FormalParameter ReferenceType Commandline c StatementExpression MethodInvocation vecCommandlines MemberReference c removeElement MethodDeclaration /**
     * Adds direct command-line to execute.
     * @param c command line to execute
     */ Modifier public addConfiguredCommandline FormalParameter ReferenceType Commandline c StatementExpression This MethodInvocation MemberReference c Literal false addConfiguredCommandline MethodDeclaration /**
     * Configures and adds the given Commandline.
     * @param c commandline to insert
     * @param insertAtStart If true, c is
     * inserted at the beginning of the vector of command lines
    */ Modifier public addConfiguredCommandline FormalParameter ReferenceType Commandline c FormalParameter BasicType boolean insertAtStart IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement End StatementExpression This MethodInvocation MemberReference c configureCommandline IfStatement MemberReference insertAtStart BlockStatement StatementExpression MethodInvocation vecCommandlines MemberReference c Literal 0 insertElementAt BlockStatement StatementExpression MethodInvocation vecCommandlines MemberReference c addElement End MethodDeclaration /**
    * If set to a value 1-9 it adds -zN to the cvs command line, else
    * it disables compression.
     * @param level compression level 1 to 9
    */ Modifier public setCompressionLevel FormalParameter BasicType int level StatementExpression Assignment This MemberReference compression MemberReference level = MethodDeclaration /**
     * If true, this is the same as compressionlevel=""3"".
     *
     * @param usecomp If true, turns on compression using default
     * level, AbstractCvsTask.DEFAULT_COMPRESSION_LEVEL.
     */ Modifier public setCompression FormalParameter BasicType boolean usecomp StatementExpression MethodInvocation TernaryExpression MemberReference usecomp MemberReference AbstractCvsTask DEFAULT_COMPRESSION_LEVEL Literal 0 setCompressionLevel ReferenceType Task",0
578,578,,1
427,427,,0
546,546,,0
353,353,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.AuthenticationException Import org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint Import javax.servlet.ServletException Import javax.servlet.ServletOutputStream Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse Import javax.servlet.http.HttpServletRequest Import javax.servlet.http.HttpServletResponse Import javax.servlet.http.HttpServletResponse.SC_FORBIDDEN  Import java.io.IOException Import java.io.OutputStreamWriter Import java.io.PrintWriter Import java.net.URLEncoder Import java.text.MessageFormat ClassDeclaration Modifier public /**
 * For anonymous requests to pages that require authentication,
 * first respond with {@link HttpServletResponse#SC_FORBIDDEN},
 * then redirect browsers automatically to the login page.
 *
 * <p>
 * This is a compromise to handle programmatic access and
 * real browsers equally well.
 *
 * <p>
 * The page that programs see is entirely white, and it auto-redirects,
 * so humans wouldn't notice it. 
 *
 * @author Kohsuke Kawaguchi
 */ HudsonAuthenticationEntryPoint MethodDeclaration Modifier public commence FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter ReferenceType AuthenticationException authException IOException ServletException LocalVariableDeclaration ReferenceType HttpServletRequest VariableDeclarator req Cast ReferenceType HttpServletRequest MemberReference request LocalVariableDeclaration ReferenceType HttpServletResponse VariableDeclarator rsp Cast ReferenceType HttpServletResponse MemberReference response LocalVariableDeclaration ReferenceType String VariableDeclarator requestedWith MethodInvocation req Literal ""X-Requested-With"" getHeader IfStatement Literal MethodInvocation MemberReference requestedWith equals ""XMLHttpRequest"" BlockStatement StatementExpression MethodInvocation rsp MemberReference SC_FORBIDDEN sendError BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator loginForm BinaryOperation + MethodInvocation req getContextPath MethodInvocation getLoginFormUrl StatementExpression Assignment MemberReference loginForm MethodInvocation MessageFormat MemberReference loginForm MethodInvocation URLEncoder MethodInvocation req getRequestURI Literal ""UTF-8"" encode format = StatementExpression MethodInvocation req Literal ""loginForm"" MemberReference loginForm setAttribute StatementExpression MethodInvocation rsp MemberReference SC_FORBIDDEN setStatus StatementExpression MethodInvocation rsp Literal ""text/html;charset=UTF-8"" setContentType LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator out TryStatement LocalVariableDeclaration ReferenceType ServletOutputStream VariableDeclarator sout MethodInvocation rsp getOutputStream StatementExpression Assignment MemberReference out ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference sout = CatchClause CatchClauseParameter IllegalStateException e StatementExpression Assignment MemberReference out MethodInvocation rsp getWriter = StatementExpression MethodInvocation out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""<html><head>"" Literal ""<meta http-equiv='refresh' content='1;url=%1$s'/>"" Literal ""<script>window.location.replace('%1$s');</script>"" Literal ""</head>"" Literal ""<body style='background-color:white; color:white;'>"" Literal ""Authentication required</body></html>"" MemberReference loginForm printf StatementExpression MethodInvocation out flush End ReferenceType AuthenticationProcessingFilterEntryPoint",0
148,148,"CompilationUnit PackageDeclaration hudson.security Import hudson.model.Hudson Import java.io.IOException Import java.util.logging.Level Import java.util.logging.Logger Import javax.servlet.Filter Import javax.servlet.FilterChain Import javax.servlet.FilterConfig Import javax.servlet.ServletContext Import javax.servlet.ServletException Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse Import org.acegisecurity.AuthenticationManager Import org.acegisecurity.ui.rememberme.RememberMeServices Import org.acegisecurity.userdetails.UserDetailsService ClassDeclaration Modifier public /**
 * {@link Filter} that Hudson uses to implement security support.
 *
 * <p>
 * This is the instance the servlet container creates, but
 * internally this just acts as a proxy to the real {@link Filter},
 * created by {@link SecurityRealm#createFilter(FilterConfig)}.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.160
 */ HudsonFilter FieldDeclaration /**
     * The SecurityRealm specific filter.
     */ Modifier private volatile ReferenceType Filter VariableDeclarator filter FieldDeclaration /**
     * The {@link #init(FilterConfig)} may be called before the Hudson instance is up (which is
     * required for initialization of the filter).  So we store the
     * filterConfig for later lazy-initialization of the filter.
     */ Modifier private ReferenceType FilterConfig VariableDeclarator filterConfig FieldDeclaration /**
     * {@link AuthenticationManager} proxy so that the acegi filter chain can stay the same
     * even when security setting is reconfigured.
     *
     * @deprecated in 1.271.
     * This proxy always delegate to {@code Hudson.getInstance().getSecurityRealm().getSecurityComponents().manager},
     * so use that instead.
     */ Modifier public final static ReferenceType AuthenticationManagerProxy VariableDeclarator AUTHENTICATION_MANAGER ClassCreator ReferenceType AuthenticationManagerProxy FieldDeclaration /**
     * {@link UserDetailsService} proxy so that the acegi filter chain can stay the same
     * even when security setting is reconfigured.
     *
     * @deprecated in 1.271.
     * This proxy always delegate to {@code Hudson.getInstance().getSecurityRealm().getSecurityComponents().userDetails},
     * so use that instead.
     */ Modifier public final static ReferenceType UserDetailsServiceProxy VariableDeclarator USER_DETAILS_SERVICE_PROXY ClassCreator ReferenceType UserDetailsServiceProxy FieldDeclaration /**
     * {@link RememberMeServices} proxy so that the acegi filter chain can stay the same
     * even when security setting is reconfigured.
     *
     * @deprecated in 1.271.
     * This proxy always delegate to {@code Hudson.getInstance().getSecurityRealm().getSecurityComponents().rememberMe},
     * so use that instead.
     */ Modifier public final static ReferenceType RememberMeServicesProxy VariableDeclarator REMEMBER_ME_SERVICES_PROXY ClassCreator ReferenceType RememberMeServicesProxy MethodDeclaration Modifier public init FormalParameter ReferenceType FilterConfig filterConfig ServletException StatementExpression Assignment This MemberReference filterConfig MemberReference filterConfig = StatementExpression MethodInvocation filterConfig MethodInvocation ClassReference MethodInvocation getName ReferenceType HudsonFilter This setAttribute getServletContext LocalVariableDeclaration ReferenceType Hudson VariableDeclarator hudson MethodInvocation Hudson getInstance IfStatement BinaryOperation != MemberReference hudson Literal null BlockStatement StatementExpression MethodInvocation LOGGER Literal ""Security wasn't initialized; Initializing it..."" fine LocalVariableDeclaration ReferenceType SecurityRealm VariableDeclarator securityRealm MethodInvocation hudson getSecurityRealm StatementExpression MethodInvocation MemberReference securityRealm reset StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""securityRealm is "" MemberReference securityRealm fine StatementExpression MethodInvocation LOGGER Literal ""Security initialized"" fine End MethodDeclaration /**
     * Gets the {@link HudsonFilter} created for the given {@link ServletContext}.
     */ Modifier public static ReferenceType HudsonFilter get FormalParameter ReferenceType ServletContext context ReturnStatement Cast ReferenceType HudsonFilter MethodInvocation context ClassReference MethodInvocation getName ReferenceType HudsonFilter getAttribute MethodDeclaration /**
     * Reset the proxies and filter for a change in {@link SecurityRealm}.
     */ Modifier public reset FormalParameter ReferenceType SecurityRealm securityRealm ServletException IfStatement BinaryOperation != MemberReference securityRealm Literal null BlockStatement LocalVariableDeclaration ReferenceType SecurityRealm ReferenceType SecurityComponents VariableDeclarator sc MethodInvocation securityRealm getSecurityComponents StatementExpression MethodInvocation AUTHENTICATION_MANAGER MemberReference sc manager setDelegate StatementExpression MethodInvocation USER_DETAILS_SERVICE_PROXY MemberReference sc userDetails setDelegate StatementExpression MethodInvocation REMEMBER_ME_SERVICES_PROXY MemberReference sc rememberMe setDelegate LocalVariableDeclaration ReferenceType Filter VariableDeclarator oldf This MemberReference filter LocalVariableDeclaration ReferenceType Filter VariableDeclarator newf MethodInvocation securityRealm This MemberReference filterConfig createFilter StatementExpression MethodInvocation newf This MemberReference filterConfig init StatementExpression Assignment This MemberReference filter MemberReference newf = IfStatement BinaryOperation != MemberReference oldf Literal null StatementExpression MethodInvocation oldf destroy End BlockStatement StatementExpression MethodInvocation AUTHENTICATION_MANAGER Literal null setDelegate StatementExpression MethodInvocation USER_DETAILS_SERVICE_PROXY Literal null setDelegate StatementExpression MethodInvocation REMEMBER_ME_SERVICES_PROXY Literal null setDelegate StatementExpression Assignment MemberReference filter Literal null = End MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter ReferenceType FilterChain chain IOException ServletException StatementExpression MethodInvocation LOGGER ClassReference MethodInvocation getName ReferenceType HudsonFilter Literal ""doFilter"" entering LocalVariableDeclaration ReferenceType Filter VariableDeclarator f MemberReference filter IfStatement BinaryOperation == MemberReference f Literal null BlockStatement StatementExpression MethodInvocation chain MemberReference request MemberReference response doFilter BlockStatement StatementExpression MethodInvocation f MemberReference request MemberReference response MemberReference chain doFilter End MethodDeclaration Modifier public destroy IfStatement BinaryOperation != MemberReference filter Literal null StatementExpression MethodInvocation filter destroy End FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType HudsonFilter getLogger ReferenceType Filter",1
547,547,,0
212,212,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.model.Descriptor Import hudson.model.Node Import hudson.model.TaskListener Import java.io.IOException ClassDeclaration Modifier public abstract /**
 * {@link ComputerLauncher} filter that can be used as a base class for decorators.
 *
 * <p>
 * Using this class also protects you from method additions in {@link ComputerLauncher},
 * since these two classes are updated in sync.
 *
 * @author Kohsuke Kawaguchi
 * @see SlaveComputer#grabLauncher(Node)
 */ ComputerLauncherFilter FieldDeclaration Modifier protected volatile ReferenceType ComputerLauncher VariableDeclarator core ConstructorDeclaration Modifier public ComputerLauncherFilter FormalParameter ReferenceType ComputerLauncher core StatementExpression Assignment This MemberReference core MemberReference core = MethodDeclaration /**
     * Returns the delegation target.
     */ Modifier public ReferenceType ComputerLauncher getCore ReturnStatement MemberReference core MethodDeclaration Modifier public BasicType boolean isLaunchSupported ReturnStatement MethodInvocation core isLaunchSupported MethodDeclaration Modifier public launch FormalParameter ReferenceType SlaveComputer computer FormalParameter ReferenceType TaskListener listener IOException InterruptedException StatementExpression MethodInvocation core MemberReference computer MemberReference listener launch MethodDeclaration Modifier public afterDisconnect FormalParameter ReferenceType SlaveComputer computer FormalParameter ReferenceType TaskListener listener StatementExpression MethodInvocation core MemberReference computer MemberReference listener afterDisconnect MethodDeclaration Modifier public beforeDisconnect FormalParameter ReferenceType SlaveComputer computer FormalParameter ReferenceType TaskListener listener StatementExpression MethodInvocation core MemberReference computer MemberReference listener beforeDisconnect MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType ComputerLauncher getDescriptor ThrowStatement ClassCreator ReferenceType UnsupportedOperationException ReferenceType ComputerLauncher",0
120,120,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.IOException Import java.io.ObjectInputStream Import java.io.ObjectOutputStream Import java.io.OutputStream Import java.io.Serializable ClassDeclaration Modifier public final /**
 * {@link OutputStream} that can be sent over to the remote {@link Channel},
 * so that the remote {@link Callable} can write to a local {@link OutputStream}.
 *
 * <h2>Usage</h2>
 * <p>
 * To have a remote machine write to a local {@link OutputStream}:
 * <pre>
 * final OutputStream out = new RemoteOutputStream(os);
 *
 * channel.call(new Callable() {
 *   public Object call() {
 *     // this will write to 'os'.
 *     out.write(...);
 *   }
 * });
 * </pre>
 *
 * <p>
 * To have a local machine write to a remote {@link OutputStream}:
 *
 * <pre>
 * OutputStream os = channel.call(new Callable() {
 *   public Object call() {
 *       OutputStream os = new FileOutputStream(...); // or any other OutputStream
 *       return new RemoteOutputStream(os);
 *   }
 * });
 * </pre>
 *
 * @see RemoteInputStream
 * @author Kohsuke Kawaguchi
 */ RemoteOutputStream FieldDeclaration /**
     * On local machine, this points to the {@link OutputStream} where
     * the data will be sent ultimately.
     *
     * On remote machine, this points to {@link ProxyOutputStream} that
     * does the network proxy.
     */ Modifier private transient ReferenceType OutputStream VariableDeclarator core ConstructorDeclaration Modifier public RemoteOutputStream FormalParameter ReferenceType OutputStream core IfStatement BinaryOperation == MemberReference core Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException End StatementExpression Assignment This MemberReference core MemberReference core = MethodDeclaration Modifier private writeObject FormalParameter ReferenceType ObjectOutputStream oos IOException LocalVariableDeclaration BasicType int VariableDeclarator id MethodInvocation Channel MethodInvocation MemberReference core Literal false export current StatementExpression MethodInvocation oos MemberReference id writeInt MethodDeclaration Modifier private readObject FormalParameter ReferenceType ObjectInputStream ois IOException ClassNotFoundException LocalVariableDeclaration Modifier final ReferenceType Channel VariableDeclarator channel MethodInvocation Channel current AssertStatement BinaryOperation != MemberReference channel Literal null StatementExpression Assignment This MemberReference core ClassCreator ReferenceType ProxyOutputStream MemberReference channel MethodInvocation ois readInt = FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L MethodDeclaration Modifier public write FormalParameter BasicType int b IOException StatementExpression MethodInvocation core MemberReference b write MethodDeclaration Modifier public write FormalParameter BasicType byte b IOException StatementExpression MethodInvocation core MemberReference b write MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException StatementExpression MethodInvocation core MemberReference b MemberReference off MemberReference len write MethodDeclaration Modifier public flush IOException StatementExpression MethodInvocation core flush MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation core close ReferenceType OutputStream ReferenceType Serializable",0
251,251,"CompilationUnit PackageDeclaration hudson.util Import java.io.OutputStream Import java.io.Writer Import java.io.IOException Import java.nio.charset.CharsetDecoder Import java.nio.charset.CodingErrorAction Import java.nio.charset.CoderResult Import java.nio.charset.Charset Import java.nio.charset.UnsupportedCharsetException Import java.nio  ClassDeclaration Modifier public /**
 * {@link OutputStream} that writes to {@link Writer}
 * by assuming the platform default encoding.
 *
 * @author Kohsuke Kawaguchi
 * @deprecated
 *      Use the one in stapler.
 */ WriterOutputStream FieldDeclaration Modifier private final ReferenceType Writer VariableDeclarator writer FieldDeclaration Modifier private final ReferenceType CharsetDecoder VariableDeclarator decoder FieldDeclaration Modifier private ReferenceType java ReferenceType nio ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation java.nio.ByteBuffer Literal 1024 allocate FieldDeclaration Modifier private ReferenceType CharBuffer VariableDeclarator out MethodInvocation CharBuffer Literal 1024 allocate ConstructorDeclaration Modifier public WriterOutputStream FormalParameter ReferenceType Writer out StatementExpression Assignment This MemberReference writer MemberReference out = StatementExpression Assignment MemberReference decoder MethodInvocation DEFAULT_CHARSET newDecoder = StatementExpression MethodInvocation decoder MemberReference CodingErrorAction REPLACE onMalformedInput StatementExpression MethodInvocation decoder MemberReference CodingErrorAction REPLACE onUnmappableCharacter MethodDeclaration Modifier public write FormalParameter BasicType int b IOException IfStatement BinaryOperation == MethodInvocation buf remaining Literal 0 StatementExpression MethodInvocation Literal false decode End StatementExpression MethodInvocation buf Cast BasicType byte MemberReference b put MethodDeclaration Modifier public write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException WhileStatement BinaryOperation > MemberReference len Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation buf remaining Literal 0 StatementExpression MethodInvocation Literal false decode End LocalVariableDeclaration BasicType int VariableDeclarator sz MethodInvocation Math MethodInvocation buf remaining MemberReference len min StatementExpression MethodInvocation buf MemberReference b MemberReference off MemberReference sz put StatementExpression Assignment MemberReference off MemberReference sz += StatementExpression Assignment MemberReference len MemberReference sz -= End MethodDeclaration Modifier public flush IOException StatementExpression MethodInvocation Literal false decode StatementExpression MethodInvocation flushOutput StatementExpression MethodInvocation writer flush MethodDeclaration Modifier private flushOutput IOException StatementExpression MethodInvocation writer MethodInvocation out array Literal 0 MethodInvocation out position write StatementExpression MethodInvocation out clear MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation Literal true decode StatementExpression MethodInvocation flushOutput StatementExpression MethodInvocation writer close StatementExpression MethodInvocation buf rewind MethodDeclaration /**
     * Decodes the contents of {@link #buf} as much as possible to {@link #out}.
     * If necessary {@link #out} is further sent to {@link #writer}.
     *
     * <p>
     * When this method returns, the {@link #buf} is back to the 'accumulation'
     * mode.
     *
     * @param last
     *      if true, tell the decoder that all the input bytes are ready.
     */ Modifier private decode FormalParameter BasicType boolean last IOException StatementExpression MethodInvocation buf flip WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType CoderResult VariableDeclarator r MethodInvocation decoder MemberReference buf MemberReference out MemberReference last decode IfStatement BinaryOperation == MemberReference r MemberReference CoderResult OVERFLOW BlockStatement StatementExpression MethodInvocation flushOutput ContinueStatement End IfStatement BinaryOperation == MemberReference r MemberReference CoderResult UNDERFLOW BlockStatement StatementExpression MethodInvocation buf compact ReturnStatement End StatementExpression MethodInvocation r throwException End FieldDeclaration Modifier private final static ReferenceType Charset VariableDeclarator DEFAULT_CHARSET MethodInvocation getDefaultCharset MethodDeclaration Modifier private static ReferenceType Charset getDefaultCharset TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator encoding MethodInvocation System Literal ""file.encoding"" getProperty ReturnStatement MethodInvocation Charset MemberReference encoding forName CatchClause CatchClauseParameter UnsupportedCharsetException e ReturnStatement MethodInvocation Charset Literal ""UTF-8"" forName ReferenceType OutputStream",0
304,304,"CompilationUnit PackageDeclaration hudson.util Import com.sun.jna.Memory Import com.sun.jna.Native Import com.sun.jna.Pointer.NULL  Import com.sun.jna.ptr.IntByReference Import hudson.EnvVars Import hudson.Util Import hudson.util.jna.GNUCLibrary.LIBC  Import org.apache.commons.io.FileUtils Import org.jvnet.winp.WinProcess Import org.jvnet.winp.WinpException Import java.io.BufferedReader Import java.io.ByteArrayOutputStream Import java.io.DataInputStream Import java.io.File Import java.io.FileFilter Import java.io.FileReader Import java.io.IOException Import java.io.RandomAccessFile Import java.lang.reflect.Field Import java.lang.reflect.InvocationTargetException Import java.lang.reflect.Method Import java.util.ArrayList Import java.util.Collections Import java.util.HashMap Import java.util.Iterator Import java.util.List Import java.util.Locale Import java.util.Map Import java.util.Map.Entry Import java.util.UUID Import java.util.logging.Level Import java.util.logging.Level.FINER  Import java.util.logging.Level.FINEST  Import java.util.logging.Logger ClassDeclaration Modifier public abstract /**
 * Kills a process tree to clean up the mess left by a build.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.201
 */ ProcessTreeKiller MethodDeclaration /**
     * Short for {@code kill(proc,null)}
     */ Modifier public kill FormalParameter ReferenceType Process proc StatementExpression MethodInvocation MemberReference proc Literal null kill MethodDeclaration /**
     * In addition to what {@link #kill(Process)} does, also tries to
     * kill all the daemon processes launched.
     *
     * <p>
     * Kills the given process (like {@link Process#destroy()}
     * but also attempts to kill descendant processes created from the given
     * process.
     *
     * <p>
     * In addition, optionally perform ""search and destroy"" based on environment
     * variables. In this method, the method is given a
     * ""model environment variables"", which is a list of environment variables
     * and their values that are characteristic to the launched process.
     * The implementation is expected to find processes
     * in the system that inherit these environment variables, and kill
     * them all. This is suitable for locating daemon processes
     * that cannot be tracked by the regular
     *
     * <p>
     * The implementation is obviously OS-dependent.
     *
     * @param proc
     *      Process to be killed recursively. Can be null.
     * @param modelEnvVars
     *      If non-null, search-and-destroy will be performed.
     */ Modifier public abstract kill FormalParameter ReferenceType Process proc FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String modelEnvVars MethodDeclaration /**
     * Short for {@code kill(null,modelEnvVars)}
     */ Modifier public kill FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String modelEnvVars StatementExpression MethodInvocation Literal null MemberReference modelEnvVars kill MethodDeclaration /**
     * Creates a magic cookie that can be used as the model environment variable
     * when we later kill the processes.
     */ Modifier public static ReferenceType EnvVars createCookie ReturnStatement ClassCreator ReferenceType EnvVars Literal ""HUDSON_COOKIE"" MethodInvocation UUID MethodInvocation toString randomUUID MethodDeclaration /**
     * Gets the {@link ProcessTreeKiller} suitable for the current system
     * that JVM runs in, or in the worst case return the default one
     * that's not capable of killing descendants at all.
     */ Modifier public static ReferenceType ProcessTreeKiller get IfStatement MemberReference ! enabled ReturnStatement MemberReference DEFAULT End TryStatement IfStatement BinaryOperation == MemberReference File pathSeparatorChar Literal ';' ReturnStatement ClassCreator ReferenceType Windows End LocalVariableDeclaration ReferenceType String VariableDeclarator os MethodInvocation Util MethodInvocation System Literal ""os.name"" getProperty fixNull IfStatement MethodInvocation os Literal ""Linux"" equals ReturnStatement ClassCreator ReferenceType Linux End IfStatement MethodInvocation os Literal ""SunOS"" equals ReturnStatement ClassCreator ReferenceType Solaris End IfStatement MethodInvocation os Literal ""Mac OS X"" equals ReturnStatement ClassCreator ReferenceType Darwin End CatchClause CatchClauseParameter LinkageError e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING Literal ""Failed to load winp. Reverting to the default"" MemberReference e log StatementExpression Assignment MemberReference enabled Literal false = ReturnStatement MemberReference DEFAULT MethodDeclaration /**
     * Given the environment variable of a process and the ""model environment variable"" that Hudson
     * used for launching the build, returns true if there's a match (which means the process should
     * be considered a descendant of a build.) 
     */ Modifier protected BasicType boolean hasMatchingEnvVars FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String envVar FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String modelEnvVar IfStatement MethodInvocation modelEnvVar isEmpty ReturnStatement Literal false End ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation modelEnvVar entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator v MethodInvocation envVar MethodInvocation e getKey get IfStatement BinaryOperation || BinaryOperation == MemberReference v Literal null MethodInvocation ! v MethodInvocation e getValue equals ReturnStatement Literal false End End ReturnStatement Literal true FieldDeclaration /**
     * Fallback implementation that doesn't do anything clever.
     */ Modifier private final static ReferenceType ProcessTreeKiller VariableDeclarator DEFAULT ClassCreator ReferenceType ProcessTreeKiller MethodDeclaration Modifier public kill FormalParameter ReferenceType Process proc FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String modelEnvVars IfStatement BinaryOperation != MemberReference proc Literal null StatementExpression MethodInvocation proc destroy End ClassDeclaration Modifier private final static /**
     * Implementation for Windows.
     *
     * <p>
     * Not a singleton pattern because loading this class requires Windows specific library.
     */ Windows MethodDeclaration Modifier public kill FormalParameter ReferenceType Process proc FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String modelEnvVars IfStatement BinaryOperation != MemberReference proc Literal null StatementExpression ClassCreator MethodInvocation killRecursively ReferenceType WinProcess MemberReference proc End IfStatement BinaryOperation != MemberReference modelEnvVars Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType WinProcess VariableDeclarator p MethodInvocation WinProcess all BlockStatement IfStatement BinaryOperation < MethodInvocation p getPid Literal 10 ContinueStatement End LocalVariableDeclaration BasicType boolean VariableDeclarator matched TryStatement StatementExpression Assignment MemberReference matched MethodInvocation MethodInvocation p getEnvironmentVariables MemberReference modelEnvVars hasMatchingEnvVars = CatchClause CatchClauseParameter WinpException e ContinueStatement IfStatement MemberReference matched StatementExpression MethodInvocation p killRecursively End End End StatementExpression MethodInvocation WinProcess enableDebugPrivilege ReferenceType ProcessTreeKiller ClassDeclaration Modifier private static abstract /**
     * Implementation for Unix that supports reasonably powerful <tt>/proc</tt> FS.
     */ Unix MethodDeclaration Modifier protected abstract ReferenceType S createSystem MethodDeclaration Modifier public kill FormalParameter ReferenceType Process proc FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String modelEnvVars LocalVariableDeclaration ReferenceType S VariableDeclarator system MethodInvocation createSystem IfStatement BinaryOperation != MemberReference proc Literal null BlockStatement LocalVariableDeclaration ReferenceType UnixProcess VariableDeclarator p TryStatement StatementExpression Assignment MemberReference p MethodInvocation system Cast ReferenceType Integer MethodInvocation PID_FIELD MemberReference proc get get = CatchClause CatchClauseParameter IllegalAccessException e LocalVariableDeclaration ReferenceType IllegalAccessError VariableDeclarator x ClassCreator ReferenceType IllegalAccessError StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x IfStatement BinaryOperation == MemberReference p Literal null BlockStatement StatementExpression MethodInvocation proc destroy BlockStatement StatementExpression MethodInvocation p killRecursively StatementExpression MethodInvocation proc destroy End End IfStatement BinaryOperation != MemberReference modelEnvVars Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType UnixProcess VariableDeclarator lp MemberReference system BlockStatement IfStatement MethodInvocation MethodInvocation lp getEnvVars MemberReference modelEnvVars hasMatchingEnvVars StatementExpression MethodInvocation lp killRecursively End End End FieldDeclaration /**
         * Field to access the PID of the process.
         */ Modifier private final static ReferenceType Field VariableDeclarator PID_FIELD FieldDeclaration /**
         * Method to destroy a process, given pid.
         */ Modifier private final static ReferenceType Method VariableDeclarator DESTROY_PROCESS TryStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator clazz MethodInvocation Class Literal ""java.lang.UNIXProcess"" forName StatementExpression Assignment MemberReference PID_FIELD MethodInvocation clazz Literal ""pid"" getDeclaredField = StatementExpression MethodInvocation PID_FIELD Literal true setAccessible StatementExpression Assignment MemberReference DESTROY_PROCESS MethodInvocation clazz Literal ""destroyProcess"" ClassReference BasicType int getDeclaredMethod = StatementExpression MethodInvocation DESTROY_PROCESS Literal true setAccessible CatchClause CatchClauseParameter ClassNotFoundException e LocalVariableDeclaration ReferenceType LinkageError VariableDeclarator x ClassCreator ReferenceType LinkageError StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x CatchClause CatchClauseParameter NoSuchFieldException e LocalVariableDeclaration ReferenceType LinkageError VariableDeclarator x ClassCreator ReferenceType LinkageError StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x CatchClause CatchClauseParameter NoSuchMethodException e LocalVariableDeclaration ReferenceType LinkageError VariableDeclarator x ClassCreator ReferenceType LinkageError StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x ClassDeclaration Modifier static abstract /**
         * Represents a single Unix system, which hosts multiple processes.
         *
         * <p>
         * The object represents a snapshot of the system state.
         */ UnixSystem FieldDeclaration /**
             * To be filled in the constructor of the derived type.
             */ Modifier final protected ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType P VariableDeclarator processes ClassCreator ReferenceType HashMap TypeArgument ReferenceType Integer TypeArgument ReferenceType P MethodDeclaration Modifier public ReferenceType P get FormalParameter BasicType int pid ReturnStatement MethodInvocation processes MemberReference pid get MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType P iterator ReturnStatement MethodInvocation processes MethodInvocation iterator values TypeParameter P ReferenceType UnixProcess TypeArgument ReferenceType P ReferenceType Iterable TypeArgument ReferenceType P ClassDeclaration Modifier static abstract /**
         * {@link UnixSystem} that has /proc.
         */ ProcfsUnixSystem ConstructorDeclaration ProcfsUnixSystem LocalVariableDeclaration ReferenceType File VariableDeclarator processes ClassCreator MethodInvocation ClassCreator ReferenceType FileFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File f ReturnStatement MethodInvocation f isDirectory listFiles ReferenceType File Literal ""/proc"" IfStatement BinaryOperation == MemberReference processes Literal null BlockStatement StatementExpression MethodInvocation LOGGER Literal ""No /proc"" info ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator p MemberReference processes BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pid TryStatement StatementExpression Assignment MemberReference pid MethodInvocation Integer MethodInvocation p getName parseInt = CatchClause CatchClauseParameter NumberFormatException e ContinueStatement TryStatement StatementExpression This MemberReference processes MethodInvocation MemberReference pid MethodInvocation MemberReference pid createProcess put CatchClause CatchClauseParameter IOException e End MethodDeclaration Modifier protected abstract ReferenceType P createProcess FormalParameter BasicType int pid IOException TypeParameter P ReferenceType UnixProcess TypeArgument ReferenceType P ReferenceType UnixSystem TypeArgument ReferenceType P ClassDeclaration Modifier public static abstract /**
         * A process.
         */ UnixProcess FieldDeclaration Modifier public final ReferenceType UnixSystem TypeArgument ReferenceType P VariableDeclarator system ConstructorDeclaration Modifier protected UnixProcess FormalParameter ReferenceType UnixSystem TypeArgument ReferenceType P system StatementExpression Assignment This MemberReference system MemberReference system = MethodDeclaration Modifier public abstract BasicType int getPid MethodDeclaration /**
             * Gets the parent process. This method may return null, because
             * there's no guarantee that we are getting a consistent snapshot
             * of the whole system state.
             */ Modifier public abstract ReferenceType P getParent MethodDeclaration Modifier final protected ReferenceType File getFile FormalParameter ReferenceType String relativePath ReturnStatement ClassCreator ReferenceType File ClassCreator ReferenceType File BinaryOperation + Literal ""/proc/"" MethodInvocation getPid MemberReference relativePath MethodDeclaration /**
             * Immediate child processes.
             */ Modifier public ReferenceType List TypeArgument ReferenceType P getChildren LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType P VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType P ForStatement EnhancedForControl VariableDeclaration ReferenceType P VariableDeclarator p MemberReference system IfStatement BinaryOperation == MethodInvocation p getParent This StatementExpression MethodInvocation r MemberReference p add End End ReturnStatement MemberReference r MethodDeclaration /**
             * Tries to kill this process.
             */ Modifier public kill TryStatement StatementExpression MethodInvocation DESTROY_PROCESS Literal null MethodInvocation getPid invoke CatchClause CatchClauseParameter IllegalAccessException e LocalVariableDeclaration ReferenceType IllegalAccessError VariableDeclarator x ClassCreator ReferenceType IllegalAccessError StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x CatchClause CatchClauseParameter InvocationTargetException e IfStatement BinaryOperation instanceof MethodInvocation e getTargetException ReferenceType Error ThrowStatement Cast ReferenceType Error MethodInvocation e getTargetException End StatementExpression MethodInvocation LOGGER MemberReference Level INFO BinaryOperation + Literal ""Failed to terminate pid="" MethodInvocation getPid MemberReference e log MethodDeclaration Modifier public killRecursively ForStatement EnhancedForControl VariableDeclaration ReferenceType P VariableDeclarator p MethodInvocation getChildren StatementExpression MethodInvocation p killRecursively End StatementExpression MethodInvocation kill MethodDeclaration /**
             * Obtains the environment variables of this process.
             *
             * @return
             *      empty map if failed (for example because the process is already dead,
             *      or the permission was denied.)
             */ Modifier public abstract ReferenceType EnvVars getEnvVars MethodDeclaration /**
             * Obtains the argument list of this process.
             *
             * @return
             *      empty list if failed (for example because the process is already dead,
             *      or the permission was denied.)
             */ Modifier public abstract ReferenceType List TypeArgument ReferenceType String getArguments TypeParameter P ReferenceType UnixProcess TypeArgument ReferenceType P TypeParameter S ReferenceType Unix ReferenceType UnixSystem TypeArgument ? ReferenceType ProcessTreeKiller ClassDeclaration Modifier private final static /**
     * Implementation for Linux that uses <tt>/proc</tt>.
     */ Linux MethodDeclaration Modifier protected ReferenceType LinuxSystem createSystem ReturnStatement ClassCreator ReferenceType LinuxSystem ClassDeclaration Modifier static LinuxSystem MethodDeclaration Modifier protected ReferenceType LinuxProcess createProcess FormalParameter BasicType int pid IOException ReturnStatement ClassCreator ReferenceType LinuxProcess This MemberReference pid ReferenceType Unix ReferenceType ProcfsUnixSystem TypeArgument ReferenceType LinuxProcess ClassDeclaration Modifier static LinuxProcess FieldDeclaration Modifier private final BasicType int VariableDeclarator pid FieldDeclaration Modifier private BasicType int VariableDeclarator ppid Literal - 1 FieldDeclaration Modifier private ReferenceType EnvVars VariableDeclarator envVars FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator arguments ConstructorDeclaration LinuxProcess FormalParameter ReferenceType LinuxSystem system FormalParameter BasicType int pid IOException StatementExpression SuperConstructorInvocation MemberReference system StatementExpression Assignment This MemberReference pid MemberReference pid = LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator r ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType FileReader MethodInvocation Literal ""status"" getFile TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation r readLine = Literal null BlockStatement StatementExpression Assignment MemberReference line MethodInvocation line MemberReference Locale ENGLISH toLowerCase = IfStatement MethodInvocation line Literal ""ppid:"" startsWith BlockStatement StatementExpression Assignment MemberReference ppid MethodInvocation Integer MethodInvocation line MethodInvocation trim Literal 5 substring parseInt = BreakStatement End End StatementExpression MethodInvocation r close IfStatement BinaryOperation == MemberReference ppid Literal - 1 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal ""Failed to parse PPID from /proc/"" MemberReference pid Literal ""/status"" End MethodDeclaration Modifier public BasicType int getPid ReturnStatement MemberReference pid MethodDeclaration Modifier public ReferenceType LinuxProcess getParent ReturnStatement MethodInvocation system MemberReference ppid get MethodDeclaration Modifier public synchronized ReferenceType List TypeArgument ReferenceType String getArguments IfStatement BinaryOperation != MemberReference arguments Literal null ReturnStatement MemberReference arguments End StatementExpression Assignment MemberReference arguments ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = TryStatement LocalVariableDeclaration BasicType byte VariableDeclarator cmdline MethodInvocation FileUtils MethodInvocation Literal ""cmdline"" getFile readFileToByteArray LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cmdline length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator b MemberReference ArraySelector MemberReference i cmdline IfStatement BinaryOperation == MemberReference b Literal 0 BlockStatement StatementExpression MethodInvocation arguments ClassCreator ReferenceType String MemberReference cmdline MemberReference pos BinaryOperation - MemberReference i MemberReference pos add StatementExpression Assignment MemberReference pos BinaryOperation + MemberReference i Literal 1 = End End CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference arguments MethodInvocation Collections MemberReference arguments unmodifiableList = ReturnStatement MemberReference arguments MethodDeclaration Modifier public synchronized ReferenceType EnvVars getEnvVars IfStatement BinaryOperation != MemberReference envVars Literal null ReturnStatement MemberReference envVars End StatementExpression Assignment MemberReference envVars ClassCreator ReferenceType EnvVars = TryStatement LocalVariableDeclaration BasicType byte VariableDeclarator environ MethodInvocation FileUtils MethodInvocation Literal ""environ"" getFile readFileToByteArray LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference environ length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator b MemberReference ArraySelector MemberReference i environ IfStatement BinaryOperation == MemberReference b Literal 0 BlockStatement StatementExpression MethodInvocation envVars ClassCreator ReferenceType String MemberReference environ MemberReference pos BinaryOperation - MemberReference i MemberReference pos addLine StatementExpression Assignment MemberReference pos BinaryOperation + MemberReference i Literal 1 = End End CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference envVars ReferenceType Unix ReferenceType UnixProcess TypeArgument ReferenceType LinuxProcess ReferenceType Unix TypeArgument ReferenceType Linux ReferenceType LinuxSystem ClassDeclaration Modifier private final static /**
     * Implementation for Solaris that uses <tt>/proc</tt>.
     *
     * Amazingly, this single code works for both 32bit and 64bit Solaris, despite the fact
     * that does a lot of pointer manipulation and what not.
     */ Solaris MethodDeclaration Modifier protected ReferenceType SolarisSystem createSystem ReturnStatement ClassCreator ReferenceType SolarisSystem ClassDeclaration Modifier static SolarisSystem MethodDeclaration Modifier protected ReferenceType SolarisProcess createProcess FormalParameter BasicType int pid IOException ReturnStatement ClassCreator ReferenceType SolarisProcess This MemberReference pid ReferenceType Unix ReferenceType ProcfsUnixSystem TypeArgument ReferenceType SolarisProcess ClassDeclaration Modifier static SolarisProcess FieldDeclaration Modifier private final BasicType int VariableDeclarator pid FieldDeclaration Modifier private final BasicType int VariableDeclarator ppid FieldDeclaration /**
             * Address of the environment vector. Even on 64bit Solaris this is still 32bit pointer.
             */ Modifier private final BasicType int VariableDeclarator envp FieldDeclaration /**
             * Similarly, address of the arguments vector.
             */ Modifier private final BasicType int VariableDeclarator argp FieldDeclaration Modifier private final BasicType int VariableDeclarator argc FieldDeclaration Modifier private ReferenceType EnvVars VariableDeclarator envVars FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator arguments ConstructorDeclaration SolarisProcess FormalParameter ReferenceType SolarisSystem system FormalParameter BasicType int pid IOException StatementExpression SuperConstructorInvocation MemberReference system StatementExpression Assignment This MemberReference pid MemberReference pid = LocalVariableDeclaration ReferenceType RandomAccessFile VariableDeclarator psinfo ClassCreator ReferenceType RandomAccessFile MethodInvocation Literal ""psinfo"" getFile Literal ""r"" TryStatement StatementExpression MethodInvocation psinfo Literal 8 seek IfStatement BinaryOperation != MethodInvocation MethodInvocation psinfo readInt adjust MemberReference pid ThrowStatement ClassCreator ReferenceType IOException Literal ""psinfo PID mismatch"" End StatementExpression Assignment MemberReference ppid MethodInvocation MethodInvocation psinfo readInt adjust = StatementExpression MethodInvocation psinfo Literal 188 seek StatementExpression Assignment MemberReference argc MethodInvocation MethodInvocation psinfo readInt adjust = StatementExpression Assignment MemberReference argp MethodInvocation MethodInvocation psinfo readInt adjust = StatementExpression Assignment MemberReference envp MethodInvocation MethodInvocation psinfo readInt adjust = StatementExpression MethodInvocation psinfo close IfStatement BinaryOperation == MemberReference ppid Literal - 1 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + Literal ""Failed to parse PPID from /proc/"" MemberReference pid Literal ""/status"" End MethodDeclaration /**
             * {@link DataInputStream} reads a value in big-endian, so
             * convert it to the correct value on little-endian systems.
             */ Modifier private BasicType int adjust FormalParameter BasicType int i IfStatement MemberReference IS_LITTLE_ENDIAN ReturnStatement BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation << MemberReference i Literal 24 BinaryOperation & BinaryOperation << MemberReference i Literal 8 Literal 0x00FF0000 BinaryOperation & BinaryOperation >> MemberReference i Literal 8 Literal 0x0000FF00 BinaryOperation >>> MemberReference i Literal 24 ReturnStatement MemberReference i End MethodDeclaration Modifier public BasicType int getPid ReturnStatement MemberReference pid MethodDeclaration Modifier public ReferenceType SolarisProcess getParent ReturnStatement MethodInvocation system MemberReference ppid get MethodDeclaration Modifier public synchronized ReferenceType List TypeArgument ReferenceType String getArguments IfStatement BinaryOperation != MemberReference arguments Literal null ReturnStatement MemberReference arguments End StatementExpression Assignment MemberReference arguments ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MemberReference argc = TryStatement LocalVariableDeclaration ReferenceType RandomAccessFile VariableDeclarator as ClassCreator ReferenceType RandomAccessFile MethodInvocation Literal ""as"" getFile Literal ""r"" IfStatement MethodInvocation LOGGER MemberReference FINER isLoggable StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""Reading "" MethodInvocation Literal ""as"" getFile finer End TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator n Literal 0 BinaryOperation < MemberReference n MemberReference argc MemberReference ++ n BlockStatement StatementExpression MethodInvocation as MethodInvocation BinaryOperation + MemberReference argp BinaryOperation * MemberReference n Literal 4 to64 seek LocalVariableDeclaration BasicType int VariableDeclarator p MethodInvocation MethodInvocation as readInt adjust StatementExpression MethodInvocation arguments MethodInvocation MemberReference as MemberReference p BinaryOperation + BinaryOperation + Literal ""argv["" MemberReference n Literal ""]"" readLine add End StatementExpression MethodInvocation as close CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference arguments MethodInvocation Collections MemberReference arguments unmodifiableList = ReturnStatement MemberReference arguments MethodDeclaration Modifier public synchronized ReferenceType EnvVars getEnvVars IfStatement BinaryOperation != MemberReference envVars Literal null ReturnStatement MemberReference envVars End StatementExpression Assignment MemberReference envVars ClassCreator ReferenceType EnvVars = TryStatement LocalVariableDeclaration ReferenceType RandomAccessFile VariableDeclarator as ClassCreator ReferenceType RandomAccessFile MethodInvocation Literal ""as"" getFile Literal ""r"" IfStatement MethodInvocation LOGGER MemberReference FINER isLoggable StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""Reading "" MethodInvocation Literal ""as"" getFile finer End TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator n Literal 0 MemberReference ++ n BlockStatement StatementExpression MethodInvocation as MethodInvocation BinaryOperation + MemberReference envp BinaryOperation * MemberReference n Literal 4 to64 seek LocalVariableDeclaration BasicType int VariableDeclarator p MethodInvocation MethodInvocation as readInt adjust IfStatement BinaryOperation == MemberReference p Literal 0 BreakStatement End StatementExpression MethodInvocation envVars MethodInvocation MemberReference as MemberReference p BinaryOperation + BinaryOperation + Literal ""env["" MemberReference n Literal ""]"" readLine addLine End StatementExpression MethodInvocation as close CatchClause CatchClauseParameter IOException e ReturnStatement MemberReference envVars MethodDeclaration Modifier private ReferenceType String readLine FormalParameter ReferenceType RandomAccessFile as FormalParameter BasicType int p FormalParameter ReferenceType String prefix IOException IfStatement MethodInvocation LOGGER MemberReference FINEST isLoggable StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Reading "" MemberReference prefix Literal "" at "" MemberReference p finest End StatementExpression MethodInvocation as MethodInvocation MemberReference p to64 seek LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator buf ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration BasicType int VariableDeclarator ch VariableDeclarator i Literal 0 WhileStatement BinaryOperation > Assignment MemberReference ch MethodInvocation as read = Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation == BinaryOperation % MemberReference i Literal 100 Literal 0 MethodInvocation LOGGER MemberReference FINEST isLoggable StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + MemberReference prefix Literal "" is so far "" MethodInvocation buf toString finest End StatementExpression MethodInvocation buf MemberReference ch write End LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation buf toString IfStatement MethodInvocation LOGGER MemberReference FINEST isLoggable StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + MemberReference prefix Literal "" was "" MemberReference line finest End ReturnStatement MemberReference line MethodDeclaration /**
             * int to long conversion with zero-padding.
             */ Modifier private static BasicType long to64 FormalParameter BasicType int i ReturnStatement BinaryOperation & MemberReference i Literal 0xFFFFFFFFL ReferenceType Unix ReferenceType UnixProcess TypeArgument ReferenceType SolarisProcess ReferenceType Unix TypeArgument ReferenceType Solaris ReferenceType SolarisSystem ClassDeclaration Modifier private final static /**
     * Implementation for Mac OS X based on sysctl(3).
     */ Darwin MethodDeclaration Modifier protected ReferenceType DarwinSystem createSystem ReturnStatement ClassCreator ReferenceType DarwinSystem ClassDeclaration Modifier static DarwinSystem ConstructorDeclaration DarwinSystem TryStatement LocalVariableDeclaration ReferenceType IntByReference VariableDeclarator _ ClassCreator ReferenceType IntByReference MemberReference sizeOfInt LocalVariableDeclaration ReferenceType IntByReference VariableDeclarator size ClassCreator ReferenceType IntByReference MemberReference sizeOfInt LocalVariableDeclaration ReferenceType Memory VariableDeclarator m LocalVariableDeclaration BasicType int VariableDeclarator nRetry Literal 0 WhileStatement Literal true BlockStatement IfStatement BinaryOperation != MethodInvocation LIBC MemberReference MIB_PROC_ALL Literal 3 MemberReference NULL MemberReference size MemberReference NULL MemberReference _ sysctl Literal 0 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Failed to obtain memory requirement: "" MethodInvocation LIBC MethodInvocation Native getLastError strerror End StatementExpression Assignment MemberReference m ClassCreator ReferenceType Memory MethodInvocation size getValue = IfStatement BinaryOperation != MethodInvocation LIBC MemberReference MIB_PROC_ALL Literal 3 MemberReference m MemberReference size MemberReference NULL MemberReference _ sysctl Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation Native getLastError MemberReference ENOMEM BinaryOperation < MemberReference ++ nRetry Literal 16 ContinueStatement End ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Failed to call kern.proc.all: "" MethodInvocation LIBC MethodInvocation Native getLastError strerror End BreakStatement End LocalVariableDeclaration BasicType int VariableDeclarator count BinaryOperation / MethodInvocation size getValue MemberReference sizeOf_kinfo_proc StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + Literal ""Found "" MemberReference count Literal "" processes"" fine ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator base Literal 0 BinaryOperation < MemberReference base MethodInvocation size getValue Assignment MemberReference base MemberReference sizeOf_kinfo_proc += BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pid MethodInvocation m BinaryOperation + MemberReference base Literal 24 getInt LocalVariableDeclaration BasicType int VariableDeclarator ppid MethodInvocation m BinaryOperation + MemberReference base Literal 416 getInt StatementExpression MethodInvocation processes MemberReference pid ClassCreator ReferenceType DarwinProcess This MemberReference pid MemberReference ppid put End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING Literal ""Failed to obtain process list"" MemberReference e log ReferenceType Unix ReferenceType UnixSystem TypeArgument ReferenceType DarwinProcess ClassDeclaration Modifier static DarwinProcess FieldDeclaration Modifier private final BasicType int VariableDeclarator pid FieldDeclaration Modifier private final BasicType int VariableDeclarator ppid FieldDeclaration Modifier private ReferenceType EnvVars VariableDeclarator envVars FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator arguments ConstructorDeclaration DarwinProcess FormalParameter ReferenceType DarwinSystem system FormalParameter BasicType int pid FormalParameter BasicType int ppid StatementExpression SuperConstructorInvocation MemberReference system StatementExpression Assignment This MemberReference pid MemberReference pid = StatementExpression Assignment This MemberReference ppid MemberReference ppid = MethodDeclaration Modifier public BasicType int getPid ReturnStatement MemberReference pid MethodDeclaration Modifier public ReferenceType DarwinProcess getParent ReturnStatement MethodInvocation system MemberReference ppid get MethodDeclaration Modifier public synchronized ReferenceType EnvVars getEnvVars IfStatement BinaryOperation != MemberReference envVars Literal null ReturnStatement MemberReference envVars End StatementExpression MethodInvocation parse ReturnStatement MemberReference envVars MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getArguments IfStatement BinaryOperation != MemberReference arguments Literal null ReturnStatement MemberReference arguments End StatementExpression MethodInvocation parse ReturnStatement MemberReference arguments MethodDeclaration Modifier private parse TryStatement StatementExpression Assignment MemberReference arguments ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = StatementExpression Assignment MemberReference envVars ClassCreator ReferenceType EnvVars = LocalVariableDeclaration ReferenceType IntByReference VariableDeclarator _ ClassCreator ReferenceType IntByReference LocalVariableDeclaration ReferenceType IntByReference VariableDeclarator argmaxRef ClassCreator ReferenceType IntByReference Literal 0 LocalVariableDeclaration ReferenceType IntByReference VariableDeclarator size ClassCreator ReferenceType IntByReference MemberReference sizeOfInt IfStatement BinaryOperation != MethodInvocation LIBC ArrayCreator BasicType int ArrayInitializer MemberReference CTL_KERN MemberReference KERN_ARGMAX Literal 2 MethodInvocation argmaxRef getPointer MemberReference size MemberReference NULL MemberReference _ sysctl Literal 0 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Failed to get kernl.argmax: "" MethodInvocation LIBC MethodInvocation Native getLastError strerror End LocalVariableDeclaration BasicType int VariableDeclarator argmax MethodInvocation argmaxRef getValue ClassDeclaration StringArrayMemory FieldDeclaration Modifier private BasicType long VariableDeclarator offset Literal 0 ConstructorDeclaration StringArrayMemory FormalParameter BasicType long l StatementExpression SuperConstructorInvocation MemberReference l MethodDeclaration BasicType int readInt LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation MemberReference offset getInt StatementExpression Assignment MemberReference offset MemberReference sizeOfInt += ReturnStatement MemberReference r MethodDeclaration BasicType byte peek ReturnStatement MethodInvocation MemberReference offset getByte MethodDeclaration ReferenceType String readString LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration BasicType byte VariableDeclarator ch WhileStatement BinaryOperation != Assignment MemberReference ch MethodInvocation MemberReference ++ offset getByte = Literal '\0' StatementExpression MethodInvocation baos MemberReference ch write End ReturnStatement MethodInvocation baos toString MethodDeclaration skip0 WhileStatement BinaryOperation == MethodInvocation MemberReference offset getByte Literal '\0' StatementExpression MemberReference ++ offset End ReferenceType Memory LocalVariableDeclaration ReferenceType StringArrayMemory VariableDeclarator m ClassCreator ReferenceType StringArrayMemory MemberReference argmax StatementExpression MethodInvocation size MemberReference argmax setValue IfStatement BinaryOperation != MethodInvocation LIBC ArrayCreator BasicType int ArrayInitializer MemberReference CTL_KERN MemberReference KERN_PROCARGS2 MemberReference pid Literal 3 MemberReference m MemberReference size MemberReference NULL MemberReference _ sysctl Literal 0 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Failed to obtain ken.procargs2: "" MethodInvocation LIBC MethodInvocation Native getLastError strerror End LocalVariableDeclaration BasicType int VariableDeclarator nargs MethodInvocation m readInt StatementExpression MethodInvocation m readString ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nargs MemberReference ++ i BlockStatement StatementExpression MethodInvocation m skip0 StatementExpression MethodInvocation arguments MethodInvocation m readString add End WhileStatement BinaryOperation != MethodInvocation m peek Literal 0 StatementExpression MethodInvocation envVars MethodInvocation m readString addLine End CatchClause CatchClauseParameter IOException e ReferenceType Unix ReferenceType UnixProcess TypeArgument ReferenceType DarwinProcess FieldDeclaration Modifier private final static BasicType int VariableDeclarator sizeOf_kinfo_proc Literal 492 FieldDeclaration Modifier private final static BasicType int VariableDeclarator CTL_KERN Literal 1 FieldDeclaration Modifier private final static BasicType int VariableDeclarator KERN_PROC Literal 14 FieldDeclaration Modifier private final static BasicType int VariableDeclarator KERN_PROC_ALL Literal 0 FieldDeclaration Modifier private final static BasicType int VariableDeclarator KERN_ARGMAX Literal 8 FieldDeclaration Modifier private final static BasicType int VariableDeclarator KERN_PROCARGS2 Literal 49 FieldDeclaration Modifier private final static BasicType int VariableDeclarator ENOMEM Literal 12 FieldDeclaration Modifier private final static BasicType int VariableDeclarator sizeOfInt MethodInvocation Native ClassReference BasicType int getNativeSize FieldDeclaration Modifier private static BasicType int VariableDeclarator MIB_PROC_ALL ArrayInitializer MemberReference CTL_KERN MemberReference KERN_PROC MemberReference KERN_PROC_ALL ReferenceType Unix TypeArgument ReferenceType Darwin ReferenceType DarwinSystem FieldDeclaration Modifier private final static BasicType boolean VariableDeclarator IS_LITTLE_ENDIAN Literal MethodInvocation MethodInvocation System Literal ""sun.cpu.endian"" getProperty equals ""little"" FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType ProcessTreeKiller getLogger FieldDeclaration /**
     * Flag to control this feature.
     *
     * <p>
     * This feature involves some native code, so we are allowing the user to disable this
     * in case there's a fatal problem.
     */ Modifier public static BasicType boolean VariableDeclarator enabled MethodInvocation ! Boolean BinaryOperation + ClassReference MethodInvocation getName ReferenceType ProcessTreeKiller Literal "".disable"" getBoolean",0
145,145,"CompilationUnit PackageDeclaration hudson.util Import java.util.AbstractList Import java.util.List Import java.util.logging.Handler Import java.util.logging.LogRecord ClassDeclaration Modifier public /**
 * Log {@link Handler} that stores the log records into a ring buffer.
 *
 * @author Kohsuke Kawaguchi
 */ RingBufferLogHandler FieldDeclaration Modifier private BasicType int VariableDeclarator start Literal 0 FieldDeclaration Modifier private final ReferenceType LogRecord VariableDeclarator records FieldDeclaration Modifier private volatile BasicType int VariableDeclarator size Literal 0 ConstructorDeclaration Modifier public RingBufferLogHandler StatementExpression ExplicitConstructorInvocation Literal 256 ConstructorDeclaration Modifier public RingBufferLogHandler FormalParameter BasicType int ringSize StatementExpression Assignment MemberReference records ArrayCreator ReferenceType LogRecord MemberReference ringSize = MethodDeclaration Modifier public synchronized publish FormalParameter ReferenceType LogRecord record LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference records length StatementExpression Assignment MemberReference ArraySelector BinaryOperation % BinaryOperation + MemberReference start MemberReference size MemberReference len records MemberReference record = IfStatement BinaryOperation == MemberReference size MemberReference len BlockStatement StatementExpression MemberReference ++ start BlockStatement StatementExpression MemberReference ++ size End MethodDeclaration /**
     * Returns the list view of {@link LogRecord}s in the ring buffer.
     *
     * <p>
     * New records are always placed early in the list.
     */ Modifier public ReferenceType List TypeArgument ReferenceType LogRecord getView ReturnStatement ClassCreator ReferenceType AbstractList TypeArgument ReferenceType LogRecord MethodDeclaration Modifier public ReferenceType LogRecord get FormalParameter BasicType int index SynchronizedStatement This RingBufferLogHandler ReturnStatement MemberReference ArraySelector BinaryOperation % BinaryOperation + MemberReference start BinaryOperation - MemberReference size BinaryOperation + MemberReference index Literal 1 MemberReference records length records MethodDeclaration Modifier public BasicType int size ReturnStatement MemberReference size MethodDeclaration Modifier public flush MethodDeclaration Modifier public close SecurityException ReferenceType Handler",0
447,447,,0
417,417,,0
73,73,"CompilationUnit PackageDeclaration hudson.scm Import hudson.model.AbstractBuild Import org.xml.sax.SAXException Import java.io.File Import java.io.IOException ClassDeclaration Modifier public /**
 * {@link ChangeLogParser} for CVS.
 * @author Kohsuke Kawaguchi
 */ CVSChangeLogParser MethodDeclaration Modifier public ReferenceType CVSChangeLogSet parse FormalParameter ReferenceType AbstractBuild build FormalParameter ReferenceType File changelogFile IOException SAXException ReturnStatement MethodInvocation CVSChangeLogSet MemberReference build MemberReference changelogFile parse ReferenceType ChangeLogParser",0
366,366,,1
441,441,,0
260,260,"CompilationUnit PackageDeclaration hudson.os.windows Import hudson.lifecycle.WindowsSlaveInstaller Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.TaskListener Import hudson.slaves.ComputerLauncher Import hudson.slaves.SlaveComputer Import hudson.util.Secret Import hudson.util.jna.DotNet Import hudson.remoting.Channel Import hudson.remoting.SocketInputStream Import hudson.remoting.SocketOutputStream Import hudson.remoting.Channel.Listener Import hudson.Extension Import jcifs.smb.SmbFile Import jcifs.smb.SmbException Import jcifs.smb.NtlmPasswordAuthentication Import org.apache.commons.io.IOUtils Import org.jinterop.dcom.common.JIException Import org.jinterop.dcom.common.JIDefaultAuthInfoImpl Import org.jinterop.dcom.core.JISession Import org.kohsuke.stapler.DataBoundConstructor Import org.jvnet.hudson.wmi.WMI Import org.jvnet.hudson.wmi.SWbemServices Import org.jvnet.hudson.wmi.Win32Service Import org.jvnet.hudson.wmi.Win32Service.Win32OwnProcess  Import org.dom4j.io.SAXReader Import org.dom4j.Document Import org.dom4j.DocumentException Import java.io.ByteArrayInputStream Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.io.StringReader Import java.io.PrintStream Import java.io.BufferedInputStream Import java.io.BufferedOutputStream Import java.net.UnknownHostException Import java.net.Socket Import java.util.logging.Logger Import java.util.logging.Level ClassDeclaration Modifier public /**
 * Windows slave installed/managed as a service entirely remotely
 *
 * @author Kohsuke Kawaguchi
 */ ManagedWindowsServiceLauncher FieldDeclaration /**
     * ""[DOMAIN\\]USERNAME"" to follow the Windows convention.
     */ Modifier public final ReferenceType String VariableDeclarator userName FieldDeclaration Modifier public final ReferenceType Secret VariableDeclarator password ConstructorDeclaration Modifier public Annotation DataBoundConstructor ManagedWindowsServiceLauncher FormalParameter ReferenceType String userName FormalParameter ReferenceType String password StatementExpression Assignment This MemberReference userName MemberReference userName = StatementExpression Assignment This MemberReference password MethodInvocation Secret MemberReference password fromString = MethodDeclaration Modifier private ReferenceType JIDefaultAuthInfoImpl createAuth LocalVariableDeclaration ReferenceType String VariableDeclarator tokens MethodInvocation userName Literal ""\\\\"" split IfStatement BinaryOperation == MemberReference tokens length Literal 2 ReturnStatement ClassCreator ReferenceType JIDefaultAuthInfoImpl MemberReference ArraySelector Literal 0 tokens MemberReference ArraySelector Literal 1 tokens MethodInvocation password toString End ReturnStatement ClassCreator ReferenceType JIDefaultAuthInfoImpl Literal """" MemberReference userName MethodInvocation password toString MethodDeclaration Modifier private ReferenceType NtlmPasswordAuthentication createSmbAuth LocalVariableDeclaration ReferenceType JIDefaultAuthInfoImpl VariableDeclarator auth MethodInvocation createAuth ReturnStatement ClassCreator ReferenceType NtlmPasswordAuthentication MethodInvocation auth getDomain MethodInvocation auth getUserName MethodInvocation auth getPassword MethodDeclaration Modifier public launch FormalParameter Modifier final ReferenceType SlaveComputer computer FormalParameter Modifier final ReferenceType TaskListener listener IOException InterruptedException TryStatement LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator logger MethodInvocation listener getLogger StatementExpression MethodInvocation logger MethodInvocation Messages MethodInvocation computer getName ManagedWindowsServiceLauncher_ConnectingTo println LocalVariableDeclaration ReferenceType JIDefaultAuthInfoImpl VariableDeclarator auth MethodInvocation createAuth LocalVariableDeclaration ReferenceType JISession VariableDeclarator session MethodInvocation JISession MemberReference auth createSession StatementExpression MethodInvocation session Literal 60000 setGlobalSocketTimeout LocalVariableDeclaration ReferenceType SWbemServices VariableDeclarator services MethodInvocation WMI MemberReference session MethodInvocation computer getName connect LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation computer MethodInvocation getRemoteFS getNode LocalVariableDeclaration ReferenceType SmbFile VariableDeclarator remoteRoot ClassCreator ReferenceType SmbFile BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""smb://"" MethodInvocation computer getName Literal ""/"" MethodInvocation path MethodInvocation Literal ':' Literal '$' replace Literal '\\' Literal '/' replace Literal ""/"" MethodInvocation createSmbAuth LocalVariableDeclaration ReferenceType Win32Service VariableDeclarator slaveService MethodInvocation services Literal ""hudsonslave"" getService IfStatement BinaryOperation == MemberReference slaveService Literal null BlockStatement StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_InstallingSlaveService println IfStatement MethodInvocation ! DotNet Literal 2 Literal 0 MethodInvocation computer getName MemberReference auth isInstalled BlockStatement StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_DotNetRequired println ReturnStatement End StatementExpression MethodInvocation remoteRoot mkdirs StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_CopyingSlaveExe println StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal ""/windows-service/hudson.exe"" getResource MethodInvocation openStream getClass ClassCreator MethodInvocation getOutputStream ReferenceType SmbFile MemberReference remoteRoot Literal ""hudson-slave.exe"" copyAndClose StatementExpression MethodInvocation MemberReference logger MemberReference remoteRoot copySlaveJar StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_CopyingSlaveXml println LocalVariableDeclaration ReferenceType String VariableDeclarator xml MethodInvocation WindowsSlaveInstaller Literal ""javaw.exe"" Literal ""-tcp %BASE%\\port.txt"" generateSlaveXml StatementExpression MethodInvocation ClassCreator ReferenceType ByteArrayInputStream MethodInvocation xml Literal ""UTF-8"" getBytes ClassCreator MethodInvocation getOutputStream ReferenceType SmbFile MemberReference remoteRoot Literal ""hudson-slave.xml"" copyAndClose StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_RegisteringService println LocalVariableDeclaration ReferenceType Document VariableDeclarator dom ClassCreator MethodInvocation ClassCreator ReferenceType StringReader MemberReference xml read ReferenceType SAXReader LocalVariableDeclaration ReferenceType Win32Service VariableDeclarator svc MethodInvocation services MethodInvocation ClassReference ReferenceType Win32Service cast Literal ""Win32_Service"" Get LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation svc MethodInvocation dom MethodInvocation getText Literal ""/service/id"" selectSingleNode MethodInvocation dom MethodInvocation getText Literal ""/service/name"" selectSingleNode BinaryOperation + MemberReference path Literal ""\\hudson-slave.exe"" MemberReference Win32OwnProcess Literal 0 Literal ""Manual"" Literal true Create IfStatement BinaryOperation != MemberReference r Literal 0 BlockStatement StatementExpression MethodInvocation listener BinaryOperation + Literal ""Failed to create a service: "" MethodInvocation svc MemberReference r getErrorMessage error ReturnStatement End StatementExpression Assignment MemberReference slaveService MethodInvocation services Literal ""hudsonslave"" getService = BlockStatement StatementExpression MethodInvocation MemberReference logger MemberReference remoteRoot copySlaveJar End StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_StartingService println StatementExpression MethodInvocation slaveService start StatementExpression MethodInvocation logger MethodInvocation Messages ManagedWindowsServiceLauncher_WaitingForService println LocalVariableDeclaration ReferenceType SmbFile VariableDeclarator portFile ClassCreator ReferenceType SmbFile MemberReference remoteRoot Literal ""port.txt"" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation ! portFile exists MemberReference ++ i BlockStatement IfStatement BinaryOperation >= MemberReference i Literal 30 BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages ManagedWindowsServiceLauncher_ServiceDidntRespond error ReturnStatement End StatementExpression MethodInvocation Thread Literal 1000 sleep End LocalVariableDeclaration BasicType int VariableDeclarator p MethodInvocation MemberReference portFile readSmbFile StatementExpression MethodInvocation logger MethodInvocation Messages MemberReference p ManagedWindowsServiceLauncher_ConnectingToPort println LocalVariableDeclaration Modifier final ReferenceType Socket VariableDeclarator s ClassCreator ReferenceType Socket MethodInvocation computer getName MemberReference p StatementExpression MethodInvocation computer ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType SocketInputStream MemberReference s ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType SocketOutputStream MemberReference s MethodInvocation listener getLogger ClassCreator ReferenceType Listener MethodDeclaration Modifier public onClosed FormalParameter ReferenceType Channel channel FormalParameter ReferenceType IOException cause StatementExpression MethodInvocation MemberReference computer MemberReference listener afterDisconnect setChannel CatchClause CatchClauseParameter SmbException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage error printStackTrace CatchClause CatchClauseParameter JIException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage error printStackTrace CatchClause CatchClauseParameter DocumentException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage error printStackTrace MethodDeclaration Modifier private copySlaveJar FormalParameter ReferenceType PrintStream logger FormalParameter ReferenceType SmbFile remoteRoot IOException StatementExpression MethodInvocation logger Literal ""Copying slave.jar"" println StatementExpression MethodInvocation MethodInvocation Hudson MethodInvocation Literal ""slave.jar"" getJnlpJars MethodInvocation getURL MethodInvocation openStream getInstance ClassCreator MethodInvocation getOutputStream ReferenceType SmbFile MemberReference remoteRoot Literal ""slave.jar"" copyAndClose MethodDeclaration Modifier private BasicType int readSmbFile FormalParameter ReferenceType SmbFile f IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in MethodInvocation f getInputStream = ReturnStatement MethodInvocation Integer MethodInvocation IOUtils MemberReference in toString parseInt StatementExpression MethodInvocation IOUtils MemberReference in closeQuietly MethodDeclaration Modifier public Annotation Override afterDisconnect FormalParameter ReferenceType SlaveComputer computer FormalParameter ReferenceType TaskListener listener TryStatement LocalVariableDeclaration ReferenceType JIDefaultAuthInfoImpl VariableDeclarator auth MethodInvocation createAuth LocalVariableDeclaration ReferenceType JISession VariableDeclarator session MethodInvocation JISession MemberReference auth createSession StatementExpression MethodInvocation session Literal 60000 setGlobalSocketTimeout LocalVariableDeclaration ReferenceType SWbemServices VariableDeclarator services MethodInvocation WMI MemberReference session MethodInvocation computer getName connect LocalVariableDeclaration ReferenceType Win32Service VariableDeclarator slaveService MethodInvocation services Literal ""hudsonslave"" getService IfStatement BinaryOperation != MemberReference slaveService Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages ManagedWindowsServiceLauncher_StoppingService println getLogger StatementExpression MethodInvocation slaveService StopService End CatchClause CatchClauseParameter UnknownHostException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage error printStackTrace CatchClause CatchClauseParameter JIException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage error printStackTrace MethodDeclaration Modifier private static copyAndClose FormalParameter ReferenceType InputStream in FormalParameter ReferenceType OutputStream out TryStatement StatementExpression MethodInvocation IOUtils MemberReference in MemberReference out copy CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace StatementExpression MethodInvocation IOUtils MemberReference in closeQuietly StatementExpression MethodInvocation IOUtils MemberReference out closeQuietly ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ManagedWindowsServiceLauncher_DisplayName ReferenceType Descriptor TypeArgument ReferenceType ComputerLauncher StatementExpression MethodInvocation Logger MethodInvocation MemberReference Level WARNING setLevel Literal ""org.jinterop"" getLogger ReferenceType ComputerLauncher",0
455,455,,0
116,116,"CompilationUnit PackageDeclaration hudson.scm Import hudson.ExtensionPoint Import hudson.MarkupText Import hudson.ExtensionListView Import hudson.Extension Import hudson.ExtensionList Import hudson.util.CopyOnWriteList Import hudson.scm.ChangeLogSet.Entry Import hudson.model.AbstractBuild Import hudson.model.Hudson Import java.util.logging.Logger ClassDeclaration Modifier public abstract /**
 * Performs mark up on changelog messages to be displayed.
 *
 * <p>
 * SCM changelog messages are usually plain text, but when we display that in Hudson,
 * it is often nice to be able to put mark up on the text (for example to link to
 * external issue tracking system.)
 *
 * <p>
 * Plugins that are interested in doing so may extend this class and put {@link Extension} on it.
 * When multiple annotators are registered, their results will be combined.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.70
 */ ChangeLogAnnotator MethodDeclaration /**
     * Called by Hudson to allow markups to be added to the changelog text.
     *
     * <p>
     * This method is invoked each time a page is rendered, so implementations
     * of this method should not take too long to execute. Also note that
     * this method may be invoked concurrently by multiple threads.
     *
     * <p>
     * If there's any error during the processing, it should be recorded in
     * {@link Logger} and the method should return normally.
     *
     * @param build
     *      Build that owns this changelog. From here you can access broader contextual
     *      information, like the project, or it settings. Never null.
     * @param change
     *      The changelog entry for which this method is adding markup.
     *      Never null.
     * @param text
     *      The text and markups. Implementation of this method is expected to
     *      add additional annotations into this object. If other annotators
     *      are registered, the object may already contain some markups when this
     *      method is invoked. Never null. {@link MarkupText#getText()} on this instance
     *      will return the same string as {@link Entry#getMsgEscaped()}.
     */ Modifier public abstract annotate FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Entry change FormalParameter ReferenceType MarkupText text MethodDeclaration /**
     * Registers this annotator, so that Hudson starts using this object
     * for adding markup.
     *
     * @deprecated as of 1.286
     *      Prefer automatic registration via {@link Extension}
     */ Modifier public final register StatementExpression MethodInvocation MethodInvocation This add all MethodDeclaration /**
     * Unregisters this annotator, so that Hudson stops using this object.
     */ Modifier public final BasicType boolean unregister ReturnStatement MethodInvocation MethodInvocation This remove all FieldDeclaration /**
     * All registered {@link ChangeLogAnnotator}s.
     *
     * @deprecated as of 1.286
     *      Use {@link #all()} for read access, and {@link Extension} for registration.
     */ Modifier public final static ReferenceType CopyOnWriteList TypeArgument ReferenceType ChangeLogAnnotator VariableDeclarator annotators MethodInvocation ExtensionListView ClassReference ReferenceType ChangeLogAnnotator createCopyOnWriteList MethodDeclaration /**
     * Returns all the registered {@link ChangeLogAnnotator} descriptors.
     */ Modifier public static ReferenceType ExtensionList TypeArgument ReferenceType ChangeLogAnnotator all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType ChangeLogAnnotator getExtensionList getInstance ReferenceType ExtensionPoint",1
539,539,,1
577,577,,0
471,471,,0
552,552,,1
483,483,,0
50,50,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.model.Node InterfaceDeclaration Modifier public /**
 * {@link Node}s that are not persisted as configuration by itself.
 *
 * @author Kohsuke Kawaguchi
 */ EphemeralNode MethodDeclaration /**
     * Type-safe cast.
     */ ReferenceType Node asNode",1
290,290,"CompilationUnit PackageDeclaration hudson.search Import java.util.List InterfaceDeclaration Modifier public /**
 * @author Kohsuke Kawaguchi
 */ SearchIndex MethodDeclaration find FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result MethodDeclaration /**
     *
     * This method returns the superset of {@link #find(String, List)}.
     */ suggest FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result ConstantDeclaration /**
     * Empty set.
     */ Modifier final static ReferenceType SearchIndex VariableDeclarator EMPTY ClassCreator ReferenceType SearchIndex MethodDeclaration Modifier public find FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result MethodDeclaration Modifier public suggest FormalParameter ReferenceType String token FormalParameter ReferenceType List TypeArgument ReferenceType SearchItem result",0
336,336,"CompilationUnit PackageDeclaration hudson.util Import hudson.model.Fingerprint Import hudson.model.FingerprintMap Import java.io.IOException Import java.lang.ref.SoftReference Import java.text.MessageFormat Import java.util.concurrent.ConcurrentHashMap Import java.util.concurrent.atomic.AtomicInteger ClassDeclaration Modifier public abstract /**
 * Convenient base class for implementing data storage.
 *
 * <p>
 * One typical pattern of data storage in Hudson is the one that {@link Fingerprint}
 * uses, where each data is keyed by an unique key (MD5 sum), and that key is used
 * to determine the file system location of the data.
 *
 * On memory, each data is represented by one object ({@link Fingerprint}), and
 * write access to the same data is coordinated by using synchronization.
 *
 * <p>
 * With such storage, care has to be taken to ensure that there's only one data
 * object in memory for any given key. That means load and create operation
 * needs to be synchronized. This class implements this logic in a fairly efficient
 * way, and thus intends to help plugins that want to use such data storage.
 *
 * @since 1.87
 * @author Kohsuke Kawaguchi
 * @see FingerprintMap
 */ KeyedDataStorage FieldDeclaration /**
     * The value is either {@code SoftReference<Fingerprint>} or {@link Loading}.
     *
     * If it's {@link SoftReference}, that represents the currently available value.
     * If it's {@link Loading}, then that indicates the fingerprint is being loaded.
     * The thread can wait on this object to be notified when the loading completes.
     */ Modifier private final ReferenceType ConcurrentHashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator core ClassCreator ReferenceType ConcurrentHashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object ClassDeclaration Modifier private static /**
     * Used in {@link KeyedDataStorage#core} to indicate that the loading of a fingerprint
     * is in progress, so that we can avoid creating two {@link Fingerprint}s for the same hash code,
     * but do so without having a single lock.
     */ Loading FieldDeclaration Modifier private ReferenceType T VariableDeclarator value FieldDeclaration Modifier private BasicType boolean VariableDeclarator set MethodDeclaration Modifier public synchronized set FormalParameter ReferenceType T value StatementExpression Assignment This MemberReference set Literal true = StatementExpression Assignment This MemberReference value MemberReference value = StatementExpression MethodInvocation notifyAll MethodDeclaration /**
         * Blocks until the value is {@link #set(Object)} by another thread
         * and returns the value.
         */ Modifier public synchronized ReferenceType T get TryStatement WhileStatement MemberReference ! set StatementExpression MethodInvocation wait End ReturnStatement MemberReference value CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Thread MethodInvocation interrupt currentThread ReturnStatement Literal null TypeParameter T MethodDeclaration /**
     * Atomically gets the existing data object if any, or if it doesn't exist
     * {@link #create(String,Object) create} it and return it.
     *
     * @return
     *      Never null.
     * @param createParams
     *      Additional parameters needed to create a new data object. Can be null.
     */ Modifier public ReferenceType T getOrCreate FormalParameter ReferenceType String key FormalParameter ReferenceType P createParams IOException ReturnStatement MethodInvocation MemberReference key Literal true MemberReference createParams get MethodDeclaration /**
     * Finds the data object that matches the given key if available, or null
     * if not found.
     */ Modifier public ReferenceType T get FormalParameter ReferenceType String key IOException ReturnStatement MethodInvocation MemberReference key Literal false Literal null get MethodDeclaration /**
     * Implementation of get/getOrCreate.
     */ Modifier protected ReferenceType T get FormalParameter ReferenceType String key FormalParameter BasicType boolean createIfNotExist FormalParameter ReferenceType P createParams IOException WhileStatement Literal true BlockStatement StatementExpression MethodInvocation totalQuery incrementAndGet LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation core MemberReference key get IfStatement BinaryOperation instanceof MemberReference value ReferenceType SoftReference BlockStatement LocalVariableDeclaration ReferenceType SoftReference TypeArgument ReferenceType T VariableDeclarator wfp Cast ReferenceType SoftReference TypeArgument ReferenceType T MemberReference value LocalVariableDeclaration ReferenceType T VariableDeclarator t MethodInvocation wfp get IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression MethodInvocation cacheHit incrementAndGet ReturnStatement MemberReference t End StatementExpression MethodInvocation weakRefLost incrementAndGet End IfStatement BinaryOperation instanceof MemberReference value ReferenceType Loading BlockStatement LocalVariableDeclaration ReferenceType T VariableDeclarator t Cast ReferenceType Loading TypeArgument ReferenceType T MemberReference value IfStatement BinaryOperation || BinaryOperation != MemberReference t Literal null MemberReference ! createIfNotExist ReturnStatement MemberReference t End End LocalVariableDeclaration ReferenceType Loading TypeArgument ReferenceType T VariableDeclarator l ClassCreator ReferenceType Loading TypeArgument ReferenceType T IfStatement TernaryExpression BinaryOperation == MemberReference value Literal null BinaryOperation != MethodInvocation core MemberReference key MemberReference l putIfAbsent Literal null MethodInvocation ! core MemberReference key MemberReference value MemberReference l replace BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType T VariableDeclarator t Literal null TryStatement StatementExpression Assignment MemberReference t MethodInvocation MemberReference key load = IfStatement BinaryOperation && BinaryOperation == MemberReference t Literal null MemberReference createIfNotExist BlockStatement StatementExpression Assignment MemberReference t MethodInvocation MemberReference key MemberReference createParams create = IfStatement BinaryOperation == MemberReference t Literal null ThrowStatement ClassCreator ReferenceType IllegalStateException End End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation loadFailure incrementAndGet ThrowStatement MemberReference e StatementExpression MethodInvocation l MemberReference t set IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation core MemberReference key ClassCreator ReferenceType SoftReference TypeArgument ReferenceType T MemberReference t put StatementExpression MethodInvocation core MemberReference key remove End ReturnStatement MemberReference t End MethodDeclaration /**
     * Attempts to load an existing data object from disk.
     *
     * <p>
     * {@link KeyedDataStorage} class serializes the requests so that
     * no two threads call the {@link #load(String)} method with the
     * same parameter concurrently. This ensures that there's only
     * up to one data object for any key.
     *
     * @return
     *      null if no such data exists.
     * @throws IOException
     *      if load operation fails. This exception will be
     *      propagated to the caller.
     */ Modifier protected abstract ReferenceType T load FormalParameter ReferenceType String key IOException MethodDeclaration /**
     * Creates a new data object.
     *
     * <p>
     * This method is called by {@link #getOrCreate(String,Object)}
     * if the data that matches the specified key does not exist.
     * <p>
     * Because of concurrency, another thread might call {@link #get(String)}
     * as soon as a new data object is created, so it's important that
     * this method returns a properly initialized ""valid"" object.
     *
     * @return
     *      never null. If construction fails, abort with an exception.
     * @throws IOException
     *      if the method fails to create a new data object, it can throw
     *      {@link IOException} (or any other exception) and that will be
     *      propagated to the caller.
     */ Modifier protected abstract ReferenceType T create FormalParameter ReferenceType String key FormalParameter ReferenceType P createParams IOException MethodDeclaration Modifier public resetPerformanceStats StatementExpression MethodInvocation totalQuery Literal 0 set StatementExpression MethodInvocation cacheHit Literal 0 set StatementExpression MethodInvocation weakRefLost Literal 0 set StatementExpression MethodInvocation loadFailure Literal 0 set MethodDeclaration /**
     * Gets the short summary of performance statistics.
     */ Modifier public ReferenceType String getPerformanceStats LocalVariableDeclaration BasicType int VariableDeclarator total MethodInvocation totalQuery get LocalVariableDeclaration BasicType int VariableDeclarator hit MethodInvocation cacheHit get LocalVariableDeclaration BasicType int VariableDeclarator weakRef MethodInvocation weakRefLost get LocalVariableDeclaration BasicType int VariableDeclarator failure MethodInvocation loadFailure get LocalVariableDeclaration BasicType int VariableDeclarator miss BinaryOperation - BinaryOperation - MemberReference total MemberReference hit MemberReference weakRef ReturnStatement MethodInvocation MessageFormat Literal ""total={0} hit={1}% lostRef={2}% failure={3}% miss={4}%"" MemberReference total MemberReference hit MemberReference weakRef MemberReference failure MemberReference miss format FieldDeclaration /**
     * Total number of queries into this storage.
     */ Modifier public final ReferenceType AtomicInteger VariableDeclarator totalQuery ClassCreator ReferenceType AtomicInteger FieldDeclaration /**
     * Number of cache hits (of all the total queries.)
     */ Modifier public final ReferenceType AtomicInteger VariableDeclarator cacheHit ClassCreator ReferenceType AtomicInteger FieldDeclaration /**
     * Among cache misses, number of times when we had {@link SoftReference}
     * but lost its value due to GC.
     *
     * <tt>totalQuery-cacheHit-weakRefLost</tt> means cache miss.
     */ Modifier public final ReferenceType AtomicInteger VariableDeclarator weakRefLost ClassCreator ReferenceType AtomicInteger FieldDeclaration /**
     * Number of failures in loading data.
     */ Modifier public final ReferenceType AtomicInteger VariableDeclarator loadFailure ClassCreator ReferenceType AtomicInteger TypeParameter T TypeParameter P",0
291,291,"CompilationUnit PackageDeclaration hudson.model Import hudson.tasks.test.TestResultProjectAction InterfaceDeclaration Modifier public /**
 * Object that contributes an item to the left hand side menu
 * of a {@link ModelObject}
 * (for example to {@link Project}, {@link Build}, and etc.)
 *
 * <p>
 * If an action has a view named <tt>floatingBox.jelly</tt>,
 * it will be displayed as a floating box on the top page of
 * the target {@link ModelObject}. (For example, this is how
 * the JUnit test result trend shows up in the project top page.
 * See {@link TestResultProjectAction}.
 *
 * <h2>Persistence</h2>
 * <p>
 * Actions are often persisted as a part of {@link Actionable}
 * (for example with {@link Build}) via XStream. In some other cases,
 * {@link Action}s are transient and not persisted (such as
 * when it's used with {@link Job}).
 *
 * @author Kohsuke Kawaguchi
 */ Action MethodDeclaration /**
     * Gets the file name of the icon.
     *
     * @return
     *      If just a file name (like ""abc.gif"") is returned, it will be
     *      interpreted as a file name inside <tt>/images/24x24</tt>.
     *      This is useful for using one of the stock images.
     *      <p>
     *      If an absolute file name that starts from '/' is returned (like
     *      ""/plugin/foo/abc.gif'), then it will be interpreted as a path
     *      from the context root of Hudson. This is useful to pick up
     *      image files from a plugin.
     *      <p>
     *      Finally, return null to hide it from the task list. This is normally not very useful,
     *      but this can be used for actions that only contribute <tt>floatBox.jelly</tt>
     *      and no task list item. The other case where this is useful is
     *      to avoid showing links that require a privilege when the user is anonymous.
     * @see Hudson#isAdmin()
     */ ReferenceType String getIconFileName MethodDeclaration /**
     * Gets the string to be displayed.
     *
     * The convention is to capitalize the first letter of each word,
     * such as ""Test Result"". 
     */ ReferenceType String getDisplayName MethodDeclaration /**
     * Gets the URL path name.
     *
     * <p>
     * For example, if this method returns ""xyz"", and if the parent object
     * (that this action is associated with) is bound to /foo/bar/zot,
     * then this action object will be exposed to /foo/bar/zot/xyz.
     *
     * <p>
     * This method should return a string that's unique among other {@link Action}s.
     *
     * <p>
     * The returned string can be an absolute URL, like ""http://www.sun.com/"",
     * which is useful for directly connecting to external systems.
     *
     * <p>
     * If the returned string starts with '/', like '/foo', then it's assumed to be
     * relative to the context path of the Hudson webapp. 
     *
     * @return
     *      null if this action object doesn't need to be bound to web
     *      (when you do that, be sure to also return null from {@link #getIconFileName()}.
     */ ReferenceType String getUrlName ReferenceType ModelObject",0
281,281,"CompilationUnit PackageDeclaration hudson.remoting.jnlp Import hudson.remoting.Engine Import javax.swing  Import java.awt  ClassDeclaration Modifier public /**
 * Main window for JNLP slave agent.
 * 
 * @author Kohsuke Kawaguchi
 */ MainDialog FieldDeclaration Modifier private ReferenceType MainMenu VariableDeclarator mainMenu FieldDeclaration Modifier private final ReferenceType JLabel VariableDeclarator statusLabel ConstructorDeclaration Modifier public MainDialog HeadlessException StatementExpression SuperConstructorInvocation Literal ""Hudson slave agent"" LocalVariableDeclaration ReferenceType ImageIcon VariableDeclarator background ClassCreator ReferenceType ImageIcon MethodInvocation MethodInvocation Literal ""title.png"" getResource getClass LocalVariableDeclaration ReferenceType JPanel VariableDeclarator foregroundPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout Literal 10 Literal 10 StatementExpression MethodInvocation foregroundPanel MethodInvocation BorderFactory Literal 10 Literal 10 Literal 10 Literal 10 createEmptyBorder setBorder StatementExpression MethodInvocation foregroundPanel Literal false setOpaque StatementExpression Assignment MemberReference statusLabel ClassCreator ReferenceType JLabel Literal """" MemberReference JLabel TRAILING = StatementExpression MethodInvocation foregroundPanel MemberReference statusLabel MemberReference BorderLayout CENTER add StatementExpression MethodInvocation MethodInvocation GUI MemberReference foregroundPanel MemberReference background MemberReference JLabel BOTTOM MemberReference JLabel LEADING wrapInBackgroundImage setContentPane StatementExpression MethodInvocation resetMenuBar StatementExpression MethodInvocation pack StatementExpression MethodInvocation ClassCreator ReferenceType Dimension Literal 250 Literal 150 setSize StatementExpression MethodInvocation MethodInvocation MemberReference Color WHITE setBackground getContentPane StatementExpression MethodInvocation Literal true setLocationByPlatform StatementExpression MethodInvocation MemberReference WindowConstants EXIT_ON_CLOSE setDefaultCloseOperation MethodDeclaration /**
     * Gets the main menu of this window, so that the caller can add
     * additional menu items.
     *
     * @return never null.
     */ Modifier public ReferenceType MainMenu getMainMenu ReturnStatement MemberReference mainMenu MethodDeclaration Modifier public resetMenuBar StatementExpression Assignment MemberReference mainMenu ClassCreator ReferenceType MainMenu This = IfStatement BinaryOperation > MethodInvocation mainMenu getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference mainMenu setJMenuBar StatementExpression MethodInvocation mainMenu commit BlockStatement StatementExpression MethodInvocation Literal null setJMenuBar IfStatement MethodInvocation isVisible StatementExpression MethodInvocation Literal true setVisible End End MethodDeclaration Modifier public status FormalParameter ReferenceType String msg StatementExpression MethodInvocation statusLabel MemberReference msg setText MethodDeclaration /**
     * If the current JVM runs a {@link MainDialog} as a JNLP slave agent,
     * return its reference, otherwise null.
     */ Modifier public static ReferenceType MainDialog get LocalVariableDeclaration ReferenceType Engine VariableDeclarator e MethodInvocation Engine current IfStatement BinaryOperation == MemberReference e Literal null ReturnStatement Literal null End IfStatement BinaryOperation instanceof MemberReference e listener ReferenceType GuiListener ReturnStatement Literal null End ReturnStatement Cast ReferenceType GuiListener MemberReference e listener ReferenceType JFrame",0
219,219,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.AccessDeniedException Import org.acegisecurity.Authentication ClassDeclaration Modifier public /**
 * {@link AccessDeniedException} with more information.
 * @author Kohsuke Kawaguchi
 */ AccessDeniedException2 FieldDeclaration /**
     * This object represents the user being authenticated.
     */ Modifier public final ReferenceType Authentication VariableDeclarator authentication FieldDeclaration /**
     * This object represents the permission that the user needed.
     */ Modifier public final ReferenceType Permission VariableDeclarator permission ConstructorDeclaration Modifier public AccessDeniedException2 FormalParameter ReferenceType Authentication authentication FormalParameter ReferenceType Permission permission StatementExpression ExplicitConstructorInvocation Literal null MemberReference authentication MemberReference permission ConstructorDeclaration Modifier public AccessDeniedException2 FormalParameter ReferenceType Throwable t FormalParameter ReferenceType Authentication authentication FormalParameter ReferenceType Permission permission StatementExpression SuperConstructorInvocation MethodInvocation Messages MethodInvocation authentication getName MemberReference permission name AccessDeniedException2_MissingPermission MemberReference t StatementExpression Assignment This MemberReference authentication MemberReference authentication = StatementExpression Assignment This MemberReference permission MemberReference permission = ReferenceType AccessDeniedException",0
199,199,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.io.Serializable ClassDeclaration Modifier final /**
 * {@link InputStream} that reads bits from an exported
 * {@link InputStream} on a remote machine.
 *
 * <p>
 * TODO: pre-fetch bytes in advance
 *
 * @author Kohsuke Kawaguchi
 */ ProxyInputStream FieldDeclaration Modifier private ReferenceType Channel VariableDeclarator channel FieldDeclaration Modifier private BasicType int VariableDeclarator oid ConstructorDeclaration Modifier public /**
     * Creates an already connected {@link ProxyOutputStream}.
     *
     * @param oid
     *      The object id of the exported {@link OutputStream}.
     */ ProxyInputStream FormalParameter ReferenceType Channel channel FormalParameter BasicType int oid IOException StatementExpression Assignment This MemberReference channel MemberReference channel = StatementExpression Assignment This MemberReference oid MemberReference oid = MethodDeclaration Modifier public Annotation Override BasicType int read IOException TryStatement LocalVariableDeclaration ReferenceType Buffer VariableDeclarator buf ClassCreator MethodInvocation MemberReference channel call ReferenceType Chunk MemberReference oid Literal 1 IfStatement BinaryOperation == MemberReference buf len Literal 1 ReturnStatement BinaryOperation & Cast BasicType int MemberReference buf ArraySelector Literal 0 buf Literal 0xFF ReturnStatement Literal - 1 End CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Thread MethodInvocation interrupt currentThread StatementExpression MethodInvocation close ReturnStatement Literal - 1 MethodDeclaration Modifier public Annotation Override BasicType int read FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException TryStatement LocalVariableDeclaration ReferenceType Buffer VariableDeclarator buf ClassCreator MethodInvocation MemberReference channel call ReferenceType Chunk MemberReference oid MemberReference len IfStatement BinaryOperation == MemberReference buf len Literal - 1 ReturnStatement Literal - 1 End StatementExpression MethodInvocation System MemberReference buf buf Literal 0 MemberReference b MemberReference off MemberReference buf len arraycopy ReturnStatement MemberReference buf len CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation Thread MethodInvocation interrupt currentThread StatementExpression MethodInvocation close ReturnStatement Literal - 1 MethodDeclaration Modifier public synchronized Annotation Override close IOException IfStatement BinaryOperation != MemberReference channel Literal null BlockStatement StatementExpression MethodInvocation channel ClassCreator ReferenceType EOF MemberReference oid send StatementExpression Assignment MemberReference channel Literal null = StatementExpression Assignment MemberReference oid Literal - 1 = End ClassDeclaration Modifier private final static Buffer FieldDeclaration BasicType byte VariableDeclarator buf FieldDeclaration BasicType int VariableDeclarator len ConstructorDeclaration Modifier public Buffer FormalParameter BasicType int len StatementExpression Assignment This MemberReference buf ArrayCreator BasicType byte MemberReference len = MethodDeclaration Modifier public read FormalParameter ReferenceType InputStream in IOException StatementExpression Assignment MemberReference len MethodInvocation in MemberReference buf Literal 0 MemberReference buf length read = FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable ClassDeclaration Modifier private final static /**
     * Command to fetch bytes.
     */ Chunk FieldDeclaration Modifier private final BasicType int VariableDeclarator oid FieldDeclaration Modifier private final BasicType int VariableDeclarator len ConstructorDeclaration Modifier public Chunk FormalParameter BasicType int oid FormalParameter BasicType int len StatementExpression Assignment This MemberReference oid MemberReference oid = StatementExpression Assignment This MemberReference len MemberReference len = MethodDeclaration Modifier protected ReferenceType Buffer perform FormalParameter ReferenceType Channel channel IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Cast ReferenceType InputStream MethodInvocation channel MemberReference oid getExportedObject LocalVariableDeclaration ReferenceType Buffer VariableDeclarator buf ClassCreator ReferenceType Buffer MemberReference len StatementExpression MethodInvocation buf MemberReference in read ReturnStatement MemberReference buf FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Request TypeArgument ReferenceType Buffer TypeArgument ReferenceType IOException ClassDeclaration Modifier private final static /**
     * {@link Command} for sending EOF.
     */ EOF FieldDeclaration Modifier private final BasicType int VariableDeclarator oid ConstructorDeclaration Modifier public EOF FormalParameter BasicType int oid StatementExpression Assignment This MemberReference oid MemberReference oid = MethodDeclaration Modifier protected execute FormalParameter ReferenceType Channel channel LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in Cast ReferenceType InputStream MethodInvocation channel MemberReference oid getExportedObject StatementExpression MethodInvocation channel MemberReference oid unexport TryStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + Literal ""EOF("" MemberReference oid Literal "")"" FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Command ReferenceType InputStream",0
26,26,"CompilationUnit PackageDeclaration hudson.util Import hudson.Util Import java.io.File Import java.io.FileInputStream Import java.io.FileNotFoundException Import java.io.FileOutputStream Import java.io.IOException Import java.io.InputStream Import java.io.InputStreamReader Import java.io.OutputStream Import java.io.Reader Import java.util.concurrent.ExecutorService Import java.util.concurrent.LinkedBlockingQueue Import java.util.concurrent.ThreadPoolExecutor Import java.util.concurrent.TimeUnit Import java.util.logging.Level Import java.util.logging.Logger Import java.util.zip.GZIPInputStream Import java.util.zip.GZIPOutputStream ClassDeclaration Modifier public /**
 * Represents write-once read-many file that can be optiionally compressed
 * to save disk space. This is used for console output and other bulky data.
 *
 * <p>
 * In this class, the data on the disk can be one of two states:
 * <ol>
 * <li>Uncompressed, in which case the original data is available in the specified file name.
 * <li>Compressed, in which case the gzip-compressed data is available in the specifiled file name + "".gz"" extension.
 * </ol>
 *
 * Once the file is written and completed, it can be compressed asynchronously
 * by {@link #compress()}.
 *
 * @author Kohsuke Kawaguchi
 */ CompressedFile FieldDeclaration /**
     * The name of the raw file.
     */ Modifier private final ReferenceType File VariableDeclarator file FieldDeclaration /**
     * The name of the compressed file.
     */ Modifier private final ReferenceType File VariableDeclarator gz ConstructorDeclaration Modifier public CompressedFile FormalParameter ReferenceType File file StatementExpression Assignment This MemberReference file MemberReference file = StatementExpression Assignment This MemberReference gz ClassCreator ReferenceType File MethodInvocation file getParentFile BinaryOperation + MethodInvocation file getName Literal "".gz"" = MethodDeclaration /**
     * Gets the OutputStream to write to the file.
     */ Modifier public ReferenceType OutputStream write FileNotFoundException IfStatement MethodInvocation gz exists StatementExpression MethodInvocation gz delete End ReturnStatement ClassCreator ReferenceType FileOutputStream MemberReference file MethodDeclaration /**
     * Reads the contents of a file.
     */ Modifier public ReferenceType InputStream read IOException IfStatement MethodInvocation file exists ReturnStatement ClassCreator ReferenceType FileInputStream MemberReference file End IfStatement MethodInvocation gz exists ReturnStatement ClassCreator ReferenceType GZIPInputStream ClassCreator ReferenceType FileInputStream MemberReference gz End ThrowStatement ClassCreator ReferenceType FileNotFoundException MethodInvocation file getName MethodDeclaration /**
     * Loads the file content as a string.
     */ Modifier public ReferenceType String loadAsString IOException LocalVariableDeclaration BasicType long VariableDeclarator sizeGuess IfStatement MethodInvocation file exists StatementExpression Assignment MemberReference sizeGuess MethodInvocation file length = IfStatement MethodInvocation gz exists StatementExpression Assignment MemberReference sizeGuess BinaryOperation * MethodInvocation gz length Literal 2 = ReturnStatement Literal """" End End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator str ClassCreator ReferenceType StringBuilder Cast BasicType int MemberReference sizeGuess LocalVariableDeclaration ReferenceType Reader VariableDeclarator r ClassCreator ReferenceType InputStreamReader MethodInvocation read LocalVariableDeclaration BasicType char VariableDeclarator buf ArrayCreator BasicType char Literal 8192 LocalVariableDeclaration BasicType int VariableDeclarator len WhileStatement BinaryOperation > Assignment MemberReference len MethodInvocation r MemberReference buf Literal 0 MemberReference buf length read = Literal 0 StatementExpression MethodInvocation str MemberReference buf Literal 0 MemberReference len append End StatementExpression MethodInvocation r close ReturnStatement MethodInvocation str toString MethodDeclaration /**
     * Asynchronously schedules the compression of this file.
     *
     * <p>
     * Once the file is compressed, the original will be removed and
     * the further reading will be done from the compressed stream.
     */ Modifier public compress StatementExpression MethodInvocation compressionThread ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation read LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator out ClassCreator ReferenceType GZIPOutputStream ClassCreator ReferenceType FileOutputStream MemberReference gz TryStatement StatementExpression MethodInvocation Util MemberReference in MemberReference out copyStream StatementExpression MethodInvocation in close StatementExpression MethodInvocation out close StatementExpression MethodInvocation file delete CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + Literal ""Failed to compress "" MemberReference file MemberReference e log StatementExpression MethodInvocation gz delete submit FieldDeclaration /**
     * Executor used for compression. Limited up to one thread since
     * this should be a fairly low-priority task.
     */ Modifier private final static ReferenceType ExecutorService VariableDeclarator compressionThread ClassCreator ReferenceType ThreadPoolExecutor Literal 0 Literal 1 Literal 5L MemberReference TimeUnit SECONDS ClassCreator ReferenceType LinkedBlockingQueue TypeArgument ReferenceType Runnable ClassCreator ReferenceType ExceptionCatchingThreadFactory ClassCreator ReferenceType DaemonThreadFactory FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType CompressedFile getLogger",0
302,302,"CompilationUnit PackageDeclaration hudson.security Import org.apache.commons.jelly.JellyTagException Import org.acegisecurity.AcegiSecurityException Import org.acegisecurity.ui.ExceptionTranslationFilter Import javax.servlet.Filter Import javax.servlet.FilterConfig Import javax.servlet.ServletException Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse Import javax.servlet.FilterChain Import java.io.IOException ClassDeclaration Modifier public /**
 * If {@link AcegiSecurityException} caused {@link JellyTagException},
 * rethrow it accordingly so that {@link ExceptionTranslationFilter}
 * can pick it up and initiate the redirection.
 * 
 * @author Kohsuke Kawaguchi
 */ UnwrapSecurityExceptionFilter MethodDeclaration Modifier public init FormalParameter ReferenceType FilterConfig filterConfig ServletException MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter ReferenceType FilterChain chain IOException ServletException TryStatement StatementExpression MethodInvocation chain MemberReference request MemberReference response doFilter CatchClause CatchClauseParameter ServletException e LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t MethodInvocation e getRootCause IfStatement BinaryOperation instanceof MemberReference t ReferenceType JellyTagException BlockStatement LocalVariableDeclaration ReferenceType JellyTagException VariableDeclarator jte Cast ReferenceType JellyTagException MemberReference t LocalVariableDeclaration ReferenceType Throwable VariableDeclarator cause MethodInvocation jte getCause IfStatement BinaryOperation instanceof MemberReference cause ReferenceType AcegiSecurityException BlockStatement LocalVariableDeclaration ReferenceType AcegiSecurityException VariableDeclarator se Cast ReferenceType AcegiSecurityException MemberReference cause ThrowStatement ClassCreator ReferenceType ServletException MemberReference se End End ThrowStatement MemberReference e MethodDeclaration Modifier public destroy ReferenceType Filter",1
554,554,,1
301,301,"CompilationUnit PackageDeclaration hudson.maven Import hudson.FilePath Import hudson.model.Result Import hudson.remoting.Callable Import hudson.remoting.DelegatingCallable Import java.io.IOException Import java.io.Serializable Import java.util.Calendar Import java.util.List InterfaceDeclaration Modifier public /**
 * Remoting proxy interface for {@link MavenReporter}s to talk to {@link MavenBuild}
 * during the build.
 *
 * @author Kohsuke Kawaguchi
 */ MavenBuildProxy MethodDeclaration /**
     * Executes the given {@link BuildCallable} on the master, where one
     * has access to {@link MavenBuild} and all the other Hudson objects.
     *
     * <p>
     * The parameter, return value, and exception are all transfered by using
     * Java serialization.
     *
     * @return
     *      the value that {@link BuildCallable} returned.
     * @throws T
     *      if {@link BuildCallable} throws this exception.
     * @throws IOException
     *      if the remoting failed.
     * @throws InterruptedException
     *      if the remote execution is aborted.
     * @see #executeAsync(BuildCallable)
     */ TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType V execute FormalParameter ReferenceType BuildCallable TypeArgument ReferenceType V TypeArgument ReferenceType T program T IOException InterruptedException MethodDeclaration /**
     * Executes the given {@link BuildCallable} asynchronously on the master.
     * <p>
     * This method works like {@link #execute(BuildCallable)} except that
     * the method returns immediately and doesn't wait for the completion of the program.
     * <p>
     * The completions of asynchronous executions are accounted for before
     * the build completes. If they throw exceptions, they'll be reported
     * and the build will be marked as a failure. 
     */ executeAsync FormalParameter ReferenceType BuildCallable TypeArgument ? TypeArgument ? program IOException MethodDeclaration /**
     * Root directory of the build.
     *
     * @see MavenBuild#getRootDir() 
     */ ReferenceType FilePath getRootDir MethodDeclaration /**
     * Root directory of the parent of this build.
     */ ReferenceType FilePath getProjectRootDir MethodDeclaration /**
     * Root directory of the owner {@link MavenModuleSet}
     */ ReferenceType FilePath getModuleSetRootDir MethodDeclaration /**
     * @see MavenBuild#getArtifactsDir()
     */ ReferenceType FilePath getArtifactsDir MethodDeclaration /**
     * @see MavenBuild#setResult(Result)
     */ setResult FormalParameter ReferenceType Result result MethodDeclaration /**
     * @see MavenBuild#getTimestamp()
     */ ReferenceType Calendar getTimestamp MethodDeclaration /**
     * # of milliseconds elapsed since {@link #getTimestamp()}.
     *
     * Where the clock skew is involved between the master and the Maven JVM, comparing
     * current time on Maven JVM with {@link #getTimestamp()} could be problematic,
     * but this value is more robust.
     */ BasicType long getMilliSecsSinceBuildStart MethodDeclaration /**
     * Nominates that the reporter will contribute a project action
     * for this build by using {@link MavenReporter#getProjectAction(MavenModule)}.
     *
     * <p>
     * The specified {@link MavenReporter} object will be transfered to the master
     * and will become a persisted part of the {@link MavenBuild}. 
     */ registerAsProjectAction FormalParameter ReferenceType MavenReporter reporter MethodDeclaration /**
     * Nominates that the reporter will contribute a project action
     * for this build by using {@link MavenReporter#getAggregatedProjectAction(MavenModuleSet)}.
     *
     * <p>
     * The specified {@link MavenReporter} object will be transfered to the master
     * and will become a persisted part of the {@link MavenModuleSetBuild}.
     */ registerAsAggregatedProjectAction FormalParameter ReferenceType MavenReporter reporter MethodDeclaration /**
     * Called at the end of the build to record what mojos are executed.
     */ setExecutedMojos FormalParameter ReferenceType List TypeArgument ReferenceType ExecutedMojo executedMojos InterfaceDeclaration Modifier public BuildCallable MethodDeclaration /**
         * Performs computation and returns the result,
         * or throws some exception.
         *
         * @throws InterruptedException
         *      if the processing is interrupted in the middle. Exception will be
         *      propagated to the caller.
         * @throws IOException
         *      if the program simply wishes to propage the exception, it may throw
         *      {@link IOException}.
         */ ReferenceType V call FormalParameter ReferenceType MavenBuild build T IOException InterruptedException TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType Serializable ClassDeclaration Modifier static abstract /**
     * Filter for {@link MavenBuildProxy}.
     *
     * Meant to be useful as the base class for other filters.
     */ Filter FieldDeclaration Modifier final protected ReferenceType CORE VariableDeclarator core ConstructorDeclaration Modifier protected Filter FormalParameter ReferenceType CORE core StatementExpression Assignment This MemberReference core MemberReference core = MethodDeclaration Modifier public TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType V execute FormalParameter ReferenceType BuildCallable TypeArgument ReferenceType V TypeArgument ReferenceType T program T IOException InterruptedException ReturnStatement MethodInvocation core MemberReference program execute MethodDeclaration Modifier public executeAsync FormalParameter ReferenceType BuildCallable TypeArgument ? TypeArgument ? program IOException StatementExpression MethodInvocation core MemberReference program executeAsync MethodDeclaration Modifier public ReferenceType FilePath getRootDir ReturnStatement MethodInvocation core getRootDir MethodDeclaration Modifier public ReferenceType FilePath getProjectRootDir ReturnStatement MethodInvocation core getProjectRootDir MethodDeclaration Modifier public ReferenceType FilePath getModuleSetRootDir ReturnStatement MethodInvocation core getModuleSetRootDir MethodDeclaration Modifier public ReferenceType FilePath getArtifactsDir ReturnStatement MethodInvocation core getArtifactsDir MethodDeclaration Modifier public setResult FormalParameter ReferenceType Result result StatementExpression MethodInvocation core MemberReference result setResult MethodDeclaration Modifier public ReferenceType Calendar getTimestamp ReturnStatement MethodInvocation core getTimestamp MethodDeclaration Modifier public BasicType long getMilliSecsSinceBuildStart ReturnStatement MethodInvocation core getMilliSecsSinceBuildStart MethodDeclaration Modifier public registerAsProjectAction FormalParameter ReferenceType MavenReporter reporter StatementExpression MethodInvocation core MemberReference reporter registerAsProjectAction MethodDeclaration Modifier public registerAsAggregatedProjectAction FormalParameter ReferenceType MavenReporter reporter StatementExpression MethodInvocation core MemberReference reporter registerAsAggregatedProjectAction MethodDeclaration Modifier public setExecutedMojos FormalParameter ReferenceType List TypeArgument ReferenceType ExecutedMojo executedMojos StatementExpression MethodInvocation core MemberReference executedMojos setExecutedMojos FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ClassDeclaration Modifier final protected static /**
         * {@link Callable} for invoking {@link BuildCallable} asynchronously.
         */ AsyncInvoker FieldDeclaration Modifier private final ReferenceType MavenBuildProxy VariableDeclarator proxy FieldDeclaration Modifier private final ReferenceType BuildCallable TypeArgument ? TypeArgument ? VariableDeclarator program ConstructorDeclaration Modifier public AsyncInvoker FormalParameter ReferenceType MavenBuildProxy proxy FormalParameter ReferenceType BuildCallable TypeArgument ? TypeArgument ? program StatementExpression Assignment This MemberReference proxy MemberReference proxy = StatementExpression Assignment This MemberReference program MemberReference program = MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MethodInvocation program MethodInvocation getClassLoader getClass MethodDeclaration Modifier public ReferenceType Object call Throwable StatementExpression MethodInvocation proxy MemberReference program execute ReturnStatement Literal null FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType DelegatingCallable TypeArgument ReferenceType Object TypeArgument ReferenceType Throwable TypeParameter CORE ReferenceType MavenBuildProxy ReferenceType MavenBuildProxy ReferenceType Serializable",0
147,147,"CompilationUnit PackageDeclaration hudson Import net.java.sezpoz.Indexable Import java.lang.annotation.Documented Import java.lang.annotation.ElementType   Import java.lang.annotation.Retention Import java.lang.annotation.RetentionPolicy Import java.lang.annotation.Target AnnotationDeclaration Modifier public Annotation Indexable Annotation Retention MemberReference RetentionPolicy SOURCE Annotation Target ElementArrayValue MemberReference TYPE MemberReference FIELD MemberReference METHOD Annotation Documented /**
 * Marks a field, a method, or a class for automatic discovery, so that Hudson can locate
 * implementations of {@link ExtensionPoint}s automatically.
 *
 * <p>
 * (In contrast, in earlier Hudson, the registration was manual.)
 *
 * <p>
 * In a simplest case, put this on your class, and Hudson will create an instance of it
 * and register it to the appropriate {@link ExtensionList}.
 *
 * <p>
 * If you'd like Hudson to call
 * a factory method instead of a constructor, put this annotation on your static factory
 * method. Hudson will invoke it and if the method returns a non-null instance, it'll be
 * registered. The return type of the method is used to determine which {@link ExtensionList}
 * will get the instance.
 *
 * Finally, you can put this annotation on a static field if the field contains a reference
 * to an instance that you'd like to register.
 *
 * <p>
 * This is the default way of having your implementations auto-registered to Hudson,
 * but Hudson also supports arbitrary DI containers for hosting your implementations.
 * See {@link ExtensionFinder} for more details.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.286
 * @see <a href=""https://sezpoz.dev.java.net/nonav/"">SezPoz</a>
 * @see ExtensionFinder
 * @see ExtensionList
 */ Extension AnnotationMethod ordinal BasicType double Literal 0",0
370,370,,0
160,160,"CompilationUnit PackageDeclaration hudson.matrix Import hudson.model.Build Import java.io.File Import java.io.IOException Import java.util.Map Import java.util.HashMap Import java.util.List Import java.util.Calendar Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.Stapler Import org.kohsuke.stapler.Ancestor ClassDeclaration Modifier public /**
 * Execution of {@link MatrixConfiguration}.
 *
 * @author Kohsuke Kawaguchi
 */ MatrixRun ConstructorDeclaration Modifier public MatrixRun FormalParameter ReferenceType MatrixConfiguration job IOException StatementExpression SuperConstructorInvocation MemberReference job ConstructorDeclaration Modifier public MatrixRun FormalParameter ReferenceType MatrixConfiguration job FormalParameter ReferenceType Calendar timestamp StatementExpression SuperConstructorInvocation MemberReference job MemberReference timestamp ConstructorDeclaration Modifier public MatrixRun FormalParameter ReferenceType MatrixConfiguration project FormalParameter ReferenceType File buildDir IOException StatementExpression SuperConstructorInvocation MemberReference project MemberReference buildDir MethodDeclaration Modifier public ReferenceType String getUpUrl LocalVariableDeclaration ReferenceType StaplerRequest VariableDeclarator req MethodInvocation Stapler getCurrentRequest IfStatement BinaryOperation != MemberReference req Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Ancestor VariableDeclarator ancs MethodInvocation req getAncestors ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation ancs size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation ancs MethodInvocation getObject MemberReference i get This BlockStatement IfStatement BinaryOperation instanceof MethodInvocation ancs MethodInvocation getObject BinaryOperation - MemberReference i Literal 1 get ReferenceType MatrixBuild BlockStatement ReturnStatement BinaryOperation + MethodInvocation ancs MethodInvocation getUrl BinaryOperation - MemberReference i Literal 1 get Literal '/' End End End End ReturnStatement SuperMethodInvocation getDisplayName MethodDeclaration /**
     * Gets the {@link MatrixBuild} that has the same build number.
     *
     * @return
     *      null if no such build exists, which happens when the module build
     *      is manually triggered.
     */ Modifier public ReferenceType MatrixBuild getParentBuild ReturnStatement MethodInvocation MethodInvocation getParent MethodInvocation MethodInvocation getNumber getBuildByNumber getParent MethodDeclaration Modifier public ReferenceType String getDisplayName LocalVariableDeclaration ReferenceType StaplerRequest VariableDeclarator req MethodInvocation Stapler getCurrentRequest IfStatement BinaryOperation != MemberReference req Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Ancestor VariableDeclarator ancs MethodInvocation req getAncestors ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation ancs size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation ancs MethodInvocation getObject MemberReference i get This BlockStatement IfStatement BinaryOperation instanceof MethodInvocation ancs MethodInvocation getObject BinaryOperation - MemberReference i Literal 1 get ReferenceType MatrixBuild BlockStatement ReturnStatement MethodInvocation MethodInvocation getCombination MethodInvocation MethodInvocation MethodInvocation getParent MethodInvocation getAxes getParent toCompactString getParent End End End End ReturnStatement SuperMethodInvocation getDisplayName MethodDeclaration Modifier public Annotation Override ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String getBuildVariables LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator r SuperMethodInvocation getBuildVariables StatementExpression MethodInvocation r MethodInvocation MethodInvocation getCombination getParent putAll ReturnStatement MemberReference r MethodDeclaration /**
     * If the parent {@link MatrixRun} is kept, keep this record, too.
     */ Modifier public Annotation Override ReferenceType String getWhyKeepLog LocalVariableDeclaration ReferenceType MatrixBuild VariableDeclarator pb MethodInvocation getParentBuild IfStatement BinaryOperation && BinaryOperation != MemberReference pb Literal null BinaryOperation != MethodInvocation pb getWhyKeepLog Literal null ReturnStatement MethodInvocation Messages MemberReference pb MatrixRun_KeptBecauseOfParent End ReturnStatement SuperMethodInvocation getWhyKeepLog MethodDeclaration Modifier public Annotation Override ReferenceType MatrixConfiguration getParent ReturnStatement SuperMethodInvocation getParent ReferenceType Build TypeArgument ReferenceType MatrixConfiguration TypeArgument ReferenceType MatrixRun",0
538,538,,0
150,150,"CompilationUnit PackageDeclaration hudson.model Import hudson.Proc Import hudson.util.DecodingStream Import hudson.util.DualOutputStream Import org.xmlpull.mxp1.MXParser Import org.xmlpull.v1.XmlPullParser Import java.io.File Import java.io.IOException Import java.io.PrintStream Import java.io.Reader ClassDeclaration Modifier public /**
 * {@link Run} for {@link ExternalJob}.
 * 
 * @author Kohsuke Kawaguchi
 */ ExternalRun ConstructorDeclaration /**
     * Loads a run from a log file.
     */ ExternalRun FormalParameter ReferenceType ExternalJob owner FormalParameter ReferenceType File runDir IOException StatementExpression SuperConstructorInvocation MemberReference owner MemberReference runDir ConstructorDeclaration /**
     * Creates a new run.
     */ ExternalRun FormalParameter ReferenceType ExternalJob project IOException StatementExpression SuperConstructorInvocation MemberReference project MethodDeclaration /**
     * Instead of performing a build, run the specified command,
     * record the log and its exit code, then call it a build.
     */ Modifier public run FormalParameter Modifier final ReferenceType String cmd StatementExpression MethodInvocation ClassCreator ReferenceType Runner MethodDeclaration Modifier public ReferenceType Result run FormalParameter ReferenceType BuildListener listener Exception LocalVariableDeclaration ReferenceType Proc VariableDeclarator proc ClassCreator ReferenceType Proc ReferenceType LocalProc MemberReference cmd MethodInvocation MemberReference listener getEnvironment MemberReference System in ClassCreator ReferenceType DualOutputStream MemberReference System out MethodInvocation listener getLogger ReturnStatement TernaryExpression BinaryOperation == MethodInvocation proc join Literal 0 MemberReference Result SUCCESS MemberReference Result FAILURE MethodDeclaration Modifier public post FormalParameter ReferenceType BuildListener listener MethodDeclaration Modifier public cleanUp FormalParameter ReferenceType BuildListener listener run MethodDeclaration /**
     * Instead of performing a build, accept the log and the return code
     * from a remote machine.
     *
     * <p>
     * The format of the XML is:
     *
     * <pre><xmp>
     * <run>
     *  <log>...console output...</log>
     *  <result>exit code</result>
     * </run>
     * </xmp></pre>
     */ Modifier public acceptRemoteSubmission FormalParameter Modifier final ReferenceType Reader in IOException LocalVariableDeclaration Modifier final BasicType long VariableDeclarator duration ArrayCreator BasicType long Literal 1 StatementExpression MethodInvocation ClassCreator ReferenceType Runner MethodDeclaration Modifier public ReferenceType Result run FormalParameter ReferenceType BuildListener listener Exception LocalVariableDeclaration ReferenceType PrintStream VariableDeclarator logger ClassCreator ReferenceType PrintStream ClassCreator ReferenceType DecodingStream MethodInvocation listener getLogger LocalVariableDeclaration ReferenceType XmlPullParser VariableDeclarator xpp ClassCreator ReferenceType MXParser StatementExpression MethodInvocation xpp MemberReference in setInput StatementExpression MethodInvocation xpp nextTag StatementExpression MethodInvocation xpp nextTag StatementExpression Assignment MemberReference charset MethodInvocation xpp Literal null Literal ""content-encoding"" getAttributeValue = WhileStatement BinaryOperation != MethodInvocation xpp nextToken MemberReference XmlPullParser END_TAG BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator type MethodInvocation xpp getEventType IfStatement BinaryOperation || BinaryOperation == MemberReference type MemberReference XmlPullParser TEXT BinaryOperation == MemberReference type MemberReference XmlPullParser CDSECT StatementExpression MethodInvocation logger MethodInvocation xpp getText print End End StatementExpression MethodInvocation xpp nextTag LocalVariableDeclaration ReferenceType Result VariableDeclarator r TernaryExpression BinaryOperation == MethodInvocation Integer MethodInvocation xpp nextText parseInt Literal 0 MemberReference Result SUCCESS MemberReference Result FAILURE StatementExpression MethodInvocation xpp nextTag IfStatement BinaryOperation && BinaryOperation == MethodInvocation xpp getEventType MemberReference XmlPullParser START_TAG MethodInvocation xpp MethodInvocation Literal ""duration"" equals getName BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 duration MethodInvocation Long MethodInvocation xpp nextText parseLong = End ReturnStatement MemberReference r MethodDeclaration Modifier public post FormalParameter ReferenceType BuildListener listener MethodDeclaration Modifier public cleanUp FormalParameter ReferenceType BuildListener listener run IfStatement BinaryOperation != MemberReference ArraySelector Literal 0 duration Literal 0 BlockStatement StatementExpression Assignment SuperMemberReference duration MemberReference ArraySelector Literal 0 duration = StatementExpression MethodInvocation save End ReferenceType Run TypeArgument ReferenceType ExternalJob TypeArgument ReferenceType ExternalRun",0
15,15,"CompilationUnit PackageDeclaration hudson.scm Import hudson.MarkupText Import hudson.Util Import hudson.model.AbstractBuild Import hudson.model.User Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Iterator Import java.util.List ClassDeclaration Modifier public abstract Annotation ExportedBean ElementValuePair defaultVisibility Literal 999 /**
 * Represents SCM change list.
 *
 * <p>
 * Use the ""index"" view of this object to render the changeset detail page,
 * and use the ""digest"" view of this object to render the summary page.
 * For the change list at project level, see {@link SCM}.
 *
 * <p>
 * {@link Iterator} is expected to return recent changes first.
 *
 * @author Kohsuke Kawaguchi
 */ ChangeLogSet FieldDeclaration /**
     * {@link AbstractBuild} whose change log this object represents.
     */ Modifier public final ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator build ConstructorDeclaration Modifier protected ChangeLogSet FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build StatementExpression Assignment This MemberReference build MemberReference build = MethodDeclaration /**
     * Returns true if there's no change.
     */ Modifier public abstract BasicType boolean isEmptySet MethodDeclaration /**
     * All changes in this change set. 
     */ Modifier public final Annotation Exported ReferenceType Object getItems LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T ForStatement EnhancedForControl VariableDeclaration ReferenceType T VariableDeclarator t This StatementExpression MethodInvocation r MemberReference t add End ReturnStatement MethodInvocation r toArray MethodDeclaration /**
     * Optional identification of the kind of SCM being used.
     * @return a short token, such as the SCM's main CLI executable name
     * @since 1.284
     */ Modifier public Annotation Exported ReferenceType String getKind ReturnStatement Literal null MethodDeclaration /**
     * Constant instance that represents no changes.
     */ Modifier public static ReferenceType ChangeLogSet TypeArgument ReferenceType ChangeLogSet ReferenceType Entry extends createEmpty FormalParameter ReferenceType AbstractBuild build ReturnStatement ClassCreator ReferenceType CVSChangeLogSet MemberReference build MethodInvocation TypeArgument ReferenceType CVSChangeLogSet ReferenceType CVSChangeLog Collections ClassDeclaration Modifier public static abstract Annotation ExportedBean ElementValuePair defaultVisibility Literal 999 Entry FieldDeclaration Modifier private ReferenceType ChangeLogSet VariableDeclarator parent MethodDeclaration Modifier public ReferenceType ChangeLogSet getParent ReturnStatement MemberReference parent MethodDeclaration /**
         * Should be invoked before a {@link ChangeLogSet} is exposed to public.
         */ Modifier protected setParent FormalParameter ReferenceType ChangeLogSet parent StatementExpression Assignment This MemberReference parent MemberReference parent = MethodDeclaration /**
         * Gets the ""commit message"".
         *
         * <p>
         * The exact definition depends on the individual SCM implementation.
         *
         * @return
         *      Can be empty but never null.
         */ Modifier public abstract ReferenceType String getMsg MethodDeclaration /**
         * The user who made this change.
         *
         * @return
         *      never null.
         */ Modifier public abstract ReferenceType User getAuthor MethodDeclaration /**
         * Returns a set of paths in the workspace that was
         * affected by this change.
         *
         * <p>
         * Contains string like 'foo/bar/zot'. No leading/trailing '/',
         * and separator must be normalized to '/'.
         *
         * @return never null.
         */ Modifier public abstract ReferenceType Collection TypeArgument ReferenceType String getAffectedPaths MethodDeclaration /**
         * Returns a set of paths in the workspace that was
         * affected by this change.
         * <p>
         * Noted: since this is a new interface, some of the SCMs may not have 
         * implemented this interface. The default implementation for this 
         * interface is throw UnsupportedOperationException
         * <p>
         * It doesn't throw NoSuchMethodException because I rather to throw a 
         * runtime exception
         *
         * @return AffectedFile never null.
         * @since 1.309
         */ Modifier public ReferenceType Collection TypeArgument ReferenceType AffectedFile extends getAffectedFiles LocalVariableDeclaration ReferenceType String VariableDeclarator scm Literal ""this SCM"" LocalVariableDeclaration ReferenceType ChangeLogSet VariableDeclarator parent MethodInvocation getParent IfStatement BinaryOperation != Literal null MemberReference parent BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator kind MethodInvocation parent getKind IfStatement BinaryOperation && BinaryOperation != Literal null MemberReference kind BinaryOperation > MethodInvocation kind MethodInvocation length trim Literal 0 StatementExpression Assignment MemberReference scm MemberReference kind = End End ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + Literal ""getAffectedFiles() is not implemented by "" MemberReference scm MethodDeclaration /**
         * Gets the text fully marked up by {@link ChangeLogAnnotator}.
         */ Modifier public ReferenceType String getMsgAnnotated LocalVariableDeclaration ReferenceType MarkupText VariableDeclarator markup ClassCreator ReferenceType MarkupText MethodInvocation getMsgEscaped ForStatement EnhancedForControl VariableDeclaration ReferenceType ChangeLogAnnotator VariableDeclarator a MethodInvocation ChangeLogAnnotator all StatementExpression MethodInvocation a MemberReference parent build This MemberReference markup annotate End ReturnStatement MethodInvocation markup toString MethodDeclaration /**
         * Message escaped for HTML
         */ Modifier public ReferenceType String getMsgEscaped ReturnStatement MethodInvocation Util MethodInvocation getMsg escape InterfaceDeclaration Modifier public /**
     * Represents a file change. Contains filename, edit type, etc.
     * 
     * I checked the API names against some some major SCMs and most SCMs
     * can adapt to this interface with very little changes
     *
     * @see ChangeLogSet.Entry#getAffectedFiles()
     */ AffectedFile MethodDeclaration /**
         * The path in the workspace that was affected
         * <p>
         * Contains string like 'foo/bar/zot'. No leading/trailing '/',
         * and separator must be normalized to '/'.
         *
         * @return never null.
         */ Modifier public ReferenceType String getPath MethodDeclaration /**
	     * Return whether the file is new/modified/deleted
	     *
	     * @return EditType
	     * @see EditType
	     */ Modifier public ReferenceType EditType getEditType TypeParameter T ReferenceType ChangeLogSet ReferenceType Entry ReferenceType Iterable TypeArgument ReferenceType T",1
527,527,,0
298,298,"CompilationUnit PackageDeclaration hudson.scm.browsers ClassDeclaration Modifier public final /**
 * Builds up a query string.
 *
 * @author Kohsuke Kawaguchi
*/ QueryBuilder FieldDeclaration Modifier private final ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ConstructorDeclaration Modifier public QueryBuilder FormalParameter ReferenceType String s StatementExpression MethodInvocation MemberReference s add MethodDeclaration Modifier public ReferenceType QueryBuilder add FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null ReturnStatement This End IfStatement BinaryOperation == MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal '?' append StatementExpression MethodInvocation buf Literal '&' append End StatementExpression MethodInvocation buf MemberReference s append ReturnStatement This MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation buf toString",0
502,502,,0
437,437,,0
99,99,"CompilationUnit PackageDeclaration hudson.maven Import hudson.Plugin Import hudson.model.Items ClassDeclaration Modifier public /**
 * @author huybrechts
 */ PluginImpl MethodDeclaration Modifier public Annotation Override start Exception StatementExpression SuperMethodInvocation start StatementExpression MethodInvocation Items.XSTREAM Literal ""maven2"" ClassReference ReferenceType MavenModule alias StatementExpression MethodInvocation Items.XSTREAM Literal ""dependency"" ClassReference ReferenceType ModuleDependency alias StatementExpression MethodInvocation Items.XSTREAM Literal ""maven2-module-set"" ClassReference ReferenceType MavenModule alias StatementExpression MethodInvocation Items.XSTREAM Literal ""maven2-moduleset"" ClassReference ReferenceType MavenModuleSet alias ReferenceType Plugin",1
175,175,"CompilationUnit PackageDeclaration hudson.security Import java.io.IOException Import java.util.Arrays Import java.util.Collection Import java.util.logging.Level Import java.util.logging.Logger Import javax.servlet.Filter Import javax.servlet.FilterChain Import javax.servlet.FilterConfig Import javax.servlet.ServletException Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse ClassDeclaration Modifier public /**
 * Servlet {@link Filter} that chains multiple {@link Filter}s.
 *
 * @author Kohsuke Kawaguchi
 */ ChainedServletFilter FieldDeclaration Modifier protected volatile ReferenceType Filter VariableDeclarator filters ConstructorDeclaration Modifier public ChainedServletFilter StatementExpression Assignment MemberReference filters ArrayCreator ReferenceType Filter Literal 0 = ConstructorDeclaration Modifier public ChainedServletFilter FormalParameter ReferenceType Filter filters  StatementExpression ExplicitConstructorInvocation MethodInvocation Arrays MemberReference filters asList ConstructorDeclaration Modifier public ChainedServletFilter FormalParameter ReferenceType Collection TypeArgument ReferenceType Filter extends filters StatementExpression MethodInvocation MemberReference filters setFilters MethodDeclaration Modifier public setFilters FormalParameter ReferenceType Collection TypeArgument ReferenceType Filter extends filters StatementExpression Assignment This MemberReference filters MethodInvocation filters ArrayCreator ReferenceType Filter MethodInvocation filters size toArray = MethodDeclaration Modifier public init FormalParameter ReferenceType FilterConfig filterConfig ServletException IfStatement MethodInvocation LOGGER MemberReference Level FINEST isLoggable ForStatement EnhancedForControl VariableDeclaration ReferenceType Filter VariableDeclarator f MemberReference filters StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""ChainedServletFilter contains: "" MemberReference f finest End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Filter VariableDeclarator f MemberReference filters StatementExpression MethodInvocation f MemberReference filterConfig init End MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter Modifier final ReferenceType FilterChain chain IOException ServletException StatementExpression MethodInvocation LOGGER ClassReference MethodInvocation getName ReferenceType ChainedServletFilter Literal ""doFilter"" entering StatementExpression ClassCreator MethodInvocation MemberReference request MemberReference response doFilter ReferenceType FilterChain FieldDeclaration Modifier private BasicType int VariableDeclarator position Literal 0 FieldDeclaration Modifier private final ReferenceType Filter VariableDeclarator filters This ChainedServletFilter MemberReference filters MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response IOException ServletException IfStatement BinaryOperation == MemberReference position MemberReference filters length BlockStatement StatementExpression MethodInvocation chain MemberReference request MemberReference response doFilter BlockStatement StatementExpression MemberReference ArraySelector MemberReference ++ position MethodInvocation MemberReference request MemberReference response This doFilter filters End MethodDeclaration Modifier public destroy ForStatement EnhancedForControl VariableDeclaration ReferenceType Filter VariableDeclarator f MemberReference filters StatementExpression MethodInvocation f destroy End FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType ChainedServletFilter getLogger ReferenceType Filter",1
70,70,"CompilationUnit PackageDeclaration hudson.util.jna Import hudson.Util ClassDeclaration Modifier public /**
 * Exception in the registry code.
 *
 * @author Kohsuke Kawaguchi
 */ JnaException FieldDeclaration Modifier private final BasicType int VariableDeclarator errorCode ConstructorDeclaration Modifier public JnaException FormalParameter BasicType int errorCode StatementExpression SuperConstructorInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Win32 error: "" MemberReference errorCode Literal "" - "" MethodInvocation Util MemberReference errorCode getWin32ErrorMessage StatementExpression Assignment This MemberReference errorCode MemberReference errorCode = MethodDeclaration Modifier public BasicType int getErrorCode ReturnStatement MemberReference errorCode ReferenceType RuntimeException",0
464,464,,0
482,482,,0
591,591,,1
559,559,,0
561,561,,1
514,514,,1
134,134,"CompilationUnit PackageDeclaration /**
 * Copyright (c) 2008-2009 Yahoo! Inc. 
 * All rights reserved. 
 * The copyrights to the contents of this file are licensed under the MIT License (http://www.opensource.org/licenses/mit-license.php)
 */ hudson.security.csrf Import java.security.MessageDigest Import java.security.NoSuchAlgorithmException Import java.util.logging.Level Import java.util.logging.Logger Import hudson.Extension Import hudson.model.Hudson Import hudson.model.ModelObject Import javax.servlet.ServletRequest Import javax.servlet.http.HttpServletRequest Import net.sf.json.JSONObject Import org.acegisecurity.Authentication Import org.kohsuke.stapler.StaplerRequest ClassDeclaration Modifier public /**
 * A crumb issuing algorithm based on the request principal and the remote address.
 * 
 * @author dty
 *
 */ DefaultCrumbIssuer FieldDeclaration Modifier private ReferenceType MessageDigest VariableDeclarator md ConstructorDeclaration DefaultCrumbIssuer TryStatement StatementExpression Assignment This MemberReference md MethodInvocation MessageDigest Literal ""MD5"" getInstance = CatchClause CatchClauseParameter NoSuchAlgorithmException e StatementExpression Assignment This MemberReference md Literal null = StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE Literal ""Can't find MD5"" MemberReference e log MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier protected Annotation Override ReferenceType String issueCrumb FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType String salt IfStatement BinaryOperation instanceof MemberReference request ReferenceType HttpServletRequest BlockStatement IfStatement BinaryOperation != MemberReference md Literal null BlockStatement LocalVariableDeclaration ReferenceType HttpServletRequest VariableDeclarator req Cast ReferenceType HttpServletRequest MemberReference request LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buffer ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType Authentication VariableDeclarator a MethodInvocation Hudson getAuthentication IfStatement BinaryOperation != MemberReference a Literal null BlockStatement StatementExpression MethodInvocation buffer MethodInvocation a getName append End StatementExpression MethodInvocation buffer Literal ';' append StatementExpression MethodInvocation buffer MethodInvocation req getRemoteAddr append StatementExpression MethodInvocation md MethodInvocation buffer MethodInvocation getBytes toString update LocalVariableDeclaration BasicType byte VariableDeclarator crumbBytes MethodInvocation md MethodInvocation salt getBytes digest LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator hexString ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference crumbBytes length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator hex MethodInvocation Integer BinaryOperation & Literal 0xFF MemberReference ArraySelector MemberReference i crumbBytes toHexString IfStatement BinaryOperation == MethodInvocation hex length Literal 1 BlockStatement StatementExpression MethodInvocation hexString Literal '0' append End StatementExpression MethodInvocation hexString MemberReference hex append End ReturnStatement MethodInvocation hexString toString End End ReturnStatement Literal null MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public Annotation Override BasicType boolean validateCrumb FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType String salt FormalParameter ReferenceType String crumb IfStatement BinaryOperation instanceof MemberReference request ReferenceType HttpServletRequest BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newCrumb MethodInvocation MemberReference request MemberReference salt issueCrumb IfStatement BinaryOperation && BinaryOperation != MemberReference newCrumb Literal null BinaryOperation != MemberReference crumb Literal null BlockStatement ReturnStatement MethodInvocation newCrumb MemberReference crumb equals End End ReturnStatement Literal false ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl ConstructorDeclaration Modifier public DescriptorImpl StatementExpression SuperConstructorInvocation MethodInvocation Hudson MethodInvocation getSecretKey getInstance MethodInvocation System Literal ""hudson.security.csrf.requestfield"" Literal "".crumb"" getProperty StatementExpression MethodInvocation load MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages DefaultCrumbIssuer_DisplayName MethodDeclaration Modifier public ReferenceType DefaultCrumbIssuer newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType DefaultCrumbIssuer ReferenceType CrumbIssuerDescriptor TypeArgument ReferenceType DefaultCrumbIssuer ReferenceType ModelObject FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType DefaultCrumbIssuer getLogger ReferenceType CrumbIssuer",0
380,380,,0
434,434,,0
224,224,"CompilationUnit PackageDeclaration hudson.util.jna Import com.sun.jna.Library   Import com.sun.jna.win32.W32APITypeMapper Import com.sun.jna.win32.W32APIFunctionMapper Import java.util.Map Import java.util.HashMap InterfaceDeclaration Modifier public /**
 *
 * @author TB
 */ Options ConstantDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator UNICODE_OPTIONS ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object StatementExpression MethodInvocation MemberReference OPTION_TYPE_MAPPER MemberReference W32APITypeMapper UNICODE put StatementExpression MethodInvocation MemberReference OPTION_FUNCTION_MAPPER MemberReference W32APIFunctionMapper UNICODE put",1
549,549,,1
180,180,"CompilationUnit PackageDeclaration hudson.model Import hudson.ExtensionPoint Import hudson.ExtensionList Import hudson.Extension Import hudson.ExtensionPoint.LegacyInstancesAreScopedToHudson Import hudson.triggers.SCMTrigger Import hudson.triggers.TimerTrigger Import java.util.Set Import java.io.IOException Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse ClassDeclaration Modifier public abstract Annotation LegacyInstancesAreScopedToHudson /**
 * Checks the health of a subsystem of Hudson and if there's something
 * that requires administrator's attention, notify the administrator.
 *
 * <h2>How to implement?</h2>
 * <p>
 * Plugins who wish to contribute such notifications can implement this
 * class and put to {@link Extension} to register it to Hudson.
 *
 * <p>
 * Once installed, it's the implementor's responsibility to perform
 * monitoring and activate/deactivate the monitor accordingly. Sometimes
 * this can be done by updating a flag from code (see {@link SCMTrigger}
 * for one such example), while other times it's more convenient to do
 * so by running some code periodically (for this, use {@link TimerTrigger#timer})
 *
 * <p>
 * {@link AdministrativeMonitor}s are bound to URL by {@link Hudson#getAdministrativeMonitor(String)}.
 * See {@link #getUrl()}.
 *
 * <h3>Views</h3>
 * <dl>
 * <dt>message.jelly</dt>
 * <dd>
 * If {@link #isActivated()} returns true, Hudson will use the <tt>message.jelly</tt>
 * view of this object to render the warning text. This happens in the
 * <tt>http://SERVER/hudson/manage</tt> page. This view should typically render
 * a DIV box with class='error' or class='warning' with a human-readable text
 * inside it. It often also contains a link to a page that provides more details
 * about the problem.
 * </dd>
 * </dl>
 *
 * @author Kohsuke Kawaguchi
 * @since 1.273
 * @see Hudson#administrativeMonitors
 */ AdministrativeMonitor FieldDeclaration /**
     * Human-readable ID of this monitor, which needs to be unique within the system.
     *
     * <p>
     * This ID is used to remember persisted setting for this monitor,
     * so the ID should remain consistent beyond the Hudson JVM lifespan.
     */ Modifier public final ReferenceType String VariableDeclarator id ConstructorDeclaration Modifier protected AdministrativeMonitor FormalParameter ReferenceType String id StatementExpression Assignment This MemberReference id MemberReference id = ConstructorDeclaration Modifier protected AdministrativeMonitor StatementExpression Assignment This MemberReference id This MethodInvocation getClass MethodInvocation getName = MethodDeclaration /**
     * Returns the URL of this monitor, relative to the context path, like ""administrativeMonitor/foobar"".
     */ Modifier public ReferenceType String getUrl ReturnStatement BinaryOperation + Literal ""administrativeMonitor/"" MemberReference id MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MemberReference id MethodDeclaration Modifier public final ReferenceType String getSearchUrl ReturnStatement MethodInvocation getUrl MethodDeclaration /**
     * Mark this monitor as disabled, to prevent this from showing up in the UI.
     */ Modifier public disable FormalParameter BasicType boolean value IOException LocalVariableDeclaration ReferenceType Hudson VariableDeclarator hudson MethodInvocation Hudson getInstance LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator set MemberReference hudson disabledAdministrativeMonitors IfStatement MemberReference value StatementExpression MethodInvocation set MemberReference id add StatementExpression MethodInvocation set MemberReference id remove End StatementExpression MethodInvocation hudson save MethodDeclaration /**
     * Returns true if this monitor {@link #disable(boolean) isn't disabled} earlier.
     *
     * <p>
     * This flag implements the ability for the admin to say ""no thank you"" to the monitor that
     * he wants to ignore.
     */ Modifier public BasicType boolean isEnabled ReturnStatement MethodInvocation ! Hudson MemberReference disabledAdministrativeMonitors MethodInvocation MemberReference id contains getInstance MethodDeclaration /**
     * Returns true if this monitor is activated and
     * wants to produce a warning message.
     *
     * <p>
     * This method is called from the HTML rendering thread,
     * so it should run efficiently.
     */ Modifier public abstract BasicType boolean isActivated MethodDeclaration /**
     * URL binding to disable this monitor.
     */ Modifier public doDisable FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException StatementExpression MethodInvocation Hudson MethodInvocation MemberReference Hudson ADMINISTER checkPermission getInstance StatementExpression MethodInvocation Literal true disable StatementExpression MethodInvocation rsp BinaryOperation + MethodInvocation req getContextPath Literal ""/manage"" sendRedirect2 MethodDeclaration /**
     * All registered {@link AdministrativeMonitor} instances.
     */ Modifier public static ReferenceType ExtensionList TypeArgument ReferenceType AdministrativeMonitor all ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference ReferenceType AdministrativeMonitor getExtensionList getInstance ReferenceType AbstractModelObject ReferenceType ExtensionPoint",0
500,500,,0
329,329,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.IOException Import java.net.URL ClassDeclaration Modifier final /**
 * {@link Callable} used to deliver a jar file to {@link RemoteClassLoader}.
 *
 * @author Kohsuke Kawaguchi
 */ PreloadJarTask FieldDeclaration /**
     * Jar file to be preloaded.
     */ Modifier private final ReferenceType URL VariableDeclarator jars FieldDeclaration Modifier private transient ReferenceType ClassLoader VariableDeclarator target ConstructorDeclaration PreloadJarTask FormalParameter ReferenceType URL jars FormalParameter ReferenceType ClassLoader target StatementExpression Assignment This MemberReference jars MemberReference jars = StatementExpression Assignment This MemberReference target MemberReference target = MethodDeclaration Modifier public ReferenceType ClassLoader getClassLoader ReturnStatement MemberReference target MethodDeclaration Modifier public ReferenceType Boolean call IOException LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl MethodInvocation Thread MethodInvocation getContextClassLoader currentThread IfStatement BinaryOperation instanceof MemberReference cl ReferenceType RemoteClassLoader ReturnStatement Literal false End LocalVariableDeclaration ReferenceType RemoteClassLoader VariableDeclarator rcl Cast ReferenceType RemoteClassLoader MemberReference cl LocalVariableDeclaration BasicType boolean VariableDeclarator r Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType URL VariableDeclarator jar MemberReference jars StatementExpression Assignment MemberReference r MethodInvocation rcl MemberReference jar prefetch |= End ReturnStatement MemberReference r ReferenceType DelegatingCallable TypeArgument ReferenceType Boolean TypeArgument ReferenceType IOException",0
39,39,"CompilationUnit PackageDeclaration hudson.node_monitors Import hudson.Util Import hudson.Extension Import hudson.model.Computer Import hudson.remoting.Callable Import hudson.remoting.Future Import hudson.util.TimeUnit2 Import hudson.util.IOException2 Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest Import java.io.IOException Import java.util.concurrent.ExecutionException Import java.util.concurrent.TimeUnit Import java.util.concurrent.TimeoutException Import java.util.logging.Logger Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean ClassDeclaration Modifier public /**
 * Monitors the round-trip response time to this slave.
 *
 * @author Kohsuke Kawaguchi
 */ ResponseTimeMonitor FieldDeclaration Modifier public final static Annotation Extension ReferenceType AbstractNodeMonitorDescriptor TypeArgument ReferenceType Data VariableDeclarator DESCRIPTOR ClassCreator ReferenceType AbstractNodeMonitorDescriptor TypeArgument ReferenceType Data MethodDeclaration Modifier protected ReferenceType Data monitor FormalParameter ReferenceType Computer c IOException InterruptedException LocalVariableDeclaration ReferenceType Data VariableDeclarator old MethodInvocation MemberReference c get LocalVariableDeclaration ReferenceType Data VariableDeclarator d LocalVariableDeclaration BasicType long VariableDeclarator start MethodInvocation System nanoTime LocalVariableDeclaration ReferenceType Future TypeArgument ReferenceType String VariableDeclarator f MethodInvocation c MethodInvocation ClassCreator ReferenceType NoopTask callAsync getChannel TryStatement StatementExpression MethodInvocation f MemberReference TIMEOUT MemberReference TimeUnit MILLISECONDS get LocalVariableDeclaration BasicType long VariableDeclarator end MethodInvocation System nanoTime StatementExpression Assignment MemberReference d ClassCreator ReferenceType Data MemberReference old MethodInvocation TimeUnit2.NANOSECONDS BinaryOperation - MemberReference end MemberReference start toMillis = CatchClause CatchClauseParameter ExecutionException e ThrowStatement ClassCreator ReferenceType IOException2 MethodInvocation e getCause CatchClause CatchClauseParameter TimeoutException e StatementExpression Assignment MemberReference d ClassCreator ReferenceType Data MemberReference old Literal - 1L = IfStatement BinaryOperation && MethodInvocation d hasTooManyTimeouts MethodInvocation MemberReference c markOffline StatementExpression MethodInvocation LOGGER MethodInvocation Messages MethodInvocation c getName ResponseTimeMonitor_MarkedOffline warning End ReturnStatement MemberReference d MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ResponseTimeMonitor_DisplayName MethodDeclaration Modifier public ReferenceType NodeMonitor newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType ResponseTimeMonitor ClassDeclaration Modifier public final static Annotation ExportedBean /**
     * Immutable representation of the monitoring data.
     */ Data FieldDeclaration /**
         * Record of the past 5 times. -1 if time out. Otherwise in milliseconds.
         * Old ones first.
         */ Modifier private final BasicType long VariableDeclarator past5 ConstructorDeclaration Modifier private Data FormalParameter ReferenceType Data old FormalParameter BasicType long newDataPoint IfStatement BinaryOperation == MemberReference old Literal null StatementExpression Assignment MemberReference past5 ArrayCreator BasicType long ArrayInitializer MemberReference newDataPoint = BlockStatement StatementExpression Assignment MemberReference past5 ArrayCreator BasicType long MethodInvocation Math Literal 5 BinaryOperation + MemberReference old.past5 length Literal 1 min = LocalVariableDeclaration BasicType int VariableDeclarator copyLen BinaryOperation - MemberReference past5 length Literal 1 StatementExpression MethodInvocation System MemberReference old past5 BinaryOperation - MemberReference old.past5 length MemberReference copyLen This MemberReference past5 Literal 0 MemberReference copyLen arraycopy StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference past5 length Literal 1 past5 MemberReference newDataPoint = End MethodDeclaration /**
         * Computes the recurrence of the time out
         */ Modifier private BasicType int failureCount LocalVariableDeclaration BasicType int VariableDeclarator cnt Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference past5 length Literal 1 BinaryOperation && BinaryOperation >= MemberReference i Literal 0 BinaryOperation < MemberReference ArraySelector MemberReference i past5 Literal 0 MemberReference -- i MemberReference ++ cnt Statement End ReturnStatement MemberReference cnt MethodDeclaration /**
         * Computes the average response time, by taking the time out into account.
         */ Modifier public Annotation Exported BasicType long getAverage LocalVariableDeclaration BasicType long VariableDeclarator total Literal 0 ForStatement EnhancedForControl VariableDeclaration BasicType long VariableDeclarator l MemberReference past5 BlockStatement IfStatement BinaryOperation < MemberReference l Literal 0 StatementExpression Assignment MemberReference total MemberReference TIMEOUT += StatementExpression Assignment MemberReference total MemberReference l += End End ReturnStatement BinaryOperation / MemberReference total MemberReference past5 length MethodDeclaration Modifier public BasicType boolean hasTooManyTimeouts ReturnStatement BinaryOperation >= MethodInvocation failureCount Literal 5 MethodDeclaration /**
         * HTML rendering of the data
         */ Modifier public ReferenceType String toString LocalVariableDeclaration BasicType int VariableDeclarator fc MethodInvocation failureCount IfStatement BinaryOperation > MemberReference fc Literal 0 ReturnStatement MethodInvocation Util MethodInvocation Messages MemberReference fc ResponseTimeMonitor_TimeOut wrapToErrorSpan End ReturnStatement BinaryOperation + MethodInvocation getAverage Literal ""ms"" ClassDeclaration Modifier private static NoopTask MethodDeclaration Modifier public ReferenceType String call ReturnStatement Literal null FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Callable TypeArgument ReferenceType String TypeArgument ReferenceType RuntimeException FieldDeclaration /**
     * Time out interval in milliseconds.
     */ Modifier private final static BasicType long VariableDeclarator TIMEOUT Literal 5000 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType ResponseTimeMonitor getLogger ReferenceType NodeMonitor",1
241,241,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.maven.MavenAggregatedReport Import hudson.maven.MavenBuild Import hudson.maven.MavenEmbedder Import hudson.maven.MavenModule Import hudson.maven.MavenModuleSet Import hudson.maven.MavenModuleSetBuild Import hudson.model.Action Import hudson.model.TaskListener Import org.apache.maven.artifact.deployer.ArtifactDeploymentException Import org.apache.maven.artifact.repository.ArtifactRepository Import org.apache.maven.embedder.MavenEmbedderException Import org.codehaus.plexus.component.repository.exception.ComponentLookupException Import java.io.IOException Import java.util.List Import java.util.Map ClassDeclaration Modifier public /**
 * Redeploy action for the entire {@link MavenModuleSetBuild}.
 * 
 * @author Kohsuke Kawaguchi
 */ MavenAggregatedArtifactRecord FieldDeclaration Modifier public final ReferenceType MavenModuleSetBuild VariableDeclarator parent ConstructorDeclaration Modifier public MavenAggregatedArtifactRecord FormalParameter ReferenceType MavenModuleSetBuild build StatementExpression Assignment This MemberReference parent MemberReference build = MethodDeclaration Modifier public ReferenceType MavenModuleSetBuild getBuild ReturnStatement MemberReference parent MethodDeclaration Modifier public update FormalParameter ReferenceType Map TypeArgument ReferenceType MavenModule TypeArgument ReferenceType List TypeArgument ReferenceType MavenBuild moduleBuilds FormalParameter ReferenceType MavenBuild newBuild MethodDeclaration Modifier public ReferenceType Class TypeArgument ReferenceType MavenArtifactRecord getIndividualActionType ReturnStatement ClassReference ReferenceType MavenArtifactRecord MethodDeclaration Modifier public ReferenceType Action getProjectAction FormalParameter ReferenceType MavenModuleSet moduleSet ReturnStatement Literal null MethodDeclaration Modifier public deploy FormalParameter ReferenceType MavenEmbedder embedder FormalParameter ReferenceType ArtifactRepository deploymentRepository FormalParameter ReferenceType TaskListener listener MavenEmbedderException IOException ComponentLookupException ArtifactDeploymentException IfStatement MemberReference debug StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Redeploying artifacts of "" MemberReference parent Literal "" timestamp="" MethodInvocation parent getTimestamp println getLogger End ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenBuild VariableDeclarator build MethodInvocation parent MethodInvocation values getModuleLastBuilds BlockStatement LocalVariableDeclaration ReferenceType MavenArtifactRecord VariableDeclarator mar MethodInvocation build ClassReference ReferenceType MavenArtifactRecord getAction IfStatement BinaryOperation != MemberReference mar Literal null BlockStatement IfStatement MemberReference debug StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Deploying module: "" MemberReference build Literal "" timestamp="" MethodInvocation build getTimestamp println getLogger End StatementExpression MethodInvocation mar MemberReference embedder MemberReference deploymentRepository MemberReference listener deploy End End ReferenceType MavenAbstractArtifactRecord TypeArgument ReferenceType MavenModuleSetBuild ReferenceType MavenAggregatedReport",1
379,379,,0
171,171,"CompilationUnit PackageDeclaration hudson.security Import hudson.model.Hudson Import hudson.util.Scrambler Import org.acegisecurity.GrantedAuthorityImpl Import org.acegisecurity.context.SecurityContextHolder Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.Filter Import javax.servlet.FilterChain Import javax.servlet.FilterConfig Import javax.servlet.RequestDispatcher Import javax.servlet.ServletContext Import javax.servlet.ServletException Import javax.servlet.ServletRequest Import javax.servlet.ServletResponse Import javax.servlet.http.HttpServletRequest Import javax.servlet.http.HttpServletResponse Import java.io.IOException Import java.net.URLEncoder ClassDeclaration Modifier public /**
 * Implements the dual authentcation mechanism.
 *
 * <p>
 * Hudson supports both the HTTP basic authentication and the form-based authentication.
 * The former is for scripted clients, and the latter is for humans. Unfortunately,
 * becase the servlet spec does not allow us to programatically authenticate users,
 * we need to rely on some hack to make it work, and this is the class that implements
 * that hack.
 *
 * <p>
 * When an HTTP request arrives with an HTTP basic auth header, this filter detects
 * that and emulate an invocation of <tt>/j_security_check</tt>
 * (see <a href=""http://mail-archives.apache.org/mod_mbox/tomcat-users/200105.mbox/%3C9005C0C9C85BD31181B20060085DAC8B10C8EF@tuvi.andmevara.ee%3E"">this page</a> for the original technique.)
 *
 * <p>
 * This causes the container to perform authentication, but there's no way
 * to find out whether the user has been successfully authenticated or not.
 * So to find this out, we then redirect the user to
 * {@link Hudson#doSecured(StaplerRequest, StaplerResponse) <tt>/secured/...</tt> page}.
 *
 * <p>
 * The handler of the above URL checks if the user is authenticated,
 * and if not report an HTTP error code. Otherwise the user is
 * redirected back to the original URL, where the request is served.
 *
 * <p>
 * So all in all, the redirection works like <tt>/abc/def</tt> -> <tt>/secured/abc/def</tt>
 * -> <tt>/abc/def</tt>.
 *
 * <h2>Notes</h2>
 * <ul>
 * <li>
 * The technique of getting a request dispatcher for <tt>/j_security_check</tt> may not
 * work for all containers, but so far that seems like the only way to make this work.
 * <li>
 * This A->B->A redirect is a cyclic redirection, so we need to watch out for clients
 * that detect this as an error.
 * </ul> 
 *
 * @author Kohsuke Kawaguchi
 */ BasicAuthenticationFilter FieldDeclaration Modifier private ReferenceType ServletContext VariableDeclarator servletContext MethodDeclaration Modifier public init FormalParameter ReferenceType FilterConfig filterConfig ServletException StatementExpression Assignment MemberReference servletContext MethodInvocation filterConfig getServletContext = MethodDeclaration Modifier public doFilter FormalParameter ReferenceType ServletRequest request FormalParameter ReferenceType ServletResponse response FormalParameter ReferenceType FilterChain chain IOException ServletException LocalVariableDeclaration ReferenceType HttpServletRequest VariableDeclarator req Cast ReferenceType HttpServletRequest MemberReference request LocalVariableDeclaration ReferenceType HttpServletResponse VariableDeclarator rsp Cast ReferenceType HttpServletResponse MemberReference response LocalVariableDeclaration ReferenceType String VariableDeclarator authorization MethodInvocation req Literal ""Authorization"" getHeader LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation req getServletPath IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference authorization Literal null BinaryOperation != MethodInvocation req getUserPrincipal Literal null MethodInvocation path Literal ""/secured/"" startsWith MethodInvocation ! Hudson MethodInvocation isUseSecurity getInstance BlockStatement IfStatement BinaryOperation != MethodInvocation req getUserPrincipal Literal null BlockStatement StatementExpression MethodInvocation SecurityContextHolder MethodInvocation ClassCreator ReferenceType ContainerAuthentication MemberReference req setAuthentication getContext End TryStatement StatementExpression MethodInvocation chain MemberReference request MemberReference response doFilter StatementExpression MethodInvocation SecurityContextHolder clearContext ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator username Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator password Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator uidpassword MethodInvocation Scrambler MethodInvocation authorization Literal 6 substring descramble LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation uidpassword Literal ':' indexOf IfStatement BinaryOperation >= MemberReference idx Literal 0 BlockStatement StatementExpression Assignment MemberReference username MethodInvocation uidpassword Literal 0 MemberReference idx substring = StatementExpression Assignment MemberReference password MethodInvocation uidpassword BinaryOperation + MemberReference idx Literal 1 substring = End IfStatement BinaryOperation == MemberReference username Literal null BlockStatement StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_UNAUTHORIZED setStatus StatementExpression MethodInvocation rsp Literal ""WWW-Authenticate"" Literal ""Basic realm=\""Hudson administrator\"""" setHeader ReturnStatement End StatementExpression Assignment MemberReference path BinaryOperation + BinaryOperation + MethodInvocation req getContextPath Literal ""/secured"" MemberReference path = LocalVariableDeclaration ReferenceType String VariableDeclarator q MethodInvocation req getQueryString IfStatement BinaryOperation != MemberReference q Literal null StatementExpression Assignment MemberReference path BinaryOperation + Literal '?' MemberReference q += End StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_MOVED_TEMPORARILY setStatus StatementExpression MethodInvocation rsp Literal ""Location"" MemberReference path setHeader LocalVariableDeclaration ReferenceType RequestDispatcher VariableDeclarator d MethodInvocation servletContext BinaryOperation + BinaryOperation + BinaryOperation + Literal ""/j_security_check?j_username="" MethodInvocation URLEncoder MemberReference username Literal ""UTF-8"" encode Literal ""&j_password="" MethodInvocation URLEncoder MemberReference password Literal ""UTF-8"" encode getRequestDispatcher StatementExpression MethodInvocation d MemberReference req MemberReference rsp include MethodDeclaration Modifier public destroy FieldDeclaration Modifier private final static ReferenceType GrantedAuthorityImpl VariableDeclarator EMPTY_AUTHORITIES ArrayInitializer ClassCreator ReferenceType GrantedAuthorityImpl Literal """" ReferenceType Filter",0
153,153,"CompilationUnit PackageDeclaration hudson.lifecycle Import hudson.FilePath Import hudson.Launcher.LocalLauncher Import hudson.remoting.Callable Import hudson.remoting.Engine Import hudson.remoting.jnlp.MainDialog Import hudson.remoting.jnlp.MainMenu Import hudson.util.StreamTaskListener Import hudson.util.jna.DotNet Import org.apache.commons.io.FileUtils Import org.apache.commons.io.IOUtils Import org.apache.commons.io.output.ByteArrayOutputStream Import javax.swing  Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.KeyEvent Import java.io.File Import java.io.IOException Import java.io.PrintWriter Import java.io.StringWriter Import java.net.URL ClassDeclaration Modifier public /**
 * @author Kohsuke Kawaguchi
 */ WindowsSlaveInstaller FieldDeclaration /**
     * Root directory of this slave.
     * String, not File because the platform can be different.
     */ Modifier private final ReferenceType String VariableDeclarator rootDir FieldDeclaration Modifier private transient ReferenceType Engine VariableDeclarator engine FieldDeclaration Modifier private transient ReferenceType MainDialog VariableDeclarator dialog ConstructorDeclaration Modifier public WindowsSlaveInstaller FormalParameter ReferenceType String rootDir StatementExpression Assignment This MemberReference rootDir MemberReference rootDir = MethodDeclaration Modifier public ReferenceType Void call IfStatement BinaryOperation == MemberReference File separatorChar Literal '/' ReturnStatement Literal null End IfStatement BinaryOperation == MethodInvocation System Literal ""hudson.showWindowsServiceInstallLink"" getProperty Literal null ReturnStatement Literal null End StatementExpression Assignment MemberReference dialog MethodInvocation MainDialog get = IfStatement BinaryOperation == MemberReference dialog Literal null ReturnStatement Literal null End StatementExpression Assignment MemberReference engine MethodInvocation Engine current = StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType MainMenu VariableDeclarator mainMenu MethodInvocation dialog getMainMenu LocalVariableDeclaration ReferenceType JMenu VariableDeclarator m MethodInvocation mainMenu getFileMenu LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator menu ClassCreator ReferenceType JMenuItem MethodInvocation Messages WindowsInstallerLink_DisplayName MemberReference KeyEvent VK_W StatementExpression MethodInvocation menu This WindowsSlaveInstaller addActionListener StatementExpression MethodInvocation m MemberReference menu add StatementExpression MethodInvocation mainMenu commit invokeLater ReturnStatement Literal null MethodDeclaration /**
     * Called when the install menu is selected
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation JOptionPane MemberReference dialog BinaryOperation + BinaryOperation + Literal ""This will install a slave agent as a Windows service,\n"" Literal ""so that this slave will connect to Hudson as soon as the machine boots.\n"" Literal ""Do you want to proceed with installation?"" MethodInvocation Messages WindowsInstallerLink_DisplayName MemberReference JOptionPane OK_CANCEL_OPTION showConfirmDialog IfStatement BinaryOperation != MemberReference r MemberReference JOptionPane OK_OPTION ReturnStatement End IfStatement MethodInvocation ! DotNet Literal 2 Literal 0 isInstalled BlockStatement StatementExpression MethodInvocation JOptionPane MemberReference dialog Literal "".NET Framework 2.0 or later is required for this feature"" MethodInvocation Messages WindowsInstallerLink_DisplayName MemberReference JOptionPane ERROR_MESSAGE showMessageDialog ReturnStatement End LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator dir ClassCreator ReferenceType File MemberReference rootDir TryStatement LocalVariableDeclaration Modifier final ReferenceType File VariableDeclarator slaveExe ClassCreator ReferenceType File MemberReference dir Literal ""hudson-slave.exe"" StatementExpression MethodInvocation FileUtils MethodInvocation MethodInvocation Literal ""/windows-service/hudson.exe"" getResource getClass MemberReference slaveExe copyURLToFile LocalVariableDeclaration ReferenceType URL VariableDeclarator jnlp ClassCreator ReferenceType URL MethodInvocation engine getHudsonUrl BinaryOperation + BinaryOperation + Literal ""computer/"" MemberReference engine slaveName Literal ""/slave-agent.jnlp"" LocalVariableDeclaration ReferenceType String VariableDeclarator xml MethodInvocation BinaryOperation + MethodInvocation System Literal ""java.home"" getProperty Literal ""\\bin\\java.exe"" BinaryOperation + Literal ""-jnlpUrl "" MethodInvocation jnlp toExternalForm generateSlaveXml StatementExpression MethodInvocation FileUtils ClassCreator ReferenceType File MemberReference dir Literal ""hudson-slave.xml"" MemberReference xml Literal ""UTF-8"" writeStringToFile LocalVariableDeclaration ReferenceType URL VariableDeclarator slaveJar ClassCreator ReferenceType URL MethodInvocation engine getHudsonUrl Literal ""jnlpJars/remoting.jar"" LocalVariableDeclaration ReferenceType File VariableDeclarator dstSlaveJar ClassCreator MethodInvocation getCanonicalFile ReferenceType File MemberReference dir Literal ""slave.jar"" IfStatement MethodInvocation ! dstSlaveJar exists StatementExpression MethodInvocation FileUtils MemberReference slaveJar MemberReference dstSlaveJar copyURLToFile End LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType StreamTaskListener VariableDeclarator task ClassCreator ReferenceType StreamTaskListener MemberReference baos StatementExpression Assignment MemberReference r ClassCreator MethodInvocation launch MethodInvocation MemberReference slaveExe Literal ""install"" cmds MethodInvocation MemberReference task stdout MethodInvocation MemberReference dir pwd MethodInvocation join ReferenceType LocalLauncher MemberReference task = IfStatement BinaryOperation != MemberReference r Literal 0 BlockStatement StatementExpression MethodInvocation JOptionPane MemberReference dialog MethodInvocation baos toString Literal ""Error"" MemberReference JOptionPane ERROR_MESSAGE showMessageDialog ReturnStatement End StatementExpression Assignment MemberReference r MethodInvocation JOptionPane MemberReference dialog BinaryOperation + Literal ""Installation was successful. Would you like to\n"" Literal ""Stop this slave agent and start the newly installed service?"" MethodInvocation Messages WindowsInstallerLink_DisplayName MemberReference JOptionPane OK_CANCEL_OPTION showConfirmDialog = IfStatement BinaryOperation != MemberReference r MemberReference JOptionPane OK_OPTION ReturnStatement End StatementExpression MethodInvocation Runtime MethodInvocation ClassCreator ReferenceType Thread Literal ""service starter"" MethodDeclaration Modifier public run TryStatement LocalVariableDeclaration ReferenceType StreamTaskListener VariableDeclarator task ClassCreator ReferenceType StreamTaskListener MemberReference System out LocalVariableDeclaration BasicType int VariableDeclarator r ClassCreator MethodInvocation launch MethodInvocation MemberReference slaveExe Literal ""start"" cmds MethodInvocation MemberReference task stdout MethodInvocation MemberReference dir pwd MethodInvocation join ReferenceType LocalLauncher MemberReference task StatementExpression MethodInvocation task MethodInvocation TernaryExpression BinaryOperation == MemberReference r Literal 0 Literal ""Successfully started"" BinaryOperation + Literal ""start service failed. Exit code="" MemberReference r println getLogger CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation e printStackTrace addShutdownHook getRuntime StatementExpression MethodInvocation System Literal 0 exit CatchClause CatchClauseParameter Exception t LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter StatementExpression MethodInvocation t ClassCreator ReferenceType PrintWriter MemberReference sw printStackTrace StatementExpression MethodInvocation JOptionPane MemberReference dialog MethodInvocation sw toString Literal ""Error"" MemberReference JOptionPane ERROR_MESSAGE showMessageDialog MethodDeclaration Modifier public static ReferenceType String generateSlaveXml FormalParameter ReferenceType String java FormalParameter ReferenceType String args IOException LocalVariableDeclaration ReferenceType String VariableDeclarator xml MethodInvocation IOUtils ClassReference MethodInvocation Literal ""/windows-service/hudson-slave.xml"" getResourceAsStream ReferenceType WindowsSlaveInstaller Literal ""UTF-8"" toString StatementExpression Assignment MemberReference xml MethodInvocation xml Literal ""@JAVA@"" MemberReference java replace = StatementExpression Assignment MemberReference xml MethodInvocation xml Literal ""@ARGS@"" MemberReference args replace = ReturnStatement MemberReference xml FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Callable TypeArgument ReferenceType Void TypeArgument ReferenceType RuntimeException ReferenceType ActionListener",0
516,516,,1
420,420,,0
31,31,"CompilationUnit PackageDeclaration hudson.maven Import hudson.scm.ChangeLogSet Import hudson.scm.ChangeLogSet.Entry Import java.util.Iterator Import java.util.List Import java.util.ArrayList ClassDeclaration Modifier public /**
 * {@link ChangeLogSet} implementation used for {@link MavenBuild}.
 *
 * @author Kohsuke Kawaguchi
 */ FilteredChangeLogSet FieldDeclaration Modifier private final ReferenceType List TypeArgument ReferenceType Entry VariableDeclarator master ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Entry FieldDeclaration Modifier public final ReferenceType ChangeLogSet TypeArgument ReferenceType Entry extends VariableDeclarator core ConstructorDeclaration FilteredChangeLogSet FormalParameter ReferenceType MavenBuild build StatementExpression SuperConstructorInvocation MemberReference build LocalVariableDeclaration ReferenceType MavenModule VariableDeclarator mod MethodInvocation build getParent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MavenModule VariableDeclarator subsidiaries Literal null LocalVariableDeclaration ReferenceType MavenModuleSetBuild VariableDeclarator parentBuild MethodInvocation build getParentBuild IfStatement BinaryOperation == MemberReference parentBuild Literal null BlockStatement StatementExpression Assignment MemberReference core MethodInvocation ChangeLogSet MemberReference build createEmpty = ReturnStatement End StatementExpression Assignment MemberReference core MethodInvocation parentBuild getChangeSet = ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry VariableDeclarator e MemberReference core BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator belongs Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation e getAffectedPaths BlockStatement IfStatement MethodInvocation path MethodInvocation mod getRelativePath startsWith BlockStatement StatementExpression Assignment MemberReference belongs Literal true = BreakStatement End End IfStatement MemberReference belongs BlockStatement IfStatement BinaryOperation == MemberReference subsidiaries Literal null BlockStatement StatementExpression Assignment MemberReference subsidiaries ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MavenModule = ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator mm MethodInvocation mod MethodInvocation getModules getParent BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference mm MemberReference mod MethodInvocation mm MethodInvocation MethodInvocation mod getRelativePath startsWith getRelativePath StatementExpression MethodInvocation subsidiaries MemberReference mm add End End End StatementExpression Assignment MemberReference belongs Literal false = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation e getAffectedPaths BlockStatement IfStatement MethodInvocation ! MemberReference subsidiaries MemberReference path belongsToSubsidiary BlockStatement StatementExpression Assignment MemberReference belongs Literal true = BreakStatement End End IfStatement MemberReference belongs StatementExpression MethodInvocation master MemberReference e add End End End MethodDeclaration Modifier private BasicType boolean belongsToSubsidiary FormalParameter ReferenceType List TypeArgument ReferenceType MavenModule subsidiaries FormalParameter ReferenceType String path ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenModule VariableDeclarator sub MemberReference subsidiaries IfStatement MethodInvocation path MethodInvocation sub getRelativePath startsWith ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType Entry iterator ReturnStatement MethodInvocation master iterator MethodDeclaration Modifier public BasicType boolean isEmptySet ReturnStatement MethodInvocation master isEmpty MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Entry getLogs ReturnStatement MemberReference master ReferenceType ChangeLogSet TypeArgument ReferenceType Entry",0
326,326,"CompilationUnit PackageDeclaration hudson.util.spring Import org.springframework.beans.PropertyValue Import org.springframework.beans.factory.config.BeanDefinition Import org.springframework.beans.factory.config.BeanFactoryPostProcessor Import org.springframework.beans.factory.support.AbstractBeanDefinition Import org.springframework.context.ApplicationContext Import org.springframework.context.support.StaticApplicationContext Import org.springframework.web.context.WebApplicationContext Import org.springframework.web.context.support.StaticWebApplicationContext Import javax.servlet.ServletContext Import java.util.ArrayList Import java.util.Collection Import java.util.HashMap Import java.util.List Import java.util.Map Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration /**
 * A programmable runtime Spring configuration that allows a spring ApplicationContext
 * to be constructed at runtime
 *
 * Credit must go to Solomon Duskis and the
 * article: http://jroller.com/page/Solomon?entry=programmatic_configuration_in_spring
 *
 * @author Graeme
 * @since 0.3
 *
 */ DefaultRuntimeSpringConfiguration FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType DefaultRuntimeSpringConfiguration getLogger FieldDeclaration Modifier private ReferenceType StaticWebApplicationContext VariableDeclarator context FieldDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType BeanConfiguration VariableDeclarator beanConfigs ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType BeanConfiguration FieldDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType BeanDefinition VariableDeclarator beanDefinitions ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType BeanDefinition FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator beanNames ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ConstructorDeclaration Modifier public DefaultRuntimeSpringConfiguration StatementExpression SuperConstructorInvocation StatementExpression Assignment This MemberReference context ClassCreator ReferenceType StaticWebApplicationContext = ConstructorDeclaration Modifier public DefaultRuntimeSpringConfiguration FormalParameter ReferenceType ApplicationContext parent StatementExpression SuperConstructorInvocation StatementExpression Assignment This MemberReference context ClassCreator ReferenceType StaticWebApplicationContext = StatementExpression MethodInvocation context MemberReference parent setParent MethodDeclaration Modifier public ReferenceType BeanConfiguration addSingletonBean FormalParameter ReferenceType String name FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name MemberReference clazz StatementExpression MethodInvocation MemberReference name MemberReference bc registerBeanConfiguration ReturnStatement MemberReference bc MethodDeclaration Modifier public ReferenceType BeanConfiguration addPrototypeBean FormalParameter ReferenceType String name FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name MemberReference clazz Literal true StatementExpression MethodInvocation MemberReference name MemberReference bc registerBeanConfiguration ReturnStatement MemberReference bc MethodDeclaration Modifier public ReferenceType WebApplicationContext getApplicationContext StatementExpression MethodInvocation MemberReference context registerBeansWithContext StatementExpression MethodInvocation context refresh ReturnStatement MemberReference context MethodDeclaration Modifier public ReferenceType WebApplicationContext getUnrefreshedApplicationContext ReturnStatement MemberReference context MethodDeclaration Modifier public ReferenceType BeanConfiguration addSingletonBean FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name StatementExpression MethodInvocation MemberReference name MemberReference bc registerBeanConfiguration ReturnStatement MemberReference bc MethodDeclaration Modifier public ReferenceType BeanConfiguration createSingletonBean FormalParameter ReferenceType Class clazz ReturnStatement ClassCreator ReferenceType DefaultBeanConfiguration MemberReference clazz MethodDeclaration Modifier public ReferenceType BeanConfiguration addSingletonBean FormalParameter ReferenceType String name FormalParameter ReferenceType Class clazz FormalParameter ReferenceType Collection args LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name MemberReference clazz MemberReference args StatementExpression MethodInvocation MemberReference name MemberReference bc registerBeanConfiguration ReturnStatement MemberReference bc MethodDeclaration Modifier public ReferenceType BeanConfiguration addPrototypeBean FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name Literal true StatementExpression MethodInvocation MemberReference name MemberReference bc registerBeanConfiguration ReturnStatement MemberReference bc MethodDeclaration Modifier private registerBeanConfiguration FormalParameter ReferenceType String name FormalParameter ReferenceType BeanConfiguration bc StatementExpression MethodInvocation beanConfigs MemberReference name MemberReference bc put StatementExpression MethodInvocation beanNames MemberReference name add MethodDeclaration Modifier public ReferenceType BeanConfiguration createSingletonBean FormalParameter ReferenceType Class clazz FormalParameter ReferenceType Collection constructorArguments ReturnStatement ClassCreator ReferenceType DefaultBeanConfiguration MemberReference clazz MemberReference constructorArguments MethodDeclaration Modifier public setServletContext FormalParameter ReferenceType ServletContext context StatementExpression This MemberReference context MethodInvocation MemberReference context setServletContext MethodDeclaration Modifier public ReferenceType BeanConfiguration createPrototypeBean FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name Literal true MethodDeclaration Modifier public ReferenceType BeanConfiguration createSingletonBean FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name MethodDeclaration Modifier public addBeanConfiguration FormalParameter ReferenceType String beanName FormalParameter ReferenceType BeanConfiguration beanConfiguration StatementExpression MethodInvocation beanConfiguration MemberReference beanName setName StatementExpression MethodInvocation MemberReference beanName MemberReference beanConfiguration registerBeanConfiguration MethodDeclaration Modifier public addBeanDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType BeanDefinition bd StatementExpression MethodInvocation beanDefinitions MemberReference name MemberReference bd put StatementExpression MethodInvocation beanNames MemberReference name add MethodDeclaration Modifier public BasicType boolean containsBean FormalParameter ReferenceType String name ReturnStatement MethodInvocation beanNames MemberReference name contains MethodDeclaration Modifier public ReferenceType BeanConfiguration getBeanConfig FormalParameter ReferenceType String name ReturnStatement MethodInvocation beanConfigs MemberReference name get MethodDeclaration Modifier public ReferenceType AbstractBeanDefinition createBeanDefinition FormalParameter ReferenceType String name IfStatement MethodInvocation MemberReference name containsBean BlockStatement IfStatement MethodInvocation beanDefinitions MemberReference name containsKey ReturnStatement Cast ReferenceType AbstractBeanDefinition MethodInvocation beanDefinitions MemberReference name get IfStatement MethodInvocation beanConfigs MemberReference name containsKey ReturnStatement MethodInvocation beanConfigs MethodInvocation getBeanDefinition MemberReference name get End End End ReturnStatement Literal null MethodDeclaration Modifier public registerPostProcessor FormalParameter ReferenceType BeanFactoryPostProcessor processor StatementExpression This MemberReference context MethodInvocation MemberReference processor addBeanFactoryPostProcessor MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getBeanNames ReturnStatement MemberReference beanNames MethodDeclaration Modifier public registerBeansWithContext FormalParameter ReferenceType StaticApplicationContext applicationContext ForStatement EnhancedForControl VariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc MethodInvocation beanConfigs values BlockStatement IfStatement MethodInvocation LOGGER MemberReference Level FINER isLoggable BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + Literal ""[RuntimeConfiguration] Registering bean ["" MethodInvocation bc getName Literal ""]"" finer IfStatement MethodInvocation LOGGER MemberReference Level FINEST isLoggable BlockStatement LocalVariableDeclaration ReferenceType PropertyValue VariableDeclarator pvs MethodInvocation bc MethodInvocation getPropertyValues MethodInvocation getPropertyValues getBeanDefinition ForStatement EnhancedForControl VariableDeclaration ReferenceType PropertyValue VariableDeclarator pv MemberReference pvs BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""[RuntimeConfiguration] With property ["" MethodInvocation pv getName Literal ""] set to ["" MethodInvocation pv getValue Literal ""]"" finest End End End IfStatement MethodInvocation applicationContext MethodInvocation bc getName containsBeanDefinition StatementExpression MethodInvocation applicationContext MethodInvocation bc getName removeBeanDefinition End StatementExpression MethodInvocation applicationContext MethodInvocation bc getName MethodInvocation bc getBeanDefinition registerBeanDefinition End ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation beanDefinitions keySet BlockStatement LocalVariableDeclaration ReferenceType BeanDefinition VariableDeclarator bd MethodInvocation beanDefinitions MemberReference key get IfStatement MethodInvocation LOGGER MemberReference Level FINER isLoggable BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + Literal ""[RuntimeConfiguration] Registering bean ["" MemberReference key Literal ""]"" finer IfStatement MethodInvocation LOGGER MemberReference Level FINEST isLoggable BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType PropertyValue VariableDeclarator pv MethodInvocation bd MethodInvocation getPropertyValues getPropertyValues BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""[RuntimeConfiguration] With property ["" MethodInvocation pv getName Literal ""] set to ["" MethodInvocation pv getValue Literal ""]"" finest End End End IfStatement MethodInvocation applicationContext MemberReference key containsBean BlockStatement StatementExpression MethodInvocation applicationContext MemberReference key removeBeanDefinition End StatementExpression MethodInvocation applicationContext MemberReference key MemberReference bd registerBeanDefinition End MethodDeclaration /**
     * Adds an abstract bean and returns the BeanConfiguration instance
     *
     * @param name The name of the bean
     * @return The BeanConfiguration object
     */ Modifier public ReferenceType BeanConfiguration addAbstractBean FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType BeanConfiguration VariableDeclarator bc ClassCreator ReferenceType DefaultBeanConfiguration MemberReference name StatementExpression MethodInvocation bc Literal true setAbstract StatementExpression MethodInvocation MemberReference name MemberReference bc registerBeanConfiguration ReturnStatement MemberReference bc ReferenceType RuntimeSpringConfiguration",0
388,388,,0
72,72,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.BufferedInputStream Import java.io.BufferedOutputStream Import java.io.DataOutputStream Import java.io.IOException Import java.net.HttpURLConnection Import java.net.Socket Import java.net.URL Import java.util.concurrent.ExecutorService Import java.util.concurrent.Executors Import java.util.concurrent.ThreadFactory Import java.util.List Import java.util.Collections ClassDeclaration Modifier public /**
 * Slave agent engine that proactively connects to Hudson master.
 *
 * @author Kohsuke Kawaguchi
 */ Engine FieldDeclaration /**
     * Thread pool that sets {@link #CURRENT}.
     */ Modifier private final ReferenceType ExecutorService VariableDeclarator executor MethodInvocation Executors ClassCreator ReferenceType ThreadFactory FieldDeclaration Modifier private final ReferenceType ThreadFactory VariableDeclarator defaultFactory MethodInvocation Executors defaultThreadFactory MethodDeclaration Modifier public ReferenceType Thread newThread FormalParameter Modifier final ReferenceType Runnable r ReturnStatement MethodInvocation defaultFactory ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation CURRENT This Engine set StatementExpression MethodInvocation r run newThread newCachedThreadPool FieldDeclaration Modifier public final ReferenceType EngineListener VariableDeclarator listener FieldDeclaration /**
     * To make Hudson more graceful against user error,
     * JNLP agent can try to connect to multiple possible Hudson URLs.
     * This field specifies those candidate URLs, such as
     * ""http://foo.bar/hudson/"".
     */ Modifier private ReferenceType List TypeArgument ReferenceType URL VariableDeclarator candidateUrls FieldDeclaration /**
     * URL that points to Hudson's tcp slage agent listener, like <tt>http://myhost/hudson/</tt>
     *
     * <p>
     * This value is determined from {@link #candidateUrls} after a successful connection.
     * Note that this URL <b>DOES NOT</b> have ""tcpSlaveAgentListener"" in it.
     */ Modifier private ReferenceType URL VariableDeclarator hudsonUrl FieldDeclaration Modifier private final ReferenceType String VariableDeclarator secretKey FieldDeclaration Modifier public final ReferenceType String VariableDeclarator slaveName FieldDeclaration /**
     * See Main#tunnel in the jnlp-agent module for the details.
     */ Modifier private ReferenceType String VariableDeclarator tunnel FieldDeclaration Modifier private BasicType boolean VariableDeclarator noReconnect ConstructorDeclaration Modifier public Engine FormalParameter ReferenceType EngineListener listener FormalParameter ReferenceType List TypeArgument ReferenceType URL hudsonUrls FormalParameter ReferenceType String secretKey FormalParameter ReferenceType String slaveName StatementExpression Assignment This MemberReference listener MemberReference listener = StatementExpression Assignment This MemberReference candidateUrls MemberReference hudsonUrls = StatementExpression Assignment This MemberReference secretKey MemberReference secretKey = StatementExpression Assignment This MemberReference slaveName MemberReference slaveName = IfStatement MethodInvocation candidateUrls isEmpty ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""No URLs given"" End MethodDeclaration Modifier public ReferenceType URL getHudsonUrl ReturnStatement MemberReference hudsonUrl MethodDeclaration Modifier public setTunnel FormalParameter ReferenceType String tunnel StatementExpression Assignment This MemberReference tunnel MemberReference tunnel = MethodDeclaration Modifier public setNoReconnect FormalParameter BasicType boolean noReconnect StatementExpression Assignment This MemberReference noReconnect MemberReference noReconnect = MethodDeclaration Modifier public Annotation Override run TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement Literal true BlockStatement IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference first Literal false = BlockStatement IfStatement MemberReference noReconnect ReturnStatement End End StatementExpression MethodInvocation listener BinaryOperation + Literal ""Locating server among "" MemberReference candidateUrls status LocalVariableDeclaration ReferenceType Throwable VariableDeclarator firstError Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator port Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType URL VariableDeclarator url MemberReference candidateUrls BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation url toExternalForm IfStatement MethodInvocation ! s Literal ""/"" endsWith StatementExpression Assignment MemberReference s Literal '/' += End LocalVariableDeclaration ReferenceType URL VariableDeclarator salURL ClassCreator ReferenceType URL BinaryOperation + MemberReference s Literal ""tcpSlaveAgentListener/"" LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator con Cast ReferenceType HttpURLConnection MethodInvocation salURL openConnection TryStatement StatementExpression MethodInvocation con connect CatchClause CatchClauseParameter IOException x IfStatement BinaryOperation == MemberReference firstError Literal null BlockStatement StatementExpression Assignment MemberReference firstError ClassCreator MethodInvocation MemberReference x initCause ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Failed to connect to "" MemberReference salURL Literal "": "" MethodInvocation x getMessage = End ContinueStatement StatementExpression Assignment MemberReference port MethodInvocation con Literal ""X-Hudson-JNLP-Port"" getHeaderField = IfStatement BinaryOperation != MethodInvocation con getResponseCode Literal 200 BlockStatement IfStatement BinaryOperation == MemberReference firstError Literal null StatementExpression Assignment MemberReference firstError ClassCreator ReferenceType Exception BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference salURL Literal "" is invalid: "" MethodInvocation con getResponseCode Literal "" "" MethodInvocation con getResponseMessage = End ContinueStatement End IfStatement BinaryOperation == MemberReference port Literal null BlockStatement IfStatement BinaryOperation == MemberReference firstError Literal null StatementExpression Assignment MemberReference firstError ClassCreator ReferenceType Exception BinaryOperation + MemberReference url Literal "" is not Hudson"" = End ContinueStatement End StatementExpression Assignment MemberReference hudsonUrl MemberReference url = StatementExpression Assignment MemberReference firstError Literal null = StatementExpression Assignment MemberReference candidateUrls MethodInvocation Collections MemberReference hudsonUrl singletonList = BreakStatement End IfStatement BinaryOperation != MemberReference firstError Literal null BlockStatement StatementExpression MethodInvocation listener MemberReference firstError error ReturnStatement End LocalVariableDeclaration ReferenceType Socket VariableDeclarator s MethodInvocation MemberReference port connect StatementExpression MethodInvocation listener Literal ""Handshaking"" status LocalVariableDeclaration ReferenceType DataOutputStream VariableDeclarator dos ClassCreator ReferenceType DataOutputStream MethodInvocation s getOutputStream StatementExpression MethodInvocation dos Literal ""Protocol:JNLP-connect"" writeUTF StatementExpression MethodInvocation dos MemberReference secretKey writeUTF StatementExpression MethodInvocation dos MemberReference slaveName writeUTF LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel ClassCreator ReferenceType Channel Literal ""channel"" MemberReference executor ClassCreator ReferenceType BufferedInputStream MethodInvocation s getInputStream ClassCreator ReferenceType BufferedOutputStream MethodInvocation s getOutputStream StatementExpression MethodInvocation listener Literal ""Connected"" status StatementExpression MethodInvocation channel join StatementExpression MethodInvocation listener Literal ""Terminated"" status StatementExpression MethodInvocation listener onDisconnect IfStatement MemberReference noReconnect ReturnStatement End StatementExpression MethodInvocation waitForServerToBack End CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation listener MemberReference e error MethodDeclaration /**
     * Connects to TCP slave port, with a few retries.
     */ Modifier private ReferenceType Socket connect FormalParameter ReferenceType String port IOException InterruptedException LocalVariableDeclaration ReferenceType String VariableDeclarator host This MemberReference hudsonUrl MethodInvocation getHost IfStatement BinaryOperation != MemberReference tunnel Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tokens MethodInvocation tunnel Literal "":"" Literal 3 split IfStatement BinaryOperation != MemberReference tokens length Literal 2 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Illegal tunneling parameter: "" MemberReference tunnel End IfStatement BinaryOperation > MemberReference ArraySelector Literal 0 MethodInvocation length tokens Literal 0 StatementExpression Assignment MemberReference host MemberReference ArraySelector Literal 0 tokens = End IfStatement BinaryOperation > MemberReference ArraySelector Literal 1 MethodInvocation length tokens Literal 0 StatementExpression Assignment MemberReference port MemberReference ArraySelector Literal 1 tokens = End End LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Connecting to "" MemberReference host Literal ':' MemberReference port StatementExpression MethodInvocation listener MemberReference msg status LocalVariableDeclaration BasicType int VariableDeclarator retry Literal 1 WhileStatement Literal true BlockStatement TryStatement ReturnStatement ClassCreator ReferenceType Socket MemberReference host MethodInvocation Integer MemberReference port parseInt CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation > MemberReference ++ retry Literal 10 ThrowStatement MemberReference e End StatementExpression MethodInvocation Thread BinaryOperation * Literal 1000 Literal 10 sleep StatementExpression MethodInvocation listener BinaryOperation + BinaryOperation + BinaryOperation + MemberReference msg Literal "" (retrying:"" MemberReference retry Literal "")"" status End MethodDeclaration /**
     * Waits for the server to come back.
     */ Modifier private waitForServerToBack InterruptedException WhileStatement Literal true BlockStatement StatementExpression MethodInvocation Thread BinaryOperation * Literal 1000 Literal 10 sleep TryStatement LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator con Cast ReferenceType HttpURLConnection MethodInvocation hudsonUrl openConnection StatementExpression MethodInvocation con connect IfStatement BinaryOperation == MethodInvocation con getResponseCode Literal 200 ReturnStatement End CatchClause CatchClauseParameter IOException e End MethodDeclaration /**
     * When invoked from within remoted {@link Callable} (that is,
     * from the thread that carries out the remote requests),
     * this method returns the {@link Engine} in which the remote operations
     * run.
     */ Modifier public static ReferenceType Engine current ReturnStatement MethodInvocation CURRENT get FieldDeclaration Modifier private final static ReferenceType ThreadLocal TypeArgument ReferenceType Engine VariableDeclarator CURRENT ClassCreator ReferenceType ThreadLocal TypeArgument ReferenceType Engine ReferenceType Thread",0
107,107,"CompilationUnit PackageDeclaration hudson.model Import hudson.model.Descriptor.FormException Import hudson.util.CaseInsensitiveComparator Import hudson.Indenter Import hudson.Extension Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.ServletException Import java.io.IOException Import java.util.Collection Import java.util.Collections Import java.util.List Import java.util.Set Import java.util.TreeSet Import java.util.concurrent.CopyOnWriteArrayList Import java.text.ParseException ClassDeclaration Modifier public /**
 *
 * <h2>EXPERIMENTAL</h2>
 * <p>
 * The intention is to eventually merge this with the {@link ListView}.
 * This class is here for experimentation.
 *
 * <p>
 * Until this class is sufficiently stable, there's no need for l10n.
 *
 * @author Kohsuke Kawaguchi
 */ TreeView FieldDeclaration /**
     * List of job names. This is what gets serialized.
     */ Modifier private final ReferenceType Set TypeArgument ReferenceType String VariableDeclarator jobNames ClassCreator ReferenceType TreeSet TypeArgument ReferenceType String MemberReference CaseInsensitiveComparator INSTANCE FieldDeclaration /**
     * Nested views.
     */ Modifier private final ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType View VariableDeclarator views ClassCreator ReferenceType CopyOnWriteArrayList TypeArgument ReferenceType View ConstructorDeclaration Modifier public Annotation DataBoundConstructor TreeView FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name MethodDeclaration /**
     * Returns {@link Indenter} that has the fixed indentation width.
     * Used for assisting view rendering.
     */ Modifier public ReferenceType Indenter createFixedIndenter FormalParameter ReferenceType String d LocalVariableDeclaration Modifier final BasicType int VariableDeclarator depth MethodInvocation Integer MemberReference d parseInt ReturnStatement ClassCreator ReferenceType Indenter MethodDeclaration Modifier protected BasicType int getNestLevel FormalParameter ReferenceType Job job ReturnStatement MemberReference depth MethodDeclaration /**
     * Returns a read-only view of all {@link Job}s in this view.
     *
     * <p>
     * This method returns a separate copy each time to avoid
     * concurrent modification issue.
     */ Modifier public synchronized ReferenceType List TypeArgument ReferenceType TopLevelItem getItems ReturnStatement MethodInvocation Hudson MethodInvocation getItems getInstance MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType TopLevelItem item ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType Item doCreateItem FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException LocalVariableDeclaration ReferenceType Item VariableDeclarator item MethodInvocation Hudson MethodInvocation MemberReference req MemberReference rsp doCreateItem getInstance IfStatement BinaryOperation != MemberReference item Literal null BlockStatement StatementExpression MethodInvocation jobNames MethodInvocation item getName add StatementExpression MethodInvocation owner save End ReturnStatement MemberReference item MethodDeclaration Modifier public synchronized Annotation Override onJobRenamed FormalParameter ReferenceType Item item FormalParameter ReferenceType String oldName FormalParameter ReferenceType String newName IfStatement BinaryOperation && MethodInvocation jobNames MemberReference oldName remove BinaryOperation != MemberReference newName Literal null StatementExpression MethodInvocation jobNames MemberReference newName add End ForStatement EnhancedForControl VariableDeclaration ReferenceType View VariableDeclarator v MemberReference views StatementExpression MethodInvocation v MemberReference item MemberReference oldName MemberReference newName onJobRenamed End MethodDeclaration Modifier protected submit FormalParameter ReferenceType StaplerRequest req IOException ServletException FormException MethodDeclaration Modifier public deleteView FormalParameter ReferenceType View view IOException StatementExpression MethodInvocation views MemberReference view remove MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType View getViews ReturnStatement MethodInvocation Collections MemberReference views unmodifiableList MethodDeclaration Modifier public ReferenceType View getView FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType View VariableDeclarator v MemberReference views IfStatement MethodInvocation v MethodInvocation MemberReference name equals getViewName ReturnStatement MemberReference v End End ReturnStatement Literal null MethodDeclaration Modifier public onViewRenamed FormalParameter ReferenceType View view FormalParameter ReferenceType String oldName FormalParameter ReferenceType String newName MethodDeclaration Modifier public save IOException StatementExpression MethodInvocation owner save MethodDeclaration Modifier public doCreateView FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException TryStatement StatementExpression MethodInvocation MemberReference View CREATE checkPermission StatementExpression MethodInvocation views MethodInvocation View MemberReference req MemberReference rsp This create add StatementExpression MethodInvocation save CatchClause CatchClauseParameter ParseException e StatementExpression MethodInvocation MemberReference e MemberReference req MemberReference rsp sendError CatchClause CatchClauseParameter FormException e StatementExpression MethodInvocation MemberReference e MemberReference req MemberReference rsp sendError MethodDeclaration Modifier public static Annotation Extension ReferenceType ViewDescriptor register IfStatement MethodInvocation Boolean Literal ""hudson.TreeView"" getBoolean ReturnStatement ClassCreator ReferenceType DescriptorImpl ReturnStatement Literal null End ClassDeclaration Modifier public final static DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal ""Tree View"" ReferenceType ViewDescriptor ReferenceType View ReferenceType ViewGroup",1
30,30,"CompilationUnit PackageDeclaration hudson.model Import hudson.DescriptorExtensionList Import hudson.Util Import hudson.Extension Import hudson.views.BuildButtonColumn Import hudson.views.JobColumn Import hudson.views.LastDurationColumn Import hudson.views.LastFailureColumn Import hudson.views.LastSuccessColumn Import hudson.views.ListViewColumn Import hudson.views.StatusColumn Import hudson.views.WeatherColumn Import hudson.model.Descriptor.FormException Import hudson.util.CaseInsensitiveComparator Import hudson.util.DescribableList Import hudson.util.FormValidation Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter Import javax.servlet.ServletException Import java.io.IOException Import java.util.List Import java.util.TreeSet Import java.util.ArrayList Import java.util.Collections Import java.util.Iterator Import java.util.SortedSet Import java.util.logging.Level Import java.util.logging.Logger Import java.util.regex.Pattern Import java.util.regex.PatternSyntaxException ClassDeclaration Modifier public /**
 * Displays {@link Job}s in a flat list view.
 *
 * @author Kohsuke Kawaguchi
 */ ListView FieldDeclaration /**
     * List of job names. This is what gets serialized.
     */ Modifier final ReferenceType SortedSet TypeArgument ReferenceType String VariableDeclarator jobNames ClassCreator ReferenceType TreeSet TypeArgument ReferenceType String MemberReference CaseInsensitiveComparator INSTANCE FieldDeclaration Modifier private ReferenceType DescribableList TypeArgument ReferenceType ListViewColumn TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator columns FieldDeclaration Modifier private final static ReferenceType Descriptor VariableDeclarator defaultColumnDescriptors ArrayInitializer MemberReference StatusColumn DESCRIPTOR MemberReference WeatherColumn DESCRIPTOR MemberReference JobColumn DESCRIPTOR MemberReference LastSuccessColumn DESCRIPTOR MemberReference LastFailureColumn DESCRIPTOR MemberReference LastDurationColumn DESCRIPTOR MemberReference BuildButtonColumn DESCRIPTOR FieldDeclaration /**
     * Include regex string.
     */ Modifier private ReferenceType String VariableDeclarator includeRegex FieldDeclaration /**
     * Compiled include pattern from the includeRegex string.
     */ Modifier private transient ReferenceType Pattern VariableDeclarator includePattern ConstructorDeclaration Modifier public Annotation DataBoundConstructor ListView FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name StatementExpression MethodInvocation initColumns MethodDeclaration Modifier private ReferenceType Object readResolve IfStatement BinaryOperation != MemberReference includeRegex Literal null StatementExpression Assignment MemberReference includePattern MethodInvocation Pattern MemberReference includeRegex compile = End StatementExpression MethodInvocation initColumns ReturnStatement This MethodDeclaration Modifier protected initColumns IfStatement BinaryOperation != MemberReference columns Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType ListViewColumn VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ListViewColumn LocalVariableDeclaration ReferenceType DescriptorExtensionList TypeArgument ReferenceType ListViewColumn TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator all MethodInvocation ListViewColumn all LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator left ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn StatementExpression MethodInvocation left MemberReference all addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor VariableDeclarator d MemberReference defaultColumnDescriptors BlockStatement LocalVariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator des MethodInvocation all MethodInvocation d MethodInvocation getName getClass find IfStatement BinaryOperation != MemberReference des Literal null BlockStatement TryStatement StatementExpression MethodInvocation r MethodInvocation des Literal null Literal null newInstance add StatementExpression MethodInvocation left MemberReference des remove CatchClause CatchClauseParameter FormException e End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator d MemberReference left TryStatement StatementExpression MethodInvocation r MethodInvocation d Literal null Literal null newInstance add CatchClause CatchClauseParameter FormException e End LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ListViewColumn VariableDeclarator filter MethodInvocation r iterator WhileStatement MethodInvocation filter hasNext BlockStatement IfStatement MethodInvocation ! filter MethodInvocation shownByDefault next BlockStatement StatementExpression MethodInvocation filter remove End End StatementExpression Assignment MemberReference columns ClassCreator ReferenceType DescribableList TypeArgument ReferenceType ListViewColumn TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn MemberReference Saveable NOOP = TryStatement StatementExpression MethodInvocation columns MemberReference r replaceBy CatchClause CatchClauseParameter IOException ex StatementExpression MethodInvocation Logger MethodInvocation MemberReference Level SEVERE Literal null MemberReference ex log ClassReference MethodInvocation getName ReferenceType ListView getLogger MethodDeclaration /**
     * Returns the transient {@link Action}s associated with the top page.
     *
     * @see Hudson#getActions()
     */ Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Action getActions ReturnStatement MethodInvocation Hudson MethodInvocation getActions getInstance MethodDeclaration Modifier public ReferenceType Iterable TypeArgument ReferenceType ListViewColumn getColumns ReturnStatement MemberReference columns MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType ListViewColumn getDefaultColumns LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType ListViewColumn VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ListViewColumn LocalVariableDeclaration ReferenceType DescriptorExtensionList TypeArgument ReferenceType ListViewColumn TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator all MethodInvocation ListViewColumn all ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor VariableDeclarator d MemberReference defaultColumnDescriptors BlockStatement LocalVariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator des MethodInvocation all MethodInvocation d MethodInvocation getName getClass find IfStatement BinaryOperation != MemberReference des Literal null BlockStatement TryStatement StatementExpression MethodInvocation r MethodInvocation des Literal null Literal null newInstance add CatchClause CatchClauseParameter FormException e End End ReturnStatement MethodInvocation Collections MemberReference r unmodifiableList MethodDeclaration /**
     * Returns a read-only view of all {@link Job}s in this view.
     *
     * <p>
     * This method returns a separate copy each time to avoid
     * concurrent modification issue.
     */ Modifier public synchronized ReferenceType List TypeArgument ReferenceType TopLevelItem getItems LocalVariableDeclaration ReferenceType SortedSet TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType TreeSet TypeArgument ReferenceType String MemberReference jobNames IfStatement BinaryOperation != MemberReference includePattern Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType TopLevelItem VariableDeclarator item MethodInvocation Hudson MethodInvocation getItems getInstance BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator itemName MethodInvocation item getName IfStatement MethodInvocation includePattern MethodInvocation matches MemberReference itemName matcher BlockStatement StatementExpression MethodInvocation names MemberReference itemName add End End End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType TopLevelItem VariableDeclarator items ClassCreator ReferenceType ArrayList TypeArgument ReferenceType TopLevelItem MethodInvocation names size ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator n MemberReference names BlockStatement LocalVariableDeclaration ReferenceType TopLevelItem VariableDeclarator item MethodInvocation Hudson MethodInvocation MemberReference n getItem getInstance IfStatement BinaryOperation != MemberReference item Literal null StatementExpression MethodInvocation items MemberReference item add End End ReturnStatement MemberReference items MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType TopLevelItem item ReturnStatement MethodInvocation jobNames MethodInvocation item getName contains MethodDeclaration Modifier public ReferenceType String getIncludeRegex ReturnStatement MemberReference includeRegex MethodDeclaration Modifier public ReferenceType Item doCreateItem FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException LocalVariableDeclaration ReferenceType Item VariableDeclarator item MethodInvocation Hudson MethodInvocation MemberReference req MemberReference rsp doCreateItem getInstance IfStatement BinaryOperation != MemberReference item Literal null BlockStatement StatementExpression MethodInvocation jobNames MethodInvocation item getName add StatementExpression MethodInvocation owner save End ReturnStatement MemberReference item MethodDeclaration Modifier public synchronized Annotation Override onJobRenamed FormalParameter ReferenceType Item item FormalParameter ReferenceType String oldName FormalParameter ReferenceType String newName IfStatement BinaryOperation && MethodInvocation jobNames MemberReference oldName remove BinaryOperation != MemberReference newName Literal null StatementExpression MethodInvocation jobNames MemberReference newName add End MethodDeclaration /**
     * Handles the configuration submission.
     *
     * Load view-specific properties here.
     */ Modifier protected Annotation Override submit FormalParameter ReferenceType StaplerRequest req ServletException FormException StatementExpression MethodInvocation jobNames clear ForStatement EnhancedForControl VariableDeclaration ReferenceType TopLevelItem VariableDeclarator item MethodInvocation Hudson MethodInvocation getItems getInstance BlockStatement IfStatement BinaryOperation != MethodInvocation req MethodInvocation item getName getParameter Literal null StatementExpression MethodInvocation jobNames MethodInvocation item getName add End End IfStatement BinaryOperation != MethodInvocation req Literal ""useincluderegex"" getParameter Literal null BlockStatement StatementExpression Assignment MemberReference includeRegex MethodInvocation Util MethodInvocation req Literal ""includeRegex"" getParameter nullify = StatementExpression Assignment MemberReference includePattern MethodInvocation Pattern MemberReference includeRegex compile = BlockStatement StatementExpression Assignment MemberReference includeRegex Literal null = StatementExpression Assignment MemberReference includePattern Literal null = End IfStatement BinaryOperation == MemberReference columns Literal null BlockStatement StatementExpression Assignment MemberReference columns ClassCreator ReferenceType DescribableList TypeArgument ReferenceType ListViewColumn TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn MemberReference Saveable NOOP = End StatementExpression MethodInvocation columns MemberReference req MethodInvocation req getSubmittedForm MethodInvocation Hudson MethodInvocation ClassReference ReferenceType ListViewColumn getDescriptorList getInstance Literal ""columns"" rebuildHetero ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages ListView_DisplayName MethodDeclaration /**
         * Checks if the include regular expression is valid.
         */ Modifier public ReferenceType FormValidation doCheckIncludeRegex FormalParameter Annotation QueryParameter ReferenceType String value IOException ServletException InterruptedException LocalVariableDeclaration ReferenceType String VariableDeclarator v MethodInvocation Util MemberReference value fixEmpty IfStatement BinaryOperation != MemberReference v Literal null BlockStatement TryStatement StatementExpression MethodInvocation Pattern MemberReference v compile CatchClause CatchClauseParameter PatternSyntaxException pse ReturnStatement MethodInvocation FormValidation MethodInvocation pse getMessage error End ReturnStatement MethodInvocation FormValidation ok ReferenceType ViewDescriptor ReferenceType View",0
286,286,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.FilePath Import hudson.Util Import hudson.Functions Import hudson.model  Import hudson.scm.ChangeLogSet Import javax.mail.Address Import javax.mail.Message Import javax.mail.MessagingException Import javax.mail.Transport Import javax.mail.internet.InternetAddress Import javax.mail.internet.MimeMessage Import javax.mail.internet.AddressException Import java.io.File Import java.io.IOException Import java.util.Date Import java.util.LinkedHashSet Import java.util.List Import java.util.Set Import java.util.StringTokenizer Import java.util.HashSet Import java.util.logging.Logger Import java.util.regex.Matcher Import java.util.regex.Pattern ClassDeclaration Modifier public /**
 * Core logic of sending out notification e-mail.
 *
 * @author Jesse Glick
 * @author Kohsuke Kawaguchi
 */ MailSender FieldDeclaration /**
     * Whitespace-separated list of e-mail addresses that represent recipients.
     */ Modifier private ReferenceType String VariableDeclarator recipients FieldDeclaration /**
     * If true, only the first unstable build will be reported.
     */ Modifier private BasicType boolean VariableDeclarator dontNotifyEveryUnstableBuild FieldDeclaration /**
     * If true, individuals will receive e-mails regarding who broke the build.
     */ Modifier private BasicType boolean VariableDeclarator sendToIndividuals ConstructorDeclaration Modifier public MailSender FormalParameter ReferenceType String recipients FormalParameter BasicType boolean dontNotifyEveryUnstableBuild FormalParameter BasicType boolean sendToIndividuals StatementExpression Assignment This MemberReference recipients MemberReference recipients = StatementExpression Assignment This MemberReference dontNotifyEveryUnstableBuild MemberReference dontNotifyEveryUnstableBuild = StatementExpression Assignment This MemberReference sendToIndividuals MemberReference sendToIndividuals = MethodDeclaration Modifier public BasicType boolean execute FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener InterruptedException TryStatement LocalVariableDeclaration ReferenceType MimeMessage VariableDeclarator mail MethodInvocation MemberReference build MemberReference listener getMail IfStatement BinaryOperation != MemberReference mail Literal null BlockStatement LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator pb MethodInvocation build getPreviousBuild IfStatement BinaryOperation && BinaryOperation != MemberReference pb Literal null BinaryOperation == MethodInvocation pb getResult MemberReference Result SUCCESS BlockStatement StatementExpression MethodInvocation mail Literal ""In-Reply-To"" removeHeader StatementExpression MethodInvocation mail Literal ""References"" removeHeader End LocalVariableDeclaration ReferenceType Address VariableDeclarator allRecipients MethodInvocation mail getAllRecipients IfStatement BinaryOperation != MemberReference allRecipients Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal ""Sending e-mails to:"" ForStatement EnhancedForControl VariableDeclaration ReferenceType Address VariableDeclarator a MemberReference allRecipients StatementExpression MethodInvocation buf MethodInvocation MemberReference a append Literal ' ' append End StatementExpression MethodInvocation listener MethodInvocation MemberReference buf println getLogger StatementExpression MethodInvocation Transport MemberReference mail send StatementExpression MethodInvocation build ClassCreator ReferenceType MailMessageIdAction MethodInvocation mail getMessageID addAction BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages MailSender_ListEmpty println getLogger End End CatchClause CatchClauseParameter MessagingException e StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation e getMessage error printStackTrace ReturnStatement Literal true MethodDeclaration Modifier protected ReferenceType MimeMessage getMail FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener MessagingException InterruptedException IfStatement BinaryOperation == MethodInvocation build getResult MemberReference Result FAILURE BlockStatement ReturnStatement MethodInvocation MemberReference build MemberReference listener createFailureMail End IfStatement BinaryOperation == MethodInvocation build getResult MemberReference Result UNSTABLE BlockStatement LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator prev MethodInvocation build getPreviousBuild IfStatement MemberReference ! dontNotifyEveryUnstableBuild ReturnStatement MethodInvocation MemberReference build MemberReference listener createUnstableMail End IfStatement BinaryOperation != MemberReference prev Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation prev getResult MemberReference Result SUCCESS ReturnStatement MethodInvocation MemberReference build MemberReference listener createUnstableMail End End End IfStatement BinaryOperation == MethodInvocation build getResult MemberReference Result SUCCESS BlockStatement LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator prev MethodInvocation build getPreviousBuild IfStatement BinaryOperation != MemberReference prev Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation prev getResult MemberReference Result FAILURE ReturnStatement MethodInvocation MemberReference build Literal ""normal"" MemberReference listener createBackToNormalMail End IfStatement BinaryOperation == MethodInvocation prev getResult MemberReference Result UNSTABLE ReturnStatement MethodInvocation MemberReference build Literal ""stable"" MemberReference listener createBackToNormalMail End End End ReturnStatement Literal null MethodDeclaration Modifier private ReferenceType MimeMessage createBackToNormalMail FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType String subject FormalParameter ReferenceType BuildListener listener MessagingException LocalVariableDeclaration ReferenceType MimeMessage VariableDeclarator msg MethodInvocation MemberReference build MemberReference listener createEmptyMail StatementExpression MethodInvocation msg MethodInvocation MemberReference build BinaryOperation + BinaryOperation + Literal ""Hudson build is back to "" MemberReference subject Literal "": "" getSubject Literal ""UTF-8"" setSubject LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation MemberReference build MemberReference buf appendBuildUrl StatementExpression MethodInvocation msg MethodInvocation buf toString setText ReturnStatement MemberReference msg MethodDeclaration Modifier private ReferenceType MimeMessage createUnstableMail FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener MessagingException LocalVariableDeclaration ReferenceType MimeMessage VariableDeclarator msg MethodInvocation MemberReference build MemberReference listener createEmptyMail LocalVariableDeclaration ReferenceType String VariableDeclarator subject Literal ""Hudson build is unstable: "" LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator prev MethodInvocation build getPreviousBuild IfStatement BinaryOperation != MemberReference prev Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation prev getResult MemberReference Result SUCCESS StatementExpression Assignment MemberReference subject Literal ""Hudson build became unstable: "" = End IfStatement BinaryOperation == MethodInvocation prev getResult MemberReference Result UNSTABLE StatementExpression Assignment MemberReference subject Literal ""Hudson build is still unstable: "" = End End StatementExpression MethodInvocation msg MethodInvocation MemberReference build MemberReference subject getSubject Literal ""UTF-8"" setSubject LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation MemberReference build MemberReference buf appendBuildUrl StatementExpression MethodInvocation msg MethodInvocation buf toString setText ReturnStatement MemberReference msg MethodDeclaration Modifier private appendBuildUrl FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType StringBuffer buf LocalVariableDeclaration ReferenceType String VariableDeclarator baseUrl MethodInvocation Mailer MethodInvocation getUrl descriptor IfStatement BinaryOperation != MemberReference baseUrl Literal null BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference baseUrl append MethodInvocation MethodInvocation Util MethodInvocation build getUrl encode append Literal ""See "" append IfStatement MethodInvocation ! build MethodInvocation isEmptySet getChangeSet StatementExpression MethodInvocation buf Literal ""changes"" append End StatementExpression MethodInvocation buf Literal ""\n\n"" append End MethodDeclaration Modifier private ReferenceType MimeMessage createFailureMail FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener MessagingException InterruptedException LocalVariableDeclaration ReferenceType MimeMessage VariableDeclarator msg MethodInvocation MemberReference build MemberReference listener createEmptyMail StatementExpression MethodInvocation msg MethodInvocation MemberReference build Literal ""Build failed in Hudson: "" getSubject Literal ""UTF-8"" setSubject LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation MemberReference build MemberReference buf appendBuildUrl LocalVariableDeclaration BasicType boolean VariableDeclarator firstChange Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType ChangeLogSet ReferenceType Entry VariableDeclarator entry MethodInvocation build getChangeSet BlockStatement IfStatement MemberReference firstChange BlockStatement StatementExpression Assignment MemberReference firstChange Literal false = StatementExpression MethodInvocation buf Literal ""Changes:\n\n"" append End StatementExpression MethodInvocation buf Literal '[' append StatementExpression MethodInvocation buf MethodInvocation entry MethodInvocation getFullName getAuthor append StatementExpression MethodInvocation buf Literal ""] "" append LocalVariableDeclaration ReferenceType String VariableDeclarator m MethodInvocation entry getMsg StatementExpression MethodInvocation buf MemberReference m append IfStatement MethodInvocation ! m Literal ""\n"" endsWith BlockStatement StatementExpression MethodInvocation buf Literal '\n' append End StatementExpression MethodInvocation buf Literal '\n' append End StatementExpression MethodInvocation buf Literal ""------------------------------------------\n"" append TryStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator lines MethodInvocation build MemberReference MAX_LOG_LINES getLog LocalVariableDeclaration ReferenceType String VariableDeclarator workspaceUrl Literal null VariableDeclarator artifactUrl Literal null LocalVariableDeclaration ReferenceType Pattern VariableDeclarator wsPattern Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator baseUrl MethodInvocation Mailer MethodInvocation getUrl descriptor IfStatement BinaryOperation != MemberReference baseUrl Literal null BlockStatement StatementExpression Assignment MemberReference workspaceUrl BinaryOperation + BinaryOperation + MemberReference baseUrl MethodInvocation Util MethodInvocation build MethodInvocation getUrl getProject encode Literal ""ws/"" = StatementExpression Assignment MemberReference artifactUrl BinaryOperation + BinaryOperation + MemberReference baseUrl MethodInvocation Util MethodInvocation build getUrl encode Literal ""artifact/"" = LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation build MethodInvocation getWorkspace getProject StatementExpression Assignment MemberReference wsPattern MethodInvocation Pattern BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""("" MethodInvocation Pattern MethodInvocation ws getRemote quote Literal ""|"" MethodInvocation Pattern MethodInvocation ws MethodInvocation toString toURI quote Literal "")[/\\\\]?([^:#\\s]*)"" compile = End ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator line MemberReference lines BlockStatement IfStatement BinaryOperation != MemberReference wsPattern Literal null BlockStatement LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation wsPattern MemberReference line matcher LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 WhileStatement MethodInvocation m MemberReference pos find BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation m MethodInvocation MemberReference File separatorChar Literal '/' replace Literal 2 group LocalVariableDeclaration ReferenceType String VariableDeclarator linkUrl TernaryExpression MethodInvocation MemberReference path MemberReference build artifactMatches MemberReference artifactUrl MemberReference workspaceUrl LocalVariableDeclaration ReferenceType String VariableDeclarator prefix BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation line Literal 0 MethodInvocation m start substring MemberReference linkUrl MethodInvocation Util MemberReference path encode Literal ' ' StatementExpression Assignment MemberReference pos MethodInvocation prefix length = StatementExpression Assignment MemberReference line BinaryOperation + MemberReference prefix MethodInvocation line MethodInvocation m end substring = StatementExpression Assignment MemberReference m MethodInvocation wsPattern MemberReference line matcher = End End StatementExpression MethodInvocation buf MemberReference line append StatementExpression MethodInvocation buf Literal '\n' append End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation buf MethodInvocation MethodInvocation Functions MemberReference e printThrowable append Literal ""Failed to access build log\n\n"" append StatementExpression MethodInvocation msg MethodInvocation buf toString setText ReturnStatement MemberReference msg MethodDeclaration Modifier private ReferenceType MimeMessage createEmptyMail FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType BuildListener listener MessagingException LocalVariableDeclaration ReferenceType MimeMessage VariableDeclarator msg ClassCreator ReferenceType MimeMessage MethodInvocation Mailer MethodInvocation createSession descriptor StatementExpression MethodInvocation msg Literal """" Literal ""text/plain"" setContent StatementExpression MethodInvocation msg ClassCreator ReferenceType InternetAddress MethodInvocation Mailer MethodInvocation getAdminAddress descriptor setFrom StatementExpression MethodInvocation msg ClassCreator ReferenceType Date setSentDate LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType InternetAddress VariableDeclarator rcp ClassCreator ReferenceType LinkedHashSet TypeArgument ReferenceType InternetAddress LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference recipients WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator address MethodInvocation tokens nextToken IfStatement MethodInvocation address Literal ""upstream-individuals:"" startsWith BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator projectName MethodInvocation address Literal MethodInvocation length ""upstream-individuals:"" substring LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator up MethodInvocation Hudson MethodInvocation MemberReference projectName ClassReference ReferenceType AbstractProject getItemByFullName getInstance IfStatement BinaryOperation == MemberReference up Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + Literal ""No such project exist: "" MemberReference projectName println getLogger ContinueStatement End LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator pb MethodInvocation build getPreviousBuild LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator ub MethodInvocation build MemberReference up getUpstreamRelationshipBuild LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator upb TernaryExpression BinaryOperation != MemberReference pb Literal null MethodInvocation pb MemberReference up getUpstreamRelationshipBuild Literal null IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference pb Literal null BinaryOperation == MemberReference ub Literal null BinaryOperation == MemberReference upb Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + BinaryOperation + Literal ""Unable to compute the changesets in "" MemberReference up Literal "". Is the fingerprint configured?"" println getLogger ContinueStatement End IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference pb Literal null BinaryOperation == MemberReference ub Literal null BinaryOperation == MemberReference upb Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + Literal ""Unable to compute the changesets in "" MemberReference up println getLogger ContinueStatement End ForStatement ForControl VariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator b MemberReference upb BinaryOperation && BinaryOperation != MemberReference b MemberReference ub BinaryOperation != MemberReference b Literal null Assignment MemberReference b MethodInvocation b getNextBuild = StatementExpression MethodInvocation rcp MethodInvocation MemberReference listener MethodInvocation b getCulprits buildCulpritList addAll End BlockStatement StatementExpression MethodInvocation rcp ClassCreator ReferenceType InternetAddress MemberReference address add End End IfStatement MemberReference sendToIndividuals BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType User VariableDeclarator culprits MethodInvocation build getCulprits IfStatement MemberReference debug StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + Literal ""Trying to send e-mails to individuals who broke the build. sizeof(culprits)=="" MethodInvocation culprits size println getLogger End StatementExpression MethodInvocation rcp MethodInvocation MemberReference listener MemberReference culprits buildCulpritList addAll End StatementExpression MethodInvocation msg MemberReference Message.RecipientType TO MethodInvocation rcp ArrayCreator ReferenceType InternetAddress MethodInvocation rcp size toArray setRecipients LocalVariableDeclaration ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator pb MethodInvocation build getPreviousBuild IfStatement BinaryOperation != MemberReference pb Literal null BlockStatement LocalVariableDeclaration ReferenceType MailMessageIdAction VariableDeclarator b MethodInvocation pb ClassReference ReferenceType MailMessageIdAction getAction IfStatement BinaryOperation != MemberReference b Literal null BlockStatement StatementExpression MethodInvocation msg Literal ""In-Reply-To"" MemberReference b messageId setHeader StatementExpression MethodInvocation msg Literal ""References"" MemberReference b messageId setHeader End End ReturnStatement MemberReference msg MethodDeclaration Modifier private ReferenceType Set TypeArgument ReferenceType InternetAddress buildCulpritList FormalParameter ReferenceType BuildListener listener FormalParameter ReferenceType Set TypeArgument ReferenceType User culprits AddressException LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType InternetAddress VariableDeclarator r ClassCreator ReferenceType HashSet TypeArgument ReferenceType InternetAddress ForStatement EnhancedForControl VariableDeclaration ReferenceType User VariableDeclarator a MemberReference culprits BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator adrs MethodInvocation Util MethodInvocation a MethodInvocation getAddress ClassReference Mailer ReferenceType UserProperty getProperty fixEmpty IfStatement MemberReference debug StatementExpression MethodInvocation listener MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal ""  User "" MethodInvocation a getId Literal "" -> "" MemberReference adrs println getLogger End IfStatement BinaryOperation != MemberReference adrs Literal null StatementExpression MethodInvocation r ClassCreator ReferenceType InternetAddress MemberReference adrs add BlockStatement StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages MethodInvocation a getFullName MailSender_NoAddress println getLogger End End ReturnStatement MemberReference r MethodDeclaration Modifier private ReferenceType String getSubject FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType String caption ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference caption MethodInvocation build MethodInvocation getFullDisplayName getProject Literal "" #"" MethodInvocation build getNumber MethodDeclaration /**
     * Check whether a path (/-separated) will be archived.
     */ Modifier protected BasicType boolean artifactMatches FormalParameter ReferenceType String path FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build ReturnStatement Literal false FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType MailSender getLogger FieldDeclaration Modifier public static BasicType boolean VariableDeclarator debug Literal false FieldDeclaration Modifier private final static BasicType int VariableDeclarator MAX_LOG_LINES Literal 250",1
161,161,"CompilationUnit PackageDeclaration hudson.util Import org.jfree.chart.renderer.category.LineAndShapeRenderer Import java.awt.Color Import java.util.List Import java.util.Collections Import java.util.Arrays ClassDeclaration Modifier public /**
 * Color constants consistent with the Hudson color palette. 
 *
 * @author Kohsuke Kawaguchi
 */ ColorPalette FieldDeclaration Modifier public final static ReferenceType Color VariableDeclarator RED ClassCreator ReferenceType Color Literal 0xEF Literal 0x29 Literal 0x29 FieldDeclaration Modifier public final static ReferenceType Color VariableDeclarator YELLOW ClassCreator ReferenceType Color Literal 0xFC Literal 0xE9 Literal 0x4F FieldDeclaration Modifier public final static ReferenceType Color VariableDeclarator BLUE ClassCreator ReferenceType Color Literal 0x72 Literal 0x9F Literal 0xCF FieldDeclaration Modifier public final static ReferenceType Color VariableDeclarator GREY ClassCreator ReferenceType Color Literal 0xAB Literal 0xAB Literal 0xAB FieldDeclaration /**
     * Color list usable for generating line charts.
     */ Modifier public static ReferenceType List TypeArgument ReferenceType Color VariableDeclarator LINE_GRAPH MethodInvocation Collections MethodInvocation Arrays ClassCreator ReferenceType Color Literal 0xCC0000 ClassCreator ReferenceType Color Literal 0x3465a4 ClassCreator ReferenceType Color Literal 0x73d216 ClassCreator ReferenceType Color Literal 0xedd400 asList unmodifiableList MethodDeclaration /**
     * Applies {@link #LINE_GRAPH} colors to the given renderer.
     */ Modifier public static apply FormalParameter ReferenceType LineAndShapeRenderer renderer LocalVariableDeclaration BasicType int VariableDeclarator n Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Color VariableDeclarator c MemberReference LINE_GRAPH StatementExpression MethodInvocation renderer MemberReference ++ n MemberReference c setSeriesPaint End",1
13,13,"CompilationUnit PackageDeclaration hudson.tools Import hudson.Extension Import hudson.model.Node Import hudson.model.TaskListener Import java.io.IOException Import java.util.Map Import java.util.WeakHashMap Import java.util.concurrent.Semaphore ClassDeclaration Modifier public Annotation Extension /**
 * Actually runs installations.
 * @since 1.305
 */ InstallerTranslator FieldDeclaration Modifier private final static ReferenceType Map TypeArgument ReferenceType Node TypeArgument ReferenceType Map TypeArgument ReferenceType ToolInstallation TypeArgument ReferenceType Semaphore VariableDeclarator mutexByNode ClassCreator ReferenceType WeakHashMap TypeArgument ReferenceType Node TypeArgument ReferenceType Map TypeArgument ReferenceType ToolInstallation TypeArgument ReferenceType Semaphore MethodDeclaration Modifier public ReferenceType String getToolHome FormalParameter ReferenceType Node node FormalParameter ReferenceType ToolInstallation tool FormalParameter ReferenceType TaskListener log IOException InterruptedException LocalVariableDeclaration ReferenceType InstallSourceProperty VariableDeclarator isp MethodInvocation tool MethodInvocation ClassReference ReferenceType InstallSourceProperty get getProperties IfStatement BinaryOperation == MemberReference isp Literal null BlockStatement ReturnStatement Literal null End ForStatement EnhancedForControl VariableDeclaration ReferenceType ToolInstaller VariableDeclarator installer MemberReference isp installers BlockStatement IfStatement MethodInvocation installer MemberReference node appliesTo BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType ToolInstallation TypeArgument ReferenceType Semaphore VariableDeclarator mutexByTool MethodInvocation mutexByNode MemberReference node get IfStatement BinaryOperation == MemberReference mutexByTool Literal null BlockStatement StatementExpression MethodInvocation mutexByNode MemberReference node Assignment MemberReference mutexByTool ClassCreator ReferenceType WeakHashMap TypeArgument ReferenceType ToolInstallation TypeArgument ReferenceType Semaphore = put End LocalVariableDeclaration ReferenceType Semaphore VariableDeclarator semaphore MethodInvocation mutexByTool MemberReference tool get IfStatement BinaryOperation == MemberReference semaphore Literal null BlockStatement StatementExpression MethodInvocation mutexByTool MemberReference tool Assignment MemberReference semaphore ClassCreator ReferenceType Semaphore Literal 1 = put End StatementExpression MethodInvocation semaphore acquire TryStatement ReturnStatement MethodInvocation installer MethodInvocation getRemote MemberReference tool MemberReference node MemberReference log performInstallation StatementExpression MethodInvocation semaphore release End End ReturnStatement Literal null ReferenceType ToolLocationTranslator",0
594,594,,0
143,143,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.InputStream Import java.io.Serializable Import java.io.ObjectOutputStream Import java.io.IOException Import java.io.ObjectInputStream ClassDeclaration Modifier public /**
 * Wraps {@link InputStream} so that it can be sent over the remoting channel.
 *
 * <p>
 * Note that this class by itself does not perform buffering.
 *
 * @author Kohsuke Kawaguchi
 */ RemoteInputStream FieldDeclaration Modifier private transient ReferenceType InputStream VariableDeclarator core ConstructorDeclaration Modifier public RemoteInputStream FormalParameter ReferenceType InputStream core StatementExpression Assignment This MemberReference core MemberReference core = MethodDeclaration Modifier private writeObject FormalParameter ReferenceType ObjectOutputStream oos IOException LocalVariableDeclaration BasicType int VariableDeclarator id MethodInvocation Channel MethodInvocation MemberReference core export current StatementExpression MethodInvocation oos MemberReference id writeInt MethodDeclaration Modifier private readObject FormalParameter ReferenceType ObjectInputStream ois IOException ClassNotFoundException LocalVariableDeclaration Modifier final ReferenceType Channel VariableDeclarator channel MethodInvocation Channel current AssertStatement BinaryOperation != MemberReference channel Literal null StatementExpression Assignment This MemberReference core ClassCreator ReferenceType ProxyInputStream MemberReference channel MethodInvocation ois readInt = FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L MethodDeclaration Modifier public BasicType int read IOException ReturnStatement MethodInvocation core read MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte b IOException ReturnStatement MethodInvocation core MemberReference b read MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException ReturnStatement MethodInvocation core MemberReference b MemberReference off MemberReference len read MethodDeclaration Modifier public BasicType long skip FormalParameter BasicType long n IOException ReturnStatement MethodInvocation core MemberReference n skip MethodDeclaration Modifier public BasicType int available IOException ReturnStatement MethodInvocation core available MethodDeclaration Modifier public close IOException StatementExpression MethodInvocation core close MethodDeclaration Modifier public mark FormalParameter BasicType int readlimit StatementExpression MethodInvocation core MemberReference readlimit mark MethodDeclaration Modifier public reset IOException StatementExpression MethodInvocation core reset MethodDeclaration Modifier public BasicType boolean markSupported ReturnStatement MethodInvocation core markSupported ReferenceType InputStream ReferenceType Serializable",0
56,56,"CompilationUnit PackageDeclaration hudson.scm Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.Descriptor.FormException Import hudson.scm.browsers  Import hudson.util.DescriptorList Import hudson.Extension Import org.kohsuke.stapler.StaplerRequest Import java.util.ArrayList Import java.util.List Import net.sf.json.JSONObject Import net.sf.json.JSONArray ClassDeclaration Modifier public /**
 * List of all installed {@link RepositoryBrowsers}.
 *
 * @author Kohsuke Kawaguchi
 */ RepositoryBrowsers FieldDeclaration /**
     * List of all installed {@link RepositoryBrowsers}.
     *
     * @deprecated as of 1.286.
     *      Use {@link RepositoryBrowser#all()} for read access and {@link Extension} for registration.
     */ Modifier public final static ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? VariableDeclarator LIST ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType RepositoryBrowser TypeArgument ? Cast ReferenceType Class ClassReference ReferenceType RepositoryBrowser MethodDeclaration /**
     * Only returns those {@link RepositoryBrowser} descriptors that extend from the given type.
     */ Modifier public static ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? filter FormalParameter ReferenceType Class TypeArgument ReferenceType RepositoryBrowser extends t LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? VariableDeclarator d MethodInvocation RepositoryBrowser all IfStatement MethodInvocation t MemberReference d clazz isAssignableFrom StatementExpression MethodInvocation r MemberReference d add End End ReturnStatement MemberReference r MethodDeclaration /**
     * Creates an instance of {@link RepositoryBrowser} from a form submission.
     *
     * @deprecated
     *      Use {@link #createInstance(Class, StaplerRequest, JSONObject, String)}.
     */ Modifier public static TypeParameter T ReferenceType RepositoryBrowser ReferenceType T createInstance FormalParameter ReferenceType Class TypeArgument ReferenceType T type FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType String fieldName FormException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType RepositoryBrowser TypeArgument ? VariableDeclarator list MethodInvocation MemberReference type filter LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation req MemberReference fieldName getParameter IfStatement BinaryOperation || BinaryOperation == MemberReference value Literal null MethodInvocation value Literal ""auto"" equals ReturnStatement Literal null End ReturnStatement MethodInvocation type MethodInvocation list MethodInvocation MemberReference req Literal null newInstance MethodInvocation Integer MemberReference value parseInt get cast MethodDeclaration /**
     * Creates an instance of {@link RepositoryBrowser} from a form submission.
     *
     * @since 1.227
     */ Modifier public static TypeParameter T ReferenceType RepositoryBrowser ReferenceType T createInstance FormalParameter ReferenceType Class TypeArgument ReferenceType T type FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject parent FormalParameter ReferenceType String fieldName FormException LocalVariableDeclaration ReferenceType JSONObject VariableDeclarator o Cast ReferenceType JSONObject MethodInvocation parent MemberReference fieldName get IfStatement BinaryOperation == MemberReference o Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation req MemberReference type MemberReference o bindJSON",0
458,458,,0
343,343,"CompilationUnit PackageDeclaration hudson.tasks.labelers Import hudson.remoting.Callable Import hudson.remoting.VirtualChannel Import hudson.tasks.DynamicLabeler Import java.util.Collections Import java.util.HashSet Import java.util.Set ClassDeclaration Modifier public /**
 * Created by IntelliJ IDEA.
 *
 * @author connollys
 * @since 25-May-2007 15:25:03
 */ OSLabeler MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType String findLabels FormalParameter ReferenceType VirtualChannel channel TryStatement ReturnStatement MethodInvocation channel ClassCreator ReferenceType OSLabelFinder call CatchClause CatchClauseParameter Exception e ReturnStatement MethodInvocation Collections emptySet ClassDeclaration Modifier private static OSLabelFinder MethodDeclaration /** Performs computation and returns the result, or throws some exception. */ Modifier public ReferenceType Set TypeArgument ReferenceType String call Exception LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType String LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator os MethodInvocation System MethodInvocation toLowerCase Literal ""os.name"" getProperty LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator version MethodInvocation System Literal ""os.version"" getProperty LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator arch MethodInvocation System Literal ""os.arch"" getProperty IfStatement BinaryOperation || MethodInvocation os Literal ""solaris"" equals MethodInvocation os Literal ""SunOS"" equals BlockStatement StatementExpression MethodInvocation result Literal ""solaris"" add StatementExpression MethodInvocation result BinaryOperation + Literal ""solaris_"" MemberReference arch add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + BinaryOperation + Literal ""solaris_"" MemberReference arch Literal ""_"" MemberReference version add IfStatement MethodInvocation os Literal ""windows"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows"" add IfStatement MethodInvocation os Literal ""windows 9"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_9x_family"" add IfStatement MethodInvocation version Literal ""4.0"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_95"" add IfStatement MethodInvocation version Literal ""4.9"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_ME"" add BlockStatement AssertStatement MethodInvocation version Literal ""4.1"" startsWith StatementExpression MethodInvocation result Literal ""windows_98"" add End End BlockStatement StatementExpression MethodInvocation result Literal ""windows_nt_family"" add IfStatement MethodInvocation version Literal ""4.0"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_nt4"" add IfStatement MethodInvocation version Literal ""5.0"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_2000"" add IfStatement MethodInvocation version Literal ""5.1"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_xp"" add IfStatement MethodInvocation version Literal ""5.2"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""windows_2003"" add End End End End End IfStatement MethodInvocation os Literal ""linux"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""linux"" add IfStatement MethodInvocation os Literal ""mac"" startsWith BlockStatement StatementExpression MethodInvocation result Literal ""mac"" add BlockStatement StatementExpression MethodInvocation result MemberReference os add End End End End ReturnStatement MemberReference result ReferenceType Callable TypeArgument ReferenceType Set TypeArgument ReferenceType String TypeArgument ReferenceType Exception ReferenceType DynamicLabeler",1
340,340,"CompilationUnit PackageDeclaration hudson.model Import hudson.FilePath Import hudson.Extension Import java.io.File Import java.io.IOException Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.ServletException ClassDeclaration Modifier public /**
 * Free-style software project.
 * 
 * @author Kohsuke Kawaguchi
 */ FreeStyleProject FieldDeclaration /**
     * User-specified workspace directory, or null if it's up to Hudson.
     *
     * <p>
     * Normally a free-style project uses the workspace location assigned by its parent container,
     * but sometimes people have builds that have hard-coded paths (which can be only built in
     * certain locations. see http://www.nabble.com/Customize-Workspace-directory-tt17194310.html for
     * one such discussion.)
     *
     * <p>
     * This is not {@link File} because it may have to hold a path representation on another OS.
     *
     * @since 1.216
     */ Modifier private ReferenceType String VariableDeclarator customWorkspace ConstructorDeclaration Modifier public FreeStyleProject FormalParameter ReferenceType Hudson parent FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference parent MemberReference name MethodDeclaration Modifier protected Annotation Override ReferenceType Class TypeArgument ReferenceType FreeStyleBuild getBuildClass ReturnStatement ClassReference ReferenceType FreeStyleBuild MethodDeclaration Modifier public Annotation Override ReferenceType Hudson getParent ReturnStatement MethodInvocation Hudson getInstance MethodDeclaration Modifier public ReferenceType String getCustomWorkspace ReturnStatement MemberReference customWorkspace MethodDeclaration Modifier public Annotation Override ReferenceType FilePath getWorkspace LocalVariableDeclaration ReferenceType Node VariableDeclarator node MethodInvocation getLastBuiltOn IfStatement BinaryOperation == MemberReference node Literal null StatementExpression Assignment MemberReference node MethodInvocation getParent = End IfStatement BinaryOperation != MemberReference customWorkspace Literal null ReturnStatement MethodInvocation node MemberReference customWorkspace createPath End ReturnStatement MethodInvocation node This getWorkspaceFor MethodDeclaration Modifier protected submit FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException Descriptor.FormException IfStatement MethodInvocation req Literal ""customWorkspace"" hasParameter StatementExpression Assignment MemberReference customWorkspace MethodInvocation req Literal ""customWorkspace.directory"" getParameter = StatementExpression Assignment MemberReference customWorkspace Literal null = End StatementExpression SuperMethodInvocation MemberReference req MemberReference rsp submit MethodDeclaration Modifier public ReferenceType DescriptorImpl getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static Annotation Extension ElementValuePair ordinal Literal 1000 ReferenceType DescriptorImpl VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public final static DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages FreeStyleProject_DisplayName MethodDeclaration Modifier public ReferenceType FreeStyleProject newInstance FormalParameter ReferenceType String name ReturnStatement ClassCreator ReferenceType FreeStyleProject MethodInvocation Hudson getInstance MemberReference name ReferenceType AbstractProjectDescriptor ReferenceType Project TypeArgument ReferenceType FreeStyleProject TypeArgument ReferenceType FreeStyleBuild ReferenceType TopLevelItem",1
193,193,"CompilationUnit PackageDeclaration hudson.logging Import java.io.UnsupportedEncodingException Import java.lang.ref.WeakReference Import java.util.logging.ErrorManager Import java.util.logging.Filter Import java.util.logging.Formatter Import java.util.logging.Handler Import java.util.logging.Level Import java.util.logging.LogRecord Import java.util.logging.Logger ClassDeclaration Modifier public final /**
 * Delegating {@link Handler} that uses {@link WeakReference},
 * which de-registers itself when an object disappears via GC.
 */ WeakLogHandler FieldDeclaration Modifier private final ReferenceType WeakReference TypeArgument ReferenceType Handler VariableDeclarator target FieldDeclaration Modifier private final ReferenceType Logger VariableDeclarator logger ConstructorDeclaration Modifier public WeakLogHandler FormalParameter ReferenceType Handler target FormalParameter ReferenceType Logger logger StatementExpression Assignment This MemberReference logger MemberReference logger = StatementExpression MethodInvocation logger This addHandler StatementExpression Assignment This MemberReference target ClassCreator ReferenceType WeakReference TypeArgument ReferenceType Handler MemberReference target = MethodDeclaration Modifier public publish FormalParameter ReferenceType LogRecord record LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference record publish End MethodDeclaration Modifier public flush LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t flush End MethodDeclaration Modifier public close SecurityException LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t close End MethodDeclaration Modifier private ReferenceType Handler resolve LocalVariableDeclaration ReferenceType Handler VariableDeclarator r MethodInvocation target get IfStatement BinaryOperation == MemberReference r Literal null StatementExpression MethodInvocation logger This removeHandler End ReturnStatement MemberReference r MethodDeclaration Modifier public Annotation Override setFormatter FormalParameter ReferenceType Formatter newFormatter SecurityException StatementExpression SuperMethodInvocation MemberReference newFormatter setFormatter LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference newFormatter setFormatter End MethodDeclaration Modifier public Annotation Override setEncoding FormalParameter ReferenceType String encoding SecurityException UnsupportedEncodingException StatementExpression SuperMethodInvocation MemberReference encoding setEncoding LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference encoding setEncoding End MethodDeclaration Modifier public Annotation Override setFilter FormalParameter ReferenceType Filter newFilter SecurityException StatementExpression SuperMethodInvocation MemberReference newFilter setFilter LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference newFilter setFilter End MethodDeclaration Modifier public Annotation Override setErrorManager FormalParameter ReferenceType ErrorManager em StatementExpression SuperMethodInvocation MemberReference em setErrorManager LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference em setErrorManager End MethodDeclaration Modifier public Annotation Override setLevel FormalParameter ReferenceType Level newLevel SecurityException StatementExpression SuperMethodInvocation MemberReference newLevel setLevel LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null StatementExpression MethodInvocation t MemberReference newLevel setLevel End MethodDeclaration Modifier public Annotation Override BasicType boolean isLoggable FormalParameter ReferenceType LogRecord record LocalVariableDeclaration ReferenceType Handler VariableDeclarator t MethodInvocation resolve IfStatement BinaryOperation != MemberReference t Literal null ReturnStatement MethodInvocation t MemberReference record isLoggable ReturnStatement SuperMethodInvocation MemberReference record isLoggable End ReferenceType Handler",1
187,187,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.model.AbstractProject Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.AbstractProject.AbstractProjectDescriptor Import hudson.Extension Import hudson.util.DescriptorList Import java.util.ArrayList Import java.util.List ClassDeclaration Modifier public /**
 * List of all installed {@link BuildWrapper}.
 *
 * @author Kohsuke Kawaguchi
 */ BuildWrappers FieldDeclaration /**
     * @deprecated
     *      as of 1.281. Use {@link Extension} for registration, and use {@link BuildWrapper#all()}
     *      for listing them.
     */ Modifier public final static ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper VariableDeclarator WRAPPERS ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType BuildWrapper ClassReference ReferenceType BuildWrapper MethodDeclaration /**
     * List up all {@link BuildWrapperDescriptor}s that are applicable for the given project.
     *
     * @return
     *      The signature doesn't use {@link BuildWrapperDescriptor} to maintain compatibility
     *      with {@link BuildWrapper} implementations before 1.150.
     */ Modifier public static ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper getFor FormalParameter ReferenceType AbstractProject TypeArgument ? TypeArgument ? project LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper LocalVariableDeclaration ReferenceType Descriptor VariableDeclarator pd MethodInvocation Hudson MethodInvocation Cast ReferenceType Class MethodInvocation project getClass getDescriptor getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType Descriptor TypeArgument ReferenceType BuildWrapper VariableDeclarator w MethodInvocation BuildWrapper all BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pd ReferenceType AbstractProjectDescriptor Cast ReferenceType AbstractProjectDescriptor MemberReference pd ContinueStatement End IfStatement BinaryOperation instanceof MemberReference w ReferenceType BuildWrapperDescriptor BlockStatement LocalVariableDeclaration ReferenceType BuildWrapperDescriptor VariableDeclarator bwd Cast ReferenceType BuildWrapperDescriptor MemberReference w IfStatement MethodInvocation bwd MemberReference project isApplicable StatementExpression MethodInvocation result MemberReference bwd add End BlockStatement StatementExpression MethodInvocation result MemberReference w add End End ReturnStatement MemberReference result",0
384,384,,0
253,253,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.ByteArrayOutputStream Import java.io.File Import java.io.IOException Import java.io.UnsupportedEncodingException Import java.io.InputStream Import java.net.URL Import java.net.MalformedURLException Import java.net.URLConnection Import java.net.JarURLConnection Import java.lang.reflect.Field Import java.util.zip.ZipFile Import java.util.jar.JarFile Import java.util.logging.Logger Import java.util.logging.Level ClassDeclaration Modifier public /**
 * Locates where a given class is loaded from.
 *
 * @author Kohsuke Kawaguchi
 */ Which MethodDeclaration /**
     * Locates the jar file that contains the given class.
     *
     * @throws IllegalArgumentException
     *      if failed to determine.
     */ Modifier public static ReferenceType URL jarURL FormalParameter ReferenceType Class clazz IOException LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl MethodInvocation clazz getClassLoader IfStatement BinaryOperation == MemberReference cl Literal null StatementExpression Assignment MemberReference cl MethodInvocation ClassLoader getSystemClassLoader = End LocalVariableDeclaration ReferenceType URL VariableDeclarator res MethodInvocation cl BinaryOperation + MethodInvocation clazz MethodInvocation Literal '.' Literal '/' replace getName Literal "".class"" getResource IfStatement BinaryOperation == MemberReference res Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Unable to locate class file for "" MemberReference clazz End ReturnStatement MemberReference res MethodDeclaration /**
     * Locates the jar file that contains the given class.
     *
     * <p>
     * Note that jar files are not always loaded from {@link File},
     * so for diagnostics purposes {@link #jarURL(Class)} is preferrable.
     *
     * @throws IllegalArgumentException
     *      if failed to determine.
     */ Modifier public static ReferenceType File jarFile FormalParameter ReferenceType Class clazz IOException LocalVariableDeclaration ReferenceType URL VariableDeclarator res MethodInvocation MemberReference clazz jarURL LocalVariableDeclaration ReferenceType String VariableDeclarator resURL MethodInvocation res toExternalForm LocalVariableDeclaration ReferenceType String VariableDeclarator originalURL MemberReference resURL IfStatement BinaryOperation || MethodInvocation resURL Literal ""jar:file:"" startsWith MethodInvocation resURL Literal ""wsjar:file:"" startsWith ReturnStatement MethodInvocation MemberReference resURL fromJarUrlToFile End IfStatement MethodInvocation resURL Literal ""code-source:/"" startsWith BlockStatement StatementExpression Assignment MemberReference resURL MethodInvocation resURL Literal MethodInvocation length ""code-source:/"" MethodInvocation resURL Literal '!' lastIndexOf substring = ReturnStatement ClassCreator ReferenceType File MethodInvocation ClassCreator MethodInvocation getPath ReferenceType URL BinaryOperation + Literal ""file:/"" MemberReference resURL decode End IfStatement MethodInvocation resURL Literal ""zip:/"" startsWith BlockStatement StatementExpression Assignment MemberReference resURL MethodInvocation resURL Literal MethodInvocation length ""zip:/"" MethodInvocation resURL Literal '!' lastIndexOf substring = ReturnStatement ClassCreator ReferenceType File MethodInvocation ClassCreator MethodInvocation getPath ReferenceType URL BinaryOperation + Literal ""file:/"" MemberReference resURL decode End IfStatement MethodInvocation resURL Literal ""file:"" startsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation clazz MethodInvocation Literal ""\\."" split MemberReference length getName ForStatement ForControl BinaryOperation > MemberReference n Literal 0 MemberReference -- n BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation Math MethodInvocation resURL Literal '/' lastIndexOf MethodInvocation resURL Literal '\\' lastIndexOf max IfStatement BinaryOperation < MemberReference idx Literal 0 ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + MemberReference originalURL Literal "" - "" MemberReference resURL End StatementExpression Assignment MemberReference resURL MethodInvocation resURL Literal 0 MemberReference idx substring = End ReturnStatement ClassCreator ReferenceType File MethodInvocation ClassCreator MethodInvocation getPath ReferenceType URL MemberReference resURL decode End IfStatement MethodInvocation resURL Literal ""vfszip:"" startsWith BlockStatement LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is MethodInvocation res openStream TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator f MethodInvocation is MethodInvocation Literal ""delegate"" getDeclaredField getClass StatementExpression MethodInvocation f Literal true setAccessible LocalVariableDeclaration ReferenceType Object VariableDeclarator delegate MethodInvocation f MemberReference is get StatementExpression Assignment MemberReference f MethodInvocation delegate MethodInvocation Literal ""this$0"" getDeclaredField getClass = StatementExpression MethodInvocation f Literal true setAccessible LocalVariableDeclaration ReferenceType ZipFile VariableDeclarator zipFile Cast ReferenceType ZipFile MethodInvocation f MemberReference delegate get ReturnStatement ClassCreator ReferenceType File MethodInvocation zipFile getName CatchClause CatchClauseParameter NoSuchFieldException e CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation is close End LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator con MethodInvocation res openConnection IfStatement BinaryOperation instanceof MemberReference con ReferenceType JarURLConnection BlockStatement LocalVariableDeclaration ReferenceType JarURLConnection VariableDeclarator jcon Cast ReferenceType JarURLConnection MemberReference con LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarFile MethodInvocation jcon getJarFile LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation jarFile getName IfStatement BinaryOperation > MethodInvocation n length Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType File MemberReference n BlockStatement TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator f ClassReference MethodInvocation Literal ""name"" getDeclaredField ReferenceType ZipFile StatementExpression MethodInvocation f Literal true setAccessible ReturnStatement ClassCreator ReferenceType File Cast ReferenceType String MethodInvocation f MemberReference jarFile get CatchClause CatchClauseParameter NoSuchFieldException e StatementExpression MethodInvocation LOGGER MemberReference Level INFO BinaryOperation + Literal ""Failed to obtain the local cache file name of "" MemberReference clazz MemberReference e log CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOGGER MemberReference Level INFO BinaryOperation + Literal ""Failed to obtain the local cache file name of "" MemberReference clazz MemberReference e log End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + MemberReference originalURL Literal "" - "" MemberReference resURL MethodDeclaration Modifier public static ReferenceType File jarFile FormalParameter ReferenceType URL resource IOException ReturnStatement MethodInvocation MethodInvocation resource toExternalForm fromJarUrlToFile MethodDeclaration Modifier private static ReferenceType File fromJarUrlToFile FormalParameter ReferenceType String resURL MalformedURLException StatementExpression Assignment MemberReference resURL MethodInvocation resURL BinaryOperation + MethodInvocation resURL Literal ':' indexOf Literal 1 MethodInvocation resURL Literal '!' lastIndexOf substring = ReturnStatement ClassCreator ReferenceType File MethodInvocation ClassCreator MethodInvocation getPath ReferenceType URL MemberReference resURL decode MethodDeclaration /**
     * Decode '%HH'.
     */ Modifier private static ReferenceType String decode FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator baos ClassCreator ReferenceType ByteArrayOutputStream ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation s length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator ch MethodInvocation s MemberReference i charAt IfStatement BinaryOperation == MemberReference ch Literal '%' BlockStatement StatementExpression MethodInvocation baos BinaryOperation + BinaryOperation * MethodInvocation MethodInvocation s BinaryOperation + MemberReference i Literal 1 charAt hexToInt Literal 16 MethodInvocation MethodInvocation s BinaryOperation + MemberReference i Literal 2 charAt hexToInt write StatementExpression Assignment MemberReference i Literal 2 += ContinueStatement End StatementExpression MethodInvocation baos MemberReference ch write End TryStatement ReturnStatement ClassCreator ReferenceType String MethodInvocation baos toByteArray Literal ""UTF-8"" CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType Error MemberReference e MethodDeclaration Modifier private static BasicType int hexToInt FormalParameter BasicType int ch ReturnStatement MethodInvocation Character MemberReference ch getNumericValue FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Which getLogger",0
83,83,"CompilationUnit PackageDeclaration hudson Import hudson.model.Hudson Import java.io.IOException Import java.net.InetSocketAddress Import java.net.SocketAddress Import java.net.BindException Import java.nio.ByteBuffer Import java.nio.channels.ClosedByInterruptException Import java.nio.channels.DatagramChannel Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public /**
 * Monitors a UDP broadcast and respond with the location of the Hudson service.
 *
 * <p>
 * Useful for auto-discovery of Hudson in the network.
 *
 * @author Kohsuke Kawaguchi
 */ UDPBroadcastThread FieldDeclaration Modifier private final ReferenceType Hudson VariableDeclarator hudson ConstructorDeclaration Modifier public UDPBroadcastThread FormalParameter ReferenceType Hudson hudson StatementExpression SuperConstructorInvocation BinaryOperation + BinaryOperation + Literal ""Hudson UDP "" MemberReference PORT Literal "" monitoring thread"" StatementExpression Assignment This MemberReference hudson MemberReference hudson = MethodDeclaration Modifier public Annotation Override run TryStatement LocalVariableDeclaration ReferenceType DatagramChannel VariableDeclarator ch MethodInvocation DatagramChannel open TryStatement StatementExpression MethodInvocation ch MethodInvocation ClassCreator ReferenceType InetSocketAddress MemberReference PORT bind socket LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator b MethodInvocation ByteBuffer Literal 2048 allocate WhileStatement Literal true BlockStatement LocalVariableDeclaration ReferenceType SocketAddress VariableDeclarator sender MethodInvocation ch MemberReference b receive LocalVariableDeclaration ReferenceType TcpSlaveAgentListener VariableDeclarator tal MethodInvocation hudson getTcpSlaveAgentListener LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder Literal ""<hudson>"" StatementExpression MethodInvocation MemberReference buf Literal ""version"" MemberReference Hudson VERSION tag StatementExpression MethodInvocation MemberReference buf Literal ""url"" MethodInvocation hudson getRootUrl tag StatementExpression MethodInvocation MemberReference buf Literal ""slave-port"" TernaryExpression BinaryOperation == MemberReference tal Literal null Literal null MethodInvocation tal getPort tag ForStatement EnhancedForControl VariableDeclaration ReferenceType UDPBroadcastFragment VariableDeclarator f MethodInvocation UDPBroadcastFragment all StatementExpression MethodInvocation f MemberReference buf MemberReference sender buildFragment End StatementExpression MethodInvocation buf Literal ""</hudson>"" append StatementExpression MethodInvocation b clear StatementExpression MethodInvocation b MethodInvocation buf MethodInvocation Literal ""UTF-8"" getBytes toString put StatementExpression MethodInvocation b flip StatementExpression MethodInvocation ch MemberReference b MemberReference sender send End StatementExpression MethodInvocation ch close CatchClause CatchClauseParameter ClosedByInterruptException e CatchClause CatchClauseParameter BindException e StatementExpression MethodInvocation LOGGER MemberReference Level FINE BinaryOperation + Literal ""Failed to listen to UDP port "" MemberReference PORT MemberReference e log CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING Literal ""UDP handling problem"" MemberReference e log MethodDeclaration Modifier private tag FormalParameter ReferenceType StringBuilder buf FormalParameter ReferenceType String tag FormalParameter ReferenceType Object value IfStatement BinaryOperation == MemberReference value Literal null ReturnStatement End StatementExpression MethodInvocation buf MethodInvocation MemberReference tag append MethodInvocation Literal '>' append MethodInvocation MemberReference value append MethodInvocation Literal ""</"" append MethodInvocation MemberReference tag append MethodInvocation Literal '>' append Literal '<' append MethodDeclaration Modifier public shutdown StatementExpression MethodInvocation interrupt FieldDeclaration Modifier public final static BasicType int VariableDeclarator PORT MethodInvocation Integer Literal ""hudson.udp"" Literal 33848 getInteger FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType UDPBroadcastThread getLogger ReferenceType Thread",0
320,320,"CompilationUnit PackageDeclaration hudson.search Import hudson.model.ModelObject InterfaceDeclaration Modifier public /**
 * {@link ModelObject} that can be searched.
 *
 * <p>
 * This interface also extends {@link SearchItem} since
 * often {@link ModelObject}s form a natural tree structure,
 * and it's convenient for the model objects themselves to implement
 * the {@link SearchItem} for the edges that form this tree.
 *
 * @author Kohsuke Kawaguchi
 */ SearchableModelObject MethodDeclaration /**
     * This binds {@link Search} object to the URL hierarchy.
     */ ReferenceType Search getSearch ReferenceType ModelObject ReferenceType SearchItem",1
334,334,"CompilationUnit PackageDeclaration hudson.node_monitors Import hudson.model.AdministrativeMonitor Import hudson.Extension ClassDeclaration Modifier public Annotation Extension /**
 * If {@link NodeMonitor} marks the node as offline, we'll show this to the admin to get their attention.
 *
 * <p>
 * This also allows them to disable the monitoring if they don't like it.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.301
 */ MonitorMarkedNodeOffline FieldDeclaration Modifier public BasicType boolean VariableDeclarator active Literal false MethodDeclaration Modifier public BasicType boolean isActivated ReturnStatement MemberReference active ReferenceType AdministrativeMonitor",1
473,473,,0
360,360,,0
142,142,"CompilationUnit PackageDeclaration hudson.maven.reporters Import hudson.Launcher Import hudson.Extension Import hudson.maven.MavenBuild Import hudson.maven.MavenReporter Import hudson.maven.MavenReporterDescriptor Import hudson.maven.MavenModule Import hudson.model.BuildListener Import hudson.tasks.MailSender Import hudson.tasks.Mailer Import org.kohsuke.stapler.StaplerRequest Import java.io.IOException Import net.sf.json.JSONObject ClassDeclaration Modifier public /**
 * Sends out an e-mail notification for Maven build result.
 * @author Kohsuke Kawaguchi
 */ MavenMailer FieldDeclaration /**
     * @see Mailer
     */ Modifier public ReferenceType String VariableDeclarator recipients FieldDeclaration Modifier public BasicType boolean VariableDeclarator dontNotifyEveryUnstableBuild FieldDeclaration Modifier public BasicType boolean VariableDeclarator sendToIndividuals MethodDeclaration Modifier public BasicType boolean end FormalParameter ReferenceType MavenBuild build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener InterruptedException IOException StatementExpression ClassCreator MethodInvocation MemberReference build MemberReference listener execute ReferenceType MailSender MemberReference recipients MemberReference dontNotifyEveryUnstableBuild MemberReference sendToIndividuals ReturnStatement Literal true ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages MavenMailer_DisplayName MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/project-config/mailer.html"" MethodDeclaration Modifier public Annotation Override ReferenceType String getConfigPage ReturnStatement MethodInvocation ClassReference ReferenceType Mailer Literal ""config.jelly"" getViewPage MethodDeclaration Modifier public ReferenceType MavenReporter newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException LocalVariableDeclaration ReferenceType MavenMailer VariableDeclarator m ClassCreator ReferenceType MavenMailer StatementExpression MethodInvocation req MemberReference m Literal ""mailer_"" bindParameters StatementExpression Assignment MemberReference m dontNotifyEveryUnstableBuild BinaryOperation == MethodInvocation req Literal ""mailer_notifyEveryUnstableBuild"" getParameter Literal null = ReturnStatement MemberReference m ReferenceType MavenReporterDescriptor FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType MavenReporter",1
280,280,"CompilationUnit PackageDeclaration hudson Import org.acegisecurity.AcegiSecurityException Import org.apache.commons.jelly.JellyContext Import org.apache.commons.jelly.JellyException Import org.apache.commons.jelly.expression.Expression Import org.apache.commons.jelly.expression.ExpressionFactory Import org.apache.commons.jelly.expression.ExpressionSupport Import org.apache.commons.jexl.JexlContext Import java.util.Collection Import java.util.Map Import java.util.Set Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier final /**
 * {@link ExpressionFactory} so that security exception aborts the page rendering.
 *
 * @author Kohsuke Kawaguchi
*/ ExpressionFactory2 MethodDeclaration Modifier public ReferenceType Expression createExpression FormalParameter ReferenceType String text JellyException TryStatement ReturnStatement ClassCreator ReferenceType JexlExpression MethodInvocation org.apache.commons.jexl.ExpressionFactory MemberReference text createExpression CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType JellyException BinaryOperation + Literal ""Unable to create expression: "" MemberReference text MemberReference e ClassDeclaration Modifier final static JexlExpression FieldDeclaration /** The Jexl expression object */ Modifier private ReferenceType org ReferenceType apache ReferenceType commons ReferenceType jexl ReferenceType Expression VariableDeclarator expression ConstructorDeclaration Modifier public JexlExpression FormalParameter ReferenceType org ReferenceType apache ReferenceType commons ReferenceType jexl ReferenceType Expression expression StatementExpression Assignment This MemberReference expression MemberReference expression = MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal ""["" MethodInvocation expression getExpression Literal ""]"" MethodDeclaration Modifier public ReferenceType String getExpressionText ReturnStatement BinaryOperation + BinaryOperation + Literal ""${"" MethodInvocation expression getExpression Literal ""}"" MethodDeclaration Modifier public ReferenceType Object evaluate FormalParameter ReferenceType JellyContext context TryStatement StatementExpression MethodInvocation CURRENT_CONTEXT MemberReference context set LocalVariableDeclaration ReferenceType JexlContext VariableDeclarator jexlContext ClassCreator ReferenceType JellyJexlContext MemberReference context ReturnStatement MethodInvocation expression MemberReference jexlContext evaluate CatchClause CatchClauseParameter AcegiSecurityException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Caught exception evaluating: "" MemberReference expression Literal "". Reason: "" MemberReference e MemberReference e log ReturnStatement Literal null StatementExpression MethodInvocation CURRENT_CONTEXT Literal null set FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType JexlExpression getLogger ReferenceType ExpressionSupport ClassDeclaration Modifier final static JellyJexlContext FieldDeclaration Modifier private ReferenceType Map VariableDeclarator vars ConstructorDeclaration JellyJexlContext FormalParameter ReferenceType JellyContext context StatementExpression Assignment This MemberReference vars ClassCreator ReferenceType JellyMap MemberReference context = MethodDeclaration Modifier public setVars FormalParameter ReferenceType Map vars StatementExpression This MemberReference vars MethodInvocation clear StatementExpression This MemberReference vars MethodInvocation MemberReference vars putAll MethodDeclaration Modifier public ReferenceType Map getVars ReturnStatement This MemberReference vars ReferenceType JexlContext ClassDeclaration Modifier final static JellyMap FieldDeclaration Modifier private ReferenceType JellyContext VariableDeclarator context ConstructorDeclaration JellyMap FormalParameter ReferenceType JellyContext context StatementExpression Assignment This MemberReference context MemberReference context = MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object key ReturnStatement MethodInvocation context Cast ReferenceType String MemberReference key getVariable MethodDeclaration Modifier public clear MethodDeclaration Modifier public BasicType boolean containsKey FormalParameter ReferenceType Object key ReturnStatement BinaryOperation != MethodInvocation MemberReference key get Literal null MethodDeclaration Modifier public BasicType boolean containsValue FormalParameter ReferenceType Object value ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType Set entrySet ReturnStatement Literal null MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType Set keySet ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object put FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value ReturnStatement Literal null MethodDeclaration Modifier public putAll FormalParameter ReferenceType Map t MethodDeclaration Modifier public ReferenceType Object remove FormalParameter ReferenceType Object key ReturnStatement Literal null MethodDeclaration Modifier public BasicType int size ReturnStatement Literal - 1 MethodDeclaration Modifier public ReferenceType Collection values ReturnStatement Literal null ReferenceType Map FieldDeclaration /**
     * When called from within the JEXL expression evaluation,
     * retains the current {@link JellyContext}.
     *
     * @see Functions#getCurrentJellyContext()
     */ Modifier final protected static ReferenceType ThreadLocal TypeArgument ReferenceType JellyContext VariableDeclarator CURRENT_CONTEXT ClassCreator ReferenceType ThreadLocal TypeArgument ReferenceType JellyContext ReferenceType ExpressionFactory",0
245,245,"CompilationUnit PackageDeclaration /**
 * Copyright (c) 2008-2009 Yahoo! Inc. 
 * All rights reserved. 
 * The copyrights to the contents of this file are licensed under the MIT License (http://www.opensource.org/licenses/mit-license.php)
 */ hudson.security.csrf Import org.kohsuke.stapler.StaplerRequest Import hudson.Util Import hudson.model.Descriptor ClassDeclaration Modifier public abstract /**
 * Describes global configuration for crumb issuers. Create subclasses to specify
 * additional global configuration for custom crumb issuers.
 * 
 * @author dty
 *
 */ CrumbIssuerDescriptor FieldDeclaration Modifier private ReferenceType String VariableDeclarator crumbSalt FieldDeclaration Modifier private ReferenceType String VariableDeclarator crumbRequestField ConstructorDeclaration Modifier protected /**
     * Crumb issuers always take a salt and a request field name.
     *
     * @param salt Salt value
     * @param crumbRequestField Request parameter name containing crumb from previous response
     */ CrumbIssuerDescriptor FormalParameter ReferenceType String salt FormalParameter ReferenceType String crumbRequestField StatementExpression MethodInvocation MemberReference salt setCrumbSalt StatementExpression MethodInvocation MemberReference crumbRequestField setCrumbRequestField MethodDeclaration /**
     * Get the salt value.
     * @return
     */ Modifier public ReferenceType String getCrumbSalt ReturnStatement MemberReference crumbSalt MethodDeclaration /**
     * Set the salt value. Must not be null.
     * @param salt
     */ Modifier public setCrumbSalt FormalParameter ReferenceType String salt IfStatement BinaryOperation == MethodInvocation Util MemberReference salt fixEmptyAndTrim Literal null BlockStatement StatementExpression Assignment MemberReference crumbSalt Literal ""hudson.crumb"" = BlockStatement StatementExpression Assignment MemberReference crumbSalt MemberReference salt = End MethodDeclaration /**
     * Gets the request parameter name that contains the crumb generated from a
     * previous response.
     *
     * @return
     */ Modifier public ReferenceType String getCrumbRequestField ReturnStatement MemberReference crumbRequestField MethodDeclaration /**
     * Set the request parameter name. Must not be null.
     *
     * @param requestField
     */ Modifier public setCrumbRequestField FormalParameter ReferenceType String requestField IfStatement BinaryOperation == MethodInvocation Util MemberReference requestField fixEmptyAndTrim Literal null BlockStatement StatementExpression Assignment MemberReference crumbRequestField Literal "".crumb"" = BlockStatement StatementExpression Assignment MemberReference crumbRequestField MemberReference requestField = End TypeParameter T ReferenceType CrumbIssuer ReferenceType Descriptor TypeArgument ReferenceType CrumbIssuer",0
470,470,,0
341,341,"CompilationUnit PackageDeclaration hudson.triggers Import hudson.model.Descriptor Import hudson.model.Item Import hudson.scm.SCM ClassDeclaration Modifier public abstract /**
 * {@link Descriptor} for Trigger.
 * @author Kohsuke Kawaguchi
 */ TriggerDescriptor ConstructorDeclaration Modifier protected TriggerDescriptor FormalParameter ReferenceType Class TypeArgument ReferenceType Trigger TypeArgument ? extends clazz StatementExpression SuperConstructorInvocation MemberReference clazz ConstructorDeclaration Modifier protected /**
     * Infers the type of the corresponding {@link SCM} from the outer class.
     * This version works when you follow the common convention, where a descriptor
     * is written as the static nested class of the describable class.
     *
     * @since 1.278
     */ TriggerDescriptor MethodDeclaration /**
     * Returns true if this trigger is applicable to the
     * given {@link Item}.
     *
     * @return
     *      true to allow user to configure a trigger for this item.
     */ Modifier public abstract BasicType boolean isApplicable FormalParameter ReferenceType Item item ReferenceType Descriptor TypeArgument ReferenceType Trigger TypeArgument ?",1
511,511,,0
293,293,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.FilePath Import hudson.Launcher Import hudson.Util Import hudson.Extension Import hudson.model  Import hudson.util.FormValidation Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.AncestorInPath Import javax.servlet.ServletException Import java.io.File Import java.io.IOException ClassDeclaration Modifier public /**
 * Saves Javadoc for the project and publish them. 
 *
 * @author Kohsuke Kawaguchi
 */ JavadocArchiver FieldDeclaration /**
     * Path to the Javadoc directory in the workspace.
     */ Modifier private final ReferenceType String VariableDeclarator javadocDir FieldDeclaration /**
     * If true, retain javadoc for all the successful builds.
     */ Modifier private final BasicType boolean VariableDeclarator keepAll ConstructorDeclaration Modifier public Annotation DataBoundConstructor JavadocArchiver FormalParameter ReferenceType String javadoc_dir FormalParameter BasicType boolean keep_all StatementExpression Assignment This MemberReference javadocDir MemberReference javadoc_dir = StatementExpression Assignment This MemberReference keepAll MemberReference keep_all = MethodDeclaration Modifier public ReferenceType String getJavadocDir ReturnStatement MemberReference javadocDir MethodDeclaration Modifier public BasicType boolean isKeepAll ReturnStatement MemberReference keepAll MethodDeclaration /**
     * Gets the directory where the Javadoc is stored for the given project.
     */ Modifier private static ReferenceType File getJavadocDir FormalParameter ReferenceType AbstractItem project ReturnStatement ClassCreator ReferenceType File MethodInvocation project getRootDir Literal ""javadoc"" MethodDeclaration /**
     * Gets the directory where the Javadoc is stored for the given build.
     */ Modifier private static ReferenceType File getJavadocDir FormalParameter ReferenceType Run run ReturnStatement ClassCreator ReferenceType File MethodInvocation run getRootDir Literal ""javadoc"" MethodDeclaration Modifier public BasicType boolean perform FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener InterruptedException StatementExpression MethodInvocation listener MethodInvocation MethodInvocation Messages JavadocArchiver_Publishing println getLogger LocalVariableDeclaration ReferenceType FilePath VariableDeclarator javadoc MethodInvocation build MethodInvocation getWorkspace MethodInvocation MemberReference javadocDir child getParent LocalVariableDeclaration ReferenceType FilePath VariableDeclarator target ClassCreator ReferenceType FilePath TernaryExpression MemberReference keepAll MethodInvocation MemberReference build getJavadocDir MethodInvocation MethodInvocation build getProject getJavadocDir TryStatement IfStatement BinaryOperation == MethodInvocation javadoc Literal ""**/*"" MemberReference target copyRecursiveTo Literal 0 BlockStatement IfStatement MethodInvocation build MethodInvocation MemberReference Result UNSTABLE isBetterOrEqualTo getResult BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages MemberReference javadoc MethodInvocation javadoc Literal ""**/*"" validateAntFileMask JavadocArchiver_NoMatchFound error End StatementExpression MethodInvocation build MemberReference Result FAILURE setResult ReturnStatement Literal true End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Util MemberReference e MemberReference listener displayIOException StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages MemberReference javadoc MemberReference target JavadocArchiver_UnableToCopy fatalError printStackTrace StatementExpression MethodInvocation build MemberReference Result FAILURE setResult ReturnStatement Literal true IfStatement MemberReference keepAll StatementExpression MethodInvocation build ClassCreator ReferenceType JavadocBuildAction MemberReference build addAction End ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType Action getProjectAction FormalParameter ReferenceType AbstractProject project ReturnStatement ClassCreator ReferenceType JavadocAction MemberReference project ClassDeclaration Modifier protected static abstract BaseJavadocAction MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""javadoc"" MethodDeclaration Modifier public ReferenceType String getDisplayName IfStatement ClassCreator MethodInvocation exists ReferenceType File MethodInvocation dir Literal ""help-doc.html"" ReturnStatement MethodInvocation Messages JavadocArchiver_DisplayName_Javadoc ReturnStatement MethodInvocation Messages JavadocArchiver_DisplayName_Generic End MethodDeclaration Modifier public ReferenceType String getIconFileName IfStatement MethodInvocation MethodInvocation exists dir ReturnStatement Literal ""help.gif"" ReturnStatement Literal null End MethodDeclaration /**
         * Serves javadoc.
         */ Modifier public doDynamic FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression ClassCreator MethodInvocation MemberReference req MemberReference rsp This generateResponse ReferenceType DirectoryBrowserSupport This ClassCreator ReferenceType FilePath MethodInvocation dir MethodInvocation getTitle Literal ""help.gif"" Literal false MethodDeclaration Modifier protected abstract ReferenceType String getTitle MethodDeclaration Modifier protected abstract ReferenceType File dir ReferenceType Action ClassDeclaration Modifier public static JavadocAction FieldDeclaration Modifier private final ReferenceType AbstractItem VariableDeclarator project ConstructorDeclaration Modifier public JavadocAction FormalParameter ReferenceType AbstractItem project StatementExpression Assignment This MemberReference project MemberReference project = MethodDeclaration Modifier protected ReferenceType File dir IfStatement BinaryOperation instanceof MemberReference project ReferenceType AbstractProject BlockStatement LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator abstractProject Cast ReferenceType AbstractProject MemberReference project LocalVariableDeclaration ReferenceType Run VariableDeclarator run MethodInvocation abstractProject getLastSuccessfulBuild IfStatement BinaryOperation != MemberReference run Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator javadocDir MethodInvocation MemberReference run getJavadocDir IfStatement MethodInvocation javadocDir exists ReturnStatement MemberReference javadocDir End End End ReturnStatement MethodInvocation MemberReference project getJavadocDir MethodDeclaration Modifier protected ReferenceType String getTitle ReturnStatement BinaryOperation + MethodInvocation project getDisplayName Literal "" javadoc"" ReferenceType BaseJavadocAction ReferenceType ProminentProjectAction ClassDeclaration Modifier public static JavadocBuildAction FieldDeclaration Modifier private final ReferenceType AbstractBuild TypeArgument ? TypeArgument ? VariableDeclarator build ConstructorDeclaration Modifier public JavadocBuildAction FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build StatementExpression Assignment This MemberReference build MemberReference build = MethodDeclaration Modifier protected ReferenceType String getTitle ReturnStatement BinaryOperation + MethodInvocation build getDisplayName Literal "" javadoc"" MethodDeclaration Modifier protected ReferenceType File dir ReturnStatement MethodInvocation MemberReference build getJavadocDir ReferenceType BaseJavadocAction ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages JavadocArchiver_DisplayName MethodDeclaration /**
         * Performs on-the-fly validation on the file mask wildcard.
         */ Modifier public ReferenceType FormValidation doCheck FormalParameter Annotation AncestorInPath ReferenceType AbstractProject project FormalParameter Annotation QueryParameter ReferenceType String value IOException ServletException LocalVariableDeclaration ReferenceType FilePath VariableDeclarator ws MethodInvocation project getWorkspace ReturnStatement TernaryExpression BinaryOperation != MemberReference ws Literal null MethodInvocation ws MemberReference value validateRelativeDirectory MethodInvocation FormValidation ok MethodDeclaration Modifier public BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType AbstractProject extends jobType ReturnStatement Literal true ReferenceType BuildStepDescriptor TypeArgument ReferenceType Publisher ReferenceType Recorder",0
350,350,"CompilationUnit PackageDeclaration hudson.tasks.junit Import hudson.model.AbstractBuild Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.kohsuke.stapler.export.Exported Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.List Import java.util.Map Import java.util.TreeMap ClassDeclaration Modifier public final /**
 * Cumulative test result for a package.
 *
 * @author Kohsuke Kawaguchi
 */ PackageResult FieldDeclaration Modifier private final ReferenceType String VariableDeclarator packageName FieldDeclaration /**
     * All {@link ClassResult}s keyed by their short name.
     */ Modifier private final ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType ClassResult VariableDeclarator classes ClassCreator ReferenceType TreeMap TypeArgument ReferenceType String TypeArgument ReferenceType ClassResult FieldDeclaration Modifier private BasicType int VariableDeclarator passCount VariableDeclarator failCount VariableDeclarator skipCount FieldDeclaration Modifier private final ReferenceType TestResult VariableDeclarator parent FieldDeclaration Modifier private BasicType float VariableDeclarator duration ConstructorDeclaration PackageResult FormalParameter ReferenceType TestResult parent FormalParameter ReferenceType String packageName StatementExpression Assignment This MemberReference packageName MemberReference packageName = StatementExpression Assignment This MemberReference parent MemberReference parent = MethodDeclaration Modifier public Annotation Exported ElementValuePair visibility Literal 999 ReferenceType String getName ReturnStatement MemberReference packageName MethodDeclaration Modifier public Annotation Override ReferenceType String getSafeName ReturnStatement MethodInvocation MethodInvocation parent getChildren MethodInvocation MethodInvocation getName safe uniquifyName MethodDeclaration Modifier public ReferenceType AbstractBuild TypeArgument ? TypeArgument ? getOwner ReturnStatement MethodInvocation parent getOwner MethodDeclaration Modifier public ReferenceType PackageResult getPreviousResult LocalVariableDeclaration ReferenceType TestResult VariableDeclarator tr MethodInvocation parent getPreviousResult IfStatement BinaryOperation == MemberReference tr Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation tr MethodInvocation getName byPackage MethodDeclaration Modifier public ReferenceType String getTitle ReturnStatement MethodInvocation Messages MethodInvocation getName PackageResult_getTitle MethodDeclaration Modifier public ReferenceType String getChildTitle ReturnStatement MethodInvocation Messages PackageResult_getChildTitle MethodDeclaration Modifier public BasicType float getDuration ReturnStatement MemberReference duration MethodDeclaration Modifier public Annotation Exported BasicType int getPassCount ReturnStatement MemberReference passCount MethodDeclaration Modifier public Annotation Exported BasicType int getFailCount ReturnStatement MemberReference failCount MethodDeclaration Modifier public Annotation Exported BasicType int getSkipCount ReturnStatement MemberReference skipCount MethodDeclaration Modifier public ReferenceType ClassResult getDynamic FormalParameter ReferenceType String name FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp ReturnStatement MethodInvocation classes MemberReference name get MethodDeclaration Modifier public Annotation Exported ElementValuePair name Literal ""child"" ReferenceType Collection TypeArgument ReferenceType ClassResult getChildren ReturnStatement MethodInvocation classes values MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType CaseResult getFailedTests LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType CaseResult VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType CaseResult ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassResult VariableDeclarator clr MethodInvocation classes values BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType CaseResult VariableDeclarator cr MethodInvocation clr getChildren BlockStatement IfStatement BinaryOperation && MethodInvocation ! cr isPassed MethodInvocation ! cr isSkipped StatementExpression MethodInvocation r MemberReference cr add End End End StatementExpression MethodInvocation Collections MemberReference r MemberReference CaseResult BY_AGE sort ReturnStatement MemberReference r MethodDeclaration add FormalParameter ReferenceType CaseResult r LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation r getSimpleName VariableDeclarator sn MethodInvocation MemberReference n safe LocalVariableDeclaration ReferenceType ClassResult VariableDeclarator c MethodInvocation classes MemberReference sn get IfStatement BinaryOperation == MemberReference c Literal null StatementExpression MethodInvocation classes MemberReference sn Assignment MemberReference c ClassCreator ReferenceType ClassResult This MemberReference n = put End StatementExpression MethodInvocation c MemberReference r add StatementExpression Assignment MemberReference duration MethodInvocation r getDuration += MethodDeclaration freeze StatementExpression Assignment MemberReference passCount Assignment MemberReference failCount Literal 0 = = ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassResult VariableDeclarator cr MethodInvocation classes values BlockStatement StatementExpression MethodInvocation cr freeze StatementExpression Assignment MemberReference passCount MethodInvocation cr getPassCount += StatementExpression Assignment MemberReference failCount MethodInvocation cr getFailCount += StatementExpression Assignment MemberReference skipCount MethodInvocation cr getSkipCount += End MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType PackageResult that ReturnStatement This MemberReference packageName MethodInvocation MemberReference that packageName compareTo MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MemberReference packageName ReferenceType MetaTabulatedResult ReferenceType Comparable TypeArgument ReferenceType PackageResult",0
442,442,,1
19,19,"CompilationUnit PackageDeclaration hudson.remoting Import java.io.OutputStream Import java.io.IOException ClassDeclaration Modifier public /**
 * This class is equivalent to <code>java.io.PipedOutputStream</code>. In the
 * interface it only adds a constructor which allows for specifying the buffer
 * size. Its implementation, however, is much simpler and a lot more efficient
 * than its equivalent. It doesn't rely on polling. Instead it uses proper
 * synchronization with its counterpart {@link FastPipedInputStream}.
 *
 * @author WD
 * @link http://developer.java.sun.com/developer/bugParade/bugs/4404700.html
 * @see FastPipedOutputStream
 */ FastPipedOutputStream FieldDeclaration ReferenceType FastPipedInputStream VariableDeclarator sink ConstructorDeclaration Modifier public /**
     * Creates an unconnected PipedOutputStream.
     */ FastPipedOutputStream StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier public /**
     * Creates a PipedOutputStream with a default buffer size and connects it to
     * <code>sink</code>.
     * @exception IOException It was already connected.
     */ FastPipedOutputStream FormalParameter ReferenceType FastPipedInputStream sink IOException StatementExpression ExplicitConstructorInvocation MemberReference sink Literal 65536 ConstructorDeclaration Modifier public /**
     * Creates a PipedOutputStream with buffer size <code>bufferSize</code> and
     * connects it to <code>sink</code>.
     * @exception IOException It was already connected.
     */ FastPipedOutputStream FormalParameter ReferenceType FastPipedInputStream sink FormalParameter BasicType int bufferSize IOException StatementExpression SuperConstructorInvocation IfStatement BinaryOperation != MemberReference sink Literal null BlockStatement StatementExpression MethodInvocation MemberReference sink connect StatementExpression Assignment MemberReference sink buffer ArrayCreator BasicType byte MemberReference bufferSize = End MethodDeclaration /**
     * @exception IOException The pipe is not connected.
     */ Modifier public Annotation Override close IOException IfStatement BinaryOperation == MemberReference sink Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal ""Unconnected pipe"" End SynchronizedStatement MemberReference sink buffer StatementExpression Assignment MemberReference sink closed Literal true = StatementExpression MethodInvocation flush MethodDeclaration /**
     * @exception IOException The pipe is already connected.
     */ Modifier public connect FormalParameter ReferenceType FastPipedInputStream sink IOException IfStatement BinaryOperation != This MemberReference sink Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal ""Pipe already connected"" End StatementExpression Assignment This MemberReference sink MemberReference sink = StatementExpression Assignment MemberReference sink source This = MethodDeclaration Modifier protected Annotation Override finalize Throwable StatementExpression SuperMethodInvocation finalize StatementExpression MethodInvocation close MethodDeclaration Modifier public Annotation Override flush IOException SynchronizedStatement MemberReference sink buffer StatementExpression MethodInvocation sink.buffer notifyAll MethodDeclaration Modifier public write FormalParameter BasicType int b IOException StatementExpression MethodInvocation ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte MemberReference b write MethodDeclaration Modifier public Annotation Override write FormalParameter BasicType byte b IOException StatementExpression MethodInvocation MemberReference b Literal 0 MemberReference b length write MethodDeclaration /**
     * @exception IOException The pipe is not connected or a reader has closed it.
     */ Modifier public Annotation Override write FormalParameter BasicType byte b FormalParameter BasicType int off FormalParameter BasicType int len IOException IfStatement BinaryOperation == MemberReference sink Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal ""Unconnected pipe"" End IfStatement MemberReference sink closed BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal ""Broken pipe"" End WhileStatement BinaryOperation > MemberReference len Literal 0 BlockStatement SynchronizedStatement MemberReference sink buffer IfStatement BinaryOperation && BinaryOperation == MemberReference sink writePosition MemberReference sink readPosition BinaryOperation > MemberReference sink writeLaps MemberReference sink readLaps BlockStatement TryStatement StatementExpression MethodInvocation sink.buffer wait CatchClause CatchClauseParameter InterruptedException e ThrowStatement ClassCreator ReferenceType IOException MethodInvocation e getMessage ContinueStatement End LocalVariableDeclaration BasicType int VariableDeclarator amount MethodInvocation Math MemberReference len BinaryOperation - TernaryExpression BinaryOperation < MemberReference sink writePosition MemberReference sink readPosition MemberReference sink readPosition MemberReference sink.buffer length MemberReference sink writePosition min StatementExpression MethodInvocation System MemberReference b MemberReference off MemberReference sink buffer MemberReference sink writePosition MemberReference amount arraycopy StatementExpression Assignment MemberReference sink writePosition MemberReference amount += IfStatement BinaryOperation == MemberReference sink writePosition MemberReference sink.buffer length BlockStatement StatementExpression Assignment MemberReference sink writePosition Literal 0 = StatementExpression MemberReference ++ sink writeLaps End StatementExpression Assignment MemberReference off MemberReference amount += StatementExpression Assignment MemberReference len MemberReference amount -= StatementExpression MethodInvocation sink.buffer notifyAll End ReferenceType OutputStream",0
250,250,"CompilationUnit PackageDeclaration hudson.matrix Import hudson.Util Import java.util.Arrays Import java.util.Collection Import java.util.Collections Import java.util.HashMap Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Map Import java.util.Set Import java.util.StringTokenizer Import java.util.TreeMap Import java.lang.Boolean.TRUE  Import groovy.lang.Binding Import groovy.lang.GroovyShell ClassDeclaration Modifier public final /**
 * A particular combination of {@link Axis} values.
 *
 * For example, when axes are ""x={1,2},y={3,4}"", then
 * [x=1,y=3] is a combination (out of 4 possible combinations)
 *
 * @author Kohsuke Kawaguchi
 */ Combination ConstructorDeclaration Modifier public Combination FormalParameter ReferenceType AxisList axisList FormalParameter ReferenceType List TypeArgument ReferenceType String values ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation axisList size MemberReference ++ i StatementExpression SuperMethodInvocation MethodInvocation axisList MemberReference name MemberReference i get MethodInvocation values MemberReference i get put End ConstructorDeclaration Modifier public Combination FormalParameter ReferenceType AxisList axisList FormalParameter ReferenceType String values  StatementExpression ExplicitConstructorInvocation MemberReference axisList MethodInvocation Arrays MemberReference values asList ConstructorDeclaration Modifier public Combination FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String keyValuePairs ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation keyValuePairs entrySet StatementExpression SuperMethodInvocation MethodInvocation e getKey MethodInvocation e getValue put End MethodDeclaration /**
     * Obtains the continuous unique index number of this {@link Combination}
     * in the given {@link AxisList}.
     */ Modifier public BasicType int toIndex FormalParameter ReferenceType AxisList axis LocalVariableDeclaration BasicType int VariableDeclarator r Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Axis VariableDeclarator a MemberReference axis BlockStatement StatementExpression Assignment MemberReference r MethodInvocation a size *= StatementExpression Assignment MemberReference r MethodInvocation a MethodInvocation MemberReference a name get indexOf += End ReturnStatement MemberReference r MethodDeclaration /**
     * Obtains a number N such that ""N%M==0"" would create
     * a reasonable sparse matrix for integer M.
     *
     * <p>
     * This is bit like {@link #toIndex(AxisList)}, but instead
     * of creating a continuous number (which often maps different
     * values of the same axis to the same index in modulo N residue ring,
     * we use a prime number P as the base. I think this guarantees the uniform
     * distribution in any N smaller than 2P (but proof, anyone?)
     */ Modifier private BasicType long toModuloIndex FormalParameter ReferenceType AxisList axis LocalVariableDeclaration BasicType long VariableDeclarator r Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Axis VariableDeclarator a MemberReference axis BlockStatement StatementExpression Assignment MemberReference r MethodInvocation a MethodInvocation MemberReference a name get indexOf += StatementExpression Assignment MemberReference r Literal 31 *= End ReturnStatement MemberReference r MethodDeclaration /**
     * Evaluates the given Groovy expression with values bound from this combination.
     *
     * <p>
     * For example, if this combination is a=X,b=Y, then expressions like <tt>a==""X""</tt> would evaluate to
     * true.
     */ Modifier public BasicType boolean evalGroovyExpression FormalParameter ReferenceType AxisList axes FormalParameter ReferenceType String expression IfStatement BinaryOperation == MethodInvocation Util MemberReference expression fixEmptyAndTrim Literal null ReturnStatement Literal true End LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding ClassCreator ReferenceType Binding ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation entrySet StatementExpression MethodInvocation binding MethodInvocation e getKey MethodInvocation e getValue setVariable End StatementExpression MethodInvocation binding Literal ""index"" MethodInvocation MemberReference axes toModuloIndex setVariable StatementExpression MethodInvocation binding Literal ""uniqueId"" MethodInvocation MemberReference axes toIndex setVariable LocalVariableDeclaration ReferenceType GroovyShell VariableDeclarator shell ClassCreator ReferenceType GroovyShell MemberReference binding LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation shell BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""use("" ClassReference MethodInvocation getName MethodInvocation Literal '$' Literal '.' replace ReferenceType BooleanCategory Literal "") {"" MemberReference expression Literal ""}"" evaluate ReturnStatement MethodInvocation TRUE MemberReference result equals MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Combination that LocalVariableDeclaration BasicType int VariableDeclarator d BinaryOperation - This MethodInvocation size MethodInvocation that size IfStatement BinaryOperation != MemberReference d Literal 0 ReturnStatement MemberReference d End LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator itr This MethodInvocation entrySet MethodInvocation iterator LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator jtr MethodInvocation that MethodInvocation iterator entrySet WhileStatement MethodInvocation itr hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator i MethodInvocation itr next LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator j MethodInvocation jtr next StatementExpression Assignment MemberReference d MethodInvocation i MethodInvocation MethodInvocation j getKey compareTo getKey = IfStatement BinaryOperation != MemberReference d Literal 0 ReturnStatement MemberReference d End StatementExpression Assignment MemberReference d MethodInvocation i MethodInvocation MethodInvocation j getValue compareTo getValue = IfStatement BinaryOperation != MemberReference d Literal 0 ReturnStatement MemberReference d End End ReturnStatement Literal 0 MethodDeclaration /**
     * Works like {@link #toString()} but only include the given axes.
     */ Modifier public ReferenceType String toString FormalParameter ReferenceType Collection TypeArgument ReferenceType Axis subset IfStatement BinaryOperation && BinaryOperation == MethodInvocation size Literal 1 BinaryOperation == MethodInvocation subset size Literal 1 ReturnStatement MethodInvocation MethodInvocation iterator MethodInvocation next values End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Axis VariableDeclarator a MemberReference subset BlockStatement IfStatement BinaryOperation > MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ',' append End StatementExpression MethodInvocation buf MethodInvocation Literal '=' append MethodInvocation MethodInvocation MemberReference a name get append MemberReference a name append End IfStatement BinaryOperation == MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ""default"" append End ReturnStatement MethodInvocation buf toString MethodDeclaration /**
     * Converts to the ID string representation:
     * <tt>axisName=value,axisName=value,...</tt>
     *
     * @param sep1
     *      The separator between multiple axes.
     * @param sep2
     *      The separator between axis name and value.
     */ Modifier public ReferenceType String toString FormalParameter BasicType char sep1 FormalParameter BasicType char sep2 LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation entrySet BlockStatement IfStatement BinaryOperation > MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf MemberReference sep1 append End StatementExpression MethodInvocation buf MethodInvocation MemberReference sep2 append MethodInvocation MethodInvocation e getValue append MethodInvocation e getKey append End IfStatement BinaryOperation == MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ""default"" append End ReturnStatement MethodInvocation buf toString MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation Literal ',' Literal '=' toString MethodDeclaration /**
     * Gets the 8 character-wide hash code for this combination
     */ Modifier public ReferenceType String digest ReturnStatement MethodInvocation Util MethodInvocation toString getDigestOf MethodDeclaration /**
     * Reverse operation of {@link #toString()}.
     */ Modifier public static ReferenceType Combination fromString FormalParameter ReferenceType String id IfStatement MethodInvocation id Literal ""default"" equals ReturnStatement ClassCreator ReferenceType Combination MethodInvocation TypeArgument ReferenceType String TypeArgument ReferenceType String Collections End LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator m ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference id Literal "","" WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation tokens nextToken LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation token Literal '=' indexOf IfStatement BinaryOperation < MemberReference idx Literal 0 ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Can't parse "" MemberReference id End StatementExpression MethodInvocation m MethodInvocation token Literal 0 MemberReference idx substring MethodInvocation token BinaryOperation + MemberReference idx Literal 1 substring put End ReturnStatement ClassCreator ReferenceType Combination MemberReference m MethodDeclaration /**
     * Creates compact string representataion suitable for display purpose.
     *
     * <p>
     * The string is made compact by looking for {@link Axis} whose values
     * are unique, and omit the axis name.
     */ Modifier public ReferenceType String toCompactString FormalParameter ReferenceType AxisList axes LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator nonUniqueAxes ClassCreator ReferenceType HashSet TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Axis VariableDeclarator axisByValue ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Axis ForStatement EnhancedForControl VariableDeclaration ReferenceType Axis VariableDeclarator a MemberReference axes BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator v MemberReference a values BlockStatement LocalVariableDeclaration ReferenceType Axis VariableDeclarator old MethodInvocation axisByValue MemberReference v MemberReference a put IfStatement BinaryOperation != MemberReference old Literal null BlockStatement StatementExpression MethodInvocation nonUniqueAxes MemberReference old name add StatementExpression MethodInvocation nonUniqueAxes MemberReference a name add End End End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator e MethodInvocation entrySet BlockStatement IfStatement BinaryOperation > MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ',' append End IfStatement MethodInvocation nonUniqueAxes MethodInvocation e getKey contains StatementExpression MethodInvocation buf MethodInvocation Literal '=' append MethodInvocation e getKey append End StatementExpression MethodInvocation buf MethodInvocation e getValue append End IfStatement BinaryOperation == MethodInvocation buf length Literal 0 StatementExpression MethodInvocation buf Literal ""default"" append End ReturnStatement MethodInvocation buf toString MethodDeclaration Modifier public clear ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public putAll FormalParameter ReferenceType Map TypeArgument ReferenceType String extends TypeArgument ReferenceType String extends map ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType String put FormalParameter ReferenceType String key FormalParameter ReferenceType String value ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType String remove FormalParameter ReferenceType Object key ThrowStatement ClassCreator ReferenceType UnsupportedOperationException ClassDeclaration Modifier public final static /**
     * Duck-typing for boolean expressions.
     *
     * @see Combination#evalGroovyExpression(AxisList,String)
     */ BooleanCategory MethodDeclaration /**
         * x -> y
         */ Modifier public static ReferenceType Boolean implies FormalParameter ReferenceType Boolean lhs FormalParameter ReferenceType Boolean rhs ReturnStatement BinaryOperation || MemberReference ! lhs MemberReference rhs ReferenceType TreeMap TypeArgument ReferenceType String TypeArgument ReferenceType String ReferenceType Comparable TypeArgument ReferenceType Combination",0
565,565,,0
6,6,"CompilationUnit PackageDeclaration hudson.util ClassDeclaration Modifier public final /**
 * OConcurrency primitive.
 *
 * <p>
 * A {@link OneShotEvent} is like a pandora's box.
 * It starts with the closed (non-signaled) state.
 * Multiple threads can wait for the event to become the signaled state.
 *
 * <p>
 * Once the event becomes signaled, or the pandora's box is opened,
 * every thread gets through freely, and there's no way to turn it back off. 
 *
 * @author Kohsuke Kawaguchi
 */ OneShotEvent FieldDeclaration Modifier private BasicType boolean VariableDeclarator signaled MethodDeclaration /**
     * Non-blocking method that signals this event.
     */ Modifier public synchronized signal IfStatement MemberReference signaled ReturnStatement End StatementExpression Assignment This MemberReference signaled Literal true = StatementExpression MethodInvocation notifyAll MethodDeclaration /**
     * Blocks until the event becomes the signaled state.
     *
     * <p>
     * This method blocks infinitely until a value is offered.
     */ Modifier public synchronized block InterruptedException WhileStatement MemberReference ! signaled StatementExpression MethodInvocation wait End MethodDeclaration /**
     * Blocks until the event becomes the signaled state.
     *
     * <p>
     * If the specified amount of time elapses,
     * this method returns null even if the value isn't offered.
     */ Modifier public synchronized block FormalParameter BasicType long timeout InterruptedException IfStatement MemberReference ! signaled StatementExpression MethodInvocation MemberReference timeout wait End MethodDeclaration /**
     * Returns true if a value is offered.
     */ Modifier public synchronized BasicType boolean isSignaled ReturnStatement MemberReference signaled",0
300,300,"CompilationUnit PackageDeclaration hudson.tasks Import hudson.Extension Import hudson.Launcher Import hudson.Functions Import hudson.EnvVars Import hudson.Util Import hudson.CopyOnWrite Import hudson.Launcher.LocalLauncher Import hudson.FilePath.FileCallable Import hudson.model.AbstractBuild Import hudson.model.AbstractProject Import hudson.model.BuildListener Import hudson.model.Computer Import hudson.model.EnvironmentSpecific Import hudson.model.Node Import hudson.model.Hudson Import hudson.model.TaskListener Import hudson.remoting.Callable Import hudson.remoting.VirtualChannel Import hudson.slaves.NodeSpecific Import hudson.tools.ToolDescriptor Import hudson.tools.ToolInstallation Import hudson.tools.DownloadFromUrlInstaller Import hudson.tools.ToolInstaller Import hudson.tools.ToolProperty Import hudson.util.ArgumentListBuilder Import hudson.util.NullStream Import hudson.util.StreamTaskListener Import hudson.util.VariableResolver Import hudson.util.FormValidation Import net.sf.json.JSONObject Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.QueryParameter Import java.io.File Import java.io.IOException Import java.util.Map Import java.util.Properties Import java.util.StringTokenizer Import java.util.List Import java.util.Collections ClassDeclaration Modifier public /**
 * Build by using Maven.
 *
 * @author Kohsuke Kawaguchi
 */ Maven FieldDeclaration /**
     * The targets and other maven options.
     * Can be separated by SP or NL.
     */ Modifier public final ReferenceType String VariableDeclarator targets FieldDeclaration /**
     * Identifies {@link MavenInstallation} to be used.
     */ Modifier public final ReferenceType String VariableDeclarator mavenName FieldDeclaration /**
     * MAVEN_OPTS if not null.
     */ Modifier public final ReferenceType String VariableDeclarator jvmOptions FieldDeclaration /**
     * Optional POM file path relative to the workspace.
     * Used for the Maven '-f' option.
     */ Modifier public final ReferenceType String VariableDeclarator pom FieldDeclaration /**
     * Optional properties to be passed to Maven. Follows {@link Properties} syntax.
     */ Modifier public final ReferenceType String VariableDeclarator properties FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator MAVEN_1_INSTALLATION_COMMON_FILE Literal ""bin/maven"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator MAVEN_2_INSTALLATION_COMMON_FILE Literal ""bin/mvn"" ConstructorDeclaration Modifier public Maven FormalParameter ReferenceType String targets FormalParameter ReferenceType String name StatementExpression ExplicitConstructorInvocation MemberReference targets MemberReference name Literal null Literal null Literal null ConstructorDeclaration Modifier public Annotation DataBoundConstructor Maven FormalParameter ReferenceType String targets FormalParameter ReferenceType String name FormalParameter ReferenceType String pom FormalParameter ReferenceType String properties FormalParameter ReferenceType String jvmOptions StatementExpression Assignment This MemberReference targets MemberReference targets = StatementExpression Assignment This MemberReference mavenName MemberReference name = StatementExpression Assignment This MemberReference pom MethodInvocation Util MemberReference pom fixEmptyAndTrim = StatementExpression Assignment This MemberReference properties MethodInvocation Util MemberReference properties fixEmptyAndTrim = StatementExpression Assignment This MemberReference jvmOptions MethodInvocation Util MemberReference jvmOptions fixEmptyAndTrim = MethodDeclaration Modifier public ReferenceType String getTargets ReturnStatement MemberReference targets MethodDeclaration /**
     * Gets the Maven to invoke,
     * or null to invoke the default one.
     */ Modifier public ReferenceType MavenInstallation getMaven ForStatement EnhancedForControl VariableDeclaration ReferenceType MavenInstallation VariableDeclarator i MethodInvocation MethodInvocation getInstallations getDescriptor BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference mavenName Literal null MethodInvocation i MethodInvocation MemberReference mavenName equals getName ReturnStatement MemberReference i End End ReturnStatement Literal null ClassDeclaration Modifier private final static /**
     * Looks for <tt>pom.xlm</tt> or <tt>project.xml</tt> to determine the maven executable
     * name.
     */ DecideDefaultMavenCommand FieldDeclaration Modifier private final ReferenceType String VariableDeclarator arguments ConstructorDeclaration Modifier public DecideDefaultMavenCommand FormalParameter ReferenceType String arguments StatementExpression Assignment This MemberReference arguments MemberReference arguments = MethodDeclaration Modifier public ReferenceType String invoke FormalParameter ReferenceType File ws FormalParameter ReferenceType VirtualChannel channel IOException LocalVariableDeclaration ReferenceType String VariableDeclarator seed Literal null LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokens ClassCreator ReferenceType StringTokenizer MemberReference arguments WhileStatement MethodInvocation tokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation tokens nextToken IfStatement BinaryOperation && MethodInvocation t Literal ""-f"" equals MethodInvocation tokens hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference ws MethodInvocation tokens nextToken IfStatement MethodInvocation ! file exists ContinueStatement End IfStatement MethodInvocation file isDirectory StatementExpression Assignment MemberReference seed Literal ""maven"" = StatementExpression Assignment MemberReference seed Literal ""mvn"" = End BreakStatement End End IfStatement BinaryOperation == MemberReference seed Literal null BlockStatement IfStatement ClassCreator MethodInvocation exists ReferenceType File MemberReference ws Literal ""project.xml"" StatementExpression Assignment MemberReference seed Literal ""maven"" = StatementExpression Assignment MemberReference seed Literal ""mvn"" = End End IfStatement MethodInvocation Functions isWindows StatementExpression Assignment MemberReference seed Literal "".bat"" += End ReturnStatement MemberReference seed ReferenceType FileCallable TypeArgument ReferenceType String MethodDeclaration Modifier public BasicType boolean perform FormalParameter ReferenceType AbstractBuild TypeArgument ? TypeArgument ? build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener IOException InterruptedException LocalVariableDeclaration ReferenceType AbstractProject VariableDeclarator proj MethodInvocation build getProject LocalVariableDeclaration ReferenceType VariableResolver TypeArgument ReferenceType String VariableDeclarator vr MethodInvocation build getBuildVariableResolver LocalVariableDeclaration ReferenceType EnvVars VariableDeclarator env MethodInvocation build MemberReference listener getEnvironment LocalVariableDeclaration ReferenceType String VariableDeclarator targets MethodInvocation Util This MemberReference targets MemberReference vr replaceMacro StatementExpression Assignment MemberReference targets MethodInvocation env MemberReference targets expand = LocalVariableDeclaration ReferenceType String VariableDeclarator pom MethodInvocation env This MemberReference pom expand LocalVariableDeclaration ReferenceType String VariableDeclarator jvmOptions MethodInvocation env This MemberReference jvmOptions expand LocalVariableDeclaration ReferenceType String VariableDeclarator properties MethodInvocation env This MemberReference properties expand LocalVariableDeclaration BasicType int VariableDeclarator startIndex Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator endIndex DoStatement BinaryOperation < MemberReference startIndex MethodInvocation targets length BlockStatement StatementExpression Assignment MemberReference endIndex MethodInvocation targets Literal '|' MemberReference startIndex indexOf = IfStatement BinaryOperation == Literal - 1 MemberReference endIndex BlockStatement StatementExpression Assignment MemberReference endIndex MethodInvocation targets length = End LocalVariableDeclaration ReferenceType String VariableDeclarator normalizedTarget MethodInvocation targets MethodInvocation Literal ""[\t\r\n]+"" Literal "" "" replaceAll MemberReference startIndex MemberReference endIndex substring LocalVariableDeclaration ReferenceType ArgumentListBuilder VariableDeclarator args ClassCreator ReferenceType ArgumentListBuilder LocalVariableDeclaration ReferenceType MavenInstallation VariableDeclarator mi MethodInvocation getMaven IfStatement BinaryOperation == MemberReference mi Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator execName MethodInvocation proj MethodInvocation ClassCreator ReferenceType DecideDefaultMavenCommand MemberReference normalizedTarget act getWorkspace StatementExpression MethodInvocation args MemberReference execName add BlockStatement StatementExpression Assignment MemberReference mi MethodInvocation mi MethodInvocation Computer MethodInvocation getNode currentComputer MemberReference listener forNode = StatementExpression Assignment MemberReference mi MethodInvocation mi MemberReference env forEnvironment = LocalVariableDeclaration ReferenceType String VariableDeclarator exec MethodInvocation mi MemberReference launcher getExecutable IfStatement BinaryOperation == MemberReference exec Literal null BlockStatement StatementExpression MethodInvocation listener MethodInvocation Messages MethodInvocation mi getHome Maven_NoExecutable fatalError ReturnStatement Literal false End StatementExpression MethodInvocation args MemberReference exec add End IfStatement BinaryOperation != MemberReference pom Literal null StatementExpression MethodInvocation args Literal ""-f"" MemberReference pom add End StatementExpression MethodInvocation args Literal ""-D"" MethodInvocation build getBuildVariables addKeyValuePairs StatementExpression MethodInvocation args Literal ""-D"" MemberReference properties MemberReference vr addKeyValuePairsFromPropertyString StatementExpression MethodInvocation args MemberReference normalizedTarget addTokenized IfStatement BinaryOperation != MemberReference mi Literal null BlockStatement StatementExpression MethodInvocation env Literal ""M2_HOME"" MethodInvocation mi getHome put StatementExpression MethodInvocation env Literal ""MAVEN_HOME"" MethodInvocation mi getHome put End StatementExpression MethodInvocation env Literal ""MAVEN_TERMINATE_CMD"" Literal ""on"" put IfStatement BinaryOperation != MemberReference jvmOptions Literal null StatementExpression MethodInvocation env Literal ""MAVEN_OPTS"" MemberReference jvmOptions put End TryStatement LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation launcher MethodInvocation MemberReference args cmds MethodInvocation MemberReference env envs MethodInvocation MemberReference listener stdout MethodInvocation MethodInvocation proj getModuleRoot pwd MethodInvocation join launch IfStatement BinaryOperation != Literal 0 MemberReference r BlockStatement ReturnStatement Literal false End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation Util MemberReference e MemberReference listener displayIOException StatementExpression MethodInvocation e MethodInvocation listener MethodInvocation Messages Maven_ExecFailed fatalError printStackTrace ReturnStatement Literal false StatementExpression Assignment MemberReference startIndex BinaryOperation + MemberReference endIndex Literal 1 = End ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType DescriptorImpl getDescriptor ReturnStatement Cast ReferenceType DescriptorImpl SuperMethodInvocation getDescriptor FieldDeclaration /**
     * @deprecated as of 1.286
     *      Use {@link Hudson#getDescriptorByType(Class)} to obtain the current instance.
     *      For compatibility, this field retains the last created {@link DescriptorImpl}.
     *      TODO: fix sonar plugin that depends on this. That's the only plugin that depends on this field.
     */ Modifier public static ReferenceType DescriptorImpl VariableDeclarator DESCRIPTOR ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl FieldDeclaration Modifier private volatile Annotation CopyOnWrite ReferenceType MavenInstallation VariableDeclarator installations ArrayCreator ReferenceType MavenInstallation Literal 0 ConstructorDeclaration Modifier public DescriptorImpl StatementExpression Assignment MemberReference DESCRIPTOR This = StatementExpression MethodInvocation load MethodDeclaration Modifier public BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType AbstractProject extends jobType ReturnStatement Literal true MethodDeclaration Modifier protected convert FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object oldPropertyBag IfStatement MethodInvocation oldPropertyBag Literal ""installations"" containsKey StatementExpression Assignment MemberReference installations Cast ReferenceType MavenInstallation MethodInvocation oldPropertyBag Literal ""installations"" get = End MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/project-config/maven.html"" MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages Maven_DisplayName MethodDeclaration Modifier public ReferenceType MavenInstallation getInstallations ReturnStatement MemberReference installations MethodDeclaration Modifier public setInstallations FormalParameter ReferenceType MavenInstallation installations  StatementExpression Assignment This MemberReference installations MemberReference installations = StatementExpression MethodInvocation save MethodDeclaration Modifier public ReferenceType Builder newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement MethodInvocation req ClassReference ReferenceType Maven MemberReference formData bindJSON ReferenceType BuildStepDescriptor TypeArgument ReferenceType Builder ClassDeclaration Modifier public final static /**
     * Represents a Maven installation in a system.
     */ MavenInstallation FieldDeclaration Modifier private Annotation Deprecated ReferenceType String VariableDeclarator mavenHome ConstructorDeclaration Modifier public /**
         * @deprecated as of 1.308.
         *      Use {@link #MavenInstallation(String, String, List)}
         */ MavenInstallation FormalParameter ReferenceType String name FormalParameter ReferenceType String home StatementExpression SuperConstructorInvocation MemberReference name MemberReference home ConstructorDeclaration Modifier public Annotation DataBoundConstructor MavenInstallation FormalParameter ReferenceType String name FormalParameter ReferenceType String home FormalParameter ReferenceType List TypeArgument ReferenceType ToolProperty TypeArgument ? extends properties StatementExpression SuperConstructorInvocation MemberReference name MemberReference home MemberReference properties MethodDeclaration /**
         * install directory.
         *
         * @deprecated as of 1.308. Use {@link #getHome()}.
         */ Modifier public ReferenceType String getMavenHome ReturnStatement MethodInvocation getHome MethodDeclaration Modifier public ReferenceType File getHomeDir ReturnStatement ClassCreator ReferenceType File MethodInvocation getHome MethodDeclaration Modifier public ReferenceType String getHome IfStatement BinaryOperation != MemberReference mavenHome Literal null ReturnStatement MemberReference mavenHome End ReturnStatement SuperMethodInvocation getHome MethodDeclaration /**
         * Is this Maven 2.1.x?
         *
         * @param launcher
         *      Represents the node on which we evaluate the path.
         */ Modifier public BasicType boolean isMaven2_1 FormalParameter ReferenceType Launcher launcher IOException InterruptedException ReturnStatement MethodInvocation launcher MethodInvocation ClassCreator ReferenceType Callable TypeArgument ReferenceType Boolean TypeArgument ReferenceType IOException MethodDeclaration Modifier public ReferenceType Boolean call IOException LocalVariableDeclaration ReferenceType File VariableDeclarator jars ClassCreator MethodInvocation listFiles ReferenceType File MethodInvocation getHomeDir Literal ""lib"" IfStatement BinaryOperation != MemberReference jars Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator jar MemberReference jars IfStatement BinaryOperation && MethodInvocation jar MethodInvocation Literal ""maven-2.1."" startsWith getName MethodInvocation jar MethodInvocation Literal ""-uber.jar"" endsWith getName ReturnStatement Literal true End End End ReturnStatement Literal false call getChannel MethodDeclaration /**
         * Gets the executable path of this maven on the given target system.
         */ Modifier public ReferenceType String getExecutable FormalParameter ReferenceType Launcher launcher IOException InterruptedException ReturnStatement MethodInvocation launcher MethodInvocation ClassCreator ReferenceType Callable TypeArgument ReferenceType String TypeArgument ReferenceType IOException MethodDeclaration Modifier public ReferenceType String call IOException LocalVariableDeclaration ReferenceType File VariableDeclarator exe MethodInvocation Literal ""maven"" getExeFile IfStatement MethodInvocation exe exists ReturnStatement MethodInvocation exe getPath End StatementExpression Assignment MemberReference exe MethodInvocation Literal ""mvn"" getExeFile = IfStatement MethodInvocation exe exists ReturnStatement MethodInvocation exe getPath End ReturnStatement Literal null call getChannel MethodDeclaration Modifier private ReferenceType File getExeFile FormalParameter ReferenceType String execName IfStatement BinaryOperation == MemberReference File separatorChar Literal '\\' StatementExpression Assignment MemberReference execName Literal "".bat"" += End LocalVariableDeclaration ReferenceType String VariableDeclarator m2Home MethodInvocation Util MethodInvocation getHome MemberReference EnvVars masterEnvVars replaceMacro ReturnStatement ClassCreator ReferenceType File MemberReference m2Home BinaryOperation + Literal ""bin/"" MemberReference execName MethodDeclaration /**
         * Returns true if the executable exists.
         */ Modifier public BasicType boolean getExists TryStatement ReturnStatement BinaryOperation != MethodInvocation ClassCreator ReferenceType LocalLauncher ClassCreator ReferenceType StreamTaskListener ClassCreator ReferenceType NullStream getExecutable Literal null CatchClause CatchClauseParameter IOException e ReturnStatement Literal false CatchClause CatchClauseParameter InterruptedException e ReturnStatement Literal false FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L MethodDeclaration Modifier public ReferenceType MavenInstallation forEnvironment FormalParameter ReferenceType EnvVars environment ReturnStatement ClassCreator ReferenceType MavenInstallation MethodInvocation getName MethodInvocation environment MethodInvocation getHome expand MethodInvocation MethodInvocation toList getProperties MethodDeclaration Modifier public ReferenceType MavenInstallation forNode FormalParameter ReferenceType Node node FormalParameter ReferenceType TaskListener log IOException InterruptedException ReturnStatement ClassCreator ReferenceType MavenInstallation MethodInvocation getName MethodInvocation MemberReference node MemberReference log translateFor MethodInvocation MethodInvocation toList getProperties ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement Literal ""Maven"" MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType ToolInstaller extends getDefaultInstallers ReturnStatement MethodInvocation Collections ClassCreator ReferenceType MavenInstaller Literal null singletonList MethodDeclaration Modifier public Annotation Override ReferenceType MavenInstallation getInstallations ReturnStatement MethodInvocation Hudson MethodInvocation ClassReference Maven ReferenceType DescriptorImpl getDescriptorByType MethodInvocation getInstallations getInstance MethodDeclaration Modifier public Annotation Override setInstallations FormalParameter ReferenceType MavenInstallation installations  StatementExpression MethodInvocation Hudson MethodInvocation ClassReference Maven ReferenceType DescriptorImpl getDescriptorByType MethodInvocation MemberReference installations setInstallations getInstance MethodDeclaration Modifier public Annotation Override BasicType boolean configure FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject json FormException StatementExpression MethodInvocation MethodInvocation req MethodInvocation ArrayCreator ReferenceType MavenInstallation Literal 0 toArray ClassReference ReferenceType MavenInstallation MethodInvocation json Literal ""maven"" get bindJSONToList setInstallations ReturnStatement Literal true MethodDeclaration /**
             * Checks if the MAVEN_HOME is valid.
             */ Modifier public ReferenceType FormValidation doCheckMavenHome FormalParameter Annotation QueryParameter ReferenceType File value IfStatement MethodInvocation ! Hudson MethodInvocation MemberReference Hudson ADMINISTER hasPermission getInstance ReturnStatement MethodInvocation FormValidation ok End IfStatement MethodInvocation value MethodInvocation Literal """" equals getPath ReturnStatement MethodInvocation FormValidation ok End IfStatement MethodInvocation ! value isDirectory ReturnStatement MethodInvocation FormValidation MethodInvocation Messages MemberReference value Maven_NotADirectory error End LocalVariableDeclaration ReferenceType File VariableDeclarator maven1File ClassCreator ReferenceType File MemberReference value MemberReference MAVEN_1_INSTALLATION_COMMON_FILE LocalVariableDeclaration ReferenceType File VariableDeclarator maven2File ClassCreator ReferenceType File MemberReference value MemberReference MAVEN_2_INSTALLATION_COMMON_FILE IfStatement BinaryOperation && MethodInvocation ! maven1File exists MethodInvocation ! maven2File exists ReturnStatement MethodInvocation FormValidation MethodInvocation Messages MemberReference value Maven_NotMavenDirectory error End ReturnStatement MethodInvocation FormValidation ok ReferenceType ToolDescriptor TypeArgument ReferenceType MavenInstallation ReferenceType ToolInstallation ReferenceType EnvironmentSpecific TypeArgument ReferenceType MavenInstallation ReferenceType NodeSpecific TypeArgument ReferenceType MavenInstallation ClassDeclaration Modifier public static /**
     * Automatic Maven installer from apache.org.
     */ MavenInstaller ConstructorDeclaration Modifier public Annotation DataBoundConstructor MavenInstaller FormalParameter ReferenceType String id StatementExpression SuperConstructorInvocation MemberReference id ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages InstallFromApache MethodDeclaration Modifier public Annotation Override BasicType boolean isApplicable FormalParameter ReferenceType Class TypeArgument ReferenceType ToolInstallation extends toolType ReturnStatement BinaryOperation == MemberReference toolType ClassReference ReferenceType MavenInstallation ReferenceType DownloadFromUrlInstaller ReferenceType DescriptorImpl TypeArgument ReferenceType MavenInstaller ReferenceType DownloadFromUrlInstaller InterfaceDeclaration Modifier public /**
     * Optional interface that can be implemented by {@link AbstractProject}
     * that has ""contextual"" {@link MavenInstallation} associated with it.
     *
     * <p>
     * Code like RedeployPublisher uses this interface in an attempt
     * to use the consistent Maven installation attached to the project.
     *
     * @since 1.235
     */ ProjectWithMaven MethodDeclaration /**
         * Gets the {@link MavenInstallation} associated with the project.
         * Can be null.
         *
         * <p>
         * If the Maven installation can not be uniquely determined,
         * it's often better to return just one of them, rather than returning
         * null, since this method is currently ultimately only used to
         * decide where to parse <tt>conf/settings.xml</tt> from.
         */ ReferenceType MavenInstallation inferMavenInstallation ReferenceType Builder",0
155,155,"CompilationUnit PackageDeclaration hudson.model Import hudson.Extension Import hudson.util.DescriptorList Import java.util.List ClassDeclaration Modifier public /**
 * List of all installed {@link UserProperty} types.
 * @author Kohsuke Kawaguchi
 * @deprecated as of 1.286
 */ UserProperties FieldDeclaration /**
     * @deprecated as of 1.286
     *      Use {@link UserProperty#all()} for read access and {@link Extension} for auto-registration.
     */ Modifier public final static ReferenceType List TypeArgument ReferenceType UserPropertyDescriptor VariableDeclarator LIST Cast ReferenceType List ClassCreator ReferenceType DescriptorList TypeArgument ReferenceType UserProperty ClassReference ReferenceType UserProperty",1
52,52,"CompilationUnit PackageDeclaration hudson.util InterfaceDeclaration Modifier public /**
 * Unary function <tt>y=f(x)</tt>.
 * 
 * @author Kohsuke Kawaguchi
 */ Function1 MethodDeclaration ReferenceType R call FormalParameter ReferenceType P1 param1 TypeParameter R TypeParameter P1",1
303,303,"CompilationUnit PackageDeclaration hudson.tasks.junit Import java.util.Collection Import java.util.List ClassDeclaration Modifier abstract /**
 * {@link TabulatedResult} whose immediate children
 * are other {@link TabulatedResult}s.
 *
 * @author Kohsuke Kawaguchi
 */ MetaTabulatedResult MethodDeclaration Modifier public abstract ReferenceType String getChildTitle MethodDeclaration /**
     * All failed tests.
     */ Modifier public abstract ReferenceType List TypeArgument ReferenceType CaseResult getFailedTests MethodDeclaration Modifier public abstract ReferenceType Collection TypeArgument ReferenceType TabulatedResult extends getChildren ReferenceType TabulatedResult",1
409,409,,0
103,103,"CompilationUnit PackageDeclaration hudson.remoting.jnlp Import org.kohsuke.args4j.Option Import org.kohsuke.args4j.CmdLineParser Import org.kohsuke.args4j.Argument Import org.kohsuke.args4j.CmdLineException Import java.util.logging.Logger Import java.util.logging.Level Import java.util.List Import java.util.ArrayList Import java.net.URL Import java.io.IOException Import hudson.remoting.Engine Import hudson.remoting.EngineListener ClassDeclaration Modifier public /**
 * Entry point to JNLP slave agent.
 *
 * <p>
 * See also <tt>slave-agent.jnlp.jelly</tt> in the core.
 *
 * @author Kohsuke Kawaguchi
 */ Main FieldDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-tunnel"" ElementValuePair metaVar Literal ""HOST:PORT"" ElementValuePair usage BinaryOperation + BinaryOperation + Literal ""Connect to the specified host and port, instead of connecting directly to Hudson. "" Literal ""Useful when connection to Hudson needs to be tunneled. Can be also HOST: or :PORT, "" Literal ""in which case the missing portion will be auto-configured like the default behavior"" ReferenceType String VariableDeclarator tunnel FieldDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-headless"" ElementValuePair usage Literal ""Run in headless mode, without GUI"" BasicType boolean VariableDeclarator headlessMode BinaryOperation || MethodInvocation Boolean Literal ""hudson.agent.headless"" getBoolean MethodInvocation Boolean Literal ""hudson.webstart.headless"" getBoolean FieldDeclaration Modifier public final Annotation Option ElementValuePair name Literal ""-url"" ElementValuePair usage Literal ""Specify the Hudson root URLs to connect to."" ReferenceType List TypeArgument ReferenceType URL VariableDeclarator urls ClassCreator ReferenceType ArrayList TypeArgument ReferenceType URL FieldDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-noreconnect"" ElementValuePair usage Literal ""If the connection ends, don't retry and just exit."" BasicType boolean VariableDeclarator noReconnect Literal false FieldDeclaration /**
     * 4 mandatory parameters.
     * Host name (deprecated), Hudson URL, secret key, and slave name.
     */ Modifier public final Annotation Argument ReferenceType List TypeArgument ReferenceType String VariableDeclarator args ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodDeclaration Modifier public static main FormalParameter ReferenceType String args IOException InterruptedException TryStatement StatementExpression MethodInvocation System Literal null setSecurityManager CatchClause CatchClauseParameter SecurityException e LocalVariableDeclaration ReferenceType Main VariableDeclarator m ClassCreator ReferenceType Main LocalVariableDeclaration ReferenceType CmdLineParser VariableDeclarator p ClassCreator ReferenceType CmdLineParser MemberReference m TryStatement StatementExpression MethodInvocation p MemberReference args parseArgument IfStatement BinaryOperation != MethodInvocation m.args size Literal 2 ThrowStatement ClassCreator ReferenceType CmdLineException BinaryOperation + Literal ""two arguments required, but got "" MemberReference m args End IfStatement MethodInvocation m.urls isEmpty ThrowStatement ClassCreator ReferenceType CmdLineException Literal ""At least one -url option is required."" End CatchClause CatchClauseParameter CmdLineException e StatementExpression MethodInvocation System.err MethodInvocation e getMessage println StatementExpression MethodInvocation System.err Literal ""java -jar slave.jar [options...] <secret key> <slave name>"" println StatementExpression MethodInvocation p MemberReference System err printUsage ReturnStatement StatementExpression MethodInvocation m main MethodDeclaration Modifier public main IOException InterruptedException LocalVariableDeclaration ReferenceType Engine VariableDeclarator engine ClassCreator ReferenceType Engine TernaryExpression MemberReference headlessMode ClassCreator ReferenceType CuiListener ClassCreator ReferenceType GuiListener MemberReference urls MethodInvocation args Literal 0 get MethodInvocation args Literal 1 get IfStatement BinaryOperation != MemberReference tunnel Literal null StatementExpression MethodInvocation engine MemberReference tunnel setTunnel End StatementExpression MethodInvocation engine MemberReference noReconnect setNoReconnect StatementExpression MethodInvocation engine start StatementExpression MethodInvocation engine join ClassDeclaration Modifier private final static /**
     * {@link EngineListener} implementation that sends output to {@link Logger}.
     */ CuiListener ConstructorDeclaration Modifier private CuiListener StatementExpression MethodInvocation LOGGER Literal ""Hudson agent is running in headless mode."" info MethodDeclaration Modifier public status FormalParameter Modifier final ReferenceType String msg StatementExpression MethodInvocation LOGGER MemberReference msg info MethodDeclaration Modifier public error FormalParameter Modifier final ReferenceType Throwable t StatementExpression MethodInvocation LOGGER MemberReference Level SEVERE MethodInvocation t getMessage MemberReference t log StatementExpression MethodInvocation System Literal - 1 exit MethodDeclaration Modifier public onDisconnect ReferenceType EngineListener FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType Main getLogger",1
504,504,,0
110,110,"CompilationUnit PackageDeclaration hudson.search ClassDeclaration Modifier public /**
 * One item of a search result.
 *
 * @author Kohsuke Kawaguchi
 */ SuggestedItem FieldDeclaration Modifier private final ReferenceType SuggestedItem VariableDeclarator parent FieldDeclaration Modifier public final ReferenceType SearchItem VariableDeclarator item FieldDeclaration Modifier private ReferenceType String VariableDeclarator path ConstructorDeclaration Modifier public SuggestedItem FormalParameter ReferenceType SearchItem top StatementExpression ExplicitConstructorInvocation Literal null MemberReference top ConstructorDeclaration Modifier public SuggestedItem FormalParameter ReferenceType SuggestedItem parent FormalParameter ReferenceType SearchItem item StatementExpression Assignment This MemberReference parent MemberReference parent = StatementExpression Assignment This MemberReference item MemberReference item = MethodDeclaration Modifier public ReferenceType String getPath IfStatement BinaryOperation != MemberReference path Literal null ReturnStatement MemberReference path End IfStatement BinaryOperation == MemberReference parent Literal null ReturnStatement Assignment MemberReference path MethodInvocation item getSearchName = BlockStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation MemberReference buf getPath ReturnStatement Assignment MemberReference path MethodInvocation buf toString = End MethodDeclaration Modifier private getPath FormalParameter ReferenceType StringBuilder buf IfStatement BinaryOperation == MemberReference parent Literal null StatementExpression MethodInvocation buf MethodInvocation item getSearchName append BlockStatement StatementExpression MethodInvocation parent MemberReference buf getPath StatementExpression MethodInvocation buf MethodInvocation MethodInvocation item getSearchName append Literal ' ' append End MethodDeclaration /**
     * Gets the URL to this item.
     * @return
     *      URL that starts with '/' but doesn't end with '/'.
     *      The path is the combined path from the {@link SearchIndex} where the search started
     *      to the final item found. Thus to convert to the actual URL, the caller would need
     *      to prepend the URL of the object where the search started. 
     */ Modifier public ReferenceType String getUrl LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation MemberReference buf getUrl ReturnStatement MethodInvocation buf toString MethodDeclaration Modifier private getUrl FormalParameter ReferenceType StringBuilder buf IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression MethodInvocation parent MemberReference buf getUrl End LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation item getSearchUrl IfStatement MethodInvocation f Literal ""/"" startsWith BlockStatement StatementExpression MethodInvocation buf Literal 0 setLength StatementExpression MethodInvocation buf MemberReference f append BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation buf length Literal 0 BinaryOperation != MethodInvocation buf BinaryOperation - MethodInvocation buf length Literal 1 charAt Literal '/' StatementExpression MethodInvocation buf Literal '/' append End StatementExpression MethodInvocation buf MemberReference f append End",0
272,272,"CompilationUnit PackageDeclaration hudson Import hudson.model.Hudson Import hudson.model.Descriptor Import hudson.model.Saveable Import hudson.model.listeners.ItemListener Import hudson.model.Descriptor.FormException Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import javax.servlet.ServletContext Import javax.servlet.ServletException Import javax.servlet.http.HttpServletResponse Import java.io.IOException Import java.io.File Import java.net.URL Import net.sf.json.JSONObject Import com.thoughtworks.xstream.XStream ClassDeclaration Modifier public abstract /**
 * Base class of Hudson plugin.
 *
 * <p>
 * A plugin needs to derive from this class.
 *
 * <p>
 * One instance of a plugin is created by Hudson, and used as the entry point
 * to plugin functionality.
 *
 * <p>
 * A plugin is bound to URL space of Hudson as <tt>${rootURL}/plugin/foo/</tt>,
 * where ""foo"" is taken from your plugin name ""foo.hpi"". All your web resources
 * in src/main/webapp are visible from this URL, and you can also define Jelly
 * views against your Plugin class, and those are visible in this URL, too.
 *
 * <p>
 * {@link Plugin} can have an optional <tt>config.jelly</tt> page. If present,
 * it will become a part of the system configuration page (http://server/hudson/configure).
 * This is convenient for exposing/maintaining configuration that doesn't
 * fit any {@link Descriptor}s.
 *
 * <p>
 * Up until Hudson 1.150 or something, subclasses of {@link Plugin} required
 * <tt>@plugin</tt> javadoc annotation, but that is no longer a requirement.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.42
 */ Plugin FieldDeclaration /**
     * Set by the {@link PluginManager}.
     * This points to the {@link PluginWrapper} that wraps
     * this {@link Plugin} object.
     */ Modifier transient ReferenceType PluginWrapper VariableDeclarator wrapper MethodDeclaration /**
     * Called when a plugin is loaded to make the {@link ServletContext} object available to a plugin.
     * This object allows plugins to talk to the surrounding environment.
     *
     * <p>
     * The default implementation is no-op.
     *
     * @param context
     *      Always non-null.
     *
     * @since 1.42
     */ Modifier public setServletContext FormalParameter ReferenceType ServletContext context MethodDeclaration /**
     * Called to allow plugins to initialize themselves.
     *
     * <p>
     * This method is called after {@link #setServletContext(ServletContext)} is invoked.
     * You can also use {@link Hudson#getInstance()} to access the singleton hudson instance,
     * although the plugin start up happens relatively early in the initialization
     * stage and not all the data are loaded in Hudson.
     *
     * <p>
     * If a plugin wants to run an initialization step after all plugins and extension points
     * are registered, a good place to do that is {@link #postInitialize()}.
     * If a plugin wants to run an initialization step after all the jobs are loaded,
     * {@link ItemListener#onLoaded()} is a good place.
     *
     * @throws Exception
     *      any exception thrown by the plugin during the initialization will disable plugin.
     *
     * @since 1.42
     * @see ExtensionPoint
     * @see #postInitialize()
     */ Modifier public start Exception MethodDeclaration /**
     * Called after {@link #start()} is called for all the plugins.
     *
     * @throws Exception
     *      any exception thrown by the plugin during the initialization will disable plugin.
     */ Modifier public postInitialize Exception MethodDeclaration /**
     * Called to orderly shut down Hudson.
     *
     * <p>
     * This is a good opportunity to clean up resources that plugin started.
     * This method will not be invoked if the {@link #start()} failed abnormally.
     *
     * @throws Exception
     *      if any exception is thrown, it is simply recorded and shut-down of other
     *      plugins continue. This is primarily just a convenience feature, so that
     *      each plugin author doesn't have to worry about catching an exception and
     *      recording it.
     *
     * @since 1.42
     */ Modifier public stop Exception MethodDeclaration /**
     * @since 1.233
     * @deprecated as of 1.305 override {@link #configure(StaplerRequest,JSONObject)} instead
     */ Modifier public configure FormalParameter ReferenceType JSONObject formData IOException ServletException FormException MethodDeclaration /**
     * Handles the submission for the system configuration.
     *
     * <p>
     * If this class defines <tt>config.jelly</tt> view, be sure to
     * override this method and persists the submitted values accordingly.
     *
     * <p>
     * The following is a sample <tt>config.jelly</tt> that you can start yours with:
     * <pre><xmp>
     * <j:jelly xmlns:j=""jelly:core"" xmlns:st=""jelly:stapler"" xmlns:d=""jelly:define"" xmlns:l=""/lib/layout"" xmlns:t=""/lib/hudson"" xmlns:f=""/lib/form"">
     *   <f:section title=""Locale"">
     *     <f:entry title=""${%Default Language}"" help=""/plugin/locale/help/default-language.html"">
     *       <f:textbox name=""systemLocale"" value=""${it.systemLocale}"" />
     *     </f:entry>
     *   </f:section>
     * </j:jelly>
     * </xmp></pre>
     *
     * <p>
     * This allows you to access data as {@code formData.getString(""systemLocale"")}
     *
     * <p>
     * If you are using this method, you'll likely be interested in
     * using {@link #save()} and {@link #load()}.
     * @since 1.305
     */ Modifier public configure FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData IOException ServletException FormException StatementExpression MethodInvocation MemberReference formData configure MethodDeclaration /**
     * This method serves static resources in the plugin under <tt>hudson/plugin/SHORTNAME</tt>.
     */ Modifier public doDynamic FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation req getRestOfPath IfStatement BinaryOperation == MethodInvocation path length Literal 0 StatementExpression Assignment MemberReference path Literal ""/"" = End IfStatement BinaryOperation || BinaryOperation != MethodInvocation path Literal "".."" indexOf Literal - 1 BinaryOperation < MethodInvocation path length Literal 1 BlockStatement StatementExpression MethodInvocation rsp MemberReference HttpServletResponse SC_BAD_REQUEST sendError ReturnStatement End StatementExpression MethodInvocation rsp MemberReference req ClassCreator ReferenceType URL MemberReference wrapper baseResourceURL BinaryOperation + Literal '.' MemberReference path serveLocalizedFile MethodDeclaration /**
     * Loads serializable fields of this instance from the persisted storage.
     *
     * <p>
     * If there was no previously persisted state, this method is no-op.
     *
     * @since 1.245
     */ Modifier protected load IOException LocalVariableDeclaration ReferenceType XmlFile VariableDeclarator xml MethodInvocation getConfigXml IfStatement MethodInvocation xml exists StatementExpression MethodInvocation xml This unmarshal End MethodDeclaration /**
     * Saves serializable fields of this instance to the persisted storage.
     *
     * @since 1.245
     */ Modifier public save IOException IfStatement MethodInvocation BulkChange This contains ReturnStatement End StatementExpression MethodInvocation MethodInvocation This write getConfigXml MethodDeclaration /**
     * Controls the file where {@link #load()} and {@link #save()}
     * persists data.
     *
     * This method can be also overriden if the plugin wants to
     * use a custom {@link XStream} instance to persist data.
     *
     * @since 1.245
     */ Modifier protected ReferenceType XmlFile getConfigXml ReturnStatement ClassCreator ReferenceType XmlFile MemberReference Hudson XSTREAM ClassCreator ReferenceType File MethodInvocation Hudson MethodInvocation getRootDir getInstance BinaryOperation + MethodInvocation wrapper getShortName Literal "".xml"" FieldDeclaration /**
     * Dummy instance of {@link Plugin} to be used when a plugin didn't
     * supply one on its own.
     *
     * @since 1.288
     */ Modifier public final static ReferenceType Plugin VariableDeclarator NONE ClassCreator ReferenceType Plugin ReferenceType Saveable",1
2,2,"CompilationUnit PackageDeclaration hudson.tasks.junit Import org.dom4j.Document Import org.dom4j.DocumentException Import org.dom4j.Element Import org.dom4j.io.SAXReader Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean Import java.io.File Import java.io.Serializable Import java.util.ArrayList Import java.util.List ClassDeclaration Modifier public final Annotation ExportedBean /**
 * Result of one test suite.
 *
 * <p>
 * The notion of ""test suite"" is rather arbitrary in JUnit ant task.
 * It's basically one invocation of junit.
 *
 * <p>
 * This object is really only used as a part of the persisted
 * object tree.
 *
 * @author Kohsuke Kawaguchi
 */ SuiteResult FieldDeclaration Modifier private final ReferenceType String VariableDeclarator name FieldDeclaration Modifier private final ReferenceType String VariableDeclarator stdout FieldDeclaration Modifier private final ReferenceType String VariableDeclarator stderr FieldDeclaration Modifier private BasicType float VariableDeclarator duration FieldDeclaration /**
     * The 'timestamp' attribute of  the test suite.
     * AFAICT, this is not a required attribute in XML, so the value may be null.
     */ Modifier private ReferenceType String VariableDeclarator timestamp FieldDeclaration /**
     * All test cases.
     */ Modifier private final ReferenceType List TypeArgument ReferenceType CaseResult VariableDeclarator cases ClassCreator ReferenceType ArrayList TypeArgument ReferenceType CaseResult FieldDeclaration Modifier private transient ReferenceType TestResult VariableDeclarator parent ConstructorDeclaration SuiteResult FormalParameter ReferenceType String name FormalParameter ReferenceType String stdout FormalParameter ReferenceType String stderr StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference stderr MemberReference stderr = StatementExpression Assignment This MemberReference stdout MemberReference stdout = MethodDeclaration /**
     * Parses the JUnit XML file into {@link SuiteResult}s.
     * This method returns a collection, as a single XML may have multiple &lt;testsuite>
     * elements wrapped into the top-level &lt;testsuites>.
     */ Modifier static ReferenceType List TypeArgument ReferenceType SuiteResult parse FormalParameter ReferenceType File xmlReport DocumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SuiteResult VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType SuiteResult LocalVariableDeclaration ReferenceType SAXReader VariableDeclarator saxReader ClassCreator ReferenceType SAXReader LocalVariableDeclaration ReferenceType XMLEntityResolver VariableDeclarator resolver ClassCreator ReferenceType XMLEntityResolver StatementExpression MethodInvocation saxReader MemberReference resolver setEntityResolver LocalVariableDeclaration ReferenceType Document VariableDeclarator result MethodInvocation saxReader MemberReference xmlReport read LocalVariableDeclaration ReferenceType Element VariableDeclarator root MethodInvocation result getRootElement IfStatement MethodInvocation root MethodInvocation Literal ""testsuites"" equals getName BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Element VariableDeclarator suite Cast ReferenceType List TypeArgument ReferenceType Element MethodInvocation root Literal ""testsuite"" elements StatementExpression MethodInvocation r ClassCreator ReferenceType SuiteResult MemberReference xmlReport MemberReference suite add End BlockStatement StatementExpression MethodInvocation r ClassCreator ReferenceType SuiteResult MemberReference xmlReport MemberReference root add End ReturnStatement MemberReference r ConstructorDeclaration Modifier private SuiteResult FormalParameter ReferenceType File xmlReport FormalParameter ReferenceType Element suite DocumentException LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation suite Literal ""name"" attributeValue IfStatement BinaryOperation == MemberReference name Literal null StatementExpression Assignment MemberReference name BinaryOperation + BinaryOperation + Literal '(' MethodInvocation xmlReport getName Literal ')' = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation suite Literal ""package"" attributeValue IfStatement BinaryOperation && BinaryOperation != MemberReference pkg Literal null BinaryOperation > MethodInvocation pkg length Literal 0 StatementExpression Assignment MemberReference name BinaryOperation + BinaryOperation + MemberReference pkg Literal '.' MemberReference name = End End StatementExpression Assignment This MemberReference name MethodInvocation TestObject MemberReference name safe = StatementExpression Assignment This MemberReference timestamp MethodInvocation suite Literal ""timestamp"" attributeValue = StatementExpression Assignment MemberReference stdout MethodInvocation suite Literal ""system-out"" elementText = StatementExpression Assignment MemberReference stderr MethodInvocation suite Literal ""system-err"" elementText = LocalVariableDeclaration ReferenceType Element VariableDeclarator ex MethodInvocation suite Literal ""error"" element IfStatement BinaryOperation != MemberReference ex Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType CaseResult This MemberReference suite Literal ""<init>"" addCase End ForStatement EnhancedForControl VariableDeclaration ReferenceType Element VariableDeclarator e Cast ReferenceType List TypeArgument ReferenceType Element MethodInvocation suite Literal ""testcase"" elements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classname MethodInvocation e Literal ""classname"" attributeValue IfStatement BinaryOperation == MemberReference classname Literal null BlockStatement StatementExpression Assignment MemberReference classname MethodInvocation suite Literal ""name"" attributeValue = End StatementExpression MethodInvocation ClassCreator ReferenceType CaseResult This MemberReference e MemberReference classname addCase End MethodDeclaration addCase FormalParameter ReferenceType CaseResult cr StatementExpression MethodInvocation cases MemberReference cr add StatementExpression Assignment MemberReference duration MethodInvocation cr getDuration += MethodDeclaration Modifier public Annotation Exported ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration Modifier public Annotation Exported BasicType float getDuration ReturnStatement MemberReference duration MethodDeclaration /**
     * The stdout of this test.
     *
     * @since 1.281
     * @see CaseResult#getStdout()
     */ Modifier public Annotation Exported ReferenceType String getStdout ReturnStatement MemberReference stdout MethodDeclaration /**
     * The stderr of this test.
     * 
     * @since 1.281
     * @see CaseResult#getStderr()
     */ Modifier public Annotation Exported ReferenceType String getStderr ReturnStatement MemberReference stderr MethodDeclaration Modifier public ReferenceType TestResult getParent ReturnStatement MemberReference parent MethodDeclaration Modifier public Annotation Exported ReferenceType String getTimestamp ReturnStatement MemberReference timestamp MethodDeclaration Modifier public Annotation Exported ElementValuePair inline Literal true ReferenceType List TypeArgument ReferenceType CaseResult getCases ReturnStatement MemberReference cases MethodDeclaration Modifier public ReferenceType SuiteResult getPreviousResult LocalVariableDeclaration ReferenceType TestResult VariableDeclarator pr MethodInvocation parent getPreviousResult IfStatement BinaryOperation == MemberReference pr Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation pr MemberReference name getSuite MethodDeclaration /**
     * Returns the {@link CaseResult} whose {@link CaseResult#getName()}
     * is the same as the given string.
     *
     * <p>
     * Note that test name needs not be unique.
     */ Modifier public ReferenceType CaseResult getCase FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType CaseResult VariableDeclarator c MemberReference cases BlockStatement IfStatement MethodInvocation c MethodInvocation MemberReference name equals getName ReturnStatement MemberReference c End End ReturnStatement Literal null MethodDeclaration BasicType boolean freeze FormalParameter ReferenceType TestResult owner IfStatement BinaryOperation != This MemberReference parent Literal null ReturnStatement Literal false End StatementExpression Assignment This MemberReference parent MemberReference owner = ForStatement EnhancedForControl VariableDeclaration ReferenceType CaseResult VariableDeclarator c MemberReference cases StatementExpression MethodInvocation c This freeze End ReturnStatement Literal true FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable",0
461,461,,0
252,252,CompilationUnit PackageDeclaration hudson.views Import net.sf.json.JSONObject Import org.kohsuke.stapler.StaplerRequest Import hudson.Extension Import hudson.model.Descriptor Import hudson.model.Descriptor.FormException Import hudson.views.StatusColumn.DescriptorImpl ClassDeclaration Modifier public BuildButtonColumn MethodDeclaration Modifier public ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn getDescriptor ReturnStatement MemberReference DESCRIPTOR FieldDeclaration Modifier public final static ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn VariableDeclarator DESCRIPTOR ClassCreator ReferenceType DescriptorImpl ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public Annotation Override ReferenceType ListViewColumn newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException ReturnStatement ClassCreator ReferenceType BuildButtonColumn MethodDeclaration Modifier public Annotation Override ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages BuildButtonColumn_DisplayName ReferenceType Descriptor TypeArgument ReferenceType ListViewColumn ReferenceType ListViewColumn,0
411,411,,0
167,167,"CompilationUnit PackageDeclaration hudson.security Import hudson.Util Import hudson.Extension Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.ManagementLink Import hudson.model.ModelObject Import hudson.model.User Import hudson.model.UserProperty Import hudson.model.UserPropertyDescriptor Import hudson.tasks.Mailer Import hudson.util.Protector Import hudson.util.Scrambler Import hudson.util.spring.BeanBuilder Import net.sf.json.JSONObject Import org.acegisecurity.Authentication Import org.acegisecurity.AuthenticationManager Import org.acegisecurity.GrantedAuthority Import org.acegisecurity.GrantedAuthorityImpl Import org.acegisecurity.context.SecurityContextHolder Import org.acegisecurity.providers.UsernamePasswordAuthenticationToken Import org.acegisecurity.providers.encoding.PasswordEncoder Import org.acegisecurity.providers.encoding.ShaPasswordEncoder Import org.acegisecurity.userdetails.UserDetails Import org.acegisecurity.userdetails.UserDetailsService Import org.acegisecurity.userdetails.UsernameNotFoundException Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.Stapler Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import org.springframework.dao.DataAccessException Import org.springframework.web.context.WebApplicationContext Import javax.servlet.ServletException Import javax.servlet.http.HttpServletResponse.SC_UNAUTHORIZED  Import java.io.IOException Import java.security.SecureRandom Import java.util.ArrayList Import java.util.List Import java.util.Collections Import groovy.lang.Binding ClassDeclaration Modifier public /**
 * {@link SecurityRealm} that performs authentication by looking up {@link User}.
 *
 * <p>
 * Implements {@link AccessControlled} to satisfy view rendering, but in reality the access control
 * is done against the {@link Hudson} object.
 *
 * @author Kohsuke Kawaguchi
 */ HudsonPrivateSecurityRealm FieldDeclaration /**
     * If true, sign up is not allowed.
     * <p>
     * This is a negative switch so that the default value 'false' remains compatible with older installations. 
     */ Modifier private final BasicType boolean VariableDeclarator disableSignup ConstructorDeclaration Modifier public Annotation DataBoundConstructor HudsonPrivateSecurityRealm FormalParameter BasicType boolean allowsSignup StatementExpression Assignment This MemberReference disableSignup MemberReference ! allowsSignup = MethodDeclaration Modifier public Annotation Override BasicType boolean allowsSignup ReturnStatement MemberReference ! disableSignup MethodDeclaration /**
     * This implementation doesn't support groups.
     */ Modifier public Annotation Override ReferenceType GroupDetails loadGroupByGroupname FormalParameter ReferenceType String groupname UsernameNotFoundException DataAccessException ThrowStatement ClassCreator ReferenceType UsernameNotFoundException MemberReference groupname MethodDeclaration Modifier public Annotation Override ReferenceType SecurityComponents createSecurityComponents LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding ClassCreator ReferenceType Binding StatementExpression MethodInvocation binding Literal ""passwordEncoder"" MemberReference PASSWORD_ENCODER setVariable LocalVariableDeclaration ReferenceType BeanBuilder VariableDeclarator builder ClassCreator ReferenceType BeanBuilder StatementExpression MethodInvocation builder MethodInvocation Hudson MemberReference servletContext MethodInvocation Literal ""/WEB-INF/security/HudsonPrivateSecurityRealm.groovy"" getResourceAsStream getInstance MemberReference binding parse LocalVariableDeclaration ReferenceType WebApplicationContext VariableDeclarator context MethodInvocation builder createApplicationContext ReturnStatement ClassCreator ReferenceType SecurityComponents MethodInvocation ClassReference ReferenceType AuthenticationManager MemberReference context findBean MethodInvocation ClassReference ReferenceType UserDetailsService MemberReference context findBean MethodDeclaration /**
     * Creates an user account. Used for self-registration.
     */ Modifier public doCreateAccount FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException IfStatement MethodInvocation ! allowsSignup BlockStatement StatementExpression MethodInvocation rsp MemberReference SC_UNAUTHORIZED Literal ""User sign up is prohibited"" sendError ReturnStatement End LocalVariableDeclaration ReferenceType User VariableDeclarator u MethodInvocation MemberReference req MemberReference rsp Literal true Literal ""signup.jelly"" createAccount IfStatement BinaryOperation != MemberReference u Literal null BlockStatement LocalVariableDeclaration ReferenceType Authentication VariableDeclarator a ClassCreator ReferenceType UsernamePasswordAuthenticationToken MethodInvocation u getId MethodInvocation req Literal ""password1"" getParameter StatementExpression Assignment MemberReference a This MethodInvocation getSecurityComponents MemberReference manager MethodInvocation MemberReference a authenticate = StatementExpression MethodInvocation SecurityContextHolder MethodInvocation MemberReference a setAuthentication getContext StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This Literal ""success.jelly"" getView End MethodDeclaration /**
     * Creates an user account. Used by admins.
     *
     * This version behaves differently from {@link #doCreateAccount(StaplerRequest, StaplerResponse)} in that
     * this is someone creating another user.
     */ Modifier public doCreateAccountByAdmin FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException StatementExpression MethodInvocation MemberReference Hudson ADMINISTER checkPermission IfStatement BinaryOperation != MethodInvocation MemberReference req MemberReference rsp Literal false Literal ""addUser.jelly"" createAccount Literal null BlockStatement StatementExpression MethodInvocation rsp Literal ""."" sendRedirect End MethodDeclaration /**
     * @return
     *      null if failed. The browser is already redirected to retry by the time this method returns.
     *      a valid {@link User} object if the user creation was successful.
     */ Modifier private ReferenceType User createAccount FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp FormalParameter BasicType boolean selfRegistration FormalParameter ReferenceType String formView ServletException IOException LocalVariableDeclaration ReferenceType SignupInfo VariableDeclarator si ClassCreator ReferenceType SignupInfo StatementExpression MethodInvocation req MemberReference si bindParameters IfStatement BinaryOperation && MemberReference selfRegistration MethodInvocation ! MemberReference si captcha validateCaptcha StatementExpression Assignment MemberReference si errorMessage Literal ""Text didn't match the word shown in the image"" = End IfStatement BinaryOperation && BinaryOperation != MemberReference si password1 Literal null MethodInvocation ! si.password1 MemberReference si password2 equals StatementExpression Assignment MemberReference si errorMessage Literal ""Password didn't match"" = End IfStatement BinaryOperation && BinaryOperation != MemberReference si password1 Literal null BinaryOperation != MethodInvocation si.password1 length Literal 0 StatementExpression Assignment MemberReference si errorMessage Literal ""Password is required"" = End IfStatement BinaryOperation || BinaryOperation == MemberReference si username Literal null BinaryOperation == MethodInvocation si.username length Literal 0 StatementExpression Assignment MemberReference si errorMessage Literal ""User name is required"" = BlockStatement LocalVariableDeclaration ReferenceType User VariableDeclarator user MethodInvocation User MemberReference si username get IfStatement BinaryOperation != MethodInvocation user ClassReference ReferenceType Details getProperty Literal null StatementExpression Assignment MemberReference si errorMessage Literal ""User name is already taken. Did you forget the password?"" = End End IfStatement BinaryOperation || BinaryOperation == MemberReference si fullname Literal null BinaryOperation == MethodInvocation si.fullname length Literal 0 StatementExpression Assignment MemberReference si fullname MemberReference si username = End IfStatement BinaryOperation || BinaryOperation == MemberReference si email Literal null MethodInvocation ! si.email Literal ""@"" contains StatementExpression Assignment MemberReference si errorMessage Literal ""Invalid e-mail address"" = End IfStatement BinaryOperation != MemberReference si errorMessage Literal null BlockStatement StatementExpression MethodInvocation req Literal ""data"" MemberReference si setAttribute StatementExpression MethodInvocation req MethodInvocation MemberReference req MemberReference rsp forward This MemberReference formView getView ReturnStatement Literal null End LocalVariableDeclaration ReferenceType User VariableDeclarator user MethodInvocation MemberReference si username MemberReference si password1 createAccount StatementExpression MethodInvocation user ClassCreator ReferenceType Mailer ReferenceType UserProperty MemberReference si email addProperty StatementExpression MethodInvocation user MemberReference si fullname setFullName StatementExpression MethodInvocation user save ReturnStatement MemberReference user MethodDeclaration /**
     * Creates a new user account by registering a password to the user.
     */ Modifier public ReferenceType User createAccount FormalParameter ReferenceType String userName FormalParameter ReferenceType String password IOException LocalVariableDeclaration ReferenceType User VariableDeclarator user MethodInvocation User MemberReference userName get StatementExpression MethodInvocation user MethodInvocation Details MemberReference password fromPlainPassword addProperty ReturnStatement MemberReference user MethodDeclaration /**
     * This is used primarily when the object is listed in the breadcrumb, in the user management screen.
     */ Modifier public ReferenceType String getDisplayName ReturnStatement Literal ""User Database"" MethodDeclaration Modifier public ReferenceType ACL getACL ReturnStatement MethodInvocation Hudson MethodInvocation getACL getInstance MethodDeclaration Modifier public checkPermission FormalParameter ReferenceType Permission permission StatementExpression MethodInvocation Hudson MethodInvocation MemberReference permission checkPermission getInstance MethodDeclaration Modifier public BasicType boolean hasPermission FormalParameter ReferenceType Permission permission ReturnStatement MethodInvocation Hudson MethodInvocation MemberReference permission hasPermission getInstance MethodDeclaration /**
     * All users who can login to the system.
     */ Modifier public ReferenceType List TypeArgument ReferenceType User getAllUsers LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType User VariableDeclarator r ClassCreator ReferenceType ArrayList TypeArgument ReferenceType User ForStatement EnhancedForControl VariableDeclaration ReferenceType User VariableDeclarator u MethodInvocation User getAll BlockStatement IfStatement BinaryOperation != MethodInvocation u ClassReference ReferenceType Details getProperty Literal null StatementExpression MethodInvocation r MemberReference u add End End StatementExpression MethodInvocation Collections MemberReference r sort ReturnStatement MemberReference r MethodDeclaration /**
     * This is to map users under the security realm URL.
     * This in turn helps us set up the right navigation breadcrumb.
     */ Modifier public ReferenceType User getUser FormalParameter ReferenceType String id ReturnStatement MethodInvocation User MemberReference id get FieldDeclaration Modifier private final static ReferenceType GrantedAuthority VariableDeclarator TEST_AUTHORITY ArrayInitializer MemberReference AUTHENTICATED_AUTHORITY ClassDeclaration Modifier public final static SignupInfo FieldDeclaration Modifier public ReferenceType String VariableDeclarator username VariableDeclarator password1 VariableDeclarator password2 VariableDeclarator fullname VariableDeclarator email VariableDeclarator captcha FieldDeclaration /**
         * To display an error message, set it here.
         */ Modifier public ReferenceType String VariableDeclarator errorMessage ClassDeclaration Modifier public final static /**
     * {@link UserProperty} that provides the {@link UserDetails} view of the User object.
     *
     * <p>
     * When a {@link User} object has this property on it, it means the user is configured
     * for log-in.
     *
     * <p>
     * When a {@link User} object is re-configured via the UI, the password
     * is sent to the hidden input field by using {@link Protector}, so that
     * the same password can be retained but without leaking information to the browser.
     */ Details FieldDeclaration /**
         * Hashed password.
         */ Modifier private ReferenceType String VariableDeclarator passwordHash FieldDeclaration /**
         * @deprecated Scrambled password.
         * Field kept here to load old (pre 1.283) user records,
         * but now marked transient so field is no longer saved.
         */ Modifier private transient ReferenceType String VariableDeclarator password ConstructorDeclaration Modifier private Details FormalParameter ReferenceType String passwordHash StatementExpression Assignment This MemberReference passwordHash MemberReference passwordHash = MethodDeclaration Modifier static ReferenceType Details fromHashedPassword FormalParameter ReferenceType String hashed ReturnStatement ClassCreator ReferenceType Details MemberReference hashed MethodDeclaration Modifier static ReferenceType Details fromPlainPassword FormalParameter ReferenceType String rawPassword ReturnStatement ClassCreator ReferenceType Details MethodInvocation PASSWORD_ENCODER MemberReference rawPassword Literal null encodePassword MethodDeclaration Modifier public ReferenceType GrantedAuthority getAuthorities ReturnStatement MemberReference TEST_AUTHORITY MethodDeclaration Modifier public ReferenceType String getPassword ReturnStatement MemberReference passwordHash MethodDeclaration Modifier public ReferenceType String getProtectedPassword ReturnStatement MethodInvocation Protector BinaryOperation + BinaryOperation + MethodInvocation Stapler MethodInvocation getSession MethodInvocation getId getCurrentRequest Literal ':' MethodInvocation getPassword protect MethodDeclaration Modifier public ReferenceType String getUsername ReturnStatement MethodInvocation user getId MethodDeclaration ReferenceType User getUser ReturnStatement MemberReference user MethodDeclaration Modifier public BasicType boolean isAccountNonExpired ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isAccountNonLocked ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isCredentialsNonExpired ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isEnabled ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isInvalid ReturnStatement BinaryOperation == MemberReference user Literal null MethodDeclaration Modifier private ReferenceType Object readResolve IfStatement BinaryOperation && BinaryOperation != MemberReference password Literal null BinaryOperation == MemberReference passwordHash Literal null StatementExpression Assignment MemberReference passwordHash MethodInvocation PASSWORD_ENCODER MethodInvocation Scrambler MemberReference password descramble Literal null encodePassword = End ReturnStatement This ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName IfStatement MethodInvocation isEnabled ReturnStatement MethodInvocation Messages HudsonPrivateSecurityRealm_Details_DisplayName ReturnStatement Literal null End MethodDeclaration Modifier public ReferenceType Details newInstance FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType JSONObject formData FormException LocalVariableDeclaration ReferenceType String VariableDeclarator pwd MethodInvocation Util MethodInvocation req Literal ""user.password"" getParameter fixEmpty LocalVariableDeclaration ReferenceType String VariableDeclarator pwd2 MethodInvocation Util MethodInvocation req Literal ""user.password2"" getParameter fixEmpty IfStatement MethodInvocation ! Util MethodInvocation MethodInvocation Util MemberReference pwd2 fixNull equals MemberReference pwd fixNull ThrowStatement ClassCreator ReferenceType FormException Literal ""Please confirm the password by typing it twice"" Literal ""user.password2"" End LocalVariableDeclaration ReferenceType String VariableDeclarator data MethodInvocation Protector MemberReference pwd unprotect IfStatement BinaryOperation != MemberReference data Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator prefix BinaryOperation + MethodInvocation Stapler MethodInvocation getSession MethodInvocation getId getCurrentRequest Literal ':' IfStatement MethodInvocation data MemberReference prefix startsWith ReturnStatement MethodInvocation Details MethodInvocation data MethodInvocation prefix length substring fromHashedPassword End End ReturnStatement MethodInvocation Details MethodInvocation Util MemberReference pwd fixNull fromPlainPassword MethodDeclaration Modifier public BasicType boolean isEnabled ReturnStatement BinaryOperation instanceof MethodInvocation Hudson MethodInvocation getSecurityRealm getInstance ReferenceType HudsonPrivateSecurityRealm MethodDeclaration Modifier public ReferenceType UserProperty newInstance FormalParameter ReferenceType User user ReturnStatement Literal null ReferenceType UserPropertyDescriptor ReferenceType UserProperty ReferenceType InvalidatableUserDetails ClassDeclaration Modifier public final static /**
     * {@link UserDetailsService} that loads user information from {@link User} object. 
     */ HudsonUserDetailsService MethodDeclaration Modifier public ReferenceType UserDetails loadUserByUsername FormalParameter ReferenceType String username LocalVariableDeclaration ReferenceType Details VariableDeclarator p MethodInvocation User MethodInvocation ClassReference ReferenceType Details getProperty MemberReference username get IfStatement BinaryOperation == MemberReference p Literal null ThrowStatement ClassCreator ReferenceType UsernameNotFoundException BinaryOperation + Literal ""Password is not set: "" MemberReference username End IfStatement BinaryOperation == MethodInvocation p getUser Literal null ThrowStatement ClassCreator ReferenceType AssertionError End ReturnStatement MemberReference p ReferenceType UserDetailsService ClassDeclaration Modifier public final static Annotation Extension /**
     * Displays ""manage users"" link in the system config if {@link HudsonPrivateSecurityRealm}
     * is in effect.
     */ ManageUserLinks MethodDeclaration Modifier public ReferenceType String getIconFileName IfStatement BinaryOperation instanceof MethodInvocation Hudson MethodInvocation getSecurityRealm getInstance ReferenceType HudsonPrivateSecurityRealm ReturnStatement Literal ""user.gif"" ReturnStatement Literal null End MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""securityRealm/"" MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages HudsonPrivateSecurityRealm_ManageUserLinks_DisplayName MethodDeclaration Modifier public Annotation Override ReferenceType String getDescription ReturnStatement MethodInvocation Messages HudsonPrivateSecurityRealm_ManageUserLinks_Description ReferenceType ManagementLink FieldDeclaration /**
     * {@link PasswordEncoder} based on SHA-256 and random salt generation.
     *
     * <p>
     * The salt is prepended to the hashed password and returned. So the encoded password is of the form
     * <tt>SALT ':' hash(PASSWORD,SALT)</tt>.
     *
     * <p>
     * This abbreviates the need to store the salt separately, which in turn allows us to hide the salt handling
     * in this little class. The rest of the Acegi thinks that we are not using salt.
     */ Modifier public final static ReferenceType PasswordEncoder VariableDeclarator PASSWORD_ENCODER ClassCreator ReferenceType PasswordEncoder FieldDeclaration Modifier private final ReferenceType PasswordEncoder VariableDeclarator passwordEncoder ClassCreator ReferenceType ShaPasswordEncoder Literal 256 MethodDeclaration Modifier public ReferenceType String encodePassword FormalParameter ReferenceType String rawPass FormalParameter ReferenceType Object _ DataAccessException ReturnStatement MethodInvocation MemberReference rawPass hash MethodDeclaration Modifier public BasicType boolean isPasswordValid FormalParameter ReferenceType String encPass FormalParameter ReferenceType String rawPass FormalParameter ReferenceType Object _ DataAccessException LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation encPass Literal ':' indexOf IfStatement BinaryOperation < MemberReference i Literal 0 ReturnStatement Literal false End LocalVariableDeclaration ReferenceType String VariableDeclarator salt MethodInvocation encPass Literal 0 MemberReference i substring ReturnStatement MethodInvocation encPass MethodInvocation MethodInvocation passwordEncoder MemberReference rawPass MemberReference salt encodePassword equals BinaryOperation + MemberReference i Literal 1 substring MethodDeclaration /**
         * Creates a hashed password by generating a random salt.
         */ Modifier private ReferenceType String hash FormalParameter ReferenceType String password LocalVariableDeclaration ReferenceType String VariableDeclarator salt MethodInvocation generateSalt ReturnStatement BinaryOperation + BinaryOperation + MemberReference salt Literal ':' MethodInvocation passwordEncoder MemberReference password MemberReference salt encodePassword MethodDeclaration /**
         * Generates random salt.
         */ Modifier private ReferenceType String generateSalt LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType SecureRandom VariableDeclarator sr ClassCreator ReferenceType SecureRandom ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 6 MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator upper MethodInvocation sr nextBoolean LocalVariableDeclaration BasicType char VariableDeclarator ch Cast BasicType char BinaryOperation + MethodInvocation sr Literal 26 nextInt Literal 'a' IfStatement MemberReference upper StatementExpression Assignment MemberReference ch MethodInvocation Character MemberReference ch toUpperCase = End StatementExpression MethodInvocation buf MemberReference ch append End ReturnStatement MethodInvocation buf toString ClassDeclaration Modifier public final static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages HudsonPrivateSecurityRealm_DisplayName MethodDeclaration Modifier public ReferenceType String getHelpFile ReturnStatement Literal ""/help/security/private-realm.html"" ReferenceType Descriptor TypeArgument ReferenceType SecurityRealm ReferenceType SecurityRealm ReferenceType ModelObject ReferenceType AccessControlled",0
163,163,"CompilationUnit PackageDeclaration hudson.slaves Import hudson.model.Descriptor Import hudson.model.TaskListener Import hudson.Util Import hudson.Extension Import org.kohsuke.stapler.DataBoundConstructor ClassDeclaration Modifier public /**
 * {@link ComputerLauncher} via JNLP.
 *
 * @author Stephen Connolly
 * @author Kohsuke Kawaguchi
*/ JNLPLauncher FieldDeclaration /**
     * If the slave needs to tunnel the connection to the master,
     * specify the ""host:port"" here. This can include the special
     * syntax ""host:"" and "":port"" to indicate the default host/port
     * shall be used.
     *
     * <p>
     * Null if no tunneling is necessary.
     *
     * @since 1.250
     */ Modifier public final ReferenceType String VariableDeclarator tunnel FieldDeclaration /**
     * Additional JVM arguments. Can be null.
     * @since 1.297
     */ Modifier public final ReferenceType String VariableDeclarator vmargs ConstructorDeclaration Modifier public Annotation DataBoundConstructor JNLPLauncher FormalParameter ReferenceType String tunnel FormalParameter ReferenceType String vmargs StatementExpression Assignment This MemberReference tunnel MethodInvocation Util MemberReference tunnel fixEmptyAndTrim = StatementExpression Assignment This MemberReference vmargs MethodInvocation Util MemberReference vmargs fixEmptyAndTrim = ConstructorDeclaration Modifier public JNLPLauncher StatementExpression ExplicitConstructorInvocation Literal null Literal null MethodDeclaration Modifier public Annotation Override BasicType boolean isLaunchSupported ReturnStatement Literal false MethodDeclaration Modifier public launch FormalParameter ReferenceType SlaveComputer computer FormalParameter ReferenceType TaskListener listener FieldDeclaration Modifier public final static Annotation Extension ReferenceType Descriptor TypeArgument ReferenceType ComputerLauncher VariableDeclarator DESCRIPTOR ClassCreator ReferenceType Descriptor TypeArgument ReferenceType ComputerLauncher MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages JNLPLauncher_displayName ReferenceType ComputerLauncher",0
25,25,"CompilationUnit PackageDeclaration hudson.model Import hudson.model.Queue.Task Import java.util.ArrayList Import java.util.List Import org.kohsuke.stapler.export.Exported Import org.kohsuke.stapler.export.ExportedBean ClassDeclaration Modifier public Annotation ExportedBean CauseAction FieldDeclaration Modifier private transient Annotation Deprecated ReferenceType Cause VariableDeclarator cause FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Cause VariableDeclarator causes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Cause MethodDeclaration Modifier public Annotation Exported ElementValuePair visibility Literal 2 ReferenceType List TypeArgument ReferenceType Cause getCauses ReturnStatement MemberReference causes ConstructorDeclaration Modifier public CauseAction FormalParameter ReferenceType Cause c StatementExpression This MemberReference causes MethodInvocation MemberReference c add ConstructorDeclaration Modifier public CauseAction FormalParameter ReferenceType CauseAction ca StatementExpression This MemberReference causes MethodInvocation MemberReference ca causes addAll MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement Literal ""Cause"" MethodDeclaration Modifier public ReferenceType String getIconFileName ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getUrlName ReturnStatement Literal ""cause"" MethodDeclaration /**
     * @deprecated as of 1.288
     *      but left here for backward compatibility.
     */ Modifier public ReferenceType String getShortDescription IfStatement MethodInvocation causes isEmpty ReturnStatement Literal ""N/A"" End ReturnStatement MethodInvocation causes MethodInvocation getShortDescription Literal 0 get MethodDeclaration Modifier public foldIntoExisting FormalParameter ReferenceType Task t FormalParameter ReferenceType List TypeArgument ReferenceType Action actions ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MemberReference actions BlockStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType CauseAction BlockStatement StatementExpression This MemberReference causes MethodInvocation Cast ReferenceType CauseAction MemberReference action addAll ReturnStatement End End StatementExpression MethodInvocation actions ClassCreator ReferenceType CauseAction This add MethodDeclaration Modifier private ReferenceType Object readResolve IfStatement BinaryOperation != MemberReference cause Literal null BlockStatement IfStatement BinaryOperation == MemberReference causes Literal null StatementExpression Assignment MemberReference causes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Cause = End StatementExpression MethodInvocation causes MemberReference cause add End ReturnStatement This ReferenceType FoldableAction",1
91,91,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.userdetails.UsernameNotFoundException Import org.acegisecurity.userdetails.UserDetailsService ClassDeclaration Modifier public /**
 * Thrown from {@link UserDetailsService#loadUserByUsername(String)}
 * to indicate that the underlying {@link SecurityRealm} is incapable
 * of retrieving the information, and furthermore, the system cannot
 * tell if such an user exists or not.
 *
 * <p>
 * This happens, for example, when the security realm is on top of the servlet implementation,
 * there's no way of even knowing if an user of a given name exists or not.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.280
 */ UserMayOrMayNotExistException ConstructorDeclaration Modifier public UserMayOrMayNotExistException FormalParameter ReferenceType String msg StatementExpression SuperConstructorInvocation MemberReference msg ConstructorDeclaration Modifier public UserMayOrMayNotExistException FormalParameter ReferenceType String msg FormalParameter ReferenceType Object extraInformation StatementExpression SuperConstructorInvocation MemberReference msg MemberReference extraInformation ConstructorDeclaration Modifier public UserMayOrMayNotExistException FormalParameter ReferenceType String msg FormalParameter ReferenceType Throwable t StatementExpression SuperConstructorInvocation MemberReference msg MemberReference t ReferenceType UsernameNotFoundException",0
480,480,,0
545,545,,0
478,478,,0
573,573,,0
249,249,"CompilationUnit PackageDeclaration hudson.model Import hudson.FilePath Import hudson.Launcher Import hudson.Util Import hudson.Launcher.RemoteLauncher Import hudson.model.Descriptor.FormException Import hudson.remoting.Callable Import hudson.remoting.VirtualChannel Import hudson.slaves.CommandLauncher Import hudson.slaves.ComputerLauncher Import hudson.slaves.DumbSlave Import hudson.slaves.JNLPLauncher Import hudson.slaves.NodeDescriptor Import hudson.slaves.NodeProperty Import hudson.slaves.NodePropertyDescriptor Import hudson.slaves.RetentionStrategy Import hudson.slaves.SlaveComputer Import hudson.tasks.DynamicLabeler Import hudson.tasks.LabelFinder Import hudson.util.ClockDifference Import hudson.util.DescribableList Import hudson.util.FormValidation Import java.io.File Import java.io.IOException Import java.io.InputStream Import java.io.Serializable Import java.net.MalformedURLException Import java.net.URL Import java.net.URLConnection Import java.util.ArrayList Import java.util.Collections Import java.util.HashSet Import java.util.List Import java.util.Set Import javax.servlet.ServletException Import org.apache.commons.io.IOUtils Import org.kohsuke.stapler.DataBoundConstructor Import org.kohsuke.stapler.QueryParameter Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse ClassDeclaration Modifier public abstract /**
 * Information about a Hudson slave node.
 *
 * <p>
 * Ideally this would have been in the <tt>hudson.slaves</tt> package,
 * but for compatibility reasons, it can't.
 *
 * <p>
 * TODO: move out more stuff to {@link DumbSlave}.
 *
 * @author Kohsuke Kawaguchi
 */ Slave FieldDeclaration /**
     * Name of this slave node.
     */ Modifier protected ReferenceType String VariableDeclarator name FieldDeclaration /**
     * Description of this node.
     */ Modifier private final ReferenceType String VariableDeclarator description FieldDeclaration /**
     * Path to the root of the workspace
     * from the view point of this node, such as ""/hudson""
     */ Modifier final protected ReferenceType String VariableDeclarator remoteFS FieldDeclaration /**
     * Number of executors of this node.
     */ Modifier private BasicType int VariableDeclarator numExecutors Literal 2 FieldDeclaration /**
     * Job allocation strategy.
     */ Modifier private ReferenceType Mode VariableDeclarator mode FieldDeclaration /**
     * Slave availablility strategy.
     */ Modifier private ReferenceType RetentionStrategy VariableDeclarator retentionStrategy FieldDeclaration /**
     * The starter that will startup this slave.
     */ Modifier private ReferenceType ComputerLauncher VariableDeclarator launcher FieldDeclaration /**
     * Whitespace-separated labels.
     */ Modifier private ReferenceType String VariableDeclarator label Literal """" FieldDeclaration Modifier private ReferenceType DescribableList TypeArgument ReferenceType NodeProperty TypeArgument ? TypeArgument ReferenceType NodePropertyDescriptor VariableDeclarator nodeProperties ClassCreator ReferenceType DescribableList TypeArgument ReferenceType NodeProperty TypeArgument ? TypeArgument ReferenceType NodePropertyDescriptor MethodInvocation Hudson getInstance FieldDeclaration /**
     * Lazily computed set of labels from {@link #label}.
     */ Modifier private transient volatile ReferenceType Set TypeArgument ReferenceType Label VariableDeclarator labels FieldDeclaration Modifier private transient volatile ReferenceType Set TypeArgument ReferenceType Label VariableDeclarator dynamicLabels FieldDeclaration Modifier private transient volatile BasicType int VariableDeclarator dynamicLabelsInstanceHash ConstructorDeclaration Modifier public Annotation DataBoundConstructor Slave FormalParameter ReferenceType String name FormalParameter ReferenceType String nodeDescription FormalParameter ReferenceType String remoteFS FormalParameter ReferenceType String numExecutors FormalParameter ReferenceType Mode mode FormalParameter ReferenceType String labelString FormalParameter ReferenceType ComputerLauncher launcher FormalParameter ReferenceType RetentionStrategy retentionStrategy FormalParameter ReferenceType List TypeArgument ReferenceType NodeProperty TypeArgument ? extends nodeProperties FormException IOException StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference nodeDescription MemberReference remoteFS MethodInvocation Util MethodInvocation intValue MemberReference numExecutors Literal 1 tryParseNumber MemberReference mode MemberReference labelString MemberReference launcher MemberReference retentionStrategy MemberReference nodeProperties ConstructorDeclaration Modifier public Annotation Deprecated Slave FormalParameter ReferenceType String name FormalParameter ReferenceType String nodeDescription FormalParameter ReferenceType String remoteFS FormalParameter BasicType int numExecutors FormalParameter ReferenceType Mode mode FormalParameter ReferenceType String labelString FormalParameter ReferenceType ComputerLauncher launcher FormalParameter ReferenceType RetentionStrategy retentionStrategy FormException IOException StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference nodeDescription MemberReference remoteFS MemberReference numExecutors MemberReference mode MemberReference labelString MemberReference launcher MemberReference retentionStrategy ClassCreator ReferenceType ArrayList ConstructorDeclaration Modifier public Slave FormalParameter ReferenceType String name FormalParameter ReferenceType String nodeDescription FormalParameter ReferenceType String remoteFS FormalParameter BasicType int numExecutors FormalParameter ReferenceType Mode mode FormalParameter ReferenceType String labelString FormalParameter ReferenceType ComputerLauncher launcher FormalParameter ReferenceType RetentionStrategy retentionStrategy FormalParameter ReferenceType List TypeArgument ReferenceType NodeProperty TypeArgument ? extends nodeProperties FormException IOException StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference description MemberReference nodeDescription = StatementExpression Assignment This MemberReference numExecutors MemberReference numExecutors = StatementExpression Assignment This MemberReference mode MemberReference mode = StatementExpression Assignment This MemberReference remoteFS MemberReference remoteFS = StatementExpression Assignment This MemberReference label MethodInvocation Util MethodInvocation trim MemberReference labelString fixNull = StatementExpression Assignment This MemberReference launcher MemberReference launcher = StatementExpression Assignment This MemberReference retentionStrategy MemberReference retentionStrategy = StatementExpression MethodInvocation getAssignedLabels StatementExpression This MemberReference nodeProperties MethodInvocation MemberReference nodeProperties replaceBy IfStatement MethodInvocation name Literal """" equals ThrowStatement ClassCreator ReferenceType FormException MethodInvocation Messages Slave_InvalidConfig_NoName Literal null End IfStatement BinaryOperation <= This MemberReference numExecutors Literal 0 ThrowStatement ClassCreator ReferenceType FormException MethodInvocation Messages MemberReference name Slave_InvalidConfig_Executors Literal null End MethodDeclaration Modifier public ReferenceType ComputerLauncher getLauncher ReturnStatement TernaryExpression BinaryOperation == MemberReference launcher Literal null ClassCreator ReferenceType JNLPLauncher MemberReference launcher MethodDeclaration Modifier public setLauncher FormalParameter ReferenceType ComputerLauncher launcher StatementExpression Assignment This MemberReference launcher MemberReference launcher = MethodDeclaration Modifier public ReferenceType String getRemoteFS ReturnStatement MemberReference remoteFS MethodDeclaration Modifier public ReferenceType String getNodeName ReturnStatement MemberReference name MethodDeclaration Modifier public setNodeName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name = MethodDeclaration Modifier public ReferenceType String getNodeDescription ReturnStatement MemberReference description MethodDeclaration Modifier public BasicType int getNumExecutors ReturnStatement MemberReference numExecutors MethodDeclaration Modifier public ReferenceType Mode getMode ReturnStatement MemberReference mode MethodDeclaration Modifier public setMode FormalParameter ReferenceType Mode mode StatementExpression Assignment This MemberReference mode MemberReference mode = MethodDeclaration Modifier public ReferenceType DescribableList TypeArgument ReferenceType NodeProperty TypeArgument ? TypeArgument ReferenceType NodePropertyDescriptor getNodeProperties ReturnStatement MemberReference nodeProperties MethodDeclaration Modifier public ReferenceType RetentionStrategy getRetentionStrategy ReturnStatement TernaryExpression BinaryOperation == MemberReference retentionStrategy Literal null MemberReference RetentionStrategy.Always INSTANCE MemberReference retentionStrategy MethodDeclaration Modifier public setRetentionStrategy FormalParameter ReferenceType RetentionStrategy availabilityStrategy StatementExpression Assignment This MemberReference retentionStrategy MemberReference availabilityStrategy = MethodDeclaration Modifier public ReferenceType String getLabelString ReturnStatement MethodInvocation Util MethodInvocation trim MemberReference label fixNull MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Label getAssignedLabels IfStatement BinaryOperation || BinaryOperation == MemberReference labels Literal null MethodInvocation isChangedDynamicLabels BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Label VariableDeclarator r MethodInvocation Label MethodInvocation getLabelString parse StatementExpression MethodInvocation r MethodInvocation getSelfLabel add StatementExpression MethodInvocation r MethodInvocation getDynamicLabels addAll StatementExpression Assignment This MemberReference labels MethodInvocation Collections MemberReference r unmodifiableSet = End ReturnStatement MemberReference labels MethodDeclaration /**
     * Check if we should rebuild the list of dynamic labels.
     * @todo make less hacky
     * @return
     */ Modifier private BasicType boolean isChangedDynamicLabels LocalVariableDeclaration ReferenceType Computer VariableDeclarator comp MethodInvocation getComputer IfStatement BinaryOperation == MemberReference comp Literal null BlockStatement ReturnStatement BinaryOperation != MemberReference dynamicLabelsInstanceHash Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference dynamicLabelsInstanceHash MethodInvocation comp hashCode BlockStatement ReturnStatement Literal false End StatementExpression Assignment MemberReference dynamicLabels Literal null = ReturnStatement Literal true End MethodDeclaration /**
     * Returns the possibly empty set of labels that it has been determined as supported by this node.
     *
     * @todo make less hacky
     * @see hudson.tasks.LabelFinder
     *
     * @return
     *      never null.
     */ Modifier public ReferenceType Set TypeArgument ReferenceType Label getDynamicLabels LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Label VariableDeclarator labels MemberReference dynamicLabels IfStatement BinaryOperation != MemberReference labels Literal null ReturnStatement MemberReference labels End SynchronizedStatement This StatementExpression Assignment MemberReference labels MemberReference dynamicLabels = IfStatement BinaryOperation != MemberReference labels Literal null ReturnStatement MemberReference labels End StatementExpression Assignment MemberReference dynamicLabels Assignment MemberReference labels ClassCreator ReferenceType HashSet TypeArgument ReferenceType Label = = LocalVariableDeclaration ReferenceType Computer VariableDeclarator computer MethodInvocation getComputer LocalVariableDeclaration ReferenceType VirtualChannel VariableDeclarator channel IfStatement BinaryOperation && BinaryOperation != MemberReference computer Literal null BinaryOperation != Assignment MemberReference channel MethodInvocation computer getChannel = Literal null BlockStatement StatementExpression Assignment MemberReference dynamicLabelsInstanceHash MethodInvocation computer hashCode = ForStatement EnhancedForControl VariableDeclaration ReferenceType DynamicLabeler VariableDeclarator labeler MemberReference LabelFinder LABELERS BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation labeler MemberReference channel findLabels BlockStatement StatementExpression MethodInvocation labels MethodInvocation Hudson MethodInvocation MemberReference label getLabel getInstance add End End BlockStatement StatementExpression Assignment MemberReference dynamicLabelsInstanceHash Literal 0 = End ReturnStatement MemberReference labels MethodDeclaration Modifier public ReferenceType ClockDifference getClockDifference IOException InterruptedException LocalVariableDeclaration ReferenceType VirtualChannel VariableDeclarator channel MethodInvocation MethodInvocation getChannel getComputer IfStatement BinaryOperation == MemberReference channel Literal null ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + MethodInvocation getNodeName Literal "" is offline"" End LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType long VariableDeclarator slaveTime MethodInvocation channel ClassCreator ReferenceType GetSystemTime call LocalVariableDeclaration BasicType long VariableDeclarator endTime MethodInvocation System currentTimeMillis ReturnStatement ClassCreator ReferenceType ClockDifference BinaryOperation - BinaryOperation / BinaryOperation + MemberReference startTime MemberReference endTime Literal 2 MemberReference slaveTime MethodDeclaration Modifier public ReferenceType Computer createComputer ReturnStatement ClassCreator ReferenceType SlaveComputer This MethodDeclaration Modifier public ReferenceType FilePath getWorkspaceFor FormalParameter ReferenceType TopLevelItem item LocalVariableDeclaration ReferenceType FilePath VariableDeclarator r MethodInvocation getWorkspaceRoot IfStatement BinaryOperation == MemberReference r Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation r MethodInvocation item getName child MethodDeclaration Modifier public ReferenceType FilePath getRootPath ReturnStatement MethodInvocation MemberReference remoteFS createPath MethodDeclaration /**
     * Root directory on this slave where all the job workspaces are laid out.
     * @return
     *      null if not connected.
     */ Modifier public ReferenceType FilePath getWorkspaceRoot LocalVariableDeclaration ReferenceType FilePath VariableDeclarator r MethodInvocation getRootPath IfStatement BinaryOperation == MemberReference r Literal null ReturnStatement Literal null End ReturnStatement MethodInvocation r Literal ""workspace"" child ClassDeclaration Modifier public final static /**
     * Web-bound object used to serve jar files for JNLP.
     */ JnlpJar FieldDeclaration Modifier private final ReferenceType String VariableDeclarator fileName ConstructorDeclaration Modifier public JnlpJar FormalParameter ReferenceType String fileName StatementExpression Assignment This MemberReference fileName MemberReference fileName = MethodDeclaration Modifier public doIndex FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException ServletException LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator con MethodInvocation connect StatementExpression MethodInvocation rsp Literal ""Content-Disposition"" BinaryOperation + Literal ""inline; filename="" MemberReference fileName setHeader LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation con getInputStream StatementExpression MethodInvocation rsp MemberReference req MemberReference in MethodInvocation con getLastModified MethodInvocation con getContentLength Literal ""*.jar"" serveFile StatementExpression MethodInvocation in close MethodDeclaration Modifier private ReferenceType URLConnection connect IOException LocalVariableDeclaration ReferenceType URL VariableDeclarator res MethodInvocation getURL ReturnStatement MethodInvocation res openConnection MethodDeclaration Modifier public ReferenceType URL getURL MalformedURLException LocalVariableDeclaration ReferenceType URL VariableDeclarator res MethodInvocation Hudson MemberReference servletContext MethodInvocation BinaryOperation + Literal ""/WEB-INF/"" MemberReference fileName getResource getInstance IfStatement BinaryOperation == MemberReference res Literal null BlockStatement StatementExpression Assignment MemberReference res ClassCreator ReferenceType URL ClassCreator MethodInvocation getAbsoluteFile MethodInvocation toURL ReferenceType File Literal ""."" BinaryOperation + Literal ""target/generated-resources/WEB-INF/"" MemberReference fileName = End ReturnStatement MemberReference res MethodDeclaration Modifier public BasicType byte readFully IOException LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation MethodInvocation getInputStream connect TryStatement ReturnStatement MethodInvocation IOUtils MemberReference in toByteArray StatementExpression MethodInvocation in close MethodDeclaration Modifier public ReferenceType Launcher createLauncher FormalParameter ReferenceType TaskListener listener LocalVariableDeclaration ReferenceType SlaveComputer VariableDeclarator c MethodInvocation getComputer ReturnStatement ClassCreator MethodInvocation This decorateFor ReferenceType RemoteLauncher MemberReference listener MethodInvocation c getChannel MethodInvocation c isUnix MethodDeclaration /**
     * Gets the corresponding computer object.
     */ Modifier public ReferenceType SlaveComputer getComputer ReturnStatement Cast ReferenceType SlaveComputer MethodInvocation Hudson MethodInvocation This getComputer getInstance MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation == This MemberReference o ReturnStatement Literal true End IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation != MethodInvocation getClass MethodInvocation o getClass ReturnStatement Literal false End LocalVariableDeclaration Modifier final ReferenceType Slave VariableDeclarator that Cast ReferenceType Slave MemberReference o ReturnStatement MethodInvocation name MemberReference that name equals MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation name hashCode MethodDeclaration /**
     * Invoked by XStream when this object is read into memory.
     */ Modifier private ReferenceType Object readResolve IfStatement BinaryOperation && BinaryOperation != MemberReference command Literal null BinaryOperation == MemberReference agentCommand Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation command length Literal 0 StatementExpression Assignment MemberReference command Literal ' ' += End StatementExpression Assignment MemberReference agentCommand BinaryOperation + MemberReference command Literal ""java -jar ~/bin/slave.jar"" = End IfStatement BinaryOperation == MemberReference launcher Literal null BlockStatement StatementExpression Assignment MemberReference launcher TernaryExpression BinaryOperation || BinaryOperation == MemberReference agentCommand Literal null BinaryOperation == MethodInvocation agentCommand MethodInvocation length trim Literal 0 ClassCreator ReferenceType JNLPLauncher ClassCreator ReferenceType CommandLauncher MemberReference agentCommand = End IfStatement BinaryOperation == MemberReference nodeProperties Literal null StatementExpression Assignment MemberReference nodeProperties ClassCreator ReferenceType DescribableList TypeArgument ReferenceType NodeProperty TypeArgument ? TypeArgument ReferenceType NodePropertyDescriptor MethodInvocation Hudson getInstance = End ReturnStatement This MethodDeclaration Modifier public ReferenceType SlaveDescriptor getDescriptor LocalVariableDeclaration ReferenceType Descriptor VariableDeclarator d MethodInvocation Hudson MethodInvocation MethodInvocation getClass getDescriptor getInstance IfStatement BinaryOperation instanceof MemberReference d ReferenceType SlaveDescriptor ReturnStatement Cast ReferenceType SlaveDescriptor MemberReference d End IfStatement BinaryOperation == MemberReference d Literal null ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + MethodInvocation getClass Literal "" doesn't have a descriptor"" End ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + MethodInvocation d getClass Literal "" needs to extend from SlaveDescriptor"" ClassDeclaration Modifier public static abstract SlaveDescriptor MethodDeclaration Modifier public ReferenceType FormValidation doCheckNumExecutors FormalParameter Annotation QueryParameter ReferenceType String value ReturnStatement MethodInvocation FormValidation MemberReference value validatePositiveInteger MethodDeclaration /**
         * Performs syntactical check on the remote FS for slaves.
         */ Modifier public ReferenceType FormValidation doCheckRemoteFs FormalParameter Annotation QueryParameter ReferenceType String value IOException ServletException IfStatement BinaryOperation == MethodInvocation Util MemberReference value fixEmptyAndTrim Literal null ReturnStatement MethodInvocation FormValidation Literal ""Remote directory is mandatory"" error End IfStatement BinaryOperation || MethodInvocation value Literal ""\\\\"" startsWith MethodInvocation value Literal ""/net/"" startsWith ReturnStatement MethodInvocation FormValidation BinaryOperation + Literal ""Are you sure you want to use network mounted file system for FS root? "" Literal ""Note that this directory needs not be visible to the master."" warning End ReturnStatement MethodInvocation FormValidation ok ReferenceType NodeDescriptor FieldDeclaration /**
     * In Hudson < 1.69 this was used to store the local file path
     * to the remote workspace. No longer in use.
     *
     * @deprecated
     *      ... but still in use during the transition.
     */ Modifier private ReferenceType File VariableDeclarator localFS FieldDeclaration /**
     * In Hudson < 1.69 this was used to store the command
     * to connect to the remote machine, like ""ssh myslave"".
     *
     * @deprecated
     */ Modifier private transient ReferenceType String VariableDeclarator command FieldDeclaration /**
     * Command line to launch the agent, like
     * ""ssh myslave java -jar /path/to/hudson-remoting.jar""
     */ Modifier private transient ReferenceType String VariableDeclarator agentCommand ClassDeclaration Modifier private final static /**
     * Obtains the system clock.
     */ GetSystemTime MethodDeclaration Modifier public ReferenceType Long call ReturnStatement MethodInvocation System currentTimeMillis FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Callable TypeArgument ReferenceType Long TypeArgument ReferenceType RuntimeException ReferenceType Node ReferenceType Serializable",0
363,363,,1
487,487,,0
47,47,"CompilationUnit PackageDeclaration hudson.matrix Import hudson.ExtensionPoint Import hudson.Launcher Import hudson.model.Action Import hudson.model.Build Import hudson.model.BuildListener Import hudson.tasks.BuildStep Import hudson.tasks.Publisher Import java.io.IOException ClassDeclaration Modifier public abstract /**
 * Performs the aggregation of {@link MatrixRun} results
 * into {@link MatrixBuild}.
 *
 * <p>
 * {@link MatrixAggregator} is a transitive stateful mutable object.
 * Unlike {@link Publisher}, it is not persisted. Instead, a fresh
 * instance is created for each {@link MatrixBuild}, and various
 * methods on this class are invoked in the event callback style
 * as the build progresses.
 *
 * <p>
 * The end result of the aggregation should be
 * {@link MatrixBuild#addAction(Action) contributed as actions}. 
 *
 * @author Kohsuke Kawaguchi
 * @since 1.115
 * @see MatrixAggregatable
 */ MatrixAggregator FieldDeclaration /**
     * The build in progress. Never null.
     */ Modifier final protected ReferenceType MatrixBuild VariableDeclarator build FieldDeclaration Modifier final protected ReferenceType Launcher VariableDeclarator launcher FieldDeclaration /**
     * The listener to send the output to. Never null.
     */ Modifier final protected ReferenceType BuildListener VariableDeclarator listener ConstructorDeclaration Modifier protected MatrixAggregator FormalParameter ReferenceType MatrixBuild build FormalParameter ReferenceType Launcher launcher FormalParameter ReferenceType BuildListener listener StatementExpression Assignment This MemberReference build MemberReference build = StatementExpression Assignment This MemberReference launcher MemberReference launcher = StatementExpression Assignment This MemberReference listener MemberReference listener = MethodDeclaration /**
     * Called before the build starts.
     *
     * @return
     *      true if the build can continue, false if there was an error
     *      and the build needs to be aborted.
     * @see BuildStep#prebuild(Build,BuildListener)
     */ Modifier public BasicType boolean startBuild InterruptedException IOException ReturnStatement Literal true MethodDeclaration /**
     * Called whenever one run is completed.
     *
     * @param run
     *      The completed {@link MatrixRun} object. Always non-null.
     * @return
     *      See {@link #startBuild()} for the return value semantics.
     */ Modifier public BasicType boolean endRun FormalParameter ReferenceType MatrixRun run InterruptedException IOException ReturnStatement Literal true MethodDeclaration /**
     * Called after all the {@link MatrixRun}s have been completed
     * to indicate that the build is about to finish.
     * 
     * @return
     *      See {@link #startBuild()} for the return value semantics.
     */ Modifier public BasicType boolean endBuild InterruptedException IOException ReturnStatement Literal true ReferenceType ExtensionPoint",1
206,206,"CompilationUnit PackageDeclaration hudson.tasks.junit Import java.util.Collection ClassDeclaration Modifier public abstract /**
 * Cumulated result of multiple tests.
 *
 * @author Kohsuke Kawaguchi
 */ TabulatedResult MethodDeclaration /**
     * Gets the human readable title of this result object.
     */ Modifier public abstract ReferenceType String getTitle MethodDeclaration /**
     * Gets the total number of passed tests.
     */ Modifier public abstract BasicType int getPassCount MethodDeclaration /**
     * Gets the total number of failed tests.
     */ Modifier public abstract BasicType int getFailCount MethodDeclaration /**
     * Gets the total number of skipped tests.
     */ Modifier public abstract BasicType int getSkipCount MethodDeclaration /**
     * Gets the total number of tests.
     */ Modifier public final BasicType int getTotalCount ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation getPassCount MethodInvocation getFailCount MethodInvocation getSkipCount MethodDeclaration /**
     * Gets the child test result objects.
     */ Modifier public abstract ReferenceType Collection TypeArgument ? getChildren MethodDeclaration /**
     * Gets the name of this object.
     */ Modifier public abstract Annotation Override ReferenceType String getName ReferenceType TestObject",0
36,36,"CompilationUnit PackageDeclaration hudson.remoting InterfaceDeclaration Modifier public /**
 * {@link Callable} that nominates another claassloader for serialization.
 *
 * <p>
 * For various reasons, one {@link Callable} object (and all the objects reachable from it) is
 * serialized by one classloader.
 * By default, the classloader that loaded {@link Callable} object itself is used,
 * but when {@link Callable} object refers to other objects that are loaded by other classloaders,
 * this will fail to deserialize on the remote end.
 *
 * <p>
 * In such a case, implement this interface, instead of plain {@link Callable} and
 * return a classloader that can see all the classes.
 *
 * In case of Hudson, {@code PluginManager.uberClassLoader} is a good candidate.  
 *
 * @author Kohsuke Kawaguchi
 */ DelegatingCallable MethodDeclaration ReferenceType ClassLoader getClassLoader TypeParameter V TypeParameter T ReferenceType Throwable ReferenceType Callable TypeArgument ReferenceType V TypeArgument ReferenceType T",1
430,430,,0
132,132,"CompilationUnit PackageDeclaration hudson.model Import java.io.File Import java.io.FilenameFilter Import java.io.IOException Import java.util.AbstractMap Import java.util.Collections Import java.util.Comparator Import java.util.Map Import java.util.Set Import java.util.SortedMap Import java.util.TreeMap Import java.util.logging.Logger Import java.text.SimpleDateFormat Import java.text.ParseException ClassDeclaration Modifier public final /**
 * {@link Map} from build number to {@link Run}.
 *
 * <p>
 * This class is multi-thread safe by using copy-on-write technique,
 * and it also updates the bi-directional links within {@link Run}
 * accordingly.
 *
 * @author Kohsuke Kawaguchi
 */ RunMap FieldDeclaration Modifier private transient volatile ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator builds ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R MemberReference COMPARATOR FieldDeclaration /**
     * Read-only view of this map.
     */ Modifier private final ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator view MethodInvocation Collections This unmodifiableSortedMap MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Entry TypeArgument ReferenceType Integer TypeArgument ReferenceType R entrySet ReturnStatement MethodInvocation Collections MethodInvocation builds entrySet unmodifiableSet MethodDeclaration Modifier public synchronized ReferenceType R put FormalParameter ReferenceType R value ReturnStatement MethodInvocation MethodInvocation value getNumber MemberReference value put MethodDeclaration Modifier public synchronized ReferenceType R put FormalParameter ReferenceType Integer key FormalParameter ReferenceType R value LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator m ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R MemberReference builds LocalVariableDeclaration ReferenceType R VariableDeclarator r MethodInvocation MemberReference m MemberReference key MemberReference value update StatementExpression Assignment This MemberReference builds MemberReference m = ReturnStatement MemberReference r MethodDeclaration Modifier public synchronized putAll FormalParameter ReferenceType Map TypeArgument ReferenceType Integer extends TypeArgument ReferenceType R extends rhs LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator m ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R MemberReference builds ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Integer extends TypeArgument ReferenceType R extends VariableDeclarator e MethodInvocation rhs entrySet StatementExpression MethodInvocation MemberReference m MethodInvocation e getKey MethodInvocation e getValue update End StatementExpression Assignment This MemberReference builds MemberReference m = MethodDeclaration Modifier private ReferenceType R update FormalParameter ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R m FormalParameter ReferenceType Integer key FormalParameter ReferenceType R value LocalVariableDeclaration ReferenceType R VariableDeclarator first TernaryExpression MethodInvocation m isEmpty Literal null MethodInvocation m MethodInvocation m firstKey get LocalVariableDeclaration ReferenceType R VariableDeclarator r MethodInvocation m MemberReference key MemberReference value put LocalVariableDeclaration ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator head MethodInvocation m MemberReference key headMap IfStatement MethodInvocation ! head isEmpty BlockStatement LocalVariableDeclaration ReferenceType R VariableDeclarator prev MethodInvocation m MethodInvocation head lastKey get StatementExpression Assignment MemberReference value previousBuild MemberReference prev previousBuild = StatementExpression Assignment MemberReference value nextBuild MemberReference prev = IfStatement BinaryOperation != MemberReference value previousBuild Literal null StatementExpression Assignment MemberReference value.previousBuild nextBuild MemberReference value = End StatementExpression Assignment MemberReference prev previousBuild MemberReference value = BlockStatement StatementExpression Assignment MemberReference value previousBuild MemberReference first = StatementExpression Assignment MemberReference value nextBuild Literal null = IfStatement BinaryOperation != MemberReference first Literal null StatementExpression Assignment MemberReference first nextBuild MemberReference value = End End ReturnStatement MemberReference r MethodDeclaration Modifier public synchronized BasicType boolean remove FormalParameter ReferenceType R run IfStatement BinaryOperation != MemberReference run nextBuild Literal null StatementExpression Assignment MemberReference run.nextBuild previousBuild MemberReference run previousBuild = End IfStatement BinaryOperation != MemberReference run previousBuild Literal null StatementExpression Assignment MemberReference run.previousBuild nextBuild MemberReference run nextBuild = End LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator m ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R MemberReference builds LocalVariableDeclaration ReferenceType R VariableDeclarator r MethodInvocation m MethodInvocation run getNumber remove StatementExpression Assignment This MemberReference builds MemberReference m = ReturnStatement BinaryOperation != MemberReference r Literal null MethodDeclaration Modifier public synchronized reset FormalParameter ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R builds StatementExpression Assignment This MemberReference builds ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R MemberReference COMPARATOR = StatementExpression MethodInvocation MemberReference builds putAll MethodDeclaration /**
     * Gets the read-only view of this map.
     */ Modifier public ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R getView ReturnStatement MemberReference view MethodDeclaration Modifier public ReferenceType Comparator TypeArgument ReferenceType Integer super comparator ReturnStatement MethodInvocation builds comparator MethodDeclaration Modifier public ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R subMap FormalParameter ReferenceType Integer fromKey FormalParameter ReferenceType Integer toKey ReturnStatement MethodInvocation builds MemberReference fromKey MemberReference toKey subMap MethodDeclaration Modifier public ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R headMap FormalParameter ReferenceType Integer toKey ReturnStatement MethodInvocation builds MemberReference toKey headMap MethodDeclaration Modifier public ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R tailMap FormalParameter ReferenceType Integer fromKey ReturnStatement MethodInvocation builds MemberReference fromKey tailMap MethodDeclaration Modifier public ReferenceType Integer firstKey ReturnStatement MethodInvocation builds firstKey MethodDeclaration Modifier public ReferenceType Integer lastKey ReturnStatement MethodInvocation builds lastKey FieldDeclaration Modifier public final static ReferenceType Comparator TypeArgument ReferenceType Comparable VariableDeclarator COMPARATOR ClassCreator ReferenceType Comparator TypeArgument ReferenceType Comparable MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Comparable o1 FormalParameter ReferenceType Comparable o2 ReturnStatement MethodInvocation - o1 MemberReference o2 compareTo InterfaceDeclaration Modifier public /**
     * {@link Run} factory.
     */ Constructor MethodDeclaration ReferenceType R create FormalParameter ReferenceType File dir IOException TypeParameter R ReferenceType Run TypeArgument ? TypeArgument ReferenceType R MethodDeclaration /**
     * Fills in {@link RunMap} by loading build records from the file system.
     *
     * @param job
     *      Job that owns this map.
     * @param cons
     *      Used to create new instance of {@link Run}.
     */ Modifier public synchronized load FormalParameter ReferenceType Job job FormalParameter ReferenceType Constructor TypeArgument ReferenceType R cons LocalVariableDeclaration Modifier final ReferenceType SimpleDateFormat VariableDeclarator formatter MethodInvocation Run.ID_FORMATTER get LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R VariableDeclarator builds ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R MemberReference RunMap COMPARATOR LocalVariableDeclaration ReferenceType File VariableDeclarator buildDir MethodInvocation job getBuildDir StatementExpression MethodInvocation buildDir mkdirs LocalVariableDeclaration ReferenceType String VariableDeclarator buildDirs MethodInvocation buildDir ClassCreator ReferenceType FilenameFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File dir FormalParameter ReferenceType String name IfStatement MethodInvocation ! MemberReference name isCorrectDate BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + Literal ""Skipping "" ClassCreator ReferenceType File MemberReference dir MemberReference name fine ReturnStatement Literal false End ReturnStatement BinaryOperation && MethodInvocation ! name Literal ""0000"" startsWith ClassCreator MethodInvocation isDirectory ReferenceType File MemberReference dir MemberReference name MethodDeclaration Modifier private BasicType boolean isCorrectDate FormalParameter ReferenceType String name TryStatement IfStatement MethodInvocation formatter MethodInvocation MemberReference name equals MethodInvocation formatter MemberReference name parse format ReturnStatement Literal true End CatchClause CatchClauseParameter ParseException e ReturnStatement Literal false list ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator build MemberReference buildDirs BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator d ClassCreator ReferenceType File MemberReference buildDir MemberReference build IfStatement ClassCreator MethodInvocation exists ReferenceType File MemberReference d Literal ""build.xml"" BlockStatement TryStatement LocalVariableDeclaration ReferenceType R VariableDeclarator b MethodInvocation cons MemberReference d create StatementExpression MethodInvocation builds MethodInvocation b getNumber MemberReference b put CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter InstantiationError e StatementExpression MethodInvocation e printStackTrace End End StatementExpression MethodInvocation MemberReference builds reset FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger ClassReference MethodInvocation getName ReferenceType RunMap getLogger TypeParameter R ReferenceType Run TypeArgument ? TypeArgument ReferenceType R ReferenceType AbstractMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R ReferenceType SortedMap TypeArgument ReferenceType Integer TypeArgument ReferenceType R",0
372,372,,0
324,324,"CompilationUnit PackageDeclaration hudson.remoting Import hudson.remoting.Channel.Mode Import org.w3c.dom.Document Import org.w3c.dom.NodeList Import org.xml.sax.SAXException Import org.kohsuke.args4j.Option Import org.kohsuke.args4j.CmdLineParser Import org.kohsuke.args4j.CmdLineException Import javax.xml.parsers.DocumentBuilder Import javax.xml.parsers.DocumentBuilderFactory Import javax.xml.parsers.ParserConfigurationException Import javax.net.ssl.SSLHandshakeException Import javax.net.ssl.HttpsURLConnection Import javax.net.ssl.TrustManager Import javax.net.ssl.SSLContext Import javax.net.ssl.X509TrustManager Import javax.net.ssl.HostnameVerifier Import javax.net.ssl.SSLSession Import java.io.IOException Import java.io.InputStream Import java.io.OutputStream Import java.io.File Import java.io.BufferedInputStream Import java.io.BufferedOutputStream Import java.io.FileWriter Import java.lang.reflect.InvocationTargetException Import java.lang.reflect.Method Import java.net.URL Import java.net.URLConnection Import java.net.ServerSocket Import java.net.Socket Import java.net.URLClassLoader Import java.net.InetSocketAddress Import java.net.HttpURLConnection Import java.util.ArrayList Import java.util.List Import java.util.concurrent.ExecutorService Import java.util.concurrent.Executors Import java.security.cert.X509Certificate Import java.security.cert.CertificateException Import java.security.NoSuchAlgorithmException Import java.security.KeyManagementException ClassDeclaration Modifier public /**
 * Entry point for running a {@link Channel}. This is the main method of the slave JVM.
 *
 * <p>
 * This class also defines several methods for
 * starting a channel on a fresh JVM.
 *
 * @author Kohsuke Kawaguchi
 */ Launcher FieldDeclaration Modifier public ReferenceType Mode VariableDeclarator mode MemberReference Mode BINARY FieldDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-ping"" BasicType boolean VariableDeclarator ping Literal true MethodDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-text"" ElementValuePair usage BinaryOperation + Literal ""encode communication with the master with base64. "" Literal ""Useful for running slave over 8-bit unsafe protocol like telnet"" setTextMode FormalParameter BasicType boolean b StatementExpression Assignment MemberReference mode TernaryExpression MemberReference b MemberReference Mode TEXT MemberReference Mode BINARY = StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal ""Running in "" MethodInvocation mode MethodInvocation toLowerCase name Literal "" mode"" println FieldDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-jnlpUrl"" ElementValuePair usage BinaryOperation + BinaryOperation + Literal ""instead of talking to the master via stdin/stdout, "" Literal ""emulate a JNLP client by making a TCP connection to the master. "" Literal ""Connection parameters are obtained by parsing the JNLP file."" ReferenceType URL VariableDeclarator slaveJnlpURL Literal null MethodDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-cp"" ElementValuePair aliases Literal ""-classpath"" ElementValuePair metaVar Literal ""PATH"" ElementValuePair usage Literal ""add the given classpath elements to the system classloader."" addClasspath FormalParameter ReferenceType String pathList Exception LocalVariableDeclaration ReferenceType Method VariableDeclarator $addURL ClassReference MethodInvocation Literal ""addURL"" ClassReference ReferenceType URL getDeclaredMethod ReferenceType URLClassLoader StatementExpression MethodInvocation $addURL Literal true setAccessible ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation pathList MemberReference File pathSeparator split StatementExpression MethodInvocation $addURL MethodInvocation ClassLoader getSystemClassLoader ClassCreator MethodInvocation toURI MethodInvocation toURL ReferenceType File MemberReference token invoke End StatementExpression MethodInvocation System Literal ""java.class.path"" BinaryOperation + BinaryOperation + MethodInvocation System Literal ""java.class.path"" getProperty MemberReference File pathSeparatorChar MemberReference pathList setProperty FieldDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-tcp"" ElementValuePair usage BinaryOperation + BinaryOperation + Literal ""instead of talking to the master via stdin/stdout, "" Literal ""listens to a random local port, write that port number to the given file, "" Literal ""then wait for the master to connect to that port."" ReferenceType File VariableDeclarator tcpPortFile Literal null FieldDeclaration Modifier public ReferenceType InetSocketAddress VariableDeclarator connectionTarget Literal null MethodDeclaration Modifier public Annotation Option ElementValuePair name Literal ""-connectTo"" ElementValuePair usage Literal ""make a TCP connection to the given host and port, then start communication."" ElementValuePair metaVar Literal ""HOST:PORT"" setConnectTo FormalParameter ReferenceType String target LocalVariableDeclaration ReferenceType String VariableDeclarator tokens MethodInvocation target Literal "":"" split IfStatement BinaryOperation != MemberReference tokens length Literal 2 BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal ""Illegal parameter: "" MemberReference target println StatementExpression MethodInvocation System Literal 1 exit End StatementExpression Assignment MemberReference connectionTarget ClassCreator ReferenceType InetSocketAddress MemberReference ArraySelector Literal 0 tokens MethodInvocation Integer MemberReference ArraySelector Literal 1 tokens valueOf = MethodDeclaration /**
     * Bypass HTTPS security check by using free-for-all trust manager.
     *
     * @param _
     *      This is ignored.
     */ Modifier public Annotation Option ElementValuePair name Literal ""-noCertificateCheck"" setNoCertificateCheck FormalParameter BasicType boolean _ NoSuchAlgorithmException KeyManagementException StatementExpression MethodInvocation System.out Literal ""Skipping HTTPS certificate checks altoghether. Note that this is not secure at all."" println LocalVariableDeclaration ReferenceType SSLContext VariableDeclarator context MethodInvocation SSLContext Literal ""TLS"" getInstance StatementExpression MethodInvocation context Literal null ArrayCreator ReferenceType TrustManager ArrayInitializer ClassCreator ReferenceType NoCheckTrustManager ClassCreator ReferenceType java ReferenceType security ReferenceType SecureRandom init StatementExpression MethodInvocation HttpsURLConnection MethodInvocation context getSocketFactory setDefaultSSLSocketFactory StatementExpression MethodInvocation HttpsURLConnection ClassCreator ReferenceType HostnameVerifier MethodDeclaration Modifier public BasicType boolean verify FormalParameter ReferenceType String s FormalParameter ReferenceType SSLSession sslSession ReturnStatement Literal true setDefaultHostnameVerifier MethodDeclaration Modifier public static main FormalParameter ReferenceType String args  Exception LocalVariableDeclaration ReferenceType Launcher VariableDeclarator launcher ClassCreator ReferenceType Launcher LocalVariableDeclaration ReferenceType CmdLineParser VariableDeclarator parser ClassCreator ReferenceType CmdLineParser MemberReference launcher TryStatement StatementExpression MethodInvocation parser MemberReference args parseArgument StatementExpression MethodInvocation launcher run CatchClause CatchClauseParameter CmdLineException e StatementExpression MethodInvocation System.err MethodInvocation e getMessage println StatementExpression MethodInvocation System.err Literal ""java -jar slave.jar [options...]"" println StatementExpression MethodInvocation parser MemberReference System err printUsage StatementExpression MethodInvocation System.err println MethodDeclaration Modifier public run Exception IfStatement BinaryOperation != MemberReference connectionTarget Literal null BlockStatement StatementExpression MethodInvocation runAsTcpClient StatementExpression MethodInvocation System Literal 0 exit IfStatement BinaryOperation != MemberReference slaveJnlpURL Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator jnlpArgs MethodInvocation parseJnlpArguments StatementExpression MethodInvocation hudson.remoting.jnlp.Main MethodInvocation jnlpArgs ArrayCreator ReferenceType String MethodInvocation jnlpArgs size toArray main IfStatement BinaryOperation != MemberReference tcpPortFile Literal null BlockStatement StatementExpression MethodInvocation runAsTcpServer StatementExpression MethodInvocation System Literal 0 exit BlockStatement StatementExpression MethodInvocation runWithStdinStdout StatementExpression MethodInvocation System Literal 0 exit End End End MethodDeclaration /**
     * Parses the connection arguments from JNLP file given in the URL.
     */ Modifier public ReferenceType List TypeArgument ReferenceType String parseJnlpArguments ParserConfigurationException SAXException IOException InterruptedException WhileStatement Literal true BlockStatement TryStatement LocalVariableDeclaration ReferenceType URLConnection VariableDeclarator con MethodInvocation slaveJnlpURL openConnection StatementExpression MethodInvocation con connect IfStatement BinaryOperation instanceof MemberReference con ReferenceType HttpURLConnection BlockStatement LocalVariableDeclaration ReferenceType HttpURLConnection VariableDeclarator http Cast ReferenceType HttpURLConnection MemberReference con IfStatement BinaryOperation >= MethodInvocation http getResponseCode Literal 400 ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Failed to load "" MemberReference slaveJnlpURL Literal "": "" MethodInvocation http getResponseCode Literal "" "" MethodInvocation http getResponseMessage End End LocalVariableDeclaration ReferenceType Document VariableDeclarator dom LocalVariableDeclaration ReferenceType String VariableDeclarator contentType MethodInvocation con Literal ""Content-Type"" getHeaderField IfStatement BinaryOperation || BinaryOperation == MemberReference contentType Literal null MethodInvocation ! contentType Literal ""application/x-java-jnlp-file"" startsWith BlockStatement TryStatement StatementExpression Assignment MemberReference dom MethodInvocation MemberReference slaveJnlpURL MemberReference con loadDom = CatchClause CatchClauseParameter SAXException e ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + MemberReference slaveJnlpURL Literal "" doesn't look like a JNLP file; content type was "" MemberReference contentType CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + BinaryOperation + MemberReference slaveJnlpURL Literal "" doesn't look like a JNLP file; content type was "" MemberReference contentType BlockStatement StatementExpression Assignment MemberReference dom MethodInvocation MemberReference slaveJnlpURL MemberReference con loadDom = End LocalVariableDeclaration ReferenceType NodeList VariableDeclarator argElements MethodInvocation dom Literal ""argument"" getElementsByTagName LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator jnlpArgs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation argElements getLength MemberReference ++ i StatementExpression MethodInvocation jnlpArgs MethodInvocation argElements MethodInvocation getTextContent MemberReference i item add End StatementExpression MethodInvocation jnlpArgs Literal ""-headless"" add ReturnStatement MemberReference jnlpArgs CatchClause CatchClauseParameter SSLHandshakeException e IfStatement MethodInvocation e MethodInvocation Literal ""PKIX path building failed"" contains getMessage BlockStatement LocalVariableDeclaration ReferenceType IOException VariableDeclarator x ClassCreator ReferenceType IOException Literal ""Failed to validate a server certificate. If you are using a self-signed certificate, you can use the -noCertificateCheck option to bypass this check."" StatementExpression MethodInvocation x MemberReference e initCause ThrowStatement MemberReference x ThrowStatement MemberReference e End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation System.err BinaryOperation + Literal ""Failing to obtain "" MemberReference slaveJnlpURL println StatementExpression MethodInvocation e MemberReference System err printStackTrace StatementExpression MethodInvocation System.err Literal ""Waiting 10 seconds before retry"" println StatementExpression MethodInvocation Thread BinaryOperation * Literal 10 Literal 1000 sleep End MethodDeclaration Modifier private static ReferenceType Document loadDom FormalParameter ReferenceType URL slaveJnlpURL FormalParameter ReferenceType URLConnection con ParserConfigurationException SAXException IOException LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator db MethodInvocation DocumentBuilderFactory MethodInvocation newDocumentBuilder newInstance ReturnStatement MethodInvocation db MethodInvocation con getInputStream MethodInvocation slaveJnlpURL toExternalForm parse MethodDeclaration /**
     * Listens on an ephemeral port, record that port number in a port file,
     * then accepts one TCP connection.
     */ Modifier private runAsTcpServer IOException InterruptedException LocalVariableDeclaration ReferenceType ServerSocket VariableDeclarator ss ClassCreator ReferenceType ServerSocket Literal 0 Literal 1 StatementExpression MethodInvocation ss BinaryOperation * Literal 30 Literal 1000 setSoTimeout LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator w ClassCreator ReferenceType FileWriter MemberReference tcpPortFile StatementExpression MethodInvocation w MethodInvocation String MethodInvocation ss getLocalPort valueOf write StatementExpression MethodInvocation w close LocalVariableDeclaration ReferenceType Socket VariableDeclarator s TryStatement StatementExpression Assignment MemberReference s MethodInvocation ss accept = StatementExpression MethodInvocation ss close StatementExpression MethodInvocation tcpPortFile delete StatementExpression MethodInvocation MemberReference s runOnSocket MethodDeclaration Modifier private runOnSocket FormalParameter ReferenceType Socket s IOException InterruptedException StatementExpression MethodInvocation ClassCreator ReferenceType BufferedInputStream ClassCreator ReferenceType SocketInputStream MemberReference s ClassCreator ReferenceType BufferedOutputStream ClassCreator ReferenceType SocketOutputStream MemberReference s MemberReference mode MemberReference ping main MethodDeclaration /**
     * Connects to the given TCP port and then start running
     */ Modifier private runAsTcpClient IOException InterruptedException LocalVariableDeclaration ReferenceType Socket VariableDeclarator s ClassCreator ReferenceType Socket MethodInvocation connectionTarget getAddress MethodInvocation connectionTarget getPort StatementExpression MethodInvocation MemberReference s runOnSocket MethodDeclaration Modifier private runWithStdinStdout IOException InterruptedException StatementExpression MethodInvocation ttyCheck LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator os MemberReference System out StatementExpression MethodInvocation System MemberReference System err setOut StatementExpression MethodInvocation MemberReference System in MemberReference os MemberReference mode MemberReference ping main MethodDeclaration Modifier private static ttyCheck TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m ClassReference MethodInvocation Literal ""console"" getMethod ReferenceType System LocalVariableDeclaration ReferenceType Object VariableDeclarator console MethodInvocation m Literal null invoke IfStatement BinaryOperation != MemberReference console Literal null BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal ""WARNING: Are you running slave agent from an interactive console?\n"" Literal ""If so, you are probably using it incorrectly.\n"" Literal ""See http://hudson.gotdns.com/wiki/display/HUDSON/Launching+slave.jar+from+from+console"" println End CatchClause CatchClauseParameter LinkageError e CatchClause CatchClauseParameter InvocationTargetException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e CatchClause CatchClauseParameter NoSuchMethodException e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType AssertionError MemberReference e MethodDeclaration Modifier public static main FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os IOException InterruptedException StatementExpression MethodInvocation MemberReference is MemberReference os MemberReference Mode BINARY main MethodDeclaration Modifier public static main FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter ReferenceType Mode mode IOException InterruptedException StatementExpression MethodInvocation MemberReference is MemberReference os MemberReference mode Literal false main MethodDeclaration Modifier public static main FormalParameter ReferenceType InputStream is FormalParameter ReferenceType OutputStream os FormalParameter ReferenceType Mode mode FormalParameter BasicType boolean performPing IOException InterruptedException LocalVariableDeclaration ReferenceType ExecutorService VariableDeclarator executor MethodInvocation Executors newCachedThreadPool LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel ClassCreator ReferenceType Channel Literal ""channel"" MemberReference executor MemberReference mode MemberReference is MemberReference os StatementExpression MethodInvocation System.err Literal ""channel started"" println IfStatement MemberReference performPing BlockStatement StatementExpression ClassCreator MethodInvocation start ReferenceType PingThread MemberReference channel MethodDeclaration Modifier protected Annotation Override onDead StatementExpression MethodInvocation System.err Literal ""Ping failed. Terminating"" println StatementExpression MethodInvocation System Literal - 1 exit End StatementExpression MethodInvocation channel join StatementExpression MethodInvocation System.err Literal ""channel stopped"" println ClassDeclaration Modifier private static /**
     * {@link X509TrustManager} that performs no check at all.
     */ NoCheckTrustManager MethodDeclaration Modifier public checkClientTrusted FormalParameter ReferenceType X509Certificate x509Certificates FormalParameter ReferenceType String s CertificateException MethodDeclaration Modifier public checkServerTrusted FormalParameter ReferenceType X509Certificate x509Certificates FormalParameter ReferenceType String s CertificateException MethodDeclaration Modifier public ReferenceType X509Certificate getAcceptedIssuers ReturnStatement ArrayCreator ReferenceType X509Certificate Literal 0 ReferenceType X509TrustManager",1
122,122,"CompilationUnit PackageDeclaration hudson.node_monitors Import hudson.model.Computer Import hudson.model.Descriptor Import hudson.model.Hudson Import hudson.model.ComputerSet Import hudson.model.AdministrativeMonitor Import hudson.triggers.Trigger Import hudson.triggers.SafeTimerTask Import java.io.IOException Import java.util.Date Import java.util.HashMap Import java.util.Map Import java.util.logging.Level Import java.util.logging.Logger ClassDeclaration Modifier public abstract /**
 * Convenient base class for common {@link NodeMonitor} implementation
 * where the ""monitoring"" consists of executing something periodically on every node
 * and taking some action based on its result.
 *
 * <p>
 * ""T"" represents the the result of the monitoring. 
 *
 * @author Kohsuke Kawaguchi
 */ AbstractNodeMonitorDescriptor ConstructorDeclaration Modifier protected AbstractNodeMonitorDescriptor StatementExpression ExplicitConstructorInvocation MemberReference HOUR ConstructorDeclaration Modifier protected AbstractNodeMonitorDescriptor FormalParameter BasicType long interval StatementExpression MethodInvocation MemberReference interval schedule ConstructorDeclaration Modifier protected AbstractNodeMonitorDescriptor FormalParameter ReferenceType Class TypeArgument ReferenceType NodeMonitor extends clazz StatementExpression ExplicitConstructorInvocation MemberReference clazz MemberReference HOUR ConstructorDeclaration Modifier protected AbstractNodeMonitorDescriptor FormalParameter ReferenceType Class TypeArgument ReferenceType NodeMonitor extends clazz FormalParameter BasicType long interval StatementExpression SuperConstructorInvocation MemberReference clazz StatementExpression MethodInvocation MemberReference interval schedule MethodDeclaration Modifier private schedule FormalParameter BasicType long interval StatementExpression MethodInvocation Trigger.timer ClassCreator ReferenceType SafeTimerTask MethodDeclaration Modifier public doRun StatementExpression MethodInvocation triggerUpdate MemberReference interval MemberReference interval scheduleAtFixedRate FieldDeclaration /**
     * Represents the last record of the update
     */ Modifier private volatile ReferenceType Record VariableDeclarator record Literal null FieldDeclaration /**
     * Represents the update activity in progress.
     */ Modifier private volatile ReferenceType Record VariableDeclarator inProgress Literal null MethodDeclaration /**
     * Performs monitoring of the given computer object.
     * This method is invoked periodically to perform the monitoring of the computer.
     *
     * @return
     *      Application-specific value that represents the observed monitoring value
     *      on the given node. This value will be returned from the {@link #get(Computer)} method.
     *      If null is returned, it will be interpreted as ""no observed value."" This is
     *      convenient way of abandoning the observation on a particular computer,
     *      whereas {@link IOException} is useful for indicating a hard error that needs to be
     *      corrected.
     */ Modifier protected abstract ReferenceType T monitor FormalParameter ReferenceType Computer c IOException InterruptedException MethodDeclaration /**
     * Obtains the monitoring result currently available, or null if no data is available.
     *
     * <p>
     * If no data is available, a background task to collect data will be started.
     */ Modifier public ReferenceType T get FormalParameter ReferenceType Computer c IfStatement BinaryOperation == MemberReference record Literal null BlockStatement IfStatement BinaryOperation == MemberReference inProgress Literal null BlockStatement SynchronizedStatement This IfStatement BinaryOperation == MemberReference inProgress Literal null StatementExpression ClassCreator MethodInvocation start ReferenceType Record End End ReturnStatement Literal null End ReturnStatement MethodInvocation record.data MemberReference c get MethodDeclaration /**
     * Is this monitor currently ignored?
     */ Modifier public BasicType boolean isIgnored LocalVariableDeclaration ReferenceType NodeMonitor VariableDeclarator m MethodInvocation ComputerSet MethodInvocation This get getMonitors ReturnStatement BinaryOperation || BinaryOperation == MemberReference m Literal null MethodInvocation m isIgnored MethodDeclaration /**
     * Utility method to mark the computer offline for derived classes.
     *
     * @return true
     *      if the node was actually taken offline by this act (as opposed to us deciding not to do it,
     *      or the computer already marked offline.)
     */ Modifier protected BasicType boolean markOffline FormalParameter ReferenceType Computer c IfStatement BinaryOperation || MethodInvocation isIgnored MethodInvocation c isTemporarilyOffline ReturnStatement Literal false End StatementExpression MethodInvocation c Literal true setTemporarilyOffline LocalVariableDeclaration ReferenceType MonitorMarkedNodeOffline VariableDeclarator no MethodInvocation AdministrativeMonitor MethodInvocation ClassReference ReferenceType MonitorMarkedNodeOffline get all IfStatement BinaryOperation != MemberReference no Literal null StatementExpression Assignment MemberReference no active Literal true = End ReturnStatement Literal true MethodDeclaration /**
     * @see NodeMonitor#triggerUpdate()
     */ ReferenceType Thread triggerUpdate LocalVariableDeclaration ReferenceType Record VariableDeclarator t ClassCreator ReferenceType Record StatementExpression MethodInvocation t start ReturnStatement MemberReference t ClassDeclaration Modifier private final /**
     * Thread that monitors nodes, as well as the data structure to record
     * the result.
     */ Record FieldDeclaration /**
         * Last computed monitoring result.
         */ Modifier private final ReferenceType Map TypeArgument ReferenceType Computer TypeArgument ReferenceType T VariableDeclarator data ClassCreator ReferenceType HashMap TypeArgument ReferenceType Computer TypeArgument ReferenceType T ConstructorDeclaration Modifier public Record StatementExpression SuperConstructorInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Monitoring thread for "" MethodInvocation getDisplayName Literal "" started on "" ClassCreator ReferenceType Date SynchronizedStatement This AbstractNodeMonitorDescriptor IfStatement BinaryOperation != MemberReference inProgress Literal null BlockStatement StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + Literal ""Previous "" MethodInvocation getDisplayName Literal "" monitoring activity still in progress. Interrupting"" warning StatementExpression MethodInvocation inProgress interrupt End StatementExpression Assignment MemberReference inProgress This = MethodDeclaration Modifier public run TryStatement LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis ForStatement EnhancedForControl VariableDeclaration ReferenceType Computer VariableDeclarator c MethodInvocation Hudson MethodInvocation getComputers getInstance BlockStatement TryStatement IfStatement BinaryOperation == MethodInvocation c getChannel Literal null StatementExpression MethodInvocation data MemberReference c Literal null put StatementExpression MethodInvocation data MemberReference c MethodInvocation MemberReference c monitor put End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Failed to monitor "" MethodInvocation c getDisplayName Literal "" for "" MethodInvocation getDisplayName MemberReference e log End SynchronizedStatement This AbstractNodeMonitorDescriptor AssertStatement BinaryOperation == MemberReference inProgress This StatementExpression Assignment MemberReference inProgress Literal null = StatementExpression Assignment MemberReference record This = StatementExpression MethodInvocation LOGGER BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Node monitoring "" MethodInvocation getDisplayName Literal "" completed in "" BinaryOperation - MethodInvocation System currentTimeMillis MemberReference startTime Literal ""ms"" fine CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation LOGGER MemberReference Level WARNING BinaryOperation + BinaryOperation + Literal ""Node monitoring "" MethodInvocation getDisplayName Literal "" aborted."" MemberReference e log ReferenceType Thread FieldDeclaration Modifier private final ReferenceType Logger VariableDeclarator LOGGER MethodInvocation Logger MethodInvocation MethodInvocation getName getClass getLogger FieldDeclaration Modifier private final static BasicType long VariableDeclarator HOUR BinaryOperation * BinaryOperation * Literal 1000 Literal 60 Literal 60L TypeParameter T ReferenceType Descriptor TypeArgument ReferenceType NodeMonitor",1
378,378,,0
128,128,"CompilationUnit PackageDeclaration hudson.security Import org.acegisecurity.Authentication Import org.acegisecurity.GrantedAuthority Import org.acegisecurity.GrantedAuthorityImpl Import javax.servlet.http.HttpServletRequest Import java.security.Principal Import java.util.List Import java.util.ArrayList Import hudson.model.Hudson ClassDeclaration Modifier public final /**
 * {@link Authentication} implementation for {@link Principal}
 * given through {@link HttpServletRequest}.
 *
 * <p>
 * This is used to plug the container authentication to Acegi,
 * for backward compatibility with Hudson &lt; 1.160.
 *
 * @author Kohsuke Kawaguchi
 */ ContainerAuthentication FieldDeclaration Modifier private final ReferenceType HttpServletRequest VariableDeclarator request FieldDeclaration Modifier private ReferenceType GrantedAuthority VariableDeclarator authorities ConstructorDeclaration Modifier public ContainerAuthentication FormalParameter ReferenceType HttpServletRequest request StatementExpression Assignment This MemberReference request MemberReference request = MethodDeclaration Modifier public ReferenceType GrantedAuthority getAuthorities IfStatement BinaryOperation == MemberReference authorities Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType GrantedAuthority VariableDeclarator l ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GrantedAuthority ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator g MethodInvocation Hudson MethodInvocation getAuthorizationStrategy MethodInvocation getGroups getInstance BlockStatement IfStatement MethodInvocation request MemberReference g isUserInRole StatementExpression MethodInvocation l ClassCreator ReferenceType GrantedAuthorityImpl MemberReference g add End End StatementExpression MethodInvocation l MemberReference SecurityRealm AUTHENTICATED_AUTHORITY add StatementExpression Assignment MemberReference authorities MethodInvocation l ArrayCreator ReferenceType GrantedAuthority MethodInvocation l size toArray = End ReturnStatement MemberReference authorities MethodDeclaration Modifier public ReferenceType Object getCredentials ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object getDetails ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getPrincipal ReturnStatement MethodInvocation request MethodInvocation getName getUserPrincipal MethodDeclaration Modifier public BasicType boolean isAuthenticated ReturnStatement Literal true MethodDeclaration Modifier public setAuthenticated FormalParameter BasicType boolean isAuthenticated IllegalArgumentException MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MethodInvocation getPrincipal ReferenceType Authentication",1
358,358,,0
184,184,"CompilationUnit PackageDeclaration hudson.model Import com.thoughtworks.xstream.converters.basic.AbstractBasicConverter Import hudson.Util Import hudson.security.ACL Import org.kohsuke.stapler.StaplerRequest Import org.kohsuke.stapler.StaplerResponse Import java.io.IOException ClassDeclaration Modifier public final /**
 * Authorization token to allow projects to trigger themselves under the secured environment.
 *
 * @author Kohsuke Kawaguchi
 * @see BuildableItem
 * @deprecated
 *      Use {@link ACL} and {@link AbstractProject#BUILD}. This code is only here
 *      for the backward compatibility.
 */ BuildAuthorizationToken FieldDeclaration Modifier private final ReferenceType String VariableDeclarator token ConstructorDeclaration Modifier public BuildAuthorizationToken FormalParameter ReferenceType String token StatementExpression Assignment This MemberReference token MemberReference token = MethodDeclaration Modifier public static ReferenceType BuildAuthorizationToken create FormalParameter ReferenceType StaplerRequest req IfStatement BinaryOperation != MethodInvocation req Literal ""pseudoRemoteTrigger"" getParameter Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation Util MethodInvocation req Literal ""authToken"" getParameter fixEmpty IfStatement BinaryOperation != MemberReference token Literal null ReturnStatement ClassCreator ReferenceType BuildAuthorizationToken MemberReference token End End ReturnStatement Literal null MethodDeclaration Modifier public static checkPermission FormalParameter ReferenceType AbstractProject project FormalParameter ReferenceType BuildAuthorizationToken token FormalParameter ReferenceType StaplerRequest req FormalParameter ReferenceType StaplerResponse rsp IOException IfStatement MethodInvocation ! Hudson MethodInvocation isUseSecurity getInstance ReturnStatement End IfStatement BinaryOperation && BinaryOperation != MemberReference token Literal null BinaryOperation != MemberReference token token Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator providedToken MethodInvocation req Literal ""token"" getParameter IfStatement BinaryOperation && BinaryOperation != MemberReference providedToken Literal null MethodInvocation providedToken MemberReference token token equals ReturnStatement End End StatementExpression MethodInvocation project MemberReference AbstractProject BUILD checkPermission MethodDeclaration Modifier public ReferenceType String getToken ReturnStatement MemberReference token ClassDeclaration Modifier public final static ConverterImpl MethodDeclaration Modifier public BasicType boolean canConvert FormalParameter ReferenceType Class type ReturnStatement BinaryOperation == MemberReference type ClassReference ReferenceType BuildAuthorizationToken MethodDeclaration Modifier protected ReferenceType Object fromString FormalParameter ReferenceType String str ReturnStatement ClassCreator ReferenceType BuildAuthorizationToken MemberReference str MethodDeclaration Modifier protected ReferenceType String toString FormalParameter ReferenceType Object obj ReturnStatement Cast ReferenceType BuildAuthorizationToken MemberReference obj ReferenceType AbstractBasicConverter",0
574,574,,0
489,489,,0
154,154,"CompilationUnit PackageDeclaration hudson.tools Import hudson.Extension Import hudson.util.DescribableList Import hudson.model.Descriptor Import hudson.model.Saveable Import org.kohsuke.stapler.DataBoundConstructor Import java.util.List Import java.io.IOException ClassDeclaration Modifier public /**
 * {@link ToolProperty} that shows auto installation options.
 *
 * @author Kohsuke Kawaguchi
 * @since 1.305
 */ InstallSourceProperty FieldDeclaration Modifier public final ReferenceType DescribableList TypeArgument ReferenceType ToolInstaller TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ToolInstaller VariableDeclarator installers ClassCreator ReferenceType DescribableList TypeArgument ReferenceType ToolInstaller TypeArgument ReferenceType Descriptor TypeArgument ReferenceType ToolInstaller MemberReference Saveable NOOP ConstructorDeclaration Modifier public Annotation DataBoundConstructor InstallSourceProperty FormalParameter ReferenceType List TypeArgument ReferenceType ToolInstaller extends installers IOException IfStatement BinaryOperation != MemberReference installers Literal null BlockStatement StatementExpression This MemberReference installers MethodInvocation MemberReference installers replaceBy End MethodDeclaration Modifier public Annotation Override setTool FormalParameter ReferenceType ToolInstallation t StatementExpression SuperMethodInvocation MemberReference t setTool ForStatement EnhancedForControl VariableDeclaration ReferenceType ToolInstaller VariableDeclarator installer MemberReference installers StatementExpression MethodInvocation installer MemberReference t setTool End MethodDeclaration Modifier public ReferenceType Class TypeArgument ReferenceType ToolInstallation type ReturnStatement ClassReference ReferenceType ToolInstallation ClassDeclaration Modifier public static Annotation Extension DescriptorImpl MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MethodInvocation Messages InstallSourceProperty_DescriptorImpl_displayName ReferenceType ToolPropertyDescriptor ReferenceType ToolProperty TypeArgument ReferenceType ToolInstallation",1
508,508,,0
542,542,,1
351,351,"CompilationUnit PackageDeclaration hudson.maven Import org.apache.maven.project.MavenProject Import org.apache.maven.model.Plugin Import org.apache.maven.model.ReportPlugin Import org.apache.maven.model.Extension Import java.io.Serializable Import hudson.Functions ClassDeclaration Modifier public final /**
 * group id + artifact id + version.
 *
 * @author Kohsuke Kawaguchi
 * @see ModuleName
 */ ModuleDependency FieldDeclaration Modifier public final ReferenceType String VariableDeclarator groupId FieldDeclaration Modifier public final ReferenceType String VariableDeclarator artifactId FieldDeclaration Modifier public final ReferenceType String VariableDeclarator version ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType String groupId FormalParameter ReferenceType String artifactId FormalParameter ReferenceType String version StatementExpression Assignment This MemberReference groupId MemberReference groupId = StatementExpression Assignment This MemberReference artifactId MemberReference artifactId = IfStatement BinaryOperation == MemberReference version Literal null StatementExpression Assignment MemberReference version MemberReference UNKNOWN = End StatementExpression Assignment This MemberReference version MemberReference version = ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType ModuleName name FormalParameter ReferenceType String version StatementExpression ExplicitConstructorInvocation MemberReference name groupId MemberReference name artifactId MemberReference version ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType org ReferenceType apache ReferenceType maven ReferenceType model ReferenceType Dependency dep StatementExpression ExplicitConstructorInvocation MethodInvocation dep getGroupId MethodInvocation dep getArtifactId MethodInvocation dep getVersion ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType MavenProject project StatementExpression ExplicitConstructorInvocation MethodInvocation project getGroupId MethodInvocation project getArtifactId MethodInvocation project getVersion ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType Plugin p StatementExpression ExplicitConstructorInvocation MethodInvocation p getGroupId MethodInvocation p getArtifactId MethodInvocation Functions MethodInvocation p getVersion MemberReference NONE defaulted ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType ReportPlugin p StatementExpression ExplicitConstructorInvocation MethodInvocation p getGroupId MethodInvocation p getArtifactId MethodInvocation p getVersion ConstructorDeclaration Modifier public ModuleDependency FormalParameter ReferenceType Extension ext StatementExpression ExplicitConstructorInvocation MethodInvocation ext getGroupId MethodInvocation ext getArtifactId MethodInvocation ext getVersion MethodDeclaration Modifier public ReferenceType ModuleName getName ReturnStatement ClassCreator ReferenceType ModuleName MemberReference groupId MemberReference artifactId MethodDeclaration /**
     * Returns groupId+artifactId plus unknown version.
     */ Modifier public ReferenceType ModuleDependency withUnknownVersion ReturnStatement ClassCreator ReferenceType ModuleDependency MemberReference groupId MemberReference artifactId MemberReference UNKNOWN MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation == This MemberReference o ReturnStatement Literal true End IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation != MethodInvocation getClass MethodInvocation o getClass ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ModuleDependency VariableDeclarator that Cast ReferenceType ModuleDependency MemberReference o ReturnStatement BinaryOperation && BinaryOperation && This MemberReference artifactId MethodInvocation MemberReference that artifactId equals This MemberReference groupId MethodInvocation MemberReference that groupId equals This MemberReference version MethodInvocation MemberReference that version equals MethodDeclaration Modifier public BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator result StatementExpression Assignment MemberReference result MethodInvocation groupId hashCode = StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * Literal 31 MemberReference result MethodInvocation artifactId hashCode = StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * Literal 31 MemberReference result MethodInvocation version hashCode = ReturnStatement MemberReference result FieldDeclaration /**
     * For compatibility reason, this value may be used in the verion field
     * to indicate that the version is unknown.
     */ Modifier public final static ReferenceType String VariableDeclarator UNKNOWN Literal ""*"" FieldDeclaration /**
     * When a plugin dependency is specified without giving a version,
     * the semantics of that is the latest released plugin.
     * In this case, we don't want the {@link ModuleDependency} version to become
     * {@link #UNKNOWN}, which would match any builds of the plugin.
     *
     * <p>
     * So we use this constant to indicate a version, and this will not match
     * anything.
     *
     * @see #ModuleDependency(Plugin)
     */ Modifier public final static ReferenceType String VariableDeclarator NONE Literal ""-"" FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1L ReferenceType Serializable",0
526,526,,0
436,436,,0
275,275,"CompilationUnit PackageDeclaration hudson.matrix Import hudson.model.Job Import hudson.tasks.LogRotator Import java.io.IOException ClassDeclaration Modifier final /**
 * {@link LogRotator} for {@link MatrixConfiguration},
 * which discards the builds if and only if it's discarded
 * in the parent.
 *
 * <p>
 * Because of the serialization compatibility, we can't easily
 * refactor {@link LogRotator} into a contract and an implementation. 
 *
 * @author Kohsuke Kawaguchi
 */ LinkedLogRotator ConstructorDeclaration LinkedLogRotator StatementExpression SuperConstructorInvocation Literal - 1 Literal - 1 MethodDeclaration Modifier public Annotation Override perform FormalParameter ReferenceType Job _job IOException InterruptedException LocalVariableDeclaration ReferenceType MatrixConfiguration VariableDeclarator job Cast ReferenceType MatrixConfiguration MemberReference _job ForStatement EnhancedForControl VariableDeclaration ReferenceType MatrixRun VariableDeclarator r MethodInvocation job MethodInvocation ArrayCreator ReferenceType MatrixRun Literal 0 toArray getBuilds BlockStatement IfStatement BinaryOperation == MethodInvocation job MethodInvocation MethodInvocation r getNumber getBuildByNumber getParent Literal null StatementExpression MethodInvocation r delete End End IfStatement BinaryOperation && MethodInvocation ! job isActiveConfiguration BinaryOperation == MethodInvocation job getLastBuild Literal null StatementExpression MethodInvocation job delete End ReferenceType LogRotator",0
408,408,,0
400,400,,0
431,431,,0
