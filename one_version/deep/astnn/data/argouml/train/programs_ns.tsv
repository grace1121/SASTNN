,id,code,label
1432,1432,,0
918,918,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 26, 2003
 */ UMLGeneralizableElementSpecializationListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLGeneralizableElementSpecializationListModel.
     */ UMLGeneralizableElementSpecializationListModel StatementExpression SuperConstructorInvocation Literal ""specialization"" MethodInvocation Model MethodInvocation getGeneralization getMetaTypes Literal true MethodDeclaration Modifier protected Annotation Override buildModelList IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget isAGeneralizableElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getSpecializations getFacade setAllElements End MethodDeclaration Modifier protected Annotation Override BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAGeneralization getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getSpecializations MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",1
907,907,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Dimension Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.Insets Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import javax.swing.JButton Import javax.swing.JLabel Import javax.swing.JPanel Import org.argouml.application.api.Argo Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.configuration.Configuration Import org.argouml.configuration.ConfigurationKey Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.kernel.ProjectSettings Import org.argouml.ui.ArgoJFontChooser Import org.argouml.util.ArgoFrame ClassDeclaration Modifier public /**
 * Settings tab panel for handling diagram appearance settings.
 * <p>
 * It supports different scopes: application and project. The former is stored
 * in the properties file in the user-directory, the latter in the project file
 * (.zargo,...).
 * <p>
 * This class is written in a way that supports adding more scopes easily.
 *
 * @author Aleksandar
 */ SettingsTabDiagramAppearance FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator jbtnDiagramFont FieldDeclaration Modifier private ReferenceType String VariableDeclarator selectedDiagramFontName FieldDeclaration Modifier private BasicType int VariableDeclarator selectedDiagramFontSize FieldDeclaration Modifier private BasicType int VariableDeclarator scope FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator jlblDiagramFont Literal null ConstructorDeclaration Modifier public /**
     * The constructor. We currently support 2 scopes, but this class is written
     * in a way to easily extend that.
     *
     * @param settingsScope the scope of the settings
     */ SettingsTabDiagramAppearance FormalParameter BasicType int settingsScope StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference scope MemberReference settingsScope = StatementExpression MethodInvocation initialize MethodDeclaration /**
     * This method initializes this
     */ Modifier private initialize LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints2 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints2 gridx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints2 fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference gridBagConstraints2 weightx Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints2 weighty Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints2 gridy Literal 2 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints1 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints1 gridx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints1 anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints1 insets ClassCreator ReferenceType Insets Literal 5 Literal 5 Literal 0 Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints1 gridy Literal 0 = StatementExpression Assignment MemberReference jlblDiagramFont ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation jlblDiagramFont MethodInvocation Translator Literal ""label.diagramappearance.diagramfont"" localize setText LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints gridx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference gridBagConstraints anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints weightx Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints insets ClassCreator ReferenceType Insets Literal 5 Literal 5 Literal 0 Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints gridy Literal 1 = StatementExpression This MethodInvocation ClassCreator ReferenceType GridBagLayout setLayout StatementExpression This MethodInvocation ClassCreator ReferenceType Dimension Literal 296 Literal 169 setSize StatementExpression This MethodInvocation MethodInvocation getJbtnDiagramFont MemberReference gridBagConstraints add StatementExpression This MethodInvocation MemberReference jlblDiagramFont MemberReference gridBagConstraints1 add StatementExpression This MethodInvocation ClassCreator ReferenceType JPanel MemberReference gridBagConstraints2 add MethodDeclaration Modifier private ReferenceType JButton getJbtnDiagramFont IfStatement BinaryOperation == MemberReference jbtnDiagramFont Literal null BlockStatement StatementExpression Assignment MemberReference jbtnDiagramFont ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""label.diagramappearance.changefont"" localize = StatementExpression MethodInvocation jbtnDiagramFont ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType ArgoJFontChooser VariableDeclarator jFontChooser ClassCreator ReferenceType ArgoJFontChooser MethodInvocation ArgoFrame getInstance MemberReference jbtnDiagramFont MemberReference selectedDiagramFontName MemberReference selectedDiagramFontSize StatementExpression MethodInvocation jFontChooser Literal true setVisible IfStatement MethodInvocation jFontChooser isOk BlockStatement StatementExpression Assignment MemberReference selectedDiagramFontName MethodInvocation jFontChooser getResultName = StatementExpression Assignment MemberReference selectedDiagramFontSize MethodInvocation jFontChooser getResultSize = End addActionListener End ReturnStatement MemberReference jbtnDiagramFont MethodDeclaration Modifier public handleSettingsTabRefresh IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_APPLICATION BlockStatement StatementExpression Assignment MemberReference selectedDiagramFontName MethodInvocation DiagramAppearance MethodInvocation getConfiguredFontName getInstance = StatementExpression Assignment MemberReference selectedDiagramFontSize MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_SIZE getInteger = End IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_PROJECT BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings StatementExpression Assignment MemberReference selectedDiagramFontName MethodInvocation ps getFontName = StatementExpression Assignment MemberReference selectedDiagramFontSize MethodInvocation ps getFontSize = End MethodDeclaration /**
     * Get a boolean from the configuration.
     *
     * @param key a notation key.
     * @return a boolean
     */ Modifier protected static BasicType boolean getBoolean FormalParameter ReferenceType ConfigurationKey key ReturnStatement MethodInvocation Configuration MemberReference key Literal false getBoolean MethodDeclaration Modifier public handleSettingsTabSave IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_APPLICATION BlockStatement StatementExpression MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_NAME MemberReference selectedDiagramFontName setString StatementExpression MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_SIZE MemberReference selectedDiagramFontSize setInteger End IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_PROJECT BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings StatementExpression MethodInvocation ps MemberReference selectedDiagramFontName setFontName StatementExpression MethodInvocation ps MemberReference selectedDiagramFontSize setFontSize End MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation handleSettingsTabRefresh MethodDeclaration Modifier public handleResetToDefault IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_PROJECT BlockStatement StatementExpression Assignment MemberReference selectedDiagramFontName MethodInvocation DiagramAppearance MethodInvocation getConfiguredFontName getInstance = StatementExpression Assignment MemberReference selectedDiagramFontSize MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_SIZE getInteger = End MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal ""tab.diagramappearance"" MethodDeclaration Modifier public ReferenceType JPanel getTabPanel ReturnStatement This MethodDeclaration /**
     * Create a localized JButton.
     *
     * @param key the key for the string to be localized
     * @return a new checkbox with localized text
     */ Modifier protected ReferenceType JButton createCheckBox FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType JButton VariableDeclarator j ClassCreator ReferenceType JButton MethodInvocation Translator MemberReference key localize ReturnStatement MemberReference j MethodDeclaration /**
     * Create a localized JLabel.
     *
     * @param key the key of the text for the label
     * @return a new label with a localized text for the given key
     */ Modifier protected ReferenceType JLabel createLabel FormalParameter ReferenceType String key ReturnStatement ClassCreator ReferenceType JLabel MethodInvocation Translator MemberReference key localize MethodDeclaration /**
     * Create a localized JButton.
     *
     * @param key the key for the string to be localized
     * @return a new checkbox with localized text
     */ Modifier protected ReferenceType JButton createButton FormalParameter ReferenceType String key ReturnStatement ClassCreator ReferenceType JButton MethodInvocation Translator MemberReference key localize MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean arg0 StatementExpression SuperMethodInvocation MemberReference arg0 setVisible IfStatement MemberReference arg0 StatementExpression MethodInvocation handleSettingsTabRefresh End ReferenceType JPanel ReferenceType GUISettingsTabInterface",1
528,528,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Set InterfaceDeclaration Modifier public /**
 * This is the interface for rules that together make a model perspective
 * in the explorer.
 *
 * @since 0.15.2, Created on 03 October 2003, 20:55
 * @author  alexb
 */ PerspectiveRule MethodDeclaration /**
     * @return the name of the rule, like ""from->to"".
     */ ReferenceType String getRuleName MethodDeclaration /**
     * Gets a collection of 'child' objects for the given 'parent' object in the
     * uml model, which creates the tree structure.
     *
     * @param parent the given parent
     * @return the children
     */ ReferenceType Collection getChildren FormalParameter ReferenceType Object parent MethodDeclaration /**
     * Gets a collection of objects for any 'parent' object in the
     * uml model for which the tree structure must be recreated when
     * they are changed.
     *
     * @param parent the parent
     * @return the dependent objects
     */ ReferenceType Set getDependencies FormalParameter ReferenceType Object parent",1
359,359,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.util.ArrayList Import java.util.Collection Import java.util.List Import javax.swing.JComponent Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.foundation.core.PropPanelModelElement Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * The properties panel for a Partition (Swimlane).
 *
 * @author mkl
 */ PropPanelPartition FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator contentsScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator activityGraphScroll FieldDeclaration Modifier private static ReferenceType UMLPartitionContentListModel VariableDeclarator contentListModel ClassCreator ReferenceType UMLPartitionContentListModel Literal ""contents"" ConstructorDeclaration Modifier public /**
     * constructor.
     */ PropPanelPartition StatementExpression SuperConstructorInvocation Literal ""label.partition-title"" MethodInvocation Literal ""Partition"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression Assignment MemberReference activityGraphScroll MethodInvocation ClassCreator ReferenceType UMLPartitionActivityGraphListModel getSingleRowScroll = StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.activity-graph"" localize MethodInvocation getActivityGraphField addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.contents"" localize MethodInvocation getContentsField addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration /**
     * This field intentionally allows to do far more things 
     * than would be possible by dragging elements in or out 
     * of the FigPartition. <p>
     * 
     * E.g. if you only use dragging, then an element belongs to 
     * at most one partition, a logical presumption. 
     * The ActionAddPartitionContent however,
     * allows modifying the model in such way that
     * elements belong to more than one partition,
     * which is not prohibited by the UML standard. <p>
     * 
     * These extra possibilities are needed e.g. to amend 
     * a model loaded in XMI format.
     * 
     * @return a textfield for the name
     */ Modifier protected ReferenceType JComponent getContentsField IfStatement BinaryOperation == MemberReference contentsScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator contentList ClassCreator ReferenceType UMLMutableLinkedList MemberReference contentListModel ClassCreator ReferenceType ActionAddPartitionContent Literal null StatementExpression Assignment MemberReference contentsScroll ClassCreator ReferenceType JScrollPane MemberReference contentList = End ReturnStatement MemberReference contentsScroll MethodDeclaration Modifier protected ReferenceType JScrollPane getActivityGraphField ReturnStatement MemberReference activityGraphScroll ClassDeclaration ActionAddPartitionContent ConstructorDeclaration Modifier public ActionAddPartitionContent StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal true setMultiSelect MethodDeclaration Modifier protected Annotation Override doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator partition MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference partition isAPartition getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference partition MemberReference selected setContents getActivityGraphsHelper End MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAPartition getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator partition MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator ag MethodInvocation Model MethodInvocation MemberReference partition getActivityGraph getFacade IfStatement BinaryOperation != MemberReference ag Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator top MethodInvocation Model MethodInvocation MemberReference ag getTop getFacade StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference top getSubvertices getFacade addAll End End ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-contents"" localize MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MethodInvocation getTarget getContents getFacade addAll ReturnStatement MemberReference ret ReferenceType AbstractActionAddModelElement2 ReferenceType PropPanelModelElement ClassDeclaration UMLPartitionContentListModel ConstructorDeclaration Modifier public UMLPartitionContentListModel FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator partition MethodInvocation getTarget StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference partition getContents getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element IfStatement MethodInvocation ! Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator partition MethodInvocation getTarget ReturnStatement MethodInvocation Model MethodInvocation MemberReference partition getContents MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2 ClassDeclaration UMLPartitionActivityGraphListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateVertexIncomingListModel.
     */ UMLPartitionActivityGraphListModel StatementExpression SuperConstructorInvocation Literal ""activityGraph"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getActivityGraph getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getActivityGraph getFacade MemberReference element ReferenceType UMLModelElementListModel2",0
194,194,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Font Import org.argouml.model.Model ClassDeclaration /**
 * A FigSingleLineText that represents the name of a modelelement,
 * which handles italic font if the element is abstract. <p>
 * 
 * For this to work, the owner of this FigText needs to be set!
 *
 * @author Michiel
 */ FigNameWithAbstract ConstructorDeclaration Modifier public FigNameWithAbstract FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter BasicType boolean expandOnly StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h MemberReference expandOnly MethodDeclaration Modifier protected Annotation Override BasicType int getFigFontStyle LocalVariableDeclaration BasicType int VariableDeclarator style Literal 0 IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression Assignment MemberReference style TernaryExpression MethodInvocation Model MethodInvocation MethodInvocation getOwner isAbstract getFacade MemberReference Font ITALIC MemberReference Font PLAIN = End ReturnStatement BinaryOperation | SuperMethodInvocation getFigFontStyle MemberReference style ReferenceType FigSingleLineText",0
1438,1438,,0
350,350,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.beans.PropertyChangeEvent Import java.util.Collection Import org.apache.log4j.Logger Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * A model for a namespace combo box.
 *
 * @since Oct 10, 2002
 * @author jaap.branderhorst@xs4all.nl, alexb
 */ UMLModelElementNamespaceComboBoxModel FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType UMLModelElementNamespaceComboBoxModel getLogger ConstructorDeclaration Modifier public /**
     * Constructor for UMLModelElementNamespaceComboBoxModel.
     */ UMLModelElementNamespaceComboBoxModel StatementExpression SuperConstructorInvocation Literal ""namespace"" Literal true StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal ""ownedElement"" addClassModelEventListener getPump MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isANamespace getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference o isValidNamespace getCoreHelper MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getRoot getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference target MemberReference model getAllPossibleNamespaces getCoreHelper IfStatement BinaryOperation != MemberReference target Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference namespace Literal null MethodInvocation ! c MemberReference namespace contains BlockStatement StatementExpression MethodInvocation c MemberReference namespace add StatementExpression MethodInvocation LOG Literal ""The current namespace is not a valid one!"" warn End End StatementExpression MethodInvocation MemberReference c setElements MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getNamespace getFacade End ReturnStatement Literal null MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation == MethodInvocation evt getSource MemberReference t BinaryOperation != MethodInvocation evt getNewValue Literal null BlockStatement StatementExpression MethodInvocation buildModelList StatementExpression MethodInvocation MethodInvocation getSelectedModelElement setSelectedItem End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 775116993155949065L ReferenceType UMLComboBoxModel2",0
1408,1408,,0
314,314,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import org.argouml.model.AbstractDataTypesHelperDecorator Import org.argouml.model.DataTypesHelper ClassDeclaration /**
 * This Decorator is responsible for generating commands for any
 * mutable methods.
 *
 * @author Linus Tolke
 */ UndoDataTypesHelperDecorator ConstructorDeclaration /**
     * Constructor.
     *
     * @param component The component we are decorating.
     */ UndoDataTypesHelperDecorator FormalParameter ReferenceType DataTypesHelper component StatementExpression SuperConstructorInvocation MemberReference component ReferenceType AbstractDataTypesHelperDecorator",1
1010,1010,,1
155,155,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.util.ArrayList Import java.util.List Import java.util.Vector Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.Translator ClassDeclaration Modifier public /**
 * This class represents a ""priority"". Which is a classification for critics.
 *
 */ PriorityNode FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator HIGH MethodInvocation Translator Literal ""misc.level.high"" localize FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator MEDIUM MethodInvocation Translator Literal ""misc.level.medium"" localize FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator LOW MethodInvocation Translator Literal ""misc.level.low"" localize FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType PriorityNode VariableDeclarator priorities Literal null FieldDeclaration Modifier private ReferenceType String VariableDeclarator name FieldDeclaration Modifier private BasicType int VariableDeclarator priority ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param n the name of this priority
     * @param pri the priority number
     */ PriorityNode FormalParameter ReferenceType String n FormalParameter BasicType int pri StatementExpression Assignment MemberReference name MemberReference n = StatementExpression Assignment MemberReference priority MemberReference pri = MethodDeclaration /**
     * @return the list of all the priorities
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getPriorityList()}.
     */ Modifier public static Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType PriorityNode getPriorities ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType PriorityNode MethodInvocation getPriorityList MethodDeclaration /**
     * @return the list of all the priorities
     */ Modifier public static ReferenceType List TypeArgument ReferenceType PriorityNode getPriorityList IfStatement BinaryOperation == MemberReference priorities Literal null BlockStatement StatementExpression Assignment MemberReference priorities ClassCreator ReferenceType ArrayList TypeArgument ReferenceType PriorityNode = StatementExpression MethodInvocation priorities ClassCreator ReferenceType PriorityNode MemberReference HIGH MemberReference ToDoItem HIGH_PRIORITY add StatementExpression MethodInvocation priorities ClassCreator ReferenceType PriorityNode MemberReference MEDIUM MemberReference ToDoItem MED_PRIORITY add StatementExpression MethodInvocation priorities ClassCreator ReferenceType PriorityNode MemberReference LOW MemberReference ToDoItem LOW_PRIORITY add End ReturnStatement MemberReference priorities MethodDeclaration /**
     * @return the name
     */ Modifier public ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration /**
     * @return the priority
     */ Modifier public BasicType int getPriority ReturnStatement MemberReference priority MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation getName",1
762,762,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import javax.swing.JTextField Import javax.swing.event.DocumentEvent Import javax.swing.event.DocumentListener Import org.argouml.i18n.Translator Import org.argouml.ui.LookAndFeelMgr ClassDeclaration Modifier public /**
 * This text field shows the language of a UML expression.
 */ UMLExpressionLanguageField FieldDeclaration Modifier private ReferenceType UMLExpressionModel2 VariableDeclarator model FieldDeclaration Modifier private BasicType boolean VariableDeclarator notifyModel ConstructorDeclaration Modifier public /**
     * Creates a new field that selects the language for an expression.
     *
     * @param m Expression model, should be shared between
     * Language and Body fields
     * @param n Only one of Language and Body fields should
     * forward events to model
     */ UMLExpressionLanguageField FormalParameter ReferenceType UMLExpressionModel2 m FormalParameter BasicType boolean n StatementExpression Assignment MemberReference model MemberReference m = StatementExpression Assignment MemberReference notifyModel MemberReference n = StatementExpression MethodInvocation MethodInvocation This addDocumentListener getDocument StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.language.tooltip"" localize setToolTipText StatementExpression MethodInvocation MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont MethodDeclaration Modifier public targetChanged IfStatement MemberReference notifyModel StatementExpression MethodInvocation model targetChanged End StatementExpression MethodInvocation update MethodDeclaration Modifier public targetReasserted MethodDeclaration Modifier private update LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator newText MethodInvocation model getLanguage IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation MemberReference newText setText End End MethodDeclaration Modifier public changedUpdate FormalParameter Modifier final ReferenceType DocumentEvent p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage MethodDeclaration Modifier public removeUpdate FormalParameter Modifier final ReferenceType DocumentEvent p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage MethodDeclaration Modifier public insertUpdate FormalParameter Modifier final ReferenceType DocumentEvent p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage ReferenceType JTextField ReferenceType DocumentListener ReferenceType UMLUserInterfaceComponent",0
1365,1365,,1
1197,1197,,1
1453,1453,,0
1403,1403,,0
1248,1248,,0
534,534,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Color Import java.awt.Dimension Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.GridLayout Import java.awt.Insets Import java.awt.Rectangle Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.MouseEvent Import java.awt.event.MouseListener Import java.util.ArrayList Import java.util.List Import javax.swing.JButton Import javax.swing.JComboBox Import javax.swing.JLabel Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.JTabbedPane Import javax.swing.JTextArea Import javax.swing.border.EmptyBorder Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.swingext.SpacerPanel Import org.argouml.uml.PredicateFind Import org.argouml.uml.cognitive.ChildGenFind Import org.argouml.util.ArgoDialog Import org.tigris.gef.util.Predicate Import org.tigris.gef.util.PredicateStringMatch Import org.tigris.gef.util.PredicateType ClassDeclaration Modifier public /**
 * Main dialog for Find function.
 *
 * This is one of the few dialog boxes in Argo that is
 * non-modal (so that the user can keep the results on
 * the screen while they work with them).<p>
 *
 * The search is buggy and needs work.
 */ FindDialog FieldDeclaration Modifier private static ReferenceType FindDialog VariableDeclarator instance FieldDeclaration Modifier private static BasicType int VariableDeclarator nextResultNum Literal 1 FieldDeclaration Modifier private static BasicType int VariableDeclarator numFinds FieldDeclaration /**
     * Insets in pixels.
     */ Modifier private final static BasicType int VariableDeclarator INSET_PX Literal 3 FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator search ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""dialog.find.button.find"" localize FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator clearTabs ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""dialog.find.button.clear-tabs"" localize FieldDeclaration Modifier private ReferenceType JTabbedPane VariableDeclarator tabs ClassCreator ReferenceType JTabbedPane FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator nameLocTab ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator modifiedTab ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator tagValsTab ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator constraintsTab ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator elementName ClassCreator ReferenceType JComboBox FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator diagramName ClassCreator ReferenceType JComboBox FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator location ClassCreator ReferenceType JComboBox FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator type ClassCreator ReferenceType JComboBox FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator typeDetails ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType JTabbedPane VariableDeclarator results ClassCreator ReferenceType JTabbedPane FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator help ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType TabResults VariableDeclarator resultTabs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType TabResults MethodDeclaration /**
     * @return the instance of this dialog
     */ Modifier public static ReferenceType FindDialog getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType FindDialog = End ReturnStatement MemberReference instance ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ FindDialog StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""dialog.find.title"" localize MemberReference ArgoDialog OK_CANCEL_OPTION Literal false LocalVariableDeclaration ReferenceType JPanel VariableDeclarator mainPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout StatementExpression MethodInvocation initNameLocTab StatementExpression MethodInvocation tabs MethodInvocation Translator Literal ""dialog.find.tab.name-and-location"" localize MemberReference nameLocTab addTab StatementExpression MethodInvocation initModifiedTab StatementExpression MethodInvocation tabs MethodInvocation Translator Literal ""dialog.find.tab.last-modified"" localize MemberReference modifiedTab addTab StatementExpression MethodInvocation tabs Literal 1 Literal false setEnabledAt StatementExpression MethodInvocation initTagValsTab StatementExpression MethodInvocation tabs MethodInvocation Translator Literal ""dialog.find.tab.tagged-values"" localize MemberReference tagValsTab addTab StatementExpression MethodInvocation tabs Literal 2 Literal false setEnabledAt StatementExpression MethodInvocation initConstraintsTab StatementExpression MethodInvocation tabs MethodInvocation Translator Literal ""tab.constraints"" localize MemberReference constraintsTab addTab StatementExpression MethodInvocation tabs Literal 3 Literal false setEnabledAt StatementExpression MethodInvocation tabs ClassCreator ReferenceType Dimension Literal 300 Literal 250 setMinimumSize LocalVariableDeclaration ReferenceType JPanel VariableDeclarator north ClassCreator ReferenceType JPanel StatementExpression MethodInvocation north ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation north MemberReference tabs MemberReference BorderLayout CENTER add StatementExpression MethodInvocation mainPanel MemberReference north MemberReference BorderLayout NORTH add StatementExpression MethodInvocation initHelpTab StatementExpression MethodInvocation results MethodInvocation Translator Literal ""dialog.find.tab.help"" localize MemberReference help addTab StatementExpression MethodInvocation mainPanel MemberReference results MemberReference BorderLayout CENTER add StatementExpression MethodInvocation search This addActionListener StatementExpression MethodInvocation results This addMouseListener StatementExpression MethodInvocation clearTabs This addActionListener StatementExpression MethodInvocation clearTabs Literal false setEnabled StatementExpression MethodInvocation MemberReference mainPanel setContent StatementExpression MethodInvocation MethodInvocation Literal false setEnabled getOkButton MethodDeclaration /**
     * Initialise the tab ""Name and Location"".
     */ Modifier private initNameLocTab StatementExpression MethodInvocation elementName Literal true setEditable StatementExpression MethodInvocation elementName MethodInvocation getEditorComponent MethodInvocation MemberReference Color white setBackground getEditor StatementExpression MethodInvocation diagramName Literal true setEditable StatementExpression MethodInvocation diagramName MethodInvocation getEditorComponent MethodInvocation MemberReference Color white setBackground getEditor StatementExpression MethodInvocation elementName Literal ""*"" addItem StatementExpression MethodInvocation diagramName Literal ""*"" addItem LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation nameLocTab MemberReference gb setLayout LocalVariableDeclaration ReferenceType JLabel VariableDeclarator elementNameLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""dialog.find.label.element-name"" localize LocalVariableDeclaration ReferenceType JLabel VariableDeclarator diagramNameLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""dialog.find.label.in-diagram"" localize LocalVariableDeclaration ReferenceType JLabel VariableDeclarator typeLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""dialog.find.label.element-type"" localize LocalVariableDeclaration ReferenceType JLabel VariableDeclarator locLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""dialog.find.label.find-in"" localize StatementExpression MethodInvocation location MethodInvocation Translator Literal ""dialog.find.comboboxitem.entire-project"" localize addItem StatementExpression MethodInvocation initTypes StatementExpression MethodInvocation typeDetails ClassCreator ReferenceType Dimension Literal 200 Literal 100 setMinimumSize StatementExpression MethodInvocation typeDetails ClassCreator ReferenceType Dimension Literal 200 Literal 100 setPreferredSize StatementExpression MethodInvocation typeDetails ClassCreator ReferenceType Dimension Literal 200 Literal 100 setSize LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression Assignment MemberReference c ipady Literal 3 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference elementNameLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference elementNameLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference elementName MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference elementName add StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference diagramNameLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference diagramNameLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference diagramName MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference diagramName add StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference locLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference locLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference location MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference location add LocalVariableDeclaration ReferenceType SpacerPanel VariableDeclarator spacer ClassCreator ReferenceType SpacerPanel StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference spacer MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference spacer add StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference typeLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference typeLabel add StatementExpression Assignment MemberReference c gridx Literal 4 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference type MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference type add StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression Assignment MemberReference c gridheight Literal 5 = StatementExpression MethodInvocation gb MemberReference typeDetails MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference typeDetails add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator searchPanel ClassCreator ReferenceType JPanel StatementExpression MethodInvocation searchPanel ClassCreator ReferenceType GridLayout Literal 1 Literal 2 Literal 5 Literal 5 setLayout StatementExpression MethodInvocation searchPanel MemberReference clearTabs add StatementExpression MethodInvocation searchPanel MemberReference search add StatementExpression MethodInvocation searchPanel ClassCreator ReferenceType EmptyBorder Literal 10 Literal 10 Literal 10 Literal 10 setBorder StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression Assignment MemberReference c gridheight Literal 1 = StatementExpression MethodInvocation gb MemberReference searchPanel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference searchPanel add MethodDeclaration /**
     * Initialise the help tab.
     */ Modifier private initHelpTab StatementExpression MethodInvocation help ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration ReferenceType JTextArea VariableDeclarator helpText ClassCreator ReferenceType JTextArea StatementExpression MethodInvocation helpText MethodInvocation Translator Literal ""dialog.find.helptext"" localize setText StatementExpression MethodInvocation helpText Literal false setEditable StatementExpression MethodInvocation helpText ClassCreator ReferenceType Insets MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX setMargin StatementExpression MethodInvocation help ClassCreator ReferenceType JScrollPane MemberReference helpText MemberReference BorderLayout CENTER add MethodDeclaration /**
     * Init the tab with the tagged values.
     */ Modifier private initTagValsTab MethodDeclaration /**
     * Init the Last Modified tab.
     */ Modifier private initModifiedTab MethodDeclaration /**
     * Init the Constraints tab.
     */ Modifier private initConstraintsTab MethodDeclaration /**
     * Init the modelelement types that we can look for.
     */ Modifier private initTypes StatementExpression MethodInvocation type MethodInvocation PredicateMType create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getUMLClass getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getInterface getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getAction getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getActor getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getAssociation getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getAssociationClass getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getAssociationEndRole getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getAssociationRole getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getArtifact getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getAttribute getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getClassifier getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getClassifierRole getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getCollaboration getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getComment getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getComponent getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getCompositeState getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getConstraint getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getDataType getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getDependency getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getElementImport getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getEnumeration getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getEnumerationLiteral getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getException getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getExtend getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getExtensionPoint getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getGuard getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getGeneralization getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getInclude getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getInstance getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getInteraction getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getInterface getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getLink getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getMessage getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getModel getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getNode getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getPackage getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getParameter getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getPartition getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getPseudostate getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getOperation getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getSimpleState getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getSignal getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getState getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getStateMachine getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getStateVertex getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getStereotype getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getTagDefinition getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getTransition getMetaTypes create addItem StatementExpression MethodInvocation type MethodInvocation PredicateMType MethodInvocation Model MethodInvocation getUseCase getMetaTypes create addItem MethodDeclaration Modifier protected Annotation Override nameButtons StatementExpression SuperMethodInvocation nameButtons StatementExpression MethodInvocation MethodInvocation getOkButton Literal ""button.go-to-selection"" nameButton StatementExpression MethodInvocation MethodInvocation getCancelButton Literal ""button.close"" nameButton MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement BinaryOperation == MethodInvocation e getSource MemberReference search BlockStatement StatementExpression MethodInvocation doSearch IfStatement BinaryOperation == MethodInvocation e getSource MemberReference clearTabs BlockStatement StatementExpression MethodInvocation doClearTabs IfStatement BinaryOperation == MethodInvocation e getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation doGoToSelection BlockStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed End End End MethodDeclaration /**
     * Do the search.
     */ Modifier private doSearch StatementExpression MemberReference ++ numFinds LocalVariableDeclaration ReferenceType String VariableDeclarator eName Literal """" IfStatement BinaryOperation != MethodInvocation elementName getSelectedItem Literal null BlockStatement StatementExpression Assignment MemberReference eName MethodInvocation elementName getSelectedItem += StatementExpression MethodInvocation elementName MemberReference eName removeItem StatementExpression MethodInvocation elementName MemberReference eName Literal 0 insertItemAt StatementExpression MethodInvocation elementName MemberReference eName setSelectedItem End LocalVariableDeclaration ReferenceType String VariableDeclarator dName Literal """" IfStatement BinaryOperation != MethodInvocation diagramName getSelectedItem Literal null BlockStatement StatementExpression Assignment MemberReference dName MethodInvocation diagramName getSelectedItem += StatementExpression MethodInvocation diagramName MemberReference dName removeItem StatementExpression MethodInvocation diagramName MemberReference dName Literal 0 insertItemAt StatementExpression MethodInvocation diagramName MemberReference dName setSelectedItem End LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference eName IfStatement BinaryOperation > MethodInvocation dName length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MemberReference name MemberReference dName StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""dialog.find.comboboxitem.element-in-diagram"" MemberReference msgArgs messageFormat = End LocalVariableDeclaration ReferenceType String VariableDeclarator typeName MethodInvocation type MethodInvocation toString getSelectedItem IfStatement MethodInvocation ! typeName Literal ""Any Type"" equals BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + Literal "" "" MemberReference typeName += End IfStatement BinaryOperation == MethodInvocation name length Literal 0 BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MethodInvocation Translator Literal ""dialog.find.tabname"" localize MemberReference nextResultNum = End IfStatement BinaryOperation > MethodInvocation name length Literal 15 BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MethodInvocation name Literal 0 Literal 12 substring Literal ""..."" = End LocalVariableDeclaration ReferenceType String VariableDeclarator pName Literal """" LocalVariableDeclaration ReferenceType Predicate VariableDeclarator eNamePred MethodInvocation PredicateStringMatch MemberReference eName create LocalVariableDeclaration ReferenceType Predicate VariableDeclarator pNamePred MethodInvocation PredicateStringMatch MemberReference pName create LocalVariableDeclaration ReferenceType Predicate VariableDeclarator dNamePred MethodInvocation PredicateStringMatch MemberReference dName create LocalVariableDeclaration ReferenceType Predicate VariableDeclarator typePred Cast ReferenceType Predicate MethodInvocation type getSelectedItem LocalVariableDeclaration ReferenceType PredicateFind VariableDeclarator pred ClassCreator ReferenceType PredicateFind MemberReference eNamePred MemberReference pNamePred MemberReference dNamePred MemberReference typePred LocalVariableDeclaration ReferenceType ChildGenFind VariableDeclarator gen MethodInvocation ChildGenFind getSingleton LocalVariableDeclaration ReferenceType Object VariableDeclarator root MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType TabResults VariableDeclarator newResults ClassCreator ReferenceType TabResults StatementExpression MethodInvocation newResults MemberReference name setTitle StatementExpression MethodInvocation newResults MemberReference pred setPredicate StatementExpression MethodInvocation newResults MemberReference root setRoot StatementExpression MethodInvocation newResults MemberReference gen setGenerator StatementExpression MethodInvocation resultTabs MemberReference newResults add StatementExpression MethodInvocation results MemberReference name MemberReference newResults addTab StatementExpression MethodInvocation clearTabs Literal true setEnabled StatementExpression MethodInvocation MethodInvocation Literal true setEnabled getOkButton StatementExpression MethodInvocation results MemberReference newResults setSelectedComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MemberReference name StatementExpression MethodInvocation location MethodInvocation Translator Literal ""dialog.find.comboboxitem.in-tab"" MemberReference msgArgs messageFormat addItem StatementExpression MethodInvocation invalidate StatementExpression MethodInvocation results invalidate StatementExpression MethodInvocation validate StatementExpression MethodInvocation newResults run StatementExpression MethodInvocation newResults requestFocus StatementExpression MethodInvocation newResults Literal 0 selectResult MethodDeclaration /**
     * Reset the user interface to its initial state.  Use this if a new project
     * has been loaded and the Find dialog is being displayed with stale results.
     */ Modifier public reset StatementExpression MethodInvocation doClearTabs StatementExpression MethodInvocation Literal true doResetFields MethodDeclaration /**
     * Clear the tabs.
     * @deprecated for 0.25.4 by tfmorris.  The visibility of this will be reduced
     * in the future.  Use {@link #reset()}.
     */ Modifier public Annotation Deprecated doClearTabs LocalVariableDeclaration BasicType int VariableDeclarator numTabs MethodInvocation resultTabs size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference numTabs MemberReference ++ i BlockStatement StatementExpression MethodInvocation results MethodInvocation resultTabs MemberReference i get remove End StatementExpression MethodInvocation resultTabs clear StatementExpression MethodInvocation clearTabs Literal false setEnabled StatementExpression MethodInvocation MethodInvocation Literal false setEnabled getOkButton StatementExpression MethodInvocation Literal false doResetFields MethodDeclaration /**
     * Reset the fields.
     * 
     * @param complete if true, reset all 3 fields (element name, diagram name,
     *                and location), otherwise only the last is reset.
     * @deprecated for 0.25.4 by tfmorris. The visibility of this will be
     *             reduced in the future. Use {@link #reset()}.
     */ Modifier public Annotation Deprecated doResetFields FormalParameter BasicType boolean complete IfStatement MemberReference complete BlockStatement StatementExpression MethodInvocation elementName removeAllItems StatementExpression MethodInvocation diagramName removeAllItems StatementExpression MethodInvocation elementName Literal ""*"" addItem StatementExpression MethodInvocation diagramName Literal ""*"" addItem End StatementExpression MethodInvocation location removeAllItems StatementExpression MethodInvocation location MethodInvocation Translator Literal ""dialog.find.comboboxitem.entire-project"" localize addItem MethodDeclaration /**
     * Reset all 3 fields.
     * 
     * @deprecated for 0.25.4 by tfmorris. The visibility of this will be
     *             reduced in the future. Use {@link #reset()}.
     */ Modifier public Annotation Deprecated doResetFields StatementExpression MethodInvocation Literal true doResetFields MethodDeclaration /**
     * Execute the GoTo selection command.
     */ Modifier private doGoToSelection IfStatement BinaryOperation instanceof MethodInvocation results getSelectedComponent ReferenceType TabResults BlockStatement StatementExpression Cast ReferenceType TabResults MethodInvocation results getSelectedComponent End MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseReleased FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseEntered FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseExited FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator tab MethodInvocation results getSelectedIndex IfStatement BinaryOperation != MemberReference tab Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator tabBounds MethodInvocation results MemberReference tab getBoundsAt IfStatement MethodInvocation ! tabBounds MethodInvocation me getX MethodInvocation me getY contains BlockStatement ReturnStatement End IfStatement BinaryOperation && BinaryOperation >= MemberReference tab Literal 1 BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation BinaryOperation - MemberReference tab Literal 1 myDoubleClick End End MethodDeclaration /**
     * Double click on tab detaches it in a free floating window.
     *
     * MVW: This is the only place where spawning is still enabled.
     *
     * @param tab the given tab
     */ Modifier private myDoubleClick FormalParameter BasicType int tab LocalVariableDeclaration ReferenceType JPanel VariableDeclarator t MethodInvocation resultTabs MemberReference tab get IfStatement BinaryOperation instanceof MemberReference t ReferenceType AbstractArgoJPanel BlockStatement IfStatement BinaryOperation != Cast ReferenceType AbstractArgoJPanel MemberReference t Literal null BlockStatement StatementExpression MethodInvocation resultTabs MemberReference tab remove StatementExpression MethodInvocation location BinaryOperation + Literal ""In Tab: "" Cast ReferenceType AbstractArgoJPanel MemberReference t removeItem End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 9209251878896557216L ReferenceType ArgoDialog ReferenceType ActionListener ReferenceType MouseListener ClassDeclaration /**
 * PredicateMType is a small helper class which converts the
 * string representation of the Type from internal form.
 * Now that Type names aren't prefixed with NSUML's ""M"" the
 * name of the class is somewhat of a misnomer.
 */ PredicateMType ConstructorDeclaration Modifier protected /**
     * The constructor.
     *
     * @param pats The classes.
     */ PredicateMType FormalParameter ReferenceType Class pats StatementExpression SuperConstructorInvocation MemberReference pats MemberReference pats length ConstructorDeclaration Modifier protected /**
     * The constructor.
     *
     * @param pats The classes (or <code>null</code> if numPats is 0.
     * @param numPats The count of classes.
     */ PredicateMType FormalParameter ReferenceType Class pats FormalParameter BasicType int numPats StatementExpression SuperConstructorInvocation MemberReference pats MemberReference numPats MethodDeclaration /**
     * Create without classes.
     *
     * @return A newly created PredicateType.
     */ Modifier public static ReferenceType PredicateType create ReturnStatement ClassCreator ReferenceType PredicateMType Literal null Literal 0 MethodDeclaration /**
     * Create with one class.
     *
     * @param c0 First class.
     * @return A newly created PredicateType.
     */ Modifier public static ReferenceType PredicateType create FormalParameter ReferenceType Object c0 LocalVariableDeclaration ReferenceType Class VariableDeclarator classes ArrayCreator ReferenceType Class Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 classes Cast ReferenceType Class MemberReference c0 = ReturnStatement ClassCreator ReferenceType PredicateMType MemberReference classes MethodDeclaration /**
     * Create with two classes.
     *
     * @param c0 First class.
     * @param c1 Second class.
     * @return A newly created PredicateType.
     */ Modifier public static ReferenceType PredicateType create FormalParameter ReferenceType Object c0 FormalParameter ReferenceType Object c1 LocalVariableDeclaration ReferenceType Class VariableDeclarator classes ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 classes Cast ReferenceType Class MemberReference c0 = StatementExpression Assignment MemberReference ArraySelector Literal 1 classes Cast ReferenceType Class MemberReference c1 = ReturnStatement ClassCreator ReferenceType PredicateMType MemberReference classes MethodDeclaration /**
     * Create with three classes.
     *
     * @param c0 First class.
     * @param c1 Second class.
     * @param c2 Third class.
     * @return A newly created PredicateType.
     */ Modifier public static ReferenceType PredicateType create FormalParameter ReferenceType Object c0 FormalParameter ReferenceType Object c1 FormalParameter ReferenceType Object c2 LocalVariableDeclaration ReferenceType Class VariableDeclarator classes ArrayCreator ReferenceType Class Literal 3 StatementExpression Assignment MemberReference ArraySelector Literal 0 classes Cast ReferenceType Class MemberReference c0 = StatementExpression Assignment MemberReference ArraySelector Literal 1 classes Cast ReferenceType Class MemberReference c1 = StatementExpression Assignment MemberReference ArraySelector Literal 2 classes Cast ReferenceType Class MemberReference c2 = ReturnStatement ClassCreator ReferenceType PredicateMType MemberReference classes MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator result SuperMethodInvocation toString IfStatement MethodInvocation result Literal ""Uml"" startsWith BlockStatement StatementExpression Assignment MemberReference result MethodInvocation result Literal 3 substring = End ReturnStatement MemberReference result FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 901828109709882796L ReferenceType PredicateType",1
1301,1301,,0
508,508,"CompilationUnit PackageDeclaration org.argouml.moduleloader Import java.io.File Import java.io.FileFilter Import java.io.IOException Import java.io.UnsupportedEncodingException Import java.lang.reflect.Constructor Import java.lang.reflect.InvocationTargetException Import java.lang.reflect.Modifier Import java.net.URL Import java.net.URLClassLoader Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Enumeration Import java.util.HashMap Import java.util.HashSet Import java.util.List Import java.util.Map Import java.util.StringTokenizer Import java.util.jar.Attributes Import java.util.jar.JarEntry Import java.util.jar.JarFile Import java.util.jar.Manifest Import org.apache.log4j.Logger Import org.argouml.application.api.Argo Import org.argouml.i18n.Translator ClassDeclaration Modifier public final /**
 * This is the module loader that loads modules implementing the
 * ModuleInterface.<p>
 *
 * This is a singleton. There are convenience functions that are static
 * to access the module.<p>
 *
 * @stereotype singleton
 * @author Linus Tolke
 * @since 0.15.4
 */ ModuleLoader2 FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ModuleLoader2 getLogger FieldDeclaration /**
     * This map contains the module loader information about the module.<p>
     *
     * The keys is the list of available modules.
     */ Modifier private ReferenceType Map TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus VariableDeclarator moduleStatus FieldDeclaration /**
     * List of locations that we've searched and/or loaded modules
     * from.  This is for information purposes only to allow it to 
     * be displayed in the settings Environment tab.
     */ Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator extensionLocations ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String FieldDeclaration /**
     * The module loader object.
     */ Modifier private final static ReferenceType ModuleLoader2 VariableDeclarator INSTANCE ClassCreator ReferenceType ModuleLoader2 FieldDeclaration /**
     * The prefix in URL:s that are files.
     */ Modifier private final static ReferenceType String VariableDeclarator FILE_PREFIX Literal ""file:"" FieldDeclaration /**
     * The prefix in URL:s that are jars.
     */ Modifier private final static ReferenceType String VariableDeclarator JAR_PREFIX Literal ""jar:"" FieldDeclaration /**
     * Class file suffix.
     */ Modifier public final static ReferenceType String VariableDeclarator CLASS_SUFFIX Literal "".class"" ConstructorDeclaration Modifier private /**
     * Constructor for this object.
     */ ModuleLoader2 StatementExpression Assignment MemberReference moduleStatus ClassCreator ReferenceType HashMap TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus = MethodDeclaration /**
     * Get hold of the instance of this object.
     *
     * @return the instance
     */ Modifier public static ReferenceType ModuleLoader2 getInstance ReturnStatement MemberReference INSTANCE MethodDeclaration /**
     * Return a collection of all available modules.
     *
     * @return A Collection of all available modules.
     */ Modifier private ReferenceType Collection TypeArgument ReferenceType ModuleInterface availableModules ReturnStatement MethodInvocation Collections MethodInvocation moduleStatus keySet unmodifiableCollection MethodDeclaration /**
     * Enables all selected modules and disabling all modules not selected.<p>
     *
     * In short this attempts to make the modules obey their selection.<p>
     *
     * @param failingAllowed is <code>true</code> if enabling or disabling of
     *                       some of the modules is allowed to fail.
     */ Modifier public static doLoad FormalParameter BasicType boolean failingAllowed StatementExpression MethodInvocation MethodInvocation MemberReference failingAllowed doInternal getInstance MethodDeclaration /**
     * Gets the loaded status for some other module.
     *
     * @return true if the module exists and is enabled.
     * @param name is the module name of the queried module
     */ Modifier public static BasicType boolean isEnabled FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation MemberReference name isEnabledInternal getInstance MethodDeclaration /**
     * Get a Collection with all the names.
     *
     * @return all the names.
     */ Modifier public static ReferenceType Collection TypeArgument ReferenceType String allModules LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator coll ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator mf MethodInvocation MethodInvocation availableModules getInstance BlockStatement StatementExpression MethodInvocation coll MethodInvocation mf getName add End ReturnStatement MemberReference coll MethodDeclaration /**
     * Get the selected.
     *
     * @param name The name of the module.
     * @return <code>true</code> if the module is selected.
     */ Modifier public static BasicType boolean isSelected FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation MemberReference name isSelectedInternal getInstance MethodDeclaration /**
     * Get the selected.
     *
     * @see #isSelected(String)
     * @param name The name of the module.
     * @return <code>true</code> if the module is selected.
     */ Modifier private BasicType boolean isSelectedInternal FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus VariableDeclarator entry MethodInvocation MemberReference name findModule IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType ModuleStatus VariableDeclarator status MethodInvocation entry getValue IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ReturnStatement Literal false End ReturnStatement MethodInvocation status isSelected End ReturnStatement Literal false MethodDeclaration /**
     * Set the selected value.
     *
     * @param name The name of the module.
     * @param value Selected or not.
     */ Modifier public static setSelected FormalParameter ReferenceType String name FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference value setSelectedInternal getInstance MethodDeclaration /**
     * Set the selected value.
     *
     * @see #setSelected(String, boolean)
     * @param name The name of the module.
     * @param value Selected or not.
     */ Modifier private setSelectedInternal FormalParameter ReferenceType String name FormalParameter BasicType boolean value LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus VariableDeclarator entry MethodInvocation MemberReference name findModule IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType ModuleStatus VariableDeclarator status MethodInvocation entry getValue StatementExpression MethodInvocation status MemberReference value setSelected End MethodDeclaration /**
     * Create a description of the module based on the information provided
     * by the module itself.
     *
     * @param name The name of the module.
     * @return The description.
     */ Modifier public static ReferenceType String getDescription FormalParameter ReferenceType String name ReturnStatement MethodInvocation MethodInvocation MemberReference name getDescriptionInternal getInstance MethodDeclaration /**
     * Create a description of the module based on the information provided
     * by the module itself.
     *
     * @see #getDescription(String)
     * @param name The name of the module.
     * @return The description.
     */ Modifier private ReferenceType String getDescriptionInternal FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus VariableDeclarator entry MethodInvocation MemberReference name findModule IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Module does not exist."" End LocalVariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation entry getKey LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator desc MethodInvocation module MemberReference ModuleInterface DESCRIPTION getInfo IfStatement BinaryOperation != MemberReference desc Literal null BlockStatement StatementExpression MethodInvocation sb MemberReference desc append StatementExpression MethodInvocation sb Literal ""\n\n"" append End LocalVariableDeclaration ReferenceType String VariableDeclarator author MethodInvocation module MemberReference ModuleInterface AUTHOR getInfo IfStatement BinaryOperation != MemberReference author Literal null BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference author append Literal ""Author: "" append StatementExpression MethodInvocation sb Literal ""\n"" append End LocalVariableDeclaration ReferenceType String VariableDeclarator version MethodInvocation module MemberReference ModuleInterface VERSION getInfo IfStatement BinaryOperation != MemberReference version Literal null BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference version append Literal ""Version: "" append StatementExpression MethodInvocation sb Literal ""\n"" append End ReturnStatement MethodInvocation sb toString MethodDeclaration /**
     * Enables all selected modules.
     *
     * @param failingAllowed is true if this is not the last attempt at
     * turning on.
     */ Modifier private doInternal FormalParameter BasicType boolean failingAllowed StatementExpression MethodInvocation huntForModules LocalVariableDeclaration BasicType boolean VariableDeclarator someModuleSucceeded DoStatement MemberReference someModuleSucceeded BlockStatement StatementExpression Assignment MemberReference someModuleSucceeded Literal false = ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation MethodInvocation availableModules getInstance BlockStatement LocalVariableDeclaration ReferenceType ModuleStatus VariableDeclarator status MethodInvocation moduleStatus MemberReference module get IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ContinueStatement End IfStatement BinaryOperation && MethodInvocation ! status isEnabled MethodInvocation status isSelected BlockStatement IfStatement MethodInvocation module enable BlockStatement StatementExpression Assignment MemberReference someModuleSucceeded Literal true = StatementExpression MethodInvocation status setEnabled End IfStatement BinaryOperation && MethodInvocation status isEnabled MethodInvocation ! status isSelected BlockStatement IfStatement MethodInvocation module disable BlockStatement StatementExpression Assignment MemberReference someModuleSucceeded Literal true = StatementExpression MethodInvocation status setDisabled End End End End End IfStatement MemberReference ! failingAllowed BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation MethodInvocation availableModules getInstance BlockStatement LocalVariableDeclaration ReferenceType ModuleStatus VariableDeclarator status MethodInvocation moduleStatus MemberReference module get IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ContinueStatement End IfStatement BinaryOperation && MethodInvocation status isEnabled MethodInvocation status isSelected BlockStatement ContinueStatement End IfStatement BinaryOperation && MethodInvocation ! status isEnabled MethodInvocation ! status isSelected BlockStatement ContinueStatement End IfStatement MethodInvocation status isSelected BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""ModuleLoader was not able to enable module "" MethodInvocation module getName warn BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""ModuleLoader was not able to disable module "" MethodInvocation module getName warn End End End MethodDeclaration /**
     * Gets the loaded status for some other module.
     *
     * @return true if the module exists and is enabled.
     * @param name is the module name of the queried module
     */ Modifier private BasicType boolean isEnabledInternal FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus VariableDeclarator entry MethodInvocation MemberReference name findModule IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType ModuleStatus VariableDeclarator status MethodInvocation entry getValue IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ReturnStatement Literal false End ReturnStatement MethodInvocation status isEnabled End ReturnStatement Literal false MethodDeclaration /**
     * Return the ModuleInterface, ModuleStatus pair for the module
     * with the given name or <code>null</code> if there isn't any.
     *
     * @param name The given name.
     * @return A pair (Map.Entry).
     */ Modifier private ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus findModule FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType ModuleStatus VariableDeclarator entry MethodInvocation moduleStatus entrySet BlockStatement LocalVariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation entry getKey IfStatement MethodInvocation name MethodInvocation module getName equalsIgnoreCase BlockStatement ReturnStatement MemberReference entry End End ReturnStatement Literal null MethodDeclaration /**
     * Tries to find as many available modules as possible.<p>
     *
     * As the modules are found they are appended to {@link #moduleStatus}.<p>
     */ Modifier private huntForModules StatementExpression MethodInvocation huntForModulesFromExtensionDir LocalVariableDeclaration ReferenceType String VariableDeclarator listOfClasses MethodInvocation System Literal ""argouml.modules"" getProperty IfStatement BinaryOperation != MemberReference listOfClasses Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator si ClassCreator ReferenceType StringTokenizer MemberReference listOfClasses Literal "";"" WhileStatement MethodInvocation si hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation si nextToken TryStatement StatementExpression MethodInvocation MemberReference className addClass CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Could not load module from class "" MemberReference className error End End MethodDeclaration /**
     * Find and enable modules from our ""ext"" directory and from the
     * directory specified in ""argo.ext.dir"".<p>
     *
     * TODO: This does a calculation of where our ""ext"" directory is.
     *       We should eventually make sure that this calculation is
     *       only present in one place in the code and not several.
     */ Modifier private huntForModulesFromExtensionDir LocalVariableDeclaration ReferenceType String VariableDeclarator extForm MethodInvocation MethodInvocation MemberReference Argo ARGOINI getResource MethodInvocation toExternalForm getClass LocalVariableDeclaration ReferenceType String VariableDeclarator argoRoot MethodInvocation extForm Literal 0 BinaryOperation - MethodInvocation extForm length MethodInvocation Argo.ARGOINI length substring IfStatement MethodInvocation argoRoot MemberReference JAR_PREFIX startsWith BlockStatement StatementExpression Assignment MemberReference argoRoot MethodInvocation argoRoot MethodInvocation JAR_PREFIX length substring = IfStatement MethodInvocation argoRoot Literal ""!"" endsWith BlockStatement StatementExpression Assignment MemberReference argoRoot MethodInvocation argoRoot Literal 0 BinaryOperation - MethodInvocation argoRoot length Literal 1 substring = End End LocalVariableDeclaration ReferenceType String VariableDeclarator argoHome Literal null IfStatement BinaryOperation != MemberReference argoRoot Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""argoRoot is "" MemberReference argoRoot info IfStatement MethodInvocation argoRoot MemberReference FILE_PREFIX startsWith BlockStatement StatementExpression Assignment MemberReference argoHome ClassCreator MethodInvocation getAbsoluteFile MethodInvocation getParent ReferenceType File MethodInvocation argoRoot MethodInvocation FILE_PREFIX length substring = BlockStatement StatementExpression Assignment MemberReference argoHome ClassCreator MethodInvocation getAbsoluteFile MethodInvocation getParent ReferenceType File MemberReference argoRoot = End TryStatement StatementExpression Assignment MemberReference argoHome MethodInvocation java.net.URLDecoder MemberReference argoHome MethodInvocation Argo getEncoding decode = CatchClause CatchClauseParameter UnsupportedEncodingException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Encoding "" MethodInvocation Argo getEncoding Literal "" is unknown."" warn StatementExpression MethodInvocation LOG BinaryOperation + Literal ""argoHome is "" MemberReference argoHome info End IfStatement BinaryOperation != MemberReference argoHome Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator extdir IfStatement MethodInvocation argoHome MemberReference FILE_PREFIX startsWith BlockStatement StatementExpression Assignment MemberReference extdir BinaryOperation + BinaryOperation + MethodInvocation argoHome MethodInvocation FILE_PREFIX length substring MemberReference File separator Literal ""ext"" = BlockStatement StatementExpression Assignment MemberReference extdir BinaryOperation + BinaryOperation + MemberReference argoHome MemberReference File separator Literal ""ext"" = End StatementExpression MethodInvocation extensionLocations MemberReference extdir add StatementExpression MethodInvocation MemberReference extdir huntModulesFromNamedDirectory End LocalVariableDeclaration ReferenceType String VariableDeclarator extdir MethodInvocation System Literal ""argo.ext.dir"" getProperty IfStatement BinaryOperation != MemberReference extdir Literal null BlockStatement StatementExpression MethodInvocation extensionLocations MemberReference extdir add StatementExpression MethodInvocation MemberReference extdir huntModulesFromNamedDirectory End MethodDeclaration /**
     * Get the list of locations that we've loaded extension modules from.
     * @return A list of the paths we've loaded from.
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getExtensionLocations ReturnStatement MethodInvocation Collections MemberReference extensionLocations unmodifiableList MethodDeclaration /**
     * Find and enable a module from a given directory.
     *
     * @param dirname The name of the directory.
     */ Modifier private huntModulesFromNamedDirectory FormalParameter ReferenceType String dirname LocalVariableDeclaration ReferenceType File VariableDeclarator extensionDir ClassCreator ReferenceType File MemberReference dirname IfStatement MethodInvocation extensionDir isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation extensionDir ClassCreator ReferenceType JarFileFilter listFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator file MemberReference files BlockStatement LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarfile Literal null TryStatement StatementExpression Assignment MemberReference jarfile ClassCreator ReferenceType JarFile MemberReference file = IfStatement BinaryOperation != MemberReference jarfile Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classloader ClassCreator ReferenceType URLClassLoader ArrayCreator ReferenceType URL ArrayInitializer MethodInvocation file MethodInvocation toURL toURI TryStatement StatementExpression MethodInvocation MemberReference classloader MemberReference file processJarFile CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG Literal ""The class is not found."" MemberReference e error ReturnStatement End CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Cannot open Jar file "" MemberReference file MemberReference ioe debug End End MethodDeclaration /**
     * Check a jar file for an ArgoUML extension/module.<p>
     *
     * If there isn't a manifest or it isn't readable, we fail silently.
     *
     * @param classloader The classloader to use.
     * @param file The file to process.
     * @throws ClassNotFoundException if the manifest file contains a class
     *         that doesn't exist.
     */ Modifier private processJarFile FormalParameter ReferenceType ClassLoader classloader FormalParameter ReferenceType File file ClassNotFoundException StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Opening jar file "" MemberReference file info LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarfile TryStatement StatementExpression Assignment MemberReference jarfile ClassCreator ReferenceType JarFile MemberReference file = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unable to open "" MemberReference file MemberReference e error ReturnStatement LocalVariableDeclaration ReferenceType Manifest VariableDeclarator manifest TryStatement StatementExpression Assignment MemberReference manifest MethodInvocation jarfile getManifest = IfStatement BinaryOperation == MemberReference manifest Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + MemberReference file Literal "" does not have a manifest"" debug End CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unable to read manifest of "" MemberReference file MemberReference e error ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator loadedClass Literal false IfStatement BinaryOperation == MemberReference manifest Literal null BlockStatement LocalVariableDeclaration ReferenceType Enumeration TypeArgument ReferenceType JarEntry VariableDeclarator jarEntries MethodInvocation jarfile entries WhileStatement MethodInvocation jarEntries hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator entry MethodInvocation jarEntries nextElement StatementExpression Assignment MemberReference loadedClass BinaryOperation | MemberReference loadedClass MethodInvocation MemberReference classloader MethodInvocation entry getName processEntry = End BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Attributes VariableDeclarator entries MethodInvocation manifest getEntries ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation entries keySet BlockStatement StatementExpression Assignment MemberReference loadedClass BinaryOperation | MemberReference loadedClass MethodInvocation MemberReference classloader MemberReference key processEntry = End End IfStatement MemberReference loadedClass BlockStatement StatementExpression MethodInvocation Translator MemberReference classloader addClassLoader BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Failed to find any loadable ArgoUML modules in jar "" MemberReference file error End MethodDeclaration /**
     * Process a JAR file entry, attempting to load anything that looks like a
     * Java class.
     * 
     * @param classloader
     *            the classloader to use when loading the class
     * @param cname
     *            the class name
     * @throws ClassNotFoundException
     * @return true if class was a module class and loaded successfully
     */ Modifier private BasicType boolean processEntry FormalParameter ReferenceType ClassLoader classloader FormalParameter ReferenceType String cname ClassNotFoundException IfStatement MethodInvocation cname MemberReference CLASS_SUFFIX endsWith BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator classNamelen BinaryOperation - MethodInvocation cname length MethodInvocation CLASS_SUFFIX length LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation cname Literal 0 MemberReference classNamelen substring StatementExpression Assignment MemberReference className MethodInvocation className Literal '/' Literal '.' replace = ReturnStatement MethodInvocation MemberReference classloader MemberReference className addClass End ReturnStatement Literal false MethodDeclaration /**
     * Add a class from the current class loader.
     *
     * @param classname The name of the class (including package).
     * @throws ClassNotFoundException if the class classname is not found.
     */ Modifier public static addClass FormalParameter ReferenceType String classname ClassNotFoundException StatementExpression MethodInvocation MethodInvocation ClassReference MethodInvocation getClassLoader ReferenceType ModuleLoader2 MemberReference classname addClass getInstance MethodDeclaration /**
     * Try to load a module from the given ClassLoader.<p>
     *
     * Only add it as a module if it is a module (i.e. it implements the
     * {@link ModuleInterface} interface.
     *
     * @param classLoader The ClassLoader to load from.
     * @param classname The name.
     * @throws ClassNotFoundException if the class classname is not found.
     */ Modifier private BasicType boolean addClass FormalParameter ReferenceType ClassLoader classLoader FormalParameter ReferenceType String classname ClassNotFoundException StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Loading module "" MemberReference classname info LocalVariableDeclaration ReferenceType Class VariableDeclarator moduleClass TryStatement StatementExpression Assignment MemberReference moduleClass MethodInvocation classLoader MemberReference classname loadClass = CatchClause CatchClauseParameter UnsupportedClassVersionError e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unsupported Java class version for "" MemberReference classname error ReturnStatement Literal false IfStatement ClassReference ! MethodInvocation MemberReference moduleClass isAssignableFrom ReferenceType ModuleInterface BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The class "" MemberReference classname Literal "" is not a module."" debug ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Constructor VariableDeclarator defaultConstructor TryStatement StatementExpression Assignment MemberReference defaultConstructor MethodInvocation moduleClass ArrayCreator ReferenceType Class ArrayInitializer getDeclaredConstructor = CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The default constructor for class "" MemberReference classname Literal "" is not accessable."" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter NoSuchMethodException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The default constructor for class "" MemberReference classname Literal "" is not found."" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter NoClassDefFoundError e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unable to find required class while loading "" MemberReference classname Literal "" - may indicate an obsolete"" Literal "" extension module or an unresolved dependency"" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unexpected error while loading "" MemberReference classname MemberReference e error ReturnStatement Literal false IfStatement MethodInvocation ! Modifier MethodInvocation defaultConstructor getModifiers isPublic BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The default constructor for class "" MemberReference classname Literal "" is not public.  Not loaded."" error ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator moduleInstance TryStatement StatementExpression Assignment MemberReference moduleInstance MethodInvocation defaultConstructor ArrayCreator ReferenceType Object ArrayInitializer newInstance = CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The constructor for class "" MemberReference classname Literal "" is called with incorrect argument."" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The constructor for class "" MemberReference classname Literal "" threw an exception."" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The constructor for class "" MemberReference classname Literal "" is not accessible."" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter InvocationTargetException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The constructor for class "" MemberReference classname Literal "" cannot be called."" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter NoClassDefFoundError e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unable to find required class while instantiating "" MemberReference classname Literal "" - may indicate an obsolete"" Literal "" extension module or an unresolved dependency"" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unexpected error while instantiating "" MemberReference classname MemberReference e error ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference moduleInstance ReferenceType ModuleInterface BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""The class "" MemberReference classname Literal "" is not a module."" error ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ModuleInterface VariableDeclarator mf Cast ReferenceType ModuleInterface MemberReference moduleInstance StatementExpression MethodInvocation MemberReference mf addModule StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Succesfully loaded module "" MemberReference classname info ReturnStatement Literal true MethodDeclaration /**
     * Add a newly found module to {@link #moduleStatus}. If we already
     * know about it, don't add it.
     *
     * @param mf The module to add.
     */ Modifier private addModule FormalParameter ReferenceType ModuleInterface mf ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator foundMf MethodInvocation moduleStatus keySet BlockStatement IfStatement MethodInvocation foundMf MethodInvocation MethodInvocation mf getName equals getName BlockStatement ReturnStatement End End LocalVariableDeclaration ReferenceType ModuleStatus VariableDeclarator ms ClassCreator ReferenceType ModuleStatus StatementExpression MethodInvocation ms setSelected StatementExpression MethodInvocation moduleStatus MemberReference mf MemberReference ms put ClassDeclaration Modifier static /**
     * The file filter that selects Jar files.
     */ JarFileFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File pathname ReturnStatement BinaryOperation && BinaryOperation && MethodInvocation pathname canRead MethodInvocation pathname isFile MethodInvocation pathname MethodInvocation toLowerCase MethodInvocation Literal "".jar"" endsWith getPath ReferenceType FileFilter ClassDeclaration /**
 * Status for each of the available modules. This is created in one copy per
 * available module.
 */ ModuleStatus FieldDeclaration /**
     * If the module is enabled.
     */ Modifier private BasicType boolean VariableDeclarator enabled FieldDeclaration /**
     * If the module is selected.
     */ Modifier private BasicType boolean VariableDeclarator selected MethodDeclaration /**
     * Tells if the module is enabled or not.
     *
     * @return true if the module is enabled.
     */ Modifier public BasicType boolean isEnabled ReturnStatement MemberReference enabled MethodDeclaration /**
     * Setter for enabled.
     */ Modifier public setEnabled StatementExpression Assignment MemberReference enabled Literal true = MethodDeclaration /**
     * Setter for enabled.
     */ Modifier public setDisabled StatementExpression Assignment MemberReference enabled Literal false = MethodDeclaration /**
     * Tells if the module is selected by the user or not.
     *
     * @return true if it is selected.
     */ Modifier public BasicType boolean isSelected ReturnStatement MemberReference selected MethodDeclaration /**
     * Setter for selected.
     */ Modifier public setSelected StatementExpression Assignment MemberReference selected Literal true = MethodDeclaration /**
     * Setter for selected.
     */ Modifier public setUnselect StatementExpression Assignment MemberReference selected Literal false = MethodDeclaration /**
     * Setter for selected.
     *
     * @param value The value to set.
     */ Modifier public setSelected FormalParameter BasicType boolean value IfStatement MemberReference value BlockStatement StatementExpression MethodInvocation setSelected BlockStatement StatementExpression MethodInvocation setUnselect End",0
748,748,"CompilationUnit PackageDeclaration org.argouml.uml.reveng Import java.io.File Import java.io.PrintWriter Import java.io.StringWriter Import java.net.URL Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Hashtable Import java.util.List Import java.util.StringTokenizer Import org.argouml.application.api.Argo Import org.argouml.cognitive.Designer Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.taskmgmt.ProgressMonitor Import org.argouml.ui.explorer.ExplorerEventAdaptor Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.static_structure.ClassDiagramGraphModel Import org.argouml.uml.diagram.static_structure.layout.ClassdiagramLayouter Import org.argouml.uml.reveng.ImportInterface.ImportException Import org.tigris.gef.base.Globals ClassDeclaration Modifier public abstract /**
 * Source language import class - GUI independent superclass.
 *
 * Specific Swing and SWT/Eclipse importers will extend this class.
 *
 * @author Tom Morris
 */ ImportCommon FieldDeclaration /**
     * The % maximum progress required to preparing for import.
     */ Modifier final protected static BasicType int VariableDeclarator MAX_PROGRESS_PREPARE Literal 1 FieldDeclaration /**
     * The % maximum progress required to import.
     */ Modifier final protected static BasicType int VariableDeclarator MAX_PROGRESS_IMPORT Literal 99 FieldDeclaration /**
     * keys are module name, values are PluggableImport instance.
     */ Modifier private ReferenceType Hashtable TypeArgument ReferenceType String TypeArgument ReferenceType ImportInterface VariableDeclarator modules FieldDeclaration /**
     * Current language module.
     */ Modifier private ReferenceType ImportInterface VariableDeclarator currentModule FieldDeclaration /**
     * Imported directory.
     */ Modifier private ReferenceType String VariableDeclarator srcPath FieldDeclaration /**
     * Create a interface to the current diagram.
     */ Modifier private ReferenceType DiagramInterface VariableDeclarator diagramInterface FieldDeclaration Modifier private ReferenceType File VariableDeclarator selectedFile ConstructorDeclaration Modifier protected ImportCommon StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference modules ClassCreator ReferenceType Hashtable TypeArgument ReferenceType String TypeArgument ReferenceType ImportInterface = ForStatement EnhancedForControl VariableDeclaration ReferenceType ImportInterface VariableDeclarator importer MethodInvocation ImporterManager MethodInvocation getImporters getInstance BlockStatement StatementExpression MethodInvocation modules MethodInvocation importer getName MemberReference importer put End IfStatement BinaryOperation == MethodInvocation modules size Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal ""Internal error. "" Literal ""No importer modules found."" End StatementExpression Assignment MemberReference currentModule MethodInvocation modules Literal ""Java"" get = IfStatement BinaryOperation == MemberReference currentModule Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal ""Internal error. "" Literal ""Default import module not found"" End MethodDeclaration Modifier public abstract BasicType int getImportLevel MethodDeclaration Modifier public ReferenceType DiagramInterface getDiagramInterface ReturnStatement MemberReference diagramInterface MethodDeclaration /**
     * Compute and cache the current diagram interface.
     */ Modifier protected initCurrentDiagram StatementExpression Assignment MemberReference diagramInterface MethodInvocation getCurrentDiagram = MethodDeclaration /**
     * Set target diagram.<p>
     *
     * @return selected diagram, if it is class diagram,
     * else return null.
     */ Modifier private ReferenceType DiagramInterface getCurrentDiagram LocalVariableDeclaration ReferenceType DiagramInterface VariableDeclarator result Literal null IfStatement BinaryOperation instanceof MethodInvocation Globals MethodInvocation getGraphModel curEditor ReferenceType ClassDiagramGraphModel BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType DiagramInterface MethodInvocation Globals curEditor = End ReturnStatement MemberReference result MethodDeclaration Modifier public abstract ReferenceType String getInputSourceEncoding MethodDeclaration Modifier public abstract BasicType boolean isAttributeSelected MethodDeclaration Modifier public abstract BasicType boolean isDatatypeSelected MethodDeclaration Modifier public ReferenceType ImportCommon getImportSession ReturnStatement This MethodDeclaration /**
     * Get the files. For old style modules, this asks the module for the list.
     * For new style modules we generate it ourselves based on their specified
     * file suffixes.
     * @param monitor progress monitor which can be used to cancel long running 
     * request
     * @return the list of files to be imported
     */ Modifier protected ReferenceType List getFileList FormalParameter ReferenceType ProgressMonitor monitor LocalVariableDeclaration ReferenceType List VariableDeclarator files StatementExpression Assignment MemberReference files MethodInvocation FileImportUtils MethodInvocation getSelectedFile MethodInvocation isDescendSelected MethodInvocation currentModule getSuffixFilters MemberReference monitor getList = IfStatement MethodInvocation MethodInvocation isDirectory getSelectedFile BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getAbsolutePath getSelectedFile setSrcPath BlockStatement StatementExpression MethodInvocation Literal null setSrcPath End IfStatement MethodInvocation isChangedOnlySelected BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation files size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f Cast ReferenceType File MethodInvocation files MemberReference i get LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation f getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator lm MethodInvocation String MethodInvocation f lastModified valueOf IfStatement MethodInvocation lm MethodInvocation Model MethodInvocation MemberReference model MemberReference fn getTaggedValueValue getFacade equals BlockStatement StatementExpression MethodInvocation files MemberReference i remove End End End ReturnStatement MemberReference files MethodDeclaration /**
     * Set path for processed directory.
     *
     * @param path the given path
     */ Modifier public setSrcPath FormalParameter ReferenceType String path StatementExpression Assignment MemberReference srcPath MemberReference path = MethodDeclaration /**
     * @return path for processed directory.
     */ Modifier public ReferenceType String getSrcPath ReturnStatement MemberReference srcPath MethodDeclaration Modifier private setLastModified FormalParameter ReferenceType Project project FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator lm MethodInvocation String MethodInvocation file lastModified valueOf IfStatement BinaryOperation != MemberReference lm Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation project getModel MemberReference fn MemberReference lm setTaggedValue getCoreHelper End MethodDeclaration Modifier public abstract BasicType boolean isCreateDiagramsSelected MethodDeclaration Modifier public abstract BasicType boolean isMinimizeFigsSelected MethodDeclaration Modifier public abstract BasicType boolean isDiagramLayoutSelected MethodDeclaration Modifier public abstract BasicType boolean isDescendSelected MethodDeclaration Modifier public abstract BasicType boolean isChangedOnlySelected MethodDeclaration Modifier protected ReferenceType Hashtable TypeArgument ReferenceType String TypeArgument ReferenceType ImportInterface getModules ReturnStatement MemberReference modules MethodDeclaration Modifier protected setSelectedFile FormalParameter ReferenceType File file StatementExpression Assignment MemberReference selectedFile MemberReference file = MethodDeclaration Modifier protected ReferenceType File getSelectedFile ReturnStatement MemberReference selectedFile MethodDeclaration Modifier protected setCurrentModule FormalParameter ReferenceType ImportInterface module StatementExpression Assignment MemberReference currentModule MemberReference module = MethodDeclaration Modifier protected ReferenceType ImportInterface getCurrentModule ReturnStatement MemberReference currentModule MethodDeclaration /**
     * Returns the possible languages in which the user can import the sources.
     * @return a list of Strings with the names of the languages available
     */ Modifier public ReferenceType List getLanguages ReturnStatement MethodInvocation Collections ClassCreator ReferenceType ArrayList MethodInvocation modules keySet unmodifiableList MethodDeclaration /**
     * The flag for: descend directories recursively.
     * This should be asked by the GUI for initialization.
     * @return the flag stored in KEY_IMPORT_GENERAL_SETTINGS_FLAGS key or
     * true if this is null.
     */ Modifier public BasicType boolean isDescend LocalVariableDeclaration ReferenceType String VariableDeclarator flags MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS getString IfStatement BinaryOperation && BinaryOperation != MemberReference flags Literal null BinaryOperation > MethodInvocation flags length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference flags Literal "","" IfStatement BinaryOperation && MethodInvocation st hasMoreTokens MethodInvocation st MethodInvocation Literal ""false"" equals nextToken BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration /**
     * The flag for: changed/new files only.
     * This should be asked by the GUI for initialization.
     * @return the flag stored in KEY_IMPORT_GENERAL_SETTINGS_FLAGS key or
     * true if this is null.
     */ Modifier public BasicType boolean isChangedOnly LocalVariableDeclaration ReferenceType String VariableDeclarator flags MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS getString IfStatement BinaryOperation && BinaryOperation != MemberReference flags Literal null BinaryOperation > MethodInvocation flags length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference flags Literal "","" IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement BinaryOperation && MethodInvocation st hasMoreTokens MethodInvocation st MethodInvocation Literal ""false"" equals nextToken BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration /**
     * The flag for: create diagrams from imported code.
     * This should be asked by the GUI for initialization.
     * @return the flag stored in KEY_IMPORT_GENERAL_SETTINGS_FLAGS key or
     * true if this is null.
     */ Modifier public BasicType boolean isCreateDiagrams LocalVariableDeclaration ReferenceType String VariableDeclarator flags MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS getString IfStatement BinaryOperation && BinaryOperation != MemberReference flags Literal null BinaryOperation > MethodInvocation flags length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference flags Literal "","" IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement BinaryOperation && MethodInvocation st hasMoreTokens MethodInvocation st MethodInvocation Literal ""false"" equals nextToken BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration /**
     * The flag for: minimise class icons in diagrams.
     * This should be asked by the GUI for initialization.
     * @return the flag stored in KEY_IMPORT_GENERAL_SETTINGS_FLAGS key or
     * true if this is null.
     */ Modifier public BasicType boolean isMinimizeFigs LocalVariableDeclaration ReferenceType String VariableDeclarator flags MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS getString IfStatement BinaryOperation && BinaryOperation != MemberReference flags Literal null BinaryOperation > MethodInvocation flags length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference flags Literal "","" IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement BinaryOperation && MethodInvocation st hasMoreTokens MethodInvocation st MethodInvocation Literal ""false"" equals nextToken BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration /**
     * The flag for: perform automatic diagram layout.
     * This should be asked by the GUI for initialization.
     * @return the flag stored in KEY_IMPORT_GENERAL_SETTINGS_FLAGS key or
     * true if this is null.
     */ Modifier public BasicType boolean isDiagramLayout LocalVariableDeclaration ReferenceType String VariableDeclarator flags MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS getString IfStatement BinaryOperation && BinaryOperation != MemberReference flags Literal null BinaryOperation > MethodInvocation flags length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference flags Literal "","" IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreTokens StatementExpression MethodInvocation st nextToken End IfStatement BinaryOperation && MethodInvocation st hasMoreTokens MethodInvocation st MethodInvocation Literal ""false"" equals nextToken BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration /**
     * The default encoding. This should be asked by the GUI for
     * initialization.
     * @return the encoding stored in Argo.KEY_INPUT_SOURCE_ENCODING key or if
     * this is null the default system encoding
     */ Modifier public ReferenceType String getEncoding LocalVariableDeclaration ReferenceType String VariableDeclarator enc MethodInvocation Configuration MemberReference Argo KEY_INPUT_SOURCE_ENCODING getString IfStatement BinaryOperation || BinaryOperation == MemberReference enc Literal null MethodInvocation enc MethodInvocation Literal """" equals trim BlockStatement StatementExpression Assignment MemberReference enc MethodInvocation System Literal ""file.encoding"" getProperty = End ReturnStatement MemberReference enc MethodDeclaration /**
     * Gets the import classpaths. This should be asked by the GUI for
     * initialization.
     * @return a list with Strings representing the classpaths
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getImportClasspath LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType URL VariableDeclarator urls MethodInvocation ImportClassLoader MethodInvocation Configuration MemberReference Argo KEY_USER_IMPORT_CLASSPATH Literal """" getString getURLs ForStatement EnhancedForControl VariableDeclaration ReferenceType URL VariableDeclarator url MemberReference urls BlockStatement StatementExpression MethodInvocation list MethodInvocation url getFile add End ReturnStatement MemberReference list MethodDeclaration /**
     * Layouts the diagrams.
     *
     * @param monitor
     *            the progress meter.  Null if not progress updates desired.
     * @param startingProgress
     *            the actual progress until now
     */ Modifier public layoutDiagrams FormalParameter ReferenceType ProgressMonitor monitor FormalParameter BasicType int startingProgress LocalVariableDeclaration ReferenceType DiagramInterface VariableDeclarator di MethodInvocation getDiagramInterface IfStatement BinaryOperation == MemberReference di Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ArgoDiagram VariableDeclarator diagrams MethodInvocation di getModifiedDiagramList LocalVariableDeclaration BasicType int VariableDeclarator total BinaryOperation + MemberReference startingProgress BinaryOperation / MethodInvocation diagrams size Literal 10 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation diagrams size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation diagrams MemberReference i get LocalVariableDeclaration ReferenceType ClassdiagramLayouter VariableDeclarator layouter ClassCreator ReferenceType ClassdiagramLayouter MemberReference diagram StatementExpression MethodInvocation layouter layout LocalVariableDeclaration BasicType int VariableDeclarator act BinaryOperation + MemberReference startingProgress BinaryOperation / BinaryOperation + MemberReference i Literal 1 Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator progress BinaryOperation + MemberReference MAX_PROGRESS_PREPARE BinaryOperation / BinaryOperation * MemberReference MAX_PROGRESS_IMPORT MemberReference act MemberReference total IfStatement BinaryOperation != MemberReference monitor Literal null BlockStatement StatementExpression MethodInvocation monitor MemberReference progress updateProgress End End MethodDeclaration /**
     * Import the selected source modules.
     *
     * @param monitor
     *            a ProgressMonitor to both receive progress updates and to be
     *            polled for user requests to cancel.
     */ Modifier protected doImport FormalParameter ReferenceType ProgressMonitor monitor StatementExpression MethodInvocation monitor BinaryOperation + MemberReference MAX_PROGRESS_PREPARE MemberReference MAX_PROGRESS_IMPORT setMaximumProgress LocalVariableDeclaration BasicType int VariableDeclarator progress Literal 0 StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.import.preImport"" localize updateSubTask LocalVariableDeclaration ReferenceType List VariableDeclarator files MethodInvocation MemberReference monitor getFileList StatementExpression Assignment MemberReference progress MemberReference MAX_PROGRESS_PREPARE += StatementExpression MethodInvocation monitor MemberReference progress updateProgress IfStatement BinaryOperation == MethodInvocation files size Literal 0 BlockStatement StatementExpression MethodInvocation monitor notifyNullAction ReturnStatement End StatementExpression MethodInvocation Model MethodInvocation stopPumpingEvents getPump LocalVariableDeclaration BasicType boolean VariableDeclarator criticThreadWasOn MethodInvocation Designer MethodInvocation getAutoCritique theDesigner IfStatement MemberReference criticThreadWasOn BlockStatement StatementExpression MethodInvocation Designer MethodInvocation Literal false setAutoCritique theDesigner End TryStatement StatementExpression MethodInvocation MemberReference files MemberReference monitor MemberReference progress doImportInternal IfStatement MemberReference criticThreadWasOn BlockStatement StatementExpression MethodInvocation Designer MethodInvocation Literal true setAutoCritique theDesigner End StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation structureChanged getInstance StatementExpression MethodInvocation Model MethodInvocation startPumpingEvents getPump MethodDeclaration /**
     * Do the import.
     * @param filesLeft the files to parse
     * @param monitor the progress meter
     * @param progress the actual progress until now
     * @throws ImportException exception thrown my import module
     */ Modifier private doImportInternal FormalParameter ReferenceType List filesLeft FormalParameter Modifier final ReferenceType ProgressMonitor monitor FormalParameter BasicType int progress LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation initCurrentDiagram LocalVariableDeclaration Modifier final ReferenceType StringBuffer VariableDeclarator problems ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Collection VariableDeclarator newElements ClassCreator ReferenceType HashSet TryStatement StatementExpression MethodInvocation newElements MethodInvocation currentModule MemberReference project MemberReference filesLeft This MemberReference monitor parseFiles addAll CatchClause CatchClauseParameter ImportException e StatementExpression MethodInvocation problems MethodInvocation MemberReference e printToBuffer append IfStatement MethodInvocation isCreateDiagramsSelected BlockStatement StatementExpression MethodInvocation MemberReference newElements addFiguresToDiagrams End IfStatement MethodInvocation isDiagramLayoutSelected BlockStatement StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.import.postImport"" localize updateMainTask StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.import.layoutAction"" localize updateSubTask StatementExpression MethodInvocation MemberReference monitor BinaryOperation + MemberReference progress MethodInvocation filesLeft size layoutDiagrams End StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.import.done"" localize updateMainTask StatementExpression MethodInvocation monitor Literal """" updateSubTask StatementExpression MethodInvocation monitor BinaryOperation + MemberReference MAX_PROGRESS_PREPARE MemberReference MAX_PROGRESS_IMPORT updateProgress IfStatement BinaryOperation && BinaryOperation != MemberReference problems Literal null BinaryOperation > MethodInvocation problems length Literal 0 BlockStatement StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.title.import-problems"" localize MethodInvocation Translator Literal ""label.import-problems"" localize MethodInvocation problems toString notifyMessage BlockStatement StatementExpression MethodInvocation monitor close End MethodDeclaration /**
     * Create diagram figures for a collection of model elements.
     *
     * @param newElements
     *            the collection of elements for which figures should be
     *            created.
     */ Modifier private addFiguresToDiagrams FormalParameter ReferenceType Collection newElements ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference newElements BlockStatement IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression MethodInvocation diagramInterface createRootClassDiagram BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference ns getQualifiedName IfStatement BinaryOperation && BinaryOperation != MemberReference packageName Literal null MethodInvocation ! packageName Literal """" equals BlockStatement StatementExpression MethodInvocation diagramInterface MemberReference ns MemberReference packageName selectClassDiagram BlockStatement StatementExpression MethodInvocation diagramInterface createRootClassDiagram End IfStatement MethodInvocation Model MethodInvocation MemberReference element isAInterface getFacade BlockStatement StatementExpression MethodInvocation diagramInterface MemberReference element MethodInvocation isMinimizeFigsSelected addInterface IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade BlockStatement StatementExpression MethodInvocation diagramInterface MemberReference element MethodInvocation isMinimizeFigsSelected addClass IfStatement MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade BlockStatement StatementExpression MethodInvocation diagramInterface MemberReference element addPackage End End End End End End MethodDeclaration /**
     * Return the fully qualified name of a model element in Java (dot
     * separated) format.
     * <p>
     * TODO: We really need a language independent format here. Perhaps the list
     * of names that form the hierarchy? - tfm
     */ Modifier private ReferenceType String getQualifiedName FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MemberReference element WhileStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference ns getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal """" = End StatementExpression MethodInvocation sb Literal 0 MemberReference name insert StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement StatementExpression MethodInvocation sb Literal 0 Literal ""."" insert End End ReturnStatement MethodInvocation sb toString MethodDeclaration Modifier private ReferenceType StringBuffer printToBuffer FormalParameter ReferenceType Exception e LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType java ReferenceType io ReferenceType PrintWriter MemberReference sw StatementExpression MethodInvocation e MemberReference pw printStackTrace ReturnStatement MethodInvocation sw getBuffer ReferenceType ImportSettingsInternal",0
132,132,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import java.awt.Color Import java.awt.Dimension Import java.awt.Point Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.Model Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.argouml.uml.diagram.ui.FigNodeModelElement Import org.tigris.gef.base.Geometry Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigCube Import org.tigris.gef.presentation.FigRect Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public abstract AbstractFigNode FieldDeclaration /**
     * Offset in x & y for depth perspective lines of cube.
     * TODO: This is the same value as the member 'D'in 
     * {@link org.tigris.gef.presentation.FigCube}, but there is
     * nothing enforcing that correspondence.  Things will probably
     * break if they don't match.
     */ Modifier final protected static BasicType int VariableDeclarator DEPTH Literal 20 FieldDeclaration Modifier protected ReferenceType FigCube VariableDeclarator cover FieldDeclaration Modifier protected BasicType int VariableDeclarator x Literal 10 FieldDeclaration Modifier protected BasicType int VariableDeclarator y Literal 10 FieldDeclaration Modifier protected BasicType int VariableDeclarator width Literal 200 FieldDeclaration Modifier protected BasicType int VariableDeclarator height Literal 180 ConstructorDeclaration Modifier public AbstractFigNode StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation ClassCreator ReferenceType CubePortFigRect MemberReference x BinaryOperation - MemberReference y MemberReference DEPTH BinaryOperation + MemberReference width MemberReference DEPTH BinaryOperation + MemberReference height MemberReference DEPTH MemberReference DEPTH setBigPort StatementExpression MethodInvocation MethodInvocation Literal false setFilled getBigPort StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression Assignment MemberReference cover ClassCreator ReferenceType FigCube MemberReference x MemberReference y MemberReference width MemberReference height MemberReference Color black MemberReference Color white = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression MethodInvocation MethodInvocation Literal 0 setJustification getNameFig StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getStereotypeFig addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig ConstructorDeclaration Modifier public AbstractFigNode FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference node getName getFacade Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MemberReference node getName getFacade setText getNameFig End MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigMNode VariableDeclarator figClone Cast ReferenceType FigMNode SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigCube MethodInvocation it next = StatementExpression MethodInvocation it next StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color c StatementExpression MethodInvocation cover MemberReference c setLineColor MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation cover MemberReference w setLineWidth MethodDeclaration Modifier public Annotation Override Annotation Deprecated BasicType boolean getFilled ReturnStatement MethodInvocation cover isFilled MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionNode This MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoDim MethodInvocation MethodInvocation getMinimumSize getStereotypeFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MethodInvocation Math MemberReference stereoDim width BinaryOperation + MemberReference nameDim width Literal 1 max MemberReference DEPTH LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + MemberReference stereoDim height MemberReference nameDim height MemberReference DEPTH StatementExpression Assignment MemberReference w MethodInvocation Math BinaryOperation * Literal 3 MemberReference DEPTH MemberReference w max = StatementExpression Assignment MemberReference h MethodInvocation Math BinaryOperation * Literal 3 MemberReference DEPTH MemberReference h max = ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h MethodDeclaration Modifier protected Annotation Override setStandardBounds FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x BinaryOperation + MemberReference y MemberReference DEPTH BinaryOperation - MemberReference w MemberReference DEPTH BinaryOperation - MemberReference h MemberReference DEPTH setBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoDim MethodInvocation MethodInvocation getMinimumSize getStereotypeFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 4 BinaryOperation + BinaryOperation + BinaryOperation + MemberReference y MemberReference DEPTH MemberReference stereoDim height Literal 1 BinaryOperation - BinaryOperation - MemberReference w MemberReference DEPTH Literal 8 MemberReference nameDim height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 1 BinaryOperation + BinaryOperation + MemberReference y MemberReference DEPTH Literal 1 BinaryOperation - BinaryOperation - MemberReference w MemberReference DEPTH Literal 2 MemberReference stereoDim height setBounds getStereotypeFig StatementExpression Assignment MemberReference _x MemberReference x = StatementExpression Assignment MemberReference _y MemberReference y = StatementExpression Assignment MemberReference _w MemberReference w = StatementExpression Assignment MemberReference _h MemberReference h = StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange StatementExpression MethodInvocation updateEdges MethodDeclaration Modifier protected Annotation Override updateStereotypeText StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner setOwner getStereotypeFig MethodDeclaration Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseClicked StatementExpression MethodInvocation MemberReference Color black setLineColor MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser IfStatement BinaryOperation || BinaryOperation == MemberReference encloser Literal null BinaryOperation && BinaryOperation != MemberReference encloser Literal null MethodInvocation Model MethodInvocation MethodInvocation encloser getOwner isANode getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig End IfStatement BinaryOperation != MethodInvocation getLayer Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator contents MethodInvocation MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType Collection VariableDeclarator bringToFrontList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation contents iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeModelElement BlockStatement StatementExpression MethodInvocation bringToFrontList MemberReference o add End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator bringToFrontIter MethodInvocation bringToFrontList iterator WhileStatement MethodInvocation bringToFrontIter hasNext BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator figEdge Cast ReferenceType FigEdgeModelElement MethodInvocation bringToFrontIter next StatementExpression MethodInvocation figEdge MethodInvocation MemberReference figEdge bringToFront getLayer End End MethodDeclaration Modifier protected Annotation Override textEditStarted FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation Literal ""parsing.help.fig-node"" showHelp End MethodDeclaration Modifier public Annotation Override BasicType boolean getUseTrapRect ReturnStatement Literal true MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mee ReferenceType AssociationChangeEvent BinaryOperation instanceof MemberReference mee ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation renderingChanged StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners StatementExpression MethodInvocation damage End MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation removeAllElementListeners End IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner addElementListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference newOwner getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation i next StatementExpression MethodInvocation MemberReference st Literal ""name"" addElementListener End End MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator xs ArrayInitializer MemberReference r x BinaryOperation + MemberReference r x MemberReference DEPTH BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference DEPTH MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ys ArrayInitializer BinaryOperation + MemberReference r y MemberReference DEPTH MemberReference r y MemberReference r y BinaryOperation - BinaryOperation + MemberReference r y MemberReference r height MemberReference DEPTH BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference DEPTH LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference xs MemberReference ys Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p ConstructorDeclaration Modifier public AbstractFigNode FormalParameter ReferenceType Object element FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression SuperConstructorInvocation MemberReference element MemberReference x MemberReference y ReferenceType FigNodeModelElement",0
726,726,"CompilationUnit PackageDeclaration org.argouml.language.java.generator Import java.io.BufferedReader Import java.io.BufferedWriter Import java.io.IOException Import java.util.Stack ClassDeclaration Modifier abstract /**
 * This is a code piece that has been identified by the parser to be
 * of a specific kind. See the subclasses for further details.
 *
 * taken from:
 * JavaRE - Code generation and reverse engineering for UML and Java
 *
 * @author Marcus Andersson andersson@users.sourceforge.net
 */ NamedCodePiece MethodDeclaration /**
     * Write the code this piece represents to file. The stack in the
     * parameter list contains the parser state when traversing up and
     * down in nested classes and interfaces. The code that is written
     * is generated from the model, but if no appropriate model element
     * exists, then the original code is written in order to maintain
     * additionally source code.
     *
     * @param reader Read original code from this.
     * @param writer Write code to this.
     * @param parseStateStack Information with one stack frame for each
     *                        classifier that the parser has descended into.
     * @throws IOException if we cannot write to the writer or
     *                     read from the reader.
     */ Modifier public abstract write FormalParameter ReferenceType BufferedReader reader FormalParameter ReferenceType BufferedWriter writer FormalParameter ReferenceType Stack TypeArgument ReferenceType ParseState parseStateStack IOException MethodDeclaration /**
     * Read until the end of the code piece. As a precondition, the reader
     * must be positioned at the beginning of the code piece. If a writer
     * is given (not <tt>null</tt>), then everything that's read is written
     * to the writer. (Usually, both reader and writer point to the same
     * file).
     *
     * @param reader Read original code from this.
     * @param writer Write code to this.
     * @throws IOException if we cannot write to the writer or
     *                     read from the reader.
     */ Modifier public final ffCodePiece FormalParameter ReferenceType BufferedReader reader FormalParameter ReferenceType BufferedWriter writer IOException LocalVariableDeclaration BasicType int VariableDeclarator line MethodInvocation getStartLine LocalVariableDeclaration BasicType int VariableDeclarator column MethodInvocation getStartPosition IfStatement BinaryOperation != MemberReference writer Literal null BlockStatement WhileStatement BinaryOperation < MemberReference line MethodInvocation getEndLine BlockStatement StatementExpression MemberReference ++ line StatementExpression Assignment MemberReference column Literal 0 = StatementExpression MethodInvocation writer MethodInvocation reader readLine write StatementExpression MethodInvocation writer newLine End WhileStatement BinaryOperation < MemberReference column MethodInvocation getEndPosition BlockStatement StatementExpression MemberReference ++ column StatementExpression MethodInvocation writer MethodInvocation reader read write End BlockStatement WhileStatement BinaryOperation < MemberReference line MethodInvocation getEndLine BlockStatement StatementExpression MemberReference ++ line StatementExpression Assignment MemberReference column Literal 0 = StatementExpression MethodInvocation reader readLine End WhileStatement BinaryOperation < MemberReference column MethodInvocation getEndPosition BlockStatement StatementExpression MemberReference ++ column StatementExpression MethodInvocation reader read End End ReferenceType CodePiece",0
337,337,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration ActionVisibilityPrivate FieldDeclaration /**
     * Serial version generated for rev 1.5
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1342216726253371114L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param o the target
     */ ActionVisibilityPrivate FormalParameter ReferenceType Object o StatementExpression SuperConstructorInvocation Literal ""checkbox.visibility.private-uc"" Literal false StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean MethodInvocation Model MethodInvocation getPrivate MethodInvocation MethodInvocation MemberReference o valueOfTarget equals getVisibilityKind valueOf putValue MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation Model MethodInvocation getPrivate getVisibilityKind setVisibility getCoreHelper MethodDeclaration /**
     * Make use of the default visibility, which is public...
     * TODO: centralise this knowledge.
     *
     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
     */ ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference t getVisibility getFacade ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null MethodInvocation Model MethodInvocation getPublic getVisibilityKind MemberReference v ReferenceType AbstractActionRadioMenuItem",1
1461,1461,,1
229,229,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection Import java.util.List Import java.util.Vector InterfaceDeclaration Modifier public /**
 * The interface for the helper for ModelManagement.<p>
 *
 * Created from the old ModelManagementHelper.
 */ ModelManagementHelper ConstantDeclaration /**
     * Name of stereotype applied to Permission which is a friend.
     */ ReferenceType String VariableDeclarator FRIEND_STEREOTYPE Literal ""friend"" ConstantDeclaration /**
     * Name of stereotype applied to a Permission which is for import.
     */ ReferenceType String VariableDeclarator IMPORT_STEREOTYPE Literal ""import"" ConstantDeclaration /**
     * Name of stereotype applied to Permission which is an package access.
     */ ReferenceType String VariableDeclarator ACCESS_STEREOTYPE Literal ""access"" MethodDeclaration /**
     * Returns all subsystems found in this namespace and in its children.
     *
     * @param ns is the namespace
     * @return Collection
     */ ReferenceType Collection getAllSubSystems FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Returns all namespaces found in this namespace and in its children
     *
     * @param ns namespace to process
     * @return Collection of all namespaces found
     */ ReferenceType Collection getAllNamespaces FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Returns all modelelements of the given kind.
     *
     * @param model the model that is searched
     * @param type is the class kind that is sought
     *
     * @return Collection
     */ ReferenceType Collection getAllModelElementsOfKindWithModel FormalParameter ReferenceType Object model FormalParameter ReferenceType Object type MethodDeclaration /**
     * Returns all modelelements found in this namespace and its children
     * that are of some class kind.<p>
     *
     * @param nsa is the namespace
     * @param type is the class kind
     * @return Collection
     */ ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType Object type MethodDeclaration /**
     * helper method for {@link #getAllModelElementsOfKind(Object, Object)}.
     *
     * @param nsa
     *            namespace.
     * @param kind
     *            name of class to find (without implementation-specific
     *            additions)
     * @return a Collection.
     */ ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType String kind MethodDeclaration /**
     * Returns all surrounding namespaces of some namespace ns. See section
     * 2.5.3.26 of the UML 1.4 spec for a definition.
     * 
     * @param ns to process
     * @return Collection of surrounding namespaces.
     */ ReferenceType Collection getAllSurroundingNamespaces FormalParameter ReferenceType Object ns MethodDeclaration /**
     * @param ns the given namespace
     * @return a collection of all behavioralfeatures in the given namespace
     */ ReferenceType Collection getAllBehavioralFeatures FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Returns a collection of ModelElements 
     * that may possibly be imported in the given package.
     * 
     * @param pack the given package
     * @return a collection with modelelements 
     * that may possibly be imported in the given package
     */ ReferenceType Collection getAllPossibleImports FormalParameter ReferenceType Object pack MethodDeclaration /**
     * Get the modelelement with the given path, starting at the root of repository.
     *
     * @param path the given path
     * @return the modelelement looked for, or null if not found
     */ ReferenceType Object getElement FormalParameter ReferenceType List TypeArgument ReferenceType String path MethodDeclaration /**
     * Get the modelelement a given path below a given root-namespace.
     *
     * @param path the given path
     * @param theRootNamespace the given namespace to start from
     * @return the modelelement looked for, or null if not found
     */ ReferenceType Object getElement FormalParameter ReferenceType List TypeArgument ReferenceType String path FormalParameter ReferenceType Object theRootNamespace MethodDeclaration /**
     * Finds the absolute path of a ModelElement. Ie the name of each namespace
     * starting at the root (the Model) and ending with the name of the element.
     * <p>
     * The returned Vector implicitly starts at the root (the model) and follows
     * element's chain of owning namespaces back down to element. The first
     * element will thus be the name of the top level namespace below the model,
     * and the last element will be the name of element itself. Note thus that
     * for the model the path will be empty.
     * 
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getPathList(Object)} but
     *             be aware that the implementations are not 100% compatible.
     *             Read the Javadoc for the new method to understand the
     *             difference.
     * @param element
     *                is the object to resolve the path for.
     * @return A Vector as described above.
     * @throws IllegalArgumentException
     *                 if element isn't a ModelElement properly owned by
     *                 namespaces and a model.
     * 
     */ Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType String getPath FormalParameter ReferenceType Object element MethodDeclaration /**
     * Find the absolute path of a ModelElement. Ie the name of each namespace
     * starting a root or top level model element and ending with the name of
     * the element.
     * <p>
     * The returned List implicitly starts with a root element and follows
     * element's chain of owning namespaces back down to element. The first
     * element will thus be the name of the top level namespace, and the last
     * element will be the name of element itself.
     * <p>
     * <em>COMPATIBILITY WARNING</em> - The previous version of this method
     * {@link #getPath(Object)} would only return the path to the <em>first</em>
     * enclosing Model, not the root, and it would not include the name of the
     * model itself. This version will keep going up until it finds an element
     * with no parent and it includes the name of that top level element which
     * means that it will normally be one element longer than the previous
     * method.
     * 
     * @param element
     *                is the object to resolve the path for.
     * @return A List of namespaces as described above.
     * @throws IllegalArgumentException
     *                 if element isn't a ModelElement properly owned by
     *                 namespaces and a model.
     */ ReferenceType List TypeArgument ReferenceType String getPathList FormalParameter ReferenceType Object element MethodDeclaration /**
     * Get local equivalent to a profile ModelElement. Equivalent to calling
     * getCorrespondingElement(Object, Object, boolean) with a value of
     * <code>true</code> for the third parameter.
     * <p>
     * This function may fail and return null eg if some required object doesn't
     * exist in the target model and cannot be copied.
     * 
     * @param elem
     *                is some element.
     * @param model
     *                is the model the returned object shall belong to.
     * @return An element of the same type and at the same position in the model
     *         as elem, or if that would turn out impossible then null.
     * @deprecated for 0.25.4 by tfmorris.  Unnecessary because Model 
     * implementation maintains cross XMI file references now.
     */ Annotation Deprecated ReferenceType Object getCorrespondingElement FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object model MethodDeclaration /**
     * Utility function for managing several overlaid models, eg a user
     * model to which elements from some profile models is imported when
     * needed. This version of the function will only copy objects if
     * canCreate is true, but may then also copy other missing elements.
     *
     * This function may fail and return null eg if the required object
     * doesn't exist in the target model and canCreate is false or some
     * required object doesn't exist in the target model and cannot be
     * copied.
     *
     * @param elem is some element.
     * @param model is the model the returned object shall belong to.
     * @param canCreate determines if objects can be copied into model.
     * @return An element of the same type and at the same position in the
     *  model as elem, or if that would turn out impossible then null.
     *  
     * @deprecated for 0.25.4 by tfmorris.  Unnecessary because Model 
     * implementation maintains cross XMI file references now.
     */ Annotation Deprecated ReferenceType Object getCorrespondingElement FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object model FormalParameter BasicType boolean canCreate MethodDeclaration /**
     * Tests if two objects are of the same type, have the same name and the
     * same relative position in the model.
     *
     * Same relative position implies either:<ul>
     * <li>their owners correspond to each other.
     * <li>they are both owned by model objects.
     * </ul>
     *
     * @param obj1 is an object.
     * @param obj2 is another object.
     * @return true if obj1 corresponds to obj2, false otherwise.
     * @deprecated for 0.25.4 by tfmorris.  Equivalent to obj1.equals(obj2).
     */ Annotation Deprecated BasicType boolean corresponds FormalParameter ReferenceType Object obj1 FormalParameter ReferenceType Object obj2 MethodDeclaration /**
     * Checks if a child for some ownership relationship (as in a
     * namespace A is owned by a namespace B) is allready in the
     * ownerhship relation.
     *
     * @param parent The current leaf for the ownership relation
     * @param child The child that should be owned by the parent
     * @return true if the child is already in the ownership relationship
     */ BasicType boolean isCyclicOwnership FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child MethodDeclaration /**
     * This method removes the import 
     * of a modelelement from a package.
     *
     * @param handle is the package
     * @param me is the modelelement that was imported
     */ removeImportedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me MethodDeclaration /**
     * Set the complete collection of imported elements 
     * for a package.
     * 
     * @param pack the package to import in
     * @param imports the collection of modelelements to import
     */ setImportedElements FormalParameter ReferenceType Object pack FormalParameter ReferenceType Collection imports MethodDeclaration /**
     * Set the alias of the ElementImport.
     * 
     * @param handle is the ElementImport
     * @param alias the alias name
     */ setAlias FormalParameter ReferenceType Object handle FormalParameter ReferenceType String alias MethodDeclaration /**
     * Set the isSpecification attribute for the ElementImport.
     * 
     * @param handle
     *            ElementImport
     * @param isSpecification
     *            true of the element is specification
     */ setSpecification FormalParameter ReferenceType Object handle FormalParameter BasicType boolean isSpecification MethodDeclaration /**
     * This method calculates the ""contents"" additional operation 
     * from the standard: <p>
     * 
     * For a Namespace: <pre>
     * [1] The operation contents results in a Set containing 
     * all ModelElements contained by the Namespace.
     * contents : Set(ModelElement)
     * contents = self.ownedElement -> union(self.namespace, contents)
     * </pre> <p>
     * 
     * For a Package: <pre>
     * [1] The operation contents results in a Set containing 
     * the ModelElements owned by or imported by the Package.
     * contents : Set(ModelElement)
     * contents = self.ownedElement->union(self.importedElement)
     * </pre>
     * 
     * For a Instance: <pre>
     * [5] The operation contents results in a Set containing all 
     * ModelElements contained by the Instance.
     *   contents: Set(ModelElement);
     *   contents = self.ownedInstance->union(self.ownedLink)
     * </pre>
     * 
     * For a Subsystem: <pre>
     * [2] The operation contents results in a Set containing 
     * the ModelElements owned by or imported by the Subsystem.
     *   contents : Set(ModelElement)
     *   contents = self.ownedElement->union(self.importedElement)
     * </pre>
     * 
     * @param namespace the ns to get the contents from
     * @return a collection of modelelements
     */ ReferenceType Collection getContents FormalParameter ReferenceType Object namespace MethodDeclaration /**
     * This method calculates the collection 
     * of imported elements of a Package 
     * following from the standard: <p>
     * <pre>
     * [2] The operation allImportedElements results 
     * in a Set containing the ModelElements imported 
     * by the Package or one of its parents.
     * allImportedElements : Set(ModelElement)
     * allImportedElements = self.importedElement->union(
     * self.parent.oclAsType(Package).allImportedElements->select( re |
     *   re.elementImport.visibility = #public or
     *   re.elementImport.visibility = #protected))
     *</pre>
     *
     * @param pack the package to get the imported elements from
     * @return a collection of modelelements
     */ ReferenceType Collection getAllImportedElements FormalParameter ReferenceType Object pack MethodDeclaration /**
     * This method calculates the following from the standard: <p>
     * 
     * For a Namespace:
     * <pre>
     * [2] The operation allContents results in a Set containing 
     * all ModelElements contained by the Namespace.
     * allContents : Set(ModelElement);
     * allContents = self.contents
     * </pre><p>
     * 
     * For a Classifier:
     * <pre>
     * [10] The operation allContents returns a Set containing 
     * all ModelElements contained in the Classifier together
     * with the contents inherited from its parents.
     * allContents : Set(ModelElement);
     * allContents = self.contents->union(
     *   self.parent.allContents->select(e |
     *        e.elementOwnership.visibility = #public or
     *        e.elementOwnership.visibility = #protected))
     * </pre><p>
     * 
     * For a Package:
     * <pre>
     * [3]  The operation allContents results in a Set containing 
     * the ModelElements owned by or imported 
     * by the Package or one of its ancestors.
     * allContents : Set(ModelElement);
     * allContents = self.contents->union(
     *   self.parent.allContents->select(e |
     *        e.elementOwnership.visibility = #public or
     *        e.elementOwnership.visibility = #protected))
     * </pre>
     * 
     * For a Collaboration:
     * <pre>
     * [1 ] The operation allContents results in the set of 
     * all ModelElements contained in the Collaboration
     * together with those contained in the parents 
     * except those that have been specialized.
     * allContents : Set(ModelElement);
     * allContents = self.contents->union (
     *   self.parent.allContents->reject ( e |
     *        self.contents.name->include (e.name) ))
     * </pre>
     *
     * @param namespace the ns to get the contents from
     * @return a collection of modelelements
     */ ReferenceType Collection getAllContents FormalParameter ReferenceType Object namespace",0
1127,1127,,1
674,674,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public abstract /**
 * Abstract action to create new events.
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewEvent FieldDeclaration /**
     * The constant defining the role the event to be created plays for its
     * parent. For example, if one wishes to create a trigger event for a
     * transition, this is filled with ""trigger"". The values are defined in the
     * interface Roles
     */ Modifier public final static ReferenceType String VariableDeclarator ROLE Literal ""role"" InterfaceDeclaration Modifier public static /**
     *
     *
     */ Roles ConstantDeclaration /**
         * The trigger for some transition
         */ Modifier public final static ReferenceType String VariableDeclarator TRIGGER Literal ""trigger"" ConstantDeclaration /**
         * The deferrable event key
         */ Modifier public final static ReferenceType String VariableDeclarator DEFERRABLE_EVENT Literal ""deferrable-event"" ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewEvent.
     */ ActionNewEvent StatementExpression SuperConstructorInvocation MethodDeclaration /**
     * Implementors should create a concrete event like an instance of
     * SignalEvent in this method.
     * @param ns the namespace
     * @return Object
     */ Modifier protected abstract ReferenceType Object createEvent FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Creates the event, sets its role and namespace,
     * and navigates towards it.
     *
     * {@inheritDoc}
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target MemberReference model findNamespaceForEvent getStateMachinesHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation MemberReference ns createEvent IfStatement MethodInvocation MethodInvocation MemberReference Roles TRIGGER equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference event setEventAsTrigger getStateMachinesHelper End IfStatement MethodInvocation MethodInvocation MemberReference Roles DEFERRABLE_EVENT equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference event addDeferrableEvent getStateMachinesHelper End StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference event setTarget getInstance MethodDeclaration /**
     * @param role the role the event plays
     * @param t the transition or state to get the event for
     * @return the event
     */ Modifier public static ReferenceType Object getAction FormalParameter ReferenceType String role FormalParameter ReferenceType Object t IfStatement MethodInvocation role MemberReference Roles TRIGGER equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getTrigger getFacade End ReturnStatement Literal null ReferenceType AbstractActionNewModelElement",0
670,670,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * An extension of ActionSetMode to create all the parts of an association
 * class.
 *
 * @author Bob Tarling
 */ ActionSetAddAssociationEndMode FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2908695768709766241L ConstructorDeclaration Modifier public /**
     * Construct a new ActionSetAddAssociationEndMode.<p>
     *
     * @param name the action description
     */ ActionSetAddAssociationEndMode FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation ClassReference ReferenceType ModeCreateAssociationEnd Literal ""edgeClass"" MethodInvocation Model MethodInvocation getAssociationEnd getMetaTypes MemberReference name ReferenceType ActionSetMode",0
736,736,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JPopupMenu Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.behavior.common_behavior.ActionNewAction Import org.argouml.uml.ui.behavior.common_behavior.PopupMenuNewAction ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLStateDoActivityList ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateDoActivityList.
     * @param dataModel the model
     */ UMLStateDoActivityList FormalParameter ReferenceType UMLModelElementListModel2 dataModel StatementExpression SuperConstructorInvocation MemberReference dataModel MethodDeclaration Modifier public ReferenceType JPopupMenu getPopupMenu ReturnStatement ClassCreator ReferenceType PopupMenuNewAction MemberReference ActionNewAction.Roles DO This ReferenceType UMLMutableLinkedList",0
457,457,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.HashSet Import java.util.Set Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * @since Nov 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLGeneralizationPowertypeComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLGeneralizationPowertypeComboBoxModel.
     */ UMLGeneralizationPowertypeComboBoxModel StatementExpression SuperConstructorInvocation Literal ""powertype"" Literal true StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal ""ownedElement"" addClassModelEventListener getPump MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getPowertype getFacade End ReturnStatement Literal null MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Set VariableDeclarator elements ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getUserDefinedModelList BlockStatement StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll End StatementExpression MethodInvocation elements MethodInvocation p MethodInvocation MethodInvocation Model MethodInvocation getClassifier getMetaTypes findByMetaType getProfileConfiguration addAll StatementExpression MethodInvocation MemberReference elements setElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade ReferenceType UMLComboBoxModel2",1
1596,1596,,0
785,785,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.util.ArrayList Import java.util.Collections Import java.util.List Import java.util.Vector Import javax.swing.event.TreeModelListener Import javax.swing.tree.TreePath Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ToDoList Import org.argouml.uml.PredicateNotInTrash ClassDeclaration Modifier public /**
 * Rule for sorting the ToDo list: Offender -> Item.
 *
 */ GoListToOffenderToItem ConstructorDeclaration Modifier public /**
     * The constructor.
     */ GoListToOffenderToItem StatementExpression MethodInvocation ClassCreator ReferenceType PredicateNotInTrash setListPredicate MethodDeclaration Modifier public ReferenceType Object getChild FormalParameter ReferenceType Object parent FormalParameter BasicType int index ReturnStatement MethodInvocation MethodInvocation MemberReference index get MemberReference parent getChildrenList MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MethodInvocation size MemberReference parent getChildrenList MethodDeclaration Modifier public BasicType int getIndexOfChild FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child ReturnStatement MethodInvocation MethodInvocation MemberReference child indexOf MemberReference parent getChildrenList MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation > MethodInvocation MemberReference node getChildCount Literal 0 BlockStatement ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration /**
     * @param parent the parent object to check for offspring
     * @return the children
     * @deprecated for 0.25.4 by tfmorris.  Use 
     * {@link #getChildrenList(Object)}.
     */ Modifier public Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType ToDoItem getChildren FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator result MethodInvocation MemberReference parent getChildrenList IfStatement BinaryOperation == MethodInvocation result size Literal 0 BlockStatement ReturnStatement Literal null End ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType ToDoItem MemberReference result MethodDeclaration /**
     * Get a list of children. Note that unlike its predecessor getChildren(),
     * this never returns null. If there are no children, it will return an
     * empty list.
     * 
     * @param parent the parent object to check
     * @return a list of children for the given object
     */ Modifier public ReferenceType List TypeArgument ReferenceType ToDoItem getChildrenList FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType ToDoItem VariableDeclarator allOffenders ClassCreator ReferenceType ListSet TypeArgument ReferenceType ToDoItem StatementExpression MethodInvocation allOffenders MethodInvocation Designer MethodInvocation getToDoList MethodInvocation getOffenders theDesigner MethodInvocation getListPredicate addAllElementsSuchThat IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MemberReference allOffenders End IfStatement MethodInvocation allOffenders MemberReference parent contains BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation Designer MethodInvocation getToDoList theDesigner BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet StatementExpression MethodInvocation offs MethodInvocation item getOffenders MethodInvocation getListPredicate addAllElementsSuchThat IfStatement MethodInvocation offs MemberReference parent contains BlockStatement StatementExpression MethodInvocation result MemberReference item add End End ReturnStatement MemberReference result End ReturnStatement MemberReference Collections EMPTY_LIST MethodDeclaration Modifier public valueForPathChanged FormalParameter ReferenceType TreePath path FormalParameter ReferenceType Object newValue MethodDeclaration Modifier public addTreeModelListener FormalParameter ReferenceType TreeModelListener l MethodDeclaration Modifier public removeTreeModelListener FormalParameter ReferenceType TreeModelListener l ReferenceType AbstractGoList",0
55,55,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 4, 2003
 */ ActionSetAssociationEndTargetScope FieldDeclaration Modifier private final static ReferenceType ActionSetAssociationEndTargetScope VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetAssociationEndTargetScope ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetElementOwnershipSpecification.
     */ ActionSetAssociationEndTargetScope StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAAssociationEnd getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target IfStatement MethodInvocation source isSelected BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference m MethodInvocation Model MethodInvocation getClassifier getScopeKind setTargetScope getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference m MethodInvocation Model MethodInvocation getInstance getScopeKind setTargetScope getCoreHelper End End End MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType ActionSetAssociationEndTargetScope getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",0
991,991,,1
356,356,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * Well-formedness rule [2] for Classifier. See page 29 of UML 1.1
 * Semantics. OMG document ad/97-08-04.
 *
 * @author jrobbins
 */ CrOppEndVsAttr ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrOppEndVsAttr StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision INHERITANCE addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision RELATIONSHIPS addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""associationEnd"" addTrigger StatementExpression MethodInvocation Literal ""structuralFeature"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference dm LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator namesSeen ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Collection VariableDeclarator str MethodInvocation Model MethodInvocation MemberReference cls getFeatures getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator features MethodInvocation str iterator WhileStatement MethodInvocation features hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation features next IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator sf MemberReference o LocalVariableDeclaration ReferenceType String VariableDeclarator sfName MethodInvocation Model MethodInvocation MemberReference sf getName getFacade IfStatement Literal MethodInvocation MemberReference sfName equals """" BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MemberReference sfName IfStatement BinaryOperation == MethodInvocation nameStr length Literal 0 BlockStatement ContinueStatement End StatementExpression MethodInvocation namesSeen MemberReference nameStr add End LocalVariableDeclaration ReferenceType Collection VariableDeclarator assocEnds MethodInvocation Model MethodInvocation MemberReference cls getAssociationEnds getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator myEnds MethodInvocation assocEnds iterator WhileStatement MethodInvocation myEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator myAe MethodInvocation myEnds next LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference myAe getAssociation getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator conn MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference asc isAAssociationRole getFacade BlockStatement StatementExpression Assignment MemberReference conn MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade = End IfStatement BinaryOperation == MemberReference conn Literal null BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ascEnds MethodInvocation conn iterator WhileStatement MethodInvocation ascEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation ascEnds next IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference ae getType getFacade MemberReference cls BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator aeName MethodInvocation Model MethodInvocation MemberReference ae getName getFacade IfStatement Literal MethodInvocation MemberReference aeName equals """" BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator aeNameStr MemberReference aeName IfStatement BinaryOperation || BinaryOperation == MemberReference aeNameStr Literal null BinaryOperation == MethodInvocation aeNameStr length Literal 0 BlockStatement ContinueStatement End IfStatement MethodInvocation namesSeen MemberReference aeNameStr contains BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End End ReturnStatement MemberReference NO_PROBLEM FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 5784567698177480475L ReferenceType CrUML",0
391,391,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import javax.swing.DefaultListModel Import javax.swing.ImageIcon Import javax.swing.JTextField Import org.argouml.i18n.Translator Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.ui.AbstractActionNavigate Import org.argouml.uml.ui.ActionDeleteModelElements Import org.argouml.uml.ui.PropPanel ClassDeclaration Modifier public /**
 * This class represents the properties panel for a Diagram.
 *
 */ PropPanelDiagram ConstructorDeclaration Modifier protected /**
     * Construct a property panel with a given name and icon.
     * 
     * @param diagramName the diagram name to use as the title of the panel
     * @param icon an icon to display on the panel
     */ PropPanelDiagram FormalParameter ReferenceType String diagramName FormalParameter ReferenceType ImageIcon icon StatementExpression SuperConstructorInvocation MemberReference diagramName MemberReference icon LocalVariableDeclaration ReferenceType JTextField VariableDeclarator field ClassCreator ReferenceType JTextField StatementExpression MethodInvocation field MethodInvocation ClassCreator ReferenceType DiagramNameDocument MemberReference field addDocumentListener getDocument StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MemberReference field addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.home-model"" localize MethodInvocation ClassCreator ReferenceType UMLDiagramHomeModelListModel getSingleRowScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateUpFromDiagram addAction StatementExpression MethodInvocation MethodInvocation ActionDeleteModelElements getTargetFollower addAction ConstructorDeclaration Modifier public /**
     * Default constructor if there is no child of this class that can show the
     * diagram.
     */ PropPanelDiagram StatementExpression ExplicitConstructorInvocation Literal ""Diagram"" Literal null ReferenceType PropPanel ClassDeclaration ActionNavigateUpFromDiagram ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNavigateUpFromDiagram StatementExpression SuperConstructorInvocation Literal ""button.go-up"" Literal true MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source IfStatement BinaryOperation instanceof MemberReference source ReferenceType ArgoDiagram BlockStatement ReturnStatement Cast ReferenceType ArgoDiagram MemberReference source End ReturnStatement Literal null MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement Literal true MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator destination MethodInvocation MemberReference target navigateTo IfStatement BinaryOperation != MemberReference destination Literal null BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference destination setTarget getInstance End ReferenceType AbstractActionNavigate ClassDeclaration /**
 * The list model for the ""homeModel"" of a diagram.
 *
 * @author mvw@tigris.org
 */ UMLDiagramHomeModelListModel FieldDeclaration Modifier private static ReferenceType ArgoDiagram VariableDeclarator oldTarget Literal null ConstructorDeclaration Modifier public /**
     * Constructor for UMLCommentAnnotatedElementListModel.
     */ UMLDiagramHomeModelListModel StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance setTarget StatementExpression MethodInvocation TargetManager MethodInvocation This addTargetListener getInstance MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier private setTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation != MemberReference oldTarget Literal null BlockStatement StatementExpression MethodInvocation oldTarget MemberReference ArgoDiagram NAMESPACE_KEY This removePropertyChangeListener End LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator target Literal null IfStatement BinaryOperation instanceof MemberReference t ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType ArgoDiagram MemberReference t = StatementExpression Assignment MemberReference oldTarget MemberReference target = StatementExpression MethodInvocation target MemberReference ArgoDiagram NAMESPACE_KEY This addPropertyChangeListener End StatementExpression MethodInvocation removeAllElements LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation target getOwner = End IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement StatementExpression MethodInvocation MemberReference ns addElement End MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation evt getNewValue addElement ReferenceType DefaultListModel ReferenceType TargetListener ReferenceType PropertyChangeListener",1
818,818,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration /**
 * The Action that creates a new Extension point for a UseCase.
 * Invoked by the ""New Extension Point"" toolbar button to create a new
 * extension point for this use case in the same namespace as the current
 * use case.
 * 
 * @author michiel
 */ ActionNewExtensionPoint ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNewExtensionPoint StatementExpression SuperConstructorInvocation Literal ""button.new-extension-point"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-extension-point"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUseCase getFacade BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation Model MethodInvocation MemberReference target buildExtensionPoint getUseCasesFactory setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1556105736769814764L ReferenceType AbstractActionNewModelElement",0
671,671,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Iterator Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * UML 1.5 Well-formedness rule [2] for Sync States.
 *
 * @author pepargouml@yahoo.es
 */ CrInvalidSynch ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrInvalidSynch StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""incoming"" addTrigger StatementExpression MethodInvocation Literal ""outgoing"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType Object VariableDeclarator destinationRegion Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceRegion Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator aux Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator tr Literal null IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isASynchState getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator outgoing MethodInvocation Model MethodInvocation MemberReference dm getOutgoings MethodInvocation iterator getFacade WhileStatement MethodInvocation outgoing hasNext BlockStatement StatementExpression Assignment MemberReference tr MethodInvocation outgoing next = StatementExpression Assignment MemberReference aux MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference tr getTarget getFacade getContainer getFacade = IfStatement BinaryOperation == MemberReference destinationRegion Literal null StatementExpression Assignment MemberReference destinationRegion MemberReference aux = IfStatement MethodInvocation ! aux MemberReference destinationRegion equals ReturnStatement MemberReference PROBLEM_FOUND End End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator incoming MethodInvocation Model MethodInvocation MemberReference dm getIncomings MethodInvocation iterator getFacade WhileStatement MethodInvocation incoming hasNext BlockStatement StatementExpression Assignment MemberReference tr MethodInvocation incoming next = StatementExpression Assignment MemberReference aux MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference tr getSource getFacade getContainer getFacade = IfStatement BinaryOperation == MemberReference sourceRegion Literal null StatementExpression Assignment MemberReference sourceRegion MemberReference aux = IfStatement MethodInvocation ! aux MemberReference sourceRegion equals ReturnStatement MemberReference PROBLEM_FOUND End End End IfStatement BinaryOperation && BinaryOperation != MemberReference destinationRegion Literal null MethodInvocation ! Model MethodInvocation MemberReference destinationRegion isAConcurrentRegion getFacade ReturnStatement MemberReference PROBLEM_FOUND End IfStatement BinaryOperation && BinaryOperation != MemberReference sourceRegion Literal null MethodInvocation ! Model MethodInvocation MemberReference sourceRegion isAConcurrentRegion getFacade ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",1
1328,1328,,0
867,867,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import org.argouml.kernel.ProjectManager Import org.tigris.gef.base.Diagram Import org.tigris.gef.base.PrintAction ClassDeclaration Modifier public /**
 * print the current active diagram.
 */ PrintManager FieldDeclaration Modifier private final ReferenceType PrintAction VariableDeclarator printCmd ClassCreator ReferenceType PrintAction FieldDeclaration Modifier private final static ReferenceType PrintManager VariableDeclarator INSTANCE ClassCreator ReferenceType PrintManager MethodDeclaration /**
     * @return the instance of the printmanager
     */ Modifier public static ReferenceType PrintManager getInstance ReturnStatement MemberReference INSTANCE ConstructorDeclaration Modifier private /**
     * The constructor.
     */ PrintManager MethodDeclaration /**
     * Print the active diagram
     */ Modifier public print LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager IfStatement BinaryOperation instanceof MemberReference target ReferenceType Diagram BlockStatement StatementExpression MethodInvocation printCmd Literal null actionPerformed End MethodDeclaration /**
     * Show the page setup dialog.
     */ Modifier public showPageSetupDialog StatementExpression MethodInvocation printCmd doPageSetup",0
478,478,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementOrderedListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl, alexb
 * @since Mar 22, 2003
 */ UMLEnumerationLiteralsListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierStructuralFeatureListModel.
     */ UMLEnumerationLiteralsListModel StatementExpression SuperConstructorInvocation Literal ""literal"" MethodDeclaration Modifier protected buildModelList IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAEnumeration getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getEnumerationLiterals getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator literals MethodInvocation Model MethodInvocation MethodInvocation getTarget getEnumerationLiterals getFacade ReturnStatement MethodInvocation literals MemberReference element contains End ReturnStatement Literal false MethodDeclaration Modifier protected moveDown FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getEnumerationLiterals getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeLiteral getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss BinaryOperation + MemberReference index Literal 1 MemberReference mem addLiteral getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToBottom(int)
     */ Modifier protected Annotation Override moveToBottom FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getEnumerationLiterals getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeLiteral getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MethodInvocation c size MemberReference mem addLiteral getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToTop(int)
     */ Modifier protected Annotation Override moveToTop FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getEnumerationLiterals getFacade IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeLiteral getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss Literal 0 MemberReference mem addLiteral getCoreHelper End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 4111214628991094451L ReferenceType UMLModelElementOrderedListModel2",0
1064,1064,,1
1206,1206,,0
1415,1415,,0
566,566,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.List Import javax.swing.JPanel Import org.apache.log4j.Logger Import org.argouml.cognitive.ui.WizStepChoice Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * A non-modal wizard to help the user change navigability
 * of an association.
 */ WizNavigable FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType WizNavigable getLogger FieldDeclaration Modifier private ReferenceType String VariableDeclarator instructions MethodInvocation Translator Literal ""critics.WizNavigable-ins"" localize FieldDeclaration Modifier private ReferenceType String VariableDeclarator option0 MethodInvocation Translator Literal ""critics.WizNavigable-option1"" localize FieldDeclaration Modifier private ReferenceType String VariableDeclarator option1 MethodInvocation Translator Literal ""critics.WizNavigable-option2"" localize FieldDeclaration Modifier private ReferenceType String VariableDeclarator option2 MethodInvocation Translator Literal ""critics.WizNavigable-option3"" localize FieldDeclaration Modifier private ReferenceType WizStepChoice VariableDeclarator step1 Literal null ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ WizNavigable MethodDeclaration /**
     * @return the options
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getOptions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation getModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 ClassCreator MethodInvocation Literal 0 get ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 ClassCreator MethodInvocation Literal 1 get ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator cls0 MethodInvocation Model MethodInvocation MemberReference ae0 getType getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator cls1 MethodInvocation Model MethodInvocation MemberReference ae1 getType getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference cls0 Literal null Literal ! MethodInvocation MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade equals """" BlockStatement StatementExpression Assignment MemberReference option0 BinaryOperation + MethodInvocation Translator Literal ""critics.WizNavigable-option4"" localize MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade = End IfStatement BinaryOperation && BinaryOperation != MemberReference cls1 Literal null Literal ! MethodInvocation MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade equals """" BlockStatement StatementExpression Assignment MemberReference option1 BinaryOperation + MethodInvocation Translator Literal ""critics.WizNavigable-option5"" localize MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade = End StatementExpression MethodInvocation result MemberReference option0 add StatementExpression MethodInvocation result MemberReference option1 add StatementExpression MethodInvocation result MemberReference option2 add ReturnStatement MemberReference result MethodDeclaration /**
     * @param s the instructions
     */ Modifier public setInstructions FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s = MethodDeclaration Modifier public ReferenceType JPanel makePanel FormalParameter BasicType int newStep SwitchStatement MemberReference newStep SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference step1 ClassCreator ReferenceType WizStepChoice This MemberReference instructions MethodInvocation getOptions = StatementExpression MethodInvocation step1 MethodInvocation getToDoItem setTarget End ReturnStatement MemberReference step1 End ReturnStatement Literal null MethodDeclaration Modifier public doAction FormalParameter BasicType int oldStep StatementExpression MethodInvocation LOG BinaryOperation + Literal ""doAction "" MemberReference oldStep debug SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1 getSelectedIndex = End IfStatement BinaryOperation == MemberReference choice Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType Error Literal ""nothing selected, should not get here"" End TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation getModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 ClassCreator MethodInvocation Literal 0 get ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 ClassCreator MethodInvocation Literal 1 get ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 BinaryOperation || BinaryOperation == MemberReference choice Literal 0 BinaryOperation == MemberReference choice Literal 2 setNavigable getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 BinaryOperation || BinaryOperation == MemberReference choice Literal 1 BinaryOperation == MemberReference choice Literal 2 setNavigable getCoreHelper CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG Literal ""could not set navigablity"" MemberReference pve error End MethodDeclaration Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1 Literal null BinaryOperation != MethodInvocation step1 getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true End ReturnStatement Literal false FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2571165058454693999L ReferenceType UMLWizard",0
498,498,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for State->Substates.
 *
 */ GoCompositeStateToSubvertex MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state.substates"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isACompositeState getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getSubvertices getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isACompositeState getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
695,695,"CompilationUnit PackageDeclaration org.argouml.uml.util.namespace Import java.util.Iterator InterfaceDeclaration Modifier public /**
 * The Namespace interface provides methods and constants which any class
 * dealing with namespaces needs to implement.
 *
 * @author mkl
 *
 */ Namespace ConstantDeclaration /**
     * the scope token for java.
     */ Modifier public final static ReferenceType String VariableDeclarator JAVA_NS_TOKEN Literal ""."" ConstantDeclaration /**
     * the scope token for uml.
     */ Modifier public final static ReferenceType String VariableDeclarator UML_NS_TOKEN Literal ""::"" ConstantDeclaration /**
     * the scope token for c++.
     */ Modifier public final static ReferenceType String VariableDeclarator CPP_NS_TOKEN Literal ""::"" MethodDeclaration /**
     * returns the namespace which is common to both namespaces, e.g.
     * <code>org.argouml.model</code>
     * and <code>org.argouml.util</code> have <code>org.argouml</code> in
     * common.
     *
     * @param namespace
     *            a namespace
     * @return the common or empty namespace
     */ ReferenceType Namespace getCommonNamespace FormalParameter ReferenceType Namespace namespace MethodDeclaration /**
     * returns the base of a namespace, e.g. the base of
     * <code>org.argouml.util</code>
     * is <code>org.argouml</code>.
     *
     * @return base namespace
     */ ReferenceType Namespace getBaseNamespace MethodDeclaration /**
     * add another element to a namespace.
     *
     * @param element the element to add
     */ pushNamespaceElement FormalParameter ReferenceType NamespaceElement element MethodDeclaration /**
     * reduces the innermost namespace element,
     * e.g. <code>org.argouml.model</code>
     * will return <code>model</code>, and change the namespace
     * to <code>org.argouml</code>.
     *
     * @return the popped element.
     */ ReferenceType NamespaceElement popNamespaceElement MethodDeclaration /**
     * return the innermost namespace element without removing it.
     *
     * @return the innermost namespace element
     */ ReferenceType NamespaceElement peekNamespaceElement MethodDeclaration /**
     * namespaces usually have a scope operator when used in representational
     * form. see also the predifined constants.
     *
     * @param token
     *            the token to use from now on.
     */ setDefaultScopeToken FormalParameter ReferenceType String token MethodDeclaration /**
     * return an iterator to the namespace elements.
     *
     * @return an iterator of NamespaceElements.
     */ ReferenceType Iterator iterator MethodDeclaration /**
     * check if the namespace is empty.
     *
     * @return true if empty
     */ BasicType boolean isEmpty MethodDeclaration /**
     * return a string representation of the namespace with the given token.
     * The existence of the method implies that classes also must implement
     * toString() in a reasonable manner using the default token.
     *
     * @param token the token to be converted
     * @return a string representation of the namespace
     */ ReferenceType String toString FormalParameter ReferenceType String token",0
1508,1508,,0
302,302,"CompilationUnit PackageDeclaration jdepend.swingui Import java.text.NumberFormat Import java.util  Import jdepend.framework  ClassDeclaration Modifier public abstract /**
 * The <code>PackageNode</code> class defines the default behavior for tree
 * nodes representing Java packages.
 * 
 * @author <b>Mike Clark</b>
 * @author Clarkware Consulting, Inc.
 */ PackageNode FieldDeclaration Modifier private ReferenceType PackageNode VariableDeclarator parent FieldDeclaration Modifier private ReferenceType JavaPackage VariableDeclarator jPackage FieldDeclaration Modifier private ReferenceType ArrayList VariableDeclarator children FieldDeclaration Modifier private static ReferenceType NumberFormat VariableDeclarator formatter StatementExpression Assignment MemberReference formatter MethodInvocation NumberFormat getInstance = StatementExpression MethodInvocation formatter Literal 2 setMaximumFractionDigits ConstructorDeclaration Modifier public /**
     * Constructs a <code>PackageNode</code> with the specified package and
     * its collection of dependent packages.
     * 
     * @param parent Parent package node.
     * @param jPackage Java package.
     */ PackageNode FormalParameter ReferenceType PackageNode parent FormalParameter ReferenceType JavaPackage jPackage StatementExpression Assignment This MemberReference parent MemberReference parent = StatementExpression Assignment This MemberReference jPackage MemberReference jPackage = StatementExpression Assignment MemberReference children Literal null = MethodDeclaration /**
     * Returns the Java package represented in this node.
     * 
     * @return Java package.
     */ Modifier public ReferenceType JavaPackage getPackage ReturnStatement MemberReference jPackage MethodDeclaration /**
     * Returns the parent of this package node.
     * 
     * @return Parent package node.
     */ Modifier public ReferenceType PackageNode getParent ReturnStatement MemberReference parent MethodDeclaration /**
     * Indicates whether this node is a leaf node.
     * 
     * @return <code>true</code> if this node is a leaf; <code>false</code>
     *         otherwise.
     */ Modifier public BasicType boolean isLeaf IfStatement BinaryOperation > MethodInvocation MethodInvocation size getCoupledPackages Literal 0 BlockStatement ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration /**
     * Creates and returns a <code>PackageNode</code> with the specified
     * parent node and Java package.
     * 
     * @param parent Parent package node.
     * @param jPackage Java package.
     * @return A non-null <code>PackageNode</code.
     */ Modifier protected abstract ReferenceType PackageNode makeNode FormalParameter ReferenceType PackageNode parent FormalParameter ReferenceType JavaPackage jPackage MethodDeclaration /**
     * Returns the collection of Java packages coupled to the package
     * represented in this node.
     * 
     * @return Collection of coupled packages.
     */ Modifier protected abstract ReferenceType Collection getCoupledPackages MethodDeclaration /**
     * Indicates whether the specified package should be displayed as a child of
     * this node.
     * 
     * @param jPackage Package to test.
     * @return <code>true</code> to display the package; <code>false</code>
     *         otherwise.
     */ Modifier public BasicType boolean isChild FormalParameter ReferenceType JavaPackage jPackage ReturnStatement Literal true MethodDeclaration /**
     * Returns the child package nodes of this node.
     * 
     * @return Collection of child package nodes.
     */ Modifier public ReferenceType ArrayList getChildren IfStatement BinaryOperation == MemberReference children Literal null BlockStatement StatementExpression Assignment MemberReference children ClassCreator ReferenceType ArrayList = LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator packages ClassCreator ReferenceType ArrayList MethodInvocation getCoupledPackages StatementExpression MethodInvocation Collections MemberReference packages ClassCreator ReferenceType PackageComparator MethodInvocation PackageComparator byName sort LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation packages iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType JavaPackage VariableDeclarator jPackage Cast ReferenceType JavaPackage MethodInvocation i next IfStatement MethodInvocation MemberReference jPackage isChild BlockStatement LocalVariableDeclaration ReferenceType PackageNode VariableDeclarator childNode MethodInvocation This MemberReference jPackage makeNode StatementExpression MethodInvocation children MemberReference childNode add End End End ReturnStatement MemberReference children MethodDeclaration /**
     * Returns the string representation of this node's metrics.
     * 
     * @return Metrics string.
     */ Modifier public ReferenceType String toMetricsString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator label ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation label MethodInvocation MethodInvocation getName getPackage append StatementExpression MethodInvocation label Literal ""  ("" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""CC: "" MethodInvocation MethodInvocation getConcreteClassCount getPackage Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""AC: "" MethodInvocation MethodInvocation getAbstractClassCount getPackage Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""Ca: "" MethodInvocation MethodInvocation afferentCoupling getPackage Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""Ce: "" MethodInvocation MethodInvocation efferentCoupling getPackage Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""A: "" MethodInvocation MethodInvocation MethodInvocation abstractness getPackage format Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""I: "" MethodInvocation MethodInvocation MethodInvocation instability getPackage format Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal ""D: "" MethodInvocation MethodInvocation MethodInvocation distance getPackage format Literal ""  "" append StatementExpression MethodInvocation label BinaryOperation + Literal ""V: "" MethodInvocation MethodInvocation getVolatility getPackage append IfStatement MethodInvocation MethodInvocation containsCycle getPackage BlockStatement StatementExpression MethodInvocation label Literal "" Cyclic"" append End StatementExpression MethodInvocation label Literal "")"" append ReturnStatement MethodInvocation label toString MethodDeclaration /**
     * Returns the string representation of this node in it's current tree
     * context.
     * 
     * @return Node label.
     */ Modifier public ReferenceType String toString IfStatement BinaryOperation == MethodInvocation MethodInvocation getParent getParent Literal null BlockStatement ReturnStatement MethodInvocation toMetricsString End ReturnStatement MethodInvocation MethodInvocation getName getPackage MethodDeclaration Modifier private static ReferenceType String format FormalParameter BasicType float f ReturnStatement MethodInvocation formatter MemberReference f format",0
444,444,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.argouml.model.AbstractModelFactory Import org.argouml.model.NotImplementedException Import org.argouml.model.UseCasesFactory Import org.eclipse.uml2.uml.Actor Import org.eclipse.uml2.uml.Extend Import org.eclipse.uml2.uml.ExtensionPoint Import org.eclipse.uml2.uml.Include Import org.eclipse.uml2.uml.InstanceSpecification Import org.eclipse.uml2.uml.Namespace Import org.eclipse.uml2.uml.UMLFactory Import org.eclipse.uml2.uml.UseCase ClassDeclaration /**
 * The implementation of the UseCasesFactory for EUML2.
 */ UseCasesFactoryEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param implementation
     *            The ModelImplementation.
     */ UseCasesFactoryEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Actor buildActor FormalParameter ReferenceType Object actor FormalParameter ReferenceType Object model IfStatement BinaryOperation instanceof MemberReference actor ReferenceType Actor BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End IfStatement BinaryOperation && BinaryOperation == Cast ReferenceType Actor MemberReference actor Literal null BinaryOperation instanceof MemberReference model ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Actor MemberReference actor IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression Assignment MemberReference ns Cast ReferenceType Namespace MemberReference model = End LocalVariableDeclaration ReferenceType Actor VariableDeclarator ret MethodInvocation createActor StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference ns MemberReference ret Literal ""Create the actor # in the namespace #"" MemberReference ret MemberReference ns addOwnedElement getCoreHelper ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Extend buildExtend FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object anextension ReturnStatement MethodInvocation MemberReference abase MemberReference anextension Literal null buildExtend MethodDeclaration Modifier public ReferenceType Extend buildExtend FormalParameter Modifier final ReferenceType Object extendedCase FormalParameter Modifier final ReferenceType Object extension FormalParameter Modifier final ReferenceType Object extensionLocation IfStatement BinaryOperation || BinaryOperation instanceof MemberReference extendedCase ReferenceType UseCase BinaryOperation instanceof MemberReference extension ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End IfStatement BinaryOperation && BinaryOperation != MemberReference extensionLocation Literal null BinaryOperation instanceof MemberReference extensionLocation ReferenceType ExtensionPoint BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End IfStatement BinaryOperation && BinaryOperation != MemberReference extensionLocation Literal null Cast ReferenceType ExtensionPoint MemberReference extensionLocation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""extensionLocation must belong to "" MemberReference extendedCase End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType ExtensionPoint VariableDeclarator ep IfStatement BinaryOperation == MemberReference extensionLocation Literal null BlockStatement StatementExpression Assignment MemberReference ep MethodInvocation createExtensionPoint = StatementExpression Cast ReferenceType UseCase MemberReference extendedCase BlockStatement StatementExpression Assignment MemberReference ep Cast ReferenceType ExtensionPoint MemberReference extensionLocation = End LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend MethodInvocation createExtend StatementExpression MethodInvocation extend Cast ReferenceType UseCase MemberReference extendedCase setExtendedCase StatementExpression MethodInvocation extend Cast ReferenceType UseCase MemberReference extension setExtension StatementExpression MethodInvocation extend MethodInvocation MemberReference ep add getExtensionLocations StatementExpression MethodInvocation MethodInvocation MemberReference extend add getParams StatementExpression MethodInvocation MethodInvocation MemberReference ep add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the extend # for the case # that extends the case # through #"" StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation MemberReference cmd execute getEditingDomain StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference extension MemberReference extendedCase MethodInvocation run MethodInvocation Literal 1 get getParams setObjects ReturnStatement Cast ReferenceType Extend MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType ExtensionPoint buildExtensionPoint FormalParameter ReferenceType Object modelElement IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType ExtensionPoint VariableDeclarator ep MethodInvocation createExtensionPoint StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference modelElement MemberReference ep Literal ""Create the extension point # for the case #"" MemberReference ep MemberReference modelElement addOwnedElement getCoreHelper ReturnStatement MemberReference ep MethodDeclaration Modifier public ReferenceType Include buildInclude FormalParameter Modifier final ReferenceType Object addition FormalParameter Modifier final ReferenceType Object includingCase IfStatement BinaryOperation || BinaryOperation instanceof MemberReference addition ReferenceType UseCase BinaryOperation instanceof MemberReference includingCase ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Include VariableDeclarator include MethodInvocation createInclude StatementExpression MethodInvocation include Cast ReferenceType UseCase MemberReference addition setAddition StatementExpression MethodInvocation include Cast ReferenceType UseCase MemberReference includingCase setIncludingCase StatementExpression MethodInvocation MethodInvocation MemberReference include add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the include # of the including case # that include the case #"" StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation MemberReference cmd execute getEditingDomain StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference includingCase MemberReference addition setObjects ReturnStatement Cast ReferenceType Include MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Actor createActor ReturnStatement MethodInvocation UMLFactory.eINSTANCE createActor MethodDeclaration Modifier public ReferenceType Extend createExtend ReturnStatement MethodInvocation UMLFactory.eINSTANCE createExtend MethodDeclaration Modifier public ReferenceType ExtensionPoint createExtensionPoint ReturnStatement MethodInvocation UMLFactory.eINSTANCE createExtensionPoint MethodDeclaration Modifier public ReferenceType Include createInclude ReturnStatement MethodInvocation UMLFactory.eINSTANCE createInclude MethodDeclaration Modifier public ReferenceType UseCase createUseCase ReturnStatement MethodInvocation UMLFactory.eINSTANCE createUseCase MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType InstanceSpecification createUseCaseInstance ThrowStatement ClassCreator ReferenceType NotImplementedException ReferenceType UseCasesFactory ReferenceType AbstractModelFactory",0
342,342,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration /**
 * The ComboBox model for the represented Operation 
 * of a Collaboration.
 * 
 * @author michiel
 */ UMLCollaborationRepresentedOperationComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLCollaborationRepresentedOperationComboBoxModel.
     */ UMLCollaborationRepresentedOperationComboBoxModel StatementExpression SuperConstructorInvocation Literal ""representedOperation"" Literal true MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Collection VariableDeclarator operations ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getUserDefinedModelList BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getOperation getMetaTypes getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator oper MemberReference c BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference oper getOwner getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator s MethodInvocation Model MethodInvocation MemberReference ns getAllSurroundingNamespaces getModelManagementHelper IfStatement MethodInvocation ! s MethodInvocation getTarget contains StatementExpression MethodInvocation operations MemberReference oper add End End End StatementExpression MethodInvocation MemberReference operations setElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getRepresentedOperation getFacade MemberReference element MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getRepresentedOperation getFacade MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent evt ReferenceType UMLComboBoxModel2",0
577,577,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.ItemEvent Import java.awt.event.ItemListener Import java.beans.PropertyChangeEvent Import javax.swing.event.DocumentEvent Import javax.swing.event.DocumentListener Import javax.swing.event.ListSelectionEvent Import javax.swing.event.ListSelectionListener Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.uml.diagram.ArgoDiagram Import org.tigris.gef.presentation.Fig Import org.tigris.swidgets.LabelledLayout ClassDeclaration Modifier public /**
 * The Presentation panel - formerly called style panel.
 *
 */ StylePanel FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType StylePanel getLogger FieldDeclaration Modifier private ReferenceType Fig VariableDeclarator panelTarget ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param tag The localization tag for the panel title.
     */ StylePanel FormalParameter ReferenceType String tag StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference tag localize StatementExpression MethodInvocation ClassCreator ReferenceType LabelledLayout setLayout MethodDeclaration /**
     * Add a separator.
     */ Modifier final protected addSeperator StatementExpression MethodInvocation MethodInvocation LabelledLayout getSeperator add MethodDeclaration /**
     * This method must be overridden by implementors if they don't want to
     * refresh the whole style panel every time a property change events is
     * fired.  The default behavior is to always call {@link #refresh()}.
     * @see #refresh()
     */ Modifier public refresh FormalParameter ReferenceType PropertyChangeEvent e StatementExpression MethodInvocation refresh MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference t isAUMLElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation p getActiveDiagram IfStatement BinaryOperation != MemberReference diagram Literal null BlockStatement StatementExpression Assignment MemberReference t MethodInvocation diagram MemberReference t presentationFor = End IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement ReturnStatement End BlockStatement ReturnStatement End End StatementExpression Assignment MemberReference panelTarget Cast ReferenceType Fig MemberReference t = StatementExpression MethodInvocation refresh MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference panelTarget MethodDeclaration Modifier public refresh MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig MemberReference target MethodInvocation diagram MemberReference target getContainingFig = ReturnStatement BinaryOperation instanceof MemberReference target ReferenceType Fig MethodDeclaration Modifier public insertUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation LOG BinaryOperation + MethodInvocation MethodInvocation getName getClass Literal "" insert"" debug MethodDeclaration Modifier public removeUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation MemberReference e insertUpdate MethodDeclaration Modifier public changedUpdate FormalParameter ReferenceType DocumentEvent e MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration /**
     * @return Returns the _target.
     */ Modifier protected ReferenceType Fig getPanelTarget ReturnStatement MemberReference panelTarget FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2183676111107689482L ReferenceType AbstractArgoJPanel ReferenceType TabFigTarget ReferenceType ItemListener ReferenceType DocumentListener ReferenceType ListSelectionListener ReferenceType ActionListener",1
1486,1486,,0
1436,1436,,0
198,198,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.EventObject ClassDeclaration Modifier public /**
 * A change event due to change in an attribute of a model element
 * (eg the name of a model element has changed).
 *
 * @author Bob Tarling
 */ AttributeChangeEvent ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param source  The bean that fired the event.
     * @param propertyName  The programmatic name of the property
     *		that was changed.
     * @param oldValue  The old value of the property.
     * @param newValue  The new value of the property.
     * @param originalEvent The event that was fired internally
     *     in the Model subsystem that caused this.
     */ AttributeChangeEvent FormalParameter ReferenceType Object source FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object oldValue FormalParameter ReferenceType Object newValue FormalParameter ReferenceType EventObject originalEvent StatementExpression SuperConstructorInvocation MemberReference source MemberReference propertyName MemberReference oldValue MemberReference newValue MemberReference originalEvent FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1573202490278617016L ReferenceType UmlChangeEvent",0
384,384,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to check that only one end of a binary association is an
 * aggregation.<p>
 *
 * This is the second well-formedness rule for associations in the UML 1.3
 * standard (see section 2.5.3 of the standard).<p>
 *
 * <em>Note</em>. This only applies to binary associations. There is a
 * separate critic (see {@link org.argouml.uml.cognitive.critics.CrNWayAgg})
 * which deals with 3- or more-way assocations.<p>
 *
 * See ArgoUML User Manual: Two Aggregate ends (roles) in binary Association
 *
 * @author jrobbins
 */ CrMultipleAgg ConstructorDeclaration Modifier public /**
     * Constructor for the critic.<p>
     *
     * Sets up the resource name, which will allow headline and description
     * to found for the current locale. Provides a design issue category
     * (CONTAINMENT), a knowledge type (SEMANTICS) and add triggers for
     * ""end_aggregation"".<p>
     */ CrMultipleAgg StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision CONTAINMENT addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SEMANTICS setKnowledgeTypes StatementExpression MethodInvocation Literal ""end_aggregation"" addTrigger MethodDeclaration /**
     * The trigger for the critic.<p>
     *
     * Check that the number of ends is two, otherwise this should be
     * handled by the critic for N-way assocations (see {@link
     * org.argouml.uml.cognitive.critics.CrNWayAgg}).<p>
     *
     * We do not handle association roles, which are a subclass of
     * association. An association role should be fine, if its parent is OK,
     * since it must be more tightly constrained than its parent.<p>
     *
     * <em>Note</em>. ArgoUML does not currently have a constructor to check
     * that an association role is more tightly constrained than its
     * parent.<p>
     *
     * Then loop through the ends, counting the number of aggregate
     * ends. Note that we look for aggregation explicitly, rather than just
     * absence of ""no aggregation"", so we don't trigger if the aggregation is
     * just undefined.<p>
     *
     * @param  dm    the {@link java.lang.Object Object} to be checked against
     *               the critic.
     *
     * @param  dsgr  the {@link org.argouml.cognitive.Designer Designer}
     *               creating the model. Not used, this is for future
     *               development of ArgoUML.
     *
     * @return       {@link #PROBLEM_FOUND PROBLEM_FOUND} if the critic is
     *               triggered, otherwise {@link #NO_PROBLEM NO_PROBLEM}.
     */ Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MemberReference dm IfStatement MethodInvocation Model MethodInvocation MemberReference asc isAAssociationRole getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference conns Literal null BinaryOperation != MethodInvocation conns size Literal 2 BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration BasicType int VariableDeclarator aggCount Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator assocEnds MethodInvocation conns iterator WhileStatement MethodInvocation assocEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation assocEnds next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference ae isAggregate getFacade MethodInvocation Model MethodInvocation MemberReference ae isComposite getFacade BlockStatement StatementExpression MemberReference ++ aggCount End End IfStatement BinaryOperation > MemberReference aggCount Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND BlockStatement ReturnStatement MemberReference NO_PROBLEM End MethodDeclaration /**
     * Find the class which will handle the wizard behaviour.<p>
     *
     * @param  item  the {@link ToDoItem} that triggered the critic.
     *
     * @return       {@link Class} of the wizard.
     */ Modifier public ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizAssocComposite ReferenceType CrUML",0
267,267,"CompilationUnit PackageDeclaration org.argouml.application.events InterfaceDeclaration Modifier public /**
 * Definitions of Argo Event types.
 *
 * @author Thierry Lach
 * @since  ARGO0.9.4
 */ ArgoEventTypes ConstantDeclaration /**
     * Id which matches any event.
     */ BasicType int VariableDeclarator ANY_EVENT Literal 1000 ConstantDeclaration /**
     * Id which matches any module event.
     */ BasicType int VariableDeclarator ANY_MODULE_EVENT Literal 1100 ConstantDeclaration /**
     * Id indicating a module was loaded.
     */ BasicType int VariableDeclarator MODULE_LOADED Literal 1101 ConstantDeclaration /**
     * Id indicating a module was unloaded.
     */ BasicType int VariableDeclarator MODULE_UNLOADED Literal 1102 ConstantDeclaration /**
     * Id indicating a module was enabled.
     */ BasicType int VariableDeclarator MODULE_ENABLED Literal 1103 ConstantDeclaration /**
     * Id indicating a module was disabled.
     */ BasicType int VariableDeclarator MODULE_DISABLED Literal 1104 ConstantDeclaration /**
     * Last module event.
     */ BasicType int VariableDeclarator LAST_MODULE_EVENT Literal 1199 ConstantDeclaration /**
     * Id indicating any notation event.
     */ BasicType int VariableDeclarator ANY_NOTATION_EVENT Literal 1200 ConstantDeclaration /**
     * Id indicating the default notation was changed.
     */ BasicType int VariableDeclarator NOTATION_CHANGED Literal 1201 ConstantDeclaration /**
     * Id indicating a notation was added.
     */ BasicType int VariableDeclarator NOTATION_ADDED Literal 1202 ConstantDeclaration /**
     * Id indicating a notation was removed.
     */ BasicType int VariableDeclarator NOTATION_REMOVED Literal 1203 ConstantDeclaration /**
     * Id indicating a notation provider was added.
     */ BasicType int VariableDeclarator NOTATION_PROVIDER_ADDED Literal 1204 ConstantDeclaration /**
     * Id indicating a notation provider was removed.
     */ BasicType int VariableDeclarator NOTATION_PROVIDER_REMOVED Literal 1205 ConstantDeclaration /**
     * Last module event.
     */ BasicType int VariableDeclarator LAST_NOTATION_EVENT Literal 1299 ConstantDeclaration /**
     * Id indicating any GENERATION event.
     */ BasicType int VariableDeclarator ANY_GENERATOR_EVENT Literal 1300 ConstantDeclaration /**
     * Id indicating the default GENERATION was changed.
     */ BasicType int VariableDeclarator GENERATOR_CHANGED Literal 1301 ConstantDeclaration /**
     * Id indicating a GENERATION was added.
     */ BasicType int VariableDeclarator GENERATOR_ADDED Literal 1302 ConstantDeclaration /**
     * Id indicating a GENERATION was removed.
     */ BasicType int VariableDeclarator GENERATOR_REMOVED Literal 1303 ConstantDeclaration /**
     * Last generation event.
     */ BasicType int VariableDeclarator LAST_GENERATOR_EVENT Literal 1399 ConstantDeclaration /**
     * Id indicating any HELP event.
     */ BasicType int VariableDeclarator ANY_HELP_EVENT Literal 1400 ConstantDeclaration /**
     * Id indicating the help text was changed.
     */ BasicType int VariableDeclarator HELP_CHANGED Literal 1401 ConstantDeclaration /**
     * Id indicating a help text was removed.
     */ BasicType int VariableDeclarator HELP_REMOVED Literal 1403 ConstantDeclaration /**
     * Last help event.
     */ BasicType int VariableDeclarator LAST_HELP_EVENT Literal 1499 ConstantDeclaration /**
     * Id indicating any STATUS event.
     */ BasicType int VariableDeclarator ANY_STATUS_EVENT Literal 1500 ConstantDeclaration /**
     * Id indicating the status text was changed.
     */ BasicType int VariableDeclarator STATUS_TEXT Literal 1501 ConstantDeclaration /**
     * Id indicating that there is no current status text.
     */ BasicType int VariableDeclarator STATUS_CLEARED Literal 1503 ConstantDeclaration /**
     * Id indicating that a project was saved.
     */ BasicType int VariableDeclarator STATUS_PROJECT_SAVED Literal 1504 ConstantDeclaration /**
     * Id indicating that a project was loaded.
     */ BasicType int VariableDeclarator STATUS_PROJECT_LOADED Literal 1505 ConstantDeclaration /**
     * Id indicating that a project was modified.
     */ BasicType int VariableDeclarator STATUS_PROJECT_MODIFIED Literal 1506 ConstantDeclaration /**
     * Last help event.
     */ BasicType int VariableDeclarator LAST_STATUS_EVENT Literal 1599 ConstantDeclaration /**
     * Indicating any diagram appearance event.
     */ BasicType int VariableDeclarator ANY_DIAGRAM_APPEARANCE_EVENT Literal 1600 ConstantDeclaration /**
     * Indicating that appearance is changed.
     */ BasicType int VariableDeclarator DIAGRAM_FONT_CHANGED Literal 1601 ConstantDeclaration /**
     * Last diagram appearance event.
     */ BasicType int VariableDeclarator LAST_DIAGRAM_APPEARANCE_EVENT Literal 1699 ConstantDeclaration /**
     * Indicating any profile event.
     */ BasicType int VariableDeclarator ANY_PROFILE_EVENT Literal 1700 ConstantDeclaration /**
     * Indicating that a profile has been added.
     */ BasicType int VariableDeclarator PROFILE_ADDED Literal 1701 ConstantDeclaration /**
     * Indicating that a profile has been removed.
     */ BasicType int VariableDeclarator PROFILE_REMOVED Literal 1702 ConstantDeclaration /**
     * Last profile event.
     */ BasicType int VariableDeclarator LAST_PROFILE_EVENT Literal 1799 ConstantDeclaration /**
     * Id marker for the last Argo event.
     */ BasicType int VariableDeclarator ARGO_EVENT_END Literal 99999",0
980,980,,0
1264,1264,,0
34,34,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection InterfaceDeclaration Modifier public /**
 * The interface for the factory for ExstensionMechanisms.
 */ ExtensionMechanismsFactory MethodDeclaration /**
     * Create an empty but initialized instance of a UML TaggedValue.
     *
     * @return an initialized UML TaggedValue instance.
     */ ReferenceType Object createTaggedValue MethodDeclaration /**
     * Builds a stereotype for some kind of modelelement.
     *
     * @param theModelElementObject    a Model Element that the stereotype
     *                                 will be applied to. The stereotype will
     *                                 have its BaseClass set to an appropriate
     *                                 value for this kind of Model Elements.
     * @param theName                  the name for the stereotype
     * @param theNamespaceObject       the namespace the stereotype will be
     *                                 created within.
     * @return                         the resulting stereotype object
     * @throws IllegalArgumentException if either argument is null.
     */ ReferenceType Object buildStereotype FormalParameter ReferenceType Object theModelElementObject FormalParameter ReferenceType Object theName FormalParameter ReferenceType Object theNamespaceObject MethodDeclaration /**
     * Builds an initialized stereotype.
     *
     * @param theModelElementObject the baseclass for the new stereotype
     * @param theName               the name for the new stereotype
     * @param model the current model of interest
     * @param models all the models
     * @return                      the new stereotype
     */ ReferenceType Object buildStereotype FormalParameter ReferenceType Object theModelElementObject FormalParameter ReferenceType String theName FormalParameter ReferenceType Object model FormalParameter ReferenceType Collection models MethodDeclaration /**
     * Builds an initialized stereotype.
     *
     * @param text is the name of the stereotype
     * @param ns namespace where the stereotype lives (is known)
     * @return an initialized stereotype.
     */ ReferenceType Object buildStereotype FormalParameter ReferenceType String text FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Build an initialized instance of a UML TaggedValue.
     *
     * @param tag is the tag name (a String).
     * @param value is the value (a String).
     * @return an initialized UML TaggedValue instance.
     */ ReferenceType Object buildTaggedValue FormalParameter ReferenceType String tag FormalParameter ReferenceType String value MethodDeclaration /**
     * Copy tagged value collection from one model element to another. New
     * copies are created of the tagged values themselves and of the dataValues
     * they contain, but not of the referenced type or reference values.
     * 
     * @param source
     *            ModelElement to copy from
     * @param target
     *            ModelElement to copy to
     */ Modifier public copyTaggedValues FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target MethodDeclaration /**
     * Copies a stereotype.
     *
     * @param source is the stereotype to copy.
     * @param ns is the namespace to put the copy in.
     * @return a newly created stereotype
     */ ReferenceType Object copyStereotype FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Build an initialized instance of a TagDefinition with the default tagType
     * of ""String"". Only one of the two parameters <code>stereotype</code> and
     * <code>namespace</code> may be specified.
     * 
     * @param name
     *                is the name of the TagDefinition
     * @param stereotype
     *                is the optional stereotype owning the TagDefinition
     * @param namespace
     *                is the namespace to put the TagDefinition.
     * @return a newly created TagDefinition.
     */ ReferenceType Object buildTagDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType Object stereotype FormalParameter ReferenceType Object namespace MethodDeclaration /**
     * Build an initialized instance of a TagDefinition. Only one of the two
     * parameters <code>stereotype</code> and <code>namespace</code> may be
     * specified.
     * 
     * @param name
     *                is the name of the TagDefinition
     * @param stereotype
     *                is the optional stereotype owning the TagDefinition
     * @param namespace
     *                is the namespace to put the TagDefinition.
     * @param tagType
     *                a string containing the name of the type for values that
     *                may be assigned to this tag. This can either be the name
     *                of a datatype (e.g. ""String"", ""Integer"" or ""Boolean"") or
     *                the name of a metaclass for more complex types of tagged
     *                values.
     * @return a newly created TagDefinition.
     */ ReferenceType Object buildTagDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType Object stereotype FormalParameter ReferenceType Object namespace FormalParameter ReferenceType String tagType MethodDeclaration /**
     * Create a TagDefinition.
     *
     * @return a TagDefinition
     */ ReferenceType Object createTagDefinition MethodDeclaration /**
     * Create an empty Stereotype element.
     *
     * @return a Stereotype
     */ ReferenceType Object createStereotype MethodDeclaration /**
     * Copy a TagDefinition into the given namespace or stereotype.
     *
     * @param aTd The TagDefinition to copy
     * @param aNs A Namespace or a stereotype into which place the copy
     * @return A copy of the tagdefinition
     */ ReferenceType Object copyTagDefinition FormalParameter ReferenceType Object aTd FormalParameter ReferenceType Object aNs ReferenceType Factory",0
156,156,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.beans.PropertyChangeListener Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoProfileEvent Import org.argouml.application.events.ArgoProfileEventListener Import org.argouml.configuration.Configuration Import org.argouml.kernel.ProjectManager Import org.argouml.model.AddAssociationEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.DeleteInstanceEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.notation.Notation ClassDeclaration Modifier public final /**
 * All events going to the Explorer must pass through here first!<p>
 *
 * Most will come from the uml model via the EventAdapter interface.<p>
 *
 * TODO: In some cases (test cases) this object is created without setting
 * the treeModel. I (Linus) will add tests for this now. It would be better
 * if this is created only when the Explorer is created.
 *
 * @since 0.15.2, Created on 16 September 2003, 23:13
 * @author  alexb
 */ ExplorerEventAdaptor FieldDeclaration /**
     * The singleton instance.
     *
     * TODO: Why is this a singleton? Wouldn't it be better to have exactly
     * one for every Explorer?
     */ Modifier private static ReferenceType ExplorerEventAdaptor VariableDeclarator instance FieldDeclaration /**
     * The tree model to update.
     */ Modifier private ReferenceType TreeModelUMLEventListener VariableDeclarator treeModel MethodDeclaration /**
     * @return the instance (singleton)
     */ Modifier public static ReferenceType ExplorerEventAdaptor getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType ExplorerEventAdaptor = End ReturnStatement MemberReference instance ConstructorDeclaration Modifier private /**
     * Creates a new instance of ExplorerUMLEventAdaptor.
     */ ExplorerEventAdaptor StatementExpression MethodInvocation Configuration MemberReference Notation KEY_USE_GUILLEMOTS This addListener StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_STEREOTYPES This addListener StatementExpression MethodInvocation ProjectManager MethodInvocation This addPropertyChangeListener getManager StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getModelElement getMetaTypes Cast ReferenceType String Literal null addClassModelEventListener getPump StatementExpression MethodInvocation ArgoEventPump MemberReference ArgoEventTypes ANY_PROFILE_EVENT ClassCreator ReferenceType ProfileChangeListener addListener MethodDeclaration /**
     * The tree structure has changed significantly.  
     * Inform the associated tree model.
     * 
     * TODO:  This shouldn't be public.  Components desiring to
     * inform the Explorer of changes should send events.
     * @deprecated by mvw in V0.25.4. Use events instead.
     */ Modifier public structureChanged IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation treeModel structureChanged MethodDeclaration /**
     * forwards this event to the tree model.
     *
     * @param element the modelelement to be removed
     * @deprecated for 0.25.4 by tfmorris.  Send an event rather than calling
     * this method directly.  This is not currently used by ArgoUML and removal
     * is handled by Model subsystem events.
     */ Modifier public Annotation Deprecated modelElementRemoved FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation treeModel MemberReference element modelElementRemoved MethodDeclaration /**
     * forwards this event to the tree model.
     *
     * @param element the modelelement to be added
     * 
     * TODO:  This shouldn't be public.  Components desiring to
     * inform the Explorer of changes should send events.
     */ Modifier public modelElementAdded FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation treeModel MemberReference element modelElementAdded MethodDeclaration /**
     * forwards this event to the tree model.
     *
     * @param element the modelelement to be changed
     * 
     * TODO:  This shouldn't be public.  Components desiring to
     * inform the Explorer of changes should send events.
     */ Modifier public modelElementChanged FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation treeModel MemberReference element modelElementChanged MethodDeclaration /**
     * sets the tree model that will receive events.
     *
     * @param newTreeModel the tree model to be used
     */ Modifier public setTreeModelUMLEventListener FormalParameter ReferenceType TreeModelUMLEventListener newTreeModel StatementExpression Assignment MemberReference treeModel MemberReference newTreeModel = MethodDeclaration /**
     * Listens to events coming from the project manager, config manager, and
     * uml model, passes those events on to the explorer model.
     *
     * @since ARGO0.11.2
     *
     * {@inheritDoc}
     */ Modifier public propertyChange FormalParameter ReferenceType java ReferenceType beans ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement End IfStatement BinaryOperation instanceof MemberReference pce ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation treeModel MethodInvocation pce getSource modelElementChanged IfStatement BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent BlockStatement IfStatement Literal ! ""namespace"" BlockStatement StatementExpression MethodInvocation treeModel Cast ReferenceType RemoveAssociationEvent MemberReference pce modelElementChanged End IfStatement BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent BlockStatement IfStatement Literal ! ""namespace"" BlockStatement StatementExpression MethodInvocation treeModel Cast ReferenceType AddAssociationEvent MemberReference pce modelElementAdded End IfStatement BinaryOperation instanceof MemberReference pce ReferenceType DeleteInstanceEvent BlockStatement StatementExpression MethodInvocation treeModel Cast ReferenceType DeleteInstanceEvent MemberReference pce modelElementRemoved IfStatement MethodInvocation pce MethodInvocation MemberReference ProjectManager CURRENT_PROJECT_PROPERTY_NAME equals getPropertyName BlockStatement IfStatement BinaryOperation != MethodInvocation pce getNewValue Literal null BlockStatement StatementExpression MethodInvocation treeModel structureChanged End ReturnStatement IfStatement BinaryOperation || MethodInvocation Notation.KEY_USE_GUILLEMOTS MemberReference pce isChangedProperty MethodInvocation Notation.KEY_SHOW_STEREOTYPES MemberReference pce isChangedProperty BlockStatement StatementExpression MethodInvocation treeModel structureChanged IfStatement BinaryOperation instanceof MethodInvocation pce getSource ReferenceType ProjectManager BlockStatement IfStatement Literal MethodInvocation MethodInvocation pce getPropertyName equals ""remove"" BlockStatement StatementExpression MethodInvocation treeModel MethodInvocation pce getOldValue modelElementRemoved End End End End End End End End ClassDeclaration /**
     * Listener for additions and removals of profiles.
     * Since they generally have a major impact on the explorer tree, 
     * we simply update them completely.
     *
     * @author Michiel
     */ ProfileChangeListener MethodDeclaration Modifier public profileAdded FormalParameter ReferenceType ArgoProfileEvent e StatementExpression MethodInvocation structureChanged MethodDeclaration Modifier public profileRemoved FormalParameter ReferenceType ArgoProfileEvent e StatementExpression MethodInvocation structureChanged ReferenceType ArgoProfileEventListener ReferenceType PropertyChangeListener",1
366,366,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.Dimension Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.util.ArrayList Import java.util.List Import java.util.Vector Import javax.swing.JLabel Import javax.swing.JTextArea Import javax.swing.JTextField Import javax.swing.border.EtchedBorder Import org.argouml.cognitive.critics.Wizard Import org.argouml.swingext.SpacerPanel ClassDeclaration Modifier public /**
 * A non-modal wizard step that shows instructions and prompts
 * the user to enter a series of strings in textfields.
 *
 * @see org.argouml.cognitive.Critic
 * @see org.argouml.cognitive.critics.Wizard
 */ WizStepManyTextFields FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator instructions ClassCreator ReferenceType JTextArea FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType JTextField VariableDeclarator fields ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JTextField ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param w the wizard
     * @param instr  the instructions
     * @param strings the strings
     */ WizStepManyTextFields FormalParameter ReferenceType Wizard w FormalParameter ReferenceType String instr FormalParameter ReferenceType List strings StatementExpression MethodInvocation instructions MemberReference instr setText StatementExpression MethodInvocation instructions Literal true setWrapStyleWord StatementExpression MethodInvocation instructions Literal true setLineWrap StatementExpression MethodInvocation instructions Literal false setEditable StatementExpression MethodInvocation instructions Literal null setBorder StatementExpression MethodInvocation instructions MethodInvocation MethodInvocation getBackground getMainPanel setBackground StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType EtchedBorder setBorder getMainPanel LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation MethodInvocation MemberReference gb setLayout getMainPanel LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression Assignment MemberReference c ipady Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c anchor MemberReference GridBagConstraints EAST = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator image ClassCreator ReferenceType JLabel Literal """" StatementExpression MethodInvocation image MethodInvocation getWizardIcon setIcon StatementExpression MethodInvocation image Literal null setBorder StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridheight MemberReference GridBagConstraints REMAINDER = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c anchor MemberReference GridBagConstraints NORTH = StatementExpression MethodInvocation gb MemberReference image MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference image add getMainPanel StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridheight Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = StatementExpression MethodInvocation gb MemberReference instructions MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference instructions add getMainPanel StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = LocalVariableDeclaration ReferenceType SpacerPanel VariableDeclarator spacer ClassCreator ReferenceType SpacerPanel StatementExpression MethodInvocation gb MemberReference spacer MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference spacer add getMainPanel StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference c gridwidth Literal 1 = LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation strings size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference c gridy BinaryOperation + Literal 2 MemberReference i = LocalVariableDeclaration ReferenceType String VariableDeclarator s Cast ReferenceType String MethodInvocation strings MemberReference i get LocalVariableDeclaration ReferenceType JTextField VariableDeclarator tf ClassCreator ReferenceType JTextField MemberReference s Literal 50 StatementExpression MethodInvocation tf ClassCreator ReferenceType Dimension Literal 200 Literal 20 setMinimumSize StatementExpression MethodInvocation tf MethodInvocation This addDocumentListener getDocument StatementExpression MethodInvocation fields MemberReference tf add StatementExpression MethodInvocation gb MemberReference tf MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference tf add getMainPanel End StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy BinaryOperation + Literal 3 MethodInvocation strings size = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = LocalVariableDeclaration ReferenceType SpacerPanel VariableDeclarator spacer2 ClassCreator ReferenceType SpacerPanel StatementExpression MethodInvocation gb MemberReference spacer2 MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference spacer2 add getMainPanel MethodDeclaration /**
     * @return the strings
     * @deprecated for 0.25.4 by tfmorris.  Use {@link #getStringList()}.
     */ Modifier public Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType String getStrings ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType String MethodInvocation getStringList MethodDeclaration /**
     * @return the strings
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getStringList LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodInvocation fields size ForStatement EnhancedForControl VariableDeclaration ReferenceType JTextField VariableDeclarator tf MemberReference fields BlockStatement StatementExpression MethodInvocation result MethodInvocation tf getText add End ReturnStatement MemberReference result FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5154002407806917092L ReferenceType WizStep",1
361,361,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration ActionModifierActive FieldDeclaration /**
     * Serial version generated for rev. 1.5
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4458846555966612262L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param o the target
     */ ActionModifierActive FormalParameter ReferenceType Object o StatementExpression SuperConstructorInvocation Literal ""checkbox.active-uc"" StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean MethodInvocation MemberReference o valueOfTarget valueOf putValue MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation ! Model MethodInvocation MemberReference t isActive getFacade setActive getCoreHelper MethodDeclaration BasicType boolean valueOfTarget FormalParameter ReferenceType Object t ReturnStatement MethodInvocation Model MethodInvocation MemberReference t isActive getFacade ReferenceType AbstractActionCheckBoxMenuItem",0
1035,1035,,1
1464,1464,,0
589,589,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import java.awt.Point Import java.awt.Rectangle Import org.tigris.gef.base.Geometry Import org.tigris.gef.presentation.FigRect ClassDeclaration /**
 * The bigport needs to overrule the getClosestPoint,
 * because it is the port of this FigNode(Instance).
 *
 * @author mvw@tigris.org
 */ CubePortFigRect FieldDeclaration Modifier private BasicType int VariableDeclarator d ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param x the x
     * @param y the y
     * @param w the width
     * @param h the height
     * @param depth the depth
     */ CubePortFigRect FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter BasicType int depth StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h StatementExpression Assignment MemberReference d MemberReference depth = MethodDeclaration Modifier public ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator xs ArrayInitializer MemberReference r x BinaryOperation + MemberReference r x MemberReference d BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference d MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ys ArrayInitializer BinaryOperation + MemberReference r y MemberReference d MemberReference r y MemberReference r y BinaryOperation - BinaryOperation + MemberReference r y MemberReference r height MemberReference d BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference d LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference xs MemberReference ys Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 136360467045533658L ReferenceType FigRect",0
943,943,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.util.Iterator Import org.argouml.uml.diagram.static_structure.ui.FigClass Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * Class to display the Class box fig piece of an Association Class.
 * <em>NOTE:</em> It must be used only from a FigAssociationClass
 *
 * @author pepargouml
 */ FigClassAssociationClass FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4101337246957593739L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param owner the UML object
     * @param x the x of the initial location
     * @param y the y of the initial location
     * @param w the initial width
     * @param h the initial height
     */ FigClassAssociationClass FormalParameter ReferenceType Object owner FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression SuperConstructorInvocation MemberReference owner MemberReference x MemberReference y MemberReference w MemberReference h StatementExpression MethodInvocation Literal true enableSizeChecking ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param owner the owner UML object
     */ FigClassAssociationClass FormalParameter ReferenceType Object owner StatementExpression SuperConstructorInvocation Literal null MemberReference owner MethodDeclaration Modifier protected ReferenceType Fig getRemoveDelegate LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getFigEdges WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeAssociationClass BlockStatement LocalVariableDeclaration ReferenceType FigEdgeAssociationClass VariableDeclarator dashedEdge Cast ReferenceType FigEdgeAssociationClass MemberReference o ReturnStatement MethodInvocation dashedEdge getRemoveDelegate End End ReturnStatement Literal null ReferenceType FigClass",0
655,655,"CompilationUnit PackageDeclaration org.argouml.persistence ClassDeclaration Modifier public /**
 * Exception indicating unsupported file version.
 * 
 * @author Bob Tarling
 */ VersionException ConstructorDeclaration Modifier public /**
     * Construct the exception the version information found.
     * @param message the message
     */ VersionException FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference message ReferenceType OpenException",0
1304,1304,,0
1056,1056,,1
702,702,"CompilationUnit PackageDeclaration org.argouml.cognitive Import java.util.List Import java.util.Vector ClassDeclaration Modifier public /**
 * Event issued when the todo list changes.
 *
 */ ToDoListEvent FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ ToDoListEvent StatementExpression Assignment MemberReference items Literal null = ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param i the List of ToDoItems that were changed/added/removed 
     */ ToDoListEvent FormalParameter ReferenceType List TypeArgument ReferenceType ToDoItem i StatementExpression Assignment MemberReference items MemberReference i = MethodDeclaration /**
     * @return the todo list events
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getToDoItemList()}.
     */ Modifier public Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType ToDoItem getToDoItems ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType ToDoItem MemberReference items MethodDeclaration /**
     * @return the todo list events
     */ Modifier public ReferenceType List TypeArgument ReferenceType ToDoItem getToDoItemList ReturnStatement MemberReference items",0
288,288,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import java.util.Collection Import java.util.Iterator Import javax.swing.AbstractAction Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.sequence.ui.FigMessage Import org.argouml.uml.reveng.ui.RESequenceDiagramDialog ClassDeclaration Modifier public /**
 * Action to reverse engineer a sequence diagram from the operation bodies.
 */ ActionRESequenceDiagram ConstructorDeclaration Modifier public /**
     * The constructor. If a figure is given, then it is invoked inside of a
     * sequence diagram, so it will work with this diagram. If figure is null,
     * then this causes the creation of a new sequence diagram.
     *
     * @param fig the figure the action is performed on
     */ ActionRESequenceDiagram FormalParameter ReferenceType Object fig StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.reverse-engineer-sequence-diagram"" localize StatementExpression Assignment MemberReference messageFig MemberReference fig = ConstructorDeclaration Modifier public /**
     * The constructor. Invoked from the explorer, so no figure is available.
     */ ActionRESequenceDiagram StatementExpression ExplicitConstructorInvocation Literal null MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference obj StatementExpression MethodInvocation dialog Literal true setVisible IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference obj isAMessage getFacade BinaryOperation != MemberReference messageFig Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ac MethodInvocation Model MethodInvocation MemberReference obj getAction getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator op TernaryExpression MethodInvocation Model MethodInvocation MemberReference ac isACallAction getFacade MethodInvocation Model MethodInvocation MemberReference ac getOperation getFacade Literal null IfStatement BinaryOperation != MemberReference op Literal null BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference op Cast ReferenceType FigMessage MemberReference messageFig StatementExpression MethodInvocation dialog Literal true setVisible BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator receiver MethodInvocation Model MethodInvocation MemberReference obj getReceiver getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator c TernaryExpression BinaryOperation != MemberReference receiver Literal null MethodInvocation Model MethodInvocation MemberReference receiver getBases getFacade Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator cls TernaryExpression BinaryOperation && BinaryOperation != MemberReference c Literal null MethodInvocation ! c isEmpty MethodInvocation c MethodInvocation next iterator Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference cls Literal null MethodInvocation Model MethodInvocation MemberReference cls isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator opName MethodInvocation Model MethodInvocation MemberReference obj getName getFacade LocalVariableDeclaration BasicType int VariableDeclarator pos1 MethodInvocation opName Literal ""."" lastIndexOf LocalVariableDeclaration BasicType int VariableDeclarator pos2 MethodInvocation opName Literal ""("" lastIndexOf IfStatement BinaryOperation == MemberReference pos1 Literal - 1 BlockStatement StatementExpression Assignment MemberReference pos1 MethodInvocation opName Literal ""new "" lastIndexOf = StatementExpression Assignment MemberReference pos1 TernaryExpression BinaryOperation != MemberReference pos1 Literal - 1 BinaryOperation + MemberReference pos1 Literal 4 Literal 0 = BlockStatement StatementExpression MemberReference ++ pos1 End StatementExpression Assignment MemberReference pos2 TernaryExpression BinaryOperation != MemberReference pos2 Literal - 1 MemberReference pos2 MethodInvocation opName length = StatementExpression Assignment MemberReference opName MethodInvocation opName MemberReference pos1 MemberReference pos2 substring = StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference cls getOperationsInh getCoreHelper = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter TernaryExpression BinaryOperation != MemberReference c Literal null MethodInvocation c iterator Literal null WhileStatement BinaryOperation && BinaryOperation != MemberReference iter Literal null MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference op MethodInvocation iter next = IfStatement MethodInvocation opName MethodInvocation Model MethodInvocation MemberReference op getName getFacade equals BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference op Cast ReferenceType FigMessage MemberReference messageFig StatementExpression MethodInvocation dialog Literal true setVisible BreakStatement End End End End End End MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference target isAMessage getFacade FieldDeclaration Modifier private ReferenceType Object VariableDeclarator messageFig FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2915509413708666273L ReferenceType AbstractAction",0
608,608,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import javax.swing.JMenuItem Import javax.swing.JPopupMenu Import org.argouml.i18n.Translator Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public abstract /**
 * This class resembles UMLModelElementListModel2, but is for those associations
 * in the metamodel (see UML standard) that have a {ordered} constraint.
 * <p>
 *
 * This adds the functionality of a popup menu with the items ""Move Up"",
 * ""Move Down"", ""Move to Top"", and ""Move to Bottom"".
 *
 * @author Michiel
 */ UMLModelElementOrderedListModel2 ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param name
     *            the name
     */ UMLModelElementOrderedListModel2 FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name MethodDeclaration Modifier protected abstract buildModelList MethodDeclaration Modifier protected abstract BasicType boolean isValidElement FormalParameter ReferenceType Object element MethodDeclaration /**
     * Move a element from the given position down one position, i.e. a swap of
     * the two positions. Anyone listening to the model will then be updated by
     * the events/listener mechanism. If the element is already the last element
     * in the list, nothing is done.
     *
     * @param index
     *            the current position
     */ Modifier protected abstract moveDown FormalParameter BasicType int index MethodDeclaration /**
     * Move element at given index to top of list.
     * 
     * @param index starting position of element to be moved
     */ Modifier protected abstract moveToTop FormalParameter BasicType int index MethodDeclaration /**
     * Move element at given index to bottom of list.
     * 
     * @param index starting position of element to be moved
     */ Modifier protected abstract moveToBottom FormalParameter BasicType int index MethodDeclaration Modifier public BasicType boolean buildPopup FormalParameter ReferenceType JPopupMenu popup FormalParameter BasicType int index LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator moveToTop ClassCreator ReferenceType JMenuItem ClassCreator ReferenceType MoveToTopAction This MemberReference index LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator moveUp ClassCreator ReferenceType JMenuItem ClassCreator ReferenceType MoveUpAction This MemberReference index LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator moveDown ClassCreator ReferenceType JMenuItem ClassCreator ReferenceType MoveDownAction This MemberReference index LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator moveToBottom ClassCreator ReferenceType JMenuItem ClassCreator ReferenceType MoveToBottomAction This MemberReference index StatementExpression MethodInvocation popup MemberReference moveToTop add StatementExpression MethodInvocation popup MemberReference moveUp add StatementExpression MethodInvocation popup MemberReference moveDown add StatementExpression MethodInvocation popup MemberReference moveToBottom add ReturnStatement Literal true ReferenceType UMLModelElementListModel2 ClassDeclaration /**
 * The action to move an item in the list one place up.
 *
 * @author mvw@tigris.org
 */ MoveUpAction FieldDeclaration Modifier private ReferenceType UMLModelElementOrderedListModel2 VariableDeclarator model FieldDeclaration Modifier private BasicType int VariableDeclarator index ConstructorDeclaration Modifier public /**
     * The constructor.
     */ MoveUpAction FormalParameter ReferenceType UMLModelElementOrderedListModel2 theModel FormalParameter BasicType int theIndex StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.moveup"" localize StatementExpression Assignment MemberReference model MemberReference theModel = StatementExpression Assignment MemberReference index MemberReference theIndex = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation model BinaryOperation - MemberReference index Literal 1 moveDown MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement BinaryOperation > MemberReference index Literal 0 ReferenceType UndoableAction ClassDeclaration /**
 * The action to move an item in the list one place down.
 *
 * @author mvw@tigris.org
 */ MoveDownAction FieldDeclaration Modifier private ReferenceType UMLModelElementOrderedListModel2 VariableDeclarator model FieldDeclaration Modifier private BasicType int VariableDeclarator index ConstructorDeclaration Modifier public /**
     * The constructor.
     */ MoveDownAction FormalParameter ReferenceType UMLModelElementOrderedListModel2 theModel FormalParameter BasicType int theIndex StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.movedown"" localize StatementExpression Assignment MemberReference model MemberReference theModel = StatementExpression Assignment MemberReference index MemberReference theIndex = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation model MemberReference index moveDown MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement BinaryOperation > MethodInvocation model getSize BinaryOperation + MemberReference index Literal 1 ReferenceType UndoableAction ClassDeclaration /**
 * Action to move an item to the top (beginning) of an ordered list model.
 *
 * @author Aleksandar Vucetica
 */ MoveToTopAction FieldDeclaration Modifier private ReferenceType UMLModelElementOrderedListModel2 VariableDeclarator model FieldDeclaration Modifier private BasicType int VariableDeclarator index ConstructorDeclaration Modifier public /**
     * Construct an action to move the item at the given index to the top of
     * the given list.
     * 
     * @param theModel
     *            the list model to operate on
     * @param theIndex
     *            starting position of element to move
     */ MoveToTopAction FormalParameter ReferenceType UMLModelElementOrderedListModel2 theModel FormalParameter BasicType int theIndex StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.movetotop"" localize StatementExpression Assignment MemberReference model MemberReference theModel = StatementExpression Assignment MemberReference index MemberReference theIndex = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation model MemberReference index moveToTop MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation model getSize Literal 1 BinaryOperation > MemberReference index Literal 0 ReferenceType UndoableAction ClassDeclaration /**
 * Move an item to the bottom of the list.
 *
 * @author Aleksandar Vucetica
 */ MoveToBottomAction FieldDeclaration Modifier private ReferenceType UMLModelElementOrderedListModel2 VariableDeclarator model FieldDeclaration Modifier private BasicType int VariableDeclarator index ConstructorDeclaration Modifier public /**
     * Construct an action to move the item at the given index to the bottom of
     * the given list.
     * 
     * @param theModel
     *            the list model to operate on
     * @param theIndex
     *            starting position of element to move
     */ MoveToBottomAction FormalParameter ReferenceType UMLModelElementOrderedListModel2 theModel FormalParameter BasicType int theIndex StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.movetobottom"" localize StatementExpression Assignment MemberReference model MemberReference theModel = StatementExpression Assignment MemberReference index MemberReference theIndex = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation model MemberReference index moveToBottom MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement BinaryOperation && BinaryOperation > MethodInvocation model getSize Literal 1 BinaryOperation < MemberReference index BinaryOperation - MethodInvocation model getSize Literal 1 ReferenceType UndoableAction",0
956,956,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import javax.swing.ImageIcon Import org.argouml.i18n.Translator Import org.argouml.uml.ui.behavior.state_machines.AbstractPropPanelState Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public /**
 * User interface panel shown at the bottom of the screen that allows the user
 * to edit the properties of the selected UML model element.
 */ PropPanelActionState FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 4936258091606712050L ConstructorDeclaration Modifier public /**
     * Construct a default property panel for an Action State.
     */ PropPanelActionState StatementExpression ExplicitConstructorInvocation Literal ""label.action-state"" MethodInvocation Literal ""ActionState"" lookupIcon ConstructorDeclaration Modifier public Annotation Deprecated /**
     * Construct a property panel for an Action State with the given params.
     *
     * @param name the name of the properties panel
     * @param icon the icon to be shown next to the name
     * @param orientation the orientation of the panel
     * @deprecated for 0.25.4 by tfmorris. Use
     *             {@link #PropPanelActionState(String, ImageIcon)} and
     *             setOrientation() after instantiation.
     */ PropPanelActionState FormalParameter ReferenceType String name FormalParameter ReferenceType ImageIcon icon FormalParameter ReferenceType Orientation orientation StatementExpression ExplicitConstructorInvocation MemberReference name MemberReference icon StatementExpression MethodInvocation MemberReference orientation setOrientation ConstructorDeclaration Modifier public /**
     * Construct a property panel for an Action State with the given params.
     *
     * @param name the name of the properties panel
     * @param icon the icon to be shown next to the name
     */ PropPanelActionState FormalParameter ReferenceType String name FormalParameter ReferenceType ImageIcon icon StatementExpression SuperConstructorInvocation MemberReference name MemberReference icon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.container"" localize MethodInvocation getContainerScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.entry"" localize MethodInvocation getEntryScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.deferrable"" localize MethodInvocation getDeferrableEventsScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.incoming"" localize MethodInvocation getIncomingScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.outgoing"" localize MethodInvocation getOutgoingScroll addField ReferenceType AbstractPropPanelState",0
875,875,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.Dimension Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.WindowEvent Import java.awt.event.WindowListener Import java.util.Iterator Import javax.swing.JButton Import javax.swing.JTabbedPane Import javax.swing.SwingConstants Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.i18n.Translator Import org.argouml.util.ArgoDialog ClassDeclaration /**
 * A dialog panel that allows the user to set 
 * preferences with project scope, i.e. 
 * settings that are stored in the project file (e.g. "".zargo"").
 * 
 * @author michiel
 */ ProjectSettingsDialog FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator applyButton FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator resetToDefaultButton FieldDeclaration Modifier private ReferenceType JTabbedPane VariableDeclarator tabs FieldDeclaration Modifier private BasicType boolean VariableDeclarator doingShow FieldDeclaration Modifier private BasicType boolean VariableDeclarator windowOpen ConstructorDeclaration Modifier public /**
     * The constructor for this dialog of settings with project scope.
     */ ProjectSettingsDialog StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""dialog.file.properties"" localize MemberReference ArgoDialog OK_CANCEL_OPTION Literal true StatementExpression Assignment MemberReference tabs ClassCreator ReferenceType JTabbedPane = StatementExpression Assignment MemberReference applyButton ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""button.apply"" localize = LocalVariableDeclaration ReferenceType String VariableDeclarator mnemonic MethodInvocation Translator Literal ""button.apply.mnemonic"" localize IfStatement BinaryOperation && BinaryOperation != MemberReference mnemonic Literal null BinaryOperation > MethodInvocation mnemonic length Literal 0 BlockStatement StatementExpression MethodInvocation applyButton MethodInvocation mnemonic Literal 0 charAt setMnemonic End StatementExpression MethodInvocation applyButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation handleSave addActionListener StatementExpression MethodInvocation MemberReference applyButton addButton StatementExpression Assignment MemberReference resetToDefaultButton ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""button.reset-to-default"" localize = StatementExpression Assignment MemberReference mnemonic MethodInvocation Translator Literal ""button.reset-to-default.mnemonic"" localize = IfStatement BinaryOperation && BinaryOperation != MemberReference mnemonic Literal null BinaryOperation > MethodInvocation mnemonic length Literal 0 BlockStatement StatementExpression MethodInvocation resetToDefaultButton MethodInvocation mnemonic Literal 0 charAt setMnemonic End StatementExpression MethodInvocation resetToDefaultButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation handleResetToDefault addActionListener StatementExpression MethodInvocation MemberReference resetToDefaultButton addButton LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation GUI MethodInvocation getProjectSettingsTabs MethodInvocation iterator getInstance WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType GUISettingsTabInterface VariableDeclarator stp Cast ReferenceType GUISettingsTabInterface MethodInvocation iter next StatementExpression MethodInvocation tabs MethodInvocation Translator MethodInvocation stp getTabKey localize MethodInvocation stp getTabPanel addTab End LocalVariableDeclaration Modifier final BasicType int VariableDeclarator minimumWidth Literal 480 StatementExpression MethodInvocation tabs ClassCreator ReferenceType Dimension MethodInvocation Math MethodInvocation tabs MemberReference width getPreferredSize MemberReference minimumWidth max MethodInvocation tabs MemberReference height getPreferredSize setPreferredSize StatementExpression MethodInvocation tabs MemberReference SwingConstants LEFT setTabPlacement StatementExpression MethodInvocation MemberReference tabs setContent StatementExpression MethodInvocation This addWindowListener MethodDeclaration /**
     * Replacement of {@link java.awt.Component#setVisible(boolean)}
     */ Modifier public showDialog IfStatement MemberReference doingShow BlockStatement ReturnStatement End StatementExpression Assignment MemberReference doingShow Literal true = StatementExpression MethodInvocation handleRefresh StatementExpression MethodInvocation Literal true setVisible StatementExpression MethodInvocation toFront StatementExpression Assignment MemberReference doingShow Literal false = MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ev StatementExpression SuperMethodInvocation MemberReference ev actionPerformed IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation handleSave IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation getCancelButton BlockStatement StatementExpression MethodInvocation handleCancel End End MethodDeclaration Modifier private handleSave ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabs getComponentCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation tabs MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference o ReferenceType GUISettingsTabInterface BlockStatement StatementExpression Cast ReferenceType GUISettingsTabInterface MemberReference o End End StatementExpression Assignment MemberReference windowOpen Literal false = MethodDeclaration Modifier private handleCancel ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabs getComponentCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation tabs MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference o ReferenceType GUISettingsTabInterface BlockStatement StatementExpression Cast ReferenceType GUISettingsTabInterface MemberReference o End End StatementExpression Assignment MemberReference windowOpen Literal false = MethodDeclaration /**
     * Perform ""Refresh"" in all Tabs.
     */ Modifier private handleRefresh ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabs getComponentCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation tabs MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference o ReferenceType GUISettingsTabInterface BlockStatement StatementExpression Cast ReferenceType GUISettingsTabInterface MemberReference o End End MethodDeclaration Modifier private handleOpen IfStatement MemberReference ! windowOpen BlockStatement StatementExpression MethodInvocation MethodInvocation requestFocusInWindow getOkButton StatementExpression Assignment MemberReference windowOpen Literal true = End MethodDeclaration Modifier private handleResetToDefault ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabs getComponentCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation tabs MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference o ReferenceType GUISettingsTabInterface BlockStatement StatementExpression Cast ReferenceType GUISettingsTabInterface MemberReference o End End MethodDeclaration Modifier public windowActivated FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation handleOpen MethodDeclaration Modifier public windowClosed FormalParameter ReferenceType WindowEvent e MethodDeclaration Modifier public windowDeactivated FormalParameter ReferenceType WindowEvent e MethodDeclaration Modifier public windowDeiconified FormalParameter ReferenceType WindowEvent e MethodDeclaration Modifier public windowIconified FormalParameter ReferenceType WindowEvent e MethodDeclaration Modifier public windowOpened FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation handleOpen MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation handleCancel ReferenceType ArgoDialog ReferenceType WindowListener",1
891,891,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.text.ParseException Import java.util.ArrayList Import java.util.Collection Import java.util.Map Import java.util.Iterator Import java.util.StringTokenizer Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.notation.providers.StateBodyNotation ClassDeclaration Modifier public /**
 * UML notation for the body of a state.
 * 
 * @author mvw@tigris.org
 */ StateBodyNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param state the state represented by the notation
     */ StateBodyNotationUml FormalParameter ReferenceType Object state StatementExpression SuperConstructorInvocation MemberReference state MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseStateBody CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.statebody"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-statebody"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Object VariableDeclarator entryAction MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator exitAction MethodInvocation Model MethodInvocation MemberReference modelElement getExit getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator doAction MethodInvocation Model MethodInvocation MemberReference modelElement getDoActivity getFacade IfStatement BinaryOperation != MemberReference entryAction Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entryStr MethodInvocation NotationUtilityUml MemberReference entryAction generateActionSequence StatementExpression MethodInvocation s MethodInvocation MemberReference entryStr append Literal ""entry /"" append End IfStatement BinaryOperation != MemberReference doAction Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator doStr MethodInvocation NotationUtilityUml MemberReference doAction generateActionSequence IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal ""\n"" append End StatementExpression MethodInvocation s MethodInvocation MemberReference doStr append Literal ""do /"" append End IfStatement BinaryOperation != MemberReference exitAction Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator exitStr MethodInvocation NotationUtilityUml MemberReference exitAction generateActionSequence IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal ""\n"" append End StatementExpression MethodInvocation s MethodInvocation MemberReference exitStr append Literal ""exit /"" append End LocalVariableDeclaration ReferenceType Collection VariableDeclarator internaltrans MethodInvocation Model MethodInvocation MemberReference modelElement getInternalTransitions getFacade IfStatement BinaryOperation != MemberReference internaltrans Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation internaltrans iterator WhileStatement MethodInvocation iter hasNext BlockStatement IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal ""\n"" append End LocalVariableDeclaration ReferenceType Object VariableDeclarator trans MethodInvocation iter next StatementExpression MethodInvocation s ClassCreator MethodInvocation MemberReference trans Literal null toString ReferenceType TransitionNotationUml MemberReference trans append End End ReturnStatement MethodInvocation s toString MethodDeclaration /**
     * Parse user input for state bodies and assign the individual lines to
     * according actions or transistions. The user input consists of multiple
     * lines like:<pre>
     *   action-label / action-expression
     * </pre> or the format of a regular
     * transition - see parseTransition(). <p>
     *
     * ""action-label"" stands for one of ""entry"", ""do"" and ""exit"".
     * The words ""entry"", ""do"" and ""exit"" are case-independent.
     *
     * @param st  The State object.
     * @param s   The string to parse.
     * @throws ParseException when there is a syntax problem,
     *         e.g. non-matching brackets () or []
     */ Modifier protected parseStateBody FormalParameter ReferenceType Object st FormalParameter ReferenceType String s ParseException LocalVariableDeclaration BasicType boolean VariableDeclarator foundEntry Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator foundExit Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator foundDo Literal false LocalVariableDeclaration ReferenceType ModelElementInfoList VariableDeclarator internalsInfo ClassCreator ReferenceType ModelElementInfoList MethodInvocation Model MethodInvocation MemberReference st getInternalTransitions getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator lines ClassCreator ReferenceType StringTokenizer MemberReference s Literal ""\n\r"" WhileStatement MethodInvocation lines hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation lines MethodInvocation trim nextToken IfStatement MethodInvocation ! internalsInfo MemberReference line checkRetain BlockStatement IfStatement BinaryOperation && MethodInvocation line MethodInvocation Literal ""entry"" startsWith toLowerCase MethodInvocation line MethodInvocation trim MethodInvocation Literal ""/"" startsWith Literal 5 substring BlockStatement StatementExpression MethodInvocation MemberReference st MemberReference line parseStateEntryAction StatementExpression Assignment MemberReference foundEntry Literal true = IfStatement BinaryOperation && MethodInvocation line MethodInvocation Literal ""exit"" startsWith toLowerCase MethodInvocation line MethodInvocation trim MethodInvocation Literal ""/"" startsWith Literal 4 substring BlockStatement StatementExpression MethodInvocation MemberReference st MemberReference line parseStateExitAction StatementExpression Assignment MemberReference foundExit Literal true = IfStatement BinaryOperation && MethodInvocation line MethodInvocation Literal ""do"" startsWith toLowerCase MethodInvocation line MethodInvocation trim MethodInvocation Literal ""/"" startsWith Literal 2 substring BlockStatement StatementExpression MethodInvocation MemberReference st MemberReference line parseStateDoAction StatementExpression Assignment MemberReference foundDo Literal true = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference st buildInternalTransition getStateMachinesFactory IfStatement BinaryOperation == MemberReference t Literal null BlockStatement ContinueStatement End StatementExpression ClassCreator MethodInvocation MemberReference t MemberReference line parseTransition ReferenceType TransitionNotationUml MemberReference t StatementExpression MethodInvocation internalsInfo MemberReference t Literal true add End End End End End IfStatement MemberReference ! foundEntry BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference st getEntry getFacade delete End IfStatement MemberReference ! foundExit BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference st getExit getFacade delete End IfStatement MemberReference ! foundDo BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference st getDoActivity getFacade delete End StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation internalsInfo finalisedList setInternalTransitions getStateMachinesHelper ClassDeclaration /**
     * This class manages a list of UML modelelements that existed
     * before and after the parseXxxxx() function was called.
     * It has all the knowledge to deal with additions and removals.
     *
     * @author MVW
     */ ModelElementInfoList FieldDeclaration /**
         * The list that we maintain.
         */ Modifier private ReferenceType Collection VariableDeclarator theList ClassDeclaration /**
         * An item in a list, maintains all info about one UML object,
         * its generated version (i.e. textual representation),
         * and if it needs to be retained after parsing.<p>
         *
         * @author MVW
         */ InfoItem FieldDeclaration Modifier private ReferenceType TransitionNotationUml VariableDeclarator generator FieldDeclaration Modifier private ReferenceType Object VariableDeclarator umlObject FieldDeclaration Modifier private BasicType boolean VariableDeclarator retainIt ConstructorDeclaration /**
             * The constructor.
             * @param obj the uml object
             */ InfoItem FormalParameter ReferenceType Object obj StatementExpression Assignment MemberReference umlObject MemberReference obj = StatementExpression Assignment MemberReference generator ClassCreator ReferenceType TransitionNotationUml MemberReference obj = ConstructorDeclaration /**
             * The constructor.
             *
             * @param obj the uml object.
             * @param r
             */ InfoItem FormalParameter ReferenceType Object obj FormalParameter BasicType boolean r StatementExpression ExplicitConstructorInvocation MemberReference obj StatementExpression Assignment MemberReference retainIt MemberReference r = MethodDeclaration /**
             * @return the generated string representation
             */ ReferenceType String getGenerated ReturnStatement MethodInvocation generator toString MethodDeclaration /**
             * @return the UML Object
             */ ReferenceType Object getUmlObject ReturnStatement MemberReference umlObject MethodDeclaration /**
             * Retain this UML object.
             */ retain StatementExpression Assignment MemberReference retainIt Literal true = MethodDeclaration /**
             * @return true if the UML object is to be retained,
             *         false if it is to be deleted
             */ BasicType boolean isRetained ReturnStatement MemberReference retainIt ConstructorDeclaration /**
         * The constructor.
         *
         * @param c the collection of the UML objects
         *          that were present before
         */ ModelElementInfoList FormalParameter ReferenceType Collection c StatementExpression Assignment MemberReference theList ClassCreator ReferenceType ArrayList = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation theList ClassCreator ReferenceType InfoItem MethodInvocation i next add End MethodDeclaration /**
         * @param obj the UML object
         * @param r true if this UML object needs to be retained
         */ add FormalParameter ReferenceType Object obj FormalParameter BasicType boolean r StatementExpression MethodInvocation theList ClassCreator ReferenceType InfoItem MemberReference obj MemberReference r add MethodDeclaration /**
         * Check the given textual description,
         * and if already present in the list, then retain it.
         * @param line the given textual description
         * @return true if the item was already present in the list
         */ BasicType boolean checkRetain FormalParameter ReferenceType String line LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation theList iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType InfoItem VariableDeclarator tInfo Cast ReferenceType InfoItem MethodInvocation i next IfStatement MethodInvocation tInfo MethodInvocation MemberReference line equals getGenerated BlockStatement StatementExpression MethodInvocation tInfo retain ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration /**
         * Finish the procedure, by deleting the UML model items
         * that are not to be retained, and return a collection
         * of the ones to be retained.
         * This method should only be called once!
         * @return the UML objects that survive.
         */ ReferenceType Collection finalisedList LocalVariableDeclaration ReferenceType Collection VariableDeclarator newModelElementsList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation theList iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType InfoItem VariableDeclarator tInfo Cast ReferenceType InfoItem MethodInvocation i next IfStatement MethodInvocation tInfo isRetained BlockStatement StatementExpression MethodInvocation newModelElementsList MethodInvocation tInfo getUmlObject add BlockStatement StatementExpression MethodInvocation MethodInvocation tInfo getUmlObject delete End End StatementExpression MethodInvocation theList clear ReturnStatement MemberReference newModelElementsList MethodDeclaration /**
     * Parse a line of the form: ""entry /action"" and create an action.
     * We do not need to check for the presence of the word ""entry"" - that
     * is done by the caller.
     *
     * @param st  the state object
     * @param s   the string to be parsed
     */ Modifier private parseStateEntryAction FormalParameter ReferenceType Object st FormalParameter ReferenceType String s IfStatement BinaryOperation > MethodInvocation s Literal ""/"" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal ""/"" indexOf Literal 1 substring = End LocalVariableDeclaration ReferenceType Object VariableDeclarator oldEntry MethodInvocation Model MethodInvocation MemberReference st getEntry getFacade IfStatement BinaryOperation == MemberReference oldEntry Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation MemberReference s buildNewCallAction setEntry getStateMachinesHelper BlockStatement StatementExpression MethodInvocation MemberReference oldEntry MemberReference s updateAction End MethodDeclaration /**
     * Parse a line of the form: ""exit /action"" and create an action.
     * We do not need to check for the presence of the word ""exit"" - that
     * is done by the caller.
     *
     * @param st
     *            the state object
     * @param s
     *            the string to be parsed
     */ Modifier private parseStateExitAction FormalParameter ReferenceType Object st FormalParameter ReferenceType String s IfStatement BinaryOperation > MethodInvocation s Literal ""/"" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal ""/"" indexOf Literal 1 substring = End LocalVariableDeclaration ReferenceType Object VariableDeclarator oldExit MethodInvocation Model MethodInvocation MemberReference st getExit getFacade IfStatement BinaryOperation == MemberReference oldExit Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation MemberReference s buildNewCallAction setExit getStateMachinesHelper BlockStatement StatementExpression MethodInvocation MemberReference oldExit MemberReference s updateAction End MethodDeclaration /**
     * Parse a line of the form: ""do /action"" and create an action.
     * We do not need to check for the presence of the word ""do"" - that
     * is done by the caller.
     *
     * @param st  the state object
     * @param s   the string to be parsed
     */ Modifier private parseStateDoAction FormalParameter ReferenceType Object st FormalParameter ReferenceType String s IfStatement BinaryOperation > MethodInvocation s Literal ""/"" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal ""/"" indexOf Literal 1 substring = End LocalVariableDeclaration ReferenceType Object VariableDeclarator oldDo MethodInvocation Model MethodInvocation MemberReference st getDoActivity getFacade IfStatement BinaryOperation == MemberReference oldDo Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation MemberReference s buildNewCallAction setDoActivity getStateMachinesHelper BlockStatement StatementExpression MethodInvocation MemberReference oldDo MemberReference s updateAction End MethodDeclaration /**
     * This builds a CallAction with default attributes. But without Operation!
     *
     * @author MVW
     * @param s
     *            string representing the Script of the Action
     * @return The newly created CallAction.
     */ Modifier private ReferenceType Object buildNewCallAction FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType Object VariableDeclarator a MethodInvocation Model MethodInvocation createCallAction getCommonBehaviorFactory LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation Model MethodInvocation Literal ""Java"" MemberReference s createActionExpression getDataTypesFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference a MemberReference ae setScript getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference a Literal ""anon"" setName getCoreHelper ReturnStatement MemberReference a MethodDeclaration /**
     * Update an existing Action with a new Script.
     *
     * @author MVW
     * @param old the Action
     * @param s   a string representing a new Script for the ActionExpression
     */ Modifier private updateAction FormalParameter ReferenceType Object old FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation Model MethodInvocation MemberReference old getScript getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator language Literal ""Java"" IfStatement BinaryOperation != MemberReference ae Literal null BlockStatement StatementExpression Assignment MemberReference language MethodInvocation Model MethodInvocation MemberReference ae getLanguage getDataTypesHelper = LocalVariableDeclaration ReferenceType String VariableDeclarator body Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference ae getBody getFacade IfStatement MethodInvocation body MemberReference s equals BlockStatement ReturnStatement End End StatementExpression Assignment MemberReference ae MethodInvocation Model MethodInvocation MemberReference language MemberReference s createActionExpression getDataTypesFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference old MemberReference ae setScript getCommonBehaviorHelper MethodDeclaration /**
     * This deletes modelelements, and swallows null without barking.
     *
     * @author mvw@tigris.org
     * @param obj
     *            the modelelement to be deleted
     */ Modifier private delete FormalParameter ReferenceType Object obj IfStatement BinaryOperation != MemberReference obj Literal null BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference obj moveToTrash getManager End ReferenceType StateBodyNotation",1
1471,1471,,0
223,223,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.text.ParseException Import java.util.Collection Import java.util.Map Import java.util.Iterator Import java.util.Stack Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.kernel.ProjectSettings Import org.argouml.model.Model Import org.argouml.notation.providers.ModelElementNameNotation ClassDeclaration Modifier public /**
 * Handles the notation of the name of a modelelement in UML,
 * ie a string on the format:<pre>
 *     [ &lt;&lt; stereotype &gt;&gt;] [+|-|#] [name]
 * </pre>
 *
 * @author mvw@tigris.org
 */ ModelElementNameNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param name the uml object
     */ ModelElementNameNotationUml FormalParameter ReferenceType Object name StatementExpression SuperConstructorInvocation MemberReference name MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation NotationUtilityUml MemberReference modelElement MemberReference text parseModelElement CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.node-modelelement"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-nodemodelelement"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal """" IfStatement MethodInvocation Literal ""fullyHandleStereotypes"" MemberReference args isValue BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference modelElement MemberReference args generateStereotypes append End StatementExpression MethodInvocation sb MethodInvocation MemberReference modelElement MemberReference args generateVisibility append IfStatement MethodInvocation Literal ""pathVisible"" MemberReference args isValue BlockStatement StatementExpression MethodInvocation sb MethodInvocation NotationUtilityUml MemberReference modelElement generatePath append End IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation sb MemberReference name append End ReturnStatement MethodInvocation sb toString MethodDeclaration /**
     * @param modelElement the UML element to generate for
     * @param args arguments that influence the generation
     * @return a string which represents the stereotypes
     */ Modifier protected ReferenceType String generateStereotypes FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 50 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation sb Literal ',' append End IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation sb MethodInvocation Model MethodInvocation MemberReference o getName getFacade append StatementExpression Assignment MemberReference first Literal false = End End LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation project getProjectSettings ReturnStatement TernaryExpression MemberReference first Literal """" BinaryOperation + BinaryOperation + MethodInvocation ps getLeftGuillemot MethodInvocation sb toString MethodInvocation ps getRightGuillemot MethodDeclaration /**
     * @param modelElement the UML element to generate for
     * @param args arguments that influence the generation
     * @return a string which represents the path
     */ Modifier protected ReferenceType String generatePath FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator s ClassCreator ReferenceType StringBuilder IfStatement MethodInvocation Literal ""pathVisible"" MemberReference args isValue BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator p MemberReference modelElement LocalVariableDeclaration ReferenceType Stack VariableDeclarator stack ClassCreator ReferenceType Stack LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference p getNamespace getFacade WhileStatement BinaryOperation && BinaryOperation != MemberReference ns Literal null MethodInvocation ! Model MethodInvocation MemberReference ns isAModel getFacade BlockStatement StatementExpression MethodInvocation stack MethodInvocation Model MethodInvocation MemberReference ns getName getFacade push StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = End WhileStatement MethodInvocation ! stack isEmpty BlockStatement StatementExpression MethodInvocation s BinaryOperation + Cast ReferenceType String MethodInvocation stack pop Literal ""::"" append End IfStatement BinaryOperation && BinaryOperation > MethodInvocation s length Literal 0 BinaryOperation == MethodInvocation s Literal "":"" lastIndexOf BinaryOperation - MethodInvocation s length Literal 1 BlockStatement StatementExpression MethodInvocation s Literal ""::"" append End End ReturnStatement MethodInvocation s toString MethodDeclaration /**
     * @param modelElement the UML element to generate for
     * @param args arguments that influence the generation
     * @return a string representing the visibility
     */ Modifier protected ReferenceType String generateVisibility FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal """" IfStatement MethodInvocation Literal ""visibilityVisible"" MemberReference args isValue BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference modelElement getVisibility getFacade IfStatement BinaryOperation == MemberReference v Literal null BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Model MethodInvocation getPublic getVisibilityKind = End StatementExpression Assignment MemberReference s MethodInvocation NotationUtilityUml MemberReference v generateVisibility = IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference s Literal "" "" = End End ReturnStatement MemberReference s ReferenceType ModelElementNameNotation",1
1389,1389,,0
1444,1444,,0
954,954,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Use Case->Extension Point.
 * Provides a rule to display extension points in the navigation pane.<p>
 *
 * @author  16 Apr 2002. Jeremy Bennett (mail@jeremybennett.com).
 */ GoUseCaseToExtensionPoint MethodDeclaration /**
     * Give a name to this rule.<p>
     *
     * @return  The name of the rule (""<code>Use Case->Extension
     *          Point</code>"").
     */ Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.use-case.extension-point"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAUseCase getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getExtensionPoints getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
689,689,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.Collection Import java.util.Iterator Import java.util.List Import javax.swing.Action Import org.argouml.model.Model Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.presentation.Fig Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * Action to set the Multiplicity.
 *
 */ ActionMultiplicity FieldDeclaration Modifier private ReferenceType String VariableDeclarator str Literal """" FieldDeclaration Modifier private ReferenceType Object VariableDeclarator mult Literal null FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcMultOne ClassCreator ReferenceType ActionMultiplicity Literal ""1"" Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destMultOne ClassCreator ReferenceType ActionMultiplicity Literal ""1"" Literal ""dest"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcMultZeroToOne ClassCreator ReferenceType ActionMultiplicity Literal ""0..1"" Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destMultZeroToOne ClassCreator ReferenceType ActionMultiplicity Literal ""0..1"" Literal ""dest"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcMultZeroToMany ClassCreator ReferenceType ActionMultiplicity Literal ""0..*"" Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destMultZeroToMany ClassCreator ReferenceType ActionMultiplicity Literal ""0..*"" Literal ""dest"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcMultOneToMany ClassCreator ReferenceType ActionMultiplicity Literal ""1..*"" Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destMultOneToMany ClassCreator ReferenceType ActionMultiplicity Literal ""1..*"" Literal ""dest"" ConstructorDeclaration Modifier protected /**
     * The Constructor.
     *
     * @param m the multiplicity
     * @param s ""src"" or ""dest"". Anything else is interpreted as ""dest"".
     */ ActionMultiplicity FormalParameter ReferenceType String m FormalParameter ReferenceType String s StatementExpression SuperConstructorInvocation MemberReference m Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MemberReference m putValue StatementExpression Assignment MemberReference str MemberReference s = StatementExpression Assignment MemberReference mult MemberReference m = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType List VariableDeclarator sels MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation selections curEditor IfStatement BinaryOperation == MethodInvocation sels size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel Cast ReferenceType Selection MethodInvocation sels Literal 0 get LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation sel getContent LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType FigEdgeModelElement MemberReference f LocalVariableDeclaration ReferenceType Collection VariableDeclarator ascEnds MethodInvocation Model MethodInvocation MemberReference owner getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ascEnds iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator ascEnd Literal null IfStatement MethodInvocation str Literal ""src"" equals BlockStatement StatementExpression Assignment MemberReference ascEnd MethodInvocation iter next = BlockStatement WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference ascEnd MethodInvocation iter next = End End IfStatement MethodInvocation ! mult MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference ascEnd getMultiplicity getFacade toString getFacade equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ascEnd MethodInvocation Model MethodInvocation Cast ReferenceType String MemberReference mult createMultiplicity getDataTypesFactory setMultiplicity getCoreHelper End End MethodDeclaration /**
     * @return true if the action is enabled
     * @see org.tigris.gef.undo.UndoableAction#isEnabled()
     */ Modifier public BasicType boolean isEnabled ReturnStatement Literal true MethodDeclaration /**
     * @return Returns the srcMultOne.
     */ Modifier public static ReferenceType UndoableAction getSrcMultOne ReturnStatement MemberReference srcMultOne MethodDeclaration /**
     * @return Returns the destMultOne.
     */ Modifier public static ReferenceType UndoableAction getDestMultOne ReturnStatement MemberReference destMultOne MethodDeclaration /**
     * @return Returns the srcMultZeroToOne.
     */ Modifier public static ReferenceType UndoableAction getSrcMultZeroToOne ReturnStatement MemberReference srcMultZeroToOne MethodDeclaration /**
     * @return Returns the destMultZeroToOne.
     */ Modifier public static ReferenceType UndoableAction getDestMultZeroToOne ReturnStatement MemberReference destMultZeroToOne MethodDeclaration /**
     * @return Returns the srcMultZeroToMany.
     */ Modifier public static ReferenceType UndoableAction getSrcMultZeroToMany ReturnStatement MemberReference srcMultZeroToMany MethodDeclaration /**
     * @return Returns the destMultZeroToMany.
     */ Modifier public static ReferenceType UndoableAction getDestMultZeroToMany ReturnStatement MemberReference destMultZeroToMany MethodDeclaration /**
     * @return Returns the srcMultOneToMany.
     */ Modifier public static ReferenceType UndoableAction getSrcMultOneToMany ReturnStatement MemberReference srcMultOneToMany MethodDeclaration /**
     * @return Returns the destMultOneToMany.
     */ Modifier public static ReferenceType UndoableAction getDestMultOneToMany ReturnStatement MemberReference destMultOneToMany ReferenceType UndoableAction",0
1045,1045,,1
585,585,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.extension_mechanisms Import java.awt.event.ActionEvent Import java.util.Collection Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * This action creates a new Stereotype in the current Model.
 *
 * @author mvw@tigris.org
 */ ActionNewStereotype ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNewStereotype StatementExpression SuperConstructorInvocation Literal ""button.new-stereotype"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-stereotype"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig StatementExpression Assignment MemberReference t Cast ReferenceType Fig MemberReference t = End LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getModel LocalVariableDeclaration ReferenceType Collection VariableDeclarator models MethodInvocation p getModels LocalVariableDeclaration ReferenceType Object VariableDeclarator newStereo MethodInvocation Model MethodInvocation TernaryExpression MethodInvocation Model MethodInvocation MemberReference t isAModelElement getFacade MemberReference t Literal null Cast ReferenceType String Literal null MemberReference model MemberReference models buildStereotype getExtensionMechanismsFactory IfStatement MethodInvocation Model MethodInvocation MemberReference t isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference t getNamespace getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference newStereo MemberReference ns setNamespace getCoreHelper End End StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newStereo setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed ReferenceType AbstractActionNewModelElement",0
507,507,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.Collection Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementOrderedListModel2 ClassDeclaration Modifier public /**
 * This is the model for the list of parameters for a classifier,
 * as e.g. present on the operation properties panel. <p>
 *
 * This is an ordered list, and hence it supports reordering functions.
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 26, 2003
 */ UMLClassifierParameterListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierParameterListModel.
     * This is an ordered list (2nd parameter = true).
     */ UMLClassifierParameterListModel StatementExpression SuperConstructorInvocation Literal ""parameter"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getParameters getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getParameters MethodInvocation MemberReference element contains getFacade MethodDeclaration Modifier protected moveDown FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getParameters getFacade IfStatement BinaryOperation && BinaryOperation instanceof MemberReference c ReferenceType List BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem Cast ReferenceType List MemberReference c StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeParameter getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss BinaryOperation + MemberReference index Literal 1 MemberReference mem addParameter getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToBottom(int)
     */ Modifier protected Annotation Override moveToBottom FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getParameters getFacade IfStatement BinaryOperation && BinaryOperation instanceof MemberReference c ReferenceType List BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem Cast ReferenceType List MemberReference c StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeParameter getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss BinaryOperation - MethodInvocation c size Literal 1 MemberReference mem addParameter getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToTop(int)
     */ Modifier protected Annotation Override moveToTop FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getParameters getFacade IfStatement BinaryOperation && BinaryOperation instanceof MemberReference c ReferenceType List BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem Cast ReferenceType List MemberReference c StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeParameter getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss Literal 0 MemberReference mem addParameter getCoreHelper End ReferenceType UMLModelElementOrderedListModel2",0
584,584,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.io.IOException Import java.io.OutputStream Import java.io.Writer Import java.net.URL Import java.util.Collection Import java.util.Collections Import java.util.HashMap Import java.util.Iterator Import java.util.Map Import javax.jmi.model.ModelPackage Import javax.jmi.model.MofPackage Import javax.jmi.reflect.RefObject Import javax.jmi.xmi.MalformedXMIException Import org.apache.log4j.Logger Import org.argouml.model.ActivityGraphsFactory Import org.argouml.model.ActivityGraphsHelper Import org.argouml.model.AggregationKind Import org.argouml.model.ChangeableKind Import org.argouml.model.CollaborationsFactory Import org.argouml.model.CollaborationsHelper Import org.argouml.model.CommandStack Import org.argouml.model.CommonBehaviorFactory Import org.argouml.model.CommonBehaviorHelper Import org.argouml.model.ConcurrencyKind Import org.argouml.model.CoreFactory Import org.argouml.model.CoreHelper Import org.argouml.model.DataTypesFactory Import org.argouml.model.DataTypesHelper Import org.argouml.model.DefaultCommandStack Import org.argouml.model.DiagramInterchangeModel Import org.argouml.model.DirectionKind Import org.argouml.model.ExtensionMechanismsFactory Import org.argouml.model.ExtensionMechanismsHelper Import org.argouml.model.Facade Import org.argouml.model.MetaTypes Import org.argouml.model.ModelEventPump Import org.argouml.model.ModelImplementation Import org.argouml.model.ModelManagementFactory Import org.argouml.model.ModelManagementHelper Import org.argouml.model.OrderingKind Import org.argouml.model.PseudostateKind Import org.argouml.model.ScopeKind Import org.argouml.model.StateMachinesFactory Import org.argouml.model.StateMachinesHelper Import org.argouml.model.UUIDManager Import org.argouml.model.UmlException Import org.argouml.model.UmlFactory Import org.argouml.model.UmlHelper Import org.argouml.model.UseCasesFactory Import org.argouml.model.UseCasesHelper Import org.argouml.model.VisibilityKind Import org.argouml.model.XmiReader Import org.argouml.model.XmiWriter Import org.netbeans.api.mdr.CreationFailedException Import org.netbeans.api.mdr.MDRManager Import org.netbeans.api.mdr.MDRepository Import org.netbeans.api.xmi.XMIReader Import org.netbeans.api.xmi.XMIReaderFactory Import org.omg.uml.UmlPackage ClassDeclaration Modifier public /**
 * The handle to find all helper and factories.
 */ MDRModelImplementation FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType MDRModelImplementation getLogger FieldDeclaration Modifier private ReferenceType Facade VariableDeclarator theFacade FieldDeclaration Modifier private ReferenceType ModelEventPumpMDRImpl VariableDeclarator theModelEventPump FieldDeclaration Modifier private ReferenceType CopyHelper VariableDeclarator theCopyHelper FieldDeclaration Modifier private ReferenceType ActivityGraphsHelper VariableDeclarator theActivityGraphsHelper FieldDeclaration Modifier private ReferenceType CoreHelper VariableDeclarator theCoreHelper FieldDeclaration Modifier private ReferenceType MetaTypes VariableDeclarator theMetaTypes ClassCreator ReferenceType MetaTypesMDRImpl FieldDeclaration Modifier private ReferenceType ModelManagementFactory VariableDeclarator theModelManagementFactory FieldDeclaration Modifier private ReferenceType ModelManagementHelper VariableDeclarator theModelManagementHelper FieldDeclaration Modifier private ReferenceType StateMachinesHelper VariableDeclarator theStateMachinesHelper FieldDeclaration Modifier private ReferenceType UmlFactory VariableDeclarator theUmlFactory FieldDeclaration Modifier private ReferenceType UmlHelper VariableDeclarator theUmlHelper FieldDeclaration Modifier private ReferenceType UseCasesFactory VariableDeclarator theUseCasesFactory FieldDeclaration Modifier private ReferenceType UseCasesHelper VariableDeclarator theUseCasesHelper FieldDeclaration Modifier private ReferenceType ActivityGraphsFactory VariableDeclarator theActivityGraphsFactory FieldDeclaration Modifier private ReferenceType CollaborationsFactory VariableDeclarator theCollaborationsFactory FieldDeclaration Modifier private ReferenceType CollaborationsHelper VariableDeclarator theCollaborationsHelper FieldDeclaration Modifier private ReferenceType CommonBehaviorFactory VariableDeclarator theCommonBehaviorFactory FieldDeclaration Modifier private ReferenceType CommonBehaviorHelper VariableDeclarator theCommonBehaviorHelper FieldDeclaration Modifier private ReferenceType DataTypesFactory VariableDeclarator theDataTypesFactory FieldDeclaration Modifier private ReferenceType DataTypesHelper VariableDeclarator theDataTypesHelper FieldDeclaration Modifier private ReferenceType ExtensionMechanismsFactory VariableDeclarator theExtensionMechanismsFactory FieldDeclaration Modifier private ReferenceType ExtensionMechanismsHelper VariableDeclarator theExtensionMechanismsHelper FieldDeclaration Modifier private ReferenceType StateMachinesFactory VariableDeclarator theStateMachinesFactory FieldDeclaration Modifier private ReferenceType CoreFactory VariableDeclarator theCoreFactory FieldDeclaration Modifier private ReferenceType KindsMDRImpl VariableDeclarator theKindsObject FieldDeclaration Modifier private ReferenceType MDRepository VariableDeclarator repository FieldDeclaration /**
     * Package containing user UML model.
     */ Modifier private ReferenceType UmlPackage VariableDeclarator umlPackage FieldDeclaration /**
     * MOF Package containing UML metamodel (M2).
     */ Modifier private ReferenceType MofPackage VariableDeclarator mofPackage FieldDeclaration /**
     * Top level MOF extent.
     */ Modifier private ReferenceType ModelPackage VariableDeclarator mofExtent FieldDeclaration /**
     * Top level model element containing profile. This state is shared between
     * the XMI reader and writer. Elements which are read as part of a profile
     * (as indicated by the calling application) will be treated specially and
     * will not be written back out with the rest of the model data.
     */ Modifier private ReferenceType Collection TypeArgument ReferenceType RefObject VariableDeclarator profileElements FieldDeclaration /**
     * Map of model elements to xmi.ids used to keep xmi.ids stable
     * across read/write cycles.
     */ Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType XmiReference VariableDeclarator objectToId MethodInvocation Collections ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType XmiReference synchronizedMap MethodDeclaration /**
     * @return Returns the root UML Factory package for user model.
     */ ReferenceType UmlPackage getUmlPackage ReturnStatement MemberReference umlPackage MethodDeclaration /**
     * @return MOF Package containing UML metamodel (M2).
     */ ReferenceType MofPackage getMofPackage ReturnStatement MemberReference mofPackage MethodDeclaration /**
     * @return Top level MOF extent.
     */ ReferenceType ModelPackage getModelPackage ReturnStatement MemberReference mofExtent MethodDeclaration /**
     * @return The MDRepository.
     */ ReferenceType MDRepository getRepository ReturnStatement MemberReference repository FieldDeclaration Modifier final static ReferenceType String VariableDeclarator MOF_EXTENT_NAME Literal ""MOF Extent"" FieldDeclaration Modifier final static ReferenceType String VariableDeclarator MODEL_EXTENT_NAME Literal ""model extent"" FieldDeclaration /**
     * UML 1.4 metamodel definition in XMI format.
     */ Modifier final static ReferenceType String VariableDeclarator METAMODEL_URL Literal ""mof/01-02-15_Diff.xml"" ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @throws UmlException if construction fails.  Some possible nested 
     * exceptions include:
     * <ul>
     * <el>CreationFailedException - If the creation of the Extend fail</el>
     * <el>MalformedXMIException If the XMI is bad formed</el>
     * <el>IOException If there is a problem opening a file</el>
     * </ul>
     */ MDRModelImplementation UmlException StatementExpression MethodInvocation LOG Literal ""Starting MDR system initialization"" debug LocalVariableDeclaration ReferenceType String VariableDeclarator storageImplementation MethodInvocation System Literal ""org.netbeans.mdr.storagemodel.StorageFactoryClassName"" Literal ""org.netbeans.mdr.persistence.memoryimpl.StorageFactoryImpl"" getProperty StatementExpression MethodInvocation System Literal ""org.netbeans.mdr.storagemodel.StorageFactoryClassName"" MemberReference storageImplementation setProperty StatementExpression MethodInvocation System Literal ""MDRStorageProperty.org.netbeans.mdr.persistence.memoryimpl.id"" MethodInvocation UUIDManager MethodInvocation getNewUUID getInstance setProperty StatementExpression Assignment MemberReference repository MethodInvocation MDRManager MethodInvocation getDefaultRepository getDefault = StatementExpression MethodInvocation LOG Literal ""MDR Init - got default repository"" debug StatementExpression Assignment MemberReference mofExtent Cast ReferenceType ModelPackage MethodInvocation repository MemberReference MOF_EXTENT_NAME getExtent = StatementExpression MethodInvocation LOG Literal ""MDR Init - tried to get MOF extent"" debug IfStatement BinaryOperation == MemberReference mofExtent Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference mofExtent Cast ReferenceType ModelPackage MethodInvocation repository MemberReference MOF_EXTENT_NAME createExtent = CatchClause CatchClauseParameter CreationFailedException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e StatementExpression MethodInvocation LOG Literal ""MDR Init - created MOF extent"" debug LocalVariableDeclaration ReferenceType XMIReader VariableDeclarator reader MethodInvocation XMIReaderFactory MethodInvocation createXMIReader getDefault StatementExpression MethodInvocation LOG Literal ""MDR Init - created XMI reader"" debug LocalVariableDeclaration ReferenceType String VariableDeclarator metafacade MethodInvocation System Literal ""argouml.model.mdr.facade"" MemberReference METAMODEL_URL getProperty LocalVariableDeclaration ReferenceType URL VariableDeclarator resource MethodInvocation MethodInvocation MemberReference metafacade getResource getClass TryStatement StatementExpression MethodInvocation reader MethodInvocation resource toString MemberReference mofExtent read CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e CatchClause CatchClauseParameter MalformedXMIException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e StatementExpression MethodInvocation LOG Literal ""MDR Init - read UML metamodel"" debug End StatementExpression Assignment MemberReference mofPackage Literal null = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation mofExtent MethodInvocation refAllOfClass MethodInvocation iterator getMofPackage MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType MofPackage VariableDeclarator pkg Cast ReferenceType MofPackage MethodInvocation iter next IfStatement Literal MethodInvocation MethodInvocation pkg getName equals ""UML"" BlockStatement StatementExpression Assignment MemberReference mofPackage MemberReference pkg = BreakStatement End End StatementExpression Assignment MemberReference umlPackage Cast ReferenceType UmlPackage MethodInvocation repository MemberReference MODEL_EXTENT_NAME getExtent = StatementExpression MethodInvocation LOG Literal ""MDR Init - tried to get UML extent"" debug IfStatement BinaryOperation != MemberReference umlPackage Literal null BlockStatement StatementExpression MethodInvocation umlPackage refDelete StatementExpression Assignment MemberReference umlPackage Literal null = StatementExpression MethodInvocation LOG BinaryOperation + Literal ""MDR Init - UML extent existed - "" Literal ""deleted it and all UML data"" debug End TryStatement StatementExpression Assignment MemberReference umlPackage Cast ReferenceType UmlPackage MethodInvocation repository MemberReference MODEL_EXTENT_NAME MemberReference mofPackage createExtent = CatchClause CatchClauseParameter CreationFailedException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e StatementExpression MethodInvocation LOG Literal ""MDR Init - created UML extent"" debug IfStatement BinaryOperation == MemberReference umlPackage Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UmlException Literal ""Could not create UML extent"" End StatementExpression Assignment MemberReference theModelEventPump ClassCreator ReferenceType ModelEventPumpMDRImpl This MemberReference repository = StatementExpression MethodInvocation theModelEventPump startPumpingEvents StatementExpression MethodInvocation LOG Literal ""MDR Init - event pump started"" debug StatementExpression Assignment MemberReference theDataTypesFactory ClassCreator ReferenceType DataTypesFactoryMDRImpl This = StatementExpression Assignment MemberReference theDataTypesHelper ClassCreator ReferenceType DataTypesHelperMDRImpl This = StatementExpression Assignment MemberReference theKindsObject ClassCreator ReferenceType KindsMDRImpl This = StatementExpression Assignment MemberReference theModelManagementFactory ClassCreator ReferenceType ModelManagementFactoryMDRImpl This = StatementExpression Assignment MemberReference theExtensionMechanismsHelper ClassCreator ReferenceType ExtensionMechanismsHelperMDRImpl This = StatementExpression Assignment MemberReference theExtensionMechanismsFactory ClassCreator ReferenceType ExtensionMechanismsFactoryMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - initialized package Extension mechanism"" debug StatementExpression Assignment MemberReference theCopyHelper ClassCreator ReferenceType CopyHelper This = StatementExpression Assignment MemberReference theActivityGraphsHelper ClassCreator ReferenceType ActivityGraphsHelperMDRImpl = StatementExpression Assignment MemberReference theCoreHelper ClassCreator ReferenceType UndoCoreHelperDecorator ClassCreator ReferenceType CoreHelperMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - initialized package Core helper"" debug StatementExpression Assignment MemberReference theModelManagementHelper ClassCreator ReferenceType ModelManagementHelperMDRImpl This = StatementExpression Assignment MemberReference theStateMachinesHelper ClassCreator ReferenceType StateMachinesHelperMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - initialized package StateMachines"" debug StatementExpression Assignment MemberReference theUseCasesFactory ClassCreator ReferenceType UseCasesFactoryMDRImpl This = StatementExpression Assignment MemberReference theUseCasesHelper ClassCreator ReferenceType UseCasesHelperMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - initialized package Use Cases"" debug StatementExpression Assignment MemberReference theActivityGraphsFactory ClassCreator ReferenceType ActivityGraphsFactoryMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - initialized package Collaborations"" debug StatementExpression Assignment MemberReference theCommonBehaviorFactory ClassCreator ReferenceType CommonBehaviorFactoryMDRImpl This = StatementExpression Assignment MemberReference theCommonBehaviorHelper ClassCreator ReferenceType CommonBehaviorHelperMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - initialized package CommonBehavior"" debug StatementExpression Assignment MemberReference theStateMachinesFactory ClassCreator ReferenceType StateMachinesFactoryMDRImpl This = StatementExpression Assignment MemberReference theCoreFactory ClassCreator ReferenceType CoreFactoryMDRImpl This = StatementExpression MethodInvocation LOG Literal ""MDR Init - all packages initialized"" debug MethodDeclaration /**
     * Shutdown repository in a graceful fashion
     * (currently unused).
     */ Modifier public shutdown StatementExpression MethodInvocation theModelEventPump flushModelEvents StatementExpression MethodInvocation theModelEventPump stopPumpingEvents StatementExpression MethodInvocation MDRManager MethodInvocation shutdownAll getDefault MethodDeclaration Modifier public ReferenceType DiagramInterchangeModel getDiagramInterchangeModel ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Facade getFacade IfStatement BinaryOperation == MemberReference theFacade Literal null BlockStatement StatementExpression Assignment MemberReference theFacade ClassCreator ReferenceType FacadeMDRImpl This = End ReturnStatement MemberReference theFacade MethodDeclaration Modifier public ReferenceType ModelEventPump getModelEventPump ReturnStatement MemberReference theModelEventPump MethodDeclaration Modifier public ReferenceType ActivityGraphsFactory getActivityGraphsFactory ReturnStatement MemberReference theActivityGraphsFactory MethodDeclaration Modifier public ReferenceType ActivityGraphsHelper getActivityGraphsHelper ReturnStatement MemberReference theActivityGraphsHelper MethodDeclaration Modifier public ReferenceType CollaborationsFactory getCollaborationsFactory IfStatement BinaryOperation == MemberReference theCollaborationsFactory Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsFactory ClassCreator ReferenceType CollaborationsFactoryMDRImpl This = End ReturnStatement MemberReference theCollaborationsFactory MethodDeclaration Modifier public ReferenceType CollaborationsHelper getCollaborationsHelper IfStatement BinaryOperation == MemberReference theCollaborationsHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsHelper ClassCreator ReferenceType CollaborationsHelperMDRImpl This = End ReturnStatement MemberReference theCollaborationsHelper MethodDeclaration Modifier public ReferenceType CommonBehaviorFactory getCommonBehaviorFactory ReturnStatement MemberReference theCommonBehaviorFactory MethodDeclaration Modifier public ReferenceType CommonBehaviorHelper getCommonBehaviorHelper ReturnStatement MemberReference theCommonBehaviorHelper MethodDeclaration Modifier public ReferenceType org ReferenceType argouml ReferenceType model ReferenceType CopyHelper getCopyHelper ReturnStatement MemberReference theCopyHelper MethodDeclaration Modifier public ReferenceType CoreFactory getCoreFactory ReturnStatement MemberReference theCoreFactory MethodDeclaration Modifier public ReferenceType CoreHelper getCoreHelper ReturnStatement MemberReference theCoreHelper MethodDeclaration Modifier public ReferenceType DataTypesFactory getDataTypesFactory ReturnStatement MemberReference theDataTypesFactory MethodDeclaration Modifier public ReferenceType DataTypesHelper getDataTypesHelper ReturnStatement MemberReference theDataTypesHelper MethodDeclaration Modifier public ReferenceType ExtensionMechanismsFactory getExtensionMechanismsFactory ReturnStatement MemberReference theExtensionMechanismsFactory MethodDeclaration Modifier public ReferenceType ExtensionMechanismsHelper getExtensionMechanismsHelper ReturnStatement MemberReference theExtensionMechanismsHelper MethodDeclaration Modifier public ReferenceType ModelManagementFactory getModelManagementFactory ReturnStatement MemberReference theModelManagementFactory MethodDeclaration Modifier public ReferenceType ModelManagementHelper getModelManagementHelper ReturnStatement MemberReference theModelManagementHelper MethodDeclaration Modifier public ReferenceType StateMachinesFactory getStateMachinesFactory ReturnStatement MemberReference theStateMachinesFactory MethodDeclaration Modifier public ReferenceType StateMachinesHelper getStateMachinesHelper ReturnStatement MemberReference theStateMachinesHelper MethodDeclaration Modifier public ReferenceType UmlFactory getUmlFactory IfStatement BinaryOperation == MemberReference theUmlFactory Literal null BlockStatement StatementExpression Assignment MemberReference theUmlFactory ClassCreator ReferenceType UmlFactoryMDRImpl This = End ReturnStatement MemberReference theUmlFactory MethodDeclaration Modifier public ReferenceType UmlHelper getUmlHelper IfStatement BinaryOperation == MemberReference theUmlHelper Literal null BlockStatement StatementExpression Assignment MemberReference theUmlHelper ClassCreator ReferenceType UmlHelperMDRImpl This = End ReturnStatement MemberReference theUmlHelper MethodDeclaration Modifier public ReferenceType UseCasesFactory getUseCasesFactory ReturnStatement MemberReference theUseCasesFactory MethodDeclaration Modifier public ReferenceType UseCasesHelper getUseCasesHelper ReturnStatement MemberReference theUseCasesHelper MethodDeclaration Modifier public ReferenceType MetaTypes getMetaTypes ReturnStatement MemberReference theMetaTypes MethodDeclaration Modifier public ReferenceType ChangeableKind getChangeableKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType AggregationKind getAggregationKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType PseudostateKind getPseudostateKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType ScopeKind getScopeKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType ConcurrencyKind getConcurrencyKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType DirectionKind getDirectionKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType OrderingKind getOrderingKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType VisibilityKind getVisibilityKind ReturnStatement MemberReference theKindsObject MethodDeclaration Modifier public ReferenceType XmiReader getXmiReader UmlException LocalVariableDeclaration ReferenceType XmiReader VariableDeclarator reader ClassCreator ReferenceType XmiReaderImpl This MemberReference umlPackage ReturnStatement MemberReference reader MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType XmiWriter getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType Writer writer FormalParameter ReferenceType String version UmlException ReturnStatement ClassCreator ReferenceType XmiWriterMDRImpl This MemberReference model MemberReference writer MemberReference version MethodDeclaration Modifier public ReferenceType XmiWriter getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType OutputStream stream FormalParameter ReferenceType String version UmlException ReturnStatement ClassCreator ReferenceType XmiWriterMDRImpl This MemberReference model MemberReference stream MemberReference version MethodDeclaration /**
     * @return the collection of model elements which make up the profile.
     */ Modifier protected ReferenceType Collection TypeArgument ReferenceType RefObject getProfileElements ReturnStatement MemberReference profileElements MethodDeclaration /**
     * Save the given elements as belonging to the profile.
     * @param elements collection of model elements.
     */ Modifier protected setProfileElements FormalParameter ReferenceType Collection TypeArgument ReferenceType RefObject elements StatementExpression Assignment MemberReference profileElements MemberReference elements = MethodDeclaration /**
     * Return the Object to ID Map.
     *
     * @return the map
     */ Modifier protected ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType XmiReference getObjectToId ReturnStatement MemberReference objectToId MethodDeclaration Modifier public ReferenceType CommandStack getCommandStack ReturnStatement ClassCreator ReferenceType DefaultCommandStack ReferenceType ModelImplementation",0
185,185,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.Insets Import javax.swing.JCheckBox Import javax.swing.JPanel Import org.argouml.application.api.Argo Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator ClassDeclaration /**
 * Settings tab panel for handling ArgoUML application related settings.
 *
 * @author Thierry Lach
 * @since  0.9.4
 */ SettingsTabPreferences FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator chkSplash FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator chkReloadRecent FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator chkStripDiagrams ConstructorDeclaration /**
     * The constructor.
     *
     */ SettingsTabPreferences StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration ReferenceType JPanel VariableDeclarator top ClassCreator ReferenceType JPanel StatementExpression MethodInvocation top ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator checkConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference checkConstraints anchor MemberReference GridBagConstraints LINE_START = StatementExpression Assignment MemberReference checkConstraints gridy Literal 0 = StatementExpression Assignment MemberReference checkConstraints gridx Literal 0 = StatementExpression Assignment MemberReference checkConstraints gridwidth Literal 1 = StatementExpression Assignment MemberReference checkConstraints gridheight Literal 1 = StatementExpression Assignment MemberReference checkConstraints insets ClassCreator ReferenceType Insets Literal 4 Literal 10 Literal 0 Literal 10 = StatementExpression Assignment MemberReference checkConstraints gridy Literal 2 = LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j ClassCreator ReferenceType JCheckBox MethodInvocation Translator Literal ""label.splash"" localize StatementExpression Assignment MemberReference chkSplash MemberReference j = StatementExpression MethodInvocation top MemberReference chkSplash MemberReference checkConstraints add StatementExpression MemberReference ++ checkConstraints gridy LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j2 ClassCreator ReferenceType JCheckBox MethodInvocation Translator Literal ""label.reload-recent"" localize StatementExpression Assignment MemberReference chkReloadRecent MemberReference j2 = StatementExpression MethodInvocation top MemberReference chkReloadRecent MemberReference checkConstraints add StatementExpression MemberReference ++ checkConstraints gridy LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j3 ClassCreator ReferenceType JCheckBox MethodInvocation Translator Literal ""label.strip-diagrams"" localize StatementExpression Assignment MemberReference chkStripDiagrams MemberReference j3 = StatementExpression MethodInvocation top MemberReference chkStripDiagrams MemberReference checkConstraints add StatementExpression Assignment MemberReference checkConstraints fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression MethodInvocation MemberReference top MemberReference BorderLayout NORTH add MethodDeclaration Modifier public handleSettingsTabRefresh StatementExpression MethodInvocation chkSplash MethodInvocation Configuration MemberReference Argo KEY_SPLASH Literal true getBoolean setSelected StatementExpression MethodInvocation chkReloadRecent MethodInvocation Configuration MemberReference Argo KEY_RELOAD_RECENT_PROJECT Literal false getBoolean setSelected StatementExpression MethodInvocation chkStripDiagrams MethodInvocation Configuration MemberReference Argo KEY_XMI_STRIP_DIAGRAMS Literal false getBoolean setSelected MethodDeclaration Modifier public handleSettingsTabSave StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SPLASH MethodInvocation chkSplash isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Argo KEY_RELOAD_RECENT_PROJECT MethodInvocation chkReloadRecent isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Argo KEY_XMI_STRIP_DIAGRAMS MethodInvocation chkStripDiagrams isSelected setBoolean MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation handleSettingsTabRefresh MethodDeclaration Modifier public handleResetToDefault MethodDeclaration Modifier public ReferenceType JPanel getTabPanel ReturnStatement This MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal ""tab.preferences"" FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 340220974967836979L ReferenceType JPanel ReferenceType GUISettingsTabInterface",0
318,318,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Oct 12, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLModelElementSourceFlowListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLModelElementSourceFlowListModel.
     */ UMLModelElementSourceFlowListModel StatementExpression SuperConstructorInvocation Literal ""sourceFlow"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getSourceFlows getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAFlow getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getSourceFlows MethodInvocation MemberReference o contains getFacade ReferenceType UMLModelElementListModel2",0
974,974,,0
26,26,"CompilationUnit PackageDeclaration org.argouml.cognitive.checklist Import java.io.Serializable Import java.util.ArrayList Import java.util.Collections Import java.util.Enumeration Import java.util.List Import java.util.Vector ClassDeclaration Modifier public /**
 * A Checklist is basically a list of CheckItems.  It also provides
 * some convenience functions for adding trivial CheckItems (ones that
 * have no predicate).
 *
 * In ArgoUML, Checklists are shown in the TabChecklist panel.
 *
 * @see org.argouml.cognitive.checklist.ui.TabChecklist
 *
 * @author Jason Robbins
 */ Checklist FieldDeclaration Modifier private ReferenceType String VariableDeclarator nextCategory Literal ""General"" ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ Checklist StatementExpression SuperConstructorInvocation MethodDeclaration /**
     * @return the items
     * @deprecated for 0.25.4 by tfmorris.  Use {@link #getCheckItemList()}.
     */ Modifier public Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType CheckItem getCheckItems ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType CheckItem This MethodDeclaration /**
     * @return the items
     */ Modifier public ReferenceType List TypeArgument ReferenceType CheckItem getCheckItemList ReturnStatement This MethodDeclaration /**
     * @param item the item to be added to the list
     * @deprecated for 0.25.4 by tfmorris. Use {@link #add(CheckItem)}.
     */ Modifier public Annotation Deprecated addItem FormalParameter ReferenceType CheckItem item StatementExpression MethodInvocation MemberReference item add MethodDeclaration /**
     * @param item the item to be removed
     * @deprecated for 0.25.4 by tfmorris. Use {@link #remove(CheckItem)}.
     */ Modifier public Annotation Deprecated removeItem FormalParameter ReferenceType CheckItem item StatementExpression MethodInvocation MemberReference item remove MethodDeclaration /**
     * @param description the description for a new item
     */ Modifier public addItem FormalParameter ReferenceType String description StatementExpression MethodInvocation ClassCreator ReferenceType CheckItem MemberReference nextCategory MemberReference description add MethodDeclaration /**
     * Replace the list by the given new list.
     *
     * @param list the given new list
     */ Modifier public synchronized addAll FormalParameter ReferenceType Checklist list ForStatement EnhancedForControl VariableDeclaration ReferenceType CheckItem VariableDeclarator item MemberReference list BlockStatement StatementExpression MethodInvocation MemberReference item add End MethodDeclaration /**
     * @return an enumeration of the list
     * @deprecated for 0.25.4 by tfmorris.
     */ Modifier public Annotation Deprecated ReferenceType Enumeration TypeArgument ReferenceType CheckItem elements ReturnStatement MethodInvocation Collections This enumeration MethodDeclaration /**
     * @param index the position of the item to retrieve
     * @return the item
     * @deprecated for 0.25.4 by tfmorris. Use {@link #get(int)}. 
     */ Modifier public Annotation Deprecated ReferenceType CheckItem elementAt FormalParameter BasicType int index ReturnStatement MethodInvocation MemberReference index get MethodDeclaration /**
     * @param cat the category
     */ Modifier public setNextCategory FormalParameter ReferenceType String cat StatementExpression Assignment MemberReference nextCategory MemberReference cat = MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb BinaryOperation + MethodInvocation MethodInvocation getName getClass Literal "" {\n"" append ForStatement EnhancedForControl VariableDeclaration ReferenceType CheckItem VariableDeclarator item This BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal ""    "" MethodInvocation item toString Literal ""\n"" append End StatementExpression MethodInvocation sb Literal ""  }"" append ReturnStatement MethodInvocation sb toString ReferenceType ArrayList TypeArgument ReferenceType CheckItem ReferenceType List TypeArgument ReferenceType CheckItem ReferenceType Serializable",0
527,527,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * This class provides a text field that can be used to access
 * tagged values of a ModelElement object.
 * UMLModelElementTaggedValueDocument is especially useful when
 * using LabelledLayout.
 *
 * @since 5th April 2003
 * @author Raphael Langerhorst (raphael-langerhorst@gmx.at)
 */ UMLModelElementTaggedValueDocument ConstructorDeclaration Modifier public /**
     * Creates a UMLPlainTextDocument object that represents a tagged value of
     * an ModelElement object.
     *
     * @param taggedValue the tagged value
     */ UMLModelElementTaggedValueDocument FormalParameter ReferenceType String taggedValue StatementExpression SuperConstructorInvocation MemberReference taggedValue MethodDeclaration /**
     * Sets the tagged value to given String.
     *
     * @param text the property
     */ Modifier protected setProperty FormalParameter ReferenceType String text IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation getEventName MemberReference text setTaggedValue getCoreHelper End MethodDeclaration /**
     *
     * @return the value of the tagged value
     */ Modifier protected ReferenceType String getProperty LocalVariableDeclaration ReferenceType String VariableDeclarator eventName MethodInvocation getEventName IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator taggedValue MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference eventName getTaggedValue getFacade IfStatement BinaryOperation != MemberReference taggedValue Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference taggedValue getValueOfTag getFacade End End ReturnStatement Literal """" ReferenceType UMLPlainTextDocument",0
485,485,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.ArrayList Import java.util.Collection Import java.util.HashSet Import java.util.List Import java.util.Set Import javax.jmi.reflect.InvalidObjectException Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.argouml.model.UseCasesHelper Import org.omg.uml.behavioralelements.usecases.Actor Import org.omg.uml.behavioralelements.usecases.Extend Import org.omg.uml.behavioralelements.usecases.ExtensionPoint Import org.omg.uml.behavioralelements.usecases.Include Import org.omg.uml.behavioralelements.usecases.UseCase Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.UmlClass Import org.omg.uml.foundation.datatypes.BooleanExpression Import org.omg.uml.modelmanagement.Subsystem ClassDeclaration /**
 * UseCase Helper for MDR ModelImplementation.<p>
 *
 * @since ARGO0.19.5
 * @author Ludovic Ma&icirc;tre
 * @author Tom Morris

 */ UseCasesHelperMDRImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl ConstructorDeclaration /**
     * Constructor.
     *
     * @param implementation
     *            To get other helpers and factories.
     */ UseCasesHelperMDRImpl FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UseCase getAllUseCases FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UseCase VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UseCase TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference o getAllUseCases addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType UseCase BlockStatement StatementExpression MethodInvocation list Cast ReferenceType UseCase MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Actor getAllActors FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Actor VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Actor TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference o getAllActors addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Actor BlockStatement StatementExpression MethodInvocation list Cast ReferenceType Actor MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UseCase getExtendedUseCases FormalParameter ReferenceType Object ausecase IfStatement BinaryOperation == MemberReference ausecase Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UseCase End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UseCase VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UseCase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator usecase Cast ReferenceType UseCase MemberReference ausecase TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Extend VariableDeclarator extend MethodInvocation usecase getExtend BlockStatement StatementExpression MethodInvocation list MethodInvocation extend getBase add End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UseCase getExtendingUseCases FormalParameter ReferenceType Object usecase IfStatement BinaryOperation == MemberReference usecase Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UseCase End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UseCase VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UseCase TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Extend VariableDeclarator ext Cast ReferenceType Collection TypeArgument ReferenceType Extend MethodInvocation Model MethodInvocation MemberReference usecase getExtenders getFacade BlockStatement LocalVariableDeclaration ReferenceType UseCase VariableDeclarator extension MethodInvocation ext getExtension StatementExpression MethodInvocation list MemberReference extension add End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Extend getExtends FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object anextension IfStatement BinaryOperation || BinaryOperation instanceof MemberReference abase ReferenceType UseCase BinaryOperation instanceof MemberReference anextension ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType UseCase VariableDeclarator base Cast ReferenceType UseCase MemberReference abase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator extension Cast ReferenceType UseCase MemberReference anextension TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Extend VariableDeclarator extend MethodInvocation extension getExtend BlockStatement IfStatement BinaryOperation == MethodInvocation extend getBase MemberReference base BlockStatement ReturnStatement MemberReference extend End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UseCase getIncludedUseCases FormalParameter ReferenceType Object ausecase IfStatement BinaryOperation instanceof MemberReference ausecase ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UseCase VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UseCase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator usecase Cast ReferenceType UseCase MemberReference ausecase TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator include MethodInvocation usecase getInclude BlockStatement LocalVariableDeclaration ReferenceType UseCase VariableDeclarator addition MethodInvocation include getBase StatementExpression MethodInvocation result MemberReference addition add End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Include getIncludes FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object aninclusion IfStatement BinaryOperation || BinaryOperation instanceof MemberReference abase ReferenceType UseCase BinaryOperation instanceof MemberReference aninclusion ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType UseCase VariableDeclarator base Cast ReferenceType UseCase MemberReference abase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator inclusion Cast ReferenceType UseCase MemberReference aninclusion TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator include MethodInvocation inclusion getInclude BlockStatement IfStatement BinaryOperation == MethodInvocation include getBase MemberReference base BlockStatement ReturnStatement MemberReference include End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Collection getSpecificationPath FormalParameter ReferenceType Object ausecase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator uc Cast ReferenceType UseCase MemberReference ausecase LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet TryStatement StatementExpression MethodInvocation set MethodInvocation modelImpl MethodInvocation MemberReference uc getAllSurroundingNamespaces getModelManagementHelper addAll LocalVariableDeclaration ReferenceType Set VariableDeclarator set2 ClassCreator ReferenceType HashSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference set BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference o ReferenceType Subsystem BinaryOperation instanceof MemberReference o ReferenceType UmlClass BlockStatement StatementExpression MethodInvocation set2 MemberReference o add End End ReturnStatement MemberReference set2 CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public setBase FormalParameter ReferenceType Object extend FormalParameter ReferenceType Object base IfStatement BinaryOperation == MemberReference base Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The base cannot be null"" End IfStatement BinaryOperation instanceof MemberReference base ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The base cannot be a "" MethodInvocation base MethodInvocation getName getClass End IfStatement BinaryOperation == MemberReference extend Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""extend"" End IfStatement BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement LocalVariableDeclaration ReferenceType Extend VariableDeclarator theExtend Cast ReferenceType Extend MemberReference extend IfStatement BinaryOperation == MemberReference base MethodInvocation theExtend getBase BlockStatement ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType ExtensionPoint VariableDeclarator point MethodInvocation theExtend getExtensionPoint BlockStatement StatementExpression MethodInvocation MemberReference point MemberReference theExtend removeExtend End LocalVariableDeclaration ReferenceType ExtensionPoint VariableDeclarator point Cast ReferenceType ExtensionPoint MethodInvocation modelImpl MethodInvocation MemberReference base buildExtensionPoint getUseCasesFactory StatementExpression MethodInvocation theExtend Cast ReferenceType UseCase MemberReference base setBase StatementExpression MethodInvocation MemberReference theExtend MemberReference point addExtensionPoint IfStatement BinaryOperation instanceof MemberReference extend ReferenceType Include BlockStatement LocalVariableDeclaration ReferenceType Include VariableDeclarator theInclude Cast ReferenceType Include MemberReference extend IfStatement BinaryOperation == MemberReference base MethodInvocation theInclude getBase BlockStatement ReturnStatement End StatementExpression MethodInvocation theInclude Cast ReferenceType UseCase MemberReference base setAddition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End End MethodDeclaration Modifier public removeExtend FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType UseCase BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference elem ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType ExtensionPoint BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference extend ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""elem: "" MemberReference elem Literal "" or extend: "" MemberReference extend MethodDeclaration Modifier public removeExtensionPoint FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object ep TryStatement IfStatement BinaryOperation instanceof MemberReference ep ReferenceType ExtensionPoint BlockStatement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UseCase BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference elem ReturnStatement End IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference elem ReturnStatement End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""elem: "" MemberReference elem Literal "" or ep: "" MemberReference ep MethodDeclaration Modifier public removeInclude FormalParameter ReferenceType Object usecase FormalParameter ReferenceType Object include TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference usecase ReferenceType UseCase BinaryOperation instanceof MemberReference include ReferenceType Include BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference usecase ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""usecase: "" MemberReference usecase Literal "" or include: "" MemberReference include MethodDeclaration Modifier public addExtend FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType UseCase BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference elem IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType ExtensionPoint BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference extend BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""elem: "" MemberReference elem Literal "" or extend: "" MemberReference extend End End MethodDeclaration Modifier public addExtensionPoint FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object extensionPoint IfStatement BinaryOperation instanceof MemberReference extensionPoint ReferenceType ExtensionPoint BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or extensionPoint: "" MemberReference extensionPoint MethodDeclaration Modifier public addExtensionPoint FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object extensionPoint IfStatement BinaryOperation instanceof MemberReference extensionPoint ReferenceType ExtensionPoint BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or extensionPoint: "" MemberReference extensionPoint MethodDeclaration Modifier public addInclude FormalParameter ReferenceType Object usecase FormalParameter ReferenceType Object include IfStatement BinaryOperation && BinaryOperation instanceof MemberReference usecase ReferenceType UseCase BinaryOperation instanceof MemberReference include ReferenceType Include BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference usecase ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""usecase: "" MemberReference usecase Literal "" or include: "" MemberReference include MethodDeclaration Modifier public setAddition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object useCase IfStatement BinaryOperation instanceof MemberReference useCase ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""A UseCase was expected ["" MemberReference useCase Literal ""]"" End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Include BlockStatement TryStatement StatementExpression Cast ReferenceType Include MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Operation on a removed object ["" MemberReference handle Literal "" or "" MemberReference useCase Literal ""]"" End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setCondition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object booleanExpression IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Extend BinaryOperation instanceof MemberReference booleanExpression ReferenceType BooleanExpression BlockStatement StatementExpression Cast ReferenceType Extend MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or booleanExpression: "" MemberReference booleanExpression MethodDeclaration Modifier public setExtension FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object useCase IfStatement BinaryOperation instanceof MemberReference useCase ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A use case must be supplied"" End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Extend BinaryOperation instanceof MemberReference useCase ReferenceType UseCase BlockStatement TryStatement StatementExpression Cast ReferenceType Extend MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Operation on a removed object ["" MemberReference handle Literal "" or "" MemberReference useCase Literal ""]"" End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or ext: "" MemberReference useCase MethodDeclaration Modifier public setExtensionPoints FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection extensionPoints IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType UseCase BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExtensionPoint VariableDeclarator eps MethodInvocation Model MethodInvocation MemberReference handle getExtensionPoints getFacade IfStatement MethodInvocation ! eps isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExtensionPoint VariableDeclarator extPts ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExtensionPoint MemberReference eps ForStatement EnhancedForControl VariableDeclaration ReferenceType ExtensionPoint VariableDeclarator ep MemberReference extPts BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference ep removeExtensionPoint End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator ep MemberReference extensionPoints BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference ep addExtensionPoint End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or extensionPoints: "" MemberReference extensionPoints MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection includes IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Include VariableDeclarator inc MethodInvocation Model MethodInvocation MemberReference handle getIncludes getFacade IfStatement MethodInvocation ! inc isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Include VariableDeclarator in ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Include MemberReference inc ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator i MemberReference in BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference i removeInclude End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator i Cast ReferenceType Collection TypeArgument ReferenceType Include MemberReference includes BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference i addInclude End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or includes: "" MemberReference includes MethodDeclaration Modifier public setLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType String loc IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ExtensionPoint BlockStatement StatementExpression Cast ReferenceType ExtensionPoint MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setUseCase FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object usecase IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType ExtensionPoint BinaryOperation || BinaryOperation instanceof MemberReference usecase ReferenceType UseCase BinaryOperation == MemberReference usecase Literal null BlockStatement StatementExpression Cast ReferenceType ExtensionPoint MemberReference elem ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""elem: "" MemberReference elem Literal "" or usecase: "" MemberReference usecase ReferenceType UseCasesHelper",0
446,446,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state Import org.argouml.model.Model Import org.tigris.gef.util.Predicate ClassDeclaration Modifier public /**
 * Predicate to test if this is a start state.
 *
 */ PredIsStartState FieldDeclaration /**
     * theInstance is the singleton.
     */ Modifier private static ReferenceType PredIsStartState VariableDeclarator theInstance ClassCreator ReferenceType PredIsStartState ConstructorDeclaration Modifier private PredIsStartState MethodDeclaration Modifier public BasicType boolean predicate FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation && MethodInvocation Model getFacade MethodInvocation Model getPseudostateKind MethodDeclaration /**
     * @return the instance
     */ Modifier public static ReferenceType PredIsStartState getTheInstance ReturnStatement MemberReference theInstance ReferenceType Predicate",0
1578,1578,,0
1271,1271,,0
629,629,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * An interface to be implemented by the class responsible for managing
 * or delegating mementos.
 * 
 * @author Bob Tarling
 * @deprecated in 0.25.4 by Bob Tarling use ModelCommandCreationObserver
 */ MementoCreationObserver MethodDeclaration /**
     * Called whenever a memento is created by the model subsystem.
     * @param memento the memento.
     */ mementoCreated FormalParameter ReferenceType ModelMemento memento",1
1272,1272,,0
330,330,"CompilationUnit PackageDeclaration org.argouml.ui Import javax.swing.Icon Import org.argouml.cognitive.ToDoItem Import org.tigris.gef.presentation.Fig InterfaceDeclaration Modifier public /**
 * This interface represents a ""Clarifier"", i.e. the red wavy line over e.g.
 * a class name, attribute or operation compartiment, to indicate the
 * existence of a critic.
 *
 */ Clarifier MethodDeclaration /**
     * @param f the Fig on which the clarifier is to be painted
     */ Modifier public setFig FormalParameter ReferenceType Fig f MethodDeclaration /**
     * @param i the todo item that is visualised by this clarifier
     */ Modifier public setToDoItem FormalParameter ReferenceType ToDoItem i MethodDeclaration /**
     * Reply true if the given point is inside the given Fig.
     *
     * @param x the x of the given point
     * @param y the y of the given point
     * @return true if hit
     */ Modifier public BasicType boolean hit FormalParameter BasicType int x FormalParameter BasicType int y ReferenceType Icon",0
184,184,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @author jaap.branderhorst@xs4all.nl
 * @since 29 jan 2003
 */ UMLAttributeInitialValueListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLDependencySupplierListModel.
     */ UMLAttributeInitialValueListModel StatementExpression SuperConstructorInvocation Literal ""initialValue"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getInitialValue getFacade addElement End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getInitialValue getFacade MemberReference element ReferenceType UMLModelElementListModel2",1
75,75,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.Iterator Import org.argouml.model.Model Import org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram Import org.argouml.uml.reveng.DiagramInterface Import org.tigris.gef.base.Globals Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * ActionAddAllClassesFromModel enables pasting of an existing node into a
 * Diagram.
 *
 * @author Timothy M. Lebo (Oct 2003)
 * Smart Information Flow Technologies.
 */ ActionAddAllClassesFromModel FieldDeclaration Modifier private ReferenceType Object VariableDeclarator object ConstructorDeclaration Modifier public /**
     * Constructor
     *
     * @param name the name of the action
     * @param o the Diagram
     */ ActionAddAllClassesFromModel FormalParameter ReferenceType String name FormalParameter ReferenceType Object o StatementExpression SuperConstructorInvocation MemberReference name StatementExpression Assignment MemberReference object MemberReference o = MethodDeclaration Modifier public BasicType boolean isEnabled ReturnStatement BinaryOperation instanceof MemberReference object ReferenceType UMLClassDiagram MethodDeclaration /**
     * actionPerformed
     *
     * Finds all of the classes within the same namespace as the
     * UMLClassDiagram that was given to me in my constructor and adds
     * them to the UMLClassDiagram.
     *
     * @param ae - the ActionEvent
     *
     * @author Timothy M. Lebo (Oct 2003)
     * Smart Information Flow Technologies.
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLClassDiagram BlockStatement LocalVariableDeclaration ReferenceType DiagramInterface VariableDeclarator diagram ClassCreator ReferenceType DiagramInterface MethodInvocation Globals curEditor StatementExpression MethodInvocation diagram Cast ReferenceType UMLClassDiagram MemberReference object setCurrentDiagram LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace Cast ReferenceType UMLClassDiagram MemberReference object LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elements MethodInvocation Model MethodInvocation MemberReference namespace getOwnedElements MethodInvocation iterator getFacade WhileStatement MethodInvocation elements hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation elements next IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade MethodInvocation ! Model MethodInvocation MemberReference element isAAssociationClass getFacade BlockStatement StatementExpression MethodInvocation diagram MemberReference element Literal false addClass End End End ReferenceType UndoableAction",0
177,177,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import javax.swing.Action Import javax.swing.ComboBoxModel Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * A searchable combobox. Searchable means that the user only has to type the
 * starting of a modelelement name to select that modelelement. The first
 * modelelement that conforms to the typed text is selected.
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 5, 2003
 */ UMLSearchableComboBox ConstructorDeclaration Modifier public /**
     * Constructor for UMLSearchableComboBox.
     * @param model the model
     * @param selectAction the action for selection
     * @param showIcon true if we show an icon in the list
     */ UMLSearchableComboBox FormalParameter ReferenceType UMLComboBoxModel2 model FormalParameter ReferenceType Action selectAction FormalParameter BasicType boolean showIcon StatementExpression SuperConstructorInvocation MemberReference model MemberReference selectAction MemberReference showIcon ConstructorDeclaration Modifier public /**
     * Constructor for UMLSearchableComboBox.
     * @param arg0 the model
     * @param selectAction the action for selection
     */ UMLSearchableComboBox FormalParameter ReferenceType UMLComboBoxModel2 arg0 FormalParameter ReferenceType Action selectAction StatementExpression ExplicitConstructorInvocation MemberReference arg0 MemberReference selectAction Literal true MethodDeclaration /**
     * Searches amongst the modelelements (the elements in the listmodel) for an
     * item that conforms to the parameter item. If such an element is a
     * ModelElement, the name should start with the item (which is a String).
     * Otherwise the text that is shown in the combobox should start with the
     * text. As the element is found, this is made to the selected item.
     *
     * {@inheritDoc}
     */ Modifier protected doOnEdit FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation MemberReference item search IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation MemberReference element setSelectedItem End MethodDeclaration /**
     * Does the actual searching. Returns the item found or null if there is no
     * item found.
     * @param item the string entered by the user
     * @return Object the found object from the list, or null if none found
     */ Modifier protected ReferenceType Object search FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference item LocalVariableDeclaration ReferenceType ComboBoxModel VariableDeclarator model MethodInvocation getModel ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation model getSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation model MemberReference i getElementAt IfStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement IfStatement BinaryOperation instanceof MethodInvocation getRenderer ReferenceType UMLListCellRenderer2 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator labelText Cast ReferenceType UMLListCellRenderer2 MethodInvocation getRenderer IfStatement BinaryOperation && BinaryOperation != MemberReference labelText Literal null MethodInvocation labelText MemberReference text startsWith BlockStatement ReturnStatement MemberReference element End End IfStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MemberReference element LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference elem getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name MemberReference text startsWith BlockStatement ReturnStatement MemberReference element End End End End ReturnStatement Literal null ReferenceType UMLEditableComboBox",1
1164,1164,,1
277,277,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import java.util.Vector Import javax.jmi.reflect.InvalidObjectException Import org.argouml.model.CommonBehaviorHelper Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.omg.uml.behavioralelements.collaborations.ClassifierRole Import org.omg.uml.behavioralelements.collaborations.Message Import org.omg.uml.behavioralelements.commonbehavior.Action Import org.omg.uml.behavioralelements.commonbehavior.ActionSequence Import org.omg.uml.behavioralelements.commonbehavior.Argument Import org.omg.uml.behavioralelements.commonbehavior.AttributeLink Import org.omg.uml.behavioralelements.commonbehavior.CallAction Import org.omg.uml.behavioralelements.commonbehavior.ComponentInstance Import org.omg.uml.behavioralelements.commonbehavior.CreateAction Import org.omg.uml.behavioralelements.commonbehavior.Instance Import org.omg.uml.behavioralelements.commonbehavior.Link Import org.omg.uml.behavioralelements.commonbehavior.LinkEnd Import org.omg.uml.behavioralelements.commonbehavior.NodeInstance Import org.omg.uml.behavioralelements.commonbehavior.Reception Import org.omg.uml.behavioralelements.commonbehavior.SendAction Import org.omg.uml.behavioralelements.commonbehavior.Signal Import org.omg.uml.behavioralelements.commonbehavior.Stimulus Import org.omg.uml.behavioralelements.statemachines.CallEvent Import org.omg.uml.behavioralelements.statemachines.Guard Import org.omg.uml.behavioralelements.statemachines.SignalEvent Import org.omg.uml.behavioralelements.statemachines.StateVertex Import org.omg.uml.behavioralelements.statemachines.Transition Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.Operation Import org.omg.uml.foundation.core.TaggedValue Import org.omg.uml.foundation.datatypes.ActionExpression Import org.omg.uml.foundation.datatypes.Expression Import org.omg.uml.foundation.datatypes.IterationExpression Import org.omg.uml.foundation.datatypes.ObjectSetExpression ClassDeclaration /**
 * The CommonBehaviorHelper for the MDR ModelImplementation.
 * <p>
 * @since ARGO0.19.5
 * @author Ludovic Ma&icirc;tre
 * @author Tom Morris
 * 
 */ CommonBehaviorHelperMDRImpl FieldDeclaration Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Default constructor
     * 
     * @param implementation
     *            The model implementation
     */ CommonBehaviorHelperMDRImpl FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment This MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object link TryStatement IfStatement BinaryOperation instanceof MemberReference link ReferenceType Link BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference link getSource getCoreHelper End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument is not a link"" MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object link TryStatement IfStatement BinaryOperation instanceof MemberReference link ReferenceType Link BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference link getDestination getCoreHelper End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument is not a link"" MethodDeclaration Modifier public removeActualArgument FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType Argument BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference handle Literal "" or "" MemberReference argument MethodDeclaration Modifier public setActualArguments FormalParameter ReferenceType Object action FormalParameter ReferenceType List arguments TryStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Action MemberReference action StatementExpression Cast ReferenceType Action MemberReference action ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference action Literal "" or "" MemberReference arguments MethodDeclaration Modifier public removeClassifier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Instance BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Instance MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference handle Literal "" or "" MemberReference classifier MethodDeclaration Modifier public removeContext FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object context TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Signal BinaryOperation instanceof MemberReference context ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAContextRaisedSignal MethodInvocation Cast ReferenceType BehavioralFeature MemberReference context Cast ReferenceType Signal MemberReference handle remove getUmlPackage ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference handle Literal "" or "" MemberReference context MethodDeclaration Modifier public removeReception FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object reception TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Signal BinaryOperation instanceof MemberReference reception ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference reception ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference handle Literal "" or "" MemberReference reception MethodDeclaration Modifier public addActualArgument FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType Argument BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference handle Literal "" or "" MemberReference argument MethodDeclaration Modifier public addActualArgument FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType Argument BlockStatement TryStatement StatementExpression Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration Modifier public addClassifier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Instance BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Instance MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Unrecognized object "" MemberReference handle Literal "" or "" MemberReference classifier MethodDeclaration /**
     * Add a context to a Signal.
     * 
     * @param handle The signal
     * @param behavorialFeature The behavorialFeature 
     */ Modifier private addContext FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object behavorialFeature IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Signal BinaryOperation instanceof MemberReference behavorialFeature ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAContextRaisedSignal MethodInvocation Cast ReferenceType BehavioralFeature MemberReference behavorialFeature Cast ReferenceType Signal MemberReference handle add getUmlPackage ReturnStatement End MethodDeclaration /**
     * Add a Reception to a Signal.
     * 
     * @param handle The signal
     * @param rec The Reception 
     */ Modifier private addReception FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object rec IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Signal BinaryOperation instanceof MemberReference rec ReferenceType Reception BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getASignalReception MethodInvocation Cast ReferenceType Signal MemberReference handle Cast ReferenceType Reception MemberReference rec add getUmlPackage ReturnStatement End MethodDeclaration Modifier public addStimulus FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object stimulus IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference handle Literal null BinaryOperation != MemberReference stimulus Literal null BinaryOperation instanceof MemberReference stimulus ReferenceType Stimulus BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Stimulus MemberReference stimulus ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Link BlockStatement StatementExpression Cast ReferenceType Stimulus MemberReference stimulus ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or stimulus: "" MemberReference stimulus MethodDeclaration Modifier public setAsynchronous FormalParameter ReferenceType Object handle FormalParameter BasicType boolean value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setOperation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object operation IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType CallAction BinaryOperation || BinaryOperation == MemberReference operation Literal null BinaryOperation instanceof MemberReference operation ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType CallAction MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType CallEvent BinaryOperation || BinaryOperation == MemberReference operation Literal null BinaryOperation instanceof MemberReference operation ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType CallEvent MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or operation: "" MemberReference operation MethodDeclaration Modifier public setClassifiers FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection classifiers IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance BlockStatement StatementExpression Cast ReferenceType Instance MemberReference handle StatementExpression Cast ReferenceType Instance MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setCommunicationLink FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object c IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BinaryOperation instanceof MemberReference c ReferenceType Link BlockStatement StatementExpression Cast ReferenceType Stimulus MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or c: "" MemberReference c MethodDeclaration Modifier public setComponentInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object c IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Instance BinaryOperation || BinaryOperation == MemberReference c Literal null BinaryOperation instanceof MemberReference c ReferenceType ComponentInstance BlockStatement StatementExpression Cast ReferenceType Instance MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or c: "" MemberReference c MethodDeclaration Modifier public setContexts FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection c IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator actualContexts MethodInvocation Model MethodInvocation MemberReference handle getContexts getFacade IfStatement MethodInvocation ! actualContexts isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator contexts ClassCreator ReferenceType ArrayList MemberReference actualContexts ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator context MemberReference contexts BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference context removeContext End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator context MemberReference c BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference context addContext End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setDispatchAction FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Stimulus MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or value: "" MemberReference value MethodDeclaration Modifier public setInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object inst IfStatement BinaryOperation || BinaryOperation == MemberReference inst Literal null BinaryOperation instanceof MemberReference inst ReferenceType Instance BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkEnd BlockStatement StatementExpression Cast ReferenceType LinkEnd MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink BlockStatement StatementExpression Cast ReferenceType AttributeLink MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or inst: "" MemberReference inst MethodDeclaration Modifier public setNodeInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object nodeInstance IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ComponentInstance BinaryOperation instanceof MemberReference nodeInstance ReferenceType NodeInstance BlockStatement StatementExpression Cast ReferenceType ComponentInstance MemberReference handle ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ComponentInstance BinaryOperation == MemberReference nodeInstance Literal null BlockStatement StatementExpression Cast ReferenceType ComponentInstance MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or nodeInstance: "" MemberReference nodeInstance MethodDeclaration Modifier public setReceiver FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object receiver IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation || BinaryOperation instanceof MemberReference receiver ReferenceType ClassifierRole BinaryOperation == MemberReference receiver Literal null BlockStatement StatementExpression Cast ReferenceType Message MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BinaryOperation instanceof MemberReference receiver ReferenceType Instance BlockStatement StatementExpression Cast ReferenceType Stimulus MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or receiver: "" MemberReference receiver MethodDeclaration Modifier public setReception FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection c IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator actualReceptions MethodInvocation Model MethodInvocation MemberReference handle getReceptions getFacade IfStatement MethodInvocation ! actualReceptions isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator receptions ClassCreator ReferenceType ArrayList MemberReference actualReceptions ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator reception MemberReference receptions BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference reception removeReception End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator reception MemberReference c BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference reception addReception End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setRecurrence FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference expr ReferenceType IterationExpression BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or expr: "" MemberReference expr MethodDeclaration Modifier public setScript FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType ActionExpression BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or expr: "" MemberReference expr MethodDeclaration Modifier public setSender FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sender IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation || BinaryOperation instanceof MemberReference sender ReferenceType ClassifierRole BinaryOperation == MemberReference sender Literal null BlockStatement StatementExpression Cast ReferenceType Message MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BinaryOperation instanceof MemberReference sender ReferenceType Instance BlockStatement StatementExpression Cast ReferenceType Stimulus MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or sender: "" MemberReference sender MethodDeclaration Modifier public setSignal FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object signal IfStatement BinaryOperation || BinaryOperation == MemberReference signal Literal null BinaryOperation instanceof MemberReference signal ReferenceType Signal BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SendAction BlockStatement StatementExpression Cast ReferenceType SendAction MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SignalEvent BlockStatement StatementExpression Cast ReferenceType SignalEvent MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or signal: "" MemberReference signal MethodDeclaration Modifier public setSpecification FormalParameter ReferenceType Object handle FormalParameter ReferenceType String specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference element ReferenceType ObjectSetExpression BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Transition BinaryOperation instanceof MemberReference element ReferenceType StateVertex BlockStatement StatementExpression Cast ReferenceType Transition MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or element: "" MemberReference element MethodDeclaration Modifier public setTransition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object trans IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Guard BlockStatement StatementExpression Cast ReferenceType Guard MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Transition MemberReference trans ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or trans: "" MemberReference trans MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Argument BlockStatement StatementExpression Cast ReferenceType Argument MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink BlockStatement StatementExpression Cast ReferenceType AttributeLink MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BinaryOperation instanceof MemberReference value ReferenceType String BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference handle Cast ReferenceType String MemberReference value setValueOfTag getExtensionMechanismsHelper ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "", value:"" MemberReference value MethodDeclaration Modifier public ReferenceType Classifier getInstantiation FormalParameter ReferenceType Object createaction TryStatement IfStatement BinaryOperation instanceof MemberReference createaction ReferenceType CreateAction BlockStatement ReturnStatement Cast ReferenceType CreateAction MemberReference createaction End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference createaction MethodDeclaration Modifier public setInstantiation FormalParameter ReferenceType Object createaction FormalParameter ReferenceType Object instantiation IfStatement BinaryOperation instanceof MemberReference createaction ReferenceType CreateAction BlockStatement IfStatement BinaryOperation instanceof MemberReference instantiation ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType CreateAction MemberReference createaction ReturnStatement End IfStatement BinaryOperation == MemberReference instantiation Literal null StatementExpression Cast ReferenceType CreateAction MemberReference createaction End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference createaction Literal "", value:"" MemberReference instantiation MethodDeclaration Modifier public ReferenceType Object getActionOwner FormalParameter ReferenceType Object action IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End TryStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference action getStimuli getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference action getStimuli MethodInvocation iterator getFacade IfStatement MethodInvocation iter hasNext BlockStatement ReturnStatement MethodInvocation iter next End End IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference action getMessages getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference action getMessages MethodInvocation iterator getFacade IfStatement MethodInvocation iter hasNext BlockStatement ReturnStatement MethodInvocation iter next End End IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference action getTransition getFacade Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference action getTransition getFacade End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public addAction FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object action IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End TryStatement StatementExpression Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public addAction FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object action IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End TryStatement StatementExpression Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public removeAction FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object action IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End TryStatement StatementExpression Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReferenceType CommonBehaviorHelper",0
393,393,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Graphics Import org.tigris.gef.base.SelectionReshape Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 *
 *
 *
 * @author jrobbins
 */ SelectionEdgeClarifiers ConstructorDeclaration Modifier public /** Construct a new SelectionEdgeClarifiers for the given Fig
     *
     * @param f the given fig
     */ SelectionEdgeClarifiers FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration /** Paint the handles at the four corners and midway along each edge
     * of the bounding box.
     *
     * @see org.tigris.gef.base.Selection#paint(java.awt.Graphics)
     */ Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression Cast ReferenceType FigEdgeModelElement MethodInvocation getContent StatementExpression SuperMethodInvocation MemberReference g paint ReferenceType SelectionReshape",0
1367,1367,,0
878,878,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import java.awt.Rectangle Import java.awt.event.InputEvent Import java.awt.event.MouseEvent Import java.util.List Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.static_structure.ui.SelectionClass Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigGroup ClassDeclaration Modifier public abstract /**
 * Class to display graphics for a node with compartments in a diagram.<p>
 *
 * Note that the upper line of the name box will be blanked out
 * if there is eventually a stereotype above.
 */ FigCompartmentBox FieldDeclaration /**
     * Text highlighted by mouse actions on the diagram.<p>
     */ Modifier private ReferenceType CompartmentFigText VariableDeclarator highlightedFigText FieldDeclaration Modifier private ReferenceType Fig VariableDeclarator borderFig ConstructorDeclaration Modifier public /**
     * Constructor.
     */ FigCompartmentBox StatementExpression MethodInvocation MethodInvocation Literal true setFilled getStereotypeFig StatementExpression MethodInvocation MethodInvocation Literal 1 setLineWidth getStereotypeFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference STEREOHEIGHT Literal 1 setHeight getStereotypeFig StatementExpression Assignment MemberReference borderFig ClassCreator ReferenceType FigEmptyRect Literal 10 Literal 10 Literal 0 Literal 0 = StatementExpression MethodInvocation borderFig Literal 1 setLineWidth StatementExpression MethodInvocation borderFig MemberReference Color black setLineColor StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression MethodInvocation MethodInvocation MemberReference Color white setFillColor getBigPort MethodDeclaration Modifier public translate FormalParameter BasicType int dx FormalParameter BasicType int dy StatementExpression SuperMethodInvocation MemberReference dx MemberReference dy translate LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This findSelectionFor getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType SelectionClass BlockStatement StatementExpression Cast ReferenceType SelectionClass MemberReference sel End MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent mouseEvent IfStatement MethodInvocation mouseEvent isConsumed BlockStatement ReturnStatement End StatementExpression SuperMethodInvocation MemberReference mouseEvent mouseClicked IfStatement BinaryOperation && MethodInvocation mouseEvent isShiftDown BinaryOperation > MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 0 BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This findSelectionFor getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType SelectionClass BlockStatement StatementExpression Cast ReferenceType SelectionClass MemberReference sel End StatementExpression MethodInvocation unhighlight LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r ClassCreator ReferenceType Rectangle BinaryOperation - MethodInvocation mouseEvent getX Literal 1 BinaryOperation - MethodInvocation mouseEvent getY Literal 1 Literal 2 Literal 2 LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation MemberReference r hitFig IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigEditableCompartment BlockStatement LocalVariableDeclaration ReferenceType FigEditableCompartment VariableDeclarator figCompartment Cast ReferenceType FigEditableCompartment MemberReference f StatementExpression Assignment MemberReference f MethodInvocation figCompartment MemberReference r hitFig = IfStatement BinaryOperation instanceof MemberReference f ReferenceType CompartmentFigText BlockStatement StatementExpression Cast ReferenceType CompartmentFigText MemberReference f StatementExpression Assignment MemberReference highlightedFigText Cast ReferenceType CompartmentFigText MemberReference f = StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference f setTarget getInstance End End MethodDeclaration Modifier public mouseExited FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseExited StatementExpression MethodInvocation unhighlight MethodDeclaration /**
     * Remove the highlight from the currently highlit FigText.
     *
     * @return the FigText that had highlight removed
     */ Modifier protected ReferenceType CompartmentFigText unhighlight LocalVariableDeclaration ReferenceType Fig VariableDeclarator fc ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation MethodInvocation size getFigs MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference fc MethodInvocation MemberReference i getFigAt = IfStatement BinaryOperation instanceof MemberReference fc ReferenceType FigEditableCompartment BlockStatement LocalVariableDeclaration ReferenceType CompartmentFigText VariableDeclarator ft MethodInvocation Cast ReferenceType FigEditableCompartment MemberReference fc unhighlight IfStatement BinaryOperation != MemberReference ft Literal null BlockStatement ReturnStatement MemberReference ft End End End ReturnStatement Literal null MethodDeclaration /**
     * Search the given compartment for a highlighted CompartmentFigText
     * and unhighlight it.
     * 
     * @param fc compartment to search for highlight item
     * @return item that was unhighlighted or null if no action was taken
     */ Modifier final protected ReferenceType CompartmentFigText unhighlight FormalParameter ReferenceType FigEditableCompartment fc LocalVariableDeclaration ReferenceType Fig VariableDeclarator ft ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation fc MethodInvocation size getFigs MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ft MethodInvocation fc MemberReference i getFigAt = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ft ReferenceType CompartmentFigText Cast ReferenceType CompartmentFigText MemberReference ft BlockStatement StatementExpression Cast ReferenceType CompartmentFigText MemberReference ft StatementExpression Assignment MemberReference highlightedFigText Literal null = ReturnStatement Cast ReferenceType CompartmentFigText MemberReference ft End End ReturnStatement Literal null MethodDeclaration Modifier protected createContainedModelElement FormalParameter ReferenceType FigGroup fg FormalParameter ReferenceType InputEvent ie IfStatement BinaryOperation instanceof MemberReference fg ReferenceType FigEditableCompartment BlockStatement ReturnStatement End StatementExpression Cast ReferenceType FigEditableCompartment MemberReference fg LocalVariableDeclaration ReferenceType List VariableDeclarator figList MethodInvocation fg getFigs IfStatement BinaryOperation > MethodInvocation figList size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figList BinaryOperation - MethodInvocation figList size Literal 1 get IfStatement BinaryOperation && BinaryOperation != MemberReference fig Literal null BinaryOperation instanceof MemberReference fig ReferenceType CompartmentFigText BlockStatement LocalVariableDeclaration ReferenceType CompartmentFigText VariableDeclarator ft Cast ReferenceType CompartmentFigText MemberReference fig StatementExpression MethodInvocation ft MemberReference ie startTextEditor StatementExpression MethodInvocation ft Literal true setHighlighted StatementExpression Assignment MemberReference highlightedFigText MemberReference ft = End End StatementExpression MethodInvocation ie consume MethodDeclaration Modifier protected ReferenceType Fig getBorderFig ReturnStatement MemberReference borderFig ReferenceType FigNodeModelElement",1
904,904,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import javax.swing.AbstractAction Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.ui.targetmanager.TargetManager ClassDeclaration /**
 * Navigates the target one target back in history.
 *
 * @author jaap.branderhorst@xs4all.nl
 */ NavigateTargetBackAction ConstructorDeclaration Modifier public /**
     * The constructor.
     */ NavigateTargetBackAction StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.navigate-back"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.navigate-back"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.navigate-back"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation TargetManager MethodInvocation navigateBackward getInstance MethodDeclaration /**
     * Action is possible only if navigateBackPossible on targetManager
     * returns true.
     *
     * @see javax.swing.Action#isEnabled()
     */ Modifier public BasicType boolean isEnabled ReturnStatement MethodInvocation TargetManager MethodInvocation navigateBackPossible getInstance FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 33340548502483040L ReferenceType AbstractAction",1
500,500,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Point Import java.util.ArrayList Import java.util.Iterator Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.diagram.activity.ui.SelectionActionState Import org.argouml.uml.diagram.ui.FigNodeModelElement Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.LayerDiagram Import org.tigris.gef.base.LayerPerspective Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public abstract /**
 * Abstract class to with common behavior for nestable nodes in UML Statechart
 * diagrams.
 */ FigStateVertex ConstructorDeclaration Modifier public /**
     * The main constructor
     */ FigStateVertex StatementExpression This MethodInvocation Literal false allowRemoveFromDiagram ConstructorDeclaration Modifier public /**
     * The constructor which hooks the Fig into the UML element
     * 
     * @param gm
     *            ignored
     * @param node
     *            the UML elm
     */ FigStateVertex FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator layer Cast ReferenceType LayerPerspective MethodInvocation getLayer IfStatement BinaryOperation == MemberReference layer Literal null BlockStatement ReturnStatement End StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator stateVertex MethodInvocation getOwner LocalVariableDeclaration ReferenceType Object VariableDeclarator compositeState Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference encloser Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference compositeState MethodInvocation encloser getOwner = StatementExpression Cast ReferenceType FigStateVertex MemberReference encloser BlockStatement StatementExpression Assignment MemberReference compositeState MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference stateVertex getStateMachine getStateMachinesHelper getTop getStateMachinesHelper = End IfStatement BinaryOperation != MemberReference compositeState Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference stateVertex getContainer getFacade MemberReference compositeState StatementExpression MethodInvocation Model MethodInvocation MemberReference stateVertex MemberReference compositeState setContainer getStateMachinesHelper End End MethodDeclaration /**
     * Method to draw a StateVertex Fig's enclosed figs.
     */ Modifier public redrawEnclosedFigs LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor IfStatement BinaryOperation && BinaryOperation != MemberReference editor Literal null MethodInvocation ! MethodInvocation isEmpty getEnclosedFigs BlockStatement LocalVariableDeclaration ReferenceType LayerDiagram VariableDeclarator lay Cast ReferenceType LayerDiagram MethodInvocation editor MethodInvocation getActiveLayer getLayerManager ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation MethodInvocation size getEnclosedFigs MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MethodInvocation MethodInvocation MemberReference i elementAt getEnclosedFigs StatementExpression MethodInvocation lay MemberReference f This bringInFrontOf IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNode BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator fn Cast ReferenceType FigNode MemberReference f LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation fn MethodInvocation iterator getFigEdges WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation lay Cast ReferenceType FigEdge MethodInvocation it next This bringInFrontOf End IfStatement BinaryOperation instanceof MemberReference fn ReferenceType FigStateVertex BlockStatement StatementExpression Cast ReferenceType FigStateVertex MemberReference fn End End End End MethodDeclaration /**
     * return selectors, depending whether we deal with activity or state
     * diagrams.
     *
     * {@inheritDoc}
     */ Modifier public Annotation Override ReferenceType Selection makeSelection LocalVariableDeclaration ReferenceType Object VariableDeclarator pstate MethodInvocation getOwner IfStatement BinaryOperation != MemberReference pstate Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference pstate getContainer getFacade getStateMachine getFacade isAActivityGraph getFacade BlockStatement ReturnStatement ClassCreator ReferenceType SelectionActionState This End ReturnStatement ClassCreator ReferenceType SelectionState This End ReturnStatement Literal null FieldDeclaration /**
     * Number of points to compute for gravity point circle.
     */ Modifier private final static BasicType int VariableDeclarator CIRCLE_POINTS Literal 32 MethodDeclaration /**
     * Return a list of gravity points around circle which is enclosed
     * in the bounding box.  Convenience method for use by FigInitialState
     * and FigFinalState.
     * @return a List of Points
     */ ReferenceType List TypeArgument ReferenceType Point getCircleGravityPoints LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Point VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Point LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getCenter MemberReference x getBigPort LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation getCenter MemberReference y getBigPort LocalVariableDeclaration BasicType double VariableDeclarator radius BinaryOperation + BinaryOperation / MethodInvocation MethodInvocation getWidth getBigPort Literal 2 Literal 1 LocalVariableDeclaration Modifier final BasicType double VariableDeclarator pi2 BinaryOperation * MemberReference Math PI Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference CIRCLE_POINTS MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator x Cast BasicType int BinaryOperation + MemberReference cx BinaryOperation * MethodInvocation Math BinaryOperation / BinaryOperation * MemberReference pi2 MemberReference i MemberReference CIRCLE_POINTS cos MemberReference radius LocalVariableDeclaration BasicType int VariableDeclarator y Cast BasicType int BinaryOperation + MemberReference cy BinaryOperation * MethodInvocation Math BinaryOperation / BinaryOperation * MemberReference pi2 MemberReference i MemberReference CIRCLE_POINTS sin MemberReference radius StatementExpression MethodInvocation ret ClassCreator ReferenceType Point MemberReference x MemberReference y add End ReturnStatement MemberReference ret ReferenceType FigNodeModelElement",0
1409,1409,,0
499,499,"CompilationUnit PackageDeclaration org.argouml.application.events ClassDeclaration Modifier public /**
 * The Status Event is used to notify interested parties of a status
 * change.  The status can be arbitrary text, or the name of a project
 * which was saved or loaded.
 *
 * @author Tom Morris  <tfmorris@gmail.com>
 */ ArgoStatusEvent FieldDeclaration Modifier private ReferenceType String VariableDeclarator text ConstructorDeclaration Modifier public /**
     * @param eventType reported by this event.
     * @param src object that caused the event.
     * @param message the status text string (already translated) to be shown
     */ ArgoStatusEvent FormalParameter BasicType int eventType FormalParameter ReferenceType Object src FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference eventType MemberReference src StatementExpression Assignment MemberReference text MemberReference message = MethodDeclaration /**
     * Indicates the start of the 100-digit range for status events.
     *
     * @return the first id reserved for events.
     */ Modifier public Annotation Override BasicType int getEventStartRange ReturnStatement MemberReference ANY_STATUS_EVENT MethodDeclaration /**
     * @return Returns the event text containing either a status message or
     * the name of the project that was saved/loaded.
     */ Modifier public ReferenceType String getText ReturnStatement MemberReference text ReferenceType ArgoEvent",1
783,783,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.awt.event.ActionEvent Import java.io.File Import java.io.FileWriter Import java.io.IOException Import javax.swing.AbstractAction Import javax.swing.JFileChooser Import javax.swing.filechooser.FileFilter Import org.apache.log4j.Logger Import org.argouml.application.helpers.ApplicationVersion Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.model.UmlException Import org.argouml.model.XmiWriter Import org.argouml.persistence.PersistenceManager Import org.argouml.persistence.ProjectFileView Import org.argouml.persistence.UmlFilePersister Import org.argouml.profile.Profile Import org.argouml.util.ArgoFrame ClassDeclaration Modifier public /**
 * Exports the model of a selected profile as XMI
 *
 * @author Marcos Aurélio
 */ ActionExportProfileXMI FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ActionExportProfileXMI getLogger FieldDeclaration Modifier private ReferenceType Profile VariableDeclarator selectedProfile ConstructorDeclaration Modifier public /**
     * Default Constructor
     * 
     * @param profile the selected profile
     */ ActionExportProfileXMI FormalParameter ReferenceType Profile profile StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.export-profile-as-xmi"" localize StatementExpression Assignment This MemberReference selectedProfile MemberReference profile = MethodDeclaration /**
     * @param arg0
     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation selectedProfile getModel IfStatement BinaryOperation != MemberReference model Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator destiny MethodInvocation getTargetFile IfStatement BinaryOperation != MemberReference destiny Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference destiny MemberReference model saveModel CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal ""Exception"" MemberReference e error CatchClause CatchClauseParameter UmlException e StatementExpression MethodInvocation LOG Literal ""Exception"" MemberReference e error End End MethodDeclaration Modifier private Annotation SuppressWarnings Literal ""deprecation"" saveModel FormalParameter ReferenceType File destiny FormalParameter ReferenceType Object model IOException UmlException LocalVariableDeclaration ReferenceType FileWriter VariableDeclarator w ClassCreator ReferenceType FileWriter MemberReference destiny LocalVariableDeclaration ReferenceType XmiWriter VariableDeclarator xmiWriter MethodInvocation Model MemberReference model MemberReference w BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation ApplicationVersion getVersion Literal ""("" MemberReference UmlFilePersister PERSISTENCE_VERSION Literal "")"" getXmiWriter StatementExpression MethodInvocation xmiWriter write MethodDeclaration Modifier private ReferenceType File getTargetFile LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation chooser MethodInvocation Translator Literal ""action.export-profile-as-xmi"" localize setDialogTitle StatementExpression MethodInvocation chooser MethodInvocation ProjectFileView getInstance setFileView StatementExpression MethodInvocation chooser MethodInvocation Translator Literal ""filechooser.export"" localize setApproveButtonText StatementExpression MethodInvocation chooser Literal true setAcceptAllFileFilterUsed StatementExpression MethodInvocation chooser ClassCreator ReferenceType FileFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File file ReturnStatement BinaryOperation || MethodInvocation file isDirectory BinaryOperation && MethodInvocation file isFile BinaryOperation || MethodInvocation file MethodInvocation toLowerCase MethodInvocation Literal "".xml"" endsWith getName MethodInvocation file MethodInvocation toLowerCase MethodInvocation Literal "".xmi"" endsWith getName MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement Literal ""*.XMI"" setFileFilter LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation Configuration MemberReference PersistenceManager KEY_PROJECT_NAME_PATH getString IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression Assignment MemberReference fn MethodInvocation PersistenceManager MethodInvocation MemberReference fn getBaseName getInstance = StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile End LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation chooser MethodInvocation ArgoFrame getInstance showSaveDialog IfStatement BinaryOperation == MemberReference result MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile IfStatement BinaryOperation != MemberReference theFile Literal null BlockStatement IfStatement MethodInvocation ! theFile MethodInvocation toUpperCase MethodInvocation Literal "".XMI"" endsWith getName BlockStatement StatementExpression Assignment MemberReference theFile ClassCreator ReferenceType File BinaryOperation + MethodInvocation theFile getAbsolutePath Literal "".XMI"" = End ReturnStatement MemberReference theFile End End ReturnStatement Literal null ReferenceType AbstractAction",0
1577,1577,,0
187,187,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager ClassDeclaration Modifier public /**
 * The model for a UML Expression that is obtained from its ""parent""
 * by getExpression - hence: Guard, ChangeEvent, TimeEvent.
 *
 * @author Michiel
 */ UMLExpressionExpressionModel ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param c the container of UML user interface components
     * @param name the name of the property
     */ UMLExpressionExpressionModel FormalParameter ReferenceType UMLUserInterfaceContainer c FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference c MemberReference name MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance getExpression getFacade MethodDeclaration Modifier public setExpression FormalParameter ReferenceType Object expr StatementExpression MethodInvocation Model MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance MemberReference expr setExpression getStateMachinesHelper MethodDeclaration Modifier public ReferenceType Object newExpression ReturnStatement MethodInvocation Model MethodInvocation Literal """" Literal """" createBooleanExpression getDataTypesFactory ReferenceType UMLExpressionModel2",0
271,271,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import javax.swing.JLabel Import javax.swing.JTextArea Import javax.swing.JTextField Import javax.swing.border.EtchedBorder Import org.argouml.cognitive.critics.Wizard Import org.argouml.i18n.Translator Import org.argouml.swingext.SpacerPanel ClassDeclaration Modifier public /**
 * A non-modal wizard step that shows instructions and prompts
 * the user to enter a string.
 *
 * @see org.argouml.cognitive.Critic
 * @see org.argouml.cognitive.critics.Wizard
 */ WizStepTextField FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator instructions ClassCreator ReferenceType JTextArea FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator label ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.value"" localize FieldDeclaration Modifier private ReferenceType JTextField VariableDeclarator field ClassCreator ReferenceType JTextField Literal 20 ConstructorDeclaration Modifier private /**
     * The constructor. Since this constructor does not set the necessary
     * instructions, textfield label and default value, it is private.
     */ WizStepTextField StatementExpression MethodInvocation instructions Literal false setEditable StatementExpression MethodInvocation instructions Literal true setWrapStyleWord StatementExpression MethodInvocation instructions Literal null setBorder StatementExpression MethodInvocation instructions MethodInvocation MethodInvocation getBackground getMainPanel setBackground StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType EtchedBorder setBorder getMainPanel LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation MethodInvocation MemberReference gb setLayout getMainPanel LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression Assignment MemberReference c ipady Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c anchor MemberReference GridBagConstraints EAST = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator image ClassCreator ReferenceType JLabel Literal """" StatementExpression MethodInvocation image MethodInvocation getWizardIcon setIcon StatementExpression MethodInvocation image Literal null setBorder StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridheight Literal 4 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression MethodInvocation gb MemberReference image MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference image add getMainPanel StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridheight Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression MethodInvocation gb MemberReference instructions MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference instructions add getMainPanel StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = LocalVariableDeclaration ReferenceType SpacerPanel VariableDeclarator spacer ClassCreator ReferenceType SpacerPanel StatementExpression MethodInvocation gb MemberReference spacer MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference spacer add getMainPanel StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridy Literal 2 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression MethodInvocation gb MemberReference label MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference label add getMainPanel StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 2 = StatementExpression MethodInvocation gb MemberReference field MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference field add getMainPanel StatementExpression MethodInvocation field MethodInvocation This addDocumentListener getDocument ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param w the wizard (ignored)
     * @param instr the instructions
     * @param lab the label for the textfield
     * @param val the initial value for the textfield
     */ WizStepTextField FormalParameter ReferenceType Wizard w FormalParameter ReferenceType String instr FormalParameter ReferenceType String lab FormalParameter ReferenceType String val StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation instructions MemberReference instr setText StatementExpression MethodInvocation label MemberReference lab setText StatementExpression MethodInvocation field MemberReference val setText MethodDeclaration /**
     * @return the resulting text
     */ Modifier public ReferenceType String getText ReturnStatement MethodInvocation field getText FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4245718254267840545L ReferenceType WizStep",0
1390,1390,,0
1246,1246,,0
1005,1005,,1
1215,1215,,0
56,56,"CompilationUnit PackageDeclaration org.argouml.application.events Import org.argouml.application.api.ArgoEventListener InterfaceDeclaration Modifier public /**
 * An interface that all objects interested in ProfileEvent 
 * notifications shall implement.
 *
 * @author Michiel
 */ ArgoProfileEventListener MethodDeclaration /**
     * Invoked when a profile has been added.
     * @param e <code>ArgoProfileEvent</code> describing the added notation.
     */ Modifier public profileAdded FormalParameter ReferenceType ArgoProfileEvent e MethodDeclaration /**
     * Invoked when a profile has been removed.
     * @param e <code>ArgoProfileEvent</code> describing the removed notation.
     */ Modifier public profileRemoved FormalParameter ReferenceType ArgoProfileEvent e ReferenceType ArgoEventListener",1
1532,1532,,0
526,526,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.uml.ui.ActionNavigateNamespace Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.foundation.core.ActionAddAttribute Import org.argouml.uml.ui.foundation.core.ActionAddOperation Import org.argouml.uml.ui.foundation.core.PropPanelClassifier Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * Builds the property panel for a use case.<p>
 *
 * This is a type of Classifier, and like other Classifiers can have
 * attributes and operations (some processes use these to define
 * requirements).<p>
 *
 * <em>Note</em>. ArgoUML does not currently support separate
 * compartments on the display for this.<p>
 */ PropPanelUseCase ConstructorDeclaration Modifier public /**
     * Construct a property panel for a UseCase.
     */ PropPanelUseCase StatementExpression SuperConstructorInvocation Literal ""label.usecase"" MethodInvocation Literal ""UseCase"" lookupIcon StatementExpression MethodInvocation Literal ""label.name"" MethodInvocation getNameTextField addField StatementExpression MethodInvocation Literal ""label.namespace"" MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MethodInvocation getModifiersPanel add StatementExpression MethodInvocation Literal ""label.client-dependencies"" MethodInvocation getClientDependencyScroll addField StatementExpression MethodInvocation Literal ""label.supplier-dependencies"" MethodInvocation getSupplierDependencyScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""label.generalizations"" MethodInvocation getGeneralizationScroll addField StatementExpression MethodInvocation Literal ""label.specializations"" MethodInvocation getSpecializationScroll addField LocalVariableDeclaration ReferenceType JList VariableDeclarator extendsList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLUseCaseExtendListModel StatementExpression MethodInvocation Literal ""label.extends"" ClassCreator ReferenceType JScrollPane MemberReference extendsList addField LocalVariableDeclaration ReferenceType JList VariableDeclarator includesList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLUseCaseIncludeListModel StatementExpression MethodInvocation Literal ""label.includes"" ClassCreator ReferenceType JScrollPane MemberReference includesList addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""label.attributes"" MethodInvocation getAttributeScroll addField StatementExpression MethodInvocation Literal ""label.association-ends"" MethodInvocation getAssociationEndScroll addField StatementExpression MethodInvocation Literal ""label.operations"" MethodInvocation getOperationScroll addField LocalVariableDeclaration ReferenceType JList VariableDeclarator extensionPoints ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLUseCaseExtensionPointListModel Literal null MemberReference ActionNewUseCaseExtensionPoint SINGLETON StatementExpression MethodInvocation Literal ""label.extension-points"" ClassCreator ReferenceType JScrollPane MemberReference extensionPoints addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateNamespace addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewUseCase addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewExtensionPoint addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddAttribute addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddOperation addAction StatementExpression MethodInvocation MethodInvocation getActionNewReception addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 8352300400553000518L ReferenceType PropPanelClassifier",1
464,464,"CompilationUnit PackageDeclaration org.argouml.uml.reveng.java Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.uml.reveng.ImportClassLoader ClassDeclaration /**
 * This context is an outer class containing inner classes.
 *
 * @author Marcus Andersson
 */ OuterClassifierContext FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType OuterClassifierContext getLogger FieldDeclaration /** The classifier this context represents. */ Modifier private ReferenceType Object VariableDeclarator mClassifier FieldDeclaration /** The package this classifier belongs to */ Modifier private ReferenceType Object VariableDeclarator mPackage FieldDeclaration /** This is appended to classname when searching in classpath. */ Modifier private ReferenceType String VariableDeclarator namePrefix FieldDeclaration /** The java style name of the package. */ Modifier private ReferenceType String VariableDeclarator packageJavaName ConstructorDeclaration Modifier public /**
     Create a new context from a classifier.

     @param base Based on this context.
     @param theClassifier The classifier.
     @param thePackage The package the classifier belongs to.
     @param theNamePrefix Inner class prefix, like ""OuterClassname$""
    */ OuterClassifierContext FormalParameter ReferenceType Context base FormalParameter ReferenceType Object theClassifier FormalParameter ReferenceType Object thePackage FormalParameter ReferenceType String theNamePrefix StatementExpression SuperConstructorInvocation MemberReference base StatementExpression Assignment This MemberReference mClassifier MemberReference theClassifier = StatementExpression Assignment This MemberReference mPackage MemberReference thePackage = StatementExpression Assignment This MemberReference namePrefix MemberReference theNamePrefix = StatementExpression Assignment MemberReference packageJavaName MethodInvocation MemberReference thePackage getJavaName = MethodDeclaration Modifier public ReferenceType Object getInterface FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal true get MethodDeclaration /**
     * Get a classifier from the model. If it is not in the model, try
     * to find it with the CLASSPATH. If found, in the classpath, the
     * classifier is created and added to the model. If not found at
     * all, a datatype is created and added to the model.
     *
     * @param name The name of the classifier to find.
     * @return Found classifier.
     */ Modifier public ReferenceType Object get FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal false get MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly ClassifierNotFoundException LocalVariableDeclaration ReferenceType Object VariableDeclarator iClassifier MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference name lookupIn getFacade IfStatement BinaryOperation == MemberReference iClassifier Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator classifier TryStatement IfStatement MethodInvocation Model MethodInvocation MemberReference mPackage isAModel getFacade BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation Class BinaryOperation + MemberReference namePrefix MemberReference name forName = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clazzName BinaryOperation + BinaryOperation + BinaryOperation + MemberReference packageJavaName Literal ""."" MemberReference namePrefix MemberReference name StatementExpression Assignment MemberReference classifier MethodInvocation Class MemberReference clazzName forName = End IfStatement MethodInvocation classifier isInterface BlockStatement StatementExpression Assignment MemberReference iClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildInterface getCoreFactory = BlockStatement IfStatement MemberReference interfacesOnly BlockStatement ThrowStatement ClassCreator ReferenceType ClassNotFoundException BlockStatement StatementExpression Assignment MemberReference iClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildClass getCoreFactory = End End CatchClause CatchClauseParameter ClassNotFoundException e TryStatement IfStatement MethodInvocation Model MethodInvocation MemberReference mPackage isAModel getFacade BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation ImportClassLoader MethodInvocation BinaryOperation + MemberReference namePrefix MemberReference name loadClass getInstance = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clazzName BinaryOperation + BinaryOperation + BinaryOperation + MemberReference packageJavaName Literal ""."" MemberReference namePrefix MemberReference name StatementExpression Assignment MemberReference classifier MethodInvocation ImportClassLoader MethodInvocation MemberReference clazzName loadClass getInstance = End IfStatement MethodInvocation classifier isInterface BlockStatement StatementExpression Assignment MemberReference iClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildInterface getCoreFactory = BlockStatement IfStatement MemberReference interfacesOnly BlockStatement ThrowStatement ClassCreator ReferenceType ClassNotFoundException BlockStatement StatementExpression Assignment MemberReference iClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildClass getCoreFactory = End End CatchClause CatchClauseParameter Exception e1 IfStatement BinaryOperation instanceof MemberReference e1 ReferenceType ClassNotFoundException BlockStatement StatementExpression MethodInvocation LOG MemberReference e1 warn End IfStatement BinaryOperation != MethodInvocation getContext Literal null BlockStatement StatementExpression Assignment MemberReference iClassifier MethodInvocation MethodInvocation MemberReference name MemberReference interfacesOnly get getContext = End End ReturnStatement MemberReference iClassifier ReferenceType Context",0
99,99,"CompilationUnit PackageDeclaration org.argouml.language.java.generator ClassDeclaration /**
   This piece of code is just one token.
*/ SimpleCodePiece FieldDeclaration Modifier private ReferenceType StringBuffer VariableDeclarator text FieldDeclaration Modifier private BasicType int VariableDeclarator line FieldDeclaration Modifier private BasicType int VariableDeclarator startPosition FieldDeclaration Modifier private BasicType int VariableDeclarator endPosition ConstructorDeclaration Modifier public /**
     *  Create a simple piece of code.
     *
     * @param t the text
     * @param lne the line
     * @param sp the start position
     * @param ep the end position
     */ SimpleCodePiece FormalParameter ReferenceType StringBuffer t FormalParameter BasicType int lne FormalParameter BasicType int sp FormalParameter BasicType int ep StatementExpression Assignment This MemberReference text MemberReference t = StatementExpression Assignment This MemberReference line MemberReference lne = StatementExpression Assignment This MemberReference startPosition MemberReference sp = StatementExpression Assignment This MemberReference endPosition MemberReference ep = ConstructorDeclaration Modifier public /**
     * Create a simple piece of code from a token.
     *
     * @param token the given token
     */ SimpleCodePiece FormalParameter ReferenceType antlr ReferenceType Token token StatementExpression ExplicitConstructorInvocation ClassCreator ReferenceType StringBuffer MethodInvocation token getText BinaryOperation - MethodInvocation token getLine Literal 1 BinaryOperation - MethodInvocation token getColumn Literal 1 BinaryOperation - BinaryOperation + MethodInvocation token getColumn MethodInvocation token MethodInvocation length getText Literal 1 MethodDeclaration Modifier public ReferenceType StringBuffer getText ReturnStatement MemberReference text MethodDeclaration Modifier public BasicType int getStartPosition ReturnStatement MemberReference startPosition MethodDeclaration Modifier public BasicType int getEndPosition ReturnStatement MemberReference endPosition MethodDeclaration Modifier public BasicType int getStartLine ReturnStatement MemberReference line MethodDeclaration Modifier public BasicType int getEndLine ReturnStatement MemberReference line ReferenceType CodePiece",0
213,213,"CompilationUnit PackageDeclaration jdepend.framework Import java.util  ClassDeclaration Modifier public /**
 * The <code>JavaClass</code> class represents a Java 
 * class or interface.
 * 
 * @author <b>Mike Clark</b>
 * @author Clarkware Consulting, Inc.
 */ JavaClass FieldDeclaration Modifier private ReferenceType String VariableDeclarator className FieldDeclaration Modifier private ReferenceType String VariableDeclarator packageName FieldDeclaration Modifier private BasicType boolean VariableDeclarator isAbstract FieldDeclaration Modifier private ReferenceType HashMap VariableDeclarator imports FieldDeclaration Modifier private ReferenceType String VariableDeclarator sourceFile ConstructorDeclaration Modifier public JavaClass FormalParameter ReferenceType String name StatementExpression Assignment MemberReference className MemberReference name = StatementExpression Assignment MemberReference packageName Literal ""default"" = StatementExpression Assignment MemberReference isAbstract Literal false = StatementExpression Assignment MemberReference imports ClassCreator ReferenceType HashMap = StatementExpression Assignment MemberReference sourceFile Literal ""Unknown"" = MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment MemberReference className MemberReference name = MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference className MethodDeclaration Modifier public setPackageName FormalParameter ReferenceType String name StatementExpression Assignment MemberReference packageName MemberReference name = MethodDeclaration Modifier public ReferenceType String getPackageName ReturnStatement MemberReference packageName MethodDeclaration Modifier public setSourceFile FormalParameter ReferenceType String name StatementExpression Assignment MemberReference sourceFile MemberReference name = MethodDeclaration Modifier public ReferenceType String getSourceFile ReturnStatement MemberReference sourceFile MethodDeclaration Modifier public ReferenceType Collection getImportedPackages ReturnStatement MethodInvocation imports values MethodDeclaration Modifier public addImportedPackage FormalParameter ReferenceType JavaPackage jPackage IfStatement MethodInvocation ! jPackage MethodInvocation MethodInvocation getPackageName equals getName BlockStatement StatementExpression MethodInvocation imports MethodInvocation jPackage getName MemberReference jPackage put End MethodDeclaration Modifier public BasicType boolean isAbstract ReturnStatement MemberReference isAbstract MethodDeclaration Modifier public isAbstract FormalParameter BasicType boolean isAbstract StatementExpression Assignment This MemberReference isAbstract MemberReference isAbstract = MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other IfStatement BinaryOperation instanceof MemberReference other ReferenceType JavaClass BlockStatement LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator otherClass Cast ReferenceType JavaClass MemberReference other ReturnStatement MethodInvocation otherClass MethodInvocation MethodInvocation getName equals getName End ReturnStatement Literal false MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getName ClassDeclaration Modifier public static ClassComparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object a FormalParameter ReferenceType Object b LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator c1 Cast ReferenceType JavaClass MemberReference a LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator c2 Cast ReferenceType JavaClass MemberReference b ReturnStatement MethodInvocation c1 MethodInvocation MethodInvocation c2 getName compareTo getName ReferenceType Comparator",0
1586,1586,,0
1529,1529,,0
675,675,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * navigate to the context.
 *
 * @author mkl
 *
 */ ActionNavigateContext MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getContext getFacade ReferenceType AbstractActionNavigate",0
1214,1214,,0
1595,1595,,0
1421,1421,,0
841,841,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.BorderLayout Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.util.Collection Import java.util.Hashtable Import javax.swing.JPanel Import javax.swing.SwingUtilities Import javax.swing.event.EventListenerList Import org.apache.log4j.Logger Import org.argouml.kernel.DelayedChangeNotify Import org.argouml.kernel.DelayedVChangeListener Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.AbstractArgoJPanel Import org.argouml.ui.StylePanel Import org.argouml.ui.TabFigTarget Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.ui.FigAssociationClass Import org.argouml.uml.diagram.ui.FigClassAssociationClass Import org.argouml.uml.util.namespace.Namespace Import org.argouml.uml.util.namespace.StringNamespace Import org.argouml.uml.util.namespace.StringNamespaceElement Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge ClassDeclaration Modifier public /**
 * Provides support for changing the appearance of a diagram element. For each
 * class of a diagram element, the TabStyle class attempts to find an according
 * class of StylePanel which contains the attributes to be modified in terms of
 * style.
 * <p>
 * The constructor of TabStyle takes an array argument which contains possible
 * base names for these style panels, or by default StylePanel and SP,
 * alternating between these two prefixes and the namespace of the Fig class or
 * <code>org.argouml.ui</code>. With this configuration, the stylepanel for
 * e.g. <code>org.argouml.uml.diagram.static.structure.ui.FigClass</code>,
 * will be looked at in the following places:
 * <ul>
 * <li>org.argouml.uml.diagram.static_structure.ui.StylePanelFigClass
 * <li>org.argouml.uml.diagram.static_structure.ui.SPFigClass
 * <li>org.argouml.ui.StylePanelFigClass
 * <li>org.argouml.ui.SPFigClass
 * </ul>
 * It continues to traverse the superclass structure until a matching class has
 * been found, e.g.
 * <ul>
 * <li>org.argouml.uml.diagram.ui.StylePanelFigNodeModelElement
 * <li>org.argouml.uml.diagram.ui.SPFigNodeModelElement
 * <li>org.argouml.ui.StylePanelFigNodeModelElement
 * <li>org.argouml.ui.SPFigNodeModelElement
 * </ul>
 * If a stylepanel had been found, it will be stored in a cache.<p>
 *
 * According the decision taken in issue 502, this tab is renamed ""Presentation""
 * for the user. And the Presentation tab shall contain presentation options,
 * and no semantic UML properties (which belong in the ""Properties"" panel).
 * In contrast, the diagram pop-up menu for a model element
 * may access both presentation options as well as semantic UML properties. <p>
 *
 * Note also that the semantic properties of a UML model element exist in one
 * copy only but the presentation options exist in one copy per diagram
 * that the model element is showing in. E.g. a class could have
 * attributes hidden in one diagram and showing in another. So, for the user
 * it would be very logical to seperate these 2 kinds of settings
 * on different tabs.
 *
 */ TabStyle FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType TabStyle getLogger FieldDeclaration Modifier private ReferenceType Fig VariableDeclarator target FieldDeclaration Modifier private BasicType boolean VariableDeclarator shouldBeEnabled Literal false FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator blankPanel ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType Hashtable TypeArgument ReferenceType Class TypeArgument ReferenceType TabFigTarget VariableDeclarator panels ClassCreator ReferenceType Hashtable TypeArgument ReferenceType Class TypeArgument ReferenceType TabFigTarget FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator lastPanel Literal null FieldDeclaration /**
     * The stylepanel shown by the tab style.
     */ Modifier private ReferenceType StylePanel VariableDeclarator stylePanel Literal null FieldDeclaration Modifier private ReferenceType String VariableDeclarator stylePanelNames FieldDeclaration Modifier private ReferenceType EventListenerList VariableDeclarator listenerList ClassCreator ReferenceType EventListenerList ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param tabName the name of the tab
     * @param spn style panel names
     */ TabStyle FormalParameter ReferenceType String tabName FormalParameter ReferenceType String spn StatementExpression SuperConstructorInvocation MemberReference tabName StatementExpression Assignment This MemberReference stylePanelNames MemberReference spn = StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout ConstructorDeclaration Modifier public /**
     * Construct a default stylepanel with basenames <code>StylePanel</code>
     * and <code>SP</code>, resulting in the lookup order described above.
     */ TabStyle StatementExpression ExplicitConstructorInvocation Literal ""tab.style"" ArrayCreator ReferenceType String ArrayInitializer Literal ""StylePanel"" Literal ""SP"" MethodDeclaration /**
     * Adds a style panel to the internal list. This allows a plugin to add and
     * register a new style panel at run-time. This property style will then be
     * displayed in the details pane whenever an element of the given metaclass
     * is selected.
     *
     * @param c
     *            the metaclass whose details show be displayed in the property
     *            panel p
     * @param s
     *            an instance of the style panel for the metaclass m
     */ Modifier public addPanel FormalParameter ReferenceType Class c FormalParameter ReferenceType StylePanel s StatementExpression MethodInvocation panels MemberReference c MemberReference s put MethodDeclaration /**
     * Sets the target of the style tab.
     * 
     * @param t
     *            is the new target
     */ Modifier public setTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation target This removePropertyChangeListener IfStatement BinaryOperation instanceof MemberReference target ReferenceType FigEdge BlockStatement StatementExpression Cast ReferenceType FigEdge MemberReference target End IfStatement BinaryOperation instanceof MemberReference target ReferenceType FigAssociationClass BlockStatement LocalVariableDeclaration ReferenceType FigClassAssociationClass VariableDeclarator ac Cast ReferenceType FigAssociationClass MemberReference target IfStatement BinaryOperation != MemberReference ac Literal null BlockStatement StatementExpression MethodInvocation ac This removePropertyChangeListener End End End IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference t isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation p MemberReference t findFigsForMember IfStatement BinaryOperation || BinaryOperation == MemberReference col Literal null MethodInvocation col isEmpty BlockStatement ReturnStatement End StatementExpression Assignment MemberReference t MethodInvocation col MethodInvocation next iterator = IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig ReturnStatement End BlockStatement ReturnStatement End End StatementExpression Assignment MemberReference target Cast ReferenceType Fig MemberReference t = IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation target This addPropertyChangeListener IfStatement BinaryOperation instanceof MemberReference target ReferenceType FigEdge BlockStatement StatementExpression Cast ReferenceType FigEdge MemberReference target End IfStatement BinaryOperation instanceof MemberReference target ReferenceType FigAssociationClass BlockStatement LocalVariableDeclaration ReferenceType FigClassAssociationClass VariableDeclarator ac Cast ReferenceType FigAssociationClass MemberReference target IfStatement BinaryOperation != MemberReference ac Literal null BlockStatement StatementExpression MethodInvocation ac This addPropertyChangeListener End End End IfStatement BinaryOperation != MemberReference lastPanel Literal null BlockStatement StatementExpression MethodInvocation MemberReference lastPanel remove IfStatement BinaryOperation instanceof MemberReference lastPanel ReferenceType TargetListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference lastPanel removeTargetListener End End IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression MethodInvocation MemberReference blankPanel MemberReference BorderLayout NORTH add StatementExpression Assignment MemberReference shouldBeEnabled Literal false = StatementExpression Assignment MemberReference lastPanel MemberReference blankPanel = ReturnStatement End StatementExpression Assignment MemberReference shouldBeEnabled Literal true = StatementExpression Assignment MemberReference stylePanel Literal null = LocalVariableDeclaration ReferenceType Class VariableDeclarator targetClass MethodInvocation t getClass StatementExpression Assignment MemberReference stylePanel MethodInvocation MemberReference targetClass findPanelFor = IfStatement BinaryOperation != MemberReference stylePanel Literal null BlockStatement StatementExpression MethodInvocation MemberReference stylePanel removeTargetListener StatementExpression MethodInvocation MemberReference stylePanel addTargetListener StatementExpression MethodInvocation stylePanel MemberReference target setTarget StatementExpression MethodInvocation MemberReference stylePanel MemberReference BorderLayout NORTH add StatementExpression Assignment MemberReference shouldBeEnabled Literal true = StatementExpression Assignment MemberReference lastPanel MemberReference stylePanel = BlockStatement StatementExpression MethodInvocation MemberReference blankPanel MemberReference BorderLayout NORTH add StatementExpression Assignment MemberReference shouldBeEnabled Literal false = StatementExpression Assignment MemberReference lastPanel MemberReference blankPanel = End StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint MethodDeclaration Modifier public refresh StatementExpression MethodInvocation MemberReference target setTarget MethodDeclaration /**
     * Find the stylepanel for a given target class.
     *
     * @param targetClass
     *            the target class
     * @return a Stylepanel object or <code>null</code> on error
     */ Modifier public ReferenceType StylePanel findPanelFor FormalParameter ReferenceType Class targetClass LocalVariableDeclaration ReferenceType Class VariableDeclarator panelClass Literal null LocalVariableDeclaration ReferenceType TabFigTarget VariableDeclarator p MethodInvocation panels MemberReference targetClass get IfStatement BinaryOperation == MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator newClass MemberReference targetClass WhileStatement BinaryOperation && BinaryOperation != MemberReference newClass Literal null BinaryOperation == MemberReference panelClass Literal null BlockStatement StatementExpression Assignment MemberReference panelClass MethodInvocation MemberReference newClass panelClassFor = StatementExpression Assignment MemberReference newClass MethodInvocation newClass getSuperclass = End IfStatement BinaryOperation == MemberReference panelClass Literal null ReturnStatement Literal null End TryStatement StatementExpression Assignment MemberReference p Cast ReferenceType TabFigTarget MethodInvocation panelClass newInstance = CatchClause CatchClauseParameter IllegalAccessException ignore StatementExpression MethodInvocation LOG MemberReference ignore error ReturnStatement Literal null CatchClause CatchClauseParameter InstantiationException ignore StatementExpression MethodInvocation LOG MemberReference ignore error ReturnStatement Literal null StatementExpression MethodInvocation panels MemberReference targetClass MemberReference p put End StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""found style for "" MethodInvocation targetClass getName Literal ""("" MethodInvocation p getClass Literal "")"" debug ReturnStatement Cast ReferenceType StylePanel MemberReference p MethodDeclaration /**
     * Get the class for the required stylepanel.
     *
     * @param targetClass the class of the current selected target.
     * @return the panel class for the class given or
     * null if none available.
     */ Modifier public ReferenceType Class panelClassFor FormalParameter ReferenceType Class targetClass IfStatement BinaryOperation == MemberReference targetClass Literal null BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator classNs Cast ReferenceType StringNamespace MethodInvocation StringNamespace MemberReference targetClass parse LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator baseNs Cast ReferenceType StringNamespace MethodInvocation StringNamespace Literal ""org.argouml.ui."" MemberReference Namespace JAVA_NS_TOKEN parse LocalVariableDeclaration ReferenceType StringNamespaceElement VariableDeclarator targetClassElement Cast ReferenceType StringNamespaceElement MethodInvocation classNs peekNamespaceElement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Attempt to find style panel for: "" MemberReference classNs debug StatementExpression MethodInvocation classNs popNamespaceElement LocalVariableDeclaration ReferenceType String VariableDeclarator bases ArrayCreator ReferenceType String ArrayInitializer MethodInvocation classNs toString MethodInvocation baseNs toString ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator stylePanelName MemberReference stylePanelNames BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator baseName MemberReference bases BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + BinaryOperation + BinaryOperation + MemberReference baseName Literal ""."" MemberReference stylePanelName MemberReference targetClassElement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation MemberReference name loadClass IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement ReturnStatement MemberReference cls End End End ReturnStatement Literal null MethodDeclaration Modifier private ReferenceType Class loadClass FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation Class MemberReference name forName ReturnStatement MemberReference cls CatchClause CatchClauseParameter ClassNotFoundException ignore StatementExpression MethodInvocation LOG BinaryOperation + Literal ""ClassNotFoundException. Could not find class:"" MemberReference name debug ReturnStatement Literal null MethodDeclaration /**
     * @return the style panel names
     */ Modifier protected ReferenceType String getStylePanelNames ReturnStatement MemberReference stylePanelNames MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object targetItem IfStatement BinaryOperation instanceof MemberReference targetItem ReferenceType Fig BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference targetItem isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation p getActiveDiagram IfStatement BinaryOperation == MemberReference diagram Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation diagram MemberReference targetItem presentationFor IfStatement BinaryOperation == MemberReference f Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement Literal false End StatementExpression Assignment MemberReference targetItem MemberReference f = BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement Literal false End End StatementExpression Assignment MemberReference shouldBeEnabled Literal true = LocalVariableDeclaration ReferenceType Class VariableDeclarator targetClass MethodInvocation targetItem getClass StatementExpression Assignment MemberReference stylePanel MethodInvocation MemberReference targetClass findPanelFor = StatementExpression Assignment MemberReference targetClass MethodInvocation targetClass getSuperclass = IfStatement BinaryOperation == MemberReference stylePanel Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = End ReturnStatement MemberReference shouldBeEnabled MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType DelayedChangeNotify VariableDeclarator delayedNotify ClassCreator ReferenceType DelayedChangeNotify This MemberReference pce StatementExpression MethodInvocation SwingUtilities MemberReference delayedNotify invokeLater MethodDeclaration Modifier public delayedVetoableChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation != MemberReference stylePanel Literal null StatementExpression MethodInvocation stylePanel MemberReference pce refresh End MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget StatementExpression MethodInvocation MemberReference e fireTargetAdded MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget StatementExpression MethodInvocation MemberReference e fireTargetRemoved MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget StatementExpression MethodInvocation MemberReference e fireTargetSet MethodDeclaration /**
     * Adds a listener.
     *
     * @param listener
     *            the listener to add
     */ Modifier private addTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener add MethodDeclaration /**
     * Removes a target listener.
     *
     * @param listener
     *            the listener to remove
     */ Modifier private removeTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener remove MethodDeclaration /**
     * @param targetEvent
     */ Modifier private fireTargetSet FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End MethodDeclaration /**
     * @param targetEvent
     */ Modifier private fireTargetAdded FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End MethodDeclaration /**
     * @param targetEvent
     */ Modifier private fireTargetRemoved FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End ReferenceType AbstractArgoJPanel ReferenceType TabFigTarget ReferenceType PropertyChangeListener ReferenceType DelayedVChangeListener",1
676,676,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import javax.swing.JPanel Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ui.WizStepTextField Import org.argouml.i18n.Translator ClassDeclaration Modifier public /** 
 * A wizard which adjust the threshold for critics. <p>
 * 
 * TODO: Make the treshold setting adjustable without using the wizard, 
 * and make it persistent. 
 * Maybe by using the ""Configure"" button on the Browse Critics dialog.
 *
 * @see org.argouml.uml.cognitive.critics.AbstractCrTooMany
 * @author mkl
 *
 */ WizTooMany FieldDeclaration Modifier private ReferenceType String VariableDeclarator instructions MethodInvocation Translator Literal ""critics.WizTooMany-ins"" localize FieldDeclaration Modifier private ReferenceType WizStepTextField VariableDeclarator step1 ConstructorDeclaration Modifier public /**
     *
     */ WizTooMany StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public BasicType int getNumSteps ReturnStatement Literal 1 MethodDeclaration Modifier public ReferenceType JPanel makePanel FormalParameter BasicType int newStep SwitchStatement MemberReference newStep SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1 Literal null BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation getToDoItem LocalVariableDeclaration ReferenceType AbstractCrTooMany VariableDeclarator critic Cast ReferenceType AbstractCrTooMany MethodInvocation item getPoster StatementExpression Assignment MemberReference step1 ClassCreator ReferenceType WizStepTextField This MemberReference instructions Literal ""Threshold"" MethodInvocation Integer MethodInvocation critic getThreshold toString = End ReturnStatement MemberReference step1 End ReturnStatement Literal null MethodDeclaration Modifier public BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish ReturnStatement Literal false End IfStatement BinaryOperation == MethodInvocation getStep Literal 0 ReturnStatement Literal true End IfStatement BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1 Literal null BlockStatement TryStatement StatementExpression MethodInvocation Integer MethodInvocation step1 getText parseInt ReturnStatement Literal true CatchClause CatchClauseParameter NumberFormatException ex End ReturnStatement Literal false MethodDeclaration Modifier public doAction FormalParameter BasicType int oldStep SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration ReferenceType String VariableDeclarator newThreshold LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation getToDoItem LocalVariableDeclaration ReferenceType AbstractCrTooMany VariableDeclarator critic Cast ReferenceType AbstractCrTooMany MethodInvocation item getPoster IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference newThreshold MethodInvocation step1 getText = TryStatement StatementExpression MethodInvocation critic MethodInvocation Integer MemberReference newThreshold parseInt setThreshold CatchClause CatchClauseParameter NumberFormatException ex End BreakStatement End ReferenceType UMLWizard",0
112,112,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Enumeration Import java.util.List Import org.argouml.cognitive.Designer Import org.argouml.cognitive.Goal Import org.argouml.cognitive.ListSet Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision Import org.tigris.gef.util.ChildGenerator Import org.tigris.gef.util.EnumerationEmpty ClassDeclaration Modifier public /** A critic to detect when a class can never have instances (of
 *
 * @author jrobbins
 *  itself of any subclasses). */ CrUselessAbstract ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrUselessAbstract StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision INHERITANCE addSupportedDecision StatementExpression MethodInvocation MethodInvocation Goal getUnspecifiedGoal addSupportedGoal StatementExpression MethodInvocation Literal ""specialization"" addTrigger StatementExpression MethodInvocation Literal ""isAbstract"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference dm IfStatement MethodInvocation ! Model MethodInvocation MemberReference cls isAbstract getFacade BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ListSet VariableDeclarator derived ClassCreator MethodInvocation ClassCreator ReferenceType ChildGenDerivedClasses reachable ReferenceType ListSet MemberReference cls ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator c MemberReference derived BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference c isAbstract getFacade BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true ReferenceType CrUML ClassDeclaration ChildGenDerivedClasses MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType Object VariableDeclarator c MemberReference o LocalVariableDeclaration ReferenceType Collection VariableDeclarator specs ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference c getSpecializations getFacade IfStatement BinaryOperation == MemberReference specs Literal null BlockStatement ReturnStatement MethodInvocation EnumerationEmpty theInstance End LocalVariableDeclaration ReferenceType List VariableDeclarator specClasses ClassCreator ReferenceType ArrayList MethodInvocation specs size ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator g MemberReference specs BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ge MethodInvocation Model MethodInvocation MemberReference g getSpecific getFacade IfStatement BinaryOperation != MemberReference ge Literal null BlockStatement StatementExpression MethodInvocation specClasses MemberReference ge add End End ReturnStatement MethodInvocation Collections MemberReference specClasses enumeration ReferenceType ChildGenerator",0
691,691,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection Import java.util.List Import java.util.Vector ClassDeclaration Modifier public abstract /**
 * An abstract Decorator for the {@link CommonBehaviorHelper}.
 *
 * @author Bob Tarling
 */ AbstractCommonBehaviorHelperDecorator FieldDeclaration /**
     * The component.
     */ Modifier private ReferenceType CommonBehaviorHelper VariableDeclarator impl ConstructorDeclaration Modifier protected /**
     * @param component The component to decorate.
     */ AbstractCommonBehaviorHelperDecorator FormalParameter ReferenceType CommonBehaviorHelper component StatementExpression Assignment MemberReference impl MemberReference component = MethodDeclaration /**
     * The component we are decorating.
     *
     * @return Returns the component.
     */ Modifier protected ReferenceType CommonBehaviorHelper getComponent ReturnStatement MemberReference impl MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object link ReturnStatement MethodInvocation impl MemberReference link getSource MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object link ReturnStatement MethodInvocation impl MemberReference link getDestination MethodDeclaration Modifier public removeActualArgument FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference argument removeActualArgument MethodDeclaration Modifier public setActualArguments FormalParameter ReferenceType Object action FormalParameter ReferenceType List arguments StatementExpression MethodInvocation impl MemberReference action MemberReference arguments setActualArguments MethodDeclaration Modifier public removeClassifier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier StatementExpression MethodInvocation impl MemberReference handle MemberReference classifier removeClassifier MethodDeclaration Modifier public removeContext FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object context StatementExpression MethodInvocation impl MemberReference handle MemberReference context removeContext MethodDeclaration Modifier public removeReception FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object reception StatementExpression MethodInvocation impl MemberReference handle MemberReference reception removeReception MethodDeclaration Modifier public addActualArgument FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference argument addActualArgument MethodDeclaration Modifier public addActualArgument FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference argument addActualArgument MethodDeclaration Modifier public addClassifier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier StatementExpression MethodInvocation impl MemberReference handle MemberReference classifier addClassifier MethodDeclaration Modifier public addStimulus FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object stimulus StatementExpression MethodInvocation impl MemberReference handle MemberReference stimulus addStimulus MethodDeclaration Modifier public setAsynchronous FormalParameter ReferenceType Object handle FormalParameter BasicType boolean value StatementExpression MethodInvocation impl MemberReference handle MemberReference value setAsynchronous MethodDeclaration Modifier public setOperation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object operation StatementExpression MethodInvocation impl MemberReference handle MemberReference operation setOperation MethodDeclaration Modifier public setClassifiers FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection classifiers StatementExpression MethodInvocation impl MemberReference handle MemberReference classifiers setClassifiers MethodDeclaration Modifier public setCommunicationLink FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object c StatementExpression MethodInvocation impl MemberReference handle MemberReference c setCommunicationLink MethodDeclaration Modifier public setComponentInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object c StatementExpression MethodInvocation impl MemberReference handle MemberReference c setComponentInstance MethodDeclaration Modifier public setContexts FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection c StatementExpression MethodInvocation impl MemberReference handle MemberReference c setContexts MethodDeclaration Modifier public setDispatchAction FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value StatementExpression MethodInvocation impl MemberReference handle MemberReference value setDispatchAction MethodDeclaration Modifier public setInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object inst StatementExpression MethodInvocation impl MemberReference handle MemberReference inst setInstance MethodDeclaration Modifier public setNodeInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object nodeInstance StatementExpression MethodInvocation impl MemberReference handle MemberReference nodeInstance setNodeInstance MethodDeclaration Modifier public setReceiver FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object receiver StatementExpression MethodInvocation impl MemberReference handle MemberReference receiver setReceiver MethodDeclaration Modifier public setReception FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection c StatementExpression MethodInvocation impl MemberReference handle MemberReference c setReception MethodDeclaration Modifier public setRecurrence FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr StatementExpression MethodInvocation impl MemberReference handle MemberReference expr setRecurrence MethodDeclaration Modifier public setScript FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr StatementExpression MethodInvocation impl MemberReference handle MemberReference expr setScript MethodDeclaration Modifier public setSender FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sender StatementExpression MethodInvocation impl MemberReference handle MemberReference sender setSender MethodDeclaration Modifier public setSignal FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object signal StatementExpression MethodInvocation impl MemberReference handle MemberReference signal setSignal MethodDeclaration Modifier public setSpecification FormalParameter ReferenceType Object handle FormalParameter ReferenceType String specification StatementExpression MethodInvocation impl MemberReference handle MemberReference specification setSpecification MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element StatementExpression MethodInvocation impl MemberReference handle MemberReference element setTarget MethodDeclaration Modifier public setTransition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object trans StatementExpression MethodInvocation impl MemberReference handle MemberReference trans setTransition MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value StatementExpression MethodInvocation impl MemberReference handle MemberReference value setValue MethodDeclaration Modifier public ReferenceType Object getInstantiation FormalParameter ReferenceType Object createaction ReturnStatement MethodInvocation impl MemberReference createaction getInstantiation MethodDeclaration Modifier public setInstantiation FormalParameter ReferenceType Object createaction FormalParameter ReferenceType Object instantiation StatementExpression MethodInvocation impl MemberReference createaction MemberReference instantiation setInstantiation MethodDeclaration Modifier public ReferenceType Object getActionOwner FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle getActionOwner MethodDeclaration Modifier public addAction FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object action StatementExpression MethodInvocation impl MemberReference handle MemberReference action addAction MethodDeclaration Modifier public addAction FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object action StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference action addAction MethodDeclaration Modifier public removeAction FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object action StatementExpression MethodInvocation impl MemberReference handle MemberReference action removeAction ReferenceType CommonBehaviorHelper",0
1236,1236,,0
1491,1491,,0
282,282,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import org.argouml.model.AbstractActivityGraphsHelperDecorator Import org.argouml.model.ActivityGraphsHelper ClassDeclaration /**
 * This Decorator is responsible for generating commands for any
 * mutable methods.
 *
 * @author Linus Tolke
 */ UndoActivityGraphsHelperDecorator ConstructorDeclaration /**
     * Constructor.
     *
     * @param component The component we are decorating.
     */ UndoActivityGraphsHelperDecorator FormalParameter ReferenceType ActivityGraphsHelper component StatementExpression SuperConstructorInvocation MemberReference component ReferenceType AbstractActivityGraphsHelperDecorator",0
1204,1204,,0
85,85,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * The GoRule AssociationRole->Messages.
 *
 */ GoAssocRoleToMessages MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.association-role.messages"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isAAssociationRole getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getMessages getFacade MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAAssociationRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
665,665,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import java.awt.Color Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.beans.PropertyVetoException Import java.util.ArrayList Import java.util.Iterator Import java.util.List Import org.argouml.model.Model Import org.argouml.notation.NotationProvider Import org.argouml.notation.NotationProviderFactory2 Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML ComponentInstance in a diagram.
 *
 * @author 5eichler
 */ FigComponentInstance FieldDeclaration Modifier private ReferenceType NotationProvider VariableDeclarator notationProvider ConstructorDeclaration Modifier public /**
     * Construct a default ComponentInstance figure.
     */ FigComponentInstance StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MethodInvocation Literal true setUnderline getNameFig ConstructorDeclaration Modifier public /**
     * Constructor that hooks the Fig into an existing UML element.
     *
     * @param gm ignored
     * @param node the UML element
     */ FigComponentInstance FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression SuperConstructorInvocation MemberReference gm MemberReference node MethodDeclaration Modifier protected Annotation Override initNotationProviders FormalParameter ReferenceType Object own StatementExpression SuperMethodInvocation MemberReference own initNotationProviders IfStatement MethodInvocation Model MethodInvocation MemberReference own isAComponentInstance getFacade BlockStatement StatementExpression Assignment MemberReference notationProvider MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 TYPE_COMPONENTINSTANCE MemberReference own getNotationProvider getInstance = End MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigComponentInstance VariableDeclarator figClone Cast ReferenceType FigComponentInstance SuperMethodInvocation clone ReturnStatement MemberReference figClone MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression SuperMethodInvocation MemberReference oldOwner MemberReference newOwner updateListeners IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference newOwner getClassifiers getFacade BlockStatement StatementExpression MethodInvocation MemberReference classifier Literal ""name"" addElementListener End End MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionComponentInstance This MethodDeclaration Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseClicked StatementExpression MethodInvocation MemberReference Color black setLineColor MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mousePressed LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This findSelectionFor getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType SelectionComponentInstance BlockStatement StatementExpression Cast ReferenceType SelectionComponentInstance MemberReference sel End MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator comp MethodInvocation getOwner IfStatement BinaryOperation != MemberReference encloser Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nodeOrComp MethodInvocation encloser getOwner IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrComp isANodeInstance getFacade BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getNodeInstance getFacade MemberReference nodeOrComp BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp MemberReference nodeOrComp setNodeInstance getCommonBehaviorHelper StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig End IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrComp isAComponentInstance getFacade BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getComponentInstance getFacade MemberReference nodeOrComp BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp MemberReference nodeOrComp setComponentInstance getCommonBehaviorHelper StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig End IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrComp isANode getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig End End End IfStatement BinaryOperation != MethodInvocation getLayer Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator contents ClassCreator ReferenceType ArrayList MethodInvocation MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation contents iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator figedge Cast ReferenceType FigEdgeModelElement MemberReference o StatementExpression MethodInvocation figedge MethodInvocation MemberReference figedge bringToFront getLayer End End End IfStatement BinaryOperation && BinaryOperation && MethodInvocation isVisible BinaryOperation == MemberReference encloser Literal null BinaryOperation != MethodInvocation getEnclosingFig Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getNodeInstance getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp Literal null setNodeInstance getCommonBehaviorHelper End IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getComponentInstance getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp Literal null setComponentInstance getCommonBehaviorHelper End StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig End End End MethodDeclaration Modifier protected Annotation Override textEdited FormalParameter ReferenceType FigText ft PropertyVetoException IfStatement BinaryOperation == MemberReference ft MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation notationProvider MethodInvocation getOwner MethodInvocation ft getText parse StatementExpression MethodInvocation ft MethodInvocation notationProvider MethodInvocation getOwner Literal null toString setText End MethodDeclaration Modifier protected Annotation Override textEditStarted FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation MethodInvocation notationProvider getParsingHelp showHelp End MethodDeclaration Modifier protected Annotation Override updateStereotypeText StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner setOwner getStereotypeFig MethodDeclaration Modifier protected Annotation Override updateNameText IfStatement MethodInvocation isReadyToEdit BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation notationProvider MethodInvocation getOwner Literal null toString setText getNameFig End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds ReferenceType AbstractFigComponent",0
325,325,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import java.io.File Import javax.swing.AbstractAction Import org.argouml.ui.ProjectBrowser ClassDeclaration Modifier public /**
 * Reopens a project with respect of the calling event handler - should be
 * used with menu item.
 *
 * @author  Frank Jelinek
 * @since 10. November 2003 (0.15.2)
 */ ActionReopenProject FieldDeclaration Modifier private ReferenceType String VariableDeclarator filename ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param theFilename The name of the file.
     */ ActionReopenProject FormalParameter ReferenceType String theFilename StatementExpression SuperConstructorInvocation Literal ""action.reopen-project"" StatementExpression Assignment MemberReference filename MemberReference theFilename = MethodDeclaration /**
     * Get the filename for comparing during menu creation.
     *
     * @return The filename.
     */ Modifier public ReferenceType String getFilename ReturnStatement MemberReference filename MethodDeclaration /**
     * Performs the save and reload of a project.
     *
     * @param e e should old the event and the eventsource. Event
     * source is the menu item, the text is used for opening the
     * project
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation ! ProjectBrowser MethodInvocation askConfirmationAndSave getInstance ReturnStatement End LocalVariableDeclaration ReferenceType File VariableDeclarator toOpen ClassCreator ReferenceType File MemberReference filename StatementExpression MethodInvocation ProjectBrowser MethodInvocation MemberReference toOpen Literal true loadProjectWithProgressMonitor getInstance ReferenceType AbstractAction",0
852,852,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.Collection Import java.util.Iterator Import org.argouml.model.ActivityGraphsHelper Import org.argouml.model.Model Import org.omg.uml.behavioralelements.activitygraphs.ClassifierInState Import org.omg.uml.behavioralelements.activitygraphs.ObjectFlowState Import org.omg.uml.behavioralelements.activitygraphs.Partition Import org.omg.uml.behavioralelements.statemachines.CompositeState Import org.omg.uml.behavioralelements.statemachines.State Import org.omg.uml.behavioralelements.statemachines.StateMachine Import org.omg.uml.behavioralelements.statemachines.StateVertex Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Parameter Import org.omg.uml.modelmanagement.UmlPackage ClassDeclaration /**
 * Class to implement ActivityGraphsHelper.
 * @since ARGO0.19.5
 * @author Ludovic Ma&icirc;tre
 * Derived from NSUML implementation
 */ ActivityGraphsHelperMDRImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActivityGraphsHelperMDRImpl StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public ReferenceType Object findClassifierByName FormalParameter ReferenceType Object ofs FormalParameter ReferenceType String s IfStatement BinaryOperation instanceof MemberReference ofs ReferenceType ObjectFlowState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator cs Cast ReferenceType ObjectFlowState MemberReference ofs LocalVariableDeclaration ReferenceType StateMachine VariableDeclarator sm MethodInvocation cs getStateMachine LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator ns MethodInvocation sm getContext IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement Literal null End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation ns getNamespace = End IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator classifier Cast ReferenceType ModelElement MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator cn MethodInvocation classifier getName IfStatement BinaryOperation && BinaryOperation != MemberReference cn Literal null MethodInvocation cn MemberReference s equals BlockStatement ReturnStatement MemberReference classifier End End BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object findStateByName FormalParameter ReferenceType Object c FormalParameter ReferenceType String s IfStatement BinaryOperation instanceof MemberReference c ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End IfStatement BinaryOperation || BinaryOperation == MemberReference s Literal null MethodInvocation s Literal """" equals BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType Collection VariableDeclarator allStatemachines MethodInvocation Model MethodInvocation MemberReference c getBehaviors getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation allStatemachines iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType StateMachine VariableDeclarator statemachine Cast ReferenceType StateMachine MethodInvocation i next LocalVariableDeclaration ReferenceType State VariableDeclarator top MethodInvocation statemachine getTop LocalVariableDeclaration ReferenceType Collection VariableDeclarator allStates MethodInvocation Model MethodInvocation MemberReference top getAllSubStates getStateMachinesHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ii MethodInvocation allStates iterator WhileStatement MethodInvocation ii hasNext BlockStatement LocalVariableDeclaration ReferenceType StateVertex VariableDeclarator state Cast ReferenceType StateVertex MethodInvocation ii next LocalVariableDeclaration ReferenceType String VariableDeclarator statename MethodInvocation state getName IfStatement BinaryOperation != MemberReference statename Literal null BlockStatement IfStatement MethodInvocation statename MemberReference s equals BlockStatement ReturnStatement MemberReference state End End End End ReturnStatement Literal null MethodDeclaration Modifier public BasicType boolean isAddingActivityGraphAllowed FormalParameter ReferenceType Object context ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference context ReferenceType BehavioralFeature BinaryOperation instanceof MemberReference context ReferenceType Classifier BinaryOperation instanceof MemberReference context ReferenceType UmlPackage MethodDeclaration Modifier public addInState FormalParameter ReferenceType Object classifierInState FormalParameter ReferenceType Object state IfStatement BinaryOperation && BinaryOperation instanceof MemberReference classifierInState ReferenceType ClassifierInState BinaryOperation instanceof MemberReference state ReferenceType State BlockStatement StatementExpression Cast ReferenceType ClassifierInState MemberReference classifierInState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""classifierInState: "" MemberReference classifierInState Literal "" or state: "" MemberReference state End MethodDeclaration Modifier public setInStates FormalParameter ReferenceType Object classifierInState FormalParameter ReferenceType Collection newStates IfStatement BinaryOperation instanceof MemberReference classifierInState ReferenceType ClassifierInState BlockStatement LocalVariableDeclaration ReferenceType ClassifierInState VariableDeclarator cis Cast ReferenceType ClassifierInState MemberReference classifierInState StatementExpression MethodInvocation CollectionHelper MethodInvocation cis getInState MemberReference newStates update BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""classifierInState: "" MemberReference classifierInState End MethodDeclaration Modifier public setContents FormalParameter ReferenceType Object partition FormalParameter ReferenceType Collection contents IfStatement BinaryOperation instanceof MemberReference partition ReferenceType Partition BlockStatement LocalVariableDeclaration ReferenceType Partition VariableDeclarator p Cast ReferenceType Partition MemberReference partition StatementExpression MethodInvocation CollectionHelper MethodInvocation p getContents MemberReference contents update BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Partition: "" MemberReference partition End MethodDeclaration Modifier public addContent FormalParameter ReferenceType Object partition FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Partition VariableDeclarator p Cast ReferenceType Partition MemberReference partition StatementExpression MethodInvocation p MethodInvocation Cast ReferenceType ModelElement MemberReference modelElement add getContents MethodDeclaration Modifier public removeContent FormalParameter ReferenceType Object partition FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Partition VariableDeclarator p Cast ReferenceType Partition MemberReference partition StatementExpression MethodInvocation p MethodInvocation MemberReference modelElement remove getContents MethodDeclaration Modifier public setSynch FormalParameter ReferenceType Object objectFlowState FormalParameter BasicType boolean isSynch StatementExpression Cast ReferenceType ObjectFlowState MemberReference objectFlowState MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Object parameter StatementExpression Cast ReferenceType ObjectFlowState MemberReference objectFlowState MethodDeclaration Modifier public removeParameter FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Object parameter StatementExpression Cast ReferenceType ObjectFlowState MemberReference objectFlowState MethodDeclaration Modifier public setParameters FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Collection parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator params Cast ReferenceType ObjectFlowState MemberReference objectFlowState StatementExpression MethodInvocation params clear StatementExpression MethodInvocation params MemberReference parameters addAll ReferenceType ActivityGraphsHelper",0
1412,1412,,0
1440,1440,,0
829,829,"CompilationUnit PackageDeclaration org.argouml.ui Import java.util.Hashtable Import java.util.Properties Import javax.swing.Action Import javax.swing.ImageIcon Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator ClassDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" /**
 * Extends GEF CmdSetMode to add additional metadata such as tooltips.
 *
 * @author Jeremy Jones
 * @deprecated for 0.25.3 by tfmorris - use {@link ActionSetMode}
 */ CmdSetMode ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param args arguments
     */ CmdSetMode FormalParameter ReferenceType Properties args StatementExpression SuperConstructorInvocation MemberReference args ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     */ CmdSetMode FormalParameter ReferenceType Class modeClass StatementExpression SuperConstructorInvocation MemberReference modeClass ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param name the name of the command that is the tooltip text.
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference modeClass MethodInvocation ResourceLoaderWrapper MemberReference name getImageBinding StatementExpression MethodInvocation MemberReference name putToolTip ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param name the to be localized name of the command
     * @param tooltipkey The key for the tooltip text.
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType String name FormalParameter ReferenceType String tooltipkey StatementExpression SuperConstructorInvocation MemberReference modeClass MemberReference name StatementExpression MethodInvocation MemberReference tooltipkey putToolTip ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param sticky the global sticky mode boolean allows the user
     *               to place several nodes rapidly (in succession)
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter BasicType boolean sticky StatementExpression SuperConstructorInvocation MemberReference modeClass MemberReference sticky ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param modeArgs arguments for the new mode
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType Hashtable modeArgs StatementExpression SuperConstructorInvocation MemberReference modeClass MemberReference modeArgs ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param modeArgs arguments for the new mode
     * @param name the name of the command that is the tooltip text.
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType Hashtable modeArgs FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference modeClass MethodInvocation ResourceLoaderWrapper MemberReference name getImageBinding StatementExpression Assignment MemberReference _modeArgs MemberReference modeArgs = StatementExpression MethodInvocation MemberReference name putToolTip ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param arg the name of a new argument for the new mode
     * @param value the value of a new argument for the new mode
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType String arg FormalParameter ReferenceType Object value StatementExpression SuperConstructorInvocation MemberReference modeClass MemberReference arg MemberReference value ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param arg the name of a new argument for the new mode
     * @param value the value of a new argument for the new mode
     * @param name the name of the command that is the tooltip text.
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType String arg FormalParameter ReferenceType Object value FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference modeClass MemberReference arg MemberReference value MethodInvocation ResourceLoaderWrapper MemberReference name getImageBinding StatementExpression MethodInvocation MemberReference name putToolTip ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modeClass the next global editor mode
     * @param arg the name of a new argument for the new mode
     * @param value the value of a new argument for the new mode
     * @param name the name of the command that is the tooltip text.
     * @param icon the SMALL_ICON for the action
     */ CmdSetMode FormalParameter ReferenceType Class modeClass FormalParameter ReferenceType String arg FormalParameter ReferenceType Object value FormalParameter ReferenceType String name FormalParameter ReferenceType ImageIcon icon StatementExpression SuperConstructorInvocation MemberReference modeClass MemberReference arg MemberReference value MemberReference name MemberReference icon StatementExpression MethodInvocation MemberReference name putToolTip MethodDeclaration /**
     * Adds tooltip text to the Action.
     *
     * @param key The key to be localized to become the tooltip.
     */ Modifier private putToolTip FormalParameter ReferenceType String key StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator MemberReference key localize putValue ReferenceType org ReferenceType tigris ReferenceType gef ReferenceType base ReferenceType CmdSetMode",0
88,88,"CompilationUnit PackageDeclaration org.argouml.application.api InterfaceDeclaration Modifier public /**
 * Defines a functor interface implemented by 
 * classes that perform a predicate.
 * 
 * @author michiel
 */ Predicate MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter ReferenceType Object object",0
984,984,,0
632,632,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 */ UMLGeneralizationParentListModel ConstructorDeclaration Modifier public /**
     * Constructor.
     */ UMLGeneralizationParentListModel StatementExpression SuperConstructorInvocation Literal ""parent"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation == MethodInvocation getTarget Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getGeneral getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getGeneral getFacade MemberReference o ReferenceType UMLModelElementListModel2",0
506,506,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import javax.swing.JPanel Import org.apache.log4j.Logger Import org.argouml.cognitive.ui.WizStepChoice Import org.argouml.cognitive.ui.WizStepCue Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * A wizard to help the user change the name of an operation to a better name.
 * Same as WizMEName except that it handles the special case where the operation
 * instead should be made a constructor of the class. This is helpful in
 * languages where constructors have names that do not agree with the convention
 * for method names (i.e. Java).<p>
 *
 * Path looks like this for the case when it is not supposed to be a
 * constructor:
 *
 * <pre>
 *
 *  step0 -&gt; step1
 *
 * </pre>
 *
 * Path looks like this for the case when it is supposed to be a constructor:
 *
 * <pre>
 *
 *  step0 -&gt; step1 -&gt; step2 (OK! in the case converted to constructor)
 *                 -&gt; step2 (same as step1 in the scenario above)
 *
 * </pre>
 */ WizOperName FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType WizOperName getLogger FieldDeclaration Modifier private BasicType boolean VariableDeclarator possibleConstructor FieldDeclaration Modifier private BasicType boolean VariableDeclarator stereotypePathChosen FieldDeclaration Modifier private ReferenceType String VariableDeclarator option0 MethodInvocation Translator Literal ""critics.WizOperName-options1"" localize FieldDeclaration Modifier private ReferenceType String VariableDeclarator option1 MethodInvocation Translator Literal ""critics.WizOperName-options2"" localize FieldDeclaration Modifier private ReferenceType WizStepChoice VariableDeclarator step1 FieldDeclaration Modifier private ReferenceType WizStepCue VariableDeclarator step2 FieldDeclaration Modifier private ReferenceType Object VariableDeclarator createStereotype FieldDeclaration Modifier private BasicType boolean VariableDeclarator addedCreateStereotype MethodDeclaration Modifier public Annotation Override BasicType int getNumSteps IfStatement MemberReference possibleConstructor BlockStatement ReturnStatement Literal 2 End ReturnStatement Literal 1 MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String getOptions LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator res ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation res MemberReference option0 add StatementExpression MethodInvocation res MemberReference option1 add ReturnStatement MemberReference res MethodDeclaration /**
     * Method to tell the Wizard what path it should work with.
     *
     * @param b
     *            setToConstructor is true if we shall take the path where the
     *            oper is converted to a constructor.
     */ Modifier public setPossibleConstructor FormalParameter BasicType boolean b StatementExpression Assignment MemberReference possibleConstructor MemberReference b = MethodDeclaration Modifier public Annotation Override ReferenceType JPanel makePanel FormalParameter BasicType int newStep IfStatement MemberReference ! possibleConstructor BlockStatement ReturnStatement SuperMethodInvocation MemberReference newStep makePanel End SwitchStatement MemberReference newStep SwitchStatementCase Literal 0 ReturnStatement SuperMethodInvocation MemberReference newStep makePanel SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference step1 ClassCreator ReferenceType WizStepChoice This MethodInvocation getInstructions MethodInvocation getOptions = StatementExpression MethodInvocation step1 MethodInvocation getToDoItem setTarget End ReturnStatement MemberReference step1 SwitchStatementCase Literal 2 IfStatement MemberReference stereotypePathChosen BlockStatement IfStatement BinaryOperation == MemberReference step2 Literal null BlockStatement StatementExpression Assignment MemberReference step2 ClassCreator ReferenceType WizStepCue This MethodInvocation Translator Literal ""critics.WizOperName-stereotype"" localize = StatementExpression MethodInvocation step2 MethodInvocation getToDoItem setTarget End ReturnStatement MemberReference step2 End ReturnStatement SuperMethodInvocation Literal 1 makePanel SwitchStatementCase End ReturnStatement Literal null MethodDeclaration /**
     * There is a possibility that the next step forward takes another path in
     * this wizard. To allow for this we must destroy the path already traveled
     * by.
     * <p>
     * TODO: I (Linus) would say that this is really a problem with the Wizard
     * implementation since I believe it should be possible to explore a path in
     * the wizard and then go back. {@inheritDoc}
     */ Modifier public Annotation Override undoAction FormalParameter BasicType int origStep StatementExpression SuperMethodInvocation MemberReference origStep undoAction IfStatement BinaryOperation >= MethodInvocation getStep Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference origStep removePanel End IfStatement BinaryOperation == MemberReference origStep Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MethodInvocation getModelElement IfStatement MemberReference addedCreateStereotype BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oper MemberReference createStereotype removeStereotype getCoreHelper End End MethodDeclaration Modifier public Annotation Override doAction FormalParameter BasicType int oldStep IfStatement MemberReference ! possibleConstructor BlockStatement StatementExpression SuperMethodInvocation MemberReference oldStep doAction ReturnStatement End SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1 getSelectedIndex = End SwitchStatement MemberReference choice SwitchStatementCase Literal - 1 ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""nothing selected, should not get here"" SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference stereotypePathChosen Literal true = LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MethodInvocation getModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation Model MethodInvocation MemberReference oper getModel getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator theStereotype Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference m getOwnedElements MethodInvocation iterator getFacade MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator candidate MethodInvocation iter next IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement End IfStatement Literal ! ""create"" BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType Collection VariableDeclarator baseClasses MethodInvocation Model MethodInvocation MemberReference candidate getBaseClasses getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter2 TernaryExpression BinaryOperation != MemberReference baseClasses Literal null MethodInvocation baseClasses iterator Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference iter2 Literal null Literal ! ""BehavioralFeature"" BlockStatement ContinueStatement End StatementExpression Assignment MemberReference theStereotype MemberReference candidate = BreakStatement End IfStatement BinaryOperation == MemberReference theStereotype Literal null BlockStatement StatementExpression Assignment MemberReference theStereotype MethodInvocation Model MethodInvocation Literal ""create"" MemberReference m buildStereotype getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference theStereotype Literal ""create"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference theStereotype Literal ""BehavioralFeature"" addBaseClass getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator targetNS MethodInvocation MethodInvocation Model MethodInvocation MemberReference oper getNamespace getFacade MethodInvocation Model MethodInvocation MemberReference oper getModel getFacade findNamespace StatementExpression MethodInvocation Model MethodInvocation MemberReference targetNS MemberReference theStereotype addOwnedElement getCoreHelper End TryStatement StatementExpression Assignment MemberReference createStereotype MemberReference theStereotype = StatementExpression MethodInvocation Model MethodInvocation MemberReference oper MemberReference theStereotype addStereotype getCoreHelper StatementExpression Assignment MemberReference addedCreateStereotype Literal true = CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG Literal ""could not set stereotype"" MemberReference pve error ReturnStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference stereotypePathChosen Literal false = ReturnStatement SwitchStatementCase End ReturnStatement SwitchStatementCase Literal 2 IfStatement MemberReference ! stereotypePathChosen BlockStatement StatementExpression SuperMethodInvocation Literal 1 doAction End ReturnStatement SwitchStatementCase End MethodDeclaration Modifier private static ReferenceType Object findNamespace FormalParameter ReferenceType Object phantomNS FormalParameter ReferenceType Object targetModel LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator targetParentNS Literal null IfStatement BinaryOperation == MemberReference phantomNS Literal null BlockStatement ReturnStatement MemberReference targetModel End LocalVariableDeclaration ReferenceType Object VariableDeclarator parentNS MethodInvocation Model MethodInvocation MemberReference phantomNS getNamespace getFacade IfStatement BinaryOperation == MemberReference parentNS Literal null BlockStatement ReturnStatement MemberReference targetModel End StatementExpression Assignment MemberReference targetParentNS MethodInvocation MemberReference parentNS MemberReference targetModel findNamespace = LocalVariableDeclaration ReferenceType Collection VariableDeclarator ownedElements MethodInvocation Model MethodInvocation MemberReference targetParentNS getOwnedElements getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator phantomName MethodInvocation Model MethodInvocation MemberReference phantomNS getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator targetName IfStatement BinaryOperation != MemberReference ownedElements Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ownedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ownedElements iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference ownedElement MethodInvocation iter next = StatementExpression Assignment MemberReference targetName MethodInvocation Model MethodInvocation MemberReference ownedElement getName getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference targetName Literal null MethodInvocation phantomName MemberReference targetName equals BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference ownedElement isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference ownedElement = BreakStatement End End End End IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation createPackage getModelManagementFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference ns MemberReference phantomName setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference targetParentNS MemberReference ns addOwnedElement getCoreHelper End ReturnStatement MemberReference ns FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4013730212763172160L ReferenceType WizMEName",0
1452,1452,,0
1422,1422,,0
1063,1063,,0
645,645,"CompilationUnit PackageDeclaration org.argouml.configuration Import org.apache.log4j.Logger ClassDeclaration Modifier public /**
 * A factory object that provides configuration information.
 *
 * @author Thierry Lach
 * @since 0.9.4
 */ ConfigurationFactory FieldDeclaration /**
     * The only occurance of the configuration factory.
     */ Modifier private final static ReferenceType IConfigurationFactory VariableDeclarator SINGLETON FieldDeclaration /**
     * The active configuration handler.
     */ Modifier private static ReferenceType ConfigurationHandler VariableDeclarator handler ClassCreator ReferenceType ConfigurationProperties LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation System Literal ""argo.ConfigurationFactory"" getProperty LocalVariableDeclaration ReferenceType IConfigurationFactory VariableDeclarator newFactory Literal null IfStatement BinaryOperation != MemberReference name Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference newFactory Cast ReferenceType IConfigurationFactory MethodInvocation Class MethodInvocation newInstance MemberReference name forName = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation Logger MethodInvocation BinaryOperation + BinaryOperation + Literal ""Can't create configuration factory "" MemberReference name Literal "", using default factory"" warn ClassReference ReferenceType ConfigurationFactory getLogger End IfStatement BinaryOperation == MemberReference newFactory Literal null BlockStatement StatementExpression Assignment MemberReference newFactory ClassCreator ReferenceType ConfigurationFactory = End StatementExpression Assignment MemberReference SINGLETON MemberReference newFactory = ConstructorDeclaration Modifier private /**
     * Private constructor to not allow instantiation.
     */ ConfigurationFactory MethodDeclaration /**
     * Returns the instance of the singleton.
     *
     * @return the only instance of the configuration factory.
     */ Modifier public final static ReferenceType IConfigurationFactory getInstance ReturnStatement MemberReference SINGLETON MethodDeclaration /**
     * Returns the customized configuration for the user.
     *
     * @return a concrete class which extends ConfigurationHandler and
     *         can be used to access and manipulate the configuration.
     */ Modifier public ReferenceType ConfigurationHandler getConfigurationHandler ReturnStatement MemberReference handler ReferenceType IConfigurationFactory",0
255,255,"CompilationUnit PackageDeclaration org.argouml.model ClassDeclaration Modifier public /**
 * Exception for problems with XMI files.
 * 
 * @author Tom Morris
 */ XmiException ConstructorDeclaration Modifier public /**
     * Construct an XmiException with the given message.
     * 
     * @param message the message
     */ XmiException FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference message ConstructorDeclaration Modifier public /**
     * Construct an exception with a message and a causing exception.
     *
     * @param message the message
     * @param c the cause of the exception
     */ XmiException FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable c StatementExpression SuperConstructorInvocation MemberReference message MemberReference c ConstructorDeclaration Modifier public /**
     * Construct an exception with a causing exception.
     *
     * @param c the cause of the exception
     */ XmiException FormalParameter ReferenceType Throwable c StatementExpression SuperConstructorInvocation MemberReference c ReferenceType UmlException",0
568,568,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import java.util.Collection Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * @since Oct 10, 2002
 * @author jaap.branderhorst@xs4all.nl
 * @stereotype singleton
 */ ActionSetModelElementStereotype FieldDeclaration /**
     * The instance.
     */ Modifier private final static ReferenceType ActionSetModelElementStereotype VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetModelElementStereotype ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetModelElementStereotype.
     */ ActionSetModelElementStereotype StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Collection VariableDeclarator oldStereo Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator newStereo Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator target Literal null IfStatement BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator combo Cast ReferenceType UMLComboBox2 MemberReference source IfStatement MethodInvocation Model MethodInvocation MethodInvocation combo getSelectedItem isAStereotype getFacade BlockStatement StatementExpression Assignment MemberReference newStereo MethodInvocation combo getSelectedItem = End IfStatement MethodInvocation Model MethodInvocation MethodInvocation combo getTarget isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference target MethodInvocation combo getTarget = StatementExpression Assignment MemberReference oldStereo MethodInvocation Model MethodInvocation MemberReference target getStereotypes getFacade = End IfStatement Literal MethodInvocation MethodInvocation combo getSelectedItem equals """" BlockStatement StatementExpression Assignment MemberReference newStereo Literal null = End End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference oldStereo Literal null MethodInvocation ! oldStereo MemberReference newStereo contains BinaryOperation != MemberReference target Literal null BlockStatement IfStatement BinaryOperation != MemberReference newStereo Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference newStereo addStereotype getCoreHelper End End MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionSetModelElementStereotype getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",1
1477,1477,,1
1061,1061,,0
108,108,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.Font Import java.awt.Rectangle Import java.beans.PropertyChangeEvent Import java.util.Iterator Import org.apache.log4j.Logger Import org.argouml.model.Facade Import org.argouml.model.Model Import org.argouml.model.StateMachinesHelper Import org.argouml.uml.diagram.ui.SelectionMoveClarifiers Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigLine Import org.tigris.gef.presentation.FigRect Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML StubState in a diagram.
 *
 * @author pepargouml@yahoo.es
 */ FigStubState FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType FigStubState getLogger FieldDeclaration Modifier private BasicType int VariableDeclarator x Literal 0 FieldDeclaration Modifier private BasicType int VariableDeclarator y Literal 0 FieldDeclaration Modifier private BasicType int VariableDeclarator width Literal 45 FieldDeclaration Modifier private BasicType int VariableDeclarator height Literal 20 FieldDeclaration Modifier private ReferenceType FigText VariableDeclarator referenceFig FieldDeclaration Modifier private ReferenceType FigLine VariableDeclarator stubline FieldDeclaration Modifier private ReferenceType Facade VariableDeclarator facade FieldDeclaration Modifier private ReferenceType StateMachinesHelper VariableDeclarator stateMHelper ConstructorDeclaration Modifier public /**
     * The constructor.
     */ FigStubState StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference facade MethodInvocation Model getFacade = StatementExpression Assignment MemberReference stateMHelper MethodInvocation Model getStateMachinesHelper = StatementExpression MethodInvocation ClassCreator ReferenceType FigRect MemberReference x MemberReference y MemberReference width MemberReference height setBigPort StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression MethodInvocation MethodInvocation Literal false setFilled getBigPort StatementExpression Assignment MemberReference stubline ClassCreator ReferenceType FigLine MemberReference x MemberReference y MemberReference width MemberReference y MemberReference Color black = StatementExpression Assignment MemberReference referenceFig ClassCreator ReferenceType FigText Literal 0 Literal 0 MemberReference width MemberReference height Literal true = StatementExpression MethodInvocation referenceFig MemberReference Color black setTextColor StatementExpression MethodInvocation referenceFig MemberReference FigText END_EDITING setReturnAction StatementExpression MethodInvocation referenceFig MemberReference FigText END_EDITING setTabAction StatementExpression MethodInvocation referenceFig MemberReference FigText JUSTIFY_CENTER setJustification StatementExpression MethodInvocation referenceFig Literal 0 setLineWidth StatementExpression MethodInvocation referenceFig MemberReference x MemberReference y MemberReference width MethodInvocation referenceFig MemberReference height getBounds setBounds StatementExpression MethodInvocation referenceFig Literal false setFilled StatementExpression MethodInvocation referenceFig Literal false setEditable StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference referenceFig addFig StatementExpression MethodInvocation MemberReference stubline addFig StatementExpression MethodInvocation Literal 0 setShadowSize StatementExpression MethodInvocation Literal false setBlinkPorts ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param gm (ignored)
     * @param node the UML owner element
     */ FigStubState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public setOwner FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node setOwner StatementExpression MethodInvocation renderingChanged MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigStubState VariableDeclarator figClone Cast ReferenceType FigStubState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone referenceFig Cast ReferenceType FigText MethodInvocation it next = StatementExpression Assignment MemberReference figClone stubline Cast ReferenceType FigLine MethodInvocation it next = ReturnStatement MemberReference figClone MethodDeclaration /**
     * Synch states are fixed size.
     * @return false
     */ Modifier public BasicType boolean isResizable ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionMoveClarifiers This MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation stubline MemberReference col setLineColor MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation stubline getLineColor MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation referenceFig MemberReference col setFillColor MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation referenceFig getFillColor MethodDeclaration Modifier public setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation referenceFig MemberReference f setFilled MethodDeclaration Modifier public Annotation Override BasicType boolean getFilled ReturnStatement MethodInvocation referenceFig isFilled MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation referenceFig isFilled MethodDeclaration Modifier public setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation stubline MemberReference w setLineWidth MethodDeclaration Modifier public BasicType int getLineWidth ReturnStatement MethodInvocation stubline getLineWidth MethodDeclaration Modifier protected setStandardBounds FormalParameter BasicType int theX FormalParameter BasicType int theY FormalParameter BasicType int theW FormalParameter BasicType int theH LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression Assignment MemberReference theW Literal 60 = StatementExpression MethodInvocation referenceFig MemberReference theX MemberReference theY MemberReference theW MethodInvocation referenceFig MemberReference height getBounds setBounds StatementExpression MethodInvocation stubline MemberReference theX MemberReference theY BinaryOperation + MemberReference theX MemberReference theW MemberReference theY setShape StatementExpression MethodInvocation MethodInvocation MemberReference theX MemberReference theY MemberReference theW MemberReference theH setBounds getBigPort StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator top Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator oldRef Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator container MethodInvocation facade MethodInvocation getOwner getContainer IfStatement MethodInvocation mee getSource BlockStatement IfStatement MethodInvocation mee MethodInvocation Literal ""referenceState"" equals getPropertyName BlockStatement StatementExpression MethodInvocation updateReferenceText IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation facade MemberReference container isASubmachineState BinaryOperation != MethodInvocation facade MemberReference container getSubmachine Literal null BlockStatement StatementExpression Assignment MemberReference top MethodInvocation facade MethodInvocation facade MemberReference container getSubmachine getTop = StatementExpression Assignment MemberReference oldRef MethodInvocation stateMHelper Cast ReferenceType String MethodInvocation mee getOldValue MemberReference top getStatebyName = End StatementExpression MethodInvocation MethodInvocation getOwner MemberReference oldRef updateListenersX IfStatement BinaryOperation && MethodInvocation mee MethodInvocation Literal ""container"" equals getPropertyName MethodInvocation facade MemberReference container isASubmachineState BlockStatement StatementExpression MethodInvocation removeListeners LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation mee getOldValue IfStatement BinaryOperation && BinaryOperation != MemberReference o Literal null MethodInvocation facade MemberReference o isASubmachineState BlockStatement StatementExpression MethodInvocation MemberReference o removeElementListener End StatementExpression MethodInvocation stateMHelper MethodInvocation getOwner Literal null setReferenceState StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners StatementExpression MethodInvocation updateReferenceText End End BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation mee MethodInvocation MemberReference container equals getSource MethodInvocation facade MemberReference container isASubmachineState BinaryOperation != MethodInvocation facade MemberReference container getSubmachine Literal null BlockStatement IfStatement MethodInvocation mee MethodInvocation Literal ""submachine"" equals getPropertyName BlockStatement IfStatement BinaryOperation != MethodInvocation mee getOldValue Literal null BlockStatement StatementExpression Assignment MemberReference top MethodInvocation facade MethodInvocation mee getOldValue getTop = StatementExpression Assignment MemberReference oldRef MethodInvocation stateMHelper MethodInvocation facade MethodInvocation getOwner getReferenceState MemberReference top getStatebyName = End StatementExpression MethodInvocation stateMHelper MethodInvocation getOwner Literal null setReferenceState StatementExpression MethodInvocation MethodInvocation getOwner MemberReference oldRef updateListenersX StatementExpression MethodInvocation updateReferenceText End BlockStatement IfStatement BinaryOperation != MethodInvocation facade MemberReference container getSubmachine Literal null BlockStatement StatementExpression Assignment MemberReference top MethodInvocation facade MethodInvocation facade MemberReference container getSubmachine getTop = End LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation facade MethodInvocation getOwner getReferenceState LocalVariableDeclaration ReferenceType Object VariableDeclarator refObject MethodInvocation stateMHelper MemberReference path MemberReference top getStatebyName LocalVariableDeclaration ReferenceType String VariableDeclarator ref IfStatement BinaryOperation == MemberReference refObject Literal null BlockStatement StatementExpression Assignment MemberReference ref MethodInvocation stateMHelper MethodInvocation mee getSource getPath = BlockStatement StatementExpression Assignment MemberReference ref MethodInvocation stateMHelper MemberReference refObject getPath = End StatementExpression MethodInvocation stateMHelper MethodInvocation getOwner MemberReference ref setReferenceState StatementExpression MethodInvocation updateReferenceText End End MethodDeclaration /**
     * Rerender the whole figure.
     * Call superclass then add reference text
     */ Modifier public renderingChanged StatementExpression MethodInvocation updateReferenceText StatementExpression SuperMethodInvocation renderingChanged MethodDeclaration /**
     * Update the reference text.
     */ Modifier public updateReferenceText LocalVariableDeclaration ReferenceType Object VariableDeclarator text Literal null TryStatement StatementExpression Assignment MemberReference text MethodInvocation facade MethodInvocation getOwner getReferenceState = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG MemberReference e error IfStatement BinaryOperation != MemberReference text Literal null BlockStatement StatementExpression MethodInvocation referenceFig Cast ReferenceType String MemberReference text setText BlockStatement StatementExpression MethodInvocation referenceFig Literal """" setText End StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds StatementExpression MethodInvocation damage MethodDeclaration /**
     * @param newOwner
     */ Modifier private addListeners FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Object VariableDeclarator container LocalVariableDeclaration ReferenceType Object VariableDeclarator top LocalVariableDeclaration ReferenceType Object VariableDeclarator reference StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference newOwner getContainer = IfStatement BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation facade MemberReference container isASubmachineState BlockStatement StatementExpression MethodInvocation MemberReference container addElementListener End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation facade MemberReference container isASubmachineState BinaryOperation != MethodInvocation facade MemberReference container getSubmachine Literal null BlockStatement StatementExpression Assignment MemberReference top MethodInvocation facade MethodInvocation facade MemberReference container getSubmachine getTop = StatementExpression Assignment MemberReference reference MethodInvocation stateMHelper MethodInvocation facade MemberReference newOwner getReferenceState MemberReference top getStatebyName = LocalVariableDeclaration ReferenceType String VariableDeclarator properties ArrayInitializer Literal ""name"" Literal ""container"" StatementExpression Assignment MemberReference container MemberReference reference = WhileStatement BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation ! container MemberReference top equals BlockStatement StatementExpression MethodInvocation MemberReference container addElementListener StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference container getContainer = End End MethodDeclaration /**
     * Remove all the existing listeners
     */ Modifier private removeListeners LocalVariableDeclaration ReferenceType Object VariableDeclarator container LocalVariableDeclaration ReferenceType Object VariableDeclarator top LocalVariableDeclaration ReferenceType Object VariableDeclarator reference LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement ReturnStatement End StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference owner getContainer = IfStatement BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation facade MemberReference container isASubmachineState BlockStatement StatementExpression MethodInvocation MemberReference container removeElementListener End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation facade MemberReference container isASubmachineState BinaryOperation != MethodInvocation facade MemberReference container getSubmachine Literal null BlockStatement StatementExpression Assignment MemberReference top MethodInvocation facade MethodInvocation facade MemberReference container getSubmachine getTop = StatementExpression Assignment MemberReference reference MethodInvocation stateMHelper MethodInvocation facade MemberReference owner getReferenceState MemberReference top getStatebyName = IfStatement BinaryOperation != MemberReference reference Literal null BlockStatement StatementExpression MethodInvocation MemberReference reference removeElementListener StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference reference getContainer = WhileStatement BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation ! facade MemberReference container isTop BlockStatement StatementExpression MethodInvocation MemberReference container removeElementListener StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference container getContainer = End End End MethodDeclaration /**
     * @param newOwner
     *            the new owner UML object
     * @param oldV
     *            the old owner UML object
     */ Modifier protected updateListenersX FormalParameter ReferenceType Object newOwner FormalParameter ReferenceType Object oldV LocalVariableDeclaration ReferenceType Object VariableDeclarator container Literal null IfStatement BinaryOperation != MemberReference oldV Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldV removeElementListener StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference oldV getContainer = WhileStatement BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation ! facade MemberReference container isTop BlockStatement StatementExpression MethodInvocation MemberReference container removeElementListener StatementExpression Assignment MemberReference container MethodInvocation facade MemberReference container getContainer = End End StatementExpression MethodInvocation MethodInvocation getOwner MemberReference newOwner updateListeners MethodDeclaration /**
     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateFont()
     */ Modifier protected Annotation Override updateFont StatementExpression SuperMethodInvocation updateFont LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation MethodInvocation getProjectSettings MethodInvocation MemberReference Font PLAIN getFont getProject StatementExpression MethodInvocation referenceFig MemberReference f setFont ReferenceType FigStateVertex",0
370,370,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.ActionSetMultiplicity ClassDeclaration Modifier public /**
 *
 * @author mkl
 *
 */ ActionSetAssociationEndMultiplicity FieldDeclaration Modifier private final static ReferenceType ActionSetAssociationEndMultiplicity VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetAssociationEndMultiplicity ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionSetAssociationEndMultiplicity StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public setSelectedItem FormalParameter ReferenceType Object item FormalParameter ReferenceType Object target IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAAssociationEnd getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference item isAMultiplicity getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference target getMultiplicity MethodInvocation MemberReference item equals getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference item setMultiplicity getCoreHelper End IfStatement BinaryOperation instanceof MemberReference item ReferenceType String BlockStatement IfStatement MethodInvocation ! item MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getMultiplicity getFacade toString getFacade equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation Model MethodInvocation Cast ReferenceType String MemberReference item createMultiplicity getDataTypesFactory setMultiplicity getCoreHelper End BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null setMultiplicity getCoreHelper End End End MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionSetAssociationEndMultiplicity getInstance ReturnStatement MemberReference SINGLETON ReferenceType ActionSetMultiplicity",1
120,120,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection InterfaceDeclaration Modifier public /**
 * The interface for the helper of the ExtensionMechanisms.<p>
 *
 * Created from the old ExtensionMechanismsHelper.
 */ ExtensionMechanismsHelper MethodDeclaration /**
     * Returns all stereotypes in a namespace, but not those in a subnamespace.
     *
     * @param ns is the namespace.
     * @return a Collection with the stereotypes.
     */ ReferenceType Collection getStereotypes FormalParameter ReferenceType Object ns MethodDeclaration /**
     * Finds a stereotype in some namespace, but not in its subnamespaces.
     * Returns null if no such stereotype is found.
     *
     * TODO: What if stereo.getName() or stereo.getBaseClass() is null?
     * Then you know immediately that none will be found, but is that the
     * correct answer?
     *
     * @return the stereotype found or null.
     * @param ns is the namespace.
     * @param stereo is the stereotype.
     */ ReferenceType Object getStereotype FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object stereo MethodDeclaration /**
     * Searches for a stereotype just like the given stereotype in all
     * given models.
     * The given stereotype can not have its namespace set yet;
     * otherwise it will be returned itself!
     *
     * TODO: Should it only search for stereotypes owned by the Model object?
     *
     * @param models a collection of models
     * @param stereo is the given stereotype
     * @return Stereotype
     */ ReferenceType Object getStereotype FormalParameter ReferenceType Collection models FormalParameter ReferenceType Object stereo MethodDeclaration /**
     * @param m the ModelElement
     * @return the meta name of the ModelElement
     */ ReferenceType String getMetaModelName FormalParameter ReferenceType Object m MethodDeclaration /**
     * Returns all possible stereotypes for some
     * modelelement. Possible stereotypes are those stereotypes that
     * are owned by the same namespace the modelelement is owned by
     * and that have a baseclass that is the same as the
     * metamodelelement name of the modelelement.
     *
     * @param modelElement is the model element
     * @param models the models to search in
     * @return Collection
     */ ReferenceType Collection getAllPossibleStereotypes FormalParameter ReferenceType Collection models FormalParameter ReferenceType Object modelElement MethodDeclaration /**
     * Returns true if the given stereotype has a baseclass that equals the
     * baseclass of the given modelelement or one of the superclasses of the
     * given modelelement.
     * 
     * @param theModelElement
     *                is the model element
     * @param theStereotype
     *                is the stereotype
     * @return boolean
     * @deprecated Deprecated for 0.25.4 by tfmorris. Use
     *             {@link #isValidStereotype(Object,Object)} instead (note
     *             different capitalization),
     */ BasicType boolean isValidStereoType FormalParameter ReferenceType Object theModelElement FormalParameter ReferenceType Object theStereotype MethodDeclaration /**
     * Returns <code>true</code> if the given stereotype has a baseclass that
     * equals the baseclass of the given ModelElement or one of the superclasses
     * of the given ModelElement.
     * 
     * @param theModelElement
     *                is the model element
     * @param theStereotype
     *                is the stereotype
     * @return boolean
     */ BasicType boolean isValidStereotype FormalParameter ReferenceType Object theModelElement FormalParameter ReferenceType Object theStereotype MethodDeclaration /**
     * Get all stereotypes from all Models in the list.
     *
     * Finds only stereotypes owned by the Model objects themselves.
     *
     * @return the collection of stereotypes in all models
     *         in the current project
     * @param models the models to search
     */ ReferenceType Collection getStereotypes FormalParameter ReferenceType Collection models MethodDeclaration /**
     * Sets the stereotype of some modelelement. The method also
     * copies a stereotype that is not a part of the current model to
     * the current model.<p>
     *
     * @param modelElement is the model element
     * @param stereotype is the stereotype
     */ addCopyStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype MethodDeclaration /**
     * Tests if a stereotype is a stereotype with some name and base class.
     *
     * @param object is the stereotype.
     * @param name is the name of the stereotype.
     * @param base is the base class of the stereotype.
     * @return true if object is a stereotype with the desired characteristics.
     */ BasicType boolean isStereotype FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base MethodDeclaration /**
     * Tests if a stereotype is or inherits from a stereotype with some
     * name and base class.
     *
     * @param object is the stereotype.
     * @param name is the name of the stereotype.
     * @param base is the base class of the stereotype.
     * @return true if object is a (descendant of a) stereotype with the
     *	desired characteristics.
     */ BasicType boolean isStereotypeInh FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base MethodDeclaration /**
     * Add an extended element to a stereotype.
     *
     * @param handle Stereotype
     * @param extendedElement ExtensionPoint
     */ addExtendedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object extendedElement MethodDeclaration /**
     * Add a baseclass to some stereotype.
     *
     * @param handle the stereotype
     * @param baseClass the baseclass to add
     */ addBaseClass FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass MethodDeclaration /**
     * Remove baseclass from some stereotype.
     *
     * @param handle the stereotype
     * @param baseClass the baseclass to remove
     */ removeBaseClass FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass MethodDeclaration /**
     * Set the icon for a stereotype.
     *
     * @param handle Stereotype
     * @param icon String
     */ setIcon FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object icon MethodDeclaration /**
     * Set the Tag of a TaggedValue.
     * 
     * @param handle TaggedValue
     * @param tag String
     * @deprecated by tfmorris for 0.23.3 - use {@link #setType(Object, Object)}
     */ Annotation Deprecated setTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object tag MethodDeclaration /**
     * Set the tagType of a TaggedDefinition.  This controls the range of legal
     * values for the associated TaggedValues.  
     * 
     * @param handle the taggedValue
     * @param tagType A string containing the name of the type for values that
     *                may be assigned to this tag. This can either be the name
     *                of a datatype (e.g. ""String"", ""Integer"" or ""Boolean"") or
     *                the name of a metaclass for more complex types of tagged
     *                values.
     */ setTagType FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tagType MethodDeclaration /**
     * Set the type of a taggedvalue.
     * 
     * @param handle the taggedValue
     * @param type the tagDefinition
     */ setType FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object type MethodDeclaration /**
     * Sets a value of some taggedValue.
     *
     * @param handle is the tagged value
     * @param value is the value
     */ setValueOfTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType String value MethodDeclaration /**
     * Add a tagged value.
     *
     * @param handle The model element to add to.
     * @param taggedValue The tagged value to add.
     */ addTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object taggedValue MethodDeclaration /**
     * Remove a tagged value.
     *
     * @param handle The model element to remove from.
     * @param taggedValue The tagged value to remove.
     */ removeTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object taggedValue MethodDeclaration /**
     * Se the list of tagged values for a model element.
     *
     * @param handle The model element to set for.
     * @param taggedValues A Collection of tagged values.
     */ setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection taggedValues MethodDeclaration /**
     * Returns true if the given object has a stereotype with the given name.
     * 
     * @param handle the given object
     * @param name the given name
     * @return true if there is such a stereotype
     * @deprecated for 0.25.4 by tfmorris.  Use {@link #hasStereotype(Object,String)} instead
     */ BasicType boolean hasStereoType FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name MethodDeclaration /**
     * Returns <code>true</code> if the given ModelElement has a Stereotype with the
     * given name.
     * 
     * @param element
     *                the given element
     * @param name
     *                the given name
     * @return true if there is such a stereotype
     */ BasicType boolean hasStereotype FormalParameter ReferenceType Object element FormalParameter ReferenceType String name",0
1580,1580,,0
412,412,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 3, 2003
 */ UMLDependencySupplierListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLDependencySupplierListModel.
     */ UMLDependencySupplierListModel StatementExpression SuperConstructorInvocation Literal ""supplier"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getSuppliers getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getSuppliers MethodInvocation MemberReference o contains getFacade ReferenceType UMLModelElementListModel2",0
1243,1243,,0
319,319,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui InterfaceDeclaration Modifier public abstract /**
 * An interface to be implemented by any Fig that contains
 * a FigEditableCompartment.
 * @author Bob Tarling
 */ FeaturesCompartmentContainer",1
569,569,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.ArrayList Import java.util.Collection Import java.util.HashSet Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 ClassDeclaration Modifier public /**
 * An Action to add client dependencies to some modelelement.
 *
 * @author Michiel
 */ ActionAddSupplierDependencyAction ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionAddSupplierDependencyAction StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal true setMultiSelect MethodDeclaration Modifier protected doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Set VariableDeclarator oldSet ClassCreator ReferenceType HashSet MethodInvocation getSelected ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator supplier MemberReference oldSet BlockStatement IfStatement MethodInvocation oldSet MemberReference supplier contains BlockStatement StatementExpression MethodInvocation oldSet MemberReference supplier remove BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference supplier MethodInvocation getTarget buildDependency getCoreFactory End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator toBeDeleted ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MethodInvocation getTarget getSupplierDependencies getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dependency MemberReference c BlockStatement IfStatement MethodInvocation oldSet MethodInvocation Model MethodInvocation MemberReference dependency getClients getFacade containsAll BlockStatement StatementExpression MethodInvocation toBeDeleted MemberReference dependency add End End StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference toBeDeleted moveToTrash getManager MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model Literal ""org.omg.uml.foundation.core.ModelElement"" getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation ret MethodInvocation getTarget remove End ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-supplier-dependency"" localize MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator v ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MethodInvocation getTarget getSupplierDependencies getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator supplierDependency MemberReference c BlockStatement StatementExpression MethodInvocation v MethodInvocation Model MethodInvocation MemberReference supplierDependency getClients getFacade addAll End ReturnStatement MemberReference v ReferenceType AbstractActionAddModelElement2",0
1277,1277,,0
1270,1270,,0
1290,1290,,0
1512,1512,,0
853,853,"CompilationUnit PackageDeclaration org.argouml.cognitive Import java.util.ArrayList Import java.util.Enumeration Import java.util.List Import java.util.Vector ClassDeclaration Modifier public /**
 * The standard Control Mech. It extends an ANDControlMech with the individual
 * cm's
 * <ul>
 * <li>EnabledCM
 * <li>NotSnoozedCM
 * <li>DesignGoalsCM
 * <li>CurDecisionCM
 * </ul>
 *
 * implying that a critic is relevant if and if only it is enabled, not snoozed,
 * applicable to the current goals and relevant decisions to be supported.
 *
 */ StandardCM ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ StandardCM StatementExpression MethodInvocation ClassCreator ReferenceType EnabledCM addMech StatementExpression MethodInvocation ClassCreator ReferenceType NotSnoozedCM addMech StatementExpression MethodInvocation ClassCreator ReferenceType DesignGoalsCM addMech StatementExpression MethodInvocation ClassCreator ReferenceType CurDecisionCM addMech ReferenceType AndCM ClassDeclaration EnabledCM MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation c isEnabled ReferenceType ControlMech ClassDeclaration NotSnoozedCM MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation ! c MethodInvocation getSnoozed snoozeOrder ReferenceType ControlMech ClassDeclaration DesignGoalsCM MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation c MemberReference d isRelevantToGoals ReferenceType ControlMech ClassDeclaration CurDecisionCM MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation c MemberReference d isRelevantToDecisions ReferenceType ControlMech ClassDeclaration Modifier abstract CompositeCM FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ControlMech VariableDeclarator mechs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ControlMech MethodDeclaration /**
     * @return Returns the ControlMechs.
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getControlMechs}.
     */ Modifier protected Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType ControlMech getMechs ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType ControlMech MemberReference mechs MethodDeclaration /**
     * @return a list of the ControlMechs.
     */ Modifier protected ReferenceType List TypeArgument ReferenceType ControlMech getMechList ReturnStatement MemberReference mechs MethodDeclaration /**
     * @param cm
     *            the ControlMech
     */ Modifier public addMech FormalParameter ReferenceType ControlMech cm StatementExpression MethodInvocation mechs MemberReference cm add ReferenceType ControlMech ClassDeclaration AndCM MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator cur MethodInvocation MethodInvocation elements getMechs WhileStatement MethodInvocation cur hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ControlMech VariableDeclarator cm Cast ReferenceType ControlMech MethodInvocation cur nextElement IfStatement MethodInvocation ! cm MemberReference c MemberReference d isRelevant BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true ReferenceType CompositeCM ClassDeclaration OrCM MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator cur MethodInvocation MethodInvocation elements getMechs WhileStatement MethodInvocation cur hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ControlMech VariableDeclarator cm Cast ReferenceType ControlMech MethodInvocation cur nextElement IfStatement MethodInvocation cm MemberReference c MemberReference d isRelevant BlockStatement ReturnStatement Literal true End End ReturnStatement Literal false ReferenceType CompositeCM",0
232,232,"CompilationUnit PackageDeclaration org.argouml.application.helpers Import java.net.URL Import java.util.HashMap Import java.util.Hashtable Import java.util.Map Import javax.swing.Icon Import javax.swing.ImageIcon Import javax.swing.UIManager Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.model.DataTypesHelper Import org.argouml.model.InvalidElementException Import org.argouml.model.Model ClassDeclaration Modifier public final /**
 * Wrapper around org.tigris.gef.util.ResourceLoader.<p>
 *
 * Necessary since ArgoUML needs some extra init.
 *
 * @since Nov 24, 2002
 * @author jaap.branderhorst@xs4all.nl 
 * @stereotype singleton
 */ ResourceLoaderWrapper FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ResourceLoaderWrapper getLogger FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator initialStateIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator deepIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator shallowIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator forkIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator joinIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator branchIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator junctionIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator realizeIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator signalIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator exceptionIcon FieldDeclaration Modifier private static ReferenceType ImageIcon VariableDeclarator commentIcon FieldDeclaration Modifier private ReferenceType Hashtable TypeArgument ReferenceType Class TypeArgument ReferenceType Icon VariableDeclarator iconCache ClassCreator ReferenceType Hashtable TypeArgument ReferenceType Class TypeArgument ReferenceType Icon FieldDeclaration /**
     * Singleton implementation.
     */ Modifier private static ReferenceType ResourceLoaderWrapper VariableDeclarator instance ClassCreator ReferenceType ResourceLoaderWrapper MethodDeclaration /**
     * Returns the singleton instance.
     *
     * @return ResourceLoaderWrapper
     */ Modifier public static ReferenceType ResourceLoaderWrapper getInstance ReturnStatement MemberReference instance ConstructorDeclaration Modifier private /**
     * Constructor for ResourceLoaderWrapper.
     */ ResourceLoaderWrapper StatementExpression MethodInvocation initResourceLoader MethodDeclaration /**
     * Calculate the path to a look and feel object.
     *
     * @param classname
     *            The look and feel classname
     * @param element
     *            The en part of the path.
     * @return the complete path.
     */ Modifier private static ReferenceType String lookAndFeelPath FormalParameter ReferenceType String classname FormalParameter ReferenceType String element ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal ""/org/argouml/Images/plaf/"" MethodInvocation classname Literal '.' Literal '/' replace Literal ""/toolbarButtonGraphics/"" MemberReference element MethodDeclaration /**
     * Initializes the resourceloader.
     *
     * LookupIconResource checks if there are locations and extensions known.
     * If there are none, this method is called to initialize the resource
     * loader. Originally, this method was placed within Main but this coupled
     * Main and the resourceLoader too much.
     */ Modifier private static initResourceLoader LocalVariableDeclaration ReferenceType String VariableDeclarator lookAndFeelClassName IfStatement Literal MethodInvocation MethodInvocation System Literal ""force.nativelaf"" Literal ""false"" getProperty equals ""true"" BlockStatement StatementExpression Assignment MemberReference lookAndFeelClassName MethodInvocation UIManager getSystemLookAndFeelClassName = BlockStatement StatementExpression Assignment MemberReference lookAndFeelClassName Literal ""javax.swing.plaf.metal.MetalLookAndFeel"" = End LocalVariableDeclaration ReferenceType String VariableDeclarator lookAndFeelGeneralImagePath MethodInvocation MemberReference lookAndFeelClassName Literal ""general"" lookAndFeelPath LocalVariableDeclaration ReferenceType String VariableDeclarator lookAndFeelNavigationImagePath MethodInvocation MemberReference lookAndFeelClassName Literal ""navigation"" lookAndFeelPath LocalVariableDeclaration ReferenceType String VariableDeclarator lookAndFeelDiagramImagePath MethodInvocation MemberReference lookAndFeelClassName Literal ""argouml/diagrams"" lookAndFeelPath LocalVariableDeclaration ReferenceType String VariableDeclarator lookAndFeelElementImagePath MethodInvocation MemberReference lookAndFeelClassName Literal ""argouml/elements"" lookAndFeelPath LocalVariableDeclaration ReferenceType String VariableDeclarator lookAndFeelArgoUmlImagePath MethodInvocation MemberReference lookAndFeelClassName Literal ""argouml"" lookAndFeelPath StatementExpression MethodInvocation ResourceLoader Literal ""gif"" addResourceExtension StatementExpression MethodInvocation ResourceLoader Literal ""png"" addResourceExtension StatementExpression MethodInvocation ResourceLoader MemberReference lookAndFeelGeneralImagePath addResourceLocation StatementExpression MethodInvocation ResourceLoader MemberReference lookAndFeelNavigationImagePath addResourceLocation StatementExpression MethodInvocation ResourceLoader MemberReference lookAndFeelDiagramImagePath addResourceLocation StatementExpression MethodInvocation ResourceLoader MemberReference lookAndFeelElementImagePath addResourceLocation StatementExpression MethodInvocation ResourceLoader MemberReference lookAndFeelArgoUmlImagePath addResourceLocation StatementExpression MethodInvocation ResourceLoader Literal ""/org/argouml/Images"" addResourceLocation StatementExpression MethodInvocation ResourceLoader Literal ""/org/tigris/gef/Images"" addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader Literal ""gif"" addResourceExtension StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader Literal ""png"" addResourceExtension StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader MemberReference lookAndFeelGeneralImagePath addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader MemberReference lookAndFeelNavigationImagePath addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader MemberReference lookAndFeelDiagramImagePath addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader MemberReference lookAndFeelElementImagePath addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader MemberReference lookAndFeelArgoUmlImagePath addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader Literal ""/org/argouml/Images"" addResourceLocation StatementExpression MethodInvocation org.tigris.gef.util.ResourceLoader Literal ""/org/tigris/gef/Images"" addResourceLocation StatementExpression Assignment MemberReference initialStateIcon MethodInvocation ResourceLoader Literal ""Initial"" lookupIconResource = StatementExpression Assignment MemberReference deepIcon MethodInvocation ResourceLoader Literal ""DeepHistory"" lookupIconResource = StatementExpression Assignment MemberReference shallowIcon MethodInvocation ResourceLoader Literal ""ShallowHistory"" lookupIconResource = StatementExpression Assignment MemberReference forkIcon MethodInvocation ResourceLoader Literal ""Fork"" lookupIconResource = StatementExpression Assignment MemberReference joinIcon MethodInvocation ResourceLoader Literal ""Join"" lookupIconResource = StatementExpression Assignment MemberReference branchIcon MethodInvocation ResourceLoader Literal ""Choice"" lookupIconResource = StatementExpression Assignment MemberReference junctionIcon MethodInvocation ResourceLoader Literal ""Junction"" lookupIconResource = StatementExpression Assignment MemberReference realizeIcon MethodInvocation ResourceLoader Literal ""Realization"" lookupIconResource = StatementExpression Assignment MemberReference signalIcon MethodInvocation ResourceLoader Literal ""SignalSending"" lookupIconResource = StatementExpression Assignment MemberReference exceptionIcon MethodInvocation ResourceLoader Literal ""Exception"" lookupIconResource = StatementExpression Assignment MemberReference commentIcon MethodInvocation ResourceLoader Literal ""Note"" lookupIconResource = MethodDeclaration /**
     * This public operation is needed 
     * to allow modules to add their own images.
     * 
     * @param location the path were the images are
     */ Modifier public static addResourceLocation FormalParameter ReferenceType String location StatementExpression MethodInvocation ResourceLoader MemberReference location addResourceLocation MethodDeclaration /**
     * Find the correct icon for a key.
     *
     * @param resource The name of the resource to look up.
     * @return The ImageIcon.
     */ Modifier public static ReferenceType ImageIcon lookupIconResource FormalParameter ReferenceType String resource ReturnStatement MethodInvocation ResourceLoader MemberReference resource lookupIconResource MethodDeclaration /**
     * Find the correct icon for a key.
     *
     * @param resource The name of the resource to look up.
     * @param desc The description for the icon.
     * @return The ImageIcon.
     */ Modifier public static ReferenceType ImageIcon lookupIconResource FormalParameter ReferenceType String resource FormalParameter ReferenceType String desc ReturnStatement MethodInvocation ResourceLoader MemberReference resource MemberReference desc lookupIconResource MethodDeclaration /**
     * Look up the Icon for a key.
     *
     * @param key The key to find.
     * @return The found Icon.
     */ Modifier public static ReferenceType ImageIcon lookupIcon FormalParameter ReferenceType String key ReturnStatement MethodInvocation MethodInvocation MemberReference key getImageBinding MethodInvocation Translator MemberReference key localize lookupIconResource MethodDeclaration /**
     * Find the Icon for a given model element.
     *
     * @return The Icon or <code>null</code> if there is no Icon.
     * @param value The model element.
     *
     * TODO: This should not use string matching on classnames to do this
     *       since this means that we have knowledge about how the model
     *       elements are implemented outside of the Model component.
     */ Modifier public ReferenceType Icon lookupIcon FormalParameter ReferenceType Object value IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Attempted to get an icon given a null key"" End IfStatement BinaryOperation instanceof MemberReference value ReferenceType String BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation iconCache MethodInvocation value getClass get TryStatement IfStatement MethodInvocation Model MethodInvocation MemberReference value isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference value getKind getFacade LocalVariableDeclaration ReferenceType DataTypesHelper VariableDeclarator helper MethodInvocation Model getDataTypesHelper IfStatement MethodInvocation helper MemberReference kind equalsINITIALKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference initialStateIcon = End IfStatement MethodInvocation helper MemberReference kind equalsDeepHistoryKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference deepIcon = End IfStatement MethodInvocation helper MemberReference kind equalsShallowHistoryKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference shallowIcon = End IfStatement MethodInvocation helper MemberReference kind equalsFORKKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference forkIcon = End IfStatement MethodInvocation helper MemberReference kind equalsJOINKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference joinIcon = End IfStatement MethodInvocation helper MemberReference kind equalsCHOICEKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference branchIcon = End IfStatement MethodInvocation helper MemberReference kind equalsJUNCTIONKind BlockStatement StatementExpression Assignment MemberReference icon MemberReference junctionIcon = End End IfStatement MethodInvocation Model MethodInvocation MemberReference value isAAbstraction getFacade BlockStatement StatementExpression Assignment MemberReference icon MemberReference realizeIcon = End IfStatement MethodInvocation Model MethodInvocation MemberReference value isAException getFacade BlockStatement StatementExpression Assignment MemberReference icon MemberReference exceptionIcon = BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference value isASignal getFacade BlockStatement StatementExpression Assignment MemberReference icon MemberReference signalIcon = End End IfStatement MethodInvocation Model MethodInvocation MemberReference value isAComment getFacade BlockStatement StatementExpression Assignment MemberReference icon MemberReference commentIcon = End IfStatement BinaryOperation == MemberReference icon Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cName MethodInvocation Model MethodInvocation MemberReference value getName getMetaTypes StatementExpression Assignment MemberReference icon MethodInvocation MemberReference cName lookupIconResource = IfStatement BinaryOperation == MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Can't find icon for "" MemberReference cName debug BlockStatement SynchronizedStatement MemberReference iconCache StatementExpression MethodInvocation iconCache MethodInvocation value getClass MemberReference icon put End End CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal ""Attempted to get icon for deleted element"" debug ReturnStatement Literal null ReturnStatement MemberReference icon FieldDeclaration /**
     * Map to convert tokens into file names.
     */ Modifier private static ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator images ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String StatementExpression MethodInvocation images Literal ""action.about-argouml"" Literal ""AboutArgoUML"" put StatementExpression MethodInvocation images Literal ""action.activity-diagram"" Literal ""Activity Diagram"" put StatementExpression MethodInvocation images Literal ""action.class-diagram"" Literal ""Class Diagram"" put StatementExpression MethodInvocation images Literal ""action.collaboration-diagram"" Literal ""Collaboration Diagram"" put StatementExpression MethodInvocation images Literal ""action.deployment-diagram"" Literal ""Deployment Diagram"" put StatementExpression MethodInvocation images Literal ""action.sequence-diagram"" Literal ""Sequence Diagram"" put StatementExpression MethodInvocation images Literal ""action.state-diagram"" Literal ""State Diagram"" put StatementExpression MethodInvocation images Literal ""action.usecase-diagram"" Literal ""Use Case Diagram"" put StatementExpression MethodInvocation images Literal ""action.add-concurrent-region"" Literal ""Add Concurrent Region"" put StatementExpression MethodInvocation images Literal ""action.add-message"" Literal ""Add Message"" put StatementExpression MethodInvocation images Literal ""action.configure-perspectives"" Literal ""ConfigurePerspectives"" put StatementExpression MethodInvocation images Literal ""action.copy"" Literal ""Copy"" put StatementExpression MethodInvocation images Literal ""action.cut"" Literal ""Cut"" put StatementExpression MethodInvocation images Literal ""action.delete-concurrent-region"" Literal ""DeleteConcurrentRegion"" put StatementExpression MethodInvocation images Literal ""action.delete-from-model"" Literal ""DeleteFromModel"" put StatementExpression MethodInvocation images Literal ""action.find"" Literal ""Find..."" put StatementExpression MethodInvocation images Literal ""action.import-sources"" Literal ""Import Sources..."" put StatementExpression MethodInvocation images Literal ""action.more-info"" Literal ""More Info..."" put StatementExpression MethodInvocation images Literal ""action.navigate-back"" Literal ""Navigate Back"" put StatementExpression MethodInvocation images Literal ""action.navigate-forward"" Literal ""Navigate Forward"" put StatementExpression MethodInvocation images Literal ""action.new"" Literal ""New"" put StatementExpression MethodInvocation images Literal ""action.new-todo-item"" Literal ""New To Do Item..."" put StatementExpression MethodInvocation images Literal ""action.open-project"" Literal ""Open Project..."" put StatementExpression MethodInvocation images Literal ""action.page-setup"" Literal ""Page Setup..."" put StatementExpression MethodInvocation images Literal ""action.paste"" Literal ""Paste"" put StatementExpression MethodInvocation images Literal ""action.print"" Literal ""Print..."" put StatementExpression MethodInvocation images Literal ""action.remove-from-diagram"" Literal ""Remove From Diagram"" put StatementExpression MethodInvocation images Literal ""action.resolve-item"" Literal ""Resolve Item..."" put StatementExpression MethodInvocation images Literal ""action.save-project"" Literal ""Save Project"" put StatementExpression MethodInvocation images Literal ""action.save-project-as"" Literal ""Save Project As..."" put StatementExpression MethodInvocation images Literal ""action.settings"" Literal ""Settings..."" put StatementExpression MethodInvocation images Literal ""action.snooze-critic"" Literal ""Snooze Critic"" put StatementExpression MethodInvocation images Literal ""action.system-information"" Literal ""System Information"" put StatementExpression MethodInvocation images Literal ""button.broom"" Literal ""Broom"" put StatementExpression MethodInvocation images Literal ""button.new-actionstate"" Literal ""ActionState"" put StatementExpression MethodInvocation images Literal ""button.new-actor"" Literal ""Actor"" put StatementExpression MethodInvocation images Literal ""button.new-aggregation"" Literal ""Aggregation"" put StatementExpression MethodInvocation images Literal ""button.new-association"" Literal ""Association"" put StatementExpression MethodInvocation images Literal ""button.new-associationclass"" Literal ""AssociationClass"" put StatementExpression MethodInvocation images Literal ""button.new-association-end"" Literal ""AssociationEnd"" put StatementExpression MethodInvocation images Literal ""button.new-associationrole"" Literal ""AssociationRole"" put StatementExpression MethodInvocation images Literal ""button.new-attribute"" Literal ""New Attribute"" put StatementExpression MethodInvocation images Literal ""button.new-callaction"" Literal ""CallAction"" put StatementExpression MethodInvocation images Literal ""button.new-callstate"" Literal ""CallState"" put StatementExpression MethodInvocation images Literal ""button.new-choice"" Literal ""Choice"" put StatementExpression MethodInvocation images Literal ""button.new-class"" Literal ""Class"" put StatementExpression MethodInvocation images Literal ""button.new-classifierrole"" Literal ""ClassifierRole"" put StatementExpression MethodInvocation images Literal ""button.new-commentlink"" Literal ""CommentLink"" put StatementExpression MethodInvocation images Literal ""button.new-component"" Literal ""Component"" put StatementExpression MethodInvocation images Literal ""button.new-componentinstance"" Literal ""ComponentInstance"" put StatementExpression MethodInvocation images Literal ""button.new-compositestate"" Literal ""CompositeState"" put StatementExpression MethodInvocation images Literal ""button.new-composition"" Literal ""Composition"" put StatementExpression MethodInvocation images Literal ""button.new-createaction"" Literal ""CreateAction"" put StatementExpression MethodInvocation images Literal ""button.new-datatype"" Literal ""DataType"" put StatementExpression MethodInvocation images Literal ""button.new-deephistory"" Literal ""DeepHistory"" put StatementExpression MethodInvocation images Literal ""button.new-dependency"" Literal ""Dependency"" put StatementExpression MethodInvocation images Literal ""button.new-destroyaction"" Literal ""DestroyAction"" put StatementExpression MethodInvocation images Literal ""button.new-enumeration"" Literal ""Enumeration"" put StatementExpression MethodInvocation images Literal ""button.new-enumeration-literal"" Literal ""EnumerationLiteral"" put StatementExpression MethodInvocation images Literal ""button.new-extension-point"" Literal ""New Extension Point"" put StatementExpression MethodInvocation images Literal ""button.new-extend"" Literal ""Extend"" put StatementExpression MethodInvocation images Literal ""button.new-exception"" Literal ""Exception"" put StatementExpression MethodInvocation images Literal ""button.new-finalstate"" Literal ""FinalState"" put StatementExpression MethodInvocation images Literal ""button.new-fork"" Literal ""Fork"" put StatementExpression MethodInvocation images Literal ""button.new-generalization"" Literal ""Generalization"" put StatementExpression MethodInvocation images Literal ""button.new-include"" Literal ""Include"" put StatementExpression MethodInvocation images Literal ""button.new-initial"" Literal ""Initial"" put StatementExpression MethodInvocation images Literal ""button.new-inner-class"" Literal ""Inner Class"" put StatementExpression MethodInvocation images Literal ""button.new-interface"" Literal ""Interface"" put StatementExpression MethodInvocation images Literal ""button.new-join"" Literal ""Join"" put StatementExpression MethodInvocation images Literal ""button.new-junction"" Literal ""Junction"" put StatementExpression MethodInvocation images Literal ""button.new-link"" Literal ""Link"" put StatementExpression MethodInvocation images Literal ""button.new-node"" Literal ""Node"" put StatementExpression MethodInvocation images Literal ""button.new-nodeinstance"" Literal ""NodeInstance"" put StatementExpression MethodInvocation images Literal ""button.new-object"" Literal ""Object"" put StatementExpression MethodInvocation images Literal ""button.new-objectflowstate"" Literal ""ObjectFlowState"" put StatementExpression MethodInvocation images Literal ""button.new-operation"" Literal ""New Operation"" put StatementExpression MethodInvocation images Literal ""button.new-package"" Literal ""Package"" put StatementExpression MethodInvocation images Literal ""button.new-parameter"" Literal ""New Parameter"" put StatementExpression MethodInvocation images Literal ""button.new-partition"" Literal ""Partition"" put StatementExpression MethodInvocation images Literal ""button.new-permission"" Literal ""Permission"" put StatementExpression MethodInvocation images Literal ""button.new-raised-signal"" Literal ""New Raised Signal"" put StatementExpression MethodInvocation images Literal ""button.new-reception"" Literal ""New Reception"" put StatementExpression MethodInvocation images Literal ""button.new-realization"" Literal ""Realization"" put StatementExpression MethodInvocation images Literal ""button.new-returnaction"" Literal ""ReturnAction"" put StatementExpression MethodInvocation images Literal ""button.new-sendaction"" Literal ""SendAction"" put StatementExpression MethodInvocation images Literal ""button.new-shallowhistory"" Literal ""ShallowHistory"" put StatementExpression MethodInvocation images Literal ""button.new-signal"" Literal ""Signal"" put StatementExpression MethodInvocation images Literal ""button.new-simplestate"" Literal ""SimpleState"" put StatementExpression MethodInvocation images Literal ""button.new-stereotype"" Literal ""Stereotype"" put StatementExpression MethodInvocation images Literal ""button.new-stubstate"" Literal ""StubState"" put StatementExpression MethodInvocation images Literal ""button.new-subactivitystate"" Literal ""SubactivityState"" put StatementExpression MethodInvocation images Literal ""button.new-submachinestate"" Literal ""SubmachineState"" put StatementExpression MethodInvocation images Literal ""button.new-synchstate"" Literal ""SynchState"" put StatementExpression MethodInvocation images Literal ""button.new-tagdefinition"" Literal ""TagDefinition"" put StatementExpression MethodInvocation images Literal ""button.new-transition"" Literal ""Transition"" put StatementExpression MethodInvocation images Literal ""button.new-uniaggregation"" Literal ""UniAggregation"" put StatementExpression MethodInvocation images Literal ""button.new-uniassociation"" Literal ""UniAssociation"" put StatementExpression MethodInvocation images Literal ""button.new-unicomposition"" Literal ""UniComposition"" put StatementExpression MethodInvocation images Literal ""button.new-usage"" Literal ""Usage"" put StatementExpression MethodInvocation images Literal ""button.new-usecase"" Literal ""UseCase"" put StatementExpression MethodInvocation images Literal ""button.select"" Literal ""Select"" put StatementExpression MethodInvocation images Literal ""button.sequence-expand"" Literal ""SequenceExpand"" put StatementExpression MethodInvocation images Literal ""button.sequence-contract"" Literal ""SequenceContract"" put MethodDeclaration /**
     * Convert the key to the image file name.
     *
     * @param name the new i18n key
     * @return the file name (base part only).
     */ Modifier public static ReferenceType String getImageBinding FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator found MethodInvocation images MemberReference name get IfStatement BinaryOperation == MemberReference found Literal null BlockStatement ReturnStatement MemberReference name End ReturnStatement MemberReference found MethodDeclaration /**
     * Find the path to a given icon and return it as a URL.
     * 
     * @param name base name of the icon to search for
     * @param loader class loader to use or null to use the default class loader
     * @return the URL where the icon was found
     */ Modifier public static ReferenceType URL lookupIconUrl FormalParameter ReferenceType String name FormalParameter ReferenceType ClassLoader loader ReturnStatement MethodInvocation ResourceLoader MemberReference name MemberReference loader lookupIconUrl MethodDeclaration /**
     * Find the path to a given icon and return it as a URL.
     * 
     * @param name base name of the icon to search for
     * @return the URL where the icon was found
     */ Modifier public static ReferenceType URL lookupIconUrl FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name Literal null lookupIconUrl",1
1179,1179,,0
1584,1584,,0
1525,1525,,0
448,448,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ItemEvent Import java.awt.event.ItemListener Import java.util.ArrayList Import java.util.Collection Import java.util.List Import javax.swing.JComboBox Import org.apache.log4j.Logger Import org.argouml.application.api.Predicate Import org.argouml.language.ui.LanguageComboBox Import org.argouml.model.Model Import org.argouml.ui.TabText Import org.argouml.uml.generator.GeneratorHelper Import org.argouml.uml.generator.Language Import org.argouml.uml.generator.SourceUnit Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * Details panel tabbed panel for displaying a source code representation of
 * a UML model element in a particular Language.
 */ TabSrc FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4958164807996827484L FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType TabSrc getLogger FieldDeclaration Modifier private ReferenceType Language VariableDeclarator langName Literal null FieldDeclaration Modifier private ReferenceType String VariableDeclarator fileName Literal null FieldDeclaration Modifier private ReferenceType SourceUnit VariableDeclarator files Literal null FieldDeclaration Modifier private ReferenceType LanguageComboBox VariableDeclarator cbLang ClassCreator ReferenceType LanguageComboBox FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator cbFiles ClassCreator ReferenceType JComboBox FieldDeclaration /**
     * These predicates determine if this tab is enabled.
     */ Modifier private static ReferenceType List TypeArgument ReferenceType Predicate VariableDeclarator predicates ConstructorDeclaration Modifier public /**
     * Create a tab that contains a toolbar.
     * Then add a language selector onto it.
     */ TabSrc StatementExpression SuperConstructorInvocation Literal ""tab.source"" Literal true IfStatement BinaryOperation == MemberReference predicates Literal null BlockStatement StatementExpression Assignment MemberReference predicates ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Predicate = StatementExpression MethodInvocation predicates ClassCreator ReferenceType DefaultPredicate add End StatementExpression MethodInvocation Literal false setEditable StatementExpression Assignment MemberReference langName Cast ReferenceType Language MethodInvocation cbLang getSelectedItem = StatementExpression Assignment MemberReference fileName Literal null = StatementExpression MethodInvocation MethodInvocation MemberReference cbLang add getToolbar StatementExpression MethodInvocation MethodInvocation addSeparator getToolbar StatementExpression MethodInvocation cbLang This addItemListener StatementExpression MethodInvocation MethodInvocation MemberReference cbFiles add getToolbar StatementExpression MethodInvocation MethodInvocation addSeparator getToolbar StatementExpression MethodInvocation cbFiles This addItemListener MethodDeclaration Modifier protected Annotation Override finalize StatementExpression MethodInvocation cbLang This removeItemListener MethodDeclaration /**
     * Populate files[] and cbFiles, using the specified element.
     */ Modifier private generateSource FormalParameter ReferenceType Object elem StatementExpression MethodInvocation LOG BinaryOperation + Literal ""TabSrc.genText(): getting src for "" MethodInvocation Model MethodInvocation MemberReference elem getName getFacade debug LocalVariableDeclaration ReferenceType Collection VariableDeclarator code MethodInvocation GeneratorHelper MemberReference langName MemberReference elem Literal false generate StatementExpression MethodInvocation cbFiles removeAllItems IfStatement MethodInvocation ! code isEmpty BlockStatement StatementExpression Assignment MemberReference files ArrayCreator ReferenceType SourceUnit MethodInvocation code size = StatementExpression Assignment MemberReference files Cast ReferenceType SourceUnit MethodInvocation code MemberReference files toArray = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator title ClassCreator ReferenceType StringBuilder MemberReference ArraySelector MemberReference i MethodInvocation getName files IfStatement BinaryOperation > MemberReference ArraySelector MemberReference i MethodInvocation getBasePath MethodInvocation length files Literal 0 BlockStatement StatementExpression MethodInvocation title BinaryOperation + BinaryOperation + Literal "" ( "" MemberReference ArraySelector MemberReference i MethodInvocation getFullName files Literal "")"" append End StatementExpression MethodInvocation cbFiles MethodInvocation title toString addItem End End MethodDeclaration Modifier protected Annotation Override ReferenceType String genText FormalParameter ReferenceType Object modelObject IfStatement BinaryOperation == MemberReference files Literal null BlockStatement StatementExpression MethodInvocation MemberReference modelObject generateSource End IfStatement BinaryOperation && BinaryOperation != MemberReference files Literal null BinaryOperation > MemberReference files length MethodInvocation cbFiles getSelectedIndex ReturnStatement MemberReference ArraySelector MethodInvocation cbFiles getSelectedIndex MethodInvocation getContent files End ReturnStatement Literal null MethodDeclaration Modifier protected Annotation Override parseText FormalParameter ReferenceType String s StatementExpression MethodInvocation LOG BinaryOperation + Literal ""TabSrc   setting src for "" MethodInvocation Model MethodInvocation MethodInvocation getTarget getName getFacade debug LocalVariableDeclaration ReferenceType Object VariableDeclarator modelObject MethodInvocation getTarget IfStatement BinaryOperation instanceof MethodInvocation getTarget ReferenceType FigNode StatementExpression Assignment MemberReference modelObject Cast ReferenceType FigNode MethodInvocation getTarget = End IfStatement BinaryOperation instanceof MethodInvocation getTarget ReferenceType FigEdge StatementExpression Assignment MemberReference modelObject Cast ReferenceType FigEdge MethodInvocation getTarget = End IfStatement BinaryOperation == MemberReference modelObject Literal null ReturnStatement End MethodDeclaration Modifier public Annotation Override setTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator modelTarget TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelTarget isAClassifier getFacade setShouldBeEnabled StatementExpression MethodInvocation cbFiles removeAllItems StatementExpression Assignment MemberReference files Literal null = StatementExpression SuperMethodInvocation MemberReference t setTarget MethodDeclaration /**
     * Determines if the current tab should be enabled with the given target.
     * Returns true if the given target is or represents a Classifier.
     *
     * {@inheritDoc}
     */ Modifier public Annotation Override BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target MemberReference target = StatementExpression MethodInvocation Literal false setShouldBeEnabled ForStatement EnhancedForControl VariableDeclaration ReferenceType Predicate VariableDeclarator p MemberReference predicates BlockStatement IfStatement MethodInvocation p MemberReference target evaluate BlockStatement StatementExpression MethodInvocation Literal true setShouldBeEnabled End End ReturnStatement MethodInvocation shouldBeEnabled MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation == MethodInvocation event getSource MemberReference cbLang BlockStatement IfStatement BinaryOperation == MethodInvocation event getStateChange MemberReference ItemEvent SELECTED BlockStatement LocalVariableDeclaration ReferenceType Language VariableDeclarator newLang Cast ReferenceType Language MethodInvocation cbLang getSelectedItem IfStatement MethodInvocation ! newLang MemberReference langName equals BlockStatement StatementExpression Assignment MemberReference langName MemberReference newLang = StatementExpression MethodInvocation refresh End End IfStatement BinaryOperation == MethodInvocation event getSource MemberReference cbFiles BlockStatement IfStatement BinaryOperation == MethodInvocation event getStateChange MemberReference ItemEvent SELECTED BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newFile Cast ReferenceType String MethodInvocation cbFiles getSelectedItem IfStatement MethodInvocation ! newFile MemberReference fileName equals BlockStatement StatementExpression Assignment MemberReference fileName MemberReference newFile = StatementExpression SuperMethodInvocation MethodInvocation getTarget setTarget End End End End MethodDeclaration Modifier public Annotation Override refresh StatementExpression MethodInvocation MethodInvocation getTarget setTarget MethodDeclaration /**
     * This function allows extra predicates to be added.
     * The predicates are conditions for cases where the 
     * TabSrc should show source code. If a plugin module 
     * is able to generate code for certain objects, for
     * which ArgoUML itself does not generate code, then
     * this function will allow the module to show the tab.
     *  
     * @param predicate the predicate to be added
     */ Modifier public static addPredicate FormalParameter ReferenceType Predicate predicate StatementExpression MethodInvocation predicates MemberReference predicate add ClassDeclaration DefaultPredicate MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter ReferenceType Object object ReturnStatement MethodInvocation Model getFacade ReferenceType Predicate ReferenceType TabText ReferenceType ItemListener",1
1203,1203,,0
186,186,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration /**
 * Listmodel for the Context of an ActivityGraph.
 * 
 * @author Michiel
 */ UMLActivityGraphContextComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateMachineContextListModel.
     */ UMLActivityGraphContextComboBoxModel StatementExpression SuperConstructorInvocation Literal ""context"" Literal false MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getUserDefinedModelList BlockStatement StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getBehavioralFeature getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getPackage getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll End StatementExpression MethodInvocation MemberReference elements setElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade MethodInvocation Model MethodInvocation MemberReference element isABehavioralFeature getFacade MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getContext getFacade MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt ReferenceType UMLComboBoxModel2",0
17,17,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import java.util.ArrayList Import java.util.Collection Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * The combo box model for the base of an association-role.
 * The base is clearable, since the UML standard indicates multiplicity 0..1.
 * 
 * @since Oct 4, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLAssociationRoleBaseComboBoxModel FieldDeclaration Modifier private ReferenceType Collection VariableDeclarator others ClassCreator ReferenceType ArrayList ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationRoleBaseComboBoxModel.
     */ UMLAssociationRoleBaseComboBoxModel StatementExpression SuperConstructorInvocation Literal ""base"" Literal true MethodDeclaration Modifier protected Annotation Override buildModelList StatementExpression MethodInvocation removeAllElements LocalVariableDeclaration ReferenceType Object VariableDeclarator ar MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation Model MethodInvocation MemberReference ar getBase getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference ar isAAssociationRole getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference ar getAllPossibleBases getCollaborationsHelper setElements End IfStatement BinaryOperation != MemberReference base Literal null BlockStatement StatementExpression MethodInvocation MemberReference base addElement End MethodDeclaration Modifier protected Annotation Override ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator ar MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference ar isAAssociationRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation Model MethodInvocation MemberReference ar getBase getFacade IfStatement BinaryOperation != MemberReference base Literal null BlockStatement ReturnStatement MemberReference base End End ReturnStatement Literal null MethodDeclaration Modifier protected Annotation Override BasicType boolean isValidElement FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Object VariableDeclarator ar MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference ar isAAssociationRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation Model MethodInvocation MemberReference ar getBase getFacade IfStatement BinaryOperation == MemberReference element MemberReference base BlockStatement ReturnStatement Literal true End LocalVariableDeclaration ReferenceType Collection VariableDeclarator b MethodInvocation Model MethodInvocation MemberReference ar getAllPossibleBases getCollaborationsHelper ReturnStatement MethodInvocation b MemberReference element contains End ReturnStatement Literal false MethodDeclaration Modifier protected Annotation Override addOtherModelEventListeners FormalParameter ReferenceType Object newTarget StatementExpression SuperMethodInvocation MemberReference newTarget addOtherModelEventListeners LocalVariableDeclaration ReferenceType Collection VariableDeclarator connections MethodInvocation Model MethodInvocation MemberReference newTarget getConnections getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator types ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator conn MemberReference connections BlockStatement StatementExpression MethodInvocation types MethodInvocation Model MethodInvocation MemberReference conn getType getFacade add End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifierRole MemberReference types BlockStatement StatementExpression MethodInvocation others MethodInvocation Model MethodInvocation MemberReference classifierRole getBases getFacade addAll End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference others BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference classifier Literal ""feature"" addModelEventListener getPump End MethodDeclaration Modifier protected Annotation Override removeOtherModelEventListeners FormalParameter ReferenceType Object oldTarget StatementExpression SuperMethodInvocation MemberReference oldTarget removeOtherModelEventListeners ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference others BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference classifier Literal ""feature"" removeModelEventListener getPump End StatementExpression MethodInvocation others clear ReferenceType UMLComboBoxModel2",0
404,404,"CompilationUnit PackageDeclaration org.argouml.util.osdep ClassDeclaration Modifier public /** Utility class providing hooks to
 *  operating-system-specific functionality.
 *
 *  @author Thierry Lach
 *  @since ARGO0.9.8
 */ OsUtil ConstructorDeclaration Modifier private /** Do not allow this class to be instantiated.
     */ OsUtil MethodDeclaration /**
     * Check whether we deal with a Windows Operating System.
     *
     * @return true if this is Windows
     */ Modifier public static BasicType boolean isWin32 ReturnStatement BinaryOperation != MethodInvocation System MethodInvocation Literal ""Windows"" indexOf Literal ""os.name"" getProperty Literal - 1 MethodDeclaration /**
     * Check whether we deal with a Macintosh.
     *
     * @return true if this is a Mac
     */ Modifier public static BasicType boolean isMac ReturnStatement BinaryOperation != MethodInvocation System Literal ""mrj.version"" getProperty Literal null MethodDeclaration /**
     * Check whether we deal with a Sun Java.
     *
     * @return true if this is a Sun Java
     */ Modifier public static BasicType boolean isSunJdk ReturnStatement MethodInvocation System Literal ""java.vendor"" getProperty",1
890,890,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.util.Collections Import java.util.List Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.application.api.InitSubsystem Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.notation.Notation Import org.argouml.notation.NotationName Import org.argouml.notation.NotationProviderFactory2 ClassDeclaration Modifier public /**
 * This class initialises the UML Notation subsystem.
 * 
 * This class is the only one that has the knowledge of the complete list of
 * NotationProvider4 implementations for UML. <p>
 * 
 * @author mvw@tigris.org
 */ InitNotationUml MethodDeclaration /**
     * static initializer, register all appropriate notations.
     */ Modifier public init LocalVariableDeclaration ReferenceType NotationProviderFactory2 VariableDeclarator npf MethodInvocation NotationProviderFactory2 getInstance LocalVariableDeclaration ReferenceType NotationName VariableDeclarator name MethodInvocation Notation Literal ""UML"" Literal ""1.4"" MethodInvocation ResourceLoaderWrapper Literal ""UmlNotation"" lookupIconResource makeNotation StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_NAME MemberReference name ClassReference ReferenceType ModelElementNameNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_TRANSITION MemberReference name ClassReference ReferenceType TransitionNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_STATEBODY MemberReference name ClassReference ReferenceType StateBodyNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ACTIONSTATE MemberReference name ClassReference ReferenceType ActionStateNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_OBJECT MemberReference name ClassReference ReferenceType ObjectNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_COMPONENTINSTANCE MemberReference name ClassReference ReferenceType ComponentInstanceNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_NODEINSTANCE MemberReference name ClassReference ReferenceType NodeInstanceNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_OBJECTFLOWSTATE_TYPE MemberReference name ClassReference ReferenceType ObjectFlowStateTypeNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_OBJECTFLOWSTATE_STATE MemberReference name ClassReference ReferenceType ObjectFlowStateStateNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_CALLSTATE MemberReference name ClassReference ReferenceType CallStateNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_CLASSIFIERROLE MemberReference name ClassReference ReferenceType ClassifierRoleNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_MESSAGE MemberReference name ClassReference ReferenceType MessageNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ATTRIBUTE MemberReference name ClassReference ReferenceType AttributeNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_OPERATION MemberReference name ClassReference ReferenceType OperationNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_EXTENSION_POINT MemberReference name ClassReference ReferenceType ExtensionPointNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ASSOCIATION_END_NAME MemberReference name ClassReference ReferenceType AssociationEndNameNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ASSOCIATION_ROLE MemberReference name ClassReference ReferenceType AssociationRoleNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ASSOCIATION_NAME MemberReference name ClassReference ReferenceType AssociationNameNotationUml addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_MULTIPLICITY MemberReference name ClassReference ReferenceType MultiplicityNotationUml addNotationProvider StatementExpression MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference name setDefaultNotation getInstance StatementExpression ClassCreator MethodInvocation init ReferenceType NotationUtilityUml MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getSettingsTabs ReturnStatement MethodInvocation Collections emptyList ReferenceType InitSubsystem",1
982,982,,0
760,760,"CompilationUnit PackageDeclaration org.argouml.language.java.generator Import java.io.BufferedReader Import java.io.BufferedWriter Import java.io.IOException Import java.util.Stack ClassDeclaration /**
   This code piece represents an interface declaration.
*/ InterfaceCodePiece FieldDeclaration /** The code piece this interface represents. */ Modifier private ReferenceType CodePiece VariableDeclarator interfaceDef FieldDeclaration /** The name of the interface. */ Modifier private ReferenceType String VariableDeclarator name ConstructorDeclaration Modifier public /**
       Constructor.

       @param def The code piece this interface represents.
       @param n The name of the interface.
    */ InterfaceCodePiece FormalParameter ReferenceType CodePiece def FormalParameter ReferenceType String n StatementExpression Assignment MemberReference interfaceDef MemberReference def = StatementExpression Assignment MemberReference name MemberReference n = MethodDeclaration Modifier public ReferenceType StringBuffer getText ReturnStatement MethodInvocation interfaceDef getText MethodDeclaration Modifier public BasicType int getStartPosition ReturnStatement MethodInvocation interfaceDef getStartPosition MethodDeclaration Modifier public BasicType int getEndPosition ReturnStatement MethodInvocation interfaceDef getEndPosition MethodDeclaration Modifier public BasicType int getStartLine ReturnStatement MethodInvocation interfaceDef getStartLine MethodDeclaration Modifier public BasicType int getEndLine ReturnStatement MethodInvocation interfaceDef getEndLine MethodDeclaration Modifier public write FormalParameter ReferenceType BufferedReader reader FormalParameter ReferenceType BufferedWriter writer FormalParameter ReferenceType Stack TypeArgument ReferenceType ParseState parseStateStack IOException LocalVariableDeclaration ReferenceType ParseState VariableDeclarator parseState MethodInvocation parseStateStack peek LocalVariableDeclaration ReferenceType Object VariableDeclarator mInterface MethodInvocation parseState MemberReference name newClassifier IfStatement BinaryOperation != MemberReference mInterface Literal null BlockStatement StatementExpression MethodInvocation parseStateStack ClassCreator ReferenceType ParseState MemberReference mInterface push LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbText MethodInvocation GeneratorJava MethodInvocation MemberReference mInterface generateClassifierStart getInstance IfStatement BinaryOperation != MemberReference sbText Literal null BlockStatement StatementExpression MethodInvocation writer MethodInvocation sbText toString write End StatementExpression MethodInvocation MemberReference reader Literal null ffCodePiece BlockStatement StatementExpression MethodInvocation MemberReference reader MemberReference writer ffCodePiece End ReferenceType NamedCodePiece",0
1499,1499,,0
511,511,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import org.tigris.gef.graph.GraphModel ClassDeclaration Modifier public /** Class to display graphics for a UML DeepHistoryState in a diagram.
 *
 * @author jrobbins
 */ FigDeepHistoryState ConstructorDeclaration Modifier public /**
     * The main constructor
     */ FigDeepHistoryState StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public ReferenceType String getH ReturnStatement Literal ""H*"" ConstructorDeclaration Modifier public /**
     * The constructor which links the Fig into the existing UML element
     * @param gm ignored
     * @param node the UML element
     */ FigDeepHistoryState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression SuperConstructorInvocation MemberReference gm MemberReference node ReferenceType FigHistoryState",0
1228,1228,,1
1183,1183,,1
1287,1287,,0
1065,1065,,1
451,451,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionRemoveElement Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.UMLPlainTextDocument Import org.argouml.uml.ui.UMLTextArea2 Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * Proppanel for comments (notes). <p>
 *
 * In UML 1.4 and beyond, the Comment has a ""body""
 * attribute to contain the comment string, although 
 * some UML tools continue to use the name attribute.
 */ PropPanelComment FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8781239511498017147L ConstructorDeclaration Modifier public /**
     * Construct a property panel for a Comment.
     */ PropPanelComment StatementExpression SuperConstructorInvocation Literal ""label.comment"" MethodInvocation Literal ""Comment"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField LocalVariableDeclaration ReferenceType UMLMutableLinkedList VariableDeclarator umll ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLCommentAnnotatedElementListModel Literal null Literal null StatementExpression MethodInvocation umll ClassCreator ReferenceType ActionDeleteAnnotatedElement setDeleteAction StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.annotated-elements"" localize ClassCreator ReferenceType JScrollPane MemberReference umll addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType UMLTextArea2 VariableDeclarator text ClassCreator ReferenceType UMLTextArea2 ClassCreator ReferenceType UMLCommentBodyDocument StatementExpression MethodInvocation text Literal true setLineWrap StatementExpression MethodInvocation text Literal 5 setRows LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator pane ClassCreator ReferenceType JScrollPane MemberReference text StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.comment.body"" localize MemberReference pane addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelModelElement ClassDeclaration UMLCommentBodyDocument FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 3713801312285489580L ConstructorDeclaration Modifier public /**
     * Constructor for UMLModelElementNameDocument.
     */ UMLCommentBodyDocument StatementExpression SuperConstructorInvocation Literal ""body"" StatementExpression MethodInvocation Literal ""filterNewlines"" MemberReference Boolean FALSE putProperty MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text setBody getCoreHelper MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getTarget getBody getFacade ReferenceType UMLPlainTextDocument ClassDeclaration ActionDeleteAnnotatedElement ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionDeleteAnnotatedElement StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.remove"" localize MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 StatementExpression SuperMethodInvocation MemberReference arg0 actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation getObjectToRemove removeAnnotatedElement getCoreHelper ReferenceType AbstractActionRemoveElement",1
1463,1463,,0
1597,1597,,0
243,243,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLPlainTextDocument Import org.argouml.uml.ui.UMLTextArea2 Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * Proppanel for Constraints . <p>

 */ PropPanelConstraint FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7621484706045787046L ConstructorDeclaration Modifier public /**
     * Construct a property panel for Constraint elements.
     */ PropPanelConstraint StatementExpression SuperConstructorInvocation Literal ""label.constraint"" MethodInvocation Literal ""Constraint"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.constrained-elements"" localize ClassCreator ReferenceType JScrollPane ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLConstraintConstrainedElementListModel addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType UMLTextArea2 VariableDeclarator text ClassCreator ReferenceType UMLTextArea2 ClassCreator ReferenceType UMLConstraintBodyDocument StatementExpression MethodInvocation text Literal false setEditable StatementExpression MethodInvocation text Literal false setLineWrap StatementExpression MethodInvocation text Literal 5 setRows LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator pane ClassCreator ReferenceType JScrollPane MemberReference text StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.constraint.body"" localize MemberReference pane addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelModelElement ClassDeclaration UMLConstraintBodyDocument ConstructorDeclaration Modifier public /**
     * Construct a document for a constraint body.
     */ UMLConstraintBodyDocument StatementExpression SuperConstructorInvocation Literal ""body"" MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBody getFacade getBody getFacade ReferenceType UMLPlainTextDocument",0
1021,1021,,1
126,126,"CompilationUnit PackageDeclaration org.argouml.util Import java.util.ArrayList Import java.util.Collection Import java.util.Enumeration Import java.util.List Import java.util.NoSuchElementException ClassDeclaration /**
 * Internal class for managing the delimiters in MyTokenizer. It's rather
 * similar to CustomSeparator, but faster for short constant strings.
 */ TokenSep FieldDeclaration Modifier private ReferenceType TokenSep VariableDeclarator next Literal null FieldDeclaration Modifier private final ReferenceType String VariableDeclarator theString FieldDeclaration Modifier private final BasicType int VariableDeclarator length FieldDeclaration Modifier private BasicType int VariableDeclarator pattern ConstructorDeclaration Modifier public /**
     * Constructs a TokenSep that will match the String given in str.
     *
     * @param str The delimiter string.
     */ TokenSep FormalParameter ReferenceType String str StatementExpression Assignment MemberReference theString MemberReference str = StatementExpression Assignment MemberReference length MethodInvocation str length = IfStatement BinaryOperation > MemberReference length Literal 32 ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""TokenSep "" MemberReference str Literal "" is "" MemberReference length Literal "" (> 32) chars long"" End StatementExpression Assignment MemberReference pattern Literal 0 = MethodDeclaration /**
     * Called by MyTokenizer when a new character is processed in the
     * sequence. Returns true if we have found the delimiter.
     */ Modifier public BasicType boolean addChar FormalParameter BasicType char c LocalVariableDeclaration BasicType int VariableDeclarator i StatementExpression Assignment MemberReference pattern Literal 1 <<= StatementExpression Assignment MemberReference pattern Literal 1 |= ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation theString MemberReference i charAt MemberReference c BlockStatement StatementExpression Assignment MemberReference pattern BinaryOperation << Literal 1 MemberReference i &= End End ReturnStatement BinaryOperation != BinaryOperation & MemberReference pattern BinaryOperation << Literal 1 BinaryOperation - MemberReference length Literal 1 Literal 0 MethodDeclaration /**
     * Called by MyTokenizer before starting scanning for a new token.
     */ Modifier public reset StatementExpression Assignment MemberReference pattern Literal 0 = MethodDeclaration /**
     * Gets the length of this token.
     */ Modifier public BasicType int length ReturnStatement MemberReference length MethodDeclaration /**
     * Gets this token.
     */ Modifier public ReferenceType String getString ReturnStatement MemberReference theString MethodDeclaration /**
     * @param n The next to set.
     */ Modifier public setNext FormalParameter ReferenceType TokenSep n StatementExpression Assignment This MemberReference next MemberReference n = MethodDeclaration /**
     * @return Returns the next.
     */ Modifier public ReferenceType TokenSep getNext ReturnStatement MemberReference next ClassDeclaration /**
 * A descendent of CustomSeparator that recognizes tokens on one of two forms:
 * <ul>
 * <li><pre>'chr'.....'esc' 'chr'.....'chr'</pre>
 * <li><pre>'lchr'...'lchr'...'rchr'...'esc' 'rchr'....'rchr'</pre></ul>
 *
 * <p>The first form is suited for quoted strings, like <pre>""...\""....""</pre>
 * or <pre>'...\'...'</pre>.
 *
 * <p>The second form is suited for expressions, like
 * <pre>(a+(b*c)-15*eq(a, b))</pre>.
 *
 * <p>This is in fact the class currently used for the public separators in
 * MyTokenizer, except PAREN_EXPR_STRING_SEPARATOR and LINE_SEPARATOR.
 */ QuotedStringSeparator FieldDeclaration Modifier private final BasicType char VariableDeclarator escChr FieldDeclaration Modifier private final BasicType char VariableDeclarator startChr FieldDeclaration Modifier private final BasicType char VariableDeclarator stopChr FieldDeclaration Modifier private BasicType boolean VariableDeclarator esced FieldDeclaration Modifier private BasicType int VariableDeclarator tokLen FieldDeclaration Modifier private BasicType int VariableDeclarator level ConstructorDeclaration Modifier public /**
     * Creates a separator of the first form (see above) where
     * 'chr' = q and 'esc' = esc.
     *
     * @param q The delimiter character.
     * @param esc The escape character.
     */ QuotedStringSeparator FormalParameter BasicType char q FormalParameter BasicType char esc StatementExpression SuperConstructorInvocation MemberReference q StatementExpression Assignment MemberReference esced Literal false = StatementExpression Assignment MemberReference escChr MemberReference esc = StatementExpression Assignment MemberReference startChr Literal 0 = StatementExpression Assignment MemberReference stopChr MemberReference q = StatementExpression Assignment MemberReference tokLen Literal 0 = StatementExpression Assignment MemberReference level Literal 1 = ConstructorDeclaration Modifier public /**
     * Creates a separator of the second form (see above) where
     * 'lchr' = sq, 'rchr' = eq and 'esc' = esc.
     *
     * @param sq The left delimiter character.
     * @param eq The right delimiter character.
     * @param esc The escape character.
     */ QuotedStringSeparator FormalParameter BasicType char sq FormalParameter BasicType char eq FormalParameter BasicType char esc StatementExpression SuperConstructorInvocation MemberReference sq StatementExpression Assignment MemberReference esced Literal false = StatementExpression Assignment MemberReference escChr MemberReference esc = StatementExpression Assignment MemberReference startChr MemberReference sq = StatementExpression Assignment MemberReference stopChr MemberReference eq = StatementExpression Assignment MemberReference tokLen Literal 0 = StatementExpression Assignment MemberReference level Literal 1 = MethodDeclaration Modifier public reset StatementExpression SuperMethodInvocation reset StatementExpression Assignment MemberReference tokLen Literal 0 = StatementExpression Assignment MemberReference level Literal 1 = MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to return the entire length of the token.
     */ Modifier public BasicType int tokenLength ReturnStatement BinaryOperation + SuperMethodInvocation tokenLength MemberReference tokLen MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to return true.
     *
     * @return true
     */ Modifier public BasicType boolean hasFreePart ReturnStatement Literal true MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to find the end of the token.
     */ Modifier public BasicType boolean endChar FormalParameter BasicType char c StatementExpression MemberReference ++ tokLen IfStatement MemberReference esced BlockStatement StatementExpression Assignment MemberReference esced Literal false = ReturnStatement Literal false End IfStatement BinaryOperation && BinaryOperation != MemberReference escChr Literal 0 BinaryOperation == MemberReference c MemberReference escChr BlockStatement StatementExpression Assignment MemberReference esced Literal true = ReturnStatement Literal false End IfStatement BinaryOperation && BinaryOperation != MemberReference startChr Literal 0 BinaryOperation == MemberReference c MemberReference startChr StatementExpression MemberReference ++ level End IfStatement BinaryOperation == MemberReference c MemberReference stopChr StatementExpression MemberReference -- level End ReturnStatement BinaryOperation <= MemberReference level Literal 0 ReferenceType CustomSeparator ClassDeclaration /**
 * A descendent of CustomSeparator that recognizes tokens on the form:
 *
 * <br>( "" \"" ) "" ' \' ) ' )
 *
 * <p>This is, an expression inside parentheses with proper consideration
 * for quoted strings inside the the expression.
 */ ExprSeparatorWithStrings FieldDeclaration Modifier private BasicType boolean VariableDeclarator isSQuot FieldDeclaration Modifier private BasicType boolean VariableDeclarator isDQuot FieldDeclaration Modifier private BasicType boolean VariableDeclarator isEsc FieldDeclaration Modifier private BasicType int VariableDeclarator tokLevel FieldDeclaration Modifier private BasicType int VariableDeclarator tokLen ConstructorDeclaration Modifier public /**
     * The constructor. No choices available.
     */ ExprSeparatorWithStrings StatementExpression SuperConstructorInvocation Literal '(' StatementExpression Assignment MemberReference isEsc Literal false = StatementExpression Assignment MemberReference isSQuot Literal false = StatementExpression Assignment MemberReference isDQuot Literal false = StatementExpression Assignment MemberReference tokLevel Literal 1 = StatementExpression Assignment MemberReference tokLen Literal 0 = MethodDeclaration Modifier public reset StatementExpression SuperMethodInvocation reset StatementExpression Assignment MemberReference isEsc Literal false = StatementExpression Assignment MemberReference isSQuot Literal false = StatementExpression Assignment MemberReference isDQuot Literal false = StatementExpression Assignment MemberReference tokLevel Literal 1 = StatementExpression Assignment MemberReference tokLen Literal 0 = MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to return the entire length of the token.
     */ Modifier public BasicType int tokenLength ReturnStatement BinaryOperation + SuperMethodInvocation tokenLength MemberReference tokLen MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to return true.
     *
     * @return true
     */ Modifier public BasicType boolean hasFreePart ReturnStatement Literal true MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to find the end of the token.
     */ Modifier public BasicType boolean endChar FormalParameter BasicType char c StatementExpression MemberReference ++ tokLen IfStatement MemberReference isSQuot BlockStatement IfStatement MemberReference isEsc BlockStatement StatementExpression Assignment MemberReference isEsc Literal false = ReturnStatement Literal false End IfStatement BinaryOperation == MemberReference c Literal '\\' StatementExpression Assignment MemberReference isEsc Literal true = IfStatement BinaryOperation == MemberReference c Literal '\'' StatementExpression Assignment MemberReference isSQuot Literal false = End End ReturnStatement Literal false IfStatement MemberReference isDQuot BlockStatement IfStatement MemberReference isEsc BlockStatement StatementExpression Assignment MemberReference isEsc Literal false = ReturnStatement Literal false End IfStatement BinaryOperation == MemberReference c Literal '\\' StatementExpression Assignment MemberReference isEsc Literal true = IfStatement BinaryOperation == MemberReference c Literal '\""' StatementExpression Assignment MemberReference isDQuot Literal false = End End ReturnStatement Literal false BlockStatement IfStatement BinaryOperation == MemberReference c Literal '\'' StatementExpression Assignment MemberReference isSQuot Literal true = IfStatement BinaryOperation == MemberReference c Literal '\""' StatementExpression Assignment MemberReference isDQuot Literal true = IfStatement BinaryOperation == MemberReference c Literal '(' StatementExpression MemberReference ++ tokLevel IfStatement BinaryOperation == MemberReference c Literal ')' StatementExpression MemberReference -- tokLevel End End End End ReturnStatement BinaryOperation <= MemberReference tokLevel Literal 0 End End ReferenceType CustomSeparator ClassDeclaration /**
 * A descendent of CustomSeparator that recognizes ""the tree line ends"":
 * <ul>
 * <li>UNIX: &lt;lf&gt;</li>
 * <li>DOS: &lt;cr&gt; &lt;lf&gt;</li>
 * <li>MAC: &lt;cr&gt;</li>
 * </ul>
 *
 * <p>This is in fact the class currently used LINE_SEPARATOR in MyTokenizer.
 */ LineSeparator FieldDeclaration Modifier private BasicType boolean VariableDeclarator hasCr FieldDeclaration Modifier private BasicType boolean VariableDeclarator hasLf FieldDeclaration Modifier private BasicType boolean VariableDeclarator hasPeeked ConstructorDeclaration Modifier public /**
     * Creates a LineSeparator.
     */ LineSeparator StatementExpression Assignment MemberReference hasCr Literal false = StatementExpression Assignment MemberReference hasLf Literal false = StatementExpression Assignment MemberReference hasPeeked Literal false = MethodDeclaration Modifier public reset StatementExpression SuperMethodInvocation reset StatementExpression Assignment MemberReference hasCr Literal false = StatementExpression Assignment MemberReference hasLf Literal false = StatementExpression Assignment MemberReference hasPeeked Literal false = MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public BasicType int tokenLength ReturnStatement TernaryExpression BinaryOperation && MemberReference hasCr MemberReference hasLf Literal 2 Literal 1 MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public BasicType int getPeekCount ReturnStatement TernaryExpression MemberReference hasPeeked Literal 1 Literal 0 MethodDeclaration /**
     * {@inheritDoc}
     */ Modifier public BasicType boolean hasFreePart ReturnStatement MemberReference ! hasLf MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to find the start of a line-end.
     */ Modifier public BasicType boolean addChar FormalParameter BasicType char c IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression Assignment MemberReference hasLf Literal true = ReturnStatement Literal true End IfStatement BinaryOperation == MemberReference c Literal '\r' BlockStatement StatementExpression Assignment MemberReference hasCr Literal true = ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration /**
     * {@inheritDoc}
     *
     * Overridden to find the end of a line-end.
     */ Modifier public BasicType boolean endChar FormalParameter BasicType char c IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression Assignment MemberReference hasLf Literal true = BlockStatement StatementExpression Assignment MemberReference hasPeeked Literal true = End ReturnStatement Literal true ReferenceType CustomSeparator ClassDeclaration Modifier public /**
 * Class for dividing a String into any number of parts. Each part will be a
 * substring of the original String. The first part will at least contain the
 * first character in the string. All following parts will at least contain
 * the first character in the String not covered by any previous part.
 *
 * <p>The delim parameter to the constructors is a comma separated list of
 * tokens that should be recognized by the tokenizer. These tokens will be
 * returned by the tokenizer as tokens, and any arbitrary text between them
 * will also be returned as tokens. Since the comma has special meaning in
 * this string, it can be escaped with \ to only mean itself (like in ""\\,"").
 * For technical reasons it is not possible for any token in this list to be
 * more than 32 characters long.
 *
 * <p>In addition to the delim parameter it is also possible to use custom
 * separators that allow any string that can be generated by the limited
 * version of a Turing machine that your computer is, to be used as a
 * delimiter.
 *
 * <p>There are some custom separators provided that you can use to get
 * things like strings in one token. These cannot be used simultaneously by
 * several tokenizers, ie they are not thread safe.
 *
 * <p>The tokenizer works in a kind of greedy way. When the first separator
 * token from delim is matched or any CustomSeparator returns true from
 * addChar, then it is satisfied it has found a token and does NOT check if
 * it could have found a longer token. Eg: if you have this delim string
 * ""<,<<"", then ""<<"" will never be found.
 *
 * <p><b>Example</b><br><pre>
 * MyTokenizer tzer = new MyTokenizer(""Hello, how are you?"", "" ,\\,"");
 * while (tzer.hasMoreTokens())
 *   _cat.info(""\"""" + tzer.nextToken() + ""\"""");
 * </pre>
 *
 * <p>Which whould yield the following output:<pre>
 *   ""Hello""
 *   "",""
 *   "" ""
 *   ""how""
 *   "" ""
 *   ""are""
 *   "" ""
 *   ""you?""
 * </pre>
 *
 * @author Michael Stockman
 * @since 0.11.2
 * @see CustomSeparator
 */ MyTokenizer FieldDeclaration /** A custom separator for quoted strings enclosed in single quotes
     *  and using \ as escape character. There may not be an end quote
     *  if the tokenizer reaches the end of the String. */ Modifier public final static ReferenceType CustomSeparator VariableDeclarator SINGLE_QUOTED_SEPARATOR ClassCreator ReferenceType QuotedStringSeparator Literal '\'' Literal '\\' FieldDeclaration /** A custom separator for quoted strings enclosed in double quotes
     *  and using \ as escape character. There may not be an end quote
     *  if the tokenizer reaches the end of the String. */ Modifier public final static ReferenceType CustomSeparator VariableDeclarator DOUBLE_QUOTED_SEPARATOR ClassCreator ReferenceType QuotedStringSeparator Literal '\""' Literal '\\' FieldDeclaration /** A custom separator for expressions enclosed in parentheses and
     *  matching lparams with rparams. There may not be proper matching
     *  if the tokenizer reaches the end of the String. Do not use this
     *  together with PAREN_EXPR_STRING_SEPARATOR. */ Modifier public final static ReferenceType CustomSeparator VariableDeclarator PAREN_EXPR_SEPARATOR ClassCreator ReferenceType QuotedStringSeparator Literal '(' Literal ')' Literal '\0' FieldDeclaration /** A custom separator for expressions enclosed in parentheses and
     *  matching lparams with rparams. There may not be proper matching
     *  if the tokenizer reaches the end of the String. It also takes
     *  quoted strings (either single or double quotes) in the expression
     *  into consideration, unlike PAREN_EXPR_SEPARATOR. Do not use this
     *  together with PAREN_EXPR_SEPARATOR. */ Modifier public final static ReferenceType CustomSeparator VariableDeclarator PAREN_EXPR_STRING_SEPARATOR ClassCreator ReferenceType ExprSeparatorWithStrings FieldDeclaration /** A custom separator for texts. Singles out the line ends,
     *  and consequently the lines, if they are in either dos, mac
     *  or unix format. */ Modifier public final static ReferenceType CustomSeparator VariableDeclarator LINE_SEPARATOR ClassCreator ReferenceType LineSeparator FieldDeclaration Modifier private BasicType int VariableDeclarator sIdx FieldDeclaration Modifier private final BasicType int VariableDeclarator eIdx FieldDeclaration Modifier private BasicType int VariableDeclarator tokIdx FieldDeclaration Modifier private final ReferenceType String VariableDeclarator source FieldDeclaration Modifier private final ReferenceType TokenSep VariableDeclarator delims FieldDeclaration Modifier private ReferenceType String VariableDeclarator savedToken FieldDeclaration Modifier private BasicType int VariableDeclarator savedIdx FieldDeclaration Modifier private ReferenceType List VariableDeclarator customSeps FieldDeclaration Modifier private ReferenceType String VariableDeclarator putToken ConstructorDeclaration Modifier public /**
     * Constructs a new instance. See above for a description of the
     * delimiter string.
     *
     * @param string	The String to be tokenized.
     * @param delim	The String of delimiters.
     */ MyTokenizer FormalParameter ReferenceType String string FormalParameter ReferenceType String delim StatementExpression Assignment MemberReference source MemberReference string = StatementExpression Assignment MemberReference delims MethodInvocation MemberReference delim parseDelimString = StatementExpression Assignment MemberReference sIdx Literal 0 = StatementExpression Assignment MemberReference tokIdx Literal 0 = StatementExpression Assignment MemberReference eIdx MethodInvocation string length = StatementExpression Assignment MemberReference savedToken Literal null = StatementExpression Assignment MemberReference customSeps Literal null = StatementExpression Assignment MemberReference putToken Literal null = ConstructorDeclaration Modifier public /**
     * Constructs a new instance. See above for a description of the
     * delimiter string and custom separators.
     *
     * @param string	The String to be tokenized.
     * @param delim	The String of delimiters.
     * @param sep	A custom separator to use.
     */ MyTokenizer FormalParameter ReferenceType String string FormalParameter ReferenceType String delim FormalParameter ReferenceType CustomSeparator sep StatementExpression Assignment MemberReference source MemberReference string = StatementExpression Assignment MemberReference delims MethodInvocation MemberReference delim parseDelimString = StatementExpression Assignment MemberReference sIdx Literal 0 = StatementExpression Assignment MemberReference tokIdx Literal 0 = StatementExpression Assignment MemberReference eIdx MethodInvocation string length = StatementExpression Assignment MemberReference savedToken Literal null = StatementExpression Assignment MemberReference customSeps ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation customSeps MemberReference sep add ConstructorDeclaration Modifier public /**
     * Constructs a new instance. See above for a description of the
     * delimiter string and custom separators.
     *
     * @param string	The String to be tokenized.
     * @param delim	The String of delimiters.
     * @param seps	Some container with custom separators to use.
     */ MyTokenizer FormalParameter ReferenceType String string FormalParameter ReferenceType String delim FormalParameter ReferenceType Collection seps StatementExpression Assignment MemberReference source MemberReference string = StatementExpression Assignment MemberReference delims MethodInvocation MemberReference delim parseDelimString = StatementExpression Assignment MemberReference sIdx Literal 0 = StatementExpression Assignment MemberReference tokIdx Literal 0 = StatementExpression Assignment MemberReference eIdx MethodInvocation string length = StatementExpression Assignment MemberReference savedToken Literal null = StatementExpression Assignment MemberReference customSeps ClassCreator ReferenceType ArrayList MemberReference seps = MethodDeclaration /**
     * Returns true if there are more tokens left.
     *
     * @return true if another token can be fetched with nextToken.
     */ Modifier public BasicType boolean hasMoreTokens ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation < MemberReference sIdx MemberReference eIdx BinaryOperation != MemberReference savedToken Literal null BinaryOperation != MemberReference putToken Literal null MethodDeclaration /**
     * Retrives the next token.
     *
     * @return The next token.
     */ Modifier public ReferenceType String nextToken LocalVariableDeclaration ReferenceType CustomSeparator VariableDeclarator csep LocalVariableDeclaration ReferenceType TokenSep VariableDeclarator sep LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal null LocalVariableDeclaration BasicType int VariableDeclarator i VariableDeclarator j IfStatement BinaryOperation != MemberReference putToken Literal null BlockStatement StatementExpression Assignment MemberReference s MemberReference putToken = StatementExpression Assignment MemberReference putToken Literal null = ReturnStatement MemberReference s End IfStatement BinaryOperation != MemberReference savedToken Literal null BlockStatement StatementExpression Assignment MemberReference s MemberReference savedToken = StatementExpression Assignment MemberReference tokIdx MemberReference savedIdx = StatementExpression Assignment MemberReference savedToken Literal null = ReturnStatement MemberReference s End IfStatement BinaryOperation >= MemberReference sIdx MemberReference eIdx ThrowStatement ClassCreator ReferenceType NoSuchElementException Literal ""No more tokens available"" End ForStatement ForControl Assignment MemberReference sep MemberReference delims = BinaryOperation != MemberReference sep Literal null Assignment MemberReference sep MethodInvocation sep getNext = StatementExpression MethodInvocation sep reset End IfStatement BinaryOperation != MemberReference customSeps Literal null BlockStatement ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MethodInvocation customSeps size MemberReference ++ i StatementExpression Cast ReferenceType CustomSeparator MethodInvocation customSeps MemberReference i get End End ForStatement ForControl Assignment MemberReference i MemberReference sIdx = BinaryOperation < MemberReference i MemberReference eIdx MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation source MemberReference i charAt ForStatement ForControl Assignment MemberReference j Literal 0 = BinaryOperation && BinaryOperation != MemberReference customSeps Literal null BinaryOperation < MemberReference j MethodInvocation customSeps size MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference csep Cast ReferenceType CustomSeparator MethodInvocation customSeps MemberReference j get = IfStatement MethodInvocation csep MemberReference c addChar BreakStatement End End IfStatement BinaryOperation && BinaryOperation != MemberReference customSeps Literal null BinaryOperation < MemberReference j MethodInvocation customSeps size BlockStatement StatementExpression Assignment MemberReference csep Cast ReferenceType CustomSeparator MethodInvocation customSeps MemberReference j get = WhileStatement BinaryOperation && MethodInvocation csep hasFreePart BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference eIdx IfStatement MethodInvocation csep MethodInvocation source MemberReference ++ i charAt endChar BreakStatement End End StatementExpression Assignment MemberReference i MethodInvocation Math MethodInvocation csep getPeekCount MemberReference i min -= LocalVariableDeclaration BasicType int VariableDeclarator clen MethodInvocation Math BinaryOperation + MemberReference i Literal 1 MethodInvocation source length min IfStatement BinaryOperation > BinaryOperation + BinaryOperation - MemberReference i MemberReference sIdx Literal 1 MethodInvocation csep tokenLength BlockStatement StatementExpression Assignment MemberReference s MethodInvocation source MemberReference sIdx BinaryOperation + BinaryOperation - MemberReference i MethodInvocation csep tokenLength Literal 1 substring = StatementExpression Assignment MemberReference savedIdx BinaryOperation + BinaryOperation - MemberReference i MethodInvocation csep tokenLength Literal 1 = StatementExpression Assignment MemberReference savedToken MethodInvocation source MemberReference savedIdx MemberReference clen substring = BlockStatement StatementExpression Assignment MemberReference s MethodInvocation source MemberReference sIdx MemberReference clen substring = End StatementExpression Assignment MemberReference tokIdx MemberReference sIdx = StatementExpression Assignment MemberReference sIdx BinaryOperation + MemberReference i Literal 1 = BreakStatement End ForStatement ForControl Assignment MemberReference sep MemberReference delims = BinaryOperation != MemberReference sep Literal null Assignment MemberReference sep MethodInvocation sep getNext = IfStatement MethodInvocation sep MemberReference c addChar BreakStatement End End IfStatement BinaryOperation != MemberReference sep Literal null BlockStatement IfStatement BinaryOperation > BinaryOperation + BinaryOperation - MemberReference i MemberReference sIdx Literal 1 MethodInvocation sep length BlockStatement StatementExpression Assignment MemberReference s MethodInvocation source MemberReference sIdx BinaryOperation + BinaryOperation - MemberReference i MethodInvocation sep length Literal 1 substring = StatementExpression Assignment MemberReference savedIdx BinaryOperation + BinaryOperation - MemberReference i MethodInvocation sep length Literal 1 = StatementExpression Assignment MemberReference savedToken MethodInvocation sep getString = BlockStatement StatementExpression Assignment MemberReference s MethodInvocation sep getString = End StatementExpression Assignment MemberReference tokIdx MemberReference sIdx = StatementExpression Assignment MemberReference sIdx BinaryOperation + MemberReference i Literal 1 = BreakStatement End End IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s MethodInvocation source MemberReference sIdx substring = StatementExpression Assignment MemberReference tokIdx MemberReference sIdx = StatementExpression Assignment MemberReference sIdx MemberReference eIdx = End ReturnStatement MemberReference s MethodDeclaration /**
     * This class implements the Enumeration interface. This call maps
     * to nextToken.
     *
     * @return nextToken();
     * @see	#nextToken() nextToken
     */ Modifier public ReferenceType Object nextElement ReturnStatement MethodInvocation nextToken MethodDeclaration /**
     * This class implements the Enumeration interface. This call maps
     * to hasMoreTokens.
     *
     * @return hasMoreTokens();
     * @see	#hasMoreTokens() hasMoreTokens
     */ Modifier public BasicType boolean hasMoreElements ReturnStatement MethodInvocation hasMoreTokens MethodDeclaration /**
     * Returns the index in the string of the last token returned by
     * nextToken, or zero if no token has been retrived.
     *
     * @return The index of the last token.
     */ Modifier public BasicType int getTokenIndex ReturnStatement MemberReference tokIdx MethodDeclaration /**
     * Put a token on the input stream. This will be the next token read
     * from the tokenizer. If this function is called again before the
     * last token has been read, then it will be lost.
     *
     * <p>The index returned from getTokenIndex will be the same for the
     * token put as that of the last token that wasn't put.
     *
     * @param s The token to put.
     * @throws NullPointerException if s is null.
     */ Modifier public putToken FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null ThrowStatement ClassCreator ReferenceType NullPointerException Literal ""Cannot put a null token"" End StatementExpression Assignment MemberReference putToken MemberReference s = MethodDeclaration /**
     * Creates a linked list of TokenSeps from the comma separated string
     * str.
     *
     * @param str The string specifying delimiter strings.
     * @return A list of TokenSeps.
     */ Modifier private static ReferenceType TokenSep parseDelimString FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType TokenSep VariableDeclarator first Literal null LocalVariableDeclaration ReferenceType TokenSep VariableDeclarator p Literal null LocalVariableDeclaration BasicType int VariableDeclarator idx0 VariableDeclarator idx1 VariableDeclarator length LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator val ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType char VariableDeclarator c StatementExpression Assignment MemberReference length MethodInvocation str length = ForStatement ForControl Assignment MemberReference idx0 Literal 0 = BinaryOperation < MemberReference idx0 MemberReference length BlockStatement ForStatement ForControl Assignment MemberReference idx1 MemberReference idx0 = BinaryOperation < MemberReference idx1 MemberReference length MemberReference ++ idx1 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation str MemberReference idx1 charAt = IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement StatementExpression MemberReference ++ idx1 IfStatement BinaryOperation < MemberReference idx1 MemberReference length StatementExpression MethodInvocation val MethodInvocation str MemberReference idx1 charAt append End IfStatement BinaryOperation == MemberReference c Literal ',' BlockStatement BreakStatement BlockStatement StatementExpression MethodInvocation val MemberReference c append End End End StatementExpression Assignment MemberReference idx1 MethodInvocation Math MemberReference idx1 MemberReference length min = IfStatement BinaryOperation > MemberReference idx1 MemberReference idx0 BlockStatement StatementExpression Assignment MemberReference p ClassCreator ReferenceType TokenSep MethodInvocation val toString = StatementExpression Assignment MemberReference val ClassCreator ReferenceType StringBuilder = StatementExpression MethodInvocation p MemberReference first setNext StatementExpression Assignment MemberReference first MemberReference p = End StatementExpression Assignment MemberReference idx0 BinaryOperation + MemberReference idx1 Literal 1 = End ReturnStatement MemberReference first ReferenceType Enumeration",0
209,209,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.uml.diagram.AttributesCompartmentContainer Import org.argouml.uml.diagram.ExtensionsCompartmentContainer Import org.argouml.uml.diagram.OperationsCompartmentContainer Import org.argouml.uml.diagram.use_case.ui.FigUseCase Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.presentation.Fig Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * A class to implement the actions involved in hiding and showing
 * compartments on interfaces, classes and use cases.<p>
 *
 * This implementation may easily be extended for other
 * compartments of other figs.<p>
 *
 * The class declares a number of static instances, each with an
 * actionPerformed method that performs the required action.
 */ ActionCompartmentDisplay FieldDeclaration /**
     * A flag to indicate whether the action should show or hide the
     * relevant compartment.
     */ Modifier private BasicType boolean VariableDeclarator display Literal false FieldDeclaration /**
     * Compartment type(s) field.
     * Bitfield of flags with a bit for each compartment type
     */ Modifier private BasicType int VariableDeclarator cType FieldDeclaration Modifier private final static BasicType int VariableDeclarator COMPARTMENT_ATTRIBUTE Literal 1 FieldDeclaration Modifier private final static BasicType int VariableDeclarator COMPARTMENT_OPERATION Literal 2 FieldDeclaration Modifier private final static BasicType int VariableDeclarator COMPARTMENT_EXTENSIONPOINT Literal 4 FieldDeclaration Modifier private final static BasicType int VariableDeclarator COMPARTMENT_ENUMLITERAL Literal 8 FieldDeclaration /**
     * Static instance to show the attribute compartment of a class.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator SHOW_ATTR_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal true Literal ""action.show-attribute-compartment"" MemberReference COMPARTMENT_ATTRIBUTE FieldDeclaration /**
     * Static instance to hide the attribute compartment of a class.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator HIDE_ATTR_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal false Literal ""action.hide-attribute-compartment"" MemberReference COMPARTMENT_ATTRIBUTE FieldDeclaration /**
     * Static instance to show the operation compartment of a class.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator SHOW_OPER_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal true Literal ""action.show-operation-compartment"" MemberReference COMPARTMENT_OPERATION FieldDeclaration /**
     * Static instance to hide the operation compartment of a class.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator HIDE_OPER_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal false Literal ""action.hide-operation-compartment"" MemberReference COMPARTMENT_OPERATION FieldDeclaration /**
     * Static instance to show the extension point compartment of a use
     * case.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator SHOW_EXTPOINT_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal true Literal ""action.show-extension-point-compartment"" MemberReference COMPARTMENT_EXTENSIONPOINT FieldDeclaration /**
     * Static instance to hide the extension point compartment of a use
     * case.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator HIDE_EXTPOINT_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal false Literal ""action.hide-extension-point-compartment"" MemberReference COMPARTMENT_EXTENSIONPOINT FieldDeclaration /**
     * Static instance to show both compartments of a class or enumeration.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator SHOW_ALL_COMPARTMENTS ClassCreator ReferenceType ActionCompartmentDisplay Literal true Literal ""action.show-all-compartments"" BinaryOperation | BinaryOperation | MemberReference COMPARTMENT_ATTRIBUTE MemberReference COMPARTMENT_OPERATION MemberReference COMPARTMENT_ENUMLITERAL FieldDeclaration /**
     * Static instance to hide both compartments of a class or enumeration.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator HIDE_ALL_COMPARTMENTS ClassCreator ReferenceType ActionCompartmentDisplay Literal false Literal ""action.hide-all-compartments"" BinaryOperation | BinaryOperation | MemberReference COMPARTMENT_ATTRIBUTE MemberReference COMPARTMENT_OPERATION MemberReference COMPARTMENT_ENUMLITERAL FieldDeclaration /**
     * Static instance to show the enumeration literals compartment of an
     * enumeration.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator SHOW_ENUMLITERAL_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal true Literal ""action.show-enumeration-literal-compartment"" MemberReference COMPARTMENT_ENUMLITERAL FieldDeclaration /**
     * Static instance to hide the enumeration literals compartment of an
     * enumeration.
     */ Modifier private final static ReferenceType UndoableAction VariableDeclarator HIDE_ENUMLITERAL_COMPARTMENT ClassCreator ReferenceType ActionCompartmentDisplay Literal false Literal ""action.hide-enumeration-literal-compartment"" MemberReference COMPARTMENT_ENUMLITERAL ConstructorDeclaration Modifier protected /**
     * Constructor for a new instance. Can only be called by this class or
     * its children, since used to create static instances only.
     *
     * @param d    <code>true</code> if the compartment is to be shown,
     *             <code>false</code> if it is to be hidden
     *
     * @param c    the text to be displayed for this action
     * @param type the type of compartment. See definition at {@link #cType}
     */ ActionCompartmentDisplay FormalParameter BasicType boolean d FormalParameter ReferenceType String c FormalParameter BasicType int type StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference c localize StatementExpression Assignment MemberReference display MemberReference d = StatementExpression Assignment MemberReference cType MemberReference type = MethodDeclaration /**
     * Return the compartment show and/or hide actions needed for the selected
     * Figs.
     * 
     * @return Only returns the actions for the menu-items that make sense for
     *         the current selection.
     */ Modifier public static ReferenceType Collection getActions LocalVariableDeclaration ReferenceType Collection VariableDeclarator actions ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration BasicType int VariableDeclarator present Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator visible Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator operPresent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator operVisible Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator attrPresent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator attrVisible Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator epPresent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator epVisible Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator enumPresent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator enumVisible Literal false LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs MethodInvocation ce MethodInvocation getFigs getSelectionManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType AttributesCompartmentContainer BlockStatement StatementExpression MemberReference ++ present StatementExpression Assignment MemberReference attrPresent Literal true = StatementExpression Assignment MemberReference attrVisible Cast ReferenceType AttributesCompartmentContainer MemberReference f = IfStatement MemberReference attrVisible BlockStatement StatementExpression MemberReference ++ visible End End IfStatement BinaryOperation instanceof MemberReference f ReferenceType OperationsCompartmentContainer BlockStatement StatementExpression MemberReference ++ present StatementExpression Assignment MemberReference operPresent Literal true = StatementExpression Assignment MemberReference operVisible Cast ReferenceType OperationsCompartmentContainer MemberReference f = IfStatement MemberReference operVisible BlockStatement StatementExpression MemberReference ++ visible End End IfStatement BinaryOperation instanceof MemberReference f ReferenceType ExtensionsCompartmentContainer BlockStatement StatementExpression MemberReference ++ present StatementExpression Assignment MemberReference epPresent Literal true = StatementExpression Assignment MemberReference epVisible Cast ReferenceType ExtensionsCompartmentContainer MemberReference f = IfStatement MemberReference epVisible BlockStatement StatementExpression MemberReference ++ visible End End IfStatement BinaryOperation instanceof MemberReference f ReferenceType EnumLiteralsCompartmentContainer BlockStatement StatementExpression MemberReference ++ present StatementExpression Assignment MemberReference enumPresent Literal true = StatementExpression Assignment MemberReference enumVisible Cast ReferenceType EnumLiteralsCompartmentContainer MemberReference f = IfStatement MemberReference enumVisible BlockStatement StatementExpression MemberReference ++ visible End End End IfStatement BinaryOperation > MemberReference present Literal 1 BlockStatement IfStatement BinaryOperation > MemberReference visible Literal 0 BlockStatement StatementExpression MethodInvocation actions MemberReference HIDE_ALL_COMPARTMENTS add End IfStatement BinaryOperation > BinaryOperation - MemberReference present MemberReference visible Literal 0 BlockStatement StatementExpression MethodInvocation actions MemberReference SHOW_ALL_COMPARTMENTS add End End IfStatement MemberReference attrPresent BlockStatement IfStatement MemberReference attrVisible BlockStatement StatementExpression MethodInvocation actions MemberReference HIDE_ATTR_COMPARTMENT add BlockStatement StatementExpression MethodInvocation actions MemberReference SHOW_ATTR_COMPARTMENT add End End IfStatement MemberReference enumPresent BlockStatement IfStatement MemberReference enumVisible BlockStatement StatementExpression MethodInvocation actions MemberReference HIDE_ENUMLITERAL_COMPARTMENT add BlockStatement StatementExpression MethodInvocation actions MemberReference SHOW_ENUMLITERAL_COMPARTMENT add End End IfStatement MemberReference operPresent BlockStatement IfStatement MemberReference operVisible BlockStatement StatementExpression MethodInvocation actions MemberReference HIDE_OPER_COMPARTMENT add BlockStatement StatementExpression MethodInvocation actions MemberReference SHOW_OPER_COMPARTMENT add End End IfStatement MemberReference epPresent BlockStatement IfStatement MemberReference epVisible BlockStatement StatementExpression MethodInvocation actions MemberReference HIDE_EXTPOINT_COMPARTMENT add BlockStatement StatementExpression MethodInvocation actions MemberReference SHOW_EXTPOINT_COMPARTMENT add End End ReturnStatement MemberReference actions MethodDeclaration /**
     * Action method invoked when an event triggers this action.<p>
     *
     * The {@link #cType} instance variable defines the action to
     * take, and the {@link #display} instance variable whether it should
     * set visibility or not.<p>
     *
     * @param ae  The event that triggered us.
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation selections MethodInvocation iterator curEditor WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel Cast ReferenceType Selection MethodInvocation i next LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation sel getContent IfStatement BinaryOperation != BinaryOperation & MemberReference cType MemberReference COMPARTMENT_ATTRIBUTE Literal 0 BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType AttributesCompartmentContainer StatementExpression Cast ReferenceType AttributesCompartmentContainer MemberReference f End End IfStatement BinaryOperation != BinaryOperation & MemberReference cType MemberReference COMPARTMENT_OPERATION Literal 0 BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType OperationsCompartmentContainer StatementExpression Cast ReferenceType OperationsCompartmentContainer MemberReference f End End IfStatement BinaryOperation != BinaryOperation & MemberReference cType MemberReference COMPARTMENT_EXTENSIONPOINT Literal 0 BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigUseCase BlockStatement StatementExpression Cast ReferenceType FigUseCase MemberReference f End End IfStatement BinaryOperation != BinaryOperation & MemberReference cType MemberReference COMPARTMENT_ENUMLITERAL Literal 0 BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType EnumLiteralsCompartmentContainer BlockStatement StatementExpression Cast ReferenceType EnumLiteralsCompartmentContainer MemberReference f End End End ReferenceType UndoableAction",1
1537,1537,,0
30,30,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect whether an operation has a name.
 */ CrMissingOperName ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMissingOperName StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""name"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference oper getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal """" equals ReturnStatement MemberReference PROBLEM_FOUND End IfStatement BinaryOperation == MethodInvocation myName length Literal 0 ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public Annotation Override initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w getToDoItem LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion IfStatement MethodInvocation Model MethodInvocation MemberReference me isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator a MemberReference me LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference a getOwner getFacade Literal null StatementExpression Assignment MemberReference count MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference a getOwner getFacade getFeatures MethodInvocation size getFacade = End StatementExpression Assignment MemberReference sug BinaryOperation + Literal ""oper"" BinaryOperation + MemberReference count Literal 1 = End StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w End MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizMEName ReferenceType CrUML",0
925,925,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * @since Nov 6, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionSetFeatureOwner FieldDeclaration Modifier private final static ReferenceType ActionSetFeatureOwner VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetFeatureOwner ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetStructuralFeatureType.
     */ ActionSetFeatureOwner StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator oldClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator newClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator feature Literal null IfStatement BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator box Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation box getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference o isAFeature getFacade BlockStatement StatementExpression Assignment MemberReference feature MemberReference o = StatementExpression Assignment MemberReference oldClassifier MethodInvocation Model MethodInvocation MemberReference feature getOwner getFacade = End StatementExpression Assignment MemberReference o MethodInvocation box getSelectedItem = IfStatement MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference newClassifier MemberReference o = End End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference newClassifier MemberReference oldClassifier BinaryOperation != MemberReference feature Literal null BinaryOperation != MemberReference newClassifier Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference feature MemberReference newClassifier setOwner getCoreHelper End MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType ActionSetFeatureOwner getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",1
1393,1393,,0
442,442,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.Dimension Import java.awt.Font Import java.awt.Frame Import java.awt.GraphicsEnvironment Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.Insets Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import javax.swing.DefaultListModel Import javax.swing.JButton Import javax.swing.JComponent Import javax.swing.JDialog Import javax.swing.JLabel Import javax.swing.JList Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.event.ListSelectionEvent Import javax.swing.event.ListSelectionListener Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * A font chooser dialog for selecting font family, size and style.
 *
 * @author Aleksandar
 */ ArgoJFontChooser FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator jContentPane Literal null FieldDeclaration Modifier private ReferenceType JList VariableDeclarator jlstFamilies Literal null FieldDeclaration Modifier private ReferenceType JList VariableDeclarator jlstSizes Literal null FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator jlblFamilies Literal null FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator jlblSize Literal null FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator jlblPreview Literal null FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator jbtnOk Literal null FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator jbtnCancel Literal null FieldDeclaration Modifier private BasicType int VariableDeclarator resultSize FieldDeclaration Modifier private ReferenceType String VariableDeclarator resultName FieldDeclaration Modifier private BasicType boolean VariableDeclarator isOk Literal false ConstructorDeclaration Modifier public /**
     * @param owner the <code>Frame</code> from which the dialog is displayed
     * @param parent determines the position of the chooser
     * @param name the initial font name value
     * @param size the initial font size value
     */ ArgoJFontChooser FormalParameter ReferenceType Frame owner FormalParameter ReferenceType JComponent parent FormalParameter ReferenceType String name FormalParameter BasicType int size StatementExpression SuperConstructorInvocation MemberReference owner Literal true StatementExpression MethodInvocation MemberReference parent setLocationRelativeTo StatementExpression Assignment This MemberReference resultName MemberReference name = StatementExpression Assignment This MemberReference resultSize MemberReference size = StatementExpression MethodInvocation initialize MethodDeclaration /**
     * This method initializes this
     */ Modifier private initialize StatementExpression This MethodInvocation Literal 299 Literal 400 setSize StatementExpression This MethodInvocation MethodInvocation Translator Literal ""dialog.fontchooser"" localize setTitle StatementExpression This MethodInvocation MethodInvocation getJContentPane setContentPane StatementExpression MethodInvocation updatePreview MethodDeclaration /**
     * This method initializes jContentPane
     *
     * @return javax.swing.JPanel
     */ Modifier private ReferenceType JPanel getJContentPane IfStatement BinaryOperation == MemberReference jContentPane Literal null BlockStatement LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints8 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints8 gridx Literal 4 = StatementExpression Assignment MemberReference gridBagConstraints8 anchor MemberReference GridBagConstraints NORTHEAST = StatementExpression Assignment MemberReference gridBagConstraints8 insets ClassCreator ReferenceType Insets Literal 0 Literal 0 Literal 5 Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints8 weightx Literal 0.0 = StatementExpression Assignment MemberReference gridBagConstraints8 ipadx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints8 gridy Literal 5 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints7 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints7 gridx Literal 3 = StatementExpression Assignment MemberReference gridBagConstraints7 fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference gridBagConstraints7 weightx Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints7 anchor MemberReference GridBagConstraints NORTHEAST = StatementExpression Assignment MemberReference gridBagConstraints7 insets ClassCreator ReferenceType Insets Literal 0 Literal 0 Literal 5 Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints7 weighty Literal 0.0 = StatementExpression Assignment MemberReference gridBagConstraints7 gridwidth Literal 1 = StatementExpression Assignment MemberReference gridBagConstraints7 ipadx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints7 gridy Literal 5 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints6 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints6 gridx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints6 gridwidth Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints6 fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference gridBagConstraints6 weightx Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints6 insets ClassCreator ReferenceType Insets Literal 5 Literal 5 Literal 5 Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints6 anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints6 gridy Literal 4 = StatementExpression Assignment MemberReference jlblPreview ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation jlblPreview MethodInvocation Translator Literal ""label.diagramappearance.preview"" localize setText StatementExpression MethodInvocation jlblPreview ClassCreator ReferenceType Dimension Literal 52 Literal 50 setPreferredSize LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints5 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints5 gridx Literal 4 = StatementExpression Assignment MemberReference gridBagConstraints5 anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints5 insets ClassCreator ReferenceType Insets Literal 5 Literal 5 Literal 0 Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints5 gridy Literal 0 = StatementExpression Assignment MemberReference jlblSize ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation jlblSize MethodInvocation Translator Literal ""label.diagramappearance.fontsize"" localize setText LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints4 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints4 gridx Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints4 anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints4 insets ClassCreator ReferenceType Insets Literal 5 Literal 5 Literal 0 Literal 0 = StatementExpression Assignment MemberReference gridBagConstraints4 gridy Literal 0 = StatementExpression Assignment MemberReference jlblFamilies ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation jlblFamilies MethodInvocation Translator Literal ""label.diagramappearance.fontlist"" localize setText LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints1 ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints1 fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference gridBagConstraints1 gridy Literal 2 = StatementExpression Assignment MemberReference gridBagConstraints1 weightx Literal 0.0 = StatementExpression Assignment MemberReference gridBagConstraints1 weighty Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints1 insets ClassCreator ReferenceType Insets Literal 5 Literal 0 Literal 0 Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints1 anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints1 gridwidth Literal 2 = StatementExpression Assignment MemberReference gridBagConstraints1 gridx Literal 4 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator gridBagConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference gridBagConstraints fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference gridBagConstraints gridy Literal 2 = StatementExpression Assignment MemberReference gridBagConstraints weightx Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints weighty Literal 1.0 = StatementExpression Assignment MemberReference gridBagConstraints insets ClassCreator ReferenceType Insets Literal 5 Literal 5 Literal 0 Literal 5 = StatementExpression Assignment MemberReference gridBagConstraints gridwidth Literal 4 = StatementExpression Assignment MemberReference gridBagConstraints gridheight Literal 1 = StatementExpression Assignment MemberReference gridBagConstraints anchor MemberReference GridBagConstraints NORTHWEST = StatementExpression Assignment MemberReference gridBagConstraints gridx Literal 0 = StatementExpression Assignment MemberReference jContentPane ClassCreator ReferenceType JPanel = StatementExpression MethodInvocation jContentPane ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator jscpFamilies ClassCreator ReferenceType JScrollPane StatementExpression MethodInvocation jscpFamilies MethodInvocation getJlstFamilies setViewportView LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator jscpSizes ClassCreator ReferenceType JScrollPane StatementExpression MethodInvocation jscpSizes MethodInvocation getJlstSizes setViewportView StatementExpression MethodInvocation jContentPane MemberReference jscpFamilies MemberReference gridBagConstraints add StatementExpression MethodInvocation jContentPane MemberReference jscpSizes MemberReference gridBagConstraints1 add StatementExpression MethodInvocation jContentPane MemberReference jlblFamilies MemberReference gridBagConstraints4 add StatementExpression MethodInvocation jContentPane MemberReference jlblSize MemberReference gridBagConstraints5 add StatementExpression MethodInvocation jContentPane MemberReference jlblPreview MemberReference gridBagConstraints6 add StatementExpression MethodInvocation jContentPane MethodInvocation getJbtnOk MemberReference gridBagConstraints7 add StatementExpression MethodInvocation jContentPane MethodInvocation getJbtnCancel MemberReference gridBagConstraints8 add End ReturnStatement MemberReference jContentPane MethodDeclaration /**
     * This method initializes jlstFamilies
     *
     * @return javax.swing.JList
     */ Modifier private ReferenceType JList getJlstFamilies IfStatement BinaryOperation == MemberReference jlstFamilies Literal null BlockStatement StatementExpression Assignment MemberReference jlstFamilies ClassCreator ReferenceType JList = StatementExpression MethodInvocation jlstFamilies ClassCreator ReferenceType DefaultListModel setModel LocalVariableDeclaration ReferenceType String VariableDeclarator fontNames MethodInvocation GraphicsEnvironment MethodInvocation getAvailableFontFamilyNames getLocalGraphicsEnvironment ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator fontName MemberReference fontNames BlockStatement StatementExpression Cast ReferenceType DefaultListModel MethodInvocation jlstFamilies getModel End StatementExpression MethodInvocation jlstFamilies MemberReference resultName Literal true setSelectedValue StatementExpression MethodInvocation jlstFamilies MethodInvocation ClassCreator ReferenceType ListSelectionListener MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e IfStatement BinaryOperation != MethodInvocation jlstFamilies getSelectedValue Literal null BlockStatement StatementExpression Assignment MemberReference resultName Cast ReferenceType String MethodInvocation jlstFamilies getSelectedValue = StatementExpression MethodInvocation updatePreview End addListSelectionListener getSelectionModel End ReturnStatement MemberReference jlstFamilies MethodDeclaration /**
     * This method initializes jlstSizes
     *
     * @return javax.swing.JList
     */ Modifier private ReferenceType JList getJlstSizes IfStatement BinaryOperation == MemberReference jlstSizes Literal null BlockStatement StatementExpression Assignment MemberReference jlstSizes ClassCreator ReferenceType JList ArrayCreator ReferenceType Integer ArrayInitializer MethodInvocation Integer Literal 8 valueOf MethodInvocation Integer Literal 9 valueOf MethodInvocation Integer Literal 10 valueOf MethodInvocation Integer Literal 11 valueOf MethodInvocation Integer Literal 12 valueOf MethodInvocation Integer Literal 14 valueOf MethodInvocation Integer Literal 16 valueOf MethodInvocation Integer Literal 18 valueOf MethodInvocation Integer Literal 20 valueOf MethodInvocation Integer Literal 22 valueOf MethodInvocation Integer Literal 24 valueOf MethodInvocation Integer Literal 26 valueOf MethodInvocation Integer Literal 28 valueOf MethodInvocation Integer Literal 36 valueOf MethodInvocation Integer Literal 48 valueOf MethodInvocation Integer Literal 72 valueOf = StatementExpression MethodInvocation jlstSizes MemberReference resultSize Literal true setSelectedValue StatementExpression MethodInvocation jlstSizes MethodInvocation ClassCreator ReferenceType ListSelectionListener MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e IfStatement BinaryOperation != MethodInvocation jlstSizes getSelectedValue Literal null BlockStatement StatementExpression Assignment MemberReference resultSize Cast ReferenceType Integer MethodInvocation jlstSizes getSelectedValue = StatementExpression MethodInvocation updatePreview End addListSelectionListener getSelectionModel End ReturnStatement MemberReference jlstSizes MethodDeclaration /**
     * Updates preview label.
     */ Modifier private updatePreview LocalVariableDeclaration BasicType int VariableDeclarator style Literal 0 LocalVariableDeclaration ReferenceType Font VariableDeclarator previewFont ClassCreator ReferenceType Font MemberReference resultName MemberReference style MemberReference resultSize StatementExpression MethodInvocation jlblPreview MemberReference previewFont setFont MethodDeclaration /**
     * This method initializes jbtnOk
     *
     * @return javax.swing.JButton
     */ Modifier private ReferenceType JButton getJbtnOk IfStatement BinaryOperation == MemberReference jbtnOk Literal null BlockStatement StatementExpression Assignment MemberReference jbtnOk ClassCreator ReferenceType JButton = StatementExpression MethodInvocation jbtnOk MethodInvocation Translator Literal ""button.ok"" localize setText StatementExpression MethodInvocation jbtnOk ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression Assignment MemberReference isOk Literal true = StatementExpression MethodInvocation dispose StatementExpression MethodInvocation Literal false setVisible addActionListener End ReturnStatement MemberReference jbtnOk MethodDeclaration /**
     * This method initializes jbtnCancel
     *
     * @return javax.swing.JButton
     */ Modifier private ReferenceType JButton getJbtnCancel IfStatement BinaryOperation == MemberReference jbtnCancel Literal null BlockStatement StatementExpression Assignment MemberReference jbtnCancel ClassCreator ReferenceType JButton = StatementExpression MethodInvocation jbtnCancel MethodInvocation Translator Literal ""button.cancel"" localize setText StatementExpression MethodInvocation jbtnCancel ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression Assignment MemberReference isOk Literal false = StatementExpression MethodInvocation dispose StatementExpression MethodInvocation Literal false setVisible addActionListener End ReturnStatement MemberReference jbtnCancel MethodDeclaration /**
     * Returns true if dilaog result is OK.
     *
     * @return dialog result
     */ Modifier public BasicType boolean isOk ReturnStatement MemberReference isOk MethodDeclaration /**
     * Result.
     *
     * @return result
     */ Modifier public ReferenceType String getResultName ReturnStatement MemberReference resultName MethodDeclaration /**
     * Result.
     *
     * @return result
     */ Modifier public BasicType int getResultSize ReturnStatement MemberReference resultSize ReferenceType JDialog",0
1305,1305,,0
358,358,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import org.argouml.model.AbstractStateMachinesHelperDecorator Import org.argouml.model.StateMachinesHelper ClassDeclaration /**
 * This Decorator is responsible for generating commands for any
 * mutable methods.
 *
 * @author Linus Tolke
 */ UndoStateMachinesHelperDecorator ConstructorDeclaration /**
     * Constructor.
     *
     * @param component The component we are decorating.
     */ UndoStateMachinesHelperDecorator FormalParameter ReferenceType StateMachinesHelper component StatementExpression SuperConstructorInvocation MemberReference component ReferenceType AbstractStateMachinesHelperDecorator",0
646,646,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 4, 2003
 */ ActionSetAssociationEndNavigable FieldDeclaration Modifier private final static ReferenceType ActionSetAssociationEndNavigable VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetAssociationEndNavigable ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetElementOwnershipSpecification.
     */ ActionSetAssociationEndNavigable StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAAssociationEnd getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference m MethodInvocation source isSelected setNavigable getCoreHelper End End MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionSetAssociationEndNavigable getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",0
1601,1601,,0
50,50,"CompilationUnit PackageDeclaration org.argouml.kernel ClassDeclaration Modifier public abstract /**
 * The base class for any commands that can be undone by ActionUndo.
 * @author Bob Tarling
 */ NonUndoableCommand MethodDeclaration Modifier public abstract ReferenceType Object execute MethodDeclaration Modifier public undo MethodDeclaration Modifier public BasicType boolean isUndoable ReturnStatement Literal false MethodDeclaration Modifier public BasicType boolean isRedoable ReturnStatement Literal false ReferenceType Command",0
729,729,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import java.awt.event.ActionEvent Import javax.swing.Action Import javax.swing.Icon Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * Create a new Signal.
 */ ActionNewSignal ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNewSignal StatementExpression SuperConstructorInvocation Literal ""button.new-signal"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-signal"" localize putValue LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation ResourceLoaderWrapper Literal ""SignalSending"" lookupIcon StatementExpression MethodInvocation MemberReference Action SMALL_ICON MemberReference icon putValue MethodDeclaration /**
     * Creates a new signal and in case of a SignalEvent as target also set the
     * Signal for this event.<p>
     * {@inheritDoc}
     */ Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isASignalEvent getFacade MethodInvocation Model MethodInvocation MemberReference target isASendAction getFacade MethodInvocation Model MethodInvocation MemberReference target isAReception getFacade MethodInvocation Model MethodInvocation MemberReference target isABehavioralFeature getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator newSig MethodInvocation Model MethodInvocation MemberReference target buildSignal getCommonBehaviorFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newSig setTarget getInstance BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference target = BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = End LocalVariableDeclaration ReferenceType Object VariableDeclarator newElement MethodInvocation Model MethodInvocation createSignal getCommonBehaviorFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newElement setTarget getInstance StatementExpression MethodInvocation Model MethodInvocation MemberReference newElement MemberReference ns setNamespace getCoreHelper End StatementExpression SuperMethodInvocation MemberReference e actionPerformed ReferenceType AbstractActionNewModelElement",0
407,407,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.text.Collator Import java.util.Comparator Import javax.swing.tree.DefaultMutableTreeNode Import org.argouml.i18n.Translator Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.argouml.profile.Profile Import org.argouml.kernel.ProfileConfiguration Import org.tigris.gef.base.Diagram ClassDeclaration Modifier public /**
 * Sorts explorer nodes by their user object name.
 *
 * @author  alexb
 * @since 0.15.2, Created on 28 September 2003, 10:02
 */ NameOrder FieldDeclaration Modifier private ReferenceType Collator VariableDeclarator collator MethodInvocation Collator getInstance ConstructorDeclaration Modifier public /**
     * Creates a new instance of NameOrder.
     */ NameOrder StatementExpression MethodInvocation collator MemberReference Collator PRIMARY setStrength MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object obj1 FormalParameter ReferenceType Object obj2 IfStatement BinaryOperation instanceof MemberReference obj1 ReferenceType DefaultMutableTreeNode BlockStatement LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Cast ReferenceType DefaultMutableTreeNode MemberReference obj1 StatementExpression Assignment MemberReference obj1 MethodInvocation node getUserObject = End IfStatement BinaryOperation instanceof MemberReference obj2 ReferenceType DefaultMutableTreeNode BlockStatement LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Cast ReferenceType DefaultMutableTreeNode MemberReference obj2 StatementExpression Assignment MemberReference obj2 MethodInvocation node getUserObject = End ReturnStatement MethodInvocation MemberReference obj1 MemberReference obj2 compareUserObjects MethodDeclaration /**
     * Alphabetic ordering of user object names instead of type names.
     *
     * @param obj Diagram or Base
     * @param obj1 Diagram or Base
     * @return 0 if invalid params. 0 if the objects are equally named.
     *         A positive or negative int if the names differ.
     */ Modifier protected BasicType int compareUserObjects FormalParameter ReferenceType Object obj FormalParameter ReferenceType Object obj1 ReturnStatement MethodInvocation collator MethodInvocation MemberReference obj getName MethodInvocation MemberReference obj1 getName compare MethodDeclaration /**
     * Get the name of the diagram or model element.
     *
     * @param obj the item to fetch name from
     * @return the name
     */ Modifier private ReferenceType String getName FormalParameter ReferenceType Object obj LocalVariableDeclaration ReferenceType String VariableDeclarator name IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Diagram BlockStatement StatementExpression Assignment MemberReference name Cast ReferenceType Diagram MemberReference obj = IfStatement BinaryOperation instanceof MemberReference obj ReferenceType ProfileConfiguration BlockStatement StatementExpression Assignment MemberReference name Literal ""Profile Configuration"" = IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Profile BlockStatement StatementExpression Assignment MemberReference name Cast ReferenceType Profile MemberReference obj = IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade BlockStatement TryStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference obj getName getFacade = CatchClause CatchClauseParameter InvalidElementException e StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""misc.name.deleted"" localize = BlockStatement StatementExpression Assignment MemberReference name Literal ""??"" = End End End End IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal """" End ReturnStatement MemberReference name MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation Translator Literal ""combobox.order-by-name"" localize ReferenceType Comparator",1
966,966,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive Import org.argouml.cognitive.Decision ClassDeclaration Modifier public /**
 * UMLDecision is a utility class which provides a namespace for standard
 * decisions in the problem domain of UML Modelling.
 *
 * @stereotype utility
 */ UMLDecision FieldDeclaration /**
     * Decision type: INHERITANCE.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator INHERITANCE ClassCreator ReferenceType UMLDecision Literal ""misc.decision.inheritance"" Literal 1 FieldDeclaration /**
     * Decision type: CONTAINMENT.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator CONTAINMENT ClassCreator ReferenceType UMLDecision Literal ""misc.decision.containment"" Literal 1 FieldDeclaration /**
     * Decision type: PATTERNS.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator PATTERNS ClassCreator ReferenceType UMLDecision Literal ""misc.decision.design-patterns"" Literal 1 FieldDeclaration /**
     * Decision type: RELATIONSHIPS.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator RELATIONSHIPS ClassCreator ReferenceType UMLDecision Literal ""misc.decision.relationships"" Literal 1 FieldDeclaration /**
     * Decision type: STORAGE.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator STORAGE ClassCreator ReferenceType UMLDecision Literal ""misc.decision.storage"" Literal 1 FieldDeclaration /**
     * Decision type: BEHAVIOR.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator BEHAVIOR ClassCreator ReferenceType UMLDecision Literal ""misc.decision.behavior"" Literal 1 FieldDeclaration /**
     * Decision type: INSTANCIATION.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator INSTANCIATION ClassCreator ReferenceType UMLDecision Literal ""misc.decision.instantiation"" Literal 1 FieldDeclaration /**
     * Decision type: NAMING.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator NAMING ClassCreator ReferenceType UMLDecision Literal ""misc.decision.naming"" Literal 1 FieldDeclaration /**
     * Decision type: MODULARITY.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator MODULARITY ClassCreator ReferenceType UMLDecision Literal ""misc.decision.modularity"" Literal 1 FieldDeclaration /**
     * Decision type: CLASS_SELECTION.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator CLASS_SELECTION ClassCreator ReferenceType UMLDecision Literal ""misc.decision.class-selection"" Literal 1 FieldDeclaration /**
     * Decision type: EXPECTED_USAGE.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator EXPECTED_USAGE ClassCreator ReferenceType UMLDecision Literal ""misc.decision.expected-usage"" Literal 1 FieldDeclaration /**
     * Decision type: METHODS.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator METHODS ClassCreator ReferenceType UMLDecision Literal ""misc.decision.methods"" Literal 1 FieldDeclaration /**
     * Decision type: CODE_GEN.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator CODE_GEN ClassCreator ReferenceType UMLDecision Literal ""misc.decision.code-generation"" Literal 1 FieldDeclaration /**
     * Decision type: PLANNED_EXTENSIONS.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator PLANNED_EXTENSIONS ClassCreator ReferenceType UMLDecision Literal ""misc.decision.planned-extensions"" Literal 1 FieldDeclaration /**
     * Decision type: STEREOTYPES.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator STEREOTYPES ClassCreator ReferenceType UMLDecision Literal ""misc.decision.stereotypes"" Literal 1 FieldDeclaration /**
     * Decision type: STATE_MACHINES.
     */ Modifier public final static ReferenceType UMLDecision VariableDeclarator STATE_MACHINES ClassCreator ReferenceType UMLDecision Literal ""misc.decision.mstate-machines"" Literal 1 ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param name the localized decision name key
     * @param prio the priority
     */ UMLDecision FormalParameter ReferenceType String name FormalParameter BasicType int prio StatementExpression SuperConstructorInvocation MemberReference name MemberReference prio ReferenceType Decision",0
60,60,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Oct 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLMessageReceiverListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLMessageReceiverListModel.
     */ UMLMessageReceiverListModel StatementExpression SuperConstructorInvocation Literal ""receiver"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getReceiver getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getReceiver getFacade MemberReference element ReferenceType UMLModelElementListModel2",0
143,143,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import javax.swing.Icon Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.model.Model Import org.argouml.uml.diagram.ui.SelectionNodeClarifiers2 Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * @author 5eichler@informatik.uni-hamburg.de
 */ SelectionNode FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator associationIcon MethodInvocation ResourceLoaderWrapper Literal ""Association"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator icons ArrayInitializer MemberReference associationIcon MemberReference associationIcon MemberReference associationIcon MemberReference associationIcon Literal null FieldDeclaration Modifier private static ReferenceType String VariableDeclarator instructions ArrayInitializer Literal ""Add a node"" Literal ""Add a node"" Literal ""Add a node"" Literal ""Add a node"" Literal null Literal ""Move object(s)"" ConstructorDeclaration Modifier public /**
     * Construct a new SelectionNode for the given Fig.
     *
     * @param f The given Fig.
     */ SelectionNode FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons ReturnStatement MemberReference icons MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewEdgeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getAssociation getMetaTypes MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation createNode getCoreFactory MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getNode getMetaTypes MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference BOTTOM BinaryOperation == MemberReference index MemberReference LEFT BlockStatement ReturnStatement Literal true End ReturnStatement Literal false ReferenceType SelectionNodeClarifiers2",1
1441,1441,,0
1600,1600,,0
1187,1187,,0
97,97,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.profile.Profile Import org.argouml.profile.ProfileException ClassDeclaration Modifier public /**
 * Rule for Project->Profile.
 *
 */ GoProfileToModel MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.profile.model"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Profile BlockStatement TryStatement ReturnStatement Cast ReferenceType Profile MemberReference parent CatchClause CatchClauseParameter ProfileException e ReturnStatement MemberReference Collections EMPTY_SET End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
413,413,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import java.awt.event.ActionEvent Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * @since Oct 6, 2002
 * @author jaap.branderhorst@xs4all.nl
 * @stereotype singleton
 */ ActionNewExtendExtensionPoint FieldDeclaration /**
     * The singleton.
     */ Modifier public final static ReferenceType ActionNewExtendExtensionPoint VariableDeclarator SINGLETON ClassCreator ReferenceType ActionNewExtendExtensionPoint ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewExtendExtensionPoint.
     */ ActionNewExtendExtensionPoint StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAExtend getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator point MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBase getFacade buildExtensionPoint getUseCasesFactory StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference point addExtensionPoint getUseCasesHelper End ReferenceType AbstractActionNewModelElement",0
769,769,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import org.tigris.gef.graph.GraphModel ClassDeclaration Modifier public /** Class to display graphics for a UML ShallowHistoryState in a diagram.
 *
 * @author jrobbins
 */ FigShallowHistoryState ConstructorDeclaration Modifier public /**
     * Main constructor
     */ FigShallowHistoryState StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public ReferenceType String getH ReturnStatement Literal ""H"" ConstructorDeclaration Modifier public /**
     * The constructor which links the Fig into the existing UML element
     * @param gm ignored
     * @param node the UML element
     */ FigShallowHistoryState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression SuperConstructorInvocation MemberReference gm MemberReference node ReferenceType FigHistoryState",0
716,716,"CompilationUnit PackageDeclaration org.argouml.util Import java.util.Iterator Import java.util.NoSuchElementException ClassDeclaration Modifier public /**
 * A simple iterator wrapper for a single object. Designed for for use where the
 * API requires an iterator, but we've only got a single object and don't want
 * the overhead of creating a collection just so that we can iterate over its
 * single element.
 * 
 * @param <T> type of object to be iterated over
 * @author Tom Morris <tfmorris@gmail.com>
 */ SingleElementIterator FieldDeclaration Modifier private BasicType boolean VariableDeclarator done Literal false FieldDeclaration Modifier private ReferenceType T VariableDeclarator target ConstructorDeclaration Modifier public SingleElementIterator FormalParameter ReferenceType T o StatementExpression Assignment MemberReference target MemberReference o = MethodDeclaration Modifier public BasicType boolean hasNext IfStatement MemberReference ! done BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType T next IfStatement MemberReference ! done BlockStatement StatementExpression Assignment MemberReference done Literal true = ReturnStatement MemberReference target End ThrowStatement ClassCreator ReferenceType NoSuchElementException MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException TypeParameter T ReferenceType Iterator",0
1394,1394,,0
895,895,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.EventObject ClassDeclaration Modifier public /**
 * A change event due to deletion of a model element from the model.
 *
 * @author Bob Tarling
 */ DeleteInstanceEvent ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param source  The bean that fired the event.
     * @param propertyName  The programmatic name of the property
     *		that was changed.
     * @param oldValue  The old value of the property.
     * @param newValue  The new value of the property.
     * @param originalEvent The event that was fired internally
     *     in the Model subsystem that caused this.
     */ DeleteInstanceEvent FormalParameter ReferenceType Object source FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object oldValue FormalParameter ReferenceType Object newValue FormalParameter ReferenceType EventObject originalEvent StatementExpression SuperConstructorInvocation MemberReference source MemberReference propertyName MemberReference oldValue MemberReference newValue MemberReference originalEvent FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 650590690953566827L ReferenceType UmlChangeEvent",1
1095,1095,,1
351,351,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import java.util.ArrayList Import java.util.Collections Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementOrderedListModel2 ClassDeclaration Modifier public /**
 * Model for the ExtensionPoints of a UseCase. <p>
 *
 * TODO: This should NOT be an ordered list, according the UML standard!
 * Shall we stop supporting the move up/down features?
 *
 * @since Oct 7, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLUseCaseExtensionPointListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLUseCaseExtensionPointListModel.
     */ UMLUseCaseExtensionPointListModel StatementExpression SuperConstructorInvocation Literal ""extensionPoint"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getExtensionPoints getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getExtensionPoints MethodInvocation MemberReference o contains getFacade MethodDeclaration Modifier protected moveDown FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator usecase MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference usecase getExtensionPoints getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement StatementExpression MethodInvocation Collections MemberReference c MemberReference index BinaryOperation + MemberReference index Literal 1 swap StatementExpression MethodInvocation Model MethodInvocation MemberReference usecase MemberReference c setExtensionPoints getUseCasesHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToBottom(int)
     */ Modifier protected Annotation Override moveToBottom FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator usecase MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference usecase getExtensionPoints getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index get StatementExpression MethodInvocation c MemberReference mem1 remove StatementExpression MethodInvocation c MethodInvocation c size MemberReference mem1 add StatementExpression MethodInvocation Model MethodInvocation MemberReference usecase MemberReference c setExtensionPoints getUseCasesHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToTop(int)
     */ Modifier protected Annotation Override moveToTop FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator usecase MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference usecase getExtensionPoints getFacade IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index get StatementExpression MethodInvocation c MemberReference mem1 remove StatementExpression MethodInvocation c Literal 0 MemberReference mem1 add StatementExpression MethodInvocation Model MethodInvocation MemberReference usecase MemberReference c setExtensionPoints getUseCasesHelper End ReferenceType UMLModelElementOrderedListModel2",0
379,379,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Go rule to navigate from a state to it's do-activity. Used in the package
 * perspective.
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Dec 25, 2002
 */ GoStateToDoActivity MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getDoActivity getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation children MethodInvocation Model MethodInvocation MemberReference parent getDoActivity getFacade add ReturnStatement MemberReference children End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state.do-activity"" localize ReferenceType AbstractPerspectiveRule",1
115,115,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import javax.swing.JLabel Import javax.swing.JTextArea Import javax.swing.border.EtchedBorder Import org.argouml.cognitive.critics.Wizard Import org.argouml.swingext.SpacerPanel ClassDeclaration Modifier public /**
 * A non-modal wizard step that shows instructions and prompts
 * the user to enter a string.
 *
 * @see org.argouml.cognitive.Critic
 * @see org.argouml.cognitive.critics.Wizard
 */ WizStepCue FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator instructions ClassCreator ReferenceType JTextArea ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param w the wizard (ignored)
     * @param cue the instructions (cue)
     */ WizStepCue FormalParameter ReferenceType Wizard w FormalParameter ReferenceType String cue StatementExpression MethodInvocation instructions MemberReference cue setText StatementExpression MethodInvocation instructions Literal true setWrapStyleWord StatementExpression MethodInvocation instructions Literal false setEditable StatementExpression MethodInvocation instructions Literal null setBorder StatementExpression MethodInvocation instructions MethodInvocation MethodInvocation getBackground getMainPanel setBackground StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType EtchedBorder setBorder getMainPanel LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation MethodInvocation MemberReference gb setLayout getMainPanel LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression Assignment MemberReference c ipady Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c anchor MemberReference GridBagConstraints EAST = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator image ClassCreator ReferenceType JLabel Literal """" StatementExpression MethodInvocation image MethodInvocation getWizardIcon setIcon StatementExpression MethodInvocation image Literal null setBorder StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridheight MemberReference GridBagConstraints REMAINDER = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c anchor MemberReference GridBagConstraints NORTH = StatementExpression MethodInvocation gb MemberReference image MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference image add getMainPanel StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridheight MemberReference GridBagConstraints REMAINDER = StatementExpression Assignment MemberReference c gridwidth Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression MethodInvocation gb MemberReference instructions MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference instructions add getMainPanel StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = LocalVariableDeclaration ReferenceType SpacerPanel VariableDeclarator spacer2 ClassCreator ReferenceType SpacerPanel StatementExpression MethodInvocation gb MemberReference spacer2 MemberReference c setConstraints StatementExpression MethodInvocation MethodInvocation MemberReference spacer2 add getMainPanel FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5886729588114736302L ReferenceType WizStep",1
1077,1077,,0
91,91,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection InterfaceDeclaration Modifier public /**
 * The interface for the helper for ActivityGraphs.<p>
 *
 * Created from the old ActivityGraphsHelper.
 */ ActivityGraphsHelper MethodDeclaration /**
     * Finds the Classifier to which a given ObjectFlowState
     * refers by its given name. This function may be used for when the user
     * types the name of a classifier in the diagram, in an ObjectFlowState.
     *
     * @author MVW
     * @param ofs the given ObjectFlowState
     * @param s   the given String that represents
     *            the name of the ""type"" Classifier
     * @return    the found classifier or null
     */ ReferenceType Object findClassifierByName FormalParameter ReferenceType Object ofs FormalParameter ReferenceType String s MethodDeclaration /**
     * Find a state of a Classifier by its name.
     * This routine is used to make the connection between
     * a ClassifierInState and its State.
     *
     * @author mvw
     * @param c the Classifier. If this is not a Classifier, then
     *          IllegalArgumentException is thrown.
     * @param s the string that represents the name of
     *          the state we are looking for. If """" or null, then
     *          null is returned straight away.
     * @return  the State (as Object) or null, if not found.
     */ ReferenceType Object findStateByName FormalParameter ReferenceType Object c FormalParameter ReferenceType String s MethodDeclaration /**
     * Returns true if an activitygraph may be added to the given
     * context. To decouple ArgoUML as much as possible from the
     * model implementation, the parameter of the method is of
     * type Object.<p>
     *
     * An ActivityGraph specifies the dynamics of<ol>
     * <li> a Package, or
     * <li> a Classifier (including UseCase), or
     * <li> a BehavioralFeature.
     * </ol>
     *
     * @param context the given context
     * @return boolean true if an activitygraph may be added
     */ BasicType boolean isAddingActivityGraphAllowed FormalParameter ReferenceType Object context MethodDeclaration /**
     * @author mvw
     * @param classifierInState the classifierInState
     * @param state the state that will be linked
     */ addInState FormalParameter ReferenceType Object classifierInState FormalParameter ReferenceType Object state MethodDeclaration /**
     * Replace the complete collection of states by the given new one. 
     * This function only modifies the model for added or removed states.
     * 
     * @param classifierInState the ClassifierInState to be altered
     * @param newStates the collection of states
     */ setInStates FormalParameter ReferenceType Object classifierInState FormalParameter ReferenceType Collection newStates MethodDeclaration /**
     * Replace the complete collection of the partition contents 
     * by the given new one. 
     * This function only modifies the model for added or removed modelelements.
     * 
     * @param partition the partition to be altered
     * @param newContents the new contents of the partition (modelelements)
     */ setContents FormalParameter ReferenceType Object partition FormalParameter ReferenceType Collection newContents MethodDeclaration /**
     * Add a model element to a partition
     * @param partition the partition to contain the model element
     * @param modeElement the model element to place in the partition
     */ addContent FormalParameter ReferenceType Object partition FormalParameter ReferenceType Object modeElement MethodDeclaration /**
     * Remove a model element from a partition
     * @param partition the partition currently containing the model element
     * @param modeElement the model element to be removed from the partition
     */ removeContent FormalParameter ReferenceType Object partition FormalParameter ReferenceType Object modeElement MethodDeclaration /**
     * Set the isSynch attribute of an ObjectFlowState.
     * 
     * @param objectFlowState
     *            the element for which to set the attribute
     * @param isSynch
     *            true if this ObjectFlowState is a synch state.
     */ setSynch FormalParameter ReferenceType Object objectFlowState FormalParameter BasicType boolean isSynch MethodDeclaration /**
     * Add a Parameter to an ObjectFlowState.
     * 
     * @param objectFlowState
     *            the ObjectFlowState
     * @param parameter
     *            the Parameter
     */ addParameter FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Object parameter MethodDeclaration /**
     * Remove Parameter from an ObjectFlowState.
     * 
     * @param objectFlowState
     *            the ObjectFlowState
     * @param parameter
     *            the Parameter to remove
     */ removeParameter FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Object parameter MethodDeclaration /**
     * @param objectFlowState
     *            the ObjectFlowState.
     * @param parameters
     *            the collection of Parameters. Pass
     *            {@link java.util.Collections#EMPTY_SET} if there are no
     *            Parameters.
     */ setParameters FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Collection parameters",0
738,738,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.EventObject ClassDeclaration Modifier public /**
 * A change event due to change in an association between one model element
 * and another.
 *
 * @author Bob Tarling
 */ AssociationChangeEvent FieldDeclaration /**
     * The value that was changed.
     */ Modifier private ReferenceType Object VariableDeclarator changedValue ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param source  The bean that fired the event.
     * @param propertyName  The programmatic name of the property
     *		that was changed.
     * @param oldValue  The old value of the property.
     * @param newValue  The new value of the property.
     * @param originalEvent The event that was fired internally
     *     in the Model subsystem that caused this.
     * @param theChangedValue The object that was actually added or removed.
     */ AssociationChangeEvent FormalParameter ReferenceType Object source FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object oldValue FormalParameter ReferenceType Object newValue FormalParameter ReferenceType Object theChangedValue FormalParameter ReferenceType EventObject originalEvent StatementExpression SuperConstructorInvocation MemberReference source MemberReference propertyName MemberReference oldValue MemberReference newValue MemberReference originalEvent StatementExpression Assignment MemberReference changedValue MemberReference theChangedValue = MethodDeclaration /**
     * @return The changed value.
     */ Modifier public ReferenceType Object getChangedValue ReturnStatement MemberReference changedValue FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6586460366990334839L ReferenceType UmlChangeEvent",0
252,252,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * <p>Invoked by the ""Add use case"" toolbar button to create a new use case
 *   property panel in the same namespace as the current use case.</p>
 *
 * <p>This code uses getFactory and adds the use case explicitly to the
 *   namespace. Extended to actually navigate to the new use case.</p>
 */ ActionNewUseCase ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNewUseCase StatementExpression SuperConstructorInvocation Literal ""button.new-usecase"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-usecase"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator useCase MethodInvocation Model MethodInvocation createUseCase getUseCasesFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference ns MemberReference useCase addOwnedElement getCoreHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference useCase setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed End End ReferenceType AbstractActionNewModelElement",1
70,70,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior ClassDeclaration Modifier public /**
 * The properties panel for a UninterpretedAction.
 * <p>
 * TODO: this property panel needs refactoring to remove dependency on
 *       old gui components.
 */ PropPanelUninterpretedAction ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ PropPanelUninterpretedAction StatementExpression SuperConstructorInvocation Literal ""label.uninterpreted-action"" MethodInvocation Literal ""UninterpretedAction"" lookupIcon ReferenceType PropPanelAction",1
1336,1336,,0
1081,1081,,0
203,203,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import org.argouml.model.AddAssociationEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the text shown in the operation compartment of a Class.
 * Subclass this for all languages.
 *
 * @author mvw@tigris.org
 */ OperationNotation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param operation The operation.
     */ OperationNotation FormalParameter ReferenceType Object operation IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference operation isAOperation getFacade MethodInvocation ! Model MethodInvocation MemberReference operation isAReception getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not an Operation or Reception."" End MethodDeclaration Modifier public Annotation Override initialiseListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference listener MemberReference modelElement addElementListener IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAOperation getFacade BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator uml MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference uml addElementListener End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator uml MethodInvocation Model MethodInvocation MemberReference modelElement getParameters getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference uml addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference uml getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference type addElementListener End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator uml MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValuesCollection getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference uml addElementListener End End MethodDeclaration Modifier public Annotation Override updateListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && BinaryOperation == MethodInvocation pce getSource MemberReference modelElement BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation pce getPropertyName equals ""stereotype"" Literal MethodInvocation MethodInvocation pce getPropertyName equals ""parameter"" Literal MethodInvocation MethodInvocation pce getPropertyName equals ""taggedValue"" BlockStatement IfStatement BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent BlockStatement StatementExpression MethodInvocation MemberReference listener MethodInvocation pce getNewValue addElementListener End IfStatement BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent BlockStatement StatementExpression MethodInvocation MemberReference listener MethodInvocation pce getOldValue removeElementListener End End IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isRemoved getUmlFactory BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator param MethodInvocation Model MethodInvocation MemberReference modelElement getParameters getFacade BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation pce getSource MemberReference param Literal ""type"" BlockStatement IfStatement BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent BlockStatement StatementExpression MethodInvocation MemberReference listener MethodInvocation pce getNewValue addElementListener End IfStatement BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent BlockStatement StatementExpression MethodInvocation MemberReference listener MethodInvocation pce getOldValue removeElementListener End End End End ReferenceType NotationProvider",0
805,805,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Package->Class.
 *
 */ GoPackageToClass MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.package.class"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAPackage getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent MethodInvocation Model MethodInvocation getUMLClass getMetaTypes getAllModelElementsOfKind getModelManagementHelper End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",1
92,92,"CompilationUnit PackageDeclaration org.argouml.ui Import org.argouml.ui.targetmanager.TargetListener InterfaceDeclaration Modifier public /**
 * An interface for JPanels that are in the DetailsPane, and that change target
 * based on the selections made in the gui/views.
 *
 * @since 0.13.4
 */ TabTarget MethodDeclaration /**
     * Set the target.
     *
     * @param target
     *            the new target to set
     */ Modifier public setTarget FormalParameter ReferenceType Object target MethodDeclaration /**
     * Get the current target.
     *
     * @return the target
     */ Modifier public ReferenceType Object getTarget MethodDeclaration /**
     * Refresh the tab IN TOTAL.
     */ Modifier public refresh MethodDeclaration /**
     * Return true whether the tab should be enabled with the given target.
     *
     * @param target the given target
     * @return true if the tab should be enabled
     */ Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target ReferenceType TargetListener",1
424,424,"CompilationUnit PackageDeclaration org.argouml.uml Import java.util.Collection Import java.util.Collections Import java.util.Enumeration Import java.util.HashSet Import java.util.Set Import org.argouml.model.Model Import org.tigris.gef.util.ChildGenerator ClassDeclaration Modifier public /**
 * Utility class to generate the subclasses of a class. It recursively moves
 * down the class hierarchy. But it does that in a safe way that will not hang
 * in case of cyclic inheritance.
 * 
 * @stereotype singleton
 */ GenDescendantClasses FieldDeclaration Modifier private final static ReferenceType GenDescendantClasses VariableDeclarator SINGLETON ClassCreator ReferenceType GenDescendantClasses MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType GenDescendantClasses getSINGLETON ReturnStatement MemberReference SINGLETON MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType Set VariableDeclarator res ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference o isAGeneralizableElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference o StatementExpression MethodInvocation MemberReference cls MemberReference res accumulateDescendants End ReturnStatement MethodInvocation Collections MemberReference res enumeration MethodDeclaration /**
     * @param cls the starting class (in fact GeneralizableElement)
     * @param accum the accumulated list of descendants
     */ Modifier private accumulateDescendants FormalParameter Modifier final ReferenceType Object cls FormalParameter ReferenceType Collection accum LocalVariableDeclaration ReferenceType Collection VariableDeclarator gens MethodInvocation Model MethodInvocation MemberReference cls getSpecializations getFacade IfStatement BinaryOperation == MemberReference gens Literal null BlockStatement ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator g MemberReference gens BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ge MethodInvocation Model MethodInvocation MemberReference g getSpecific getFacade IfStatement MethodInvocation ! accum MemberReference ge contains BlockStatement StatementExpression MethodInvocation accum MemberReference ge add StatementExpression MethodInvocation MemberReference cls MemberReference accum accumulateDescendants End End ReferenceType ChildGenerator",0
721,721,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * A model for the type of an ObjectFlowState.
 * This combo shows the Classifier or the ClassifierInState! 
 * 
 * @since Oct 10, 2002
 * @author jaap.branderhorst@xs4all.nl, alexb
 */ UMLObjectFlowStateClassifierComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor.
     */ UMLObjectFlowStateClassifierComboBoxModel StatementExpression SuperConstructorInvocation Literal ""type"" Literal false MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade MethodDeclaration /**
     * Get all Classifiers that are not ClassifierInState.
     * 
     * @see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
     */ Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator newList ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference model getAllClassifiers getCoreHelper IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade IfStatement BinaryOperation != MemberReference type Literal null IfStatement MethodInvocation ! newList MemberReference type contains StatementExpression MethodInvocation newList MemberReference type add End End End StatementExpression MethodInvocation MemberReference newList setElements MethodDeclaration /**
     * Returns a Classifier that may be a ClassifierInState.
     * 
     * {@inheritDoc}
     */ Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade End ReturnStatement Literal null MethodDeclaration /**
     * The function in the parent removes items from the list when deselected.
     * We do not need that here.
     * 
     * @param evt
     *            A PropertyChangeEvent object describing the event source and
     *            the property that has changed.
     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
     */ Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression Assignment MemberReference buildingModel Literal true = StatementExpression MethodInvocation buildModelList StatementExpression Assignment MemberReference buildingModel Literal false = StatementExpression MethodInvocation MethodInvocation getSelectedModelElement setSelectedItem ReferenceType UMLComboBoxModel2",0
490,490,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import javax.swing.JScrollPane Import javax.swing.ListModel Import javax.swing.ScrollPaneConstants ClassDeclaration Modifier public /**
 * A scrollable list of items.
 * @author Bob Tarling
 */ ScrollList ConstructorDeclaration Modifier public /**
     * Builds a JList from a given list model and wraps
     * in a scrollable view.
     * @param listModel The model from which to build the list
     */ ScrollList FormalParameter ReferenceType ListModel listModel StatementExpression ExplicitConstructorInvocation MemberReference listModel Literal true Literal true ConstructorDeclaration Modifier public /**
     * Builds a JList from a given list model and wraps
     * in a scrollable view.
     * @param listModel The model from which to build the list
     * @param showIcon show an icon with elements in the list
     * @param showPath show containment path for elements in list
     */ ScrollList FormalParameter ReferenceType ListModel listModel FormalParameter BasicType boolean showIcon FormalParameter BasicType boolean showPath StatementExpression MethodInvocation MemberReference ScrollPaneConstants HORIZONTAL_SCROLLBAR_NEVER setHorizontalScrollBarPolicy StatementExpression MethodInvocation ClassCreator ReferenceType UMLLinkedList MemberReference listModel MemberReference showIcon MemberReference showPath setViewportView FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6711776013279497682L ReferenceType JScrollPane",0
173,173,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Facade ClassDeclaration Modifier public /**
 * Class to represent a checkbox for the derived tagged value.
 *
 * @author tfmorris
 */ UMLDerivedCheckBox ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ UMLDerivedCheckBox StatementExpression SuperConstructorInvocation MemberReference Facade DERIVED_TAG ReferenceType UMLTaggedValueCheckBox",0
129,129,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.util.Iterator Import org.argouml.kernel.ProfileConfiguration InterfaceDeclaration Modifier public /**
 * Interface supported by any container of UML user interface components.
 * This interface allows UML user interface components to determine
 * the currently selected target and profile and allows the control
 * to request a navigation.  Implemented by PropPanel.
 *
 * @author Curt Arnold
 * @see PropPanel
 */ UMLUserInterfaceContainer MethodDeclaration /**
     * @return the current target for the container, may be null
     */ Modifier public ReferenceType Object getTarget MethodDeclaration /**
     * @return the current target for the container if the target is a
     *      ModelElement, otherwise null
     */ Modifier public ReferenceType Object getModelElement MethodDeclaration /**
     * Return the current profile.
     * <p>
     * NOTE: An incompatible change was made to this API for 0.25.4. The return
     * type was changed from Profile to ProfileConfiguration.
     * 
     * @return the current profile, may not be null
     */ Modifier public ReferenceType ProfileConfiguration getProfile MethodDeclaration /**
     * Formats the specified model element.  Typically, deferred to the
     * profile.
     *
     * @param element the given ModelElement
     * @return the formatted string
     */ Modifier public ReferenceType String formatElement FormalParameter ReferenceType Object element MethodDeclaration /**
     * Formats a collection of model elements.  Typically, deferred to the
     * profile.
     *
     * @param iter an iterator into the collection of modelelements
     * @return the formatted string
     */ Modifier public ReferenceType String formatCollection FormalParameter ReferenceType Iterator iter MethodDeclaration /**
     * Formats the model element as a namespace.
     *
     * @param ns the namespace
     * @return the formatted string
     */ Modifier public ReferenceType String formatNamespace FormalParameter ReferenceType Object ns",0
174,174,"CompilationUnit PackageDeclaration org.argouml.util Import java.util.Enumeration Import java.util.Iterator ClassDeclaration Modifier public /**
 * Adapter class to provide legacy Enumeration interface for more modern
 * Iterator. For use with GEF or other legacy API implementations.
 * 
 * @param <T> type of object in Enumeration
 * @author Tom Morris <tfmorris@gmail.com>
 */ IteratorEnumeration FieldDeclaration Modifier private ReferenceType Iterator TypeArgument ReferenceType T VariableDeclarator it ConstructorDeclaration Modifier public IteratorEnumeration FormalParameter ReferenceType Iterator TypeArgument ReferenceType T iterator StatementExpression Assignment MemberReference it MemberReference iterator = MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MethodInvocation it hasNext MethodDeclaration Modifier public ReferenceType T nextElement ReturnStatement MethodInvocation it next TypeParameter T ReferenceType Enumeration TypeArgument ReferenceType T",0
1374,1374,,0
740,740,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import java.util.Map Import java.util.StringTokenizer Import org.argouml.model.Model Import org.argouml.notation.providers.ComponentInstanceNotation ClassDeclaration Modifier public /**
 * UML notation for a component instance.
 * 
 * @author Michiel
 */ ComponentInstanceNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param componentInstance the UML componentInstance
     */ ComponentInstanceNotationUml FormalParameter ReferenceType Object componentInstance StatementExpression SuperConstructorInvocation MemberReference componentInstance MethodDeclaration /**
     * Parse a line of the form: ""name : base-component"".
     *
     * {@inheritDoc}
     */ Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation text trim IfStatement BinaryOperation == MethodInvocation s length Literal 0 BlockStatement ReturnStatement End IfStatement BinaryOperation == MethodInvocation s BinaryOperation - MethodInvocation s length Literal 1 charAt Literal ';' BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 2 substring = End LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal """" LocalVariableDeclaration ReferenceType String VariableDeclarator bases Literal """" LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer Literal null IfStatement BinaryOperation > MethodInvocation s Literal "":"" Literal 0 indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference name MethodInvocation s MethodInvocation trim Literal 0 MethodInvocation s Literal "":"" indexOf substring = StatementExpression Assignment MemberReference bases MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal "":"" indexOf Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference name MemberReference s = End StatementExpression Assignment MemberReference tokenizer ClassCreator ReferenceType StringTokenizer MemberReference bases Literal "","" = LocalVariableDeclaration ReferenceType List VariableDeclarator classifiers ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement WhileStatement MethodInvocation tokenizer hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newBase MethodInvocation tokenizer nextToken LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation newBase trim lookupIn getFacade IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement StatementExpression MethodInvocation classifiers MemberReference cls add End End End StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference classifiers setClassifiers getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference name setName getCoreHelper MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-componentinstance"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr Literal """" IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade Literal null BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade = End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator baseStr ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference modelElement getClassifiers getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference col Literal null BinaryOperation > MethodInvocation col size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator StatementExpression MethodInvocation baseStr MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade append WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation baseStr BinaryOperation + Literal "", "" MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade append End End IfStatement BinaryOperation && BinaryOperation == MethodInvocation nameStr length Literal 0 BinaryOperation == MethodInvocation baseStr length Literal 0 BlockStatement ReturnStatement Literal """" End StatementExpression Assignment MemberReference baseStr ClassCreator ReferenceType StringBuilder MethodInvocation baseStr MethodInvocation trim toString = IfStatement BinaryOperation < MethodInvocation baseStr length Literal 1 BlockStatement ReturnStatement MethodInvocation nameStr trim End ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation nameStr trim Literal "" : "" MethodInvocation baseStr toString ReferenceType ComponentInstanceNotation",0
1467,1467,,0
149,149,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.kernel.Project ClassDeclaration Modifier public /**
 * Rule for Project->Model.
 *
 */ GoProjectToModel MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.project.model"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Project BlockStatement ReturnStatement Cast ReferenceType Project MemberReference parent End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",1
866,866,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.Iterator Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.ui.targetmanager.TargetManager Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier abstract /**
 * This class adds the common algorithms
 * for handling multiple targets
 * for a radio menuitem to the UMLAction.
 *
 * @author mvw@tigris.org
 */ AbstractActionRadioMenuItem ConstructorDeclaration Modifier public /**
     * @param key the name to be localized
     * @param hasIcon true if an icon should be shown
     */ AbstractActionRadioMenuItem FormalParameter ReferenceType String key FormalParameter BasicType boolean hasIcon StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference key localize TernaryExpression MemberReference hasIcon MethodInvocation ResourceLoaderWrapper MemberReference key lookupIcon Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator MemberReference key localize putValue MethodDeclaration /**
     * This action should be enabled when: <ul>
     * <li>all targets are modelelements that support this radiobutton and
     * <li>all targets have the radiobutton on the same item
     *     (mixed is not yet supported, but could be if a tri-state
     *     radiobutton is implemented).
     * </ul>
     */ Modifier public BasicType boolean isEnabled LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal true LocalVariableDeclaration ReferenceType Object VariableDeclarator commonValue Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement BinaryOperation && MethodInvocation i hasNext MemberReference result BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference t valueOfTarget IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference commonValue MemberReference value = StatementExpression Assignment MemberReference first Literal false = End StatementExpression Assignment MemberReference result MethodInvocation commonValue MemberReference value equals &= CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression Assignment MemberReference result Literal false = End ReturnStatement MemberReference result MethodDeclaration /**
     * @param t the target modelelement
     * @return the UML element that represents the radiobutton
     *         for this modelelement
     */ Modifier abstract ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t MethodDeclaration /**
     * This action is performed on ALL targets.
     *
     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
     */ Modifier public final actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next StatementExpression MethodInvocation MemberReference t toggleValueOfTarget End MethodDeclaration /**
     * @param t the target modelelement
     */ Modifier abstract toggleValueOfTarget FormalParameter ReferenceType Object t ReferenceType UndoableAction",0
1605,1605,,0
1604,1604,,0
473,473,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * This is a wrapper class around an element from the Diagram Interchange Model.
 * The intention here is to pass a class of this type around instead of just
 * an Object. This will give us better compile time safety than we currently
 * get with model elments which are currently passed about as Object.
 *
 * @author Bob Tarling
 */ DiElement",0
722,722,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * PerspectiveRule to navigate from a modelelement (the context)
 * to its behavior (statemachine or activitygraph).  
 * 
 * @author mvw
 */ GoModelElementToBehavior MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.model-element.behavior"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehaviors getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1559,1559,,0
1006,1006,,1
1400,1400,,0
336,336,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 26, 2003
 */ UMLGeneralizableElementGeneralizationListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLGeneralizableElementGeneralizationListModel.
     */ UMLGeneralizableElementGeneralizationListModel StatementExpression SuperConstructorInvocation Literal ""generalization"" MethodInvocation Model MethodInvocation getGeneralization getMetaTypes MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget isAGeneralizableElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getGeneralizations getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAGeneralization getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getGeneralizations MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",0
455,455,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.layout Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * This class overrides some of the aspects of ClassdiagramNodes to simplify
 * the positioning of notes nearby the commented nodes.
 *
 * @author David Gunkel
 */ ClassdiagramNote ConstructorDeclaration Modifier public /**
     * @param f the fig
     */ ClassdiagramNote FormalParameter ReferenceType FigNode f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier public BasicType int getTypeOrderNumer ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null SuperMethodInvocation getTypeOrderNumer MethodInvocation MethodInvocation getTypeOrderNumer first MethodDeclaration Modifier public Annotation Override BasicType float calculateWeight StatementExpression MethodInvocation MethodInvocation getWeight setWeight ReturnStatement MethodInvocation getWeight MethodDeclaration Modifier public Annotation Override BasicType int getRank ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal 0 MethodInvocation MethodInvocation getRank first MethodDeclaration Modifier public Annotation Override BasicType float getWeight ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal 0 BinaryOperation * MethodInvocation MethodInvocation getWeight first Literal 0.9999999f MethodDeclaration Modifier public Annotation Override BasicType boolean isStandalone ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal true MethodInvocation MethodInvocation isStandalone first MethodDeclaration /**
     * Return the first node to which this note is attached to.
     *
     * @return A ClassdiagramNode.
     */ Modifier private ReferenceType ClassdiagramNode first ReturnStatement TernaryExpression MethodInvocation MethodInvocation isEmpty getUpNodes Literal null MethodInvocation MethodInvocation Literal 0 get getUpNodes ReferenceType ClassdiagramNode",0
90,90,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * A class to perform the action of changing the unidirectional or
 * bidirectional navigation of an association.
 *
 * @author  Bob Tarling
 */ ActionNavigability FieldDeclaration /**
     * Enumeration constant for <code>BIDIRECTIONAL</code> navigability.
     */ Modifier public final static BasicType int VariableDeclarator BIDIRECTIONAL Literal 0 FieldDeclaration /**
     * Enumeration constant for <code>STARTTOEND</code> navigability.
     */ Modifier public final static BasicType int VariableDeclarator STARTTOEND Literal 1 FieldDeclaration /**
     * Enumeration constant for <code>ENDTOSTART</code> navigability.
     */ Modifier public final static BasicType int VariableDeclarator ENDTOSTART Literal 2 FieldDeclaration /**
     * The actual navigability of this action.
     */ Modifier private BasicType int VariableDeclarator nav MemberReference BIDIRECTIONAL FieldDeclaration /**
     * The association start.
     */ Modifier private ReferenceType Object VariableDeclarator assocStart FieldDeclaration /**
     * The association end.
     */ Modifier private ReferenceType Object VariableDeclarator assocEnd MethodDeclaration /**
     * The <code>ActionNavigability</code> constructor.
     *
     * @param assocStart a <code>MAssociationEnd</code> object at the start
     * of an association.
     * @param assocEnd a <code>MAssociationEnd</code> object at the end of
     * an association.
     * @param nav the type of navigation required in the association
     * being either <ul> <li>BIDIRECTIONAL <li>STARTTOEND
     * <li>ENDTOSTART </ul>
     *
     * @return the constructed class
     */ Modifier public static ReferenceType ActionNavigability newActionNavigability FormalParameter ReferenceType Object assocStart FormalParameter ReferenceType Object assocEnd FormalParameter BasicType int nav ReturnStatement ClassCreator ReferenceType ActionNavigability MethodInvocation MemberReference assocStart MemberReference assocEnd MemberReference nav getDescription MemberReference assocStart MemberReference assocEnd MemberReference nav MethodDeclaration /**
     * Build a description string from the given association ends,
     * and the navigability.
     *
     * @param assocStart association end 1
     * @param assocEnd   association end 2
     * @param nav        the navigability
     * @return           the string containing a human-readible indication
     *                   of the navigability
     */ Modifier private static ReferenceType String getDescription FormalParameter ReferenceType Object assocStart FormalParameter ReferenceType Object assocEnd FormalParameter BasicType int nav LocalVariableDeclaration ReferenceType String VariableDeclarator startName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference assocStart getType getFacade getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator endName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference assocEnd getType getFacade getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference startName Literal null BinaryOperation == MethodInvocation startName length Literal 0 BlockStatement StatementExpression Assignment MemberReference startName MethodInvocation Translator Literal ""action.navigation.anon"" localize = End IfStatement BinaryOperation || BinaryOperation == MemberReference endName Literal null BinaryOperation == MethodInvocation endName length Literal 0 BlockStatement StatementExpression Assignment MemberReference endName MethodInvocation Translator Literal ""action.navigation.anon"" localize = End IfStatement BinaryOperation == MemberReference nav MemberReference STARTTOEND BlockStatement ReturnStatement MethodInvocation Translator Literal ""action.navigation.from-to"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference startName MemberReference endName messageFormat IfStatement BinaryOperation == MemberReference nav MemberReference ENDTOSTART BlockStatement ReturnStatement MethodInvocation Translator Literal ""action.navigation.from-to"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference endName MemberReference startName messageFormat BlockStatement ReturnStatement MethodInvocation Translator Literal ""action.navigation.bidirectional"" localize End End ConstructorDeclaration Modifier protected /**
     * The constructor.
     *
     * @param label   the description as build in <code>getDescription</code>
     * @param theAssociationStart association end 1
     * @param theAssociationEnd   association end 2
     * @param theNavigability     the navigability: one of
     *                            BIDIRECTIONAL, STARTTOEND, ENDTOSTART
     */ ActionNavigability FormalParameter ReferenceType String label FormalParameter ReferenceType Object theAssociationStart FormalParameter ReferenceType Object theAssociationEnd FormalParameter BasicType int theNavigability StatementExpression SuperConstructorInvocation MemberReference label Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MemberReference label putValue StatementExpression Assignment This MemberReference nav MemberReference theNavigability = StatementExpression Assignment This MemberReference assocStart MemberReference theAssociationStart = StatementExpression Assignment This MemberReference assocEnd MemberReference theAssociationEnd = MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression MethodInvocation Model MethodInvocation MemberReference assocStart BinaryOperation || BinaryOperation == MemberReference nav MemberReference BIDIRECTIONAL BinaryOperation == MemberReference nav MemberReference ENDTOSTART setNavigable getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference assocEnd BinaryOperation || BinaryOperation == MemberReference nav MemberReference BIDIRECTIONAL BinaryOperation == MemberReference nav MemberReference STARTTOEND setNavigable getCoreHelper MethodDeclaration /**
     * The is action is always enabled.
     *
     *@return always true (the action is always enabled)
     * @see org.tigris.gef.undo.UndoableAction#isEnabled()
     */ Modifier public BasicType boolean isEnabled ReturnStatement Literal true ReferenceType UndoableAction",1
730,730,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * The listmodel behind the transition property for a Guard on the Guard's
 * property panel.
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLGuardTransitionListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLGuardTransitionListModel.
     */ UMLGuardTransitionListModel StatementExpression SuperConstructorInvocation Literal ""transition"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getTransition getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MemberReference element MethodInvocation Model MethodInvocation MethodInvocation getTarget getTransition getFacade ReferenceType UMLModelElementListModel2",0
1237,1237,,0
82,82,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.Iterator Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.ui.targetmanager.TargetManager Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier abstract /**
 * This class adds the common algorithms
 * for handling multiple targets
 * for a checkbox menuitem to the UMLAction.
 *
 * @author mvw@tigris.org
 */ AbstractActionCheckBoxMenuItem ConstructorDeclaration Modifier public /**
     * @param key the name (to be localized)
     */ AbstractActionCheckBoxMenuItem FormalParameter ReferenceType String key StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference key localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator MemberReference key localize putValue MethodDeclaration /**
     * This action should be enabled when: <ul>
     * <li>all targets are modelelements that support this checkmark and
     * <li>all targets have the checkmark either on or off
     *     (mixed is not yet supported, but could be if a tri-state
     *     checkmark is implemented).
     * </ul>
     */ Modifier public BasicType boolean isEnabled LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator commonValue Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement BinaryOperation && MethodInvocation i hasNext MemberReference result BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator value MethodInvocation MemberReference t valueOfTarget IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference commonValue MemberReference value = StatementExpression Assignment MemberReference first Literal false = End StatementExpression Assignment MemberReference result BinaryOperation == MemberReference commonValue MemberReference value &= CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression Assignment MemberReference result Literal false = End ReturnStatement MemberReference result MethodDeclaration /**
     * @param t the target modelelement
     * @return the value of the checkmark for this modelelement
     */ Modifier abstract BasicType boolean valueOfTarget FormalParameter ReferenceType Object t MethodDeclaration /**
     * This action is performed on ALL targets.
     *
     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
     */ Modifier public final actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next StatementExpression MethodInvocation MemberReference t toggleValueOfTarget End MethodDeclaration /**
     * @param t the target modelelement
     */ Modifier abstract toggleValueOfTarget FormalParameter ReferenceType Object t ReferenceType UndoableAction",0
1468,1468,,1
915,915,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import java.awt.Font Import java.awt.Graphics Import java.beans.PropertyChangeEvent Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.Model Import org.tigris.gef.base.Layer Import org.tigris.gef.base.PathConvPercent Import org.tigris.gef.presentation.ArrowHeadTriangle Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * The Fig for a Generalization.
 * 
 * @author abonner@ics.uci.edu, jaap.branderhorst@xs4all.nl
 */ FigGeneralization FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 3983170503390943894L FieldDeclaration /**
     * Text box for discriminator.
     */ Modifier private ReferenceType FigText VariableDeclarator discriminator ClassCreator ReferenceType FigText Literal 10 Literal 30 Literal 90 Literal 20 FieldDeclaration Modifier private ReferenceType ArrowHeadTriangle VariableDeclarator endArrow ConstructorDeclaration Modifier public /**
     * The constructor.
     */ FigGeneralization StatementExpression MethodInvocation discriminator Literal false setFilled StatementExpression MethodInvocation discriminator Literal 0 setLineWidth StatementExpression MethodInvocation discriminator MemberReference FigText END_EDITING setReturnAction StatementExpression MethodInvocation discriminator MemberReference FigText END_EDITING setTabAction StatementExpression MethodInvocation MemberReference discriminator ClassCreator ReferenceType PathConvPercent This Literal 40 Literal - 10 addPathItem StatementExpression Assignment MemberReference endArrow ClassCreator ReferenceType ArrowHeadTriangle = StatementExpression MethodInvocation endArrow MemberReference Color white setFillColor StatementExpression MethodInvocation MemberReference endArrow setDestArrowHead StatementExpression MethodInvocation Literal true setBetweenNearestPoints IfStatement BinaryOperation == MethodInvocation getLayer Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram MethodInvocation getLayer getManager setLayer End ConstructorDeclaration Modifier public /**
     * The constructor that hooks the Fig into the UML element.
     *
     * @param edge the UML element
     * @param lay the layer
     */ FigGeneralization FormalParameter ReferenceType Object edge FormalParameter ReferenceType Layer lay StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference lay setLayer StatementExpression MethodInvocation MemberReference edge setOwner MethodDeclaration Modifier protected BasicType boolean canEdit FormalParameter ReferenceType Fig f ReturnStatement Literal false MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent e StatementExpression SuperMethodInvocation MemberReference e modelChanged IfStatement BinaryOperation && BinaryOperation instanceof MemberReference e ReferenceType AttributeChangeEvent Literal MethodInvocation MethodInvocation e getPropertyName equals ""discriminator"" BlockStatement StatementExpression MethodInvocation updateDiscriminatorText End MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner removeElementListener End IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal ""remove"" Literal ""discriminator"" addElementListener End MethodDeclaration /**
     * Updates the discriminator text. Called if the model is changed
     * and on construction time.
     */ Modifier public updateDiscriminatorText LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation getOwner IfStatement BinaryOperation == MemberReference generalization Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator disc Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference generalization getDiscriminator getFacade IfStatement BinaryOperation == MemberReference disc Literal null BlockStatement StatementExpression Assignment MemberReference disc Literal """" = End LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation MethodInvocation getProjectSettings MethodInvocation MemberReference Font PLAIN getFont getProject StatementExpression MethodInvocation discriminator MemberReference f setFont End StatementExpression MethodInvocation discriminator MemberReference disc setText MethodDeclaration Modifier public Annotation Override paint FormalParameter ReferenceType Graphics g StatementExpression MethodInvocation endArrow MethodInvocation getLineColor setLineColor StatementExpression SuperMethodInvocation MemberReference g paint MethodDeclaration Modifier public Annotation Override setOwner FormalParameter ReferenceType Object own StatementExpression SuperMethodInvocation MemberReference own setOwner IfStatement MethodInvocation Model MethodInvocation MemberReference own isAGeneralization getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator gen MemberReference own LocalVariableDeclaration ReferenceType Object VariableDeclarator subType MethodInvocation Model MethodInvocation MemberReference gen getSpecific getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator superType MethodInvocation Model MethodInvocation MemberReference gen getGeneral getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference subType Literal null BinaryOperation == MemberReference superType Literal null BlockStatement StatementExpression MethodInvocation removeFromDiagram ReturnStatement End StatementExpression MethodInvocation updateDiscriminatorText IfStatement BinaryOperation != MemberReference own Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal ""FigGeneralization has an illegal owner of "" MethodInvocation own MethodInvocation getName getClass End End ReferenceType FigEdgeModelElement",0
741,741,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * This action creates a new Actor.
 *
 * @author Michiel
 */ ActionNewActor ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNewActor StatementExpression SuperConstructorInvocation Literal ""button.new-actor"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-actor"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAActor getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation Model MethodInvocation MemberReference target MemberReference model buildActor getUseCasesFactory setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed End ReferenceType AbstractActionNewModelElement",0
383,383,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.awt.event.ActionEvent Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
* @since Aug 11, 2004
* @author mvw
*/ ActionSetObjectFlowStateClassifier ConstructorDeclaration Modifier public /**
     * Constructor for ActionSetObjectFlowStateClassifier.
     */ ActionSetObjectFlowStateClassifier StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator oldClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator newClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator m Literal null IfStatement BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator box Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator ofs MethodInvocation box getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference ofs isAObjectFlowState getFacade BlockStatement StatementExpression Assignment MemberReference oldClassifier MethodInvocation Model MethodInvocation MemberReference ofs getType getFacade = StatementExpression Assignment MemberReference m MemberReference ofs = End LocalVariableDeclaration ReferenceType Object VariableDeclarator cl MethodInvocation box getSelectedItem IfStatement MethodInvocation Model MethodInvocation MemberReference cl isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference newClassifier MemberReference cl = End End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference newClassifier MemberReference oldClassifier BinaryOperation != MemberReference m Literal null BinaryOperation != MemberReference newClassifier Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MemberReference m MemberReference newClassifier setType getCoreHelper End ReferenceType UndoableAction",0
1492,1492,,0
1093,1093,,1
874,874,"CompilationUnit PackageDeclaration org.argouml.profile InterfaceDeclaration Modifier public /**
 * Using this strategy profiles can provide the default used when creating new 
 * parameters, operations and attributes.
 *
 * @author maurelio1234
 */ DefaultTypeStrategy MethodDeclaration /**
     * @return the default type used in new attributes
     */ Modifier public ReferenceType Object getDefaultAttributeType MethodDeclaration /**
     * @return the default type used in new parameters
     */ Modifier public ReferenceType Object getDefaultParameterType MethodDeclaration /**
     * @return the default type used in new operations
     */ Modifier public ReferenceType Object getDefaultReturnType",0
322,322,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLPlainTextDocument ClassDeclaration Modifier public /**
 * The document that is edited in the discriminator field of a generalization.
 *
 * @since Oct 10, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLDiscriminatorNameDocument ConstructorDeclaration Modifier public /**
     * Constructor for UMLModelElementNameDocument.
     */ UMLDiscriminatorNameDocument StatementExpression SuperConstructorInvocation Literal ""discriminator"" MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text setDiscriminator getCoreHelper MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getTarget getDiscriminator getFacade ReferenceType UMLPlainTextDocument",1
190,190,"CompilationUnit PackageDeclaration org.argouml.profile Import java.io.InputStream Import java.util.Collection Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.model.UmlException Import org.argouml.model.XmiReader Import org.xml.sax.InputSource ClassDeclaration Modifier public abstract /**
 * Abstract ProfileModelLoader which loads models from an InputStream.
 *
 * @author Marcos Aurélio
 */ StreamModelLoader FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType StreamModelLoader getLogger MethodDeclaration /**
     * @param inputStream the stream from where the model should be loaded
     * @return the model
     * @throws ProfileException if the XMIReader couldn't read the input stream
     */ Modifier public ReferenceType Collection loadModel FormalParameter ReferenceType InputStream inputStream ProfileException IfStatement BinaryOperation != MemberReference inputStream Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType XmiReader VariableDeclarator xmiReader MethodInvocation Model getXmiReader LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource MemberReference inputStream LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements MethodInvocation xmiReader MemberReference inputSource Literal true parse ReturnStatement MemberReference elements CatchClause CatchClauseParameter UmlException e StatementExpression MethodInvocation LOG Literal ""Exception while loading profile "" MemberReference e error ThrowStatement ClassCreator ReferenceType ProfileException Literal ""Invalid XMI data!"" End StatementExpression MethodInvocation LOG Literal ""Profile not found"" error ThrowStatement ClassCreator ReferenceType ProfileException Literal ""Profile not found!"" ReferenceType ProfileModelLoader",0
1547,1547,,0
125,125,"CompilationUnit PackageDeclaration org.argouml.cognitive ClassDeclaration Modifier public /**
 * This class models a goal of a designer.
 *
 */ Goal FieldDeclaration /**
     * The unspecified goal.
     */ Modifier private final static ReferenceType Goal VariableDeclarator UNSPEC ClassCreator ReferenceType Goal Literal ""label.goal.unspecified"" Literal 1 FieldDeclaration /**
     * The localized name.
     */ Modifier private ReferenceType String VariableDeclarator name FieldDeclaration /**
     * The priority.
     */ Modifier private BasicType int VariableDeclarator priority ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param n the name (to be localized)
     * @param p the priority
     */ Goal FormalParameter ReferenceType String n FormalParameter BasicType int p StatementExpression Assignment MemberReference name MethodInvocation Translator MemberReference n localize = StatementExpression Assignment MemberReference priority MemberReference p = MethodDeclaration Modifier public BasicType int hashCode IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal 0 End ReturnStatement MethodInvocation name hashCode MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object d2 IfStatement BinaryOperation instanceof MemberReference d2 ReferenceType Goal BlockStatement ReturnStatement Literal false End ReturnStatement Cast ReferenceType Goal MemberReference d2 MethodDeclaration /**
     * @return the localized name
     */ Modifier public ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration /**
     * @param n the localized name
     */ Modifier public setName FormalParameter ReferenceType String n StatementExpression Assignment MemberReference name MemberReference n = MethodDeclaration /**
     * @return the priority
     */ Modifier public BasicType int getPriority ReturnStatement MemberReference priority MethodDeclaration /**
     * @param p the priority
     */ Modifier public setPriority FormalParameter BasicType int p StatementExpression Assignment MemberReference priority MemberReference p = MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getName MethodDeclaration /**
     * @return Returns the unspecified goal.
     */ Modifier public static ReferenceType Goal getUnspecifiedGoal ReturnStatement MemberReference UNSPEC",0
1258,1258,,0
273,273,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import org.argouml.model.Model Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers 
 * for the text shown in the Fig that represents a nodeInstance. 
 * Subclass this for all languages.
 * 
 * @author mvw@tigris.org
 */ NodeInstanceNotation ConstructorDeclaration Modifier public /**
     * The constructor.
     * 
     * @param nodeInstance the nodeInstance of which we handle the text
     */ NodeInstanceNotation FormalParameter ReferenceType Object nodeInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference nodeInstance isANodeInstance getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not a NodeInstance."" End ReferenceType NotationProvider",0
1113,1113,,0
354,354,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JPanel Import javax.swing.JScrollPane Import org.argouml.uml.ui.UMLExpressionBodyField Import org.argouml.uml.ui.UMLExpressionLanguageField Import org.argouml.uml.ui.UMLExpressionModel2 Import org.argouml.uml.ui.UMLTimeExpressionModel ClassDeclaration Modifier public /**
 * The properties panel for a TimeEvent.
 *
 * @author oliver.heyden
 */ PropPanelTimeEvent ConstructorDeclaration Modifier public /**
     * The constructor.
     */ PropPanelTimeEvent StatementExpression SuperConstructorInvocation Literal ""label.time.event"" MethodInvocation Literal ""TimeEvent"" lookupIcon MethodDeclaration Modifier public Annotation Override initialize StatementExpression SuperMethodInvocation initialize LocalVariableDeclaration ReferenceType UMLExpressionModel2 VariableDeclarator whenModel ClassCreator ReferenceType UMLTimeExpressionModel This Literal ""when"" LocalVariableDeclaration ReferenceType JPanel VariableDeclarator whenPanel MethodInvocation Literal ""label.when"" createBorderPanel StatementExpression MethodInvocation whenPanel ClassCreator ReferenceType JScrollPane ClassCreator ReferenceType UMLExpressionBodyField MemberReference whenModel Literal true add StatementExpression MethodInvocation whenPanel ClassCreator ReferenceType UMLExpressionLanguageField MemberReference whenModel Literal false add StatementExpression MethodInvocation MemberReference whenPanel add StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelEvent",0
1092,1092,,0
261,261,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.apache.log4j.Logger Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.UMLToDoItem ClassDeclaration Modifier public /**
 * A critic to detect when a state has no outgoing transitions.
 *
 * @author jrobbins
 */ CrMultipleInitialStates FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType CrMultipleInitialStates getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMultipleInitialStates StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""parent"" addTrigger StatementExpression MethodInvocation Literal ""kind"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getInitial getPseudostateKind equalsPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MethodInvocation Model MethodInvocation MemberReference dm getContainer getFacade IfStatement BinaryOperation == MemberReference cs Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""null parent state"" debug ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration BasicType int VariableDeclarator initialStateCount Literal 0 LocalVariableDeclaration ReferenceType Collection VariableDeclarator peers MethodInvocation Model MethodInvocation MemberReference cs getSubvertices getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference peers BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade MethodInvocation Model MethodInvocation getInitial getPseudostateKind equalsPseudostateKind getFacade BlockStatement StatementExpression MemberReference ++ initialStateCount End End IfStatement BinaryOperation > MemberReference initialStateCount Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dm computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr MethodDeclaration /**
     * @param ps the object to check
     * @return the list of offenders
     */ Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object ps LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet MemberReference ps LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MethodInvocation Model MethodInvocation MemberReference ps getContainer getFacade IfStatement BinaryOperation == MemberReference cs Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""null parent in still valid"" debug ReturnStatement MemberReference offs End LocalVariableDeclaration ReferenceType Collection VariableDeclarator peers MethodInvocation Model MethodInvocation MemberReference cs getSubvertices getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference peers BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade MethodInvocation Model MethodInvocation getInitial getPseudostateKind equalsPseudostateKind getFacade BlockStatement StatementExpression MethodInvocation offs MemberReference sv add End End ReturnStatement MemberReference offs MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 4151051235876065649L ReferenceType CrUML",1
1191,1191,,0
142,142,"CompilationUnit PackageDeclaration org.argouml.language.java.generator Import org.argouml.model.CoreFactory Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * A file of information about the Java language.  This is used to
 * fill in the offered data types in variable and operation
 * declarations.
 *
 * In the end, it would be better to have these in XMI files that are
 * loaded at starting time.
*/ JavaUML FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator STRING_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator VOID_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator CHAR_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator INT_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator BOOLEAN_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator BYTE_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator LONG_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator FLOAT_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator DOUBLE_TYPE MethodInvocation createDataType FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator CHAR_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator INT_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator BOOLEAN_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator BYTE_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator LONG_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator FLOAT_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator DOUBLE_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator RECTANGLE_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator POINT_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator COLOR_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator VECTOR_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator HASHTABLE_CLASS MethodInvocation createClass FieldDeclaration Modifier private final static ReferenceType Object VariableDeclarator STACK_CLASS MethodInvocation createClass MethodDeclaration /**
     * Get the CoreFactory.
     *
     * @return CoreFactory
     */ Modifier private static ReferenceType CoreFactory getCore ReturnStatement MethodInvocation Model getCoreFactory MethodDeclaration /**
     * Create a new class.
     *
     * @return a new class
     */ Modifier private static ReferenceType Object createClass ReturnStatement MethodInvocation MethodInvocation createClass getCore MethodDeclaration /**
     * Create a new datatype.
     *
     * @return a new datatype
     */ Modifier private static ReferenceType Object createDataType ReturnStatement MethodInvocation MethodInvocation createDataType getCore StatementExpression MethodInvocation Model MethodInvocation MemberReference STRING_CLASS Literal ""String"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference CHAR_CLASS Literal ""Character"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference INT_CLASS Literal ""Integer"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference BOOLEAN_CLASS Literal ""Boolean"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference BYTE_CLASS Literal ""Byte"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference LONG_CLASS Literal ""Long"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference FLOAT_CLASS Literal ""Float"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference DOUBLE_CLASS Literal ""Double"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference RECTANGLE_CLASS Literal ""Rectangle"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference POINT_CLASS Literal ""Point"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference COLOR_CLASS Literal ""Color"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference VECTOR_CLASS Literal ""Vector"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference HASHTABLE_CLASS Literal ""Hashtable"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference STACK_CLASS Literal ""Stack"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference VOID_TYPE Literal ""void"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference CHAR_TYPE Literal ""char"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference INT_TYPE Literal ""int"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference BOOLEAN_TYPE Literal ""boolean"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference BYTE_TYPE Literal ""byte"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference LONG_TYPE Literal ""long"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference FLOAT_TYPE Literal ""float"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference DOUBLE_TYPE Literal ""double"" setName getCoreHelper",1
994,994,,1
706,706,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Point Import java.awt.Rectangle Import java.awt.event.ActionEvent Import java.util.Collection Import java.util.Iterator Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.ProjectBrowser Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.CommentEdge Import org.argouml.uml.diagram.ArgoDiagram Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.FigPoly Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * Action to add a note aka comment. This action adds a Comment to 0..*
 * modelelements. <p>
 *
 * The modelelements that are present on the current diagram, are connected
 * graphically. All others are only annotated in the model.
 */ ActionAddNote FieldDeclaration /**
     * The default position (x and y) of the new fig.
     */ Modifier private final static BasicType int VariableDeclarator DEFAULT_POS Literal 20 FieldDeclaration /**
     * The distance (x and y) from other figs where we place this.
     */ Modifier private final static BasicType int VariableDeclarator DISTANCE Literal 80 ConstructorDeclaration Modifier public /**
     * The constructor. This action is not global, since it is never disabled.
     */ ActionAddNote StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.new-comment"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.new-comment"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.new-comment"" localize putValue StatementExpression MethodInvocation MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""New Note"" lookupIconResource putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getModelTargets getInstance LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator comment MethodInvocation Model MethodInvocation Literal null MethodInvocation diagram getNamespace buildComment getCoreFactory LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator mgm Cast ReferenceType MutableGraphModel MethodInvocation diagram getGraphModel LocalVariableDeclaration ReferenceType Object VariableDeclarator firstTarget Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation targets iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation diagram MemberReference obj presentationFor IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator destEdge Cast ReferenceType FigEdgeModelElement MemberReference destFig StatementExpression MethodInvocation destEdge makeEdgePort StatementExpression Assignment MemberReference destFig MethodInvocation destEdge getEdgePort = StatementExpression MethodInvocation destEdge calcBounds End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade MethodInvocation Model getFacade BlockStatement IfStatement BinaryOperation == MemberReference firstTarget Literal null BlockStatement StatementExpression Assignment MemberReference firstTarget MemberReference obj = End IfStatement MethodInvocation ! Model MethodInvocation MemberReference comment getAnnotatedElements MethodInvocation MemberReference obj contains getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comment MemberReference obj addAnnotatedElement getCoreHelper End End End StatementExpression MethodInvocation mgm MemberReference comment addNode LocalVariableDeclaration ReferenceType Fig VariableDeclarator noteFig MethodInvocation diagram MemberReference comment presentationFor StatementExpression Assignment MemberReference i MethodInvocation Model MethodInvocation MemberReference comment getAnnotatedElements MethodInvocation iterator getFacade = WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next IfStatement BinaryOperation != MethodInvocation diagram MemberReference obj presentationFor Literal null BlockStatement LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator commentEdge ClassCreator ReferenceType CommentEdge MemberReference comment MemberReference obj StatementExpression MethodInvocation mgm MemberReference commentEdge addEdge LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdge MethodInvocation diagram MemberReference commentEdge presentationFor LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator fp Cast ReferenceType FigPoly MethodInvocation fe getFig StatementExpression MethodInvocation fp Literal true setComplete End End StatementExpression MethodInvocation noteFig MethodInvocation MemberReference diagram MemberReference firstTarget MemberReference noteFig calculateLocation setLocation StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation noteFig getOwner setTarget getInstance MethodDeclaration /**
     * Calculate the position of the comment, based on the 1st target only.
     *
     * @param diagram The Diagram that we are working in.
     * @param firstTarget The object element of the first found comment.
     * @param noteFig The Fig for the comment.
     * @return The position where it should be placed.
     */ Modifier private ReferenceType Point calculateLocation FormalParameter ReferenceType ArgoDiagram diagram FormalParameter ReferenceType Object firstTarget FormalParameter ReferenceType Fig noteFig LocalVariableDeclaration ReferenceType Point VariableDeclarator point ClassCreator ReferenceType Point MemberReference DEFAULT_POS MemberReference DEFAULT_POS IfStatement BinaryOperation == MemberReference firstTarget Literal null BlockStatement ReturnStatement MemberReference point End LocalVariableDeclaration ReferenceType Fig VariableDeclarator elemFig MethodInvocation diagram MemberReference firstTarget presentationFor IfStatement BinaryOperation == MemberReference elemFig Literal null BlockStatement ReturnStatement MemberReference point End IfStatement BinaryOperation instanceof MemberReference elemFig ReferenceType FigEdgeModelElement BlockStatement StatementExpression Assignment MemberReference elemFig Cast ReferenceType FigEdgeModelElement MemberReference elemFig = End IfStatement BinaryOperation instanceof MemberReference elemFig ReferenceType FigNode BlockStatement StatementExpression Assignment MemberReference point x BinaryOperation + BinaryOperation + MethodInvocation elemFig getX MethodInvocation elemFig getWidth MemberReference DISTANCE = StatementExpression Assignment MemberReference point y MethodInvocation elemFig getY = LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator drawingArea MethodInvocation ProjectBrowser MethodInvocation getEditorPane MethodInvocation getBounds getInstance IfStatement BinaryOperation > BinaryOperation + MemberReference point x MethodInvocation noteFig getWidth MethodInvocation drawingArea getX BlockStatement StatementExpression Assignment MemberReference point x BinaryOperation - BinaryOperation - MethodInvocation elemFig getX MethodInvocation noteFig getWidth MemberReference DISTANCE = IfStatement BinaryOperation >= MemberReference point x Literal 0 BlockStatement ReturnStatement MemberReference point End StatementExpression Assignment MemberReference point x MethodInvocation elemFig getX = StatementExpression Assignment MemberReference point y BinaryOperation - BinaryOperation - MethodInvocation elemFig getY MethodInvocation noteFig getHeight MemberReference DISTANCE = IfStatement BinaryOperation >= MemberReference point y Literal 0 BlockStatement ReturnStatement MemberReference point End StatementExpression Assignment MemberReference point y BinaryOperation + BinaryOperation + MethodInvocation elemFig getY MethodInvocation elemFig getHeight MemberReference DISTANCE = IfStatement BinaryOperation > BinaryOperation + MemberReference point y MethodInvocation noteFig getHeight MethodInvocation drawingArea getHeight BlockStatement ReturnStatement ClassCreator ReferenceType Point Literal 0 Literal 0 End End End ReturnStatement MemberReference point FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6502515091619480472L ReferenceType UndoableAction",0
447,447,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.layout Import java.awt.Point Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.FigPoly ClassDeclaration Modifier public /**
 *
 * @author  mkl
 */ ClassdiagramAssociationEdge ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param edge the fig of the edge
     */ ClassdiagramAssociationEdge FormalParameter ReferenceType FigEdge edge StatementExpression SuperConstructorInvocation MemberReference edge FieldDeclaration /**
     * Size of self association edges.
     */ Modifier private final static BasicType int VariableDeclarator SELF_SIZE Literal 30 MethodDeclaration Modifier public layout IfStatement BinaryOperation == MethodInvocation getDestFigNode MethodInvocation getSourceFigNode BlockStatement LocalVariableDeclaration ReferenceType Point VariableDeclarator centerRight MethodInvocation Cast ReferenceType FigNode MethodInvocation getSourceFigNode getCenterRight LocalVariableDeclaration BasicType int VariableDeclarator yoffset BinaryOperation / MethodInvocation MethodInvocation getHeight getSourceFigNode Literal 2 StatementExpression Assignment MemberReference yoffset MethodInvocation java.lang.Math MemberReference SELF_SIZE MemberReference yoffset min = LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator fig MethodInvocation getUnderlyingFig StatementExpression MethodInvocation fig MemberReference centerRight addPoint StatementExpression MethodInvocation fig BinaryOperation + MemberReference centerRight x MemberReference SELF_SIZE MemberReference centerRight y addPoint StatementExpression MethodInvocation fig BinaryOperation + MemberReference centerRight x MemberReference SELF_SIZE BinaryOperation + MemberReference centerRight y MemberReference yoffset addPoint StatementExpression MethodInvocation fig MemberReference centerRight x BinaryOperation + MemberReference centerRight y MemberReference yoffset addPoint StatementExpression MethodInvocation fig Literal false setFilled StatementExpression MethodInvocation fig Literal true setSelfLoop StatementExpression MethodInvocation MethodInvocation MemberReference fig setFig getCurrentEdge End MethodDeclaration /**
     * Return a point which is centered vertically on the right hand edge of the
     * figure.
     * 
     * @param fig
     *            The fig.
     * @return A Point.
     */ Modifier private ReferenceType Point getCenterRight FormalParameter ReferenceType FigNode fig LocalVariableDeclaration ReferenceType Point VariableDeclarator center MethodInvocation fig getCenter ReturnStatement ClassCreator ReferenceType Point BinaryOperation + MemberReference center x BinaryOperation / MethodInvocation fig getWidth Literal 2 MemberReference center y ReferenceType ClassdiagramEdge",1
1448,1448,,0
160,160,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.text.ParseException Import java.util.Collection Import java.util.Map Import java.util.Iterator Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.kernel.ProjectSettings Import org.argouml.model.Model Import org.argouml.notation.providers.AssociationNameNotation ClassDeclaration Modifier public /**
 * Handles the notation of the name of an association modelelement in UML,
 * ie a string on the format:<pre>
 *     [ &lt;&lt; stereotype &gt;&gt;] [+|-|#] [name]
 * </pre>
 * 
 * @author Michiel
 */ AssociationNameNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     * 
     * @param association the association modelelement 
     * that we represent in textual form.
     */ AssociationNameNotationUml FormalParameter ReferenceType Object association StatementExpression SuperConstructorInvocation MemberReference association MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-association-name"" MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation NotationUtilityUml MemberReference modelElement MemberReference text parseModelElement CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.association-name"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal """" IfStatement MethodInvocation Literal ""fullyHandleStereotypes"" MemberReference args isValue BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference modelElement generateStereotypes append End StatementExpression MethodInvocation sb MethodInvocation MemberReference modelElement MemberReference args generateVisibility append IfStatement MethodInvocation Literal ""pathVisible"" MemberReference args isValue BlockStatement StatementExpression MethodInvocation sb MethodInvocation NotationUtilityUml MemberReference modelElement generatePath append End IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation sb MemberReference name append End ReturnStatement MethodInvocation sb toString MethodDeclaration /**
     * @param modelElement the UML element to generate for
     * @return a string which represents the stereotypes
     */ Modifier protected static ReferenceType String generateStereotypes FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 50 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation sb Literal ',' append End IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation sb MethodInvocation Model MethodInvocation MemberReference o getName getFacade append StatementExpression Assignment MemberReference first Literal false = End End LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation project getProjectSettings ReturnStatement TernaryExpression MemberReference first Literal """" BinaryOperation + BinaryOperation + MethodInvocation ps getLeftGuillemot MethodInvocation sb toString MethodInvocation ps getRightGuillemot MethodDeclaration /**
     * @param modelElement the UML element to generate for
     * @param args arguments that influence the generation
     * @return a string representing the visibility
     */ Modifier protected ReferenceType String generateVisibility FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal """" IfStatement MethodInvocation Literal ""visibilityVisible"" MemberReference args isValue BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference modelElement getVisibility getFacade IfStatement BinaryOperation == MemberReference v Literal null BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Model MethodInvocation getPublic getVisibilityKind = End StatementExpression Assignment MemberReference s MethodInvocation NotationUtilityUml MemberReference v generateVisibility = IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference s Literal "" "" = End End ReturnStatement MemberReference s ReferenceType AssociationNameNotation",0
1241,1241,,0
195,195,"CompilationUnit PackageDeclaration org.argouml.model.euml Import java.util.Collection Import org.argouml.model.StateMachinesHelper Import org.eclipse.uml2.uml.State ClassDeclaration /**
 * The implementation of the StateMachinesHelper for EUML2.
 */ StateMachinesHelperEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param implementation
     *            The ModelImplementation.
     */ StateMachinesHelperEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public addDeferrableEvent FormalParameter ReferenceType Object state FormalParameter ReferenceType Object deferrableEvent ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public addSubvertex FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object subvertex ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object findNamespaceForEvent FormalParameter ReferenceType Object trans FormalParameter ReferenceType Object model ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object findOperationByName FormalParameter ReferenceType Object trans FormalParameter ReferenceType String opname ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Collection getAllPossibleStatemachines FormalParameter ReferenceType Object model FormalParameter ReferenceType Object oSubmachineState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Collection getAllPossibleSubvertices FormalParameter ReferenceType Object oState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Collection getAllSubStates FormalParameter ReferenceType Object compState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object trans ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Collection getOutgoingStates FormalParameter ReferenceType Object ostatevertex ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType String getPath FormalParameter ReferenceType Object o ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object trans ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getStateMachine FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getStatebyName FormalParameter ReferenceType String path FormalParameter ReferenceType Object container ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getTop FormalParameter ReferenceType Object sm ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public BasicType boolean isAddingStatemachineAllowed FormalParameter ReferenceType Object context ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public BasicType boolean isTopState FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference o ReferenceType State BinaryOperation == Cast ReferenceType State MemberReference o Literal null MethodDeclaration Modifier public removeDeferrableEvent FormalParameter ReferenceType Object state FormalParameter ReferenceType Object deferrableEvent ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public removeSubvertex FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object subvertex ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setBound FormalParameter ReferenceType Object handle FormalParameter BasicType int bound ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setChangeExpression FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setConcurrent FormalParameter ReferenceType Object handle FormalParameter BasicType boolean concurrent ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setContainer FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object compositeState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setContext FormalParameter ReferenceType Object statemachine FormalParameter ReferenceType Object modelElement ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setDoActivity FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setEffect FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setEntry FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setEventAsTrigger FormalParameter ReferenceType Object transition FormalParameter ReferenceType Object event ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setExit FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setExpression FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setGuard FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object guard ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setInternalTransitions FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection intTrans ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setReferenceState FormalParameter ReferenceType Object o FormalParameter ReferenceType String referenced ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setSource FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object state ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setState FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setStateMachine FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object stm ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setStatemachineAsSubmachine FormalParameter ReferenceType Object oSubmachineState FormalParameter ReferenceType Object oStatemachine ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setSubvertices FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection subvertices ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setTrigger FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object event ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public setWhen FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException ReferenceType StateMachinesHelper",0
864,864,"CompilationUnit PackageDeclaration org.argouml.profile Import java.io.File Import java.util.Collection ClassDeclaration Modifier public /**
 * Represents a profile defined by the user
 *
 * @author Marcos Aurélio
 */ UserDefinedProfile FieldDeclaration Modifier private ReferenceType String VariableDeclarator displayName FieldDeclaration Modifier private ReferenceType File VariableDeclarator modelFile FieldDeclaration Modifier private ReferenceType Collection VariableDeclarator model FieldDeclaration Modifier private BasicType boolean VariableDeclarator fromZargo ConstructorDeclaration Modifier public /**
     * The default constructor for this class
     * 
     * @param file the file from where the model should be read  
     * @throws ProfileException if the profile could not be loaded
     */ UserDefinedProfile FormalParameter ReferenceType File file ProfileException StatementExpression Assignment This MemberReference displayName MethodInvocation file getName = StatementExpression Assignment This MemberReference modelFile MemberReference file = StatementExpression Assignment This MemberReference model ClassCreator MethodInvocation MethodInvocation modelFile getPath loadModel ReferenceType FileModelLoader = StatementExpression Assignment This MemberReference fromZargo Literal false = ConstructorDeclaration Modifier public /**
     * This constructor is used by the persitence subsystem
     * when loading an user defined profile from a zargo file.
     * 
     * @param fileName the fake file name
     * @param theModel the model loaded from the zargo file
     */ UserDefinedProfile FormalParameter ReferenceType String fileName FormalParameter ReferenceType Collection TypeArgument ReferenceType Object theModel StatementExpression Assignment This MemberReference displayName MemberReference fileName = StatementExpression Assignment This MemberReference modelFile ClassCreator ReferenceType File MemberReference fileName = StatementExpression Assignment This MemberReference model MemberReference theModel = StatementExpression Assignment This MemberReference fromZargo Literal true = MethodDeclaration /**
     * @return the string that should represent this profile in the GUI. An
     *         start (*) is placed on it if it comes from the currently opened
     *         zargo file.
     */ Modifier public ReferenceType String getDisplayName ReturnStatement BinaryOperation + MemberReference displayName TernaryExpression MemberReference fromZargo Literal ""*"" Literal """" MethodDeclaration /**
     * Returns null.  This profile has no formatting strategy.
     * @return null.
     */ Modifier public Annotation Override ReferenceType FormatingStrategy getFormatingStrategy ReturnStatement Literal null MethodDeclaration /**
     * Returns null.  This profile has no figure strategy.
     * @return null.
     */ Modifier public Annotation Override ReferenceType FigNodeStrategy getFigureStrategy ReturnStatement Literal null MethodDeclaration /**
     * @return the file passed at the constructor
     */ Modifier public ReferenceType File getModelFile ReturnStatement MemberReference modelFile MethodDeclaration /**
     * @return the name of the model and the file name
     */ Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "" ["" MethodInvocation getModelFile Literal ""]"" MethodDeclaration Modifier public Annotation Override ReferenceType Collection getProfilePackages ReturnStatement MemberReference model ReferenceType Profile",1
1413,1413,,0
967,967,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Collaboration->Interaction.
 *
 */ GoCollaborationToInteraction MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.collaboration.interaction"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isACollaboration getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getInteractions getFacade MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isACollaboration getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",1
1143,1143,,1
254,254,"CompilationUnit PackageDeclaration org.argouml.profile.internal Import java.util.Iterator Import org.argouml.model.Model Import org.argouml.profile.FormatingStrategy ClassDeclaration Modifier public /**
 * The Formating Strategy based on Java naming conventions.
 *
 * @author Marcos Aurélio
 */ JavaFormatingStrategy MethodDeclaration Modifier public ReferenceType String formatElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType String VariableDeclarator value Literal null IfStatement BinaryOperation == MemberReference element Literal null BlockStatement StatementExpression Assignment MemberReference value Literal """" = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elementNs MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference element isAAssociationEnd getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation Model MethodInvocation MemberReference element getAssociation getFacade IfStatement BinaryOperation != MemberReference assoc Literal null BlockStatement StatementExpression Assignment MemberReference elementNs MethodInvocation Model MethodInvocation MemberReference assoc getNamespace getFacade = End End IfStatement BinaryOperation == MemberReference elementNs MemberReference namespace BlockStatement StatementExpression Assignment MemberReference value MethodInvocation Model MethodInvocation MemberReference element getName getFacade = IfStatement BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation == MethodInvocation value length Literal 0 BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference element MemberReference namespace defaultName = End BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator pathSep MethodInvocation getPathSeparator StatementExpression MethodInvocation MemberReference buffer MemberReference element MemberReference pathSep buildPath StatementExpression Assignment MemberReference value MethodInvocation buffer toString = End End ReturnStatement MemberReference value MethodDeclaration /**
     * @param assocEnd the given association end name
     * @param namespace the namespace
     * @return the default name for the given associationend
     */ Modifier protected ReferenceType String defaultAssocEndName FormalParameter ReferenceType Object assocEnd FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference assocEnd getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference type MemberReference namespace formatElement = BlockStatement StatementExpression Assignment MemberReference name Literal ""unknown type"" = End LocalVariableDeclaration ReferenceType Object VariableDeclarator mult MethodInvocation Model MethodInvocation MemberReference assocEnd getMultiplicity getFacade IfStatement BinaryOperation != MemberReference mult Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer MemberReference name StatementExpression MethodInvocation buf Literal ""["" append StatementExpression MethodInvocation buf MethodInvocation Integer MethodInvocation Model MethodInvocation MemberReference mult getLower getFacade toString append StatementExpression MethodInvocation buf Literal "".."" append LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation Model MethodInvocation MemberReference mult getUpper getFacade IfStatement BinaryOperation >= MemberReference upper Literal 0 BlockStatement StatementExpression MethodInvocation buf MethodInvocation Integer MemberReference upper toString append BlockStatement StatementExpression MethodInvocation buf Literal ""*"" append End StatementExpression MethodInvocation buf Literal ""]"" append StatementExpression Assignment MemberReference name MethodInvocation buf toString = End ReturnStatement MemberReference name MethodDeclaration /**
     * Create a default association name from its ends.
     *
     * @param assoc the given association
     * @param ns the namespace
     * @return the default association name
     */ Modifier protected ReferenceType String defaultAssocName FormalParameter ReferenceType Object assoc FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference assoc getConnections MethodInvocation iterator getFacade ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation iter hasNext MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ""-"" append End StatementExpression MethodInvocation buf MethodInvocation MethodInvocation iter next MemberReference ns defaultAssocEndName append End ReturnStatement MethodInvocation buf toString MethodDeclaration /**
     * @param gen the given Generalization
     * @param namespace the namespace
     * @return the default generalization name
     */ Modifier protected ReferenceType String defaultGeneralizationName FormalParameter ReferenceType Object gen FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation Model MethodInvocation MemberReference gen getSpecific getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference gen getGeneral getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation MemberReference child MemberReference namespace formatElement append StatementExpression MethodInvocation buf Literal "" extends "" append StatementExpression MethodInvocation buf MethodInvocation MemberReference parent MemberReference namespace formatElement append ReturnStatement MethodInvocation buf toString MethodDeclaration /**
     * @param element the given modelelement
     * @param namespace the namespace
     * @return a default name for this modelelement
     */ Modifier protected ReferenceType String defaultName FormalParameter ReferenceType Object element FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference element isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference element MemberReference namespace defaultAssocEndName = BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference element MemberReference namespace defaultAssocName = End IfStatement MethodInvocation Model MethodInvocation MemberReference element isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference element MemberReference namespace defaultGeneralizationName = End End IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal ""anon"" = End ReturnStatement MemberReference name MethodDeclaration /**
     * @return the path separator (currently ""."")
     */ Modifier protected ReferenceType String getPathSeparator ReturnStatement Literal ""."" MethodDeclaration /**
     * @param buffer (out) the buffer that will contain the path build
     * @param element the given modelelement
     * @param pathSep the path separator character(s)
     */ Modifier private buildPath FormalParameter ReferenceType StringBuffer buffer FormalParameter ReferenceType Object element FormalParameter ReferenceType String pathSep IfStatement BinaryOperation != MemberReference element Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null BinaryOperation != MemberReference parent MemberReference element BlockStatement StatementExpression MethodInvocation MemberReference buffer MemberReference parent MemberReference pathSep buildPath StatementExpression MethodInvocation buffer MemberReference pathSep append End LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference element getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference element Literal null defaultName = End StatementExpression MethodInvocation buffer MemberReference name append End MethodDeclaration /**
     * @return the string that separates elements
     */ Modifier protected ReferenceType String getElementSeparator ReturnStatement Literal "", "" MethodDeclaration /**
     * @return the string that represents an empty collection
     */ Modifier protected ReferenceType String getEmptyCollection ReturnStatement Literal ""[empty]"" MethodDeclaration Modifier public ReferenceType String formatCollection FormalParameter ReferenceType Iterator iter FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType String VariableDeclarator value Literal null IfStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator elementSep MethodInvocation getElementSeparator LocalVariableDeclaration ReferenceType Object VariableDeclarator obj Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation iter hasNext MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buffer MemberReference elementSep append End StatementExpression Assignment MemberReference obj MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade BlockStatement StatementExpression MethodInvocation buffer MethodInvocation MemberReference obj MemberReference namespace formatElement append BlockStatement StatementExpression MethodInvocation buffer MethodInvocation obj toString append End End StatementExpression Assignment MemberReference value MethodInvocation buffer toString = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation getEmptyCollection = End ReturnStatement MemberReference value ReferenceType FormatingStrategy",0
1209,1209,,0
684,684,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.event.MouseEvent Import java.util.Iterator Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.diagram.activity.ui.SelectionActionState Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigCircle ClassDeclaration Modifier public /**
 * Class to display graphics for a UML FinalState in a diagram.
 *
 * @author ics125b spring 98
 */ FigFinalState FieldDeclaration Modifier private final static BasicType int VariableDeclarator X Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator Y Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator WIDTH Literal 24 FieldDeclaration Modifier private final static BasicType int VariableDeclarator HEIGHT Literal 24 FieldDeclaration Modifier private ReferenceType FigCircle VariableDeclarator inCircle ConstructorDeclaration Modifier public /**
     * The main constructor.
     */ FigFinalState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal false setEditable LocalVariableDeclaration ReferenceType Color VariableDeclarator handleColor MethodInvocation Globals MethodInvocation getHandleColor getPrefs LocalVariableDeclaration ReferenceType FigCircle VariableDeclarator bigPort ClassCreator ReferenceType FigCircle MemberReference X MemberReference Y MemberReference WIDTH MemberReference HEIGHT MemberReference Color black MemberReference Color white StatementExpression Assignment MemberReference inCircle ClassCreator ReferenceType FigCircle BinaryOperation + MemberReference X Literal 5 BinaryOperation + MemberReference Y Literal 5 BinaryOperation - MemberReference WIDTH Literal 10 BinaryOperation - MemberReference HEIGHT Literal 10 MemberReference handleColor MemberReference Color black = StatementExpression MethodInvocation bigPort Literal 1 setLineWidth StatementExpression MethodInvocation inCircle Literal 0 setLineWidth StatementExpression MethodInvocation MemberReference bigPort addFig StatementExpression MethodInvocation MemberReference inCircle addFig StatementExpression MethodInvocation MemberReference bigPort setBigPort StatementExpression MethodInvocation Literal false setBlinkPorts ConstructorDeclaration Modifier public /**
     * The constructor that hooks the Fig into the UML element.
     * @param gm ignored
     * @param node the UML element
     */ FigFinalState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigFinalState VariableDeclarator figClone Cast ReferenceType FigFinalState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigCircle MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone inCircle Cast ReferenceType FigCircle MethodInvocation it next = ReturnStatement MemberReference figClone MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection LocalVariableDeclaration ReferenceType Object VariableDeclarator pstate MethodInvocation getOwner LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel Literal null IfStatement BinaryOperation != MemberReference pstate Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference pstate getContainer getFacade getStateMachine getFacade isAActivityGraph getFacade BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType SelectionActionState This = StatementExpression Cast ReferenceType SelectionActionState MemberReference sel BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType SelectionState This = StatementExpression Cast ReferenceType SelectionState MemberReference sel End End ReturnStatement MemberReference sel MethodDeclaration /**
     * Final states are fixed size.
     * @return false
     * @see org.tigris.gef.presentation.Fig#isResizable()
     */ Modifier public Annotation Override BasicType boolean isResizable ReturnStatement Literal false MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation MethodInvocation MemberReference col setLineColor getBigPort MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation MethodInvocation getLineColor getBigPort MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation inCircle MemberReference col setFillColor MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation inCircle getFillColor MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f MethodDeclaration Modifier public Annotation Override BasicType boolean getFilled ReturnStatement Literal true MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation MethodInvocation MemberReference w setLineWidth getBigPort MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation MethodInvocation getLineWidth getBigPort MethodDeclaration Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent me FieldDeclaration /**
     * The UID.
     */ Modifier final static BasicType long VariableDeclarator serialVersionUID Literal - 3506578343969467480L MethodDeclaration /**
     * Return a list of gravity points around the outer circle. Used in place of
     * the default bounding box.
     *
     * {@inheritDoc}
     */ Modifier public Annotation Override ReferenceType List getGravityPoints ReturnStatement MethodInvocation getCircleGravityPoints ReferenceType FigStateVertex",0
64,64,"CompilationUnit PackageDeclaration org.argouml.notation.providers.java Import java.util.Map Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.model.Model Import org.argouml.notation.providers.AssociationEndNameNotation Import org.argouml.notation.providers.uml.NotationUtilityUml ClassDeclaration Modifier public /**
 * The Java notation for an associationend name (i.e. the  role).
 * 
 * @author michiel
 */ AssociationEndNameNotationJava FieldDeclaration Modifier private final static ReferenceType AssociationEndNameNotationJava VariableDeclarator INSTANCE ClassCreator ReferenceType AssociationEndNameNotationJava MethodDeclaration /**
	 * Create a new instance of AssociationEndNameNotationUml
	 * @return the notation
	 */ Modifier public final static ReferenceType AssociationEndNameNotationJava getInstance ReturnStatement MemberReference INSTANCE ConstructorDeclaration Modifier protected /**
     * The constructor.
     */ AssociationEndNameNotationJava StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""Parsing in Java not yet supported"" MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This Literal ""Parsing in Java not yet supported"" fireEvent MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal """" = End LocalVariableDeclaration ReferenceType Object VariableDeclarator visi MethodInvocation Model MethodInvocation MemberReference modelElement getVisibility getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator visibility Literal """" IfStatement BinaryOperation != MemberReference visi Literal null BlockStatement StatementExpression Assignment MemberReference visibility MethodInvocation NotationUtilityJava MemberReference visi generateVisibility = End IfStatement BinaryOperation < MethodInvocation name length Literal 1 BlockStatement StatementExpression Assignment MemberReference visibility Literal """" = End LocalVariableDeclaration ReferenceType String VariableDeclarator stereoString MethodInvocation NotationUtilityUml MemberReference modelElement generateStereotype ReturnStatement BinaryOperation + BinaryOperation + MemberReference stereoString MemberReference visibility MemberReference name ReferenceType AssociationEndNameNotation",1
179,179,"CompilationUnit PackageDeclaration org.argouml.model ClassDeclaration Modifier public abstract /**
 * An abstract Decorator for the {@link DataTypesHelper}.
 *
 * @author Bob Tarling
 */ AbstractDataTypesHelperDecorator FieldDeclaration /**
     * The component.
     */ Modifier private ReferenceType DataTypesHelper VariableDeclarator impl ConstructorDeclaration Modifier protected /**
     * @param component The component to decorate.
     */ AbstractDataTypesHelperDecorator FormalParameter ReferenceType DataTypesHelper component StatementExpression Assignment MemberReference impl MemberReference component = MethodDeclaration /**
     * The component we are decorating.
     *
     * @return Returns the component.
     */ Modifier protected ReferenceType DataTypesHelper getComponent ReturnStatement MemberReference impl MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" copyTaggedValues FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to StatementExpression MethodInvocation impl MemberReference from MemberReference to copyTaggedValues MethodDeclaration Modifier public BasicType boolean equalsINITIALKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsINITIALKind MethodDeclaration Modifier public BasicType boolean equalsDeepHistoryKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsDeepHistoryKind MethodDeclaration Modifier public BasicType boolean equalsShallowHistoryKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsShallowHistoryKind MethodDeclaration Modifier public BasicType boolean equalsFORKKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsFORKKind MethodDeclaration Modifier public BasicType boolean equalsJOINKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsJOINKind MethodDeclaration Modifier public BasicType boolean equalsCHOICEKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsCHOICEKind MethodDeclaration Modifier public BasicType boolean equalsJUNCTIONKind FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind equalsJUNCTIONKind MethodDeclaration Modifier public ReferenceType String multiplicityToString FormalParameter ReferenceType Object multiplicity ReturnStatement MethodInvocation impl MemberReference multiplicity multiplicityToString MethodDeclaration Modifier public ReferenceType Object setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType String body ReturnStatement MethodInvocation impl MemberReference handle MemberReference body setBody MethodDeclaration Modifier public ReferenceType String getBody FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle getBody MethodDeclaration Modifier public ReferenceType Object setLanguage FormalParameter ReferenceType Object handle FormalParameter ReferenceType String language ReturnStatement MethodInvocation impl MemberReference handle MemberReference language setLanguage MethodDeclaration Modifier public ReferenceType String getLanguage FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle getLanguage ReferenceType DataTypesHelper",1
633,633,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.activity.ui Import java.awt.Color Import java.awt.Dimension Import java.awt.Rectangle Import java.beans.PropertyChangeEvent Import java.util.Iterator Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.Model Import org.argouml.uml.diagram.state.ui.FigStateVertex Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigLine Import org.tigris.gef.presentation.FigRRect Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML SubactivityState in a diagram.
 *
 * @author MVW
 */ FigSubactivityState FieldDeclaration Modifier private final static BasicType int VariableDeclarator PADDING Literal 8 FieldDeclaration Modifier private final static BasicType int VariableDeclarator X Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator Y Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator W Literal 90 FieldDeclaration Modifier private final static BasicType int VariableDeclarator H Literal 25 FieldDeclaration Modifier private final static BasicType int VariableDeclarator SX Literal 3 FieldDeclaration Modifier private final static BasicType int VariableDeclarator SY Literal 3 FieldDeclaration Modifier private final static BasicType int VariableDeclarator SW Literal 9 FieldDeclaration Modifier private final static BasicType int VariableDeclarator SH Literal 5 FieldDeclaration Modifier private ReferenceType FigRRect VariableDeclarator cover FieldDeclaration Modifier private ReferenceType FigRRect VariableDeclarator s1 FieldDeclaration Modifier private ReferenceType FigRRect VariableDeclarator s2 FieldDeclaration Modifier private ReferenceType FigLine VariableDeclarator s3 ConstructorDeclaration Modifier public /**
     * Main Constructor (called from file loading).
     */ FigSubactivityState LocalVariableDeclaration ReferenceType FigRRect VariableDeclarator bigPort ClassCreator ReferenceType FigRRect MemberReference X MemberReference Y MemberReference W MemberReference H MemberReference Color cyan MemberReference Color cyan StatementExpression MethodInvocation bigPort BinaryOperation / MethodInvocation bigPort getHeight Literal 2 setCornerRadius StatementExpression Assignment MemberReference cover ClassCreator ReferenceType FigRRect MemberReference X MemberReference Y MemberReference W MemberReference H MemberReference Color black MemberReference Color white = StatementExpression MethodInvocation cover BinaryOperation / MethodInvocation getHeight Literal 2 setCornerRadius StatementExpression MethodInvocation bigPort Literal 0 setLineWidth StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + Literal 10 MemberReference PADDING Literal 10 BinaryOperation - Literal 90 BinaryOperation * MemberReference PADDING Literal 2 Literal 25 setBounds getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference FigText INSERT setReturnAction getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setEditable getNameFig StatementExpression MethodInvocation MemberReference bigPort addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation BinaryOperation + MemberReference X MemberReference W MemberReference Y makeSubStatesIcon StatementExpression MethodInvocation MemberReference bigPort setBigPort LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds MethodDeclaration /**
     * @param x the x-coordinate of the right corner
     * @param y the y coordinate of the bottom corner
     */ Modifier private makeSubStatesIcon FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression Assignment MemberReference s1 ClassCreator ReferenceType FigRRect BinaryOperation - MemberReference x Literal 22 BinaryOperation + MemberReference y Literal 3 Literal 8 Literal 6 MemberReference Color black MemberReference Color white = StatementExpression Assignment MemberReference s2 ClassCreator ReferenceType FigRRect BinaryOperation - MemberReference x Literal 11 BinaryOperation + MemberReference y Literal 9 Literal 8 Literal 6 MemberReference Color black MemberReference Color white = StatementExpression MethodInvocation s1 Literal true setFilled StatementExpression MethodInvocation s2 Literal true setFilled StatementExpression MethodInvocation s1 Literal 1 setLineWidth StatementExpression MethodInvocation s2 Literal 1 setLineWidth StatementExpression MethodInvocation s1 MemberReference SH setCornerRadius StatementExpression MethodInvocation s2 MemberReference SH setCornerRadius StatementExpression Assignment MemberReference s3 ClassCreator ReferenceType FigLine BinaryOperation - MemberReference x Literal 18 BinaryOperation + MemberReference y Literal 6 BinaryOperation - MemberReference x Literal 7 BinaryOperation + MemberReference y Literal 12 MemberReference Color black = StatementExpression MethodInvocation MemberReference s3 addFig StatementExpression MethodInvocation MemberReference s1 addFig StatementExpression MethodInvocation MemberReference s2 addFig ConstructorDeclaration Modifier public /**
     * Constructor that hooks the Fig into
     * an existing UML model element.
     *
     * @param gm ignored!
     * @param node owner, i.e. the UML element
     */ FigSubactivityState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSubactivityState VariableDeclarator figClone Cast ReferenceType FigSubactivityState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MemberReference nameDim width BinaryOperation * MemberReference PADDING Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + MemberReference nameDim height MemberReference PADDING ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation Math MemberReference w BinaryOperation / MemberReference W Literal 2 max MethodInvocation Math MemberReference h BinaryOperation / MemberReference H Literal 2 max MethodDeclaration Modifier protected Annotation Override setStandardBounds FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference PADDING MemberReference y BinaryOperation - MemberReference w BinaryOperation * MemberReference PADDING Literal 2 BinaryOperation - MemberReference h MemberReference PADDING setBounds getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression Cast ReferenceType FigRRect MethodInvocation getBigPort StatementExpression MethodInvocation cover MemberReference h setCornerRadius StatementExpression MethodInvocation s1 BinaryOperation - BinaryOperation + MemberReference x MemberReference w BinaryOperation * Literal 2 BinaryOperation + MemberReference SX MemberReference SW BinaryOperation - BinaryOperation + MemberReference y MemberReference h BinaryOperation * Literal 1 BinaryOperation + MemberReference SY MemberReference SH MemberReference SW MemberReference SH setBounds StatementExpression MethodInvocation s2 BinaryOperation - BinaryOperation + MemberReference x MemberReference w BinaryOperation * Literal 1 BinaryOperation + MemberReference SX MemberReference SW BinaryOperation - BinaryOperation + MemberReference y MemberReference h BinaryOperation * Literal 2 BinaryOperation + MemberReference SY MemberReference SH MemberReference SW MemberReference SH setBounds StatementExpression MethodInvocation s3 BinaryOperation - BinaryOperation + MemberReference x MemberReference w BinaryOperation + BinaryOperation + BinaryOperation * MemberReference SX Literal 2 MemberReference SW BinaryOperation / MemberReference SW Literal 2 BinaryOperation - BinaryOperation + MemberReference y MemberReference h BinaryOperation + MemberReference SY BinaryOperation / MemberReference SH Literal 2 BinaryOperation - BinaryOperation + MemberReference x MemberReference w BinaryOperation + MemberReference SX BinaryOperation / MemberReference SW Literal 2 BinaryOperation - BinaryOperation + MemberReference y MemberReference h BinaryOperation + BinaryOperation + BinaryOperation * MemberReference SY Literal 2 MemberReference SH BinaryOperation / MemberReference SH Literal 2 setShape StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setFillColor MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation cover getFillColor MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled MethodDeclaration Modifier public Annotation Override BasicType boolean getFilled ReturnStatement MethodInvocation cover isFilled MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation cover MemberReference w setLineWidth MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation cover getLineWidth MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mee ReferenceType AssociationChangeEvent BinaryOperation instanceof MemberReference mee ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation renderingChanged StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners End MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation removeAllElementListeners End IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MemberReference newOwner getSubmachine getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement StatementExpression MethodInvocation MemberReference machine addElementListener End End MethodDeclaration Modifier protected Annotation Override updateNameText LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal """" IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MethodInvocation getOwner getSubmachine getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement StatementExpression Assignment MemberReference s MethodInvocation Model MethodInvocation MemberReference machine getName getFacade = End End IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s Literal """" = End StatementExpression MethodInvocation MethodInvocation MemberReference s setText getNameFig ReferenceType FigStateVertex",0
993,993,,1
445,445,"CompilationUnit PackageDeclaration org.argouml.application Import org.apache.log4j.Logger Import org.argouml.application.api.Argo Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.cognitive.Designer Import org.argouml.configuration.Configuration Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.language.java.cognitive.critics.InitJavaCritics Import org.argouml.model.Model Import org.argouml.pattern.cognitive.critics.InitPatternCritics Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.critics.ChildGenUML Import org.argouml.uml.cognitive.critics.InitCognitiveCritics ClassDeclaration Modifier public /**
 * StartCritics is a thread which helps to start the critiquing thread.
 */ StartCritics FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType StartCritics getLogger MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Designer VariableDeclarator dsgr MethodInvocation Designer theDesigner StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitCognitiveCritics initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitJavaCritics initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitPatternCritics initSubsystem StatementExpression MethodInvocation org.argouml.uml.cognitive.checklist.Init init LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation dsgr MethodInvocation ResourceLoaderWrapper Literal ""PostItD0"" lookupIconResource setClarifier StatementExpression MethodInvocation dsgr MethodInvocation Configuration MemberReference Argo KEY_USER_FULLNAME getString setDesignerName StatementExpression MethodInvocation Configuration MemberReference Argo KEY_USER_FULLNAME MemberReference dsgr addListener StatementExpression MethodInvocation dsgr MemberReference p spawnCritiquer StatementExpression MethodInvocation dsgr ClassCreator ReferenceType ChildGenUML setChildGenerator ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getUserDefinedModelList BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference dsgr MemberReference model addModelEventListener getPump End StatementExpression MethodInvocation LOG Literal ""spawned critiquing thread"" info StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision CLASS_SELECTION startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision BEHAVIOR startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision NAMING startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision STORAGE startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision INHERITANCE startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision CONTAINMENT startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision PLANNED_EXTENSIONS startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision STATE_MACHINES startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision PATTERNS startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision RELATIONSHIPS startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision INSTANCIATION startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision MODULARITY startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision EXPECTED_USAGE startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision METHODS startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision CODE_GEN startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision STEREOTYPES startConsidering getDecisionModel StatementExpression MethodInvocation Designer Literal true setUserWorking ReferenceType Runnable",1
1362,1362,,0
1588,1588,,1
905,905,"CompilationUnit PackageDeclaration org.argouml.cognitive.critics Import java.io.Serializable Import java.util.Date Import org.apache.log4j.Logger ClassDeclaration Modifier public /**
 * A Critic can be disabled for a certain amount of time by giving it
 * the snooze command.  Whereas most ControlMech's activate or deactivate
 * Critic's based on evidence of the Designer's state of mind, this
 * command allows the Designer to disable Critic's without stating any
 * reason.  However, after a period of time, the critic may become
 * active again.  We think this will often be convienent because
 * Designer's have a lot of tacit knowledge about their own state of
 * mind that is not worth making explicit.
 *
 * @author Jason Robbins
 */ SnoozeOrder FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType SnoozeOrder getLogger FieldDeclaration /**
     * The initial sleeping time.
     *
     * Ten minutes.
     */ Modifier private final static BasicType long VariableDeclarator INITIAL_INTERVAL_MS BinaryOperation * BinaryOperation * Literal 1000 Literal 60 Literal 10 FieldDeclaration /**
     * Critic should sleep until this time.
     */ Modifier private ReferenceType Date VariableDeclarator snoozeUntil FieldDeclaration /**
     * If the designer snoozees the critics again before this time, then
     * go to sleep for even longer.
     */ Modifier private ReferenceType Date VariableDeclarator snoozeAgain FieldDeclaration /**
     * The sleeping time, including the effects of repeated snoozeing.
     */ Modifier private BasicType long VariableDeclarator interval FieldDeclaration Modifier private ReferenceType Date VariableDeclarator now ClassCreator ReferenceType Date MethodDeclaration Modifier private ReferenceType Date getNow StatementExpression MethodInvocation now MethodInvocation System currentTimeMillis setTime ReturnStatement MemberReference now ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ SnoozeOrder StatementExpression Assignment MemberReference snoozeUntil ClassCreator ReferenceType Date Literal 0 = StatementExpression Assignment MemberReference snoozeAgain ClassCreator ReferenceType Date Literal 0 = MethodDeclaration /**
     * @return true if snoozed
     */ Modifier public BasicType boolean getSnoozed ReturnStatement MethodInvocation snoozeUntil MethodInvocation getNow after MethodDeclaration /**
     * @param h if true, then snooze, else unsnooze
     */ Modifier public setSnoozed FormalParameter BasicType boolean h IfStatement MemberReference h BlockStatement StatementExpression MethodInvocation snooze BlockStatement StatementExpression MethodInvocation unsnooze End MethodDeclaration /**
     * Snooze the critic.
     */ Modifier public snooze IfStatement MethodInvocation snoozeAgain MethodInvocation getNow after BlockStatement StatementExpression Assignment MemberReference interval MethodInvocation MemberReference interval nextInterval = BlockStatement StatementExpression Assignment MemberReference interval MemberReference INITIAL_INTERVAL_MS = End LocalVariableDeclaration BasicType long VariableDeclarator n MethodInvocation MethodInvocation getTime getNow StatementExpression MethodInvocation snoozeUntil BinaryOperation + MemberReference n MemberReference interval setTime StatementExpression MethodInvocation snoozeAgain BinaryOperation + BinaryOperation + MemberReference n MemberReference interval MemberReference INITIAL_INTERVAL_MS setTime StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Setting snooze order to: "" MethodInvocation snoozeUntil toString info MethodDeclaration /**
     * Unsnooze the critic.
     */ Modifier public unsnooze StatementExpression Assignment MemberReference snoozeUntil ClassCreator ReferenceType Date Literal 0 = MethodDeclaration /**
     * @param last the previous interval
     * @return the next longer interval
     */ Modifier protected BasicType long nextInterval FormalParameter BasicType long last ReturnStatement BinaryOperation * MemberReference last Literal 2 FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7133285313405407967L ReferenceType Serializable",1
777,777,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram ClassDeclaration Modifier public /**
 * Rule for Operation->Collaboration Diagram.
 *
 * @since Oct 7, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ GoOperationToCollaborationDiagram MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator operation MemberReference parent LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference operation getCollaborations getFacade LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ArgoDiagram VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType ArgoDiagram LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation p getDiagramList BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference diagram ReferenceType UMLCollaborationDiagram MethodInvocation col Cast ReferenceType UMLCollaborationDiagram MemberReference diagram contains BlockStatement StatementExpression MethodInvocation ret MemberReference diagram add End End ReturnStatement MemberReference ret End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.operation.collaboration-diagram"" localize ReferenceType AbstractPerspectiveRule",1
1229,1229,,0
1613,1613,,0
1334,1334,,0
1086,1086,,1
148,148,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui ClassDeclaration Modifier public abstract /**
 * The UML 2.0 Profile specification allows three visualizations for the 
 * stereotypes applied on a model element:
 * 
 * <ul>
 * <li>The stereotype name in guilmets (<< >>'s)</li>
 * <li>An icon replacing the default visualization</li>
 * <li>A small icon flying over the default visualization</li>
 * </ul>
 * 
 * An popup submenu is provided in order to allow the user switching between
 * these modes. This class keeps the code that should be commonly shared
 * among all the visualization options.
 * 
 * @see FigNodeModelElement#getPopUpActions(java.awt.event.MouseEvent)
 *  
 * @author maurelio1234
 */ ActionStereotypeView FieldDeclaration Modifier private ReferenceType FigNodeModelElement VariableDeclarator targetNode FieldDeclaration Modifier private BasicType int VariableDeclarator selectedStereotypeView ConstructorDeclaration Modifier public /**
     * The default constructor for this class
     * 
     * @param node the selected node 
     * @param key  the internationalization key used to label this action
     * @param stereotypeView the stereotype view that is activated when this 
     * 		action is triggered
     */ ActionStereotypeView FormalParameter ReferenceType FigNodeModelElement node FormalParameter ReferenceType String key FormalParameter BasicType int stereotypeView StatementExpression SuperConstructorInvocation MemberReference key Literal false StatementExpression Assignment This MemberReference targetNode MemberReference node = StatementExpression Assignment This MemberReference selectedStereotypeView MemberReference stereotypeView = StatementExpression MethodInvocation updateSelection MethodDeclaration Modifier private updateSelection StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean BinaryOperation == MethodInvocation targetNode getStereotypeView MemberReference selectedStereotypeView valueOf putValue MethodDeclaration /**
     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
     */ toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation targetNode MemberReference selectedStereotypeView setStereotypeView StatementExpression MethodInvocation updateSelection MethodDeclaration /**
     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
     */ ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType FigNodeModelElement BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType FigNodeModelElement MemberReference t valueOf BlockStatement ReturnStatement MemberReference t End ReferenceType AbstractActionRadioMenuItem",1
1250,1250,,0
1299,1299,,0
283,283,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import javax.swing.JComboBox Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.diagram.ui.ActionAddMessage Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLComboBox2 Import org.argouml.uml.ui.UMLComboBoxNavigator Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.foundation.core.PropPanelAssociation ClassDeclaration Modifier public /**
 * The properties panel for an AssociationRole.
 */ PropPanelAssociationRole FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 7693759162647306494L ConstructorDeclaration Modifier public /**
     * Construct a property panel for an AssociationRole.
     */ PropPanelAssociationRole StatementExpression SuperConstructorInvocation Literal ""label.association-role-title"" StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator baseComboBox ClassCreator ReferenceType UMLComboBox2 ClassCreator ReferenceType UMLAssociationRoleBaseComboBoxModel ClassCreator ReferenceType ActionSetAssociationRoleBase StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.base"" localize ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator Literal ""label.association.navigate.tooltip"" localize MemberReference baseComboBox addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType JList VariableDeclarator assocEndList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationRoleAssociationEndRoleListModel StatementExpression MethodInvocation assocEndList Literal 2 setVisibleRowCount StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.associationrole-ends"" localize ClassCreator ReferenceType JScrollPane MemberReference assocEndList addField LocalVariableDeclaration ReferenceType JList VariableDeclarator messageList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationRoleMessageListModel StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.messages"" localize ClassCreator ReferenceType JScrollPane MemberReference messageList addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation MethodInvocation ActionAddMessage getTargetFollower addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelAssociation",1
111,111,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Dimension Import java.awt.FlowLayout Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.io.File Import java.util.ArrayList Import java.util.List Import javax.swing.BoxLayout Import javax.swing.JButton Import javax.swing.JFileChooser Import javax.swing.JLabel Import javax.swing.JList Import javax.swing.JOptionPane Import javax.swing.JPanel Import javax.swing.ListModel Import javax.swing.event.ListDataEvent Import javax.swing.event.ListDataListener Import javax.swing.filechooser.FileFilter Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.profile.Profile Import org.argouml.kernel.ProfileConfiguration Import org.argouml.profile.ProfileException Import org.argouml.profile.ProfileManager Import org.argouml.profile.ProfileFacade Import org.argouml.profile.UserDefinedProfile ClassDeclaration Modifier public /**
 * The Tab where new profiles can be added and the registered
 * ones can be activated or deactivated on current project
 *
 * @author Marcos Aurélio
 */ ProfileSelectionTab FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator loadFromFile ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""tab.profiles.userdefined.load"" localize FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator unregisterProfile ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""tab.profiles.userdefined.unload"" localize FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator addButton ClassCreator ReferenceType JButton Literal "">>"" FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator removeButton ClassCreator ReferenceType JButton Literal ""<<"" FieldDeclaration Modifier private ReferenceType JList VariableDeclarator availableList ClassCreator ReferenceType JList ClassCreator ReferenceType AvailableProfilesListModel FieldDeclaration Modifier private ReferenceType JList VariableDeclarator usedList ClassCreator ReferenceType JList ClassCreator ReferenceType UsedProfilesListModel ClassDeclaration Modifier private /**
     * This List contains the registered profiles that have not been applied
     * to the current project  
     * 
     * @author maurelio1234
     */ AvailableProfilesListModel FieldDeclaration Modifier private ReferenceType ProfileManager VariableDeclarator profileManager MethodInvocation ProfileFacade getManager FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ListDataListener VariableDeclarator listeners ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ListDataListener MethodDeclaration /**
         * @param arg0
         * @see javax.swing.ListModel#addListDataListener(javax.swing.event.ListDataListener)
         */ Modifier public addListDataListener FormalParameter ReferenceType ListDataListener arg0 StatementExpression MethodInvocation listeners MemberReference arg0 add MethodDeclaration /**
	 * Fire listeners 
	 */ Modifier public fireListeners LocalVariableDeclaration ReferenceType ListDataEvent VariableDeclarator evt ClassCreator ReferenceType ListDataEvent This MemberReference ListDataEvent CONTENTS_CHANGED Literal 0 MethodInvocation getSize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation listeners size MemberReference ++ i BlockStatement StatementExpression MethodInvocation listeners MethodInvocation MemberReference evt contentsChanged MemberReference i get End MethodDeclaration /**
	 * @param n the profile to be returned
	 * @return the n-th profile at the registered profiles list
	 */ Modifier public ReferenceType Profile getProfileAt FormalParameter BasicType int n LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator config MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager LocalVariableDeclaration ReferenceType List VariableDeclarator registeredProfiles MethodInvocation profileManager getRegisteredProfiles LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation registeredProfiles size MemberReference ++ i BlockStatement IfStatement MethodInvocation ! config MethodInvocation MethodInvocation registeredProfiles MemberReference i get contains getProfiles BlockStatement IfStatement BinaryOperation == MemberReference count MemberReference n BlockStatement ReturnStatement Cast ReferenceType Profile MethodInvocation registeredProfiles MemberReference i get End StatementExpression MemberReference ++ count End End ReturnStatement Literal null MethodDeclaration /**
	 * @param arg0
	 * @return the arg0-th element of this list
	 * @see javax.swing.ListModel#getElementAt(int)
	 */ Modifier public ReferenceType Object getElementAt FormalParameter BasicType int arg0 LocalVariableDeclaration ReferenceType Profile VariableDeclarator p MethodInvocation MemberReference arg0 getProfileAt IfStatement BinaryOperation != MemberReference p Literal null BlockStatement ReturnStatement MethodInvocation p getDisplayName BlockStatement ReturnStatement Literal null End MethodDeclaration /**
	 * @return the amount of registered profiles not applied to current 
	 * 		project
	 * @see javax.swing.ListModel#getSize()
	 */ Modifier public BasicType int getSize LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator config MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager LocalVariableDeclaration ReferenceType List VariableDeclarator registeredProfiles MethodInvocation profileManager getRegisteredProfiles LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation registeredProfiles size MemberReference ++ i BlockStatement IfStatement MethodInvocation ! config MethodInvocation MethodInvocation registeredProfiles MemberReference i get contains getProfiles BlockStatement StatementExpression MemberReference ++ count End End ReturnStatement MemberReference count MethodDeclaration Modifier public removeListDataListener FormalParameter ReferenceType ListDataListener arg0 StatementExpression MethodInvocation listeners MemberReference arg0 remove ReferenceType ListModel ClassDeclaration Modifier private /**
     * This list contains the profiles that are applied to the current project
     * 
     * @author maurelio1234
     */ UsedProfilesListModel FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ListDataListener VariableDeclarator listeners ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ListDataListener MethodDeclaration Modifier public addListDataListener FormalParameter ReferenceType ListDataListener arg0 StatementExpression MethodInvocation listeners MemberReference arg0 add MethodDeclaration /**
	 * Fires listeners 
	 */ Modifier public fireListeners LocalVariableDeclaration ReferenceType ListDataEvent VariableDeclarator evt ClassCreator ReferenceType ListDataEvent This MemberReference ListDataEvent CONTENTS_CHANGED Literal 0 MethodInvocation getSize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation listeners size MemberReference ++ i BlockStatement StatementExpression MethodInvocation listeners MethodInvocation MemberReference evt contentsChanged MemberReference i get End MethodDeclaration /**
	 * @param n
	 * @return the n-th profile on this list
	 */ Modifier public ReferenceType Profile getProfileAt FormalParameter BasicType int n LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator config MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager ReturnStatement MethodInvocation config MethodInvocation MemberReference n get getProfiles MethodDeclaration /**
	 * @param n
	 * @return the n-th profile on this list
	 * @see javax.swing.ListModel#getElementAt(int)
	 */ Modifier public ReferenceType Object getElementAt FormalParameter BasicType int n LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator config MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager IfStatement BinaryOperation && BinaryOperation >= MemberReference n Literal 0 BinaryOperation < MemberReference n MethodInvocation config MethodInvocation size getProfiles BlockStatement ReturnStatement MethodInvocation config MethodInvocation MemberReference n get MethodInvocation getDisplayName getProfiles BlockStatement ReturnStatement Literal null End MethodDeclaration /**
	 * @return the amount of elements in the list
	 * @see javax.swing.ListModel#getSize()
	 */ Modifier public BasicType int getSize LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator config MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager ReturnStatement MethodInvocation config MethodInvocation size getProfiles MethodDeclaration Modifier public removeListDataListener FormalParameter ReferenceType ListDataListener arg0 StatementExpression MethodInvocation listeners MemberReference arg0 remove ReferenceType ListModel ConstructorDeclaration Modifier public /**
     * The default constructor for this class
     */ ProfileSelectionTab StatementExpression MethodInvocation ClassCreator ReferenceType BoxLayout This MemberReference BoxLayout Y_AXIS setLayout LocalVariableDeclaration ReferenceType JPanel VariableDeclarator configPanel ClassCreator ReferenceType JPanel StatementExpression MethodInvocation configPanel ClassCreator ReferenceType BoxLayout MemberReference configPanel MemberReference BoxLayout X_AXIS setLayout StatementExpression MethodInvocation availableList Literal ""12345678901234567890"" setPrototypeCellValue StatementExpression MethodInvocation usedList Literal ""12345678901234567890"" setPrototypeCellValue StatementExpression MethodInvocation availableList ClassCreator ReferenceType Dimension Literal 50 Literal 50 setMinimumSize StatementExpression MethodInvocation usedList ClassCreator ReferenceType Dimension Literal 50 Literal 50 setMinimumSize LocalVariableDeclaration ReferenceType JPanel VariableDeclarator leftList ClassCreator ReferenceType JPanel StatementExpression MethodInvocation leftList ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation leftList ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""tab.profiles.userdefined.unload"" localize MemberReference BorderLayout NORTH add StatementExpression MethodInvocation leftList MemberReference availableList MemberReference BorderLayout CENTER add StatementExpression MethodInvocation configPanel MemberReference leftList add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator centerButtons ClassCreator ReferenceType JPanel StatementExpression MethodInvocation centerButtons ClassCreator ReferenceType BoxLayout MemberReference centerButtons MemberReference BoxLayout Y_AXIS setLayout StatementExpression MethodInvocation centerButtons MemberReference addButton add StatementExpression MethodInvocation centerButtons MemberReference removeButton add StatementExpression MethodInvocation configPanel MemberReference centerButtons add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator rightList ClassCreator ReferenceType JPanel StatementExpression MethodInvocation rightList ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation rightList ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""tab.profiles.userdefined.active"" localize MemberReference BorderLayout NORTH add StatementExpression MethodInvocation rightList MemberReference usedList MemberReference BorderLayout CENTER add StatementExpression MethodInvocation configPanel MemberReference rightList add StatementExpression MethodInvocation addButton This addActionListener StatementExpression MethodInvocation removeButton This addActionListener StatementExpression MethodInvocation MemberReference configPanel add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator lffPanel ClassCreator ReferenceType JPanel StatementExpression MethodInvocation lffPanel ClassCreator ReferenceType FlowLayout setLayout StatementExpression MethodInvocation lffPanel MemberReference loadFromFile add StatementExpression MethodInvocation lffPanel MemberReference unregisterProfile add StatementExpression MethodInvocation loadFromFile This addActionListener StatementExpression MethodInvocation unregisterProfile This addActionListener StatementExpression MethodInvocation MemberReference lffPanel add MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType AvailableProfilesListModel VariableDeclarator modelAvl Cast ReferenceType AvailableProfilesListModel MethodInvocation availableList getModel LocalVariableDeclaration ReferenceType UsedProfilesListModel VariableDeclarator modelUsd Cast ReferenceType UsedProfilesListModel MethodInvocation usedList getModel IfStatement BinaryOperation == MethodInvocation arg0 getSource MemberReference addButton BlockStatement IfStatement BinaryOperation != MethodInvocation availableList getSelectedIndex Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Profile VariableDeclarator selected MethodInvocation modelAvl MethodInvocation availableList getSelectedIndex getProfileAt StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration MethodInvocation MemberReference selected addProfile getManager StatementExpression MethodInvocation modelAvl fireListeners StatementExpression MethodInvocation modelUsd fireListeners End IfStatement BinaryOperation == MethodInvocation arg0 getSource MemberReference removeButton BlockStatement IfStatement BinaryOperation != MethodInvocation usedList getSelectedIndex Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Profile VariableDeclarator selected MethodInvocation modelUsd MethodInvocation usedList getSelectedIndex getProfileAt StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration MethodInvocation MemberReference selected removeProfile getManager StatementExpression MethodInvocation modelAvl fireListeners StatementExpression MethodInvocation modelUsd fireListeners End IfStatement BinaryOperation == MethodInvocation arg0 getSource MemberReference unregisterProfile BlockStatement IfStatement BinaryOperation != MethodInvocation availableList getSelectedIndex Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Profile VariableDeclarator selected MethodInvocation modelAvl MethodInvocation availableList getSelectedIndex getProfileAt IfStatement BinaryOperation instanceof MemberReference selected ReferenceType UserDefinedProfile BlockStatement StatementExpression MethodInvocation ProfileFacade MethodInvocation MemberReference selected removeProfile getManager StatementExpression MethodInvocation modelAvl fireListeners StatementExpression MethodInvocation modelUsd fireListeners BlockStatement StatementExpression MethodInvocation JOptionPane This Literal ""Only user defined profiles can be removed"" showMessageDialog End End IfStatement BinaryOperation == MethodInvocation arg0 getSource MemberReference loadFromFile BlockStatement LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator fileChooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation fileChooser ClassCreator ReferenceType FileFilter MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File file ReturnStatement BinaryOperation || MethodInvocation file isDirectory BinaryOperation && MethodInvocation file isFile BinaryOperation || MethodInvocation file MethodInvocation toLowerCase MethodInvocation Literal "".xml"" endsWith getName MethodInvocation file MethodInvocation toLowerCase MethodInvocation Literal "".xmi"" endsWith getName MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement Literal ""*.XMI"" setFileFilter LocalVariableDeclaration BasicType int VariableDeclarator ret MethodInvocation fileChooser This showOpenDialog IfStatement BinaryOperation == MemberReference ret MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation fileChooser getSelectedFile TryStatement LocalVariableDeclaration ReferenceType UserDefinedProfile VariableDeclarator profile ClassCreator ReferenceType UserDefinedProfile MemberReference file StatementExpression MethodInvocation ProfileFacade MethodInvocation MemberReference profile registerProfile getManager StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration MethodInvocation MemberReference profile addProfile getManager LocalVariableDeclaration ReferenceType UsedProfilesListModel VariableDeclarator model Cast ReferenceType UsedProfilesListModel MethodInvocation usedList getModel StatementExpression MethodInvocation model fireListeners CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal ""tab.profiles.userdefined.errorloading"" localize showMessageDialog End End End End End StatementExpression MethodInvocation availableList validate StatementExpression MethodInvocation usedList validate MethodDeclaration /**
     * @return the internationalization key that containing the name of this tab
     * @see org.argouml.application.api.GUISettingsTabInterface#getTabKey()
     */ Modifier public ReferenceType String getTabKey ReturnStatement Literal ""tab.profiles"" MethodDeclaration /**
     * @return the panel containing this tab
     * @see org.argouml.application.api.GUISettingsTabInterface#getTabPanel()
     */ Modifier public ReferenceType JPanel getTabPanel ReturnStatement This MethodDeclaration Modifier public handleResetToDefault MethodDeclaration Modifier public handleSettingsTabCancel MethodDeclaration Modifier public handleSettingsTabRefresh MethodDeclaration Modifier public handleSettingsTabSave ReferenceType JPanel ReferenceType GUISettingsTabInterface ReferenceType ActionListener",0
1043,1043,,0
469,469,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.argouml.model.AbstractModelFactory Import org.argouml.model.CommonBehaviorFactory Import org.eclipse.uml2.uml.OpaqueAction Import org.eclipse.uml2.uml.Signal Import org.eclipse.uml2.uml.UMLFactory ClassDeclaration /**
 * The implementation of the CommonBehaviorFactory for EUML2.
 */ CommonBehaviorFactoryEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param implementation The ModelImplementation.
     */ CommonBehaviorFactoryEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Object buildAction FormalParameter ReferenceType Object message ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildCallAction FormalParameter ReferenceType Object oper FormalParameter ReferenceType String name ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildLink FormalParameter ReferenceType Object fromInstance FormalParameter ReferenceType Object toInstance ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildReception FormalParameter ReferenceType Object aClassifier ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildSignal FormalParameter ReferenceType Object element ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildStimulus FormalParameter ReferenceType Object link ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildUninterpretedAction FormalParameter ReferenceType Object actionState ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createActionSequence ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createArgument ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createAttributeLink ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createCallAction ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createComponentInstance ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createCreateAction ReturnStatement MethodInvocation UMLFactory.eINSTANCE createCreateObjectAction MethodDeclaration Modifier public ReferenceType Object createDataValue ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createDestroyAction ReturnStatement MethodInvocation UMLFactory.eINSTANCE createDestroyObjectAction MethodDeclaration Modifier public ReferenceType Object createException ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createLink ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createLinkEnd ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createLinkObject ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createNodeInstance ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createObject ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createReception ReturnStatement MethodInvocation UMLFactory.eINSTANCE createReception MethodDeclaration Modifier public ReferenceType Object createReturnAction ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createSendAction ReturnStatement MethodInvocation UMLFactory.eINSTANCE createSendObjectAction MethodDeclaration Modifier public ReferenceType Signal createSignal ReturnStatement MethodInvocation UMLFactory.eINSTANCE createSignal MethodDeclaration Modifier public ReferenceType Object createStimulus ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createSubsystemInstance ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createTerminateAction ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType OpaqueAction createUninterpretedAction ReturnStatement Literal null ReferenceType CommonBehaviorFactory ReferenceType AbstractModelFactory",0
1349,1349,,0
1321,1321,,1
164,164,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLComboBox2 Import org.argouml.uml.ui.UMLComboBoxNavigator Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.foundation.core.PropPanelNamespace Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * Property panel for collaborations. 
 *
 * @author jaap.branderhorst@xs4all.nl
 */ PropPanelCollaboration FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 5642815840272293391L ConstructorDeclaration Modifier public /**
     * Construct a property panel for a Collaboration.
     */ PropPanelCollaboration StatementExpression SuperConstructorInvocation Literal ""label.collaboration"" MethodInvocation Literal ""Collaboration"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator representedClassifierComboBox ClassCreator ReferenceType UMLComboBox2 ClassCreator ReferenceType UMLCollaborationRepresentedClassifierComboBoxModel ClassCreator ReferenceType ActionSetRepresentedClassifierCollaboration StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.represented-classifier"" localize ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator BinaryOperation + Literal ""label.represented-classifier."" Literal ""navigate.tooltip"" localize MemberReference representedClassifierComboBox addField LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator representedOperationComboBox ClassCreator ReferenceType UMLComboBox2 ClassCreator ReferenceType UMLCollaborationRepresentedOperationComboBoxModel ClassCreator ReferenceType ActionSetRepresentedOperationCollaboration StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.represented-operation"" localize ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator BinaryOperation + Literal ""label.represented-operation."" Literal ""navigate.tooltip"" localize MemberReference representedOperationComboBox addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.interaction"" localize MethodInvocation ClassCreator ReferenceType UMLCollaborationInteractionListModel getSingleRowScroll addField LocalVariableDeclaration ReferenceType UMLLinkedList VariableDeclarator constrainingList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLCollaborationConstrainingElementListModel StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.constraining-elements"" localize ClassCreator ReferenceType JScrollPane MemberReference constrainingList addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.owned-elements"" localize MethodInvocation getOwnedElementsScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelNamespace",0
1503,1503,,0
119,119,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.util.ArrayList Import java.util.Collection Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 ClassDeclaration Modifier public /**
 * Provide a dialog which helps the user to select one event out of an existing
 * list, which will be used as the trigger of the transition.
 * 
 * @author MarkusK
 * 
 */ ActionAddEventAsTrigger FieldDeclaration /**
     * The one and only instance of this class.
     */ Modifier public final static ReferenceType ActionAddEventAsTrigger VariableDeclarator SINGLETON ClassCreator ReferenceType ActionAddEventAsTrigger ConstructorDeclaration Modifier protected /**
     * Constructor for ActionAddClassifierRoleBase.
     */ ActionAddEventAsTrigger StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal false setMultiSelect MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getModel getFacade MethodInvocation Model MethodInvocation getEvent getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator trigger MethodInvocation Model MethodInvocation MethodInvocation getTarget getTrigger getFacade IfStatement BinaryOperation != MemberReference trigger Literal null StatementExpression MethodInvocation vec MemberReference trigger add End ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-events"" localize MethodDeclaration Modifier protected Annotation Override doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator trans MethodInvocation getTarget IfStatement BinaryOperation || BinaryOperation == MemberReference selected Literal null BinaryOperation == MethodInvocation selected size Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference trans Literal null setEventAsTrigger getStateMachinesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference trans MethodInvocation selected MethodInvocation next iterator setEventAsTrigger getStateMachinesHelper End ReferenceType AbstractActionAddModelElement2",0
1166,1166,,0
1533,1533,,0
1003,1003,,0
1541,1541,,0
104,104,"CompilationUnit PackageDeclaration org.argouml.configuration Import java.beans.PropertyChangeEvent InterfaceDeclaration Modifier public /**
 *   This class provides definition and manipulation of configuration keys.
 *   All keys in the configuration system will be accessed using the
 *   ConfigurationKey interface.
 *
 *   @author Thierry Lach
 *   @since 0.9.4
 */ ConfigurationKey MethodDeclaration /**
     * Return the actual key used to access the configuration.
     *
     * @return the key.
     */ ReferenceType String getKey MethodDeclaration /**
     * Tells if this configuration key is the one changed in the
     * <code>PropertyChangeEvent</code>.
     *
     * @param pce PropertyChangeEvent to check
     * @return true if the changed property is for the key.
     */ BasicType boolean isChangedProperty FormalParameter ReferenceType PropertyChangeEvent pce",0
1516,1516,,0
14,14,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.BorderLayout Import java.awt.Dimension Import java.awt.event.ItemEvent Import java.awt.event.ItemListener Import java.util.ArrayList Import java.util.List Import javax.swing.Action Import javax.swing.JCheckBox Import javax.swing.JComboBox Import javax.swing.JPanel Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.uml.ui.behavior.collaborations.ActionSetClassifierRoleMultiplicity ClassDeclaration Modifier public /**
 * A compound control containing all the visual controls for specifying
 * multiplicity.
 * @author Bob Tarling
 * @since 0.23 alpha2
 */ UMLMultiplicityPanel FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator multiplicityComboBox FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator checkBox FieldDeclaration Modifier private ReferenceType MultiplicityComboBoxModel VariableDeclarator multiplicityComboBoxModel FieldDeclaration Modifier private static ReferenceType List VariableDeclarator multiplicityList ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation multiplicityList Literal ""1"" add StatementExpression MethodInvocation multiplicityList Literal ""0..1"" add StatementExpression MethodInvocation multiplicityList Literal ""0..*"" add StatementExpression MethodInvocation multiplicityList Literal ""1..*"" add ConstructorDeclaration Modifier public /**
     * Constructor
     */ UMLMultiplicityPanel StatementExpression SuperConstructorInvocation ClassCreator ReferenceType BorderLayout StatementExpression Assignment MemberReference multiplicityComboBoxModel ClassCreator ReferenceType MultiplicityComboBoxModel Literal ""multiplicity"" = StatementExpression Assignment MemberReference checkBox ClassCreator ReferenceType MultiplicityCheckBox = StatementExpression Assignment MemberReference multiplicityComboBox ClassCreator ReferenceType MultiplicityComboBox MemberReference multiplicityComboBoxModel MethodInvocation ActionSetClassifierRoleMultiplicity getInstance = StatementExpression MethodInvocation multiplicityComboBox Literal true setEditable StatementExpression MethodInvocation multiplicityComboBox This addItemListener StatementExpression MethodInvocation MemberReference checkBox MemberReference BorderLayout WEST add StatementExpression MethodInvocation MemberReference multiplicityComboBox MemberReference BorderLayout CENTER add MethodDeclaration /**
     * Enforce that the preferred height is the minimum height.
     * This works around a bug in Windows LAF of JRE5 where a change
     * in the preferred/min size of a combo has changed and has a knock
     * on effect here.
     * If the layout manager for prop panels finds the preferred
     * height is greater than the minimum height then it will allow
     * this component to resize in error.
     * See issue 4333 - Sun has now fixed this bug in JRE6 and so this
     * method can be removed once JRE5 is no longer supported.
     * @return the preferred dimension
     */ Modifier public ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension SuperMethodInvocation MemberReference width getPreferredSize MethodInvocation MemberReference height getMinimumSize MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation && BinaryOperation == MethodInvocation event getSource MemberReference multiplicityComboBox BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator item MethodInvocation multiplicityComboBox getSelectedItem LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation multiplicityComboBoxModel getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator multiplicity MethodInvocation Model MethodInvocation MemberReference target getMultiplicity getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference item isAMultiplicity getFacade BlockStatement IfStatement MethodInvocation ! multiplicity MemberReference item equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference item setMultiplicity getCoreHelper End IfStatement BinaryOperation instanceof MemberReference item ReferenceType String BlockStatement IfStatement MethodInvocation ! item MethodInvocation Model MethodInvocation MemberReference multiplicity toString getFacade equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation Model MethodInvocation Cast ReferenceType String MemberReference item createMultiplicity getDataTypesFactory setMultiplicity getCoreHelper End BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null setMultiplicity getCoreHelper End End End MethodDeclaration Modifier private ReferenceType Object getTarget ReturnStatement MethodInvocation multiplicityComboBoxModel getTarget ClassDeclaration Modifier private /**
     * An editable and searchable combobox to edit the multiplicity attribute of
     * some modelelement.
     *
     * @author jaap.branderhorst@xs4all.nl
     * @since Jan 5, 2003
     */ MultiplicityComboBox ConstructorDeclaration Modifier public /**
         * Constructor for UMLMultiplicityComboBox2.
         * @param arg0 the combobox model
         * @param selectAction the action
         */ MultiplicityComboBox FormalParameter ReferenceType UMLComboBoxModel2 arg0 FormalParameter ReferenceType Action selectAction StatementExpression SuperConstructorInvocation MemberReference arg0 MemberReference selectAction MethodDeclaration /**
         * On enter, the text the user has filled in the textfield is first
         * checked to see if it's a valid multiplicity. If so then that is the
         * multiplicity to be set. If not, the combobox searches for a
         * multiplicity starting with the given text. If there is no
         * multiplicity starting with the given text, the old value is reset
         * in the comboboxeditor.
         * 
         * {@inheritDoc}
         */ Modifier protected doOnEdit FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference item LocalVariableDeclaration ReferenceType Object VariableDeclarator multi Literal null TryStatement StatementExpression Assignment MemberReference multi MethodInvocation Model MethodInvocation MemberReference text createMultiplicity getDataTypesFactory = CatchClause CatchClauseParameter IllegalArgumentException e LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference text search IfStatement BinaryOperation != MethodInvocation MemberReference text search Literal null BlockStatement StatementExpression Assignment MemberReference multi MemberReference o = End IfStatement BinaryOperation != MemberReference multi Literal null BlockStatement StatementExpression MethodInvocation MemberReference multi setSelectedItem BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getSelectedItem setItem getEditor End MethodDeclaration /**
         * When we change target make sure that the check box is only selected
         * if the multiplicty exists
         * @param e
         * @see org.argouml.uml.ui.UMLComboBox2#targetSet(org.argouml.ui.targetmanager.TargetEvent)
         */ Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression SuperMethodInvocation MemberReference e targetSet LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration BasicType boolean VariableDeclarator exists BinaryOperation && BinaryOperation != MemberReference target Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference target getMultiplicity getFacade Literal null StatementExpression MethodInvocation multiplicityComboBox MemberReference exists setEnabled StatementExpression MethodInvocation multiplicityComboBox MemberReference exists setEditable StatementExpression MethodInvocation checkBox MemberReference exists setSelected ReferenceType UMLSearchableComboBox ClassDeclaration Modifier private /**
     * A model for multiplicities.
     */ MultiplicityComboBoxModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLMultiplicityComboBoxModel.
         *
         * @param propertySetName the name of the property set
         */ MultiplicityComboBoxModel FormalParameter ReferenceType String propertySetName StatementExpression SuperConstructorInvocation MemberReference propertySetName Literal false MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation instanceof MemberReference element ReferenceType String MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MemberReference multiplicityList setElements LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAModelElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference t getMultiplicity getFacade addElement End MethodDeclaration Modifier public addElement FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement End IfStatement MethodInvocation Model MethodInvocation MemberReference o isAMultiplicity getFacade BlockStatement StatementExpression Assignment MemberReference o MethodInvocation Model MethodInvocation MemberReference o toString getFacade = IfStatement Literal MethodInvocation MemberReference o equals """" BlockStatement StatementExpression Assignment MemberReference o Literal ""1"" = End End IfStatement BinaryOperation && MethodInvocation ! multiplicityList MemberReference o contains MethodInvocation MemberReference o isValidElement BlockStatement StatementExpression MethodInvocation multiplicityList MemberReference o add End StatementExpression SuperMethodInvocation MemberReference o addElement MethodDeclaration Modifier public setSelectedItem FormalParameter ReferenceType Object anItem StatementExpression MethodInvocation MemberReference anItem addElement StatementExpression SuperMethodInvocation TernaryExpression BinaryOperation == MemberReference anItem Literal null Literal null MethodInvocation Model MethodInvocation MemberReference anItem toString getFacade setSelectedItem MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getMultiplicity getFacade toString getFacade End ReturnStatement Literal null ReferenceType UMLComboBoxModel2 ClassDeclaration Modifier private MultiplicityCheckBox ConstructorDeclaration Modifier public MultiplicityCheckBox StatementExpression MethodInvocation This addItemListener MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation == MethodInvocation e getStateChange MemberReference ItemEvent SELECTED BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator comboText Cast ReferenceType String MethodInvocation multiplicityComboBox getSelectedItem LocalVariableDeclaration ReferenceType Object VariableDeclarator multi MethodInvocation Model MethodInvocation MemberReference comboText createMultiplicity getDataTypesFactory IfStatement BinaryOperation == MemberReference multi Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal ""1"" setMultiplicity getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference multi setMultiplicity getCoreHelper End StatementExpression MethodInvocation multiplicityComboBox Literal true setEnabled StatementExpression MethodInvocation multiplicityComboBox Literal true setEditable BlockStatement StatementExpression MethodInvocation multiplicityComboBox Literal false setEnabled StatementExpression MethodInvocation multiplicityComboBox Literal false setEditable StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal null setMultiplicity getCoreHelper End ReferenceType JCheckBox ReferenceType ItemListener ReferenceType JPanel ReferenceType ItemListener",0
1068,1068,,1
1142,1142,,0
521,521,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.event.ActionEvent ClassDeclaration Modifier public /**
 * The action to resolve a todo item.
 */ ActionResolve ConstructorDeclaration Modifier public /**
     * Construct an Action to resolve a ToDo item.
     */ ActionResolve StatementExpression SuperConstructorInvocation Literal ""action.resolve-item"" Literal true MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType DismissToDoItemDialog VariableDeclarator dialog ClassCreator ReferenceType DismissToDoItemDialog StatementExpression MethodInvocation dialog MethodInvocation getRememberedTarget setTarget StatementExpression MethodInvocation dialog Literal true setVisible ReferenceType ToDoItemAction",0
548,548,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.Color Import java.awt.Dimension Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.beans.PropertyChangeEvent Import java.util.Iterator Import java.util.Vector Import javax.swing.Action Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.Model Import org.argouml.ui.ArgoJMenu Import org.argouml.uml.diagram.ui.ActionAddNote Import org.argouml.uml.diagram.ui.ActionCompartmentDisplay Import org.argouml.uml.diagram.ui.ActionEdgesDisplay Import org.argouml.uml.diagram.ui.CompartmentFigText Import org.argouml.uml.diagram.ui.FigCompartmentBox Import org.argouml.uml.diagram.ui.FigStereotypesCompartment Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewTagDefinition Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel ClassDeclaration Modifier public /**
 * Class to display a Stereotype declaration figure using
 * Classifier box notation.<p>
 *
 * TODO: This is just a placeholder right now! - tfm
 */ FigStereotypeDeclaration FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 2702539988691983863L ConstructorDeclaration Modifier public /**
     * Create a new Fig for a stereotype declaration.
     */ FigStereotypeDeclaration LocalVariableDeclaration ReferenceType FigStereotypesCompartment VariableDeclarator fsc Cast ReferenceType FigStereotypesCompartment MethodInvocation getStereotypeFig StatementExpression MethodInvocation fsc Literal ""stereotype"" setKeyword StatementExpression MethodInvocation Literal false enableSizeChecking StatementExpression MethodInvocation Literal true setSuppressCalcBounds StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getStereotypeFig addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation getBorderFig addFig StatementExpression MethodInvocation Literal false setSuppressCalcBounds StatementExpression MethodInvocation Literal 10 Literal 10 Literal 60 BinaryOperation + Literal 22 BinaryOperation * Literal 2 MemberReference ROWHEIGHT setBounds ConstructorDeclaration Modifier public /**
     * Constructor for use if this figure is created for an existing class
     * node in the metamodel.
     *
     * @param gm   Not actually used in the current implementation
     *
     * @param node The UML object being placed.
     */ FigStereotypeDeclaration FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner StatementExpression MethodInvocation Literal true enableSizeChecking MethodDeclaration Modifier public ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionStereotype This MethodDeclaration /**
     * Build a collection of menu items relevant for a right-click
     * popup menu on a Stereotype.
     * {@inheritDoc}
     */ Modifier public ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator addMenu ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.add"" StatementExpression MethodInvocation addMenu ClassCreator ReferenceType ActionAddNote add StatementExpression MethodInvocation addMenu ClassCreator ReferenceType ActionNewTagDefinition add StatementExpression MethodInvocation addMenu MethodInvocation ActionEdgesDisplay getShowEdges add StatementExpression MethodInvocation addMenu MethodInvocation ActionEdgesDisplay getHideEdges add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference addMenu add LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator showMenu ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.show"" LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation ActionCompartmentDisplay MethodInvocation iterator getActions WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation showMenu Cast ReferenceType Action MethodInvocation i next add End IfStatement BinaryOperation > MethodInvocation showMenu getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference showMenu add End StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation buildVisibilityPopUp add ReturnStatement MemberReference popUpActions MethodDeclaration /**
     * Gets the minimum size permitted for a class on the diagram.<p>
     *
     * @return  the size of the minimum bounding box.
     */ Modifier public ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize MethodInvocation MethodInvocation getMinimumSize getNameFig IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoMin MethodInvocation MethodInvocation getMinimumSize getStereotypeFig StatementExpression Assignment MemberReference aSize width MethodInvocation Math MemberReference aSize width MemberReference stereoMin width max = StatementExpression Assignment MemberReference aSize height MemberReference stereoMin height += End StatementExpression Assignment MemberReference aSize width MethodInvocation Math Literal 60 MemberReference aSize width max = ReturnStatement MemberReference aSize MethodDeclaration /**
     * Sets the bounds, but the size will be at least the one returned by
     * {@link #getMinimumSize()}, unless checking of size is disabled.<p>
     *
     * If the required height is bigger, then the additional height is
     * equally distributed among all figs (i.e. compartments), such that the
     * cumulated height of all visible figs equals the demanded height<p>.
     *
     * Some of this has ""magic numbers"" hardcoded in. In particular there is
     * a knowledge that the minimum height of a name compartment is 21
     * pixels.<p>
     *
     * @param x  Desired X coordinate of upper left corner
     *
     * @param y  Desired Y coordinate of upper left corner
     *
     * @param w  Desired width of the FigClass
     *
     * @param h  Desired height of the FigClass
     *
     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
     */ Modifier protected setStandardBounds FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBorderFig StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference Color red setLineColor getNameFig LocalVariableDeclaration BasicType int VariableDeclarator currentHeight Literal 0 IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator stereotypeHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getStereotypeFig StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference stereotypeHeight setBounds getStereotypeFig StatementExpression Assignment MemberReference currentHeight MemberReference stereotypeHeight = End LocalVariableDeclaration BasicType int VariableDeclarator nameHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference x BinaryOperation + MemberReference y MemberReference currentHeight MemberReference w MemberReference nameHeight setBounds getNameFig StatementExpression Assignment MemberReference currentHeight MemberReference nameHeight += StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange MethodDeclaration Modifier protected ReferenceType CompartmentFigText unhighlight LocalVariableDeclaration ReferenceType CompartmentFigText VariableDeclarator fc SuperMethodInvocation unhighlight IfStatement BinaryOperation == MemberReference fc Literal null BlockStatement End ReturnStatement MemberReference fc MethodDeclaration /**
     * Handles changes to the model. Takes into account the event that
     * occurred. If you need to update the whole fig, consider using
     * renderingChanged.
     *
     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
     */ Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mee ReferenceType AssociationChangeEvent BinaryOperation instanceof MemberReference mee ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation renderingChanged StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners StatementExpression MethodInvocation damage End MethodDeclaration Modifier protected updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation removeAllElementListeners End IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner addElementListener LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference newOwner getTagDefinitions MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator td MethodInvocation it next StatementExpression MethodInvocation MemberReference td ArrayCreator ReferenceType String ArrayInitializer Literal ""name"" Literal ""tagType"" Literal ""multiplicity"" addElementListener End End ReferenceType FigCompartmentBox",0
791,791,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.event.ItemEvent Import javax.swing.JCheckBox Import org.argouml.ui.StylePanelFigNodeModelElement Import org.argouml.uml.diagram.StereotypeContainer Import org.argouml.uml.diagram.VisibilityContainer ClassDeclaration Modifier public /**
 * Stylepanel which adds a checkbox to show or hide the stereotype.<p>
 * TODO: i18n.
 *
 * @author mvw@tigris.org
 */ StylePanelFigPackage FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator stereoCheckBox ClassCreator ReferenceType JCheckBox Literal ""Stereotype"" FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator visibilityCheckBox ClassCreator ReferenceType JCheckBox Literal ""Visibility"" FieldDeclaration /**
     * Flag to indicate that a refresh is going on.
     */ Modifier private BasicType boolean VariableDeclarator refreshTransaction ConstructorDeclaration Modifier public /**
     * The constructor.
     */ StylePanelFigPackage StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference stereoCheckBox addToDisplayPane StatementExpression MethodInvocation stereoCheckBox Literal false setSelected StatementExpression MethodInvocation stereoCheckBox This addItemListener StatementExpression MethodInvocation MemberReference visibilityCheckBox addToDisplayPane StatementExpression MethodInvocation visibilityCheckBox This addItemListener MethodDeclaration Modifier public refresh StatementExpression Assignment MemberReference refreshTransaction Literal true = StatementExpression SuperMethodInvocation refresh LocalVariableDeclaration ReferenceType StereotypeContainer VariableDeclarator stc Cast ReferenceType StereotypeContainer MethodInvocation getPanelTarget StatementExpression MethodInvocation stereoCheckBox MethodInvocation stc isStereotypeVisible setSelected LocalVariableDeclaration ReferenceType VisibilityContainer VariableDeclarator vc Cast ReferenceType VisibilityContainer MethodInvocation getPanelTarget StatementExpression MethodInvocation visibilityCheckBox MethodInvocation vc isVisibilityVisible setSelected StatementExpression Assignment MemberReference refreshTransaction Literal false = MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement MemberReference ! refreshTransaction BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference stereoCheckBox BlockStatement StatementExpression Cast ReferenceType StereotypeContainer MethodInvocation getPanelTarget IfStatement BinaryOperation == MemberReference src MemberReference visibilityCheckBox BlockStatement StatementExpression Cast ReferenceType VisibilityContainer MethodInvocation getPanelTarget BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged End End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 41790550511653720L ReferenceType StylePanelFigNodeModelElement",0
916,916,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection ClassDeclaration Modifier public abstract /**
 * An abstract Decorator for the {@link ExtensionMechanismsHelper}.
 *
 * @author Bob Tarling
 */ AbstractExtensionMechanismsHelperDecorator FieldDeclaration /**
     * The component.
     */ Modifier private ReferenceType ExtensionMechanismsHelper VariableDeclarator impl ConstructorDeclaration Modifier protected /**
     * @param component The component to decorate.
     */ AbstractExtensionMechanismsHelperDecorator FormalParameter ReferenceType ExtensionMechanismsHelper component StatementExpression Assignment MemberReference impl MemberReference component = MethodDeclaration /**
     * The component we are decorating.
     *
     * @return Returns the component.
     */ Modifier protected ReferenceType ExtensionMechanismsHelper getComponent ReturnStatement MemberReference impl MethodDeclaration Modifier public ReferenceType Collection getStereotypes FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns getStereotypes MethodDeclaration Modifier public ReferenceType Object getStereotype FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object stereo ReturnStatement MethodInvocation impl MemberReference ns MemberReference stereo getStereotype MethodDeclaration Modifier public ReferenceType Object getStereotype FormalParameter ReferenceType Collection models FormalParameter ReferenceType Object stereo ReturnStatement MethodInvocation impl MemberReference models MemberReference stereo getStereotype MethodDeclaration Modifier public ReferenceType String getMetaModelName FormalParameter ReferenceType Object m ReturnStatement MethodInvocation impl MemberReference m getMetaModelName MethodDeclaration Modifier public ReferenceType Collection getAllPossibleStereotypes FormalParameter ReferenceType Collection models FormalParameter ReferenceType Object modelElement ReturnStatement MethodInvocation impl MemberReference models MemberReference modelElement getAllPossibleStereotypes MethodDeclaration /**
     * @deprecated Use {@link #isValidStereotype(Object,Object)} instead
     */ Modifier public BasicType boolean isValidStereoType FormalParameter ReferenceType Object theModelElement FormalParameter ReferenceType Object theStereotype ReturnStatement MethodInvocation MemberReference theModelElement MemberReference theStereotype isValidStereotype MethodDeclaration Modifier public BasicType boolean isValidStereotype FormalParameter ReferenceType Object theModelElement FormalParameter ReferenceType Object theStereotype ReturnStatement MethodInvocation impl MemberReference theModelElement MemberReference theStereotype isValidStereotype MethodDeclaration Modifier public ReferenceType Collection getStereotypes FormalParameter ReferenceType Collection models ReturnStatement MethodInvocation impl MemberReference models getStereotypes MethodDeclaration Modifier public addCopyStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype StatementExpression MethodInvocation impl MemberReference modelElement MemberReference stereotype addCopyStereotype MethodDeclaration Modifier public BasicType boolean isStereotype FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base ReturnStatement MethodInvocation impl MemberReference object MemberReference name MemberReference base isStereotype MethodDeclaration Modifier public BasicType boolean isStereotypeInh FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base ReturnStatement MethodInvocation impl MemberReference object MemberReference name MemberReference base isStereotypeInh MethodDeclaration Modifier public addExtendedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object extendedElement StatementExpression MethodInvocation impl MemberReference handle MemberReference extendedElement addExtendedElement MethodDeclaration Modifier public addBaseClass FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass StatementExpression MethodInvocation impl MemberReference handle MemberReference baseClass addBaseClass MethodDeclaration Modifier public removeBaseClass FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass StatementExpression MethodInvocation impl MemberReference handle MemberReference baseClass removeBaseClass MethodDeclaration Modifier public setIcon FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object icon StatementExpression MethodInvocation impl MemberReference handle MemberReference icon setIcon MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" setTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object tag StatementExpression MethodInvocation impl MemberReference handle MemberReference tag setTag MethodDeclaration Modifier public setTagType FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tagType StatementExpression MethodInvocation impl MemberReference handle MemberReference tagType setType MethodDeclaration Modifier public setType FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object type StatementExpression MethodInvocation impl MemberReference handle MemberReference type setType MethodDeclaration Modifier public setValueOfTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType String value StatementExpression MethodInvocation impl MemberReference handle MemberReference value setValueOfTag MethodDeclaration Modifier public addTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object taggedValue StatementExpression MethodInvocation impl MemberReference handle MemberReference taggedValue addTaggedValue MethodDeclaration Modifier public removeTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object taggedValue StatementExpression MethodInvocation impl MemberReference handle MemberReference taggedValue removeTaggedValue MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection taggedValues StatementExpression MethodInvocation impl MemberReference handle MemberReference taggedValues setTaggedValue MethodDeclaration /**
     * @deprecated Use {@link #hasStereotype(Object,String)} instead
     */ Modifier public BasicType boolean hasStereoType FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference handle MemberReference name hasStereotype MethodDeclaration Modifier public BasicType boolean hasStereotype FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name ReturnStatement MethodInvocation impl MemberReference handle MemberReference name hasStereotype ReferenceType ExtensionMechanismsHelper",1
480,480,"CompilationUnit PackageDeclaration org.argouml.gefext Import javax.management.ListenerNotFoundException Import javax.management.MBeanNotificationInfo Import javax.management.Notification Import javax.management.NotificationBroadcasterSupport Import javax.management.NotificationEmitter Import javax.management.NotificationFilter Import javax.management.NotificationListener Import org.tigris.gef.presentation.FigPoly ClassDeclaration Modifier public /**
 * Primitive Fig to paint Polygons on a diagram.
 *
 * @author Michiel
 */ ArgoFigPoly FieldDeclaration Modifier private ReferenceType NotificationBroadcasterSupport VariableDeclarator notifier ClassCreator ReferenceType NotificationBroadcasterSupport ConstructorDeclaration Modifier public ArgoFigPoly FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MethodDeclaration Modifier public Annotation Override deleteFromModel StatementExpression SuperMethodInvocation deleteFromModel StatementExpression MethodInvocation Literal ""remove"" Literal null Literal null firePropChange StatementExpression MethodInvocation notifier ClassCreator ReferenceType Notification Literal ""remove"" This Literal 0 sendNotification MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType NotificationListener listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener MethodDeclaration Modifier public addNotificationListener FormalParameter ReferenceType NotificationListener listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback IllegalArgumentException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback addNotificationListener MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType NotificationListener listener ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener ReferenceType FigPoly ReferenceType NotificationEmitter",0
988,988,,1
49,49,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementOrderedListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl, alexb
 * @since Mar 22, 2003
 */ UMLClassOperationListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierFeatureListModel.
     */ UMLClassOperationListModel StatementExpression SuperConstructorInvocation Literal ""feature"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator opsAndReceps MethodInvocation Model MethodInvocation MethodInvocation getTarget getOperationsAndReceptions getFacade StatementExpression MethodInvocation MemberReference opsAndReceps setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model getFacade MethodDeclaration Modifier protected moveDown FormalParameter BasicType int index1 LocalVariableDeclaration BasicType int VariableDeclarator index2 BinaryOperation + MemberReference index1 Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getOperationsAndReceptions getFacade IfStatement BinaryOperation < MemberReference index1 BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator op1 MethodInvocation c MemberReference index1 get LocalVariableDeclaration ReferenceType Object VariableDeclarator op2 MethodInvocation c MemberReference index2 get LocalVariableDeclaration ReferenceType List VariableDeclarator f MethodInvocation Model MethodInvocation MemberReference clss getFeatures getFacade StatementExpression Assignment MemberReference index2 MethodInvocation f MemberReference op2 indexOf = StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference op1 removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference index2 MemberReference op1 addFeature getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToBottom(int)
     */ Modifier protected Annotation Override moveToBottom FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getOperationsAndReceptions getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem1 removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss BinaryOperation - MethodInvocation c size Literal 1 MemberReference mem1 addFeature getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToTop(int)
     */ Modifier protected Annotation Override moveToTop FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getOperationsAndReceptions getFacade IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem1 removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss Literal 0 MemberReference mem1 addFeature getCoreHelper End ReferenceType UMLModelElementOrderedListModel2",0
497,497,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.Insets Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import javax.swing.ButtonGroup Import javax.swing.JLabel Import javax.swing.JOptionPane Import javax.swing.JPanel Import javax.swing.JRadioButton Import javax.swing.JScrollPane Import javax.swing.JTextArea Import org.apache.log4j.Logger Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ToDoList Import org.argouml.cognitive.Translator Import org.argouml.cognitive.UnresolvableException Import org.argouml.util.ArgoDialog Import org.tigris.swidgets.Dialog ClassDeclaration Modifier public /**
 * The dialog to dismiss todo items.
 *
 */ DismissToDoItemDialog FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType DismissToDoItemDialog getLogger FieldDeclaration Modifier private ReferenceType JRadioButton VariableDeclarator badGoalButton FieldDeclaration Modifier private ReferenceType JRadioButton VariableDeclarator badDecButton FieldDeclaration Modifier private ReferenceType JRadioButton VariableDeclarator explainButton FieldDeclaration Modifier private ReferenceType ButtonGroup VariableDeclarator actionGroup FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator explanation FieldDeclaration Modifier private ReferenceType ToDoItem VariableDeclarator target ConstructorDeclaration Modifier public /**
     * The constructor.
     */ DismissToDoItemDialog StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""dialog.title.dismiss-todo-item"" localize MemberReference Dialog OK_CANCEL_OPTION Literal true LocalVariableDeclaration ReferenceType JLabel VariableDeclarator instrLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.remove-item"" localize StatementExpression Assignment MemberReference badGoalButton ClassCreator ReferenceType JRadioButton MethodInvocation Translator Literal ""button.not-relevant-to-my-goals"" localize = StatementExpression Assignment MemberReference badDecButton ClassCreator ReferenceType JRadioButton MethodInvocation Translator Literal ""button.not-of-concern-at-moment"" localize = StatementExpression Assignment MemberReference explainButton ClassCreator ReferenceType JRadioButton MethodInvocation Translator Literal ""button.reason-given-below"" localize = StatementExpression MethodInvocation badGoalButton MethodInvocation Translator MethodInvocation Literal 0 charAt Literal ""button.not-relevant-to-my-goals.mnemonic"" localize setMnemonic StatementExpression MethodInvocation badDecButton MethodInvocation Translator MethodInvocation Literal 0 charAt Literal ""button.not-of-concern-at-moment.mnemonic"" localize setMnemonic StatementExpression MethodInvocation explainButton MethodInvocation Translator MethodInvocation Literal 0 charAt Literal ""button.reason-given-below.mnemonic"" localize setMnemonic LocalVariableDeclaration ReferenceType JPanel VariableDeclarator content ClassCreator ReferenceType JPanel LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression MethodInvocation content MemberReference gb setLayout StatementExpression Assignment MemberReference explanation ClassCreator ReferenceType JTextArea Literal 6 Literal 40 = StatementExpression MethodInvocation explanation Literal true setLineWrap StatementExpression MethodInvocation explanation Literal true setWrapStyleWord LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator explain ClassCreator ReferenceType JScrollPane MemberReference explanation StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression MethodInvocation gb MemberReference instrLabel MemberReference c setConstraints StatementExpression MethodInvocation content MemberReference instrLabel add StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c insets ClassCreator ReferenceType Insets Literal 5 Literal 0 Literal 0 Literal 0 = StatementExpression MethodInvocation gb MemberReference badGoalButton MemberReference c setConstraints StatementExpression MethodInvocation content MemberReference badGoalButton add StatementExpression Assignment MemberReference c gridy Literal 2 = StatementExpression MethodInvocation gb MemberReference badDecButton MemberReference c setConstraints StatementExpression MethodInvocation content MemberReference badDecButton add StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression MethodInvocation gb MemberReference explainButton MemberReference c setConstraints StatementExpression MethodInvocation content MemberReference explainButton add StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression Assignment MemberReference c weighty Literal 1.0 = StatementExpression MethodInvocation gb MemberReference explain MemberReference c setConstraints StatementExpression MethodInvocation content MemberReference explain add StatementExpression MethodInvocation MemberReference content setContent StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation badGoalButton MethodInvocation isSelected getModel BlockStatement StatementExpression MethodInvocation MemberReference e badGoal IfStatement MethodInvocation badDecButton MethodInvocation isSelected getModel BlockStatement StatementExpression MethodInvocation MemberReference e badDec IfStatement MethodInvocation explainButton MethodInvocation isSelected getModel BlockStatement StatementExpression MethodInvocation MemberReference e explain BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""DissmissToDoItemDialog: Unknown action: "" MemberReference e warn End End End addActionListener getOkButton StatementExpression Assignment MemberReference actionGroup ClassCreator ReferenceType ButtonGroup = StatementExpression MethodInvocation actionGroup MemberReference badGoalButton add StatementExpression MethodInvocation actionGroup MemberReference badDecButton add StatementExpression MethodInvocation actionGroup MemberReference explainButton add StatementExpression MethodInvocation actionGroup MethodInvocation explainButton getModel Literal true setSelected StatementExpression MethodInvocation explanation MethodInvocation Translator Literal ""label.enter-rationale-here"" localize setText StatementExpression MethodInvocation badGoalButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation explanation Literal false setEnabled addActionListener StatementExpression MethodInvocation badDecButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation explanation Literal false setEnabled addActionListener StatementExpression MethodInvocation explainButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation explanation Literal true setEnabled StatementExpression MethodInvocation explanation requestFocus StatementExpression MethodInvocation explanation selectAll addActionListener MethodDeclaration /**
     * @param t the new target object (ToDoItem)
     */ Modifier public setTarget FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference target Cast ReferenceType ToDoItem MemberReference t = MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean b StatementExpression SuperMethodInvocation MemberReference b setVisible IfStatement MemberReference b BlockStatement StatementExpression MethodInvocation explanation requestFocus StatementExpression MethodInvocation explanation selectAll End MethodDeclaration Modifier private badGoal FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType GoalsDialog VariableDeclarator d ClassCreator ReferenceType GoalsDialog StatementExpression MethodInvocation d Literal true setVisible MethodDeclaration Modifier private badDec FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType DesignIssuesDialog VariableDeclarator d ClassCreator ReferenceType DesignIssuesDialog StatementExpression MethodInvocation d Literal true setVisible MethodDeclaration Modifier private explain FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList theDesigner TryStatement StatementExpression MethodInvocation list MemberReference target MethodInvocation explanation getText explicitlyResolve StatementExpression MethodInvocation Designer MemberReference Designer MODEL_TODOITEM_DISMISSED Literal null Literal null firePropertyChange CatchClause CatchClauseParameter UnresolvableException ure StatementExpression MethodInvocation LOG Literal ""Resolve failed (ure): "" MemberReference ure error StatementExpression MethodInvocation JOptionPane This MethodInvocation ure getMessage MethodInvocation Translator Literal ""optionpane.dismiss-failed"" localize MemberReference JOptionPane ERROR_MESSAGE showMessageDialog ReferenceType ArgoDialog",0
969,969,,1
1133,1133,,0
1521,1521,,0
989,989,,1
832,832,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.Collection Import java.util.Iterator Import org.omg.uml.foundation.core.DataType Import org.omg.uml.foundation.core.Feature Import org.omg.uml.foundation.core.Interface Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Stereotype Import org.omg.uml.foundation.core.TagDefinition Import org.omg.uml.foundation.core.UmlClass Import org.omg.uml.modelmanagement.UmlPackage ClassDeclaration Modifier final /**
 * Utility class to facilitate copying model elements.
 *
 * @author Michael Stockman
 * @since 0.13.2
 */ CopyHelper FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl ConstructorDeclaration /**
     * Constructor to forbid creation of this object.
     *
     * @param implementation
     *            To get other helpers and factories.
     */ CopyHelper FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration /**
     * @see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object)
     *
     * Make a copy of element in the given namespace.<p>
     *
     * This function is a dispatcher that calls the
     * copyElement(Element,Namespace) function from XXXFactory.<p>
     *
     * This function may fail and return null for any of the following reasons:
     * <ol>
     * <li>No copy function is known for element's type.
     * <li>The copy function fails or throws.
     * </ol>
     *
     * @param anelement
     *            is the element to copy.
     * @param ans
     *            the namespace
     * @return a copy of element, or null.
     *
     * @throws IllegalArgumentException
     *             if element is null.
     */ Modifier public ReferenceType Object copy FormalParameter ReferenceType Object anelement FormalParameter ReferenceType Object ans LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator element Cast ReferenceType ModelElement MemberReference anelement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference ans IfStatement BinaryOperation instanceof MemberReference element ReferenceType UmlPackage BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyPackage getModelManagementFactory End IfStatement BinaryOperation instanceof MemberReference element ReferenceType UmlClass BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyClass getCoreFactory End IfStatement BinaryOperation instanceof MemberReference element ReferenceType DataType BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyDataType getCoreFactory End IfStatement BinaryOperation instanceof MemberReference element ReferenceType Interface BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyInterface getCoreFactory End IfStatement BinaryOperation instanceof MemberReference element ReferenceType Feature BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyFeature getCoreFactory End IfStatement BinaryOperation instanceof MemberReference element ReferenceType Stereotype BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyStereotype getExtensionMechanismsFactory End IfStatement BinaryOperation instanceof MemberReference element ReferenceType TagDefinition BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference ns copyTagDefinition getExtensionMechanismsFactory End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""anelement:"" MemberReference anelement Literal "", ans: "" MemberReference ans MethodDeclaration /**
     * Copy an element and its children into a namespace.
     *
     * @param anelement element to be copied
     * @param ans namespace to copy into
     * @return Object copy of given element and its children
     */ ReferenceType Object fullCopy FormalParameter ReferenceType Object anelement FormalParameter ReferenceType Object ans LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator copy Cast ReferenceType ModelElement MethodInvocation MemberReference anelement MemberReference ans copy IfStatement BinaryOperation instanceof MemberReference anelement ReferenceType Namespace BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children Cast ReferenceType Namespace MemberReference anelement IfStatement MethodInvocation ! children isEmpty BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation children iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator childToCopy MethodInvocation it next StatementExpression MethodInvocation MemberReference childToCopy MemberReference copy fullCopy End End End ReturnStatement MemberReference copy ReferenceType org ReferenceType argouml ReferenceType model ReferenceType CopyHelper",0
376,376,"CompilationUnit PackageDeclaration org.argouml.util.logging Import java.util.ArrayList Import java.util.Enumeration Import java.util.List ClassDeclaration Modifier public /**
 * This class makes it easy to get the time between two or several
 * points in the code.
 *
 * @author Linus Tolke
 */ SimpleTimer FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Long VariableDeclarator points ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Long FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator labels ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ConstructorDeclaration Modifier public /**
     * The constructor. Creates a simple timer.
     */ SimpleTimer MethodDeclaration /**
     * Mark (Store) the current time.
     */ Modifier public mark StatementExpression MethodInvocation points ClassCreator ReferenceType Long MethodInvocation System currentTimeMillis add StatementExpression MethodInvocation labels Literal null add MethodDeclaration /**
     * Mark (Store) the current time.
     *
     * @param label the mark will be labeled with this string
     */ Modifier public mark FormalParameter ReferenceType String label StatementExpression MethodInvocation mark StatementExpression MethodInvocation labels BinaryOperation - MethodInvocation labels size Literal 1 MemberReference label set MethodDeclaration /**
     * Returns a string of formatted distances.
     *
     * @return a string representing the results
     */ Modifier public ReferenceType Enumeration result StatementExpression MethodInvocation mark ReturnStatement ClassCreator ReferenceType SimpleTimerEnumeration ClassDeclaration /**
     * An enumeration to walk through all entries.<p>
     *
     * This allows us to get a summary at the end.
     *
     * @author Linus Tolke
     */ SimpleTimerEnumeration FieldDeclaration /**
         * Keep track of where we are in the list.
         */ Modifier private BasicType int VariableDeclarator count Literal 1 MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement BinaryOperation <= MemberReference count MethodInvocation points size MethodDeclaration Modifier public ReferenceType Object nextElement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator res ClassCreator ReferenceType StringBuffer SynchronizedStatement MemberReference points IfStatement BinaryOperation < MemberReference count MethodInvocation points size BlockStatement IfStatement BinaryOperation == MethodInvocation labels BinaryOperation - MemberReference count Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation res MethodInvocation MemberReference count append Literal ""phase "" append BlockStatement StatementExpression MethodInvocation res MethodInvocation labels BinaryOperation - MemberReference count Literal 1 get append End StatementExpression MethodInvocation res Literal ""                            "" append StatementExpression MethodInvocation res Literal ""                            "" append StatementExpression MethodInvocation res Literal 60 setLength StatementExpression MethodInvocation res BinaryOperation - Cast ReferenceType Long MethodInvocation points MemberReference count get Cast ReferenceType Long MethodInvocation points BinaryOperation - MemberReference count Literal 1 get append IfStatement BinaryOperation == MemberReference count MethodInvocation points size BlockStatement StatementExpression MethodInvocation res Literal ""Total                      "" append StatementExpression MethodInvocation res Literal 18 setLength StatementExpression MethodInvocation res BinaryOperation - Cast ReferenceType Long MethodInvocation points BinaryOperation - MethodInvocation points size Literal 1 get Cast ReferenceType Long MethodInvocation points Literal 0 get append End End StatementExpression MemberReference ++ count ReturnStatement MethodInvocation res toString ReferenceType Enumeration MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal """" ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation result MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation sb Cast ReferenceType String MethodInvocation e nextElement append StatementExpression MethodInvocation sb Literal ""\n"" append End ReturnStatement MethodInvocation sb toString",0
683,683,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLPlainTextDocument ClassDeclaration Modifier public /**
 * @author tfmorris
 */ UMLOperationSpecificationDocument FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 152721992761681537L ConstructorDeclaration Modifier public /**
     * Constructor.
     */ UMLOperationSpecificationDocument StatementExpression SuperConstructorInvocation Literal ""specification"" MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation getTarget isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget isAReception getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text setSpecification getCoreHelper End MethodDeclaration Modifier protected ReferenceType String getProperty IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation getTarget isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget isAReception getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getSpecification getFacade End ReturnStatement Literal null ReferenceType UMLPlainTextDocument",0
579,579,"CompilationUnit PackageDeclaration org.argouml.uml.reveng Import java.util.ArrayList Import java.util.List Import java.util.StringTokenizer Import java.net.URLClassLoader Import java.net.URL Import java.net.MalformedURLException Import java.io.File Import org.apache.log4j.Logger Import org.argouml.application.api.Argo Import org.argouml.configuration.Configuration ClassDeclaration Modifier public final /**
 * Class to help users reverse engineer class information from arbitrary
 * .jar/.class file resources, like an import classpath.<p>
 *
 * can be used as follows:
 *
 * <pre>
 * <code>
 * try {
 *     ImportClassLoader loader = ImportClassLoader.getInstance();
 *     // add paths...
 *     loader.addFile(new File(""/opt/lib/myjar.jar""));
 *
 *     Class clazz = loader.loadClass(""org.xyz.MyException"");
 *     Object ex = clazz.newInstance();
 *     cat.info(""loaded class ok"");
 * } catch(Exception e) {
 *     cat.warn(""error loading class: ""+e.toString());
 * }
 * </code>
 * </pre>
 *
 * It supports adding and removing Files from the import classpath.
 * And saving and loading the path to/from the users properties file.<p>
 *
 * It should be possible to make this the system class loader, but
 * I haven't got this to work yet:
 *
 * <pre>
 * <code>
 * final URLClassLoader urlClassLoader = new URLClassLoader(urls, cl);
 * //create a new custom class with the default classloader as its parent
 * try {
 *     EventQueue eq = Toolkit.getDefaultToolkit().getSystemEventQueue();
 *     eq.invokeAndWait(new Runnable() {
 *         public void run() {
 *             Thread.currentThread().setContextClassLoader(urlClassLoader);
 *             // this will replace the default system class loader with
 *             // the new custom classloader, so that the jvm will use
 *             // the new custom classloader to lookup a class
 *         }
 *     });
 *     //...
 * </code>
 * </pre>
 *
 * @author alexb
 */ ImportClassLoader FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ImportClassLoader getLogger FieldDeclaration Modifier private static ReferenceType ImportClassLoader VariableDeclarator instance ConstructorDeclaration Modifier private /**
     * The constructor.
     *
     * @param urls An array of urls.
     */ ImportClassLoader FormalParameter ReferenceType URL urls StatementExpression SuperConstructorInvocation MemberReference urls MethodDeclaration /**
     * Try and return the existing instance if one exists.
     *
     * @return the instance
     * @throws MalformedURLException when the url is bad
     */ Modifier public static ReferenceType ImportClassLoader getInstance MalformedURLException IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation Configuration MemberReference Argo KEY_USER_IMPORT_CLASSPATH MethodInvocation System Literal ""user.dir"" getProperty getString ReturnStatement MethodInvocation MethodInvocation MemberReference path getURLs getInstance BlockStatement ReturnStatement MemberReference instance End MethodDeclaration /**
     * There is no default constructor for URLClassloader, so we should provide
     * urls when creating the instance.
     * We crate a new instance in this method.
     *
     * @param urls the URLs
     * @return the instance of this class
     * @throws MalformedURLException when the URL is bad
     */ Modifier public static ReferenceType ImportClassLoader getInstance FormalParameter ReferenceType URL urls MalformedURLException StatementExpression Assignment MemberReference instance ClassCreator ReferenceType ImportClassLoader MemberReference urls = ReturnStatement MemberReference instance MethodDeclaration /**
     * @param f the file to be added
     * @throws MalformedURLException when the URL is bad
     * 
     * TODO: Either method signature or implementation needs to be
     * changed to make behavior consistent - tfm
     */ Modifier public addFile FormalParameter ReferenceType File f MalformedURLException TryStatement StatementExpression This MethodInvocation MethodInvocation f MethodInvocation toURL toURI addURL CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal ""could not add file "" MemberReference e warn MethodDeclaration /**
     * Remove the given file.
     * But we can't remove the last file.
     *
     * @param f the file to be removed
     */ Modifier public removeFile FormalParameter ReferenceType File f LocalVariableDeclaration ReferenceType URL VariableDeclarator url Literal null TryStatement StatementExpression Assignment MemberReference url MethodInvocation f MethodInvocation toURL toURI = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal ""could not remove file "" MemberReference e warn ReturnStatement LocalVariableDeclaration ReferenceType List VariableDeclarator urls ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MethodInvocation getURLs MemberReference length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! url MethodInvocation ArraySelector MemberReference i getURLs equals BlockStatement StatementExpression MethodInvocation urls MethodInvocation ArraySelector MemberReference i getURLs add End End IfStatement BinaryOperation == MethodInvocation urls size Literal 0 BlockStatement ReturnStatement End StatementExpression Assignment MemberReference instance ClassCreator ReferenceType ImportClassLoader Cast ReferenceType URL MethodInvocation urls toArray = MethodDeclaration /**
     * Add the file for which a path is given.
     *
     * @param path the path in String format
     */ Modifier public setPath FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference path Literal "";"" StatementExpression MethodInvocation st countTokens WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken TryStatement StatementExpression This MethodInvocation ClassCreator ReferenceType File MemberReference token addFile CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal ""could not set path "" MemberReference e warn End MethodDeclaration /**
     * Add the files for which the paths are given, and return in URL format.
     * @param path the paths in String format
     * @return the URLs
     */ Modifier public static ReferenceType URL getURLs FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType List VariableDeclarator urlList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference path Literal "";"" WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken TryStatement StatementExpression MethodInvocation urlList ClassCreator MethodInvocation toURI MethodInvocation toURL ReferenceType File MemberReference token add CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG MemberReference e error End LocalVariableDeclaration ReferenceType URL VariableDeclarator urls ArrayCreator ReferenceType URL MethodInvocation urlList size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference urls length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i urls Cast ReferenceType URL MethodInvocation urlList MemberReference i get = End ReturnStatement MemberReference urls MethodDeclaration /**
     * @param paths the paths to the files to be added
     */ Modifier public setPath FormalParameter ReferenceType Object paths ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paths length MemberReference ++ i BlockStatement TryStatement StatementExpression This MethodInvocation ClassCreator ReferenceType File MemberReference ArraySelector MemberReference i MethodInvocation toString paths addFile CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal ""could not set path "" MemberReference e warn End MethodDeclaration /**
     * Get the user-configured path.
     */ Modifier public loadUserPath StatementExpression MethodInvocation MethodInvocation Configuration MemberReference Argo KEY_USER_IMPORT_CLASSPATH Literal """" getString setPath MethodDeclaration /**
     * Store the user-configured path.
     */ Modifier public saveUserPath StatementExpression MethodInvocation Configuration MemberReference Argo KEY_USER_IMPORT_CLASSPATH This MethodInvocation toString setString MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType URL VariableDeclarator urls This MethodInvocation getURLs LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator path ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference urls length MemberReference ++ i BlockStatement StatementExpression MethodInvocation path MemberReference ArraySelector MemberReference i MethodInvocation getFile urls append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference urls length Literal 1 BlockStatement StatementExpression MethodInvocation path Literal "";"" append End End ReturnStatement MethodInvocation path toString ReferenceType URLClassLoader",0
1256,1256,,1
483,483,"CompilationUnit PackageDeclaration org.argouml.cognitive.checklist Import java.io.Serializable Import org.tigris.gef.util.Predicate Import org.tigris.gef.util.PredicateTrue ClassDeclaration Modifier public /**
 * This class defines an item that can be placed on a Checklist.
 * This is a short piece of text to prompt the designer to think of a
 * specific design issue.  CheckItems are similiar to critics in that
 * they are categorized to be relevant to issues the designer is
 * interested in, they have a guarding condition that returns true if
 * the CheckItem should be presented, and they have a piece of text
 * as design feedback. They are different in that their predicate is
 * almost always the constant 'true', and the feedback they provide
 * is much simpler.
 *
 * CheckItems are part of Checklists.  And Checklists are registered
 * with the CheckManager.
 *
 * If you have a piece of advice you would like to give a designer,
 * you can implement it as a CheckItem _very_ easily.  If you can
 * formalize the advice more, you can implement it as a Critic.
 *
 * @see Checklist
 * @see CheckManager
 * @author jrobbins
 */ CheckItem FieldDeclaration Modifier private ReferenceType String VariableDeclarator category FieldDeclaration /**
     * One sentence description of the issue. usually in the form of a
     * question.
     */ Modifier private ReferenceType String VariableDeclarator description FieldDeclaration /**
     * URL for background (textbook?) knowledge about the domain.
     */ Modifier private ReferenceType String VariableDeclarator moreInfoURL Literal ""http://argouml.tigris.org/"" FieldDeclaration /**
     * The predicate is the condition under which
     * the checkitem should be listed.
     */ Modifier private ReferenceType Predicate VariableDeclarator pred MethodInvocation PredicateTrue theInstance ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param c the category
     * @param d the description
     */ CheckItem FormalParameter ReferenceType String c FormalParameter ReferenceType String d StatementExpression MethodInvocation MemberReference c setCategory StatementExpression MethodInvocation MemberReference d setDescription ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param c the category
     * @param d the description
     * @param m the more-info-url
     * @param p the predicate
     */ CheckItem FormalParameter ReferenceType String c FormalParameter ReferenceType String d FormalParameter ReferenceType String m FormalParameter ReferenceType Predicate p StatementExpression ExplicitConstructorInvocation MemberReference c MemberReference d StatementExpression MethodInvocation MemberReference m setMoreInfoURL StatementExpression Assignment MemberReference pred MemberReference p = MethodDeclaration /**
     * @return the category
     */ Modifier public ReferenceType String getCategory ReturnStatement MemberReference category MethodDeclaration /**
     * @param c the category
     */ Modifier public setCategory FormalParameter ReferenceType String c StatementExpression Assignment MemberReference category MemberReference c = MethodDeclaration /**
     * @return the description
     */ Modifier public ReferenceType String getDescription ReturnStatement MemberReference description MethodDeclaration /**
     * @param dm the design material
     * @return the description
     */ Modifier public ReferenceType String getDescription FormalParameter ReferenceType Object dm ReturnStatement MethodInvocation MemberReference description MemberReference dm expand MethodDeclaration /**
     * @param d the description
     */ Modifier public setDescription FormalParameter ReferenceType String d StatementExpression Assignment MemberReference description MemberReference d = MethodDeclaration /**
     * @return the more-info-url
     */ Modifier public ReferenceType String getMoreInfoURL ReturnStatement MemberReference moreInfoURL MethodDeclaration /**
     * @param m  the more-info-url
     */ Modifier public setMoreInfoURL FormalParameter ReferenceType String m StatementExpression Assignment MemberReference moreInfoURL MemberReference m = MethodDeclaration /**
     * @return the predicate
     */ Modifier public ReferenceType Predicate getPredicate ReturnStatement MemberReference pred MethodDeclaration /**
     * @param p the predicate
     */ Modifier public setPredicate FormalParameter ReferenceType Predicate p StatementExpression Assignment MemberReference pred MemberReference p = MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getDescription MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType CheckItem BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType CheckItem VariableDeclarator i Cast ReferenceType CheckItem MemberReference o ReturnStatement MethodInvocation MethodInvocation MethodInvocation i getDescription equals getDescription MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getDescription MethodDeclaration /**
     * Customize/expand the description string just before it is displayed.
     * I.e. add offender specific information to the description string
     * (e.g. its name).
     *
     * @param desc       the description
     * @param dm         the design material
     * @return           the description
     */ Modifier public ReferenceType String expand FormalParameter ReferenceType String desc FormalParameter ReferenceType Object dm ReturnStatement MemberReference desc ReferenceType Serializable",1
13,13,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JPopupMenu Import org.argouml.uml.ui.AbstractActionAddModelElement Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.behavior.common_behavior.ActionNewSignal ClassDeclaration /**
 *
 * @author MarkusK
 *
 */ UMLSignalEventSignalList ConstructorDeclaration Modifier public /**
     * Constructor for UMLTransitionTriggerList.
     * @param dataModel the model
     */ UMLSignalEventSignalList FormalParameter ReferenceType UMLModelElementListModel2 dataModel StatementExpression SuperConstructorInvocation MemberReference dataModel Cast ReferenceType AbstractActionAddModelElement Literal null Literal null Literal null Literal true StatementExpression MethodInvocation Literal false setDelete StatementExpression MethodInvocation Literal null setDeleteAction MethodDeclaration Modifier public ReferenceType JPopupMenu getPopupMenu LocalVariableDeclaration ReferenceType JPopupMenu VariableDeclarator menu ClassCreator ReferenceType JPopupMenu StatementExpression MethodInvocation ActionAddSignalsToSignalEvent.SINGLETON MethodInvocation getTarget setTarget StatementExpression MethodInvocation menu MemberReference ActionAddSignalsToSignalEvent SINGLETON add StatementExpression MethodInvocation menu ClassCreator ReferenceType ActionNewSignal add ReturnStatement MemberReference menu ReferenceType UMLMutableLinkedList",0
496,496,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Iterator Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a class or interface or its base class doesn't
 * have any operations.
 */ CrNoOperations ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrNoOperations StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision BEHAVIOR addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_COMPLETENESS setKnowledgeTypes StatementExpression MethodInvocation Literal ""behavioralFeature"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference dm isAClass getFacade MethodInvocation Model MethodInvocation MemberReference dm isAInterface getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MemberReference dm getName getFacade Literal null Literal """" BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isType getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isUtility getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation MemberReference dm Literal 0 findInstanceOperationInInherited BlockStatement ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND MethodDeclaration Modifier public Annotation Override ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClOperationCompartment getTheInstance MethodDeclaration Modifier private BasicType boolean findInstanceOperationInInherited FormalParameter ReferenceType Object dm FormalParameter BasicType int depth LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ops MethodInvocation Model MethodInvocation MemberReference dm getOperations MethodInvocation iterator getFacade WhileStatement MethodInvocation ops hasNext BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation ops next isStatic getFacade BlockStatement ReturnStatement Literal true End End IfStatement BinaryOperation > MemberReference depth Literal 50 ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference dm getGeneralizations MethodInvocation iterator getFacade WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation iter next getGeneral getFacade IfStatement BinaryOperation == MemberReference parent MemberReference dm ContinueStatement End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade MethodInvocation MemberReference parent BinaryOperation + MemberReference depth Literal 1 findInstanceOperationInInherited BlockStatement ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration Modifier public Annotation Override initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizAddOperation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion StatementExpression Cast ReferenceType WizAddOperation MemberReference w StatementExpression Cast ReferenceType WizAddOperation MemberReference w End MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizAddOperation ReferenceType CrUML",1
1158,1158,,0
449,449,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Graphics InterfaceDeclaration Modifier public /**
 * Interface for objects which can be ""clarified."" This means they support the
 * method paintClarifiers() to highlight a piece of the graphic. Used by the
 * Critics subsystem to highlight problem areas.
 * 
 * @author Tom Morris
 */ Clarifiable MethodDeclaration paintClarifiers FormalParameter ReferenceType Graphics g",0
381,381,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * @author lmaitre
 *
 */ AbstractModelFactory",0
985,985,,0
1531,1531,,1
1416,1416,,0
1502,1502,,0
812,812,"CompilationUnit PackageDeclaration org.argouml.profile.init Import java.util.ArrayList Import java.util.List Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.application.api.InitSubsystem Import org.argouml.profile.ProfileFacade ClassDeclaration Modifier public /**
 * Initializer class for the Profile subsystem.
 * 
 * @author Luis Sergio Oliveira (euluis)
 */ InitProfileSubsystem MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GUISettingsTabInterface MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getSettingsTabs ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GUISettingsTabInterface MethodDeclaration Modifier public init StatementExpression MethodInvocation ProfileFacade ClassCreator ReferenceType org ReferenceType argouml ReferenceType profile ReferenceType internal ReferenceType ProfileManagerImpl setManager ReferenceType InitSubsystem",0
1356,1356,,0
222,222,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import java.beans.PropertyChangeListener Import java.util.Iterator Import java.util.List Import org.argouml.model.Model Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the text shown in the Fig that represents the Message.
 * Subclass this for all languages.
 * 
 * @author michiel
 */ MessageNotation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param message the UML element
     */ MessageNotation FormalParameter ReferenceType Object message IfStatement MethodInvocation ! Model MethodInvocation MemberReference message isAMessage getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not an Message."" End MethodDeclaration Modifier public initialiseListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference listener MemberReference modelElement ArrayCreator ReferenceType String ArrayInitializer Literal ""activator"" Literal ""predecessor"" Literal ""successor"" Literal ""sender"" Literal ""receiver"" Literal ""action"" addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference modelElement getAction getFacade IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference action ArrayCreator ReferenceType String ArrayInitializer Literal ""remove"" Literal ""recurrence"" Literal ""script"" Literal ""actualArgument"" addElementListener LocalVariableDeclaration ReferenceType List VariableDeclarator args MethodInvocation Model MethodInvocation MemberReference action getActualArguments getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation args iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator argument MethodInvocation it next StatementExpression MethodInvocation MemberReference listener MemberReference argument ArrayCreator ReferenceType String ArrayInitializer Literal ""remove"" Literal ""value"" addElementListener End End ReferenceType NotationProvider",1
766,766,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * PerspectiveRule to navigate from statemachine to the subvertices of
 * its top state (1 level deep only).
 *
 * @author jaap.branderhorst@xs4all.nl
 */ GoStateMachineToState MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state-machine.state"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade getSubvertices getFacade End End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade Literal null BlockStatement StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade add End ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
745,745,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.event.ItemEvent Import javax.swing.JCheckBox Import org.argouml.ui.StylePanelFigNodeModelElement ClassDeclaration Modifier public /**
 * Stylepanel which adds an operation checkbox and depends on FigInterface.
 * @see FigInterface
 *
 * @author mkl
 *
 */ StylePanelFigInterface FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator operCheckBox ClassCreator ReferenceType JCheckBox Literal ""Operations"" FieldDeclaration /**
     * Flag to indicate that a refresh is going on.
     */ Modifier private BasicType boolean VariableDeclarator refreshTransaction ConstructorDeclaration Modifier public /**
     * The constructor.
     */ StylePanelFigInterface StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference operCheckBox addToDisplayPane StatementExpression MethodInvocation operCheckBox Literal false setSelected StatementExpression MethodInvocation operCheckBox This addItemListener MethodDeclaration Modifier public refresh StatementExpression Assignment MemberReference refreshTransaction Literal true = StatementExpression SuperMethodInvocation refresh LocalVariableDeclaration ReferenceType FigInterface VariableDeclarator ti Cast ReferenceType FigInterface MethodInvocation getPanelTarget StatementExpression MethodInvocation operCheckBox MethodInvocation ti isOperationsVisible setSelected StatementExpression Assignment MemberReference refreshTransaction Literal false = MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement MemberReference ! refreshTransaction BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference operCheckBox BlockStatement StatementExpression Cast ReferenceType FigInterface MethodInvocation getPanelTarget BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5908351031706234211L ReferenceType StylePanelFigNodeModelElement",0
166,166,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.util.List Import java.util.ArrayList Import org.argouml.ui.explorer.rules.PerspectiveRule Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * Represents a perspective (or view) of the uml model for display in the
 * explorer.<p>
 *
 * This class replaces the old NavPerspective class. This is much simpler.<p>
 *
 * The rules in the perspective generate child nodes for any given parent
 * node in the explorer tree view. Those nodes are then stored as user objects
 * in the ExplorerTreeModel for efficient rendering.
 *
 * @author  alexb
 * @since 0.15.2, Created on 27 September 2003, 09:32
 */ ExplorerPerspective FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType PerspectiveRule VariableDeclarator rules FieldDeclaration Modifier private ReferenceType String VariableDeclarator name ConstructorDeclaration Modifier public /**
     * Creates a new instance of ExplorerPerspective.
     *
     * @param newName the to be localized name for the perspective
     */ ExplorerPerspective FormalParameter ReferenceType String newName StatementExpression Assignment MemberReference name MethodInvocation Translator MemberReference newName localize = StatementExpression Assignment MemberReference rules ClassCreator ReferenceType ArrayList TypeArgument ReferenceType PerspectiveRule = MethodDeclaration /**
     * @param rule the rule to add
     */ Modifier public addRule FormalParameter ReferenceType PerspectiveRule rule StatementExpression MethodInvocation rules MemberReference rule add MethodDeclaration /**
     * @param rule the rule to remove
     */ Modifier public removeRule FormalParameter ReferenceType PerspectiveRule rule StatementExpression MethodInvocation rules MemberReference rule remove MethodDeclaration /**
     * @return the array with all the rules
     */ Modifier public ReferenceType Object getRulesArray ReturnStatement MethodInvocation rules toArray MethodDeclaration /**
     * @return the List with all the rules
     */ Modifier public ReferenceType List TypeArgument ReferenceType PerspectiveRule getList ReturnStatement MemberReference rules MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MemberReference name MethodDeclaration /**
     * Make a clone of this ExplorerPerspective with a different given name.
     * @param newName the given name
     * @return the new ExplorerPerspective
     */ Modifier public ReferenceType ExplorerPerspective makeNamedClone FormalParameter ReferenceType String newName LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator ep ClassCreator ReferenceType ExplorerPerspective MemberReference newName StatementExpression MethodInvocation ep.rules MemberReference rules addAll ReturnStatement MemberReference ep MethodDeclaration /**
     * @param theNewName the new name for the ExplorerPerspective
     */ Modifier protected setName FormalParameter ReferenceType String theNewName StatementExpression Assignment This MemberReference name MemberReference theNewName =",0
1225,1225,,0
399,399,"CompilationUnit PackageDeclaration org.argouml.ui Import javax.swing.table.AbstractTableModel ClassDeclaration Modifier public /**
 * Table model for a table two visible columns and one invisible column. The
 * first column contains a noneditable Object value. The second column contains
 * a Boolean value for the checkbox. The third column is invisible and contains
 * an Object value for arbitrary data. This table model is useful for the code
 * generation dialog, the sequence diagram reverse enginneering dialog and
 * others.
 */ CheckboxTableModel ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param labels The labels to show in column 1 in the table.
     * @param data The data connected to each line.
     * @param colName1 The header of the first column.
     * @param colName2 The header of the second column.
     */ CheckboxTableModel FormalParameter ReferenceType Object labels FormalParameter ReferenceType Object data FormalParameter ReferenceType String colName1 FormalParameter ReferenceType String colName2 StatementExpression Assignment MemberReference elements ArrayCreator ReferenceType Object MemberReference labels length Literal 3 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ArraySelector Literal 0 elements MemberReference ArraySelector MemberReference i labels = StatementExpression Assignment MemberReference ArraySelector MemberReference i ArraySelector Literal 1 elements MemberReference Boolean TRUE = IfStatement BinaryOperation && BinaryOperation != MemberReference data Literal null BinaryOperation < MemberReference i MemberReference data length BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ArraySelector Literal 2 elements MemberReference ArraySelector MemberReference i data = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ArraySelector Literal 2 elements Literal null = End End StatementExpression Assignment MemberReference columnName1 MemberReference colName1 = StatementExpression Assignment MemberReference columnName2 MemberReference colName2 = MethodDeclaration Modifier public BasicType int getColumnCount ReturnStatement Literal 2 MethodDeclaration Modifier public ReferenceType String getColumnName FormalParameter BasicType int col IfStatement BinaryOperation == MemberReference col Literal 0 BlockStatement ReturnStatement MemberReference columnName1 IfStatement BinaryOperation == MemberReference col Literal 1 BlockStatement ReturnStatement MemberReference columnName2 End End ReturnStatement Literal null MethodDeclaration Modifier public BasicType int getRowCount ReturnStatement MemberReference elements length MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation && BinaryOperation < MemberReference row MemberReference elements length BinaryOperation < MemberReference col Literal 3 BlockStatement ReturnStatement MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Index out of bounds"" End MethodDeclaration Modifier public setValueAt FormalParameter ReferenceType Object ob FormalParameter BasicType int row FormalParameter BasicType int col StatementExpression Assignment MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements MemberReference ob = MethodDeclaration Modifier public ReferenceType Class getColumnClass FormalParameter BasicType int col IfStatement BinaryOperation == MemberReference col Literal 0 BlockStatement ReturnStatement ClassReference ReferenceType String IfStatement BinaryOperation == MemberReference col Literal 1 BlockStatement ReturnStatement ClassReference ReferenceType Boolean IfStatement BinaryOperation == MemberReference col Literal 2 BlockStatement ReturnStatement ClassReference ReferenceType Object End End End ReturnStatement Literal null MethodDeclaration Modifier public BasicType boolean isCellEditable FormalParameter BasicType int row FormalParameter BasicType int col ReturnStatement BinaryOperation && BinaryOperation == MemberReference col Literal 1 BinaryOperation < MemberReference row MemberReference elements length FieldDeclaration Modifier private ReferenceType Object VariableDeclarator elements FieldDeclaration Modifier private ReferenceType String VariableDeclarator columnName1 VariableDeclarator columnName2 FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 111532940880908401L ReferenceType AbstractTableModel",0
970,970,,1
1200,1200,,1
1073,1073,,0
329,329,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.layout Import java.awt.Dimension Import java.awt.Point Import java.util.ArrayList Import java.util.HashMap Import java.util.Iterator Import java.util.List Import java.util.TreeSet Import java.util.Vector Import org.apache.log4j.Logger Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.layout.LayoutedObject Import org.argouml.uml.diagram.layout.Layouter Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * This class implements a layout algorithm for class diagrams.<p>
 *
 * The layout process is performed in a row by row way. The position of the
 * nodes in a row are set using the sequence given by the <em>natural order
 * </em> of the nodes.<p>
 *
 * The resulting layout sequence:
 * <ol>
 * <li>Standalone (i.e. without links) nodes first, followed by linked nodes
 * <li>Ordered by node-typ: package, interface, class, <em>other</em>
 * <li>Increasing level in link-hierarchy - root elements first
 * <li>Decreasing amount of weighted links
 * <li>Ascending name of model object
 * </ol>
 *
 * @see ClassdiagramNode#compareTo
 *
 */ ClassdiagramLayouter ClassDeclaration Modifier private /**
     * This class keeps all the nodes in one row together and provides basic
     * functionality for them.
     *
     * @author David Gunkel
     */ NodeRow FieldDeclaration /**
         * Keeps all nodes of this row.
         */ Modifier private ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator nodes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode FieldDeclaration /**
         * The row number of this row.
         */ Modifier private BasicType int VariableDeclarator rowNumber ConstructorDeclaration Modifier public /**
         * Construct an empty NodeRow with the given row number.
         *
         * @param aRowNumber The row number of this row.
         */ NodeRow FormalParameter BasicType int aRowNumber StatementExpression Assignment MemberReference rowNumber MemberReference aRowNumber = MethodDeclaration /**
         * Add a node to this NodeRow.
         *
         * @param node The node to be added
         */ Modifier public addNode FormalParameter ReferenceType ClassdiagramNode node StatementExpression MethodInvocation node MemberReference rowNumber setRank StatementExpression MethodInvocation node MethodInvocation nodes size setColumn StatementExpression MethodInvocation nodes MemberReference node add MethodDeclaration /**
         * Splittable are packages and standalone-nodes. A split is performed,
         * if the maximum width is reached or when a type change occurs (from
         * package to not-package, from standalone to not-standalone).
	 *
         * <ul>
         * <li>packages
         * <li>After standalone
         * </ul>
	 *
         * Split this row into two, if
         * <ul>
         * <li>at least one standalone node is available
         * <li>and the given maximum row width is exceeded
         * <li>or a non-standalone element is detected.
         * </ul>
	 *
         * Return the new NodeRow or null if this row is not split.
         *
         * @param maxWidth
         *            The maximum allowed row width
         * @param gap
         *            The horizontal gab between two nodes
         * @return NodeRow
         */ Modifier public ReferenceType NodeRow doSplit FormalParameter BasicType int maxWidth FormalParameter BasicType int gap LocalVariableDeclaration ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode VariableDeclarator ts ClassCreator ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode MemberReference nodes IfStatement BinaryOperation < MethodInvocation ts size Literal 2 BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator firstNode MethodInvocation ts first IfStatement MethodInvocation ! firstNode isStandalone BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator lastNode MethodInvocation ts last IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation firstNode isStandalone MethodInvocation lastNode isStandalone BinaryOperation == MethodInvocation firstNode isPackage MethodInvocation lastNode isPackage BinaryOperation <= MethodInvocation MemberReference gap getWidth MemberReference maxWidth BlockStatement ReturnStatement Literal null End LocalVariableDeclaration BasicType boolean VariableDeclarator hasPackage MethodInvocation firstNode isPackage LocalVariableDeclaration ReferenceType NodeRow VariableDeclarator newRow ClassCreator ReferenceType NodeRow BinaryOperation + MemberReference rowNumber Literal 1 LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node Literal null LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator split Literal null LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ClassdiagramNode VariableDeclarator iter LocalVariableDeclaration BasicType int VariableDeclarator width Literal 0 ForStatement ForControl Assignment MemberReference iter MethodInvocation ts iterator = BinaryOperation && MethodInvocation iter hasNext BinaryOperation < MemberReference width MemberReference maxWidth BlockStatement StatementExpression Assignment MemberReference node MethodInvocation iter next = StatementExpression Assignment MemberReference split TernaryExpression BinaryOperation || BinaryOperation || BinaryOperation == MemberReference split Literal null BinaryOperation && MemberReference hasPackage BinaryOperation == MethodInvocation split isPackage MemberReference hasPackage MethodInvocation split isStandalone MemberReference node MemberReference split = StatementExpression Assignment MemberReference width BinaryOperation + MethodInvocation node MemberReference width getSize MemberReference gap += End StatementExpression Assignment MemberReference nodes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode MethodInvocation ts MemberReference split headSet = ForStatement ForControl Assignment MemberReference iter MethodInvocation ts MethodInvocation iterator MemberReference split tailSet = MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation newRow MethodInvocation iter next addNode End IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Row split. This row width: "" MethodInvocation MemberReference gap getWidth Literal "" next row(s) width: "" MethodInvocation newRow MemberReference gap getWidth debug End ReturnStatement MemberReference newRow MethodDeclaration /**
         * @return Returns the nodes.
         * @deprecated for 0.25.1 by tfmorris - use {@link #getNodeList()}
         */ Modifier public ReferenceType Vector TypeArgument ReferenceType ClassdiagramNode getNodes ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType ClassdiagramNode MemberReference nodes MethodDeclaration /**
         * @return Returns the nodes.
         */ Modifier public ReferenceType List TypeArgument ReferenceType ClassdiagramNode getNodeList ReturnStatement MemberReference nodes MethodDeclaration /**
         * @return Returns the rowNumber.
         */ Modifier public BasicType int getRowNumber ReturnStatement MemberReference rowNumber MethodDeclaration /**
         * Get an Iterator for the nodes of this row, sorted by their natural
         * order.
         *
         * @return Iterator for sorted nodes
         */ Modifier public ReferenceType Iterator TypeArgument ReferenceType ClassdiagramNode getSortedIterator ReturnStatement ClassCreator MethodInvocation iterator ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode MemberReference nodes MethodDeclaration /**
         * Get the width for this row using the given horizontal gap between
         * nodes.
         *
         * @param gap The horizontal gap between nodes.
         * @return The width of this row
         */ Modifier public BasicType int getWidth FormalParameter BasicType int gap LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference nodes BlockStatement StatementExpression Assignment MemberReference result BinaryOperation + MethodInvocation node MemberReference width getSize MemberReference gap += End IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Width of row "" MemberReference rowNumber Literal "": "" MemberReference result debug End ReturnStatement MemberReference result MethodDeclaration /**
         * Set the row number of this row.
         *
         * @param rowNum The rowNumber to set.
         */ Modifier public setRowNumber FormalParameter BasicType int rowNum StatementExpression Assignment This MemberReference rowNumber MemberReference rowNum = StatementExpression MethodInvocation adjustRowNodes MethodDeclaration /**
         * Adjust the properties for all nodes in this row: rank,
         * column, offset for edges.
         */ Modifier private adjustRowNodes LocalVariableDeclaration BasicType int VariableDeclarator col Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator numNodesWithDownlinks Literal 0 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ClassdiagramNode VariableDeclarator iter MethodInvocation getSortedIterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MethodInvocation iter next StatementExpression MethodInvocation node MemberReference rowNumber setRank StatementExpression MethodInvocation node MemberReference ++ col setColumn IfStatement MethodInvocation ! node MethodInvocation isEmpty getDownNodes BlockStatement StatementExpression MemberReference ++ numNodesWithDownlinks StatementExpression MethodInvocation list MemberReference node add End End LocalVariableDeclaration BasicType int VariableDeclarator offset BinaryOperation / BinaryOperation * MemberReference - numNodesWithDownlinks MemberReference E_GAP Literal 2 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference list BlockStatement StatementExpression MethodInvocation node MemberReference offset setEdgeOffset StatementExpression Assignment MemberReference offset MemberReference E_GAP += End FieldDeclaration /**
     * Constant value for the gap between edges.
     */ Modifier private final static BasicType int VariableDeclarator E_GAP Literal 5 FieldDeclaration /**
     * Constant value for the horizontal gap between nodes.
     */ Modifier private final static BasicType int VariableDeclarator H_GAP Literal 80 FieldDeclaration /**
     * Logger for logging events.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ClassdiagramLayouter getLogger FieldDeclaration /**
     * Constant value for the maximum row width.
     */ Modifier private final static BasicType int VariableDeclarator MAX_ROW_WIDTH Literal 1200 FieldDeclaration /**
     * Constant value for the vertical gap between nodes.
     */ Modifier private final static BasicType int VariableDeclarator V_GAP Literal 80 FieldDeclaration /**
     * The diagram that will be layouted.
     */ Modifier private ReferenceType ArgoDiagram VariableDeclarator diagram FieldDeclaration /**
     * HashMap with figures as key and Nodes as elements.
     */ Modifier private ReferenceType HashMap TypeArgument ReferenceType Fig TypeArgument ReferenceType ClassdiagramNode VariableDeclarator figNodes ClassCreator ReferenceType HashMap TypeArgument ReferenceType Fig TypeArgument ReferenceType ClassdiagramNode FieldDeclaration /**
     * layoutedClassNodes is a convenience which holds a subset of
     * layoutedObjects (only ClassNodes).
     */ Modifier private ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator layoutedClassNodes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode FieldDeclaration /**
     * Holds all edges - subset of layoutedObjects.
     */ Modifier private ReferenceType List TypeArgument ReferenceType ClassdiagramEdge VariableDeclarator layoutedEdges ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramEdge FieldDeclaration /**
     * Attribute layoutedObjects holds the objects to layout.
     */ Modifier private ReferenceType List TypeArgument ReferenceType LayoutedObject VariableDeclarator layoutedObjects ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LayoutedObject FieldDeclaration /**
     * nodeRows contains all DiagramRows of the diagram.
     */ Modifier private ReferenceType List TypeArgument ReferenceType NodeRow VariableDeclarator nodeRows ClassCreator ReferenceType ArrayList TypeArgument ReferenceType NodeRow FieldDeclaration /**
     * internal.
     */ Modifier private BasicType int VariableDeclarator xPos FieldDeclaration /**
     * internal.
     */ Modifier private BasicType int VariableDeclarator yPos ConstructorDeclaration Modifier public /**
     * Constructor for the layouter. Takes a diagram as input to extract all
     * LayoutedObjects, which will be layouted.
     *
     * @param theDiagram The diagram to layout.
     */ ClassdiagramLayouter FormalParameter ReferenceType ArgoDiagram theDiagram StatementExpression Assignment MemberReference diagram MemberReference theDiagram = LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Fig VariableDeclarator nodeIter MethodInvocation diagram MethodInvocation getContents MethodInvocation iterator getLayer WhileStatement MethodInvocation nodeIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation nodeIter next IfStatement BinaryOperation == MethodInvocation fig getEnclosingFig Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation ClassdiagramModelElementFactory.SINGLETON MemberReference fig getInstance add End End MethodDeclaration /**
     * Add an object to layout.
     *
     * @param obj represents the object to layout.
     */ Modifier public add FormalParameter ReferenceType LayoutedObject obj StatementExpression MethodInvocation layoutedObjects MemberReference obj add IfStatement BinaryOperation instanceof MemberReference obj ReferenceType ClassdiagramNode BlockStatement StatementExpression MethodInvocation layoutedClassNodes Cast ReferenceType ClassdiagramNode MemberReference obj add IfStatement BinaryOperation instanceof MemberReference obj ReferenceType ClassdiagramEdge BlockStatement StatementExpression MethodInvocation layoutedEdges Cast ReferenceType ClassdiagramEdge MemberReference obj add End End MethodDeclaration /**
     * Get the horizontal gap between nodes.
     *
     * @return The horizontal gap between nodes.
     */ Modifier private BasicType int getHGap ReturnStatement MemberReference H_GAP MethodDeclaration /**
     * Operation getMinimumDiagramSize returns the minimum diagram size after
     * the layout process.
     *
     * @return The minimum diagram size after the layout process.
     */ Modifier public ReferenceType Dimension getMinimumDiagramSize LocalVariableDeclaration BasicType int VariableDeclarator width Literal 0 VariableDeclarator height Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator hGap2 BinaryOperation / MethodInvocation getHGap Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator vGap2 BinaryOperation / MethodInvocation getVGap Literal 2 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference layoutedClassNodes BlockStatement StatementExpression Assignment MemberReference width MethodInvocation Math MemberReference width BinaryOperation + BinaryOperation + MethodInvocation node MemberReference x getLocation Cast BasicType int MethodInvocation node MethodInvocation getWidth getSize MemberReference hGap2 max = StatementExpression Assignment MemberReference height MethodInvocation Math MemberReference height BinaryOperation + BinaryOperation + MethodInvocation node MemberReference y getLocation Cast BasicType int MethodInvocation node MethodInvocation getHeight getSize MemberReference vGap2 max = End ReturnStatement ClassCreator ReferenceType Dimension MemberReference width MemberReference height MethodDeclaration /**
     * Operation getObject returns a object with a given index from the
     * layouter.
     *
     * @param index
     *            represents the index of this object in the layouter.
     * @return The LayoutedObject for the given index.
     */ Modifier public ReferenceType LayoutedObject getObject FormalParameter BasicType int index ReturnStatement MethodInvocation layoutedObjects MemberReference index get MethodDeclaration /**
     * Operation getObjects returns all the objects currently participating in
     * the layout process.
     *
     * @return An array holding all the object in the layouter.
     */ Modifier public ReferenceType LayoutedObject getObjects ReturnStatement Cast ReferenceType LayoutedObject MethodInvocation layoutedObjects toArray MethodDeclaration /**
     * Get the vertical gap between nodes.
     *
     * @return The vertical gap between nodes.
     */ Modifier private BasicType int getVGap ReturnStatement MemberReference V_GAP MethodDeclaration /**
     * Operation layout implements the actual layout algorithm.
     */ Modifier public layout LocalVariableDeclaration BasicType long VariableDeclarator s MethodInvocation System currentTimeMillis StatementExpression MethodInvocation setupLinks StatementExpression MethodInvocation rankAndWeightNodes StatementExpression MethodInvocation placeNodes StatementExpression MethodInvocation placeEdges StatementExpression MethodInvocation LOG BinaryOperation + Literal ""layout duration: "" BinaryOperation - MethodInvocation System currentTimeMillis MemberReference s debug MethodDeclaration /**
     * All layoutedObjects of type ""Edge"" are placed using an
     * edge-type specific layout algorithm. The offset from a
     * <em>centered</em> edge is taken from the parent node to avoid
     * overlaps.
     *
     * @see ClassdiagramEdge
     */ Modifier private placeEdges StatementExpression MethodInvocation ClassdiagramEdge MethodInvocation getVGap setVGap StatementExpression MethodInvocation ClassdiagramEdge MethodInvocation getHGap setHGap ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramEdge VariableDeclarator edge MemberReference layoutedEdges BlockStatement IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramInheritanceEdge BlockStatement LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator parent MethodInvocation figNodes MethodInvocation edge getDestFigNode get StatementExpression Cast ReferenceType ClassdiagramInheritanceEdge MemberReference edge End StatementExpression MethodInvocation edge layout End MethodDeclaration /**
     * Set the placement coordinate for a given node.
     *
     * @param node To be placed.
     */ Modifier private placeNode FormalParameter ReferenceType ClassdiagramNode node LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator uplinks MethodInvocation node getUpNodes LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator downlinks MethodInvocation node getDownNodes LocalVariableDeclaration BasicType int VariableDeclarator curW MethodInvocation node MemberReference width getSize LocalVariableDeclaration BasicType double VariableDeclarator xOffset BinaryOperation + MethodInvocation node MemberReference width getSize MethodInvocation getHGap LocalVariableDeclaration BasicType int VariableDeclarator bumpX BinaryOperation / MethodInvocation getHGap Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator xPosNew MethodInvocation Math BinaryOperation + MemberReference xPos MemberReference bumpX TernaryExpression BinaryOperation == MethodInvocation uplinks size Literal 1 MethodInvocation node getPlacementHint Literal - 1 max StatementExpression MethodInvocation node ClassCreator ReferenceType Point MemberReference xPosNew MemberReference yPos setLocation IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""placeNode - Row: "" MethodInvocation node getRank Literal "" Col: "" MethodInvocation node getColumn Literal "" Weight: "" MethodInvocation node getWeight Literal "" Position: ("" MemberReference xPosNew Literal "","" MemberReference yPos Literal "") xPos: "" MemberReference xPos Literal "" hint: "" MethodInvocation node getPlacementHint debug End IfStatement BinaryOperation && BinaryOperation == MethodInvocation downlinks size Literal 1 MethodInvocation downlinks MethodInvocation getUpNodes MethodInvocation Literal 0 get MethodInvocation MemberReference node equals Literal 0 get BlockStatement StatementExpression MethodInvocation downlinks MethodInvocation MemberReference xPosNew setPlacementHint Literal 0 get End StatementExpression Assignment MemberReference xPos Cast BasicType int MethodInvocation Math BinaryOperation + MethodInvocation node getPlacementHint MemberReference curW BinaryOperation + MemberReference xPos MemberReference xOffset max = MethodDeclaration /**
     * Place the NodeRows in the diagram.
     */ Modifier private placeNodes LocalVariableDeclaration BasicType int VariableDeclarator xInit Literal 0 StatementExpression Assignment MemberReference yPos BinaryOperation / MethodInvocation getVGap Literal 2 = ForStatement EnhancedForControl VariableDeclaration ReferenceType NodeRow VariableDeclarator row MemberReference nodeRows BlockStatement LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ClassdiagramNode VariableDeclarator iNode MethodInvocation row getSortedIterator StatementExpression Assignment MemberReference xPos MemberReference xInit = LocalVariableDeclaration BasicType int VariableDeclarator rowHeight Literal 0 WhileStatement MethodInvocation iNode hasNext BlockStatement LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MethodInvocation iNode next StatementExpression MethodInvocation MemberReference node placeNode StatementExpression Assignment MemberReference rowHeight MethodInvocation Math MemberReference rowHeight MethodInvocation node MemberReference height getSize max = End StatementExpression Assignment MemberReference yPos BinaryOperation + MemberReference rowHeight MethodInvocation getVGap += End StatementExpression MethodInvocation centerParents MethodDeclaration /**
     * Center parents over their children, working from bottom to top.
     */ Modifier private centerParents ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation nodeRows size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ClassdiagramNode VariableDeclarator iNode MethodInvocation nodeRows MethodInvocation getSortedIterator MemberReference i get WhileStatement MethodInvocation iNode hasNext BlockStatement LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MethodInvocation iNode next LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator children MethodInvocation node getDownNodes IfStatement BinaryOperation > MethodInvocation children size Literal 0 BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType Point BinaryOperation - MethodInvocation MemberReference children xCenter BinaryOperation / MethodInvocation node MemberReference width getSize Literal 2 MethodInvocation node MemberReference y getLocation setLocation End End End MethodDeclaration /**
     * Compute the horizontal center of a list of nodes.
     * @param nodes the list of nodes
     * @return the computed X coordinate
     */ Modifier private BasicType int xCenter FormalParameter ReferenceType List TypeArgument ReferenceType ClassdiagramNode nodes LocalVariableDeclaration BasicType int VariableDeclarator left Literal 9999999 LocalVariableDeclaration BasicType int VariableDeclarator right Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference nodes BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation node MemberReference x getLocation StatementExpression Assignment MemberReference left MethodInvocation Math MemberReference left MemberReference x min = StatementExpression Assignment MemberReference right MethodInvocation Math MemberReference right BinaryOperation + MemberReference x MethodInvocation node MemberReference width getSize max = End ReturnStatement BinaryOperation / BinaryOperation + MemberReference right MemberReference left Literal 2 MethodDeclaration /**
     * Rank the nodes depending on their level (position in hierarchy) and set
     * their weight to achieve a proper node-sequence for the layout. Rows
     * exceeding the maximum row width are split, if standalone nodes are
     * available.
     * <p>
     * Weight the other nodes to determine their columns.
     * <p>
     * TODO: Weighting doesn't appear to be working as intended because multiple
     * groups of children/specializations get intermixed in name order rather
     * than being grouped by their parent/generalization. - tfm - 20070314
     */ Modifier private rankAndWeightNodes LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator comments ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode StatementExpression MethodInvocation nodeRows clear LocalVariableDeclaration ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode VariableDeclarator nodeTree ClassCreator ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode MemberReference layoutedClassNodes ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference nodeTree BlockStatement IfStatement MethodInvocation node isComment BlockStatement StatementExpression MethodInvocation comments MemberReference node add BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator rowNum MethodInvocation node getRank ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation nodeRows size BinaryOperation <= MemberReference i MemberReference rowNum MemberReference ++ i BlockStatement StatementExpression MethodInvocation nodeRows ClassCreator ReferenceType NodeRow MemberReference rowNum add End StatementExpression MethodInvocation nodeRows MethodInvocation MemberReference node addNode MemberReference rowNum get End End ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference comments BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator rowInd TernaryExpression MethodInvocation node MethodInvocation isEmpty getUpNodes Literal 0 MethodInvocation node getUpNodes StatementExpression MethodInvocation nodeRows MethodInvocation MemberReference node addNode MemberReference rowInd get End ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator row Literal 0 BinaryOperation < MemberReference row MethodInvocation nodeRows size BlockStatement LocalVariableDeclaration ReferenceType NodeRow VariableDeclarator diaRow MethodInvocation nodeRows MemberReference row get StatementExpression MethodInvocation diaRow MemberReference ++ row setRowNumber StatementExpression Assignment MemberReference diaRow MethodInvocation diaRow MemberReference MAX_ROW_WIDTH MemberReference H_GAP doSplit = IfStatement BinaryOperation != MemberReference diaRow Literal null BlockStatement StatementExpression MethodInvocation nodeRows MemberReference row MemberReference diaRow add End End MethodDeclaration /**
     * Remove an object from the layout process.
     *
     * @param obj represents the object to remove.
     */ Modifier public remove FormalParameter ReferenceType LayoutedObject obj StatementExpression MethodInvocation layoutedObjects MemberReference obj remove MethodDeclaration /**
     * Set the up- and downlinks for each node based on the edges which are
     * shown in the diagram.
     */ Modifier private setupLinks StatementExpression MethodInvocation figNodes clear LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType Fig TypeArgument ReferenceType List TypeArgument ReferenceType ClassdiagramInheritanceEdge VariableDeclarator figParentEdges ClassCreator ReferenceType HashMap TypeArgument ReferenceType Fig TypeArgument ReferenceType List TypeArgument ReferenceType ClassdiagramInheritanceEdge ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference layoutedClassNodes BlockStatement StatementExpression MethodInvocation node MethodInvocation clear getUpNodes StatementExpression MethodInvocation node MethodInvocation clear getDownNodes StatementExpression MethodInvocation figNodes MethodInvocation node getFigure MemberReference node put End ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramEdge VariableDeclarator edge MemberReference layoutedEdges BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator parentFig MethodInvocation edge getDestFigNode LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator child MethodInvocation figNodes MethodInvocation edge getSourceFigNode get LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator parent MethodInvocation figNodes MemberReference parentFig get IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramInheritanceEdge BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null BinaryOperation != MemberReference child Literal null BlockStatement StatementExpression MethodInvocation parent MemberReference child addDownlink StatementExpression MethodInvocation child MemberReference parent addUplink LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramInheritanceEdge VariableDeclarator edgeList MethodInvocation figParentEdges MemberReference parentFig get IfStatement BinaryOperation == MemberReference edgeList Literal null BlockStatement StatementExpression Assignment MemberReference edgeList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramInheritanceEdge = StatementExpression MethodInvocation figParentEdges MemberReference parentFig MemberReference edgeList put End StatementExpression MethodInvocation edgeList Cast ReferenceType ClassdiagramInheritanceEdge MemberReference edge add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Edge with missing end(s): "" MemberReference edge error End IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramNoteEdge BlockStatement IfStatement MethodInvocation parent isComment BlockStatement StatementExpression MethodInvocation parent MemberReference child addUplink IfStatement MethodInvocation child isComment BlockStatement StatementExpression MethodInvocation child MemberReference parent addUplink BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unexpected parent/child constellation for edge: "" MemberReference edge error End End IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramAssociationEdge BlockStatement BlockStatement StatementExpression MethodInvocation LOG Literal ""Unsupported edge type"" error End End End End ReferenceType Layouter",1
1494,1494,,0
272,272,"CompilationUnit PackageDeclaration org.argouml.uml.ui.model_management Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration /**
 * Action to create a new Package inside a package.
 *
 * @author Michiel
 */ ActionAddPackage ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionAddPackage StatementExpression SuperConstructorInvocation Literal ""button.new-package"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-package"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAPackage getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator newPackage MethodInvocation Model MethodInvocation createPackage getModelManagementFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference newPackage addOwnedElement getCoreHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newPackage setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed End ReferenceType AbstractActionNewModelElement",0
902,902,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.util.ArrayList Import java.util.Collections Import java.util.List Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.application.api.InitSubsystem ClassDeclaration Modifier public /**
 * Initialise this subsystem.
 *
 * @author Michiel
 */ InitUiCmdSubsystem MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getSettingsTabs LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GUISettingsTabInterface StatementExpression MethodInvocation result ClassCreator ReferenceType SettingsTabShortcuts add ReturnStatement MemberReference result MethodDeclaration Modifier public init StatementExpression MethodInvocation ActionAdjustSnap init StatementExpression MethodInvocation ActionAdjustGrid init ReferenceType InitSubsystem",1
662,662,"CompilationUnit PackageDeclaration org.argouml.moduleloader InterfaceDeclaration Modifier public /**
 * This is the interface that each module needs to implement in order to be
 * loadable into ArgoUML according to the new module loader API.
 *
 * @author Linus Tolke
 * @since 0.17.1
 */ ModuleInterface MethodDeclaration /**
     * Method to enable the module.<p>
     *
     * If it cannot enable the module because some other module is
     * not enabled it can return <code>false</code>.
     * In that case the module loader will defer this attempt until
     * all other modules are loaded (or until some more of ArgoUML is loaded
     * if at startup). Eventually it is only this and some other modules
     * that is not loaded and they will then be listed as having problems.
     *
     * @return true if all went well
     */ BasicType boolean enable MethodDeclaration /**
     * Method to disable the module.<p>
     *
     * If we cannot disable the module because some other module relies
     * on it, we return false. This will then make it impossible to turn off.
     * (An error is signalled at the attempt).
     *
     * @return true if all went well.
     */ BasicType boolean disable MethodDeclaration /**
     * The name of the module.<p>
     *
     * This should be a short string. For the purpose of having the GUI
     * that turns on and off the module look nice there is no whitespace in
     * this string (no spaces, tabs or newlines).<p>
     *
     * This name is also used as the key internally when modules checks for
     * other modules, if they are available.
     *
     * @return the name (A String).
     */ ReferenceType String getName MethodDeclaration /**
     * The info about the module.<p>
     *
     * This returns texts with information about the module.<p>
     *
     * The possible informations are retrieved by giving any of the
     * arguments:<ul>
     * <li>{@link #DESCRIPTION}
     * <li>{@link #AUTHOR}
     * <li>{@link #VERSION}
     * <li>{@link #DOWNLOADSITE}
     * </ul>
     *
     * If a module does not provide a specific piece of information,
     * <code>null</code> can be returned. Hence the normal implementation
     * should be:<pre>
     * public String getInfo(int type) {
     *     switch (type) {
     *     case DESCRIPTION:
     *         return ""This module does ..."";
     *     case AUTHOR:
     *         return ""Annie Coder"";
     *     default:
     *         return null;
     * }
     * </pre>
     *
     * @param type The type of information.
     * @return The description. A String.
     */ ReferenceType String getInfo FormalParameter BasicType int type ConstantDeclaration /**
     * The description of the module.
     */ BasicType int VariableDeclarator DESCRIPTION Literal 0 ConstantDeclaration /**
     * The author of the module.
     */ BasicType int VariableDeclarator AUTHOR Literal 1 ConstantDeclaration /**
     * The version of the module.
     */ BasicType int VariableDeclarator VERSION Literal 2 ConstantDeclaration /**
     * The URL of the website stating information on where to download the
     * module.
     */ BasicType int VariableDeclarator DOWNLOADSITE Literal 3",0
1381,1381,,0
1433,1433,,0
1116,1116,,1
908,908,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Summary->Inheritance.
 * This class is a Go Rule for the ""Class - centric"" Navigation perspective.
 *
 * @author  alexb, d00mst
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ GoSummaryToInheritance MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.summary.inheritance"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType InheritanceNode BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference next isAAbstraction getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add End End StatementExpression Assignment MemberReference it MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getClientDependencies MethodInvocation iterator getFacade = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference next isAAbstraction getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator generalizationsIt MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getGeneralizations MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator specializationsIt MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getSpecializations MethodInvocation iterator getFacade WhileStatement MethodInvocation generalizationsIt hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation generalizationsIt next add End WhileStatement MethodInvocation specializationsIt hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation specializationsIt next add End ReturnStatement MemberReference list End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType InheritanceNode BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set Cast ReferenceType InheritanceNode MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
575,575,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.Dimension Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.util.Hashtable Import java.util.List Import javax.swing.BorderFactory Import javax.swing.JLabel Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.JSlider Import javax.swing.SwingConstants Import javax.swing.event.ChangeEvent Import javax.swing.event.ChangeListener Import org.argouml.cognitive.Designer Import org.argouml.cognitive.Goal Import org.argouml.cognitive.GoalModel Import org.argouml.cognitive.Translator Import org.argouml.util.ArgoDialog ClassDeclaration Modifier public /**
 * The dialog to set the user's goals.
 *
 */ GoalsDialog FieldDeclaration Modifier private final static BasicType int VariableDeclarator DIALOG_WIDTH Literal 320 FieldDeclaration Modifier private final static BasicType int VariableDeclarator DIALOG_HEIGHT Literal 400 FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator mainPanel ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType Hashtable TypeArgument ReferenceType JSlider TypeArgument ReferenceType Goal VariableDeclarator slidersToGoals ClassCreator ReferenceType Hashtable TypeArgument ReferenceType JSlider TypeArgument ReferenceType Goal FieldDeclaration Modifier private ReferenceType Hashtable TypeArgument ReferenceType JSlider TypeArgument ReferenceType JLabel VariableDeclarator slidersToDigits ClassCreator ReferenceType Hashtable TypeArgument ReferenceType JSlider TypeArgument ReferenceType JLabel ConstructorDeclaration Modifier public /**
     * The constructor.
     */ GoalsDialog StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""dialog.title.design-goals"" localize Literal false StatementExpression MethodInvocation initMainPanel LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator scroll ClassCreator ReferenceType JScrollPane MemberReference mainPanel StatementExpression MethodInvocation scroll ClassCreator ReferenceType Dimension MemberReference DIALOG_WIDTH MemberReference DIALOG_HEIGHT setPreferredSize StatementExpression MethodInvocation MemberReference scroll setContent MethodDeclaration Modifier private initMainPanel LocalVariableDeclaration ReferenceType GoalModel VariableDeclarator gm MethodInvocation Designer MethodInvocation getGoalModel theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Goal VariableDeclarator goals MethodInvocation gm getGoalList LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation mainPanel MemberReference gb setLayout StatementExpression MethodInvocation mainPanel MethodInvocation BorderFactory Literal 5 Literal 5 Literal 5 Literal 5 createEmptyBorder setBorder LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression Assignment MemberReference c ipady Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 1 = ForStatement EnhancedForControl VariableDeclaration ReferenceType Goal VariableDeclarator goal MemberReference goals BlockStatement LocalVariableDeclaration ReferenceType JLabel VariableDeclarator decLabel ClassCreator ReferenceType JLabel MethodInvocation goal getName LocalVariableDeclaration ReferenceType JLabel VariableDeclarator valueLabel ClassCreator ReferenceType JLabel BinaryOperation + Literal ""    "" MethodInvocation goal getPriority LocalVariableDeclaration ReferenceType JSlider VariableDeclarator decSlide ClassCreator ReferenceType JSlider MemberReference SwingConstants HORIZONTAL Literal 0 Literal 5 MethodInvocation goal getPriority StatementExpression MethodInvocation decSlide Literal true setPaintTicks StatementExpression MethodInvocation decSlide Literal true setPaintLabels StatementExpression MethodInvocation decSlide This addChangeListener LocalVariableDeclaration ReferenceType Dimension VariableDeclarator origSize MethodInvocation decSlide getPreferredSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator smallSize ClassCreator ReferenceType Dimension BinaryOperation / MemberReference origSize width Literal 2 MemberReference origSize height StatementExpression MethodInvocation decSlide MemberReference smallSize setSize StatementExpression MethodInvocation decSlide MemberReference smallSize setPreferredSize StatementExpression MethodInvocation slidersToGoals MemberReference decSlide MemberReference goal put StatementExpression MethodInvocation slidersToDigits MemberReference decSlide MemberReference valueLabel put StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression MethodInvocation gb MemberReference decLabel MemberReference c setConstraints StatementExpression MethodInvocation mainPanel MemberReference decLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c ipadx Literal 0 = StatementExpression MethodInvocation gb MemberReference valueLabel MemberReference c setConstraints StatementExpression MethodInvocation mainPanel MemberReference valueLabel add StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridwidth Literal 6 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference decSlide MemberReference c setConstraints StatementExpression MethodInvocation mainPanel MemberReference decSlide add StatementExpression MemberReference ++ c gridy End MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType ChangeEvent ce LocalVariableDeclaration ReferenceType JSlider VariableDeclarator srcSlider Cast ReferenceType JSlider MethodInvocation ce getSource LocalVariableDeclaration ReferenceType Goal VariableDeclarator goal MethodInvocation slidersToGoals MemberReference srcSlider get LocalVariableDeclaration ReferenceType JLabel VariableDeclarator valLab MethodInvocation slidersToDigits MemberReference srcSlider get LocalVariableDeclaration BasicType int VariableDeclarator pri MethodInvocation srcSlider getValue StatementExpression MethodInvocation goal MemberReference pri setPriority IfStatement BinaryOperation == MemberReference pri Literal 0 BlockStatement StatementExpression MethodInvocation valLab MethodInvocation Translator Literal ""label.off"" localize setText BlockStatement StatementExpression MethodInvocation valLab BinaryOperation + Literal ""    "" MemberReference pri setText End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1871200638199122363L ReferenceType ArgoDialog ReferenceType ChangeListener",0
487,487,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.diagram.ArgoDiagram ClassDeclaration Modifier public /**
 * Rule for ModelElement -> Contained diagrams. <p>
 *
 * The Contained diagrams are all the diagrams which, if the owner is deleted,
 * will be deleted, too.
 *
 * @author michiel
 */ GoModelElementToContainedDiagrams MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.model-element.contained-diagrams"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ArgoDiagram VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType ArgoDiagram ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation p getDiagramList BlockStatement IfStatement BinaryOperation == MethodInvocation diagram getNamespace MemberReference parent BlockStatement StatementExpression MethodInvocation ret MemberReference diagram add End End ReturnStatement MemberReference ret End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add End ReturnStatement MemberReference set ReferenceType AbstractPerspectiveRule",0
106,106,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JPopupMenu Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLStateDeferrableEventList ConstructorDeclaration Modifier public /**
     * Constructor for UMLTransitionTriggerList.
     * @param dataModel the model
     */ UMLStateDeferrableEventList FormalParameter ReferenceType UMLModelElementListModel2 dataModel StatementExpression SuperConstructorInvocation MemberReference dataModel MethodDeclaration Modifier public ReferenceType JPopupMenu getPopupMenu LocalVariableDeclaration ReferenceType JPopupMenu VariableDeclarator menu ClassCreator ReferenceType PopupMenuNewEvent MemberReference ActionNewEvent.Roles DEFERRABLE_EVENT This ReturnStatement MemberReference menu ReferenceType UMLMutableLinkedList",1
1593,1593,,0
309,309,"CompilationUnit PackageDeclaration org.argouml.model.euml Import java.io.FileInputStream Import java.io.IOException Import java.io.OutputStream Import java.io.Writer Import java.util.ArrayList Import java.util.List Import java.util.Map Import org.apache.log4j.Logger Import org.argouml.model.DiagramInterchangeModel Import org.argouml.model.ModelImplementation Import org.argouml.model.UmlException Import org.eclipse.emf.common.command.BasicCommandStack Import org.eclipse.emf.common.notify.AdapterFactory Import org.eclipse.emf.common.util.URI Import org.eclipse.emf.ecore.EcorePackage Import org.eclipse.emf.ecore.provider.EcoreItemProviderAdapterFactory Import org.eclipse.emf.ecore.resource.ResourceSet Import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain Import org.eclipse.emf.edit.domain.EditingDomain Import org.eclipse.emf.edit.provider.ComposedAdapterFactory Import org.eclipse.uml2.common.edit.domain.UML2AdapterFactoryEditingDomain Import org.eclipse.uml2.uml.UMLPackage Import org.eclipse.uml2.uml.edit.providers.UMLItemProviderAdapterFactory Import org.eclipse.uml2.uml.edit.providers.UMLReflectiveItemProviderAdapterFactory Import org.eclipse.uml2.uml.edit.providers.UMLResourceItemProviderAdapterFactory Import org.eclipse.uml2.uml.resource.UML22UMLExtendedMetaData Import org.eclipse.uml2.uml.resource.UML22UMLResource Import org.eclipse.uml2.uml.resource.UMLResource Import org.eclipse.uml2.uml.resource.XMI2UMLExtendedMetaData Import org.eclipse.uml2.uml.resource.XMI2UMLResource ClassDeclaration Modifier public /**
 * Eclipse UML2 implementation of the ArgoUML Model subsystem. Although built on
 * the Eclipse UML2 plugin which is, in turn, built on eCore and the Eclipse
 * Modeling Framework (EMF), the only things required from Eclipse are the five
 * Jars which implement UML2, eCore, and the subset of EMF needed for to support
 * them.
 * <p>
 * The implementation of this subsystem was generously sponsored by Google as
 * part of the Google Summer of Code 2007. The bulk of the implementation was
 * built by the sponsored student, Bogdan Ciprian Pistol, who was mentored by
 * Tom Morris.
 * 
 * @author Bogdan Ciprian Pistol
 * @author Tom Morris <tfmorris@gmail.com>
 * @since ArgoUML 0.25.4, May 2007
 */ EUMLModelImplementation FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType EUMLModelImplementation getLogger FieldDeclaration Modifier private ReferenceType ActivityGraphsFactoryEUMLlImpl VariableDeclarator theActivityGraphsFactory FieldDeclaration Modifier private ReferenceType ActivityGraphsHelperEUMLImpl VariableDeclarator theActivityGraphsHelper FieldDeclaration Modifier private ReferenceType AggregationKindEUMLImpl VariableDeclarator theAggregationKind FieldDeclaration Modifier private Annotation SuppressWarnings Literal ""deprecation"" ReferenceType ChangeableKindEUMLImpl VariableDeclarator theChangeableKind FieldDeclaration Modifier private ReferenceType CollaborationsFactoryEUMLImpl VariableDeclarator theCollaborationsFactory FieldDeclaration Modifier private ReferenceType CollaborationsHelperEUMLImpl VariableDeclarator theCollaborationsHelper FieldDeclaration Modifier private ReferenceType CommonBehaviorFactoryEUMLImpl VariableDeclarator theCommonBehaviorFactory FieldDeclaration Modifier private ReferenceType CommonBehaviorHelperEUMLImpl VariableDeclarator theCommonBehaviorHelper FieldDeclaration Modifier private ReferenceType ConcurrencyKindEUMLImpl VariableDeclarator theConcurrencyKind FieldDeclaration Modifier private ReferenceType CopyHelperEUMLImpl VariableDeclarator theCopyHelper FieldDeclaration Modifier private ReferenceType CoreFactoryEUMLImpl VariableDeclarator theCoreFactory FieldDeclaration Modifier private ReferenceType CoreHelperEUMLImpl VariableDeclarator theCoreHelper FieldDeclaration Modifier private ReferenceType DataTypesFactoryEUMLImpl VariableDeclarator theDataTypesFactory FieldDeclaration Modifier private ReferenceType DataTypesHelperEUMLImpl VariableDeclarator theDataTypesHelper FieldDeclaration Modifier private ReferenceType DirectionKindEUMLImpl VariableDeclarator theDirectionKind FieldDeclaration Modifier private ReferenceType ExtensionMechanismsFactoryEUMLImpl VariableDeclarator theExtensionMechanismsFactory FieldDeclaration Modifier private ReferenceType ExtensionMechanismsHelperEUMLImpl VariableDeclarator theExtensionMechanismsHelper FieldDeclaration Modifier private ReferenceType FacadeEUMLImpl VariableDeclarator theFacade FieldDeclaration Modifier private ReferenceType MetaTypesEUMLImpl VariableDeclarator theMetaTypes FieldDeclaration Modifier private ReferenceType ModelEventPumpEUMLImpl VariableDeclarator theModelEventPump FieldDeclaration Modifier private ReferenceType ModelManagementFactoryEUMLImpl VariableDeclarator theModelManagementFactory FieldDeclaration Modifier private ReferenceType ModelManagementHelperEUMLImpl VariableDeclarator theModelManagementHelper FieldDeclaration Modifier private ReferenceType OrderingKindEUMLImpl VariableDeclarator theOrderingKind FieldDeclaration Modifier private ReferenceType PseudostateKindEUMLImpl VariableDeclarator thePseudostateKind FieldDeclaration Modifier private Annotation SuppressWarnings Literal ""deprecation"" ReferenceType ScopeKindEUMLImpl VariableDeclarator theScopeKind FieldDeclaration Modifier private ReferenceType StateMachinesFactoryEUMLImpl VariableDeclarator theStateMachinesFactory FieldDeclaration Modifier private ReferenceType StateMachinesHelperEUMLImpl VariableDeclarator theStateMachinesHelper FieldDeclaration Modifier private ReferenceType UmlFactoryEUMLImpl VariableDeclarator theUmlFactory FieldDeclaration Modifier private ReferenceType UmlHelperEUMLImpl VariableDeclarator theUmlHelper FieldDeclaration Modifier private ReferenceType UseCasesFactoryEUMLImpl VariableDeclarator theUseCasesFactory FieldDeclaration Modifier private ReferenceType UseCasesHelperEUMLImpl VariableDeclarator theUseCasesHelper FieldDeclaration Modifier private ReferenceType VisibilityKindEUMLImpl VariableDeclarator theVisibilityKind FieldDeclaration Modifier private ReferenceType CommandStackImpl VariableDeclarator theCommandStack FieldDeclaration /**
     * This keeps track of the editing domain that is used to track all changes
     * to the model.
     */ Modifier private ReferenceType AdapterFactoryEditingDomain VariableDeclarator editingDomain ConstructorDeclaration Modifier public /**
     * Constructor.
     */ EUMLModelImplementation StatementExpression MethodInvocation initializeEditingDomain StatementExpression MethodInvocation LOG Literal ""EUML Init - editing domain initialized"" debug MethodDeclaration /**
     * This sets up the editing domain for the model editor.
     */ Modifier private initializeEditingDomain LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation System Literal ""eUML.resources"" getProperty LocalVariableDeclaration ReferenceType BasicCommandStack VariableDeclarator commandStack ClassCreator ReferenceType BasicCommandStack MethodDeclaration Modifier protected Annotation Override handleError FormalParameter ReferenceType Exception exception StatementExpression SuperMethodInvocation MemberReference exception handleError ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference exception LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AdapterFactory VariableDeclarator factories ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AdapterFactory StatementExpression MethodInvocation factories ClassCreator ReferenceType UMLResourceItemProviderAdapterFactory add StatementExpression MethodInvocation factories ClassCreator ReferenceType UMLItemProviderAdapterFactory add StatementExpression MethodInvocation factories ClassCreator ReferenceType EcoreItemProviderAdapterFactory add StatementExpression MethodInvocation factories ClassCreator ReferenceType UMLReflectiveItemProviderAdapterFactory add LocalVariableDeclaration ReferenceType ComposedAdapterFactory VariableDeclarator adapterFactory ClassCreator ReferenceType ComposedAdapterFactory MemberReference factories StatementExpression Assignment MemberReference editingDomain ClassCreator ReferenceType UML2AdapterFactoryEditingDomain MemberReference adapterFactory MemberReference commandStack = LocalVariableDeclaration ReferenceType ResourceSet VariableDeclarator resourceSet MethodInvocation editingDomain getResourceSet LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator extensionToFactoryMap MethodInvocation resourceSet MethodInvocation getExtensionToFactoryMap getResourceFactoryRegistry LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType URI TypeArgument ReferenceType URI VariableDeclarator uriMap MethodInvocation resourceSet MethodInvocation getURIMap getURIConverter IfStatement BinaryOperation != MemberReference path Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in ClassCreator ReferenceType FileInputStream MemberReference path StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e StatementExpression Assignment MemberReference path MethodInvocation path Literal '\\' Literal '/' replace = IfStatement MethodInvocation Character MethodInvocation path Literal 0 charAt isLetter BlockStatement StatementExpression Assignment MemberReference path BinaryOperation + Literal '/' MemberReference path = End LocalVariableDeclaration ReferenceType URI VariableDeclarator uri MethodInvocation URI BinaryOperation + BinaryOperation + Literal ""jar:file:"" MemberReference path Literal ""!/"" createURI StatementExpression MethodInvocation LOG BinaryOperation + Literal ""eUML.resource URI --> "" MemberReference uri debug StatementExpression MethodInvocation resourceSet MethodInvocation MemberReference UMLPackage eNS_URI MemberReference UMLPackage eINSTANCE put getPackageRegistry StatementExpression MethodInvocation resourceSet MethodInvocation MemberReference EcorePackage eNS_URI MemberReference EcorePackage eINSTANCE put getPackageRegistry StatementExpression MethodInvocation extensionToFactoryMap MemberReference UMLResource FILE_EXTENSION MemberReference UMLResource.Factory INSTANCE put StatementExpression MethodInvocation uriMap MethodInvocation URI MemberReference UMLResource LIBRARIES_PATHMAP createURI MethodInvocation uri MethodInvocation Literal """" appendSegment Literal ""libraries"" appendSegment put StatementExpression MethodInvocation uriMap MethodInvocation URI MemberReference UMLResource METAMODELS_PATHMAP createURI MethodInvocation uri MethodInvocation Literal """" appendSegment Literal ""metamodels"" appendSegment put StatementExpression MethodInvocation uriMap MethodInvocation URI MemberReference UMLResource PROFILES_PATHMAP createURI MethodInvocation uri MethodInvocation Literal """" appendSegment Literal ""profiles"" appendSegment put End StatementExpression MethodInvocation extensionToFactoryMap MemberReference UML22UMLResource FILE_EXTENSION MemberReference UML22UMLResource.Factory INSTANCE put StatementExpression MethodInvocation extensionToFactoryMap MemberReference XMI2UMLResource FILE_EXTENSION MemberReference XMI2UMLResource.Factory INSTANCE put StatementExpression MethodInvocation uriMap MethodInvocation UML22UMLExtendedMetaData getURIMap putAll StatementExpression MethodInvocation uriMap MethodInvocation XMI2UMLExtendedMetaData getURIMap putAll MethodDeclaration /**
     * Getter for {@link #editingDomain the Editing Domain}
     * 
     * @return the editing domain of the current EUMLModelImplementation
     *         instance
     */ Modifier public ReferenceType EditingDomain getEditingDomain ReturnStatement MemberReference editingDomain MethodDeclaration Modifier public ReferenceType ActivityGraphsFactoryEUMLlImpl getActivityGraphsFactory IfStatement BinaryOperation == MemberReference theActivityGraphsFactory Literal null BlockStatement StatementExpression Assignment MemberReference theActivityGraphsFactory ClassCreator ReferenceType ActivityGraphsFactoryEUMLlImpl This = End ReturnStatement MemberReference theActivityGraphsFactory MethodDeclaration Modifier public ReferenceType ActivityGraphsHelperEUMLImpl getActivityGraphsHelper IfStatement BinaryOperation == MemberReference theActivityGraphsHelper Literal null BlockStatement StatementExpression Assignment MemberReference theActivityGraphsHelper ClassCreator ReferenceType ActivityGraphsHelperEUMLImpl This = End ReturnStatement MemberReference theActivityGraphsHelper MethodDeclaration Modifier public ReferenceType AggregationKindEUMLImpl getAggregationKind IfStatement BinaryOperation == MemberReference theAggregationKind Literal null BlockStatement StatementExpression Assignment MemberReference theAggregationKind ClassCreator ReferenceType AggregationKindEUMLImpl = End ReturnStatement MemberReference theAggregationKind MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType ChangeableKindEUMLImpl getChangeableKind IfStatement BinaryOperation == MemberReference theChangeableKind Literal null BlockStatement StatementExpression Assignment MemberReference theChangeableKind ClassCreator ReferenceType ChangeableKindEUMLImpl = End ReturnStatement MemberReference theChangeableKind MethodDeclaration Modifier public ReferenceType CollaborationsFactoryEUMLImpl getCollaborationsFactory IfStatement BinaryOperation == MemberReference theCollaborationsFactory Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsFactory ClassCreator ReferenceType CollaborationsFactoryEUMLImpl This = End ReturnStatement MemberReference theCollaborationsFactory MethodDeclaration Modifier public ReferenceType CollaborationsHelperEUMLImpl getCollaborationsHelper IfStatement BinaryOperation == MemberReference theCollaborationsHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsHelper ClassCreator ReferenceType CollaborationsHelperEUMLImpl This = End ReturnStatement MemberReference theCollaborationsHelper MethodDeclaration Modifier public ReferenceType CommonBehaviorFactoryEUMLImpl getCommonBehaviorFactory IfStatement BinaryOperation == MemberReference theCommonBehaviorFactory Literal null BlockStatement StatementExpression Assignment MemberReference theCommonBehaviorFactory ClassCreator ReferenceType CommonBehaviorFactoryEUMLImpl This = End ReturnStatement MemberReference theCommonBehaviorFactory MethodDeclaration Modifier public ReferenceType CommonBehaviorHelperEUMLImpl getCommonBehaviorHelper IfStatement BinaryOperation == MemberReference theCommonBehaviorHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCommonBehaviorHelper ClassCreator ReferenceType CommonBehaviorHelperEUMLImpl This = End ReturnStatement MemberReference theCommonBehaviorHelper MethodDeclaration Modifier public ReferenceType ConcurrencyKindEUMLImpl getConcurrencyKind IfStatement BinaryOperation == MemberReference theConcurrencyKind Literal null BlockStatement StatementExpression Assignment MemberReference theConcurrencyKind ClassCreator ReferenceType ConcurrencyKindEUMLImpl = End ReturnStatement MemberReference theConcurrencyKind MethodDeclaration Modifier public ReferenceType CopyHelperEUMLImpl getCopyHelper IfStatement BinaryOperation == MemberReference theCopyHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCopyHelper ClassCreator ReferenceType CopyHelperEUMLImpl This = End ReturnStatement MemberReference theCopyHelper MethodDeclaration Modifier public ReferenceType CoreFactoryEUMLImpl getCoreFactory IfStatement BinaryOperation == MemberReference theCoreFactory Literal null BlockStatement StatementExpression Assignment MemberReference theCoreFactory ClassCreator ReferenceType CoreFactoryEUMLImpl This = End ReturnStatement MemberReference theCoreFactory MethodDeclaration Modifier public ReferenceType CoreHelperEUMLImpl getCoreHelper IfStatement BinaryOperation == MemberReference theCoreHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCoreHelper ClassCreator ReferenceType CoreHelperEUMLImpl This = End ReturnStatement MemberReference theCoreHelper MethodDeclaration Modifier public ReferenceType DataTypesFactoryEUMLImpl getDataTypesFactory IfStatement BinaryOperation == MemberReference theDataTypesFactory Literal null BlockStatement StatementExpression Assignment MemberReference theDataTypesFactory ClassCreator ReferenceType DataTypesFactoryEUMLImpl This = End ReturnStatement MemberReference theDataTypesFactory MethodDeclaration Modifier public ReferenceType DataTypesHelperEUMLImpl getDataTypesHelper IfStatement BinaryOperation == MemberReference theDataTypesHelper Literal null BlockStatement StatementExpression Assignment MemberReference theDataTypesHelper ClassCreator ReferenceType DataTypesHelperEUMLImpl This = End ReturnStatement MemberReference theDataTypesHelper MethodDeclaration Modifier public ReferenceType DirectionKindEUMLImpl getDirectionKind IfStatement BinaryOperation == MemberReference theDirectionKind Literal null BlockStatement StatementExpression Assignment MemberReference theDirectionKind ClassCreator ReferenceType DirectionKindEUMLImpl = End ReturnStatement MemberReference theDirectionKind MethodDeclaration Modifier public ReferenceType ExtensionMechanismsFactoryEUMLImpl getExtensionMechanismsFactory IfStatement BinaryOperation == MemberReference theExtensionMechanismsFactory Literal null BlockStatement StatementExpression Assignment MemberReference theExtensionMechanismsFactory ClassCreator ReferenceType ExtensionMechanismsFactoryEUMLImpl This = End ReturnStatement MemberReference theExtensionMechanismsFactory MethodDeclaration Modifier public ReferenceType ExtensionMechanismsHelperEUMLImpl getExtensionMechanismsHelper IfStatement BinaryOperation == MemberReference theExtensionMechanismsHelper Literal null BlockStatement StatementExpression Assignment MemberReference theExtensionMechanismsHelper ClassCreator ReferenceType ExtensionMechanismsHelperEUMLImpl This = End ReturnStatement MemberReference theExtensionMechanismsHelper MethodDeclaration Modifier public ReferenceType FacadeEUMLImpl getFacade IfStatement BinaryOperation == MemberReference theFacade Literal null BlockStatement StatementExpression Assignment MemberReference theFacade ClassCreator ReferenceType FacadeEUMLImpl This = End ReturnStatement MemberReference theFacade MethodDeclaration Modifier public ReferenceType MetaTypesEUMLImpl getMetaTypes IfStatement BinaryOperation == MemberReference theMetaTypes Literal null BlockStatement StatementExpression Assignment MemberReference theMetaTypes ClassCreator ReferenceType MetaTypesEUMLImpl This = End ReturnStatement MemberReference theMetaTypes MethodDeclaration Modifier public ReferenceType ModelEventPumpEUMLImpl getModelEventPump IfStatement BinaryOperation == MemberReference theModelEventPump Literal null BlockStatement StatementExpression Assignment MemberReference theModelEventPump ClassCreator ReferenceType ModelEventPumpEUMLImpl This = End ReturnStatement MemberReference theModelEventPump MethodDeclaration Modifier public ReferenceType ModelManagementFactoryEUMLImpl getModelManagementFactory IfStatement BinaryOperation == MemberReference theModelManagementFactory Literal null BlockStatement StatementExpression Assignment MemberReference theModelManagementFactory ClassCreator ReferenceType ModelManagementFactoryEUMLImpl This = End ReturnStatement MemberReference theModelManagementFactory MethodDeclaration Modifier public ReferenceType ModelManagementHelperEUMLImpl getModelManagementHelper IfStatement BinaryOperation == MemberReference theModelManagementHelper Literal null BlockStatement StatementExpression Assignment MemberReference theModelManagementHelper ClassCreator ReferenceType ModelManagementHelperEUMLImpl This = End ReturnStatement MemberReference theModelManagementHelper MethodDeclaration Modifier public ReferenceType OrderingKindEUMLImpl getOrderingKind IfStatement BinaryOperation == MemberReference theOrderingKind Literal null BlockStatement StatementExpression Assignment MemberReference theOrderingKind ClassCreator ReferenceType OrderingKindEUMLImpl = End ReturnStatement MemberReference theOrderingKind MethodDeclaration Modifier public ReferenceType PseudostateKindEUMLImpl getPseudostateKind IfStatement BinaryOperation == MemberReference thePseudostateKind Literal null BlockStatement StatementExpression Assignment MemberReference thePseudostateKind ClassCreator ReferenceType PseudostateKindEUMLImpl = End ReturnStatement MemberReference thePseudostateKind MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType ScopeKindEUMLImpl getScopeKind IfStatement BinaryOperation == MemberReference theScopeKind Literal null BlockStatement StatementExpression Assignment MemberReference theScopeKind ClassCreator ReferenceType ScopeKindEUMLImpl = End ReturnStatement MemberReference theScopeKind MethodDeclaration Modifier public ReferenceType StateMachinesFactoryEUMLImpl getStateMachinesFactory IfStatement BinaryOperation == MemberReference theStateMachinesFactory Literal null BlockStatement StatementExpression Assignment MemberReference theStateMachinesFactory ClassCreator ReferenceType StateMachinesFactoryEUMLImpl This = End ReturnStatement MemberReference theStateMachinesFactory MethodDeclaration Modifier public ReferenceType StateMachinesHelperEUMLImpl getStateMachinesHelper IfStatement BinaryOperation == MemberReference theStateMachinesHelper Literal null BlockStatement StatementExpression Assignment MemberReference theStateMachinesHelper ClassCreator ReferenceType StateMachinesHelperEUMLImpl This = End ReturnStatement MemberReference theStateMachinesHelper MethodDeclaration Modifier public ReferenceType UmlFactoryEUMLImpl getUmlFactory IfStatement BinaryOperation == MemberReference theUmlFactory Literal null BlockStatement StatementExpression Assignment MemberReference theUmlFactory ClassCreator ReferenceType UmlFactoryEUMLImpl This = End ReturnStatement MemberReference theUmlFactory MethodDeclaration Modifier public ReferenceType UmlHelperEUMLImpl getUmlHelper IfStatement BinaryOperation == MemberReference theUmlHelper Literal null BlockStatement StatementExpression Assignment MemberReference theUmlHelper ClassCreator ReferenceType UmlHelperEUMLImpl This = End ReturnStatement MemberReference theUmlHelper MethodDeclaration Modifier public ReferenceType UseCasesFactoryEUMLImpl getUseCasesFactory IfStatement BinaryOperation == MemberReference theUseCasesFactory Literal null BlockStatement StatementExpression Assignment MemberReference theUseCasesFactory ClassCreator ReferenceType UseCasesFactoryEUMLImpl This = End ReturnStatement MemberReference theUseCasesFactory MethodDeclaration Modifier public ReferenceType UseCasesHelperEUMLImpl getUseCasesHelper IfStatement BinaryOperation == MemberReference theUseCasesHelper Literal null BlockStatement StatementExpression Assignment MemberReference theUseCasesHelper ClassCreator ReferenceType UseCasesHelperEUMLImpl This = End ReturnStatement MemberReference theUseCasesHelper MethodDeclaration Modifier public ReferenceType VisibilityKindEUMLImpl getVisibilityKind IfStatement BinaryOperation == MemberReference theVisibilityKind Literal null BlockStatement StatementExpression Assignment MemberReference theVisibilityKind ClassCreator ReferenceType VisibilityKindEUMLImpl = End ReturnStatement MemberReference theVisibilityKind MethodDeclaration Modifier public ReferenceType XmiReaderEUMLImpl getXmiReader UmlException ReturnStatement ClassCreator ReferenceType XmiReaderEUMLImpl This MethodDeclaration Modifier public ReferenceType XmiWriterEUMLImpl getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType Writer writer FormalParameter ReferenceType String version UmlException ReturnStatement ClassCreator ReferenceType XmiWriterEUMLImpl This MemberReference model MemberReference writer MemberReference version MethodDeclaration Modifier public ReferenceType XmiWriterEUMLImpl getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType OutputStream stream FormalParameter ReferenceType String version UmlException ReturnStatement ClassCreator ReferenceType XmiWriterEUMLImpl This MemberReference model MemberReference stream MemberReference version MethodDeclaration Modifier public ReferenceType DiagramInterchangeModel getDiagramInterchangeModel ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType CommandStackImpl getCommandStack IfStatement BinaryOperation == MemberReference theCommandStack Literal null BlockStatement StatementExpression Assignment MemberReference theCommandStack ClassCreator ReferenceType CommandStackImpl This = End ReturnStatement MemberReference theCommandStack ReferenceType ModelImplementation",1
1269,1269,,0
641,641,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.LinkedList Import java.util.List Import java.util.Set Import javax.jmi.reflect.InvalidObjectException Import org.apache.log4j.Logger Import org.argouml.model.CoreFactory Import org.argouml.model.CoreHelper Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.argouml.model.ModelCommand Import org.argouml.model.ModelManagementHelper Import org.argouml.model.NotImplementedException Import org.argouml.model.mdr.UndoCoreHelperDecorator.StringSetter Import org.omg.uml.behavioralelements.activitygraphs.ActivityGraph Import org.omg.uml.behavioralelements.activitygraphs.ClassifierInState Import org.omg.uml.behavioralelements.activitygraphs.ObjectFlowState Import org.omg.uml.behavioralelements.activitygraphs.Partition Import org.omg.uml.behavioralelements.collaborations.AssociationEndRole Import org.omg.uml.behavioralelements.collaborations.AssociationRole Import org.omg.uml.behavioralelements.collaborations.ClassifierRole Import org.omg.uml.behavioralelements.collaborations.Collaboration Import org.omg.uml.behavioralelements.collaborations.CollaborationInstanceSet Import org.omg.uml.behavioralelements.collaborations.Interaction Import org.omg.uml.behavioralelements.collaborations.Message Import org.omg.uml.behavioralelements.commonbehavior.Action Import org.omg.uml.behavioralelements.commonbehavior.AttributeLink Import org.omg.uml.behavioralelements.commonbehavior.ComponentInstance Import org.omg.uml.behavioralelements.commonbehavior.DataValue Import org.omg.uml.behavioralelements.commonbehavior.Instance Import org.omg.uml.behavioralelements.commonbehavior.Link Import org.omg.uml.behavioralelements.commonbehavior.LinkEnd Import org.omg.uml.behavioralelements.commonbehavior.NodeInstance Import org.omg.uml.behavioralelements.commonbehavior.Reception Import org.omg.uml.behavioralelements.commonbehavior.Signal Import org.omg.uml.behavioralelements.commonbehavior.Stimulus Import org.omg.uml.behavioralelements.commonbehavior.SubsystemInstance Import org.omg.uml.behavioralelements.statemachines.CompositeState Import org.omg.uml.behavioralelements.statemachines.Event Import org.omg.uml.behavioralelements.statemachines.Guard Import org.omg.uml.behavioralelements.statemachines.Pseudostate Import org.omg.uml.behavioralelements.statemachines.State Import org.omg.uml.behavioralelements.statemachines.StateMachine Import org.omg.uml.behavioralelements.statemachines.StateVertex Import org.omg.uml.behavioralelements.statemachines.Transition Import org.omg.uml.behavioralelements.usecases.Actor Import org.omg.uml.behavioralelements.usecases.Extend Import org.omg.uml.behavioralelements.usecases.Include Import org.omg.uml.behavioralelements.usecases.UseCase Import org.omg.uml.behavioralelements.usecases.UseCaseInstance Import org.omg.uml.foundation.core.Abstraction Import org.omg.uml.foundation.core.AssociationEnd Import org.omg.uml.foundation.core.Attribute Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Binding Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.Comment Import org.omg.uml.foundation.core.Component Import org.omg.uml.foundation.core.Constraint Import org.omg.uml.foundation.core.CorePackage Import org.omg.uml.foundation.core.DataType Import org.omg.uml.foundation.core.Dependency Import org.omg.uml.foundation.core.ElementResidence Import org.omg.uml.foundation.core.Enumeration Import org.omg.uml.foundation.core.EnumerationLiteral Import org.omg.uml.foundation.core.Feature Import org.omg.uml.foundation.core.Flow Import org.omg.uml.foundation.core.GeneralizableElement Import org.omg.uml.foundation.core.Generalization Import org.omg.uml.foundation.core.Interface Import org.omg.uml.foundation.core.Method Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Node Import org.omg.uml.foundation.core.Operation Import org.omg.uml.foundation.core.Parameter Import org.omg.uml.foundation.core.Permission Import org.omg.uml.foundation.core.Relationship Import org.omg.uml.foundation.core.Stereotype Import org.omg.uml.foundation.core.StructuralFeature Import org.omg.uml.foundation.core.TagDefinition Import org.omg.uml.foundation.core.TaggedValue Import org.omg.uml.foundation.core.TemplateArgument Import org.omg.uml.foundation.core.TemplateParameter Import org.omg.uml.foundation.core.UmlAssociation Import org.omg.uml.foundation.core.UmlClass Import org.omg.uml.foundation.datatypes.AggregationKind Import org.omg.uml.foundation.datatypes.AggregationKindEnum Import org.omg.uml.foundation.datatypes.BooleanExpression Import org.omg.uml.foundation.datatypes.CallConcurrencyKind Import org.omg.uml.foundation.datatypes.ChangeableKind Import org.omg.uml.foundation.datatypes.ChangeableKindEnum Import org.omg.uml.foundation.datatypes.Expression Import org.omg.uml.foundation.datatypes.Multiplicity Import org.omg.uml.foundation.datatypes.OrderingKind Import org.omg.uml.foundation.datatypes.ParameterDirectionKind Import org.omg.uml.foundation.datatypes.ParameterDirectionKindEnum Import org.omg.uml.foundation.datatypes.ProcedureExpression Import org.omg.uml.foundation.datatypes.PseudostateKind Import org.omg.uml.foundation.datatypes.ScopeKind Import org.omg.uml.foundation.datatypes.ScopeKindEnum Import org.omg.uml.foundation.datatypes.VisibilityKind Import org.omg.uml.foundation.datatypes.VisibilityKindEnum Import org.omg.uml.modelmanagement.ElementImport Import org.omg.uml.modelmanagement.Subsystem Import org.omg.uml.modelmanagement.UmlPackage ClassDeclaration /**
 * The Core Helper implementation for MDR.<p>
 *
 * @since ARGO0.19.5
 * @author Ludovic Ma&icirc;tre
 * @author Tom Morris
 * derived from NSUML implementation by:
 * @author Linus Tolke
 */ CoreHelperMDRImpl FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType CoreHelperMDRImpl getLogger FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param theModelImpl
     *            The MDRModelImplementation.
     */ CoreHelperMDRImpl FormalParameter ReferenceType MDRModelImplementation theModelImpl StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference modelImpl MemberReference theModelImpl = MethodDeclaration /**
     * Return the first item from a collection using the most efficient method
     * possible. Returns null for an empty collection.
     *
     * @param c
     *            The Collection.
     * @return the first element of a Collection.
     */ Modifier private static ReferenceType Object getFirstItemOrNull FormalParameter ReferenceType Collection c IfStatement BinaryOperation == MethodInvocation c size Literal 0 BlockStatement ReturnStatement Literal null End IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c End ReturnStatement MethodInvocation c MethodInvocation next iterator MethodDeclaration Modifier public BasicType boolean isSubType FormalParameter ReferenceType Object type FormalParameter ReferenceType Object subType IfStatement BinaryOperation || BinaryOperation instanceof MemberReference type ReferenceType Class BinaryOperation instanceof MemberReference subType ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Metatypes are expected"" End ReturnStatement Cast ReferenceType Class MemberReference type MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getAllSupertypes FormalParameter ReferenceType Object cls1 IfStatement BinaryOperation instanceof MemberReference cls1 ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge Cast ReferenceType GeneralizableElement MemberReference cls1 LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator toBeAdded MethodInvocation MemberReference ge getSupertypes DoStatement MethodInvocation ! toBeAdded isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator newlyAdded ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement ForStatement EnhancedForControl VariableDeclaration ReferenceType GeneralizableElement VariableDeclarator element MemberReference toBeAdded BlockStatement StatementExpression MethodInvocation newlyAdded MethodInvocation MemberReference element getSupertypes addAll End StatementExpression MethodInvocation result MemberReference toBeAdded addAll StatementExpression Assignment MemberReference toBeAdded MemberReference newlyAdded = StatementExpression MethodInvocation toBeAdded MemberReference result removeAll End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getSupertypes FormalParameter ReferenceType Object genElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement TryStatement IfStatement BinaryOperation instanceof MemberReference genElement ReferenceType GeneralizableElement BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType GeneralizableElement MemberReference genElement BlockStatement StatementExpression MethodInvocation result MethodInvocation gen getParent add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" Annotation Deprecated ReferenceType Collection TypeArgument ReferenceType AssociationEnd getAssociateEnds FormalParameter ReferenceType Object classifier ReturnStatement MethodInvocation Model MethodInvocation MemberReference classifier getAssociationEnds getFacade MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType AssociationEnd getAssociateEndsInh FormalParameter ReferenceType Object classifier1 IfStatement BinaryOperation instanceof MemberReference classifier1 ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference classifier1 LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType AssociationEnd VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AssociationEnd TryStatement StatementExpression MethodInvocation result MethodInvocation MemberReference classifier getAssociateEnds addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen MethodInvocation classifier getGeneralization BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation gen getParent StatementExpression MethodInvocation result MethodInvocation MemberReference parent getAssociateEndsInh addAll End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public removeFeature FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object feature TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference cls ReferenceType Classifier BinaryOperation instanceof MemberReference feature ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference cls ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""classifier: "" MemberReference cls Literal "" or feature: "" MemberReference feature MethodDeclaration Modifier public removeLiteral FormalParameter ReferenceType Object enu FormalParameter ReferenceType Object literal TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference enu ReferenceType Enumeration BinaryOperation instanceof MemberReference literal ReferenceType EnumerationLiteral BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference enu ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""enumeration: "" MemberReference enu Literal "" or literal: "" MemberReference literal MethodDeclaration Modifier public setOperations FormalParameter ReferenceType Object classifier FormalParameter ReferenceType List operations IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator mclassifier Cast ReferenceType Classifier MemberReference classifier LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature MethodInvocation mclassifier getFeature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature MethodInvocation mclassifier getFeature BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Operation BlockStatement StatementExpression MethodInvocation result MemberReference feature remove End End StatementExpression MethodInvocation result MemberReference operations addAll StatementExpression MethodInvocation mclassifier MethodInvocation clear getFeature StatementExpression MethodInvocation mclassifier MethodInvocation MemberReference result addAll getFeature End MethodDeclaration Modifier public setAttributes FormalParameter ReferenceType Object classifier FormalParameter ReferenceType List attributes IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator mclassifier Cast ReferenceType Classifier MemberReference classifier LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature MethodInvocation mclassifier getFeature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature MethodInvocation mclassifier getFeature BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Attribute BlockStatement StatementExpression MethodInvocation result MemberReference feature remove End End StatementExpression MethodInvocation result MemberReference attributes addAll StatementExpression MethodInvocation mclassifier MethodInvocation clear getFeature StatementExpression MethodInvocation mclassifier MethodInvocation MemberReference result addAll getFeature End MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Attribute getAttributesInh FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType ArrayList TryStatement StatementExpression MethodInvocation result MethodInvocation modelImpl MethodInvocation MemberReference classifier getStructuralFeatures getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Classifier MemberReference classifier BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation gen getParent getAttributesInh addAll End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Operation getOperationsInh FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Operation VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operation TryStatement StatementExpression MethodInvocation result MethodInvocation modelImpl MethodInvocation MemberReference classifier getOperations getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Classifier MemberReference classifier BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation gen getParent getOperationsInh addAll End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getParents FormalParameter ReferenceType Object generalizableElement IfStatement BinaryOperation instanceof MemberReference generalizableElement ReferenceType GeneralizableElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator gc Cast ReferenceType GeneralizableElement MemberReference generalizableElement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator g MemberReference gc BlockStatement StatementExpression MethodInvocation result MethodInvocation g getParent add End ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Parameter getReturnParameters FormalParameter ReferenceType Object operation LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Parameter VariableDeclarator returnParams ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Parameter TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Parameter VariableDeclarator parameter Cast ReferenceType Operation MemberReference operation BlockStatement IfStatement MethodInvocation ParameterDirectionKindEnum.PDK_RETURN MethodInvocation parameter getKind equals BlockStatement StatementExpression MethodInvocation returnParams MemberReference parameter add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference returnParams MethodDeclaration Modifier public ReferenceType Object getSpecification FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType Method BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Not a method : "" MemberReference object End TryStatement ReturnStatement Cast ReferenceType Method MemberReference object CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Collection TypeArgument ReferenceType Interface getSpecifications FormalParameter ReferenceType Object classifier TryStatement ReturnStatement MethodInvocation MemberReference classifier getRealizedInterfaces CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getSubtypes FormalParameter ReferenceType Object cls IfStatement BinaryOperation instanceof MemberReference cls ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GeneralizableElement TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator gens MethodInvocation Model MethodInvocation MemberReference cls getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen MemberReference gens BlockStatement StatementExpression MethodInvocation result MethodInvocation gen getChild add End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType BehavioralFeature getAllBehavioralFeatures FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List VariableDeclarator contents ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType BehavioralFeature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType BehavioralFeature TryStatement StatementExpression MethodInvocation contents MethodInvocation Model MethodInvocation MemberReference element getTaggedValuesCollection getFacade addAll StatementExpression MethodInvocation contents Cast ReferenceType ModelElement MemberReference element addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation contents iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator clazz Cast ReferenceType Classifier MemberReference o IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType DataType BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o1 MethodInvocation clazz getFeature BlockStatement IfStatement BinaryOperation instanceof MemberReference o1 ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation result Cast ReferenceType BehavioralFeature MemberReference o1 add End End End BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation it next getAllBehavioralFeatures addAll End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType BehavioralFeature getBehavioralFeatures FormalParameter ReferenceType Object clazz IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType BehavioralFeature VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType BehavioralFeature TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation modelImpl MethodInvocation MemberReference clazz getFeatures getFacade BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation ret Cast ReferenceType BehavioralFeature MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference ret BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument is not a classifier"" End MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Interface getAllInterfaces FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Interface VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Interface ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllInterfaces addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Interface BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Interface MemberReference o add End End ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UmlClass getAllClasses FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UmlClass VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UmlClass TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllClasses addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType UmlClass BlockStatement StatementExpression MethodInvocation result Cast ReferenceType UmlClass MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Interface getRealizedInterfaces FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference cls IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Interface VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Interface TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator clientDependency MethodInvocation classifier getClientDependency BlockStatement IfStatement BinaryOperation instanceof MemberReference clientDependency ReferenceType Abstraction BlockStatement LocalVariableDeclaration ReferenceType Abstraction VariableDeclarator abstraction Cast ReferenceType Abstraction MemberReference clientDependency ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation abstraction getStereotype BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference stereo Literal null MethodInvocation CoreFactory.REALIZE_STEREOTYPE MethodInvocation stereo getName equals MethodInvocation stereo MethodInvocation Literal ""Abstraction"" contains getBaseClass BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator supplier MethodInvocation abstraction getSupplier BlockStatement IfStatement BinaryOperation instanceof MemberReference supplier ReferenceType Interface BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Interface MemberReference supplier add End End End End End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier getExtendedClassifiers FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation modelImpl MethodInvocation MemberReference clazz getGeneralizations getFacade BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator parent Cast ReferenceType Generalization MemberReference gen IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Classifier MemberReference parent add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Object getGeneralization FormalParameter ReferenceType Object achild FormalParameter ReferenceType Object aparent IfStatement BinaryOperation || BinaryOperation instanceof MemberReference achild ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference aparent ReferenceType GeneralizableElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child Cast ReferenceType GeneralizableElement MemberReference achild LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator parent Cast ReferenceType GeneralizableElement MemberReference aparent TryStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference child getGeneralizations MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MethodInvocation it next IfStatement BinaryOperation == MethodInvocation gen getParent MemberReference parent BlockStatement ReturnStatement MemberReference gen End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String getBody FormalParameter ReferenceType Object comment IfStatement BinaryOperation instanceof MemberReference comment ReferenceType Comment BlockStatement TryStatement ReturnStatement Cast ReferenceType Comment MemberReference comment CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e End ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Flow getFlows FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference source ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""source"" End IfStatement BinaryOperation instanceof MemberReference target ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""target"" End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Flow VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Flow TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Flow VariableDeclarator targetFlows Cast ReferenceType ModelElement MemberReference target ForStatement EnhancedForControl VariableDeclaration ReferenceType Flow VariableDeclarator flow Cast ReferenceType ModelElement MemberReference source BlockStatement IfStatement MethodInvocation targetFlows MemberReference flow contains BlockStatement StatementExpression MethodInvocation ret MemberReference flow add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getExtendingElements FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType GeneralizableElement VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GeneralizableElement TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Collection TypeArgument ReferenceType Generalization MethodInvocation modelImpl MethodInvocation MemberReference clazz getSpecializations getFacade BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator client MethodInvocation gen getChild IfStatement BinaryOperation != MemberReference client Literal null BlockStatement StatementExpression MethodInvocation list MemberReference client add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier getExtendingClassifiers FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation Model MethodInvocation MemberReference clazz getSpecializations getFacade BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator client Cast ReferenceType Generalization MemberReference gen IfStatement BinaryOperation instanceof MemberReference client ReferenceType Classifier BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Classifier MemberReference client add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Component getAllComponents FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Component VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Component TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllComponents addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Component BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Component MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType DataType getAllDataTypes FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType DataType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType DataType TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllDataTypes addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType DataType BlockStatement StatementExpression MethodInvocation result Cast ReferenceType DataType MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Node getAllNodes FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Node VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Node TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllNodes addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Node BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Node MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier getAssociatedClassifiers FormalParameter ReferenceType Object aclassifier LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference aclassifier IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType Collection TypeArgument ReferenceType AssociationEnd MethodInvocation Model MethodInvocation MemberReference classifier getAssociationEnds getFacade BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc MethodInvocation end getAssociation ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end2 MethodInvocation assoc getConnection BlockStatement IfStatement BinaryOperation != MemberReference end2 MemberReference end BlockStatement StatementExpression MethodInvocation list MethodInvocation end2 getParticipant add End End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UmlAssociation getAssociations FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to IfStatement BinaryOperation || BinaryOperation instanceof MemberReference from ReferenceType Classifier BinaryOperation instanceof MemberReference to ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType UmlAssociation VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType UmlAssociation TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType Collection TypeArgument ReferenceType AssociationEnd MethodInvocation Model MethodInvocation MemberReference from getAssociationEnds getFacade BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc MethodInvocation end getAssociation ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end2 MethodInvocation assoc getConnection BlockStatement IfStatement BinaryOperation == MethodInvocation end2 getParticipant MemberReference to BlockStatement StatementExpression MethodInvocation ret MemberReference assoc add End End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier getAllClassifiers FormalParameter ReferenceType Object namespace IfStatement BinaryOperation == MemberReference namespace Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference namespace BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllClassifiers addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Classifier BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Classifier MemberReference o add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UmlAssociation getAssociations FormalParameter ReferenceType Object oclassifier LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType UmlAssociation VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UmlAssociation TryStatement IfStatement BinaryOperation instanceof MemberReference oclassifier ReferenceType Classifier BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MethodInvocation Model MethodInvocation MemberReference oclassifier getAssociationEnds getFacade BlockStatement StatementExpression MethodInvocation result Cast ReferenceType AssociationEnd MemberReference end add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType AssociationEnd getAssociationEnd FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc IfStatement BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End IfStatement BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType Collection TypeArgument ReferenceType AssociationEnd MethodInvocation Model MethodInvocation MemberReference type getAssociationEnds getFacade BlockStatement IfStatement Cast ReferenceType UmlAssociation MemberReference assoc BlockStatement ReturnStatement MemberReference end End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Collection getAllContents FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference clazz getAllContents getModelManagementHelper MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Attribute getAllAttributes FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Attribute VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Attribute TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature Cast ReferenceType Classifier MemberReference clazz BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Attribute BlockStatement StatementExpression MethodInvocation list Cast ReferenceType Attribute MemberReference feature add End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation modelImpl MethodInvocation MemberReference clazz getGeneralizations getFacade BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference gen getAllAttributes addAll End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement getAllVisibleElements FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ModelElement VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator element Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement MethodInvocation element MethodInvocation MemberReference VisibilityKindEnum VK_PUBLIC equals getVisibility BlockStatement StatementExpression MethodInvocation list MemberReference element add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object relationship IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference relationship ReferenceType Relationship BinaryOperation instanceof MemberReference relationship ReferenceType Link BinaryOperation instanceof MemberReference relationship ReferenceType Message BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Argument "" MethodInvocation relationship toString Literal "" is not "" Literal ""a relationship"" End TryStatement IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Link BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference relationship getConnections MethodInvocation iterator getFacade IfStatement MethodInvocation it hasNext BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MethodInvocation it next getInstance getFacade BlockStatement ReturnStatement Literal null End End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType UmlAssociation BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc Cast ReferenceType UmlAssociation MemberReference relationship LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AssociationEnd VariableDeclarator conns MethodInvocation assoc getConnection IfStatement BinaryOperation || BinaryOperation == MemberReference conns Literal null MethodInvocation conns isEmpty BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation conns MethodInvocation getParticipant Literal 0 get End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Generalization BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MemberReference relationship ReturnStatement MethodInvocation gen getChild End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Dependency BlockStatement LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dep Cast ReferenceType Dependency MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation dep getClient IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation col MethodInvocation next iterator End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Flow BlockStatement LocalVariableDeclaration ReferenceType Flow VariableDeclarator flow Cast ReferenceType Flow MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation flow getSource IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation col MethodInvocation next iterator End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Extend BlockStatement LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend Cast ReferenceType Extend MemberReference relationship ReturnStatement MethodInvocation extend getExtension End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Include BlockStatement LocalVariableDeclaration ReferenceType Include VariableDeclarator include Cast ReferenceType Include MemberReference relationship ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference include getBase getFacade End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference relationship End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference relationship End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object relationship IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference relationship ReferenceType Relationship BinaryOperation instanceof MemberReference relationship ReferenceType Link BinaryOperation instanceof MemberReference relationship ReferenceType Message BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Argument is not "" Literal ""a relationship"" End TryStatement IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Link BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference relationship getConnections MethodInvocation iterator getFacade IfStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation it next IfStatement MethodInvocation it hasNext BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MethodInvocation it next getInstance getFacade BlockStatement ReturnStatement Literal null End BlockStatement ReturnStatement Literal null End End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType UmlAssociation BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc Cast ReferenceType UmlAssociation MemberReference relationship LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AssociationEnd VariableDeclarator conns MethodInvocation assoc getConnection IfStatement BinaryOperation <= MethodInvocation conns size Literal 1 BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation conns MethodInvocation getParticipant Literal 1 get End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Generalization BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MemberReference relationship ReturnStatement MethodInvocation gen getParent End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Dependency BlockStatement LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dep Cast ReferenceType Dependency MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation dep getSupplier IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation MemberReference col getFirstItemOrNull End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Flow BlockStatement LocalVariableDeclaration ReferenceType Flow VariableDeclarator flow Cast ReferenceType Flow MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation flow getTarget IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation MemberReference col getFirstItemOrNull End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Extend BlockStatement LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend Cast ReferenceType Extend MemberReference relationship ReturnStatement MethodInvocation extend getBase End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Include BlockStatement LocalVariableDeclaration ReferenceType Include VariableDeclarator include Cast ReferenceType Include MemberReference relationship ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference include getAddition getFacade End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference relationship End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference relationship End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Dependency getDependencies FormalParameter ReferenceType Object supplierObj FormalParameter ReferenceType Object clientObj IfStatement BinaryOperation || BinaryOperation instanceof MemberReference supplierObj ReferenceType ModelElement BinaryOperation instanceof MemberReference clientObj ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""invalid argument(s)"" End LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator supplier Cast ReferenceType ModelElement MemberReference supplierObj LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator client Cast ReferenceType ModelElement MemberReference clientObj LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Dependency VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Dependency TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Dependency VariableDeclarator clientDependencies MethodInvocation client getClientDependency LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference supplier getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dep Cast ReferenceType Dependency MethodInvocation it next IfStatement MethodInvocation clientDependencies MemberReference dep contains BlockStatement StatementExpression MethodInvocation ret MemberReference dep add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Permission getPackageImports FormalParameter ReferenceType Object client IfStatement BinaryOperation instanceof MemberReference client ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""invalid argument"" End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Permission VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Permission TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dependency Cast ReferenceType ModelElement MemberReference client BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference dependency ReferenceType Permission MethodInvocation Model MethodInvocation MemberReference dependency MemberReference ModelManagementHelper IMPORT_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Permission MemberReference dependency add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Permission getPackageImport FormalParameter ReferenceType Object supplier FormalParameter ReferenceType Object client ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dependency MethodInvocation MemberReference supplier MemberReference client getDependencies BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference dependency ReferenceType Permission MethodInvocation Model MethodInvocation MemberReference dependency MemberReference ModelManagementHelper IMPORT_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement ReturnStatement Cast ReferenceType Permission MemberReference dependency End End ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Collection getRelationships FormalParameter ReferenceType Object source FormalParameter ReferenceType Object dest LocalVariableDeclaration ReferenceType Set VariableDeclarator ret ClassCreator ReferenceType HashSet IfStatement BinaryOperation instanceof MemberReference source ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""source"" End IfStatement BinaryOperation instanceof MemberReference dest ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""dest"" End TryStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference source MemberReference dest getFlows addAll StatementExpression MethodInvocation ret MethodInvocation MemberReference dest MemberReference source getFlows addAll StatementExpression MethodInvocation ret MethodInvocation MemberReference source MemberReference dest getDependencies addAll StatementExpression MethodInvocation ret MethodInvocation MemberReference dest MemberReference source getDependencies addAll IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference dest ReferenceType GeneralizableElement BlockStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference source MemberReference dest getGeneralization add StatementExpression MethodInvocation ret MethodInvocation MemberReference dest MemberReference source getGeneralization add IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType Classifier BinaryOperation instanceof MemberReference dest ReferenceType Classifier BlockStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference source MemberReference dest getAssociations addAll End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference ret MethodDeclaration Modifier public BasicType boolean isValidNamespace FormalParameter ReferenceType Object mObj FormalParameter ReferenceType Object nsObj IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mObj ReferenceType ModelElement BinaryOperation instanceof MemberReference nsObj ReferenceType Namespace BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator modelElement Cast ReferenceType ModelElement MemberReference mObj LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference nsObj TryStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference ns getModel getFacade MethodInvocation Model MethodInvocation MemberReference modelElement getModel getFacade BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation == MemberReference modelElement MemberReference ns BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType Namespace BinaryOperation == MemberReference modelElement MethodInvocation MemberReference modelElement MemberReference ns getFirstSharedNamespace BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference ns ReferenceType Interface BinaryOperation instanceof MemberReference ns ReferenceType Actor BinaryOperation instanceof MemberReference ns ReferenceType DataType BinaryOperation instanceof MemberReference ns ReferenceType DataValue BinaryOperation instanceof MemberReference ns ReferenceType NodeInstance BinaryOperation instanceof MemberReference ns ReferenceType Signal BinaryOperation instanceof MemberReference ns ReferenceType UseCaseInstance BinaryOperation instanceof MemberReference ns ReferenceType ClassifierInState BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ns ReferenceType UseCase BinaryOperation instanceof MemberReference modelElement ReferenceType Classifier BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Component BlockStatement ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType Component BinaryOperation != MemberReference modelElement MemberReference ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType ComponentInstance BlockStatement ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType ComponentInstance BinaryOperation != MemberReference modelElement MemberReference ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BinaryOperation instanceof MemberReference modelElement ReferenceType DataValue BinaryOperation instanceof MemberReference modelElement ReferenceType Link BinaryOperation instanceof MemberReference modelElement ReferenceType UseCaseInstance BinaryOperation instanceof MemberReference modelElement ReferenceType CollaborationInstanceSet BinaryOperation instanceof MemberReference modelElement ReferenceType Stimulus BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType SubsystemInstance BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BinaryOperation instanceof MemberReference modelElement ReferenceType DataValue BinaryOperation instanceof MemberReference modelElement ReferenceType Link BinaryOperation instanceof MemberReference modelElement ReferenceType UseCaseInstance BinaryOperation instanceof MemberReference modelElement ReferenceType CollaborationInstanceSet BinaryOperation instanceof MemberReference modelElement ReferenceType SubsystemInstance BinaryOperation instanceof MemberReference modelElement ReferenceType Stimulus BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Subsystem BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlPackage BinaryOperation instanceof MemberReference modelElement ReferenceType UmlClass BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BinaryOperation instanceof MemberReference modelElement ReferenceType Interface BinaryOperation instanceof MemberReference modelElement ReferenceType UseCase BinaryOperation instanceof MemberReference modelElement ReferenceType Actor BinaryOperation instanceof MemberReference modelElement ReferenceType Subsystem BinaryOperation instanceof MemberReference modelElement ReferenceType Signal BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BinaryOperation instanceof MemberReference modelElement ReferenceType StateMachine BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Collaboration BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType ClassifierRole BinaryOperation instanceof MemberReference modelElement ReferenceType AssociationRole BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Action BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType UmlPackage BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator profilePackage Literal false IfStatement MemberReference profilePackage BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType TagDefinition BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BlockStatement ReturnStatement Literal false End BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlPackage BinaryOperation instanceof MemberReference modelElement ReferenceType Classifier BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BinaryOperation instanceof MemberReference modelElement ReferenceType StateMachine BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BlockStatement ReturnStatement Literal false End End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType UmlClass BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlClass BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType UseCase BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BinaryOperation instanceof MemberReference modelElement ReferenceType StateMachine BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BinaryOperation instanceof MemberReference modelElement ReferenceType Interface BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator cr Cast ReferenceType ClassifierRole MemberReference ns IfStatement BinaryOperation || MethodInvocation cr MethodInvocation MemberReference modelElement contains getAvailableContents MethodInvocation cr MethodInvocation MemberReference modelElement contains getAvailableFeature BlockStatement ReturnStatement Literal false End End End End End End End End End End End End IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType StructuralFeature BlockStatement IfStatement MethodInvocation ! Cast ReferenceType StructuralFeature MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge Cast ReferenceType GeneralizableElement MemberReference modelElement IfStatement MethodInvocation ! MemberReference ge MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BlockStatement IfStatement MethodInvocation ! Cast ReferenceType Generalization MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false End End End End IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BlockStatement IfStatement MethodInvocation ! Cast ReferenceType UmlAssociation MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BlockStatement IfStatement MethodInvocation ! Cast ReferenceType Collaboration MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false End End End ReturnStatement Literal true CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration /**
     * The base of a AssociationRole or ClassifierRole should be contained in
     * the given Namespace. If no base is set (yet), then allow any namespace.
     *
     * @param collab the given collaboration
     * @param ns the given candidate namespace
     * @return true if the given namespace may contain the collaboration
     */ Modifier private BasicType boolean isValidNamespace FormalParameter ReferenceType Collaboration collab FormalParameter ReferenceType Namespace ns ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator m MethodInvocation collab getOwnedElement BlockStatement IfStatement BinaryOperation instanceof MemberReference m ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator role Cast ReferenceType ClassifierRole MemberReference m ForStatement EnhancedForControl VariableDeclaration ReferenceType Classifier VariableDeclarator base MethodInvocation role getBase BlockStatement IfStatement MethodInvocation ! ns MethodInvocation MemberReference base contains getOwnedElement BlockStatement ReturnStatement Literal false End End IfStatement BinaryOperation instanceof MemberReference m ReferenceType AssociationRole BlockStatement LocalVariableDeclaration ReferenceType AssociationRole VariableDeclarator ar Cast ReferenceType AssociationRole MemberReference m LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator a MethodInvocation ar getBase IfStatement BinaryOperation && BinaryOperation != MemberReference a Literal null MethodInvocation ! ns MethodInvocation MemberReference a contains getOwnedElement BlockStatement ReturnStatement Literal false End End End End ReturnStatement Literal true MethodDeclaration Modifier private BasicType boolean isValidNamespace FormalParameter ReferenceType Generalization gen FormalParameter ReferenceType Namespace ns IfStatement BinaryOperation || BinaryOperation == MethodInvocation gen getParent Literal null BinaryOperation == MethodInvocation gen getChild Literal null BlockStatement ReturnStatement Literal true End LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns1 MethodInvocation gen MethodInvocation getNamespace getParent LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns2 MethodInvocation gen MethodInvocation getNamespace getChild IfStatement BinaryOperation == MemberReference ns MethodInvocation MemberReference ns1 MemberReference ns2 getFirstSharedNamespace BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier private BasicType boolean isValidNamespace FormalParameter ReferenceType StructuralFeature struc FormalParameter ReferenceType Namespace ns IfStatement BinaryOperation || BinaryOperation == MethodInvocation struc getType Literal null BinaryOperation == MethodInvocation struc getOwner Literal null BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier private BasicType boolean isValidNamespace FormalParameter ReferenceType UmlAssociation assoc FormalParameter ReferenceType Namespace ns LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Namespace VariableDeclarator namespaces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Namespace ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation assoc getConnection BlockStatement StatementExpression MethodInvocation namespaces MethodInvocation end MethodInvocation getNamespace getParticipant add End IfStatement BinaryOperation < MethodInvocation namespaces size Literal 2 BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns1 MethodInvocation namespaces Literal 0 get LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns2 MethodInvocation namespaces Literal 1 get IfStatement BinaryOperation == MemberReference ns MethodInvocation MemberReference ns1 MemberReference ns2 getFirstSharedNamespace BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier private BasicType boolean isValidNamespace FormalParameter ReferenceType GeneralizableElement generalizableElement FormalParameter ReferenceType Namespace namespace LocalVariableDeclaration ReferenceType CorePackage VariableDeclarator corePackage MethodInvocation modelImpl MethodInvocation getCore getUmlPackage LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator generalizations MethodInvocation corePackage MethodInvocation MemberReference generalizableElement getGeneralization getAChildGeneralization ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator generalization MemberReference generalizations BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator parent MethodInvocation generalization getParent IfStatement MethodInvocation ! namespace MethodInvocation MemberReference parent contains getOwnedElement BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation parent getName Literal "" is the ancestor of "" MethodInvocation generalizableElement getName Literal "". It is not in the same namespace "" MethodInvocation namespace getName Literal "" that we are trying to assign to "" MethodInvocation generalizableElement getName Literal "". So namespace is not valid."" debug ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType Namespace getFirstSharedNamespace FormalParameter ReferenceType Object ns1 FormalParameter ReferenceType Object ns2 IfStatement BinaryOperation || BinaryOperation == MemberReference ns1 Literal null BinaryOperation == MemberReference ns2 Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""null argument"" End IfStatement BinaryOperation instanceof MemberReference ns1 ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Expecting a Namespace argument. Got a "" MethodInvocation ns1 MethodInvocation getName getClass End IfStatement BinaryOperation instanceof MemberReference ns2 ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Expecting a Namespace argument. Got a "" MethodInvocation ns2 MethodInvocation getName getClass End IfStatement BinaryOperation == MemberReference ns1 MemberReference ns2 BlockStatement ReturnStatement Cast ReferenceType Namespace MemberReference ns1 End TryStatement LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Namespace VariableDeclarator path1 MethodInvocation MethodInvocation iterator Cast ReferenceType Namespace MemberReference ns1 getPath LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Namespace VariableDeclarator path2 MethodInvocation MethodInvocation iterator Cast ReferenceType Namespace MemberReference ns2 getPath LocalVariableDeclaration ReferenceType Namespace VariableDeclarator lastMatch Literal null WhileStatement BinaryOperation && MethodInvocation path1 hasNext MethodInvocation path2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator element MethodInvocation path1 next IfStatement BinaryOperation != MemberReference element MethodInvocation path2 next BlockStatement ReturnStatement MemberReference lastMatch End StatementExpression Assignment MemberReference lastMatch MemberReference element = End ReturnStatement MemberReference lastMatch CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Namespace getPath FormalParameter ReferenceType Namespace element LocalVariableDeclaration ReferenceType LinkedList TypeArgument ReferenceType Namespace VariableDeclarator path ClassCreator ReferenceType LinkedList TypeArgument ReferenceType Namespace StatementExpression MethodInvocation path MemberReference element add LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns MethodInvocation element getNamespace WhileStatement BinaryOperation != MemberReference ns Literal null BlockStatement StatementExpression MethodInvocation path MemberReference ns addFirst StatementExpression Assignment MemberReference ns MethodInvocation ns getNamespace = End ReturnStatement MemberReference path MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Namespace getAllPossibleNamespaces FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object model LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator m Cast ReferenceType ModelElement MemberReference modelElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Namespace VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Namespace IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ReturnStatement MemberReference ret End TryStatement IfStatement MethodInvocation MemberReference m MemberReference model isValidNamespace BlockStatement StatementExpression MethodInvocation ret Cast ReferenceType Namespace MemberReference model add End LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Namespace VariableDeclarator namespaces MethodInvocation modelImpl MethodInvocation MemberReference model ClassReference ReferenceType Namespace getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Namespace VariableDeclarator ns MemberReference namespaces BlockStatement IfStatement MethodInvocation MemberReference m MemberReference ns isValidNamespace BlockStatement StatementExpression MethodInvocation ret MemberReference ns add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getChildren FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator col ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GeneralizableElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator generalizations ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Generalization TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference o getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator specialization MemberReference specializations BlockStatement StatementExpression MethodInvocation MemberReference col MemberReference specialization MemberReference generalizations getChildren End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference col End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Illegal arguments: "" MemberReference o MethodDeclaration /**
     * Adds all children recursively to the Collection in the first argument.
     * The algorithm assumes that there is a cycle when a node has been visited
     * twice using already known generalizations.
     *
     * @param currentChildren
     *            collection to collect them in.
     * @param gen
     *            element whose children are added.
     * @param generalizations
     *            the list of already traversed generalizations.
     * @throws IllegalStateException
     *             if there is a circular reference.
     */ Modifier private getChildren FormalParameter ReferenceType Collection TypeArgument ReferenceType GeneralizableElement currentChildren FormalParameter ReferenceType Generalization gen FormalParameter ReferenceType Collection TypeArgument ReferenceType Generalization generalizations LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child MethodInvocation gen getChild IfStatement BinaryOperation && MethodInvocation currentChildren MemberReference child contains MethodInvocation generalizations MemberReference gen contains BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""Circular inheritance occured."" BlockStatement StatementExpression MethodInvocation currentChildren MemberReference child add StatementExpression MethodInvocation generalizations MemberReference gen add End LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference child getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator specialization MemberReference specializations BlockStatement StatementExpression MethodInvocation MemberReference currentChildren MemberReference specialization MemberReference generalizations getChildren End MethodDeclaration Modifier public ReferenceType Collection getAllRealizedInterfaces FormalParameter ReferenceType Object o TryStatement ReturnStatement MethodInvocation MemberReference o ClassCreator ReferenceType ArrayList ClassCreator ReferenceType HashSet internalGetAllRealizedInterfaces CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration /**
     * Helper method for getAllRealizedInterfaces.
     *
     * @param o
     * @param col
     * @param visited
     * @return Collection
     */ Modifier private ReferenceType Collection internalGetAllRealizedInterfaces FormalParameter ReferenceType Object o FormalParameter ReferenceType Collection col FormalParameter ReferenceType Set visited StatementExpression MethodInvocation visited MemberReference o add IfStatement BinaryOperation != MemberReference o Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType UmlClass BlockStatement LocalVariableDeclaration ReferenceType UmlClass VariableDeclarator clazz Cast ReferenceType UmlClass MemberReference o ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dependency MethodInvocation clazz getClientDependency BlockStatement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo Cast ReferenceType Stereotype MethodInvocation MethodInvocation dependency getStereotype getFirstItemOrNull IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference dependency ReferenceType Abstraction BinaryOperation != MemberReference stereo Literal null MethodInvocation CoreFactory.REALIZE_STEREOTYPE MethodInvocation stereo getName equals Literal MethodInvocation MethodInvocation stereo getBaseClass equals ""Abstraction"" BlockStatement StatementExpression MethodInvocation col MethodInvocation dependency getSupplier addAll End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator supertype MethodInvocation MemberReference o getSupertypes BlockStatement IfStatement MethodInvocation ! visited MemberReference supertype contains BlockStatement StatementExpression MethodInvocation MemberReference supertype MemberReference col MemberReference visited internalGetAllRealizedInterfaces End End End End ReturnStatement MemberReference col MethodDeclaration Modifier public final BasicType boolean hasCompositeEnd FormalParameter ReferenceType Object association IfStatement BinaryOperation instanceof MemberReference association ReferenceType UmlAssociation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator association1 Cast ReferenceType UmlAssociation MemberReference association TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation association1 getConnection BlockStatement IfStatement BinaryOperation == MethodInvocation end getAggregation MemberReference AggregationKindEnum AK_COMPOSITE BlockStatement ReturnStatement Literal true End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal false MethodDeclaration Modifier public final BasicType boolean equalsAggregationKind FormalParameter ReferenceType Object associationEnd FormalParameter ReferenceType String kindType IfStatement BinaryOperation instanceof MemberReference associationEnd ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator associationEnd1 Cast ReferenceType AssociationEnd MemberReference associationEnd IfStatement MethodInvocation kindType Literal ""composite"" equals BlockStatement ReturnStatement MethodInvocation AggregationKindEnum.AK_COMPOSITE MethodInvocation associationEnd1 getAggregation equals BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""kindType: "" MemberReference kindType Literal "" not supported"" End MethodDeclaration Modifier public removeAnnotatedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Comment BinaryOperation instanceof MemberReference me ReferenceType ModelElement BlockStatement TryStatement IfStatement Cast ReferenceType Comment MemberReference handle BlockStatement StatementExpression Cast ReferenceType Comment MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or model element: "" MemberReference me MethodDeclaration Modifier public removeClientDependency FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object dep TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference dep ReferenceType Dependency BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference handle LocalVariableDeclaration ReferenceType Collection VariableDeclarator deps MethodInvocation me getClientDependency IfStatement BinaryOperation && BinaryOperation != MemberReference deps Literal null MethodInvocation deps MemberReference dep contains BlockStatement StatementExpression MethodInvocation deps MemberReference dep remove End ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodDeclaration Modifier public removeConnection FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object connection TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BinaryOperation instanceof MemberReference connection ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType UmlAssociation MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Link BinaryOperation instanceof MemberReference connection ReferenceType LinkEnd BlockStatement StatementExpression Cast ReferenceType Link MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or connection: "" MemberReference connection MethodDeclaration Modifier public removeConstraint FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object cons TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference cons ReferenceType Constraint BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or cons: "" MemberReference cons MethodDeclaration Modifier public removeOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Namespace BinaryOperation instanceof MemberReference value ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference value IfStatement MethodInvocation ! elem getNamespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""ModelElement isn't in Namespace"" End StatementExpression MethodInvocation elem Literal null setNamespace ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or value: "" MemberReference value MethodDeclaration Modifier public removeParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter TryStatement IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Parameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BlockStatement StatementExpression Cast ReferenceType ObjectFlowState MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement StatementExpression Cast ReferenceType Event MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference parameter ReturnStatement End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference parameter MethodDeclaration Modifier public removeQualifier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object qualifier TryStatement IfStatement BinaryOperation instanceof MemberReference qualifier ReferenceType Attribute BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or qualifier: "" MemberReference qualifier MethodDeclaration Modifier public removeSourceFlow FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference flow ReferenceType Flow BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or flow: "" MemberReference flow MethodDeclaration Modifier public removeSupplierDependency FormalParameter ReferenceType Object supplier FormalParameter ReferenceType Object dependency TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference supplier ReferenceType ModelElement BinaryOperation instanceof MemberReference dependency ReferenceType Dependency BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference dependency ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""supplier: "" MemberReference supplier Literal "" or dependency: "" MemberReference dependency MethodDeclaration Modifier public removeTargetFlow FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference flow ReferenceType Flow BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or flow: "" MemberReference flow MethodDeclaration Modifier public removeTemplateArgument FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument TryStatement IfStatement BinaryOperation instanceof MemberReference argument ReferenceType TemplateArgument BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Binding BlockStatement StatementExpression Cast ReferenceType Binding MemberReference handle ReturnStatement End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference argument MethodDeclaration Modifier public removeTemplateParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter TryStatement IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType TemplateParameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference parameter MethodDeclaration Modifier public addAnnotatedElement FormalParameter ReferenceType Object comment FormalParameter ReferenceType Object annotatedElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference comment ReferenceType Comment BinaryOperation instanceof MemberReference annotatedElement ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Comment MemberReference comment ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""comment: "" MemberReference comment Literal "" or annotatedElement: "" MemberReference annotatedElement MethodDeclaration Modifier public addClient FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Dependency BinaryOperation instanceof MemberReference element ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or element: "" MemberReference element MethodDeclaration Modifier public addClientDependency FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object dependency IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference dependency ReferenceType Dependency BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or dependency: "" MemberReference dependency MethodDeclaration Modifier public addComment FormalParameter ReferenceType Object element FormalParameter ReferenceType Object comment IfStatement BinaryOperation && BinaryOperation instanceof MemberReference element ReferenceType ModelElement BinaryOperation instanceof MemberReference comment ReferenceType Comment BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference element ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""element: "" MemberReference element MethodDeclaration Modifier public addConnection FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object connection IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BinaryOperation instanceof MemberReference connection ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType UmlAssociation MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Link BinaryOperation instanceof MemberReference connection ReferenceType LinkEnd BlockStatement StatementExpression Cast ReferenceType Link MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or connection: "" MemberReference connection MethodDeclaration Modifier public addConnection FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object connection IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BinaryOperation instanceof MemberReference connection ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType UmlAssociation MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Link BinaryOperation instanceof MemberReference connection ReferenceType LinkEnd BlockStatement StatementExpression Cast ReferenceType Link MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or connection: "" MemberReference connection MethodDeclaration Modifier public addConstraint FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object mc IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference mc ReferenceType Constraint BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or mc: "" MemberReference mc MethodDeclaration Modifier public addDeploymentLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component BinaryOperation instanceof MemberReference node ReferenceType Node BlockStatement StatementExpression Cast ReferenceType Component MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or node: "" MemberReference node MethodDeclaration Modifier public addElementResidence FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference node ReferenceType ElementResidence BlockStatement StatementExpression Cast ReferenceType ElementResidence MemberReference node ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or node: "" MemberReference node MethodDeclaration Modifier public removeElementResidence FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference node ReferenceType ElementResidence BlockStatement StatementExpression Cast ReferenceType ElementResidence MemberReference node ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or node: "" MemberReference node MethodDeclaration /**
     * Get ElementResidences.
     *
     * TODO: Unused.  Should be added to Facade? - tfm
     *
     * @param handle A modelElement
     * @return Collection The ElementResidence for this model element
     */ Modifier public ReferenceType Collection TypeArgument ReferenceType ElementResidence getElementResidence FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getAResidentElementResidence MethodInvocation Cast ReferenceType ModelElement MemberReference handle getElementResidence getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public addFeature FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object f IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference f ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or f: "" MemberReference f MethodDeclaration Modifier public addLiteral FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object literal IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Enumeration BinaryOperation instanceof MemberReference literal ReferenceType EnumerationLiteral BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""enumeration: "" MemberReference handle Literal "" or literal: "" MemberReference literal MethodDeclaration Modifier public addFeature FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object f IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference f ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public addLink FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object link IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BinaryOperation instanceof MemberReference link ReferenceType Link BlockStatement StatementExpression Cast ReferenceType Link MemberReference link ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or link: "" MemberReference link MethodDeclaration Modifier public addMethod FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object m IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Operation BinaryOperation instanceof MemberReference m ReferenceType Method BlockStatement StatementExpression Cast ReferenceType Method MemberReference m StatementExpression Cast ReferenceType Method MemberReference m StatementExpression Cast ReferenceType Method MemberReference m ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or m: "" MemberReference m MethodDeclaration Modifier public addOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Namespace BinaryOperation instanceof MemberReference me ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference handle LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference me StatementExpression MethodInvocation elem MemberReference ns setNamespace StatementExpression MethodInvocation ns MethodInvocation MemberReference elem add getOwnedElement ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or me: "" MemberReference me MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Parameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement StatementExpression Cast ReferenceType Event MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference parameter MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Parameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BlockStatement StatementExpression Cast ReferenceType ObjectFlowState MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement StatementExpression Cast ReferenceType Event MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getATypedParameterType MethodInvocation Cast ReferenceType Parameter MemberReference parameter Cast ReferenceType Classifier MemberReference handle add getUmlPackage ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference parameter MethodDeclaration Modifier public addQualifier FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object qualifier IfStatement BinaryOperation instanceof MemberReference qualifier ReferenceType Attribute BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or qualifier: "" MemberReference qualifier MethodDeclaration Modifier public addRaisedSignal FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sig IfStatement BinaryOperation instanceof MemberReference sig ReferenceType Signal BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAContextRaisedSignal MethodInvocation Cast ReferenceType BehavioralFeature MemberReference handle Cast ReferenceType Signal MemberReference sig add getUmlPackage ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAContextRaisedSignal MethodInvocation Cast ReferenceType BehavioralFeature MemberReference handle Cast ReferenceType Signal MemberReference sig add getUmlPackage ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or sig: "" MemberReference sig MethodDeclaration Modifier public addSourceFlow FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference flow ReferenceType Flow BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or flow: "" MemberReference flow MethodDeclaration Modifier public addSupplier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Dependency BinaryOperation instanceof MemberReference element ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or element: "" MemberReference element MethodDeclaration Modifier public addSupplierDependency FormalParameter ReferenceType Object supplier FormalParameter ReferenceType Object dependency IfStatement BinaryOperation && BinaryOperation instanceof MemberReference supplier ReferenceType ModelElement BinaryOperation instanceof MemberReference dependency ReferenceType Dependency BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference dependency ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""supplier: "" MemberReference supplier Literal "" or dependency: "" MemberReference dependency MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" addTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object taggedValue StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference handle MemberReference taggedValue addTaggedValue getExtensionMechanismsHelper MethodDeclaration Modifier public addTargetFlow FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference flow ReferenceType Flow BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or flow: "" MemberReference flow MethodDeclaration Modifier public addTemplateArgument FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object argument IfStatement BinaryOperation instanceof MemberReference argument ReferenceType TemplateArgument BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Binding BlockStatement StatementExpression Cast ReferenceType Binding MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference argument MethodDeclaration Modifier public addTemplateArgument FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference argument ReferenceType TemplateArgument BinaryOperation instanceof MemberReference handle ReferenceType Binding BlockStatement StatementExpression Cast ReferenceType Binding MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or argument: "" MemberReference argument MethodDeclaration Modifier public addTemplateParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType TemplateParameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference parameter MethodDeclaration Modifier public addTemplateParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType TemplateParameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameter: "" MemberReference parameter MethodDeclaration Modifier public setAbstract FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType GeneralizableElement MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Operation MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setActive FormalParameter ReferenceType Object handle FormalParameter BasicType boolean active IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlClass BlockStatement StatementExpression Cast ReferenceType UmlClass MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setAggregation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object aggregationKind IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BinaryOperation instanceof MemberReference aggregationKind ReferenceType AggregationKind BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or aggregationKind: "" MemberReference aggregationKind MethodDeclaration Modifier public setAnnotatedElements FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Comment BinaryOperation instanceof MemberReference elems ReferenceType List BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType Comment MemberReference handle MemberReference elems update ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setAssociation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object association IfStatement BinaryOperation instanceof MemberReference association ReferenceType UmlAssociation BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Link BlockStatement StatementExpression Cast ReferenceType Link MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference association ReferenceType AssociationRole BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole BlockStatement StatementExpression Cast ReferenceType AssociationEndRole MemberReference handle ReturnStatement End End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or association: "" MemberReference association MethodDeclaration Modifier public setLeaf FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Operation MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType GeneralizableElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setRaisedSignals FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection raisedSignals ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Method BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType ProcedureExpression BlockStatement StatementExpression Cast ReferenceType Method MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Constraint BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType BooleanExpression BlockStatement StatementExpression Cast ReferenceType Constraint MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or expr: "" MemberReference expr MethodDeclaration Modifier public Annotation Deprecated setChangeability FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ck IfStatement BinaryOperation || BinaryOperation == MemberReference ck Literal null BinaryOperation instanceof MemberReference ck ReferenceType ChangeableKind BlockStatement LocalVariableDeclaration ReferenceType ChangeableKind VariableDeclarator changeableKind Cast ReferenceType ChangeableKind MemberReference ck IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or ck: "" MemberReference ck MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" setChangeable FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag StatementExpression MethodInvocation MemberReference handle MemberReference ! flag setReadOnly MethodDeclaration Modifier public setReadOnly FormalParameter ReferenceType Object handle FormalParameter BasicType boolean isReadOnly StatementExpression MethodInvocation MemberReference handle TernaryExpression MemberReference isReadOnly MemberReference ChangeableKindEnum CK_FROZEN MemberReference ChangeableKindEnum CK_CHANGEABLE setChangeability MethodDeclaration Modifier public setChild FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object child IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or child: "" MemberReference child MethodDeclaration Modifier public setConcurrency FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object concurrencyKind IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Operation BinaryOperation instanceof MemberReference concurrencyKind ReferenceType CallConcurrencyKind BlockStatement StatementExpression Cast ReferenceType Operation MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or concurrencyKind: "" MemberReference concurrencyKind MethodDeclaration Modifier public setConnections FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BinaryOperation instanceof MemberReference elems ReferenceType List BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType UmlAssociation MemberReference handle MemberReference elems update ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Link BinaryOperation instanceof MemberReference elems ReferenceType List BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType Link MemberReference handle MemberReference elems update ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setDefaultElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter BinaryOperation instanceof MemberReference element ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType TemplateParameter MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or model element: "" MemberReference element MethodDeclaration Modifier public setDefaultValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Parameter BinaryOperation instanceof MemberReference expr ReferenceType Expression BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or expr: "" MemberReference expr MethodDeclaration Modifier public setDiscriminator FormalParameter ReferenceType Object handle FormalParameter ReferenceType String discriminator IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setFeature FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object impl IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType Classifier BinaryOperation instanceof MemberReference impl ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference elem ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""elem: "" MemberReference elem Literal "" or impl: "" MemberReference impl MethodDeclaration Modifier public setFeatures FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection features IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator featuresList Literal null IfStatement BinaryOperation instanceof MemberReference features ReferenceType List BlockStatement StatementExpression Assignment MemberReference featuresList Cast ReferenceType List MemberReference features = BlockStatement StatementExpression Assignment MemberReference featuresList ClassCreator ReferenceType ArrayList MemberReference features = End StatementExpression Cast ReferenceType Classifier MemberReference handle StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setContainer FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BinaryOperation || BinaryOperation instanceof MemberReference container ReferenceType Component BinaryOperation == MemberReference container Literal null BlockStatement LocalVariableDeclaration ReferenceType ElementResidence VariableDeclarator er Cast ReferenceType ElementResidence MemberReference handle StatementExpression MethodInvocation er Cast ReferenceType Component MemberReference container setContainer BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or container: "" MemberReference container End MethodDeclaration Modifier public setInitialValue FormalParameter ReferenceType Object at FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference at ReferenceType Attribute BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType Expression BlockStatement StatementExpression Cast ReferenceType Attribute MemberReference at ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""at: "" MemberReference at Literal "" or expr: "" MemberReference expr MethodDeclaration Modifier public setKind FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object kind IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Parameter BinaryOperation instanceof MemberReference kind ReferenceType ParameterDirectionKind BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Pseudostate BinaryOperation instanceof MemberReference kind ReferenceType PseudostateKind BlockStatement StatementExpression Cast ReferenceType Pseudostate MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or kind: "" MemberReference kind MethodDeclaration Modifier public setModelElementContainer FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Partition BinaryOperation instanceof MemberReference container ReferenceType ActivityGraph BlockStatement StatementExpression Cast ReferenceType Partition MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference container ReferenceType Partition BlockStatement StatementExpression Cast ReferenceType Partition MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Constraint BinaryOperation instanceof MemberReference container ReferenceType Stereotype BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Interaction BinaryOperation instanceof MemberReference container ReferenceType Collaboration BlockStatement StatementExpression Cast ReferenceType Interaction MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BinaryOperation || BinaryOperation instanceof MemberReference container ReferenceType Component BinaryOperation == MemberReference container Literal null BlockStatement LocalVariableDeclaration ReferenceType ElementResidence VariableDeclarator er Cast ReferenceType ElementResidence MemberReference handle StatementExpression MethodInvocation er Cast ReferenceType Component MemberReference container setContainer IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink BinaryOperation instanceof MemberReference container ReferenceType Instance BlockStatement StatementExpression Cast ReferenceType AttributeLink MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation instanceof MemberReference container ReferenceType Interaction BlockStatement StatementExpression Cast ReferenceType Message MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType LinkEnd BinaryOperation instanceof MemberReference container ReferenceType Link BlockStatement StatementExpression Cast ReferenceType LinkEnd MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink BinaryOperation instanceof MemberReference container ReferenceType LinkEnd BlockStatement StatementExpression Cast ReferenceType AttributeLink MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BinaryOperation instanceof MemberReference container ReferenceType Stereotype BlockStatement StatementExpression Cast ReferenceType TaggedValue MemberReference handle StatementExpression Cast ReferenceType TaggedValue MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BinaryOperation instanceof MemberReference container ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType TaggedValue MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType StateVertex BinaryOperation instanceof MemberReference container ReferenceType CompositeState BlockStatement StatementExpression Cast ReferenceType StateVertex MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BinaryOperation instanceof MemberReference container ReferenceType UmlPackage BlockStatement StatementExpression Cast ReferenceType ElementImport MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Transition BinaryOperation instanceof MemberReference container ReferenceType State BlockStatement StatementExpression Cast ReferenceType State MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation instanceof MemberReference container ReferenceType StateMachine BlockStatement StatementExpression Cast ReferenceType State MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Transition BinaryOperation instanceof MemberReference container ReferenceType StateMachine BlockStatement StatementExpression Cast ReferenceType Transition MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference container ReferenceType Transition BlockStatement StatementExpression Cast ReferenceType Transition MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Guard BinaryOperation instanceof MemberReference container ReferenceType Transition BlockStatement StatementExpression Cast ReferenceType Guard MemberReference handle IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference container ReferenceType Namespace BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or container: "" MemberReference container End End End End End End End End End End End End End End End End End End End MethodDeclaration Modifier public setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType String BlockStatement IfStatement Literal MethodInvocation MemberReference arg equals ""1_N"" BlockStatement StatementExpression Assignment MemberReference arg MethodInvocation modelImpl MethodInvocation Literal 1 Literal - 1 createMultiplicity getDataTypesFactory = BlockStatement StatementExpression Assignment MemberReference arg MethodInvocation modelImpl MethodInvocation Literal 1 Literal 1 createMultiplicity getDataTypesFactory = End End IfStatement BinaryOperation || BinaryOperation == MemberReference arg Literal null BinaryOperation instanceof MemberReference arg ReferenceType Multiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator mult Cast ReferenceType Multiplicity MemberReference arg IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole BlockStatement StatementExpression Cast ReferenceType AssociationRole MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement StatementExpression Cast ReferenceType ClassifierRole MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Setting association end mult to "" MemberReference mult debug StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition BlockStatement StatementExpression Cast ReferenceType TagDefinition MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or arg: "" MemberReference arg MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType String name IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType StringSetter MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression Cast ReferenceType ModelElement MemberReference handle MemberReference name MethodInvocation Model MethodInvocation MemberReference handle getName getFacade BinaryOperation + Literal ""name = "" MemberReference name createCommand ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or name: "" MemberReference name MethodDeclaration Modifier public setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType String body IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Comment BinaryOperation != MemberReference body Literal null BlockStatement StatementExpression Cast ReferenceType Comment MemberReference handle End MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ns IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation || BinaryOperation == MemberReference ns Literal null BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator oldNs Cast ReferenceType ModelElement MemberReference handle IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MemberReference ns Literal null BinaryOperation == MemberReference oldNs Literal null BinaryOperation && BinaryOperation != MemberReference oldNs Literal null MethodInvocation oldNs MemberReference ns equals BlockStatement ReturnStatement End StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or ns: "" MemberReference ns MethodDeclaration Modifier public setNavigable FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setOrdering FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ok IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BinaryOperation instanceof MemberReference ok ReferenceType OrderingKind BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or ok: "" MemberReference ok MethodDeclaration Modifier public setOwner FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object owner IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Feature BinaryOperation || BinaryOperation == MemberReference owner Literal null BinaryOperation instanceof MemberReference owner ReferenceType Classifier BlockStatement StatementExpression MethodInvocation MemberReference handle Literal null setNamespace StatementExpression Cast ReferenceType Feature MemberReference handle ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition BinaryOperation || BinaryOperation == MemberReference owner Literal null BinaryOperation instanceof MemberReference owner ReferenceType Stereotype BlockStatement StatementExpression MethodInvocation MemberReference handle Literal null setNamespace StatementExpression Cast ReferenceType TagDefinition MemberReference handle IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference owner End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or owner: "" MemberReference owner MethodDeclaration Modifier public Annotation Deprecated setOwnerScope FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object os IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Feature BinaryOperation || BinaryOperation == MemberReference os Literal null BinaryOperation instanceof MemberReference os ReferenceType ScopeKind BlockStatement StatementExpression Cast ReferenceType Feature MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or os: "" MemberReference os MethodDeclaration Modifier public setStatic FormalParameter ReferenceType Object handle FormalParameter BasicType boolean isStatic IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Feature MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter BinaryOperation instanceof MemberReference parameter ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType TemplateParameter MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameters: "" MemberReference parameter MethodDeclaration Modifier public setParameters FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection parameters IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference handle ReferenceType Event BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator params MethodInvocation Model MethodInvocation MemberReference handle getParameters getFacade IfStatement MethodInvocation ! params isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator actualParams ClassCreator ReferenceType ArrayList MemberReference params ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator param MemberReference actualParams BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference param removeParameter End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator param MemberReference parameters BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference param addParameter End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parameters: "" MemberReference parameters MethodDeclaration Modifier public setParent FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Generalization BinaryOperation instanceof MemberReference parent ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or parent: "" MemberReference parent MethodDeclaration Modifier public setPowertype FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object pt IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Generalization BinaryOperation || BinaryOperation == MemberReference pt Literal null BinaryOperation instanceof MemberReference pt ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or pt: "" MemberReference pt MethodDeclaration Modifier public setQualifiers FormalParameter ReferenceType Object handle FormalParameter ReferenceType List elems IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setQuery FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setResident FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object resident IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BinaryOperation || BinaryOperation == MemberReference resident Literal null BinaryOperation instanceof MemberReference resident ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ElementResidence MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or resident: "" MemberReference resident MethodDeclaration Modifier public setResidents FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection residents IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NodeInstance BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType NodeInstance MemberReference handle MemberReference residents update ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ComponentInstance BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType ComponentInstance MemberReference handle MemberReference residents update ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setRoot FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Operation MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType GeneralizableElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setSources FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Flow BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType Flow MemberReference handle MemberReference specifications update ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setSpecification FormalParameter ReferenceType Object handle FormalParameter BasicType boolean specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public setSpecification FormalParameter ReferenceType Object operation FormalParameter ReferenceType String specification IfStatement BinaryOperation instanceof MemberReference operation ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Operation MemberReference operation ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""operation: "" MemberReference operation MethodDeclaration Modifier public setSpecification FormalParameter ReferenceType Object method FormalParameter ReferenceType Object specification IfStatement BinaryOperation && BinaryOperation instanceof MemberReference method ReferenceType Method BinaryOperation instanceof MemberReference specification ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Method MemberReference method ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""method: "" MemberReference method Literal "" or operation: "" MemberReference specification MethodDeclaration Modifier public setSpecifications FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public Annotation Deprecated setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tag FormalParameter ReferenceType String value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MethodInvocation modelImpl MethodInvocation MemberReference handle MemberReference tag getTaggedValue getFacade IfStatement BinaryOperation == MemberReference tv Literal null BlockStatement StatementExpression Assignment MemberReference tv Cast ReferenceType TaggedValue MethodInvocation modelImpl MethodInvocation MemberReference tag MemberReference value buildTaggedValue getExtensionMechanismsFactory = StatementExpression Cast ReferenceType ModelElement MemberReference handle BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference tv MemberReference value setValueOfTag getExtensionMechanismsHelper End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public Annotation Deprecated setTaggedValues FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection taggedValues StatementExpression MethodInvocation Model MethodInvocation MemberReference handle MemberReference taggedValues setTaggedValue getExtensionMechanismsHelper MethodDeclaration Modifier public Annotation Deprecated setTargetScope FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object scopeKind IfStatement BinaryOperation instanceof MemberReference scopeKind ReferenceType ScopeKind BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or scopeKind: "" MemberReference scopeKind MethodDeclaration Modifier public setType FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object type IfStatement BinaryOperation || BinaryOperation == MemberReference type Literal null BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BlockStatement StatementExpression Cast ReferenceType ObjectFlowState MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierInState BlockStatement StatementExpression Cast ReferenceType ClassifierInState MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or type: "" MemberReference type MethodDeclaration Modifier public setVisibility FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object visibility IfStatement BinaryOperation instanceof MemberReference visibility ReferenceType VisibilityKind BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BlockStatement StatementExpression Cast ReferenceType ElementResidence MemberReference handle ReturnStatement End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement StatementExpression Cast ReferenceType ElementImport MemberReference handle ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or visibility: "" MemberReference visibility MethodDeclaration Modifier public removeDeploymentLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component BinaryOperation instanceof MemberReference node ReferenceType Node BlockStatement StatementExpression Cast ReferenceType Component MemberReference handle ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or node: "" MemberReference node MethodDeclaration Modifier public addStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereo IfStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference modelElement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference stereo IfStatement MethodInvocation ! me getStereotype BlockStatement StatementExpression MethodInvocation me MethodInvocation MemberReference stereotype add getStereotype End ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference modelElement Literal "" or stereo: "" MemberReference stereo MethodDeclaration Modifier public addAllStereotypes FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection stereos IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference modelElement StatementExpression MethodInvocation me MethodInvocation MemberReference stereos addAll getStereotype ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference modelElement Literal "" or stereos: "" MemberReference stereos MethodDeclaration Modifier public removeStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereo TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference modelElement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference stereo IfStatement MethodInvocation me MethodInvocation MemberReference stereo contains getStereotype BlockStatement StatementExpression MethodInvocation me MethodInvocation MemberReference stereotype remove getStereotype End ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference modelElement Literal "" or stereo: "" MemberReference stereo MethodDeclaration Modifier public clearStereotypes FormalParameter ReferenceType Object modelElement IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference modelElement ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference modelElement MethodDeclaration Modifier public setEnumerationLiterals FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType List literals IfStatement BinaryOperation instanceof MemberReference enumeration ReferenceType Enumeration BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference enumeration StatementExpression Cast ReferenceType Enumeration MemberReference enumeration End MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String getAllMetatypeNames LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation getMofClass MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType ModelElement MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "" Class "" MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Found duplicate class "" MemberReference name Literal "" in metamodel"" error End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation getDataType MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType DataType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "" DataType "" MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Found duplicate datatype "" MemberReference name Literal "" in metamodel"" error End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation getPrimitiveType MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType PrimitiveType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "" PrimitiveType "" MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Found duplicate primitive type "" MemberReference name Literal "" in metamodel"" error End End ReturnStatement MemberReference names MethodDeclaration /**
     * Create a command for a setter of a String value.
     *
     * @param accesser The accesser.
     * @param newValue The new value.
     * @param oldValue The old value.
     */ Modifier private createCommand FormalParameter Modifier final ReferenceType StringSetter accesser FormalParameter Modifier final ReferenceType String newValue FormalParameter Modifier final ReferenceType String oldValue FormalParameter Modifier final ReferenceType String descr IfStatement BinaryOperation == MemberReference newValue MemberReference oldValue BlockStatement ReturnStatement End IfStatement BinaryOperation && BinaryOperation != MemberReference newValue Literal null MethodInvocation newValue MemberReference oldValue equals BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType ModelCommand VariableDeclarator command ClassCreator ReferenceType ModelCommand MethodDeclaration Modifier public undo StatementExpression MethodInvocation accesser MemberReference oldValue set MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation accesser MemberReference newValue set ReturnStatement Literal null MethodDeclaration Modifier public BasicType boolean isUndoable ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isRedoable ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference descr StatementExpression MethodInvocation Model MemberReference command execute ReferenceType CoreHelper",0
1455,1455,,0
20,20,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.util.ArrayList Import java.util.Arrays Import java.util.Collection Import java.util.Iterator Import java.util.Locale Import javax.swing.BorderFactory Import javax.swing.JCheckBox Import javax.swing.JComboBox Import javax.swing.JLabel Import javax.swing.JPanel Import javax.swing.SwingConstants Import org.argouml.application.api.Argo Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.tigris.swidgets.LabelledLayout ClassDeclaration /**
 *  Provides settings for altering the appearance of the Argo application.
 *
 *  @author Linus Tolke
 *  @author Jeremy Jones
 *  @since  0.9.7
 */ SettingsTabAppearance FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator lookAndFeel FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator metalTheme FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator language FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator metalLabel FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator smoothEdges FieldDeclaration Modifier private ReferenceType Locale VariableDeclarator locale ConstructorDeclaration /**
     * The constructor.
     *
     */ SettingsTabAppearance StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration BasicType int VariableDeclarator labelGap Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator componentGap Literal 10 LocalVariableDeclaration ReferenceType JPanel VariableDeclarator top ClassCreator ReferenceType JPanel ClassCreator ReferenceType LabelledLayout MemberReference labelGap MemberReference componentGap LocalVariableDeclaration ReferenceType JLabel VariableDeclarator label ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.look-and-feel"" localize StatementExpression Assignment MemberReference lookAndFeel ClassCreator ReferenceType JComboBox MethodInvocation LookAndFeelMgr MethodInvocation getAvailableLookAndFeelNames getInstance = StatementExpression MethodInvocation lookAndFeel ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation setMetalThemeState addActionListener StatementExpression MethodInvocation label MemberReference lookAndFeel setLabelFor StatementExpression MethodInvocation top MemberReference label add StatementExpression MethodInvocation top MemberReference lookAndFeel add StatementExpression Assignment MemberReference metalLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.metal-theme"" localize = StatementExpression Assignment MemberReference metalTheme ClassCreator ReferenceType JComboBox MethodInvocation LookAndFeelMgr MethodInvocation getAvailableThemeNames getInstance = StatementExpression MethodInvocation metalLabel MemberReference metalTheme setLabelFor StatementExpression MethodInvocation top MemberReference metalLabel add StatementExpression MethodInvocation top MemberReference metalTheme add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j ClassCreator ReferenceType JCheckBox MethodInvocation Translator Literal ""label.smooth-edges"" localize StatementExpression Assignment MemberReference smoothEdges MemberReference j = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator emptyLabel ClassCreator ReferenceType JLabel StatementExpression MethodInvocation emptyLabel MemberReference smoothEdges setLabelFor StatementExpression MethodInvocation top MemberReference emptyLabel add StatementExpression MethodInvocation top MemberReference smoothEdges add LocalVariableDeclaration ReferenceType JLabel VariableDeclarator languageLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.language"" localize LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation MyLocale getLocales StatementExpression Assignment MemberReference language ClassCreator ReferenceType JComboBox MethodInvocation c toArray = LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MyLocale MemberReference c getDefault IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation language MemberReference o setSelectedItem End StatementExpression MethodInvocation language ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator combo Cast ReferenceType JComboBox MethodInvocation e getSource StatementExpression Assignment MemberReference locale Cast ReferenceType MyLocale MethodInvocation combo getSelectedItem = addActionListener StatementExpression MethodInvocation languageLabel MemberReference language setLabelFor StatementExpression MethodInvocation top MemberReference languageLabel add StatementExpression MethodInvocation top MemberReference language add StatementExpression MethodInvocation top MethodInvocation BorderFactory Literal 10 Literal 10 Literal 10 Literal 10 createEmptyBorder setBorder StatementExpression MethodInvocation MemberReference top MemberReference BorderLayout CENTER add LocalVariableDeclaration ReferenceType JLabel VariableDeclarator restart ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.restart-application"" localize StatementExpression MethodInvocation restart MemberReference SwingConstants CENTER setHorizontalAlignment StatementExpression MethodInvocation restart MemberReference SwingConstants CENTER setVerticalAlignment StatementExpression MethodInvocation restart MethodInvocation BorderFactory Literal 10 Literal 2 Literal 10 Literal 2 createEmptyBorder setBorder StatementExpression MethodInvocation MemberReference restart MemberReference BorderLayout SOUTH add StatementExpression MethodInvocation setMetalThemeState MethodDeclaration /**
     * Enables or disables the metal theme controls depending on whether
     * or not themes are supported by the selected look and feel.
     */ Modifier private setMetalThemeState LocalVariableDeclaration ReferenceType String VariableDeclarator lafName Cast ReferenceType String MethodInvocation lookAndFeel getSelectedItem LocalVariableDeclaration BasicType boolean VariableDeclarator enabled MethodInvocation LookAndFeelMgr MethodInvocation MethodInvocation LookAndFeelMgr MethodInvocation MemberReference lafName getLookAndFeelFromName getInstance isThemeCompatibleLookAndFeel getInstance StatementExpression MethodInvocation metalLabel MemberReference enabled setEnabled StatementExpression MethodInvocation metalTheme MemberReference enabled setEnabled MethodDeclaration Modifier public handleSettingsTabRefresh LocalVariableDeclaration ReferenceType String VariableDeclarator laf MethodInvocation LookAndFeelMgr MethodInvocation getCurrentLookAndFeelName getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator theme MethodInvocation LookAndFeelMgr MethodInvocation getCurrentThemeName getInstance StatementExpression MethodInvocation lookAndFeel MemberReference laf setSelectedItem StatementExpression MethodInvocation metalTheme MemberReference theme setSelectedItem StatementExpression MethodInvocation smoothEdges MethodInvocation Configuration MemberReference Argo KEY_SMOOTH_EDGES Literal false getBoolean setSelected MethodDeclaration Modifier public handleSettingsTabSave StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation Cast ReferenceType String MethodInvocation lookAndFeel getSelectedItem Cast ReferenceType String MethodInvocation metalTheme getSelectedItem setCurrentLAFAndThemeByName getInstance StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SMOOTH_EDGES MethodInvocation smoothEdges isSelected setBoolean IfStatement BinaryOperation != MemberReference locale Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_LOCALE MethodInvocation locale toString setString End MethodDeclaration Modifier public handleSettingsTabCancel MethodDeclaration Modifier public handleResetToDefault MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal ""tab.appearance"" MethodDeclaration Modifier public ReferenceType JPanel getTabPanel ReturnStatement This FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 6779214318672690570L ReferenceType JPanel ReferenceType GUISettingsTabInterface ClassDeclaration MyLocale FieldDeclaration Modifier private ReferenceType Locale VariableDeclarator myLocale ConstructorDeclaration /**
     * The constructor.
     *
     * @param locale the Locale
     */ MyLocale FormalParameter ReferenceType Locale locale StatementExpression Assignment MemberReference myLocale MemberReference locale = MethodDeclaration /**
     * @return returns the locale
     */ ReferenceType Locale getLocale ReturnStatement MemberReference myLocale MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator displayString ClassCreator ReferenceType StringBuffer MethodInvocation myLocale toString StatementExpression MethodInvocation displayString Literal "" ("" append StatementExpression MethodInvocation displayString MethodInvocation myLocale MemberReference myLocale getDisplayLanguage append IfStatement BinaryOperation && BinaryOperation != MethodInvocation myLocale MemberReference myLocale getDisplayCountry Literal null BinaryOperation > MethodInvocation myLocale MethodInvocation length MemberReference myLocale getDisplayCountry Literal 0 BlockStatement StatementExpression MethodInvocation displayString Literal "" "" append StatementExpression MethodInvocation displayString MethodInvocation myLocale MemberReference myLocale getDisplayCountry append End StatementExpression MethodInvocation displayString Literal "")"" append IfStatement MethodInvocation myLocale MethodInvocation Translator getSystemDefaultLocale equals BlockStatement StatementExpression MethodInvocation displayString Literal "" - Default"" append End ReturnStatement MethodInvocation displayString toString MethodDeclaration Modifier static ReferenceType Collection getLocales LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Arrays MethodInvocation iterator MethodInvocation Translator getLocales asList LocalVariableDeclaration ReferenceType Collection VariableDeclarator c ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Locale VariableDeclarator locale Cast ReferenceType Locale MethodInvocation i next StatementExpression MethodInvocation c ClassCreator ReferenceType MyLocale MemberReference locale add End ReturnStatement MemberReference c MethodDeclaration Modifier static ReferenceType MyLocale getDefault FormalParameter ReferenceType Collection c LocalVariableDeclaration ReferenceType Locale VariableDeclarator locale MethodInvocation Locale getDefault LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType MyLocale VariableDeclarator ml Cast ReferenceType MyLocale MethodInvocation i next IfStatement MethodInvocation locale MethodInvocation ml getLocale equals BlockStatement ReturnStatement MemberReference ml End End ReturnStatement Literal null",0
1535,1535,,0
1218,1218,,0
739,739,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import java.awt.event.MouseEvent Import java.util.Vector Import org.tigris.gef.graph.GraphModel ClassDeclaration Modifier public /**
 * Class to display graphics for a UML Node in a diagram.
 *
 * @author 5eichler@informatik.uni-hamburg.de
 */ FigMNode ConstructorDeclaration Modifier public /**
     * Main constructor - only directly used for file loading.
     */ FigMNode StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier public /**
     * Construct a FigMNode based on an existing UML Node element.
     *
     * @param gm ignored
     * @param node the UML element
     */ FigMNode FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression SuperConstructorInvocation MemberReference gm MemberReference node MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp add ReturnStatement MemberReference popUpActions ReferenceType AbstractFigNode",0
76,76,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.sequence.ui Import java.awt.Cursor Import java.awt.Point Import java.awt.event.MouseEvent Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.ModeCreate Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigLine ClassDeclaration Modifier public /**
 * Mode to create a link between two figobjects. This mode extends
 * ModeCreate and not ModeCreateEdge because ModeCreateEdge hides its
 * variables a bit too much...
 *
 * @author jaap.branderhorst@xs4all.nl
 */ ModeCreateMessage FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ModeCreateMessage getLogger FieldDeclaration /**
     * The NetPort where the arc is paintn from.
     */ Modifier private ReferenceType Object VariableDeclarator startPort FieldDeclaration /**
     * The Fig that presents the starting NetPort.
     */ Modifier private ReferenceType Fig VariableDeclarator startPortFig FieldDeclaration /**
     * The FigNode on the NetNode that owns the start port.
     */ Modifier private ReferenceType FigClassifierRole VariableDeclarator sourceFigClassifierRole FieldDeclaration /**
     * The new message that is being created.
     */ Modifier private ReferenceType Object VariableDeclarator message ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ ModeCreateMessage StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param par the editor
     */ ModeCreateMessage FormalParameter ReferenceType Editor par StatementExpression SuperConstructorInvocation MemberReference par MethodDeclaration Modifier public ReferenceType Fig createNewItem FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int snapX FormalParameter BasicType int snapY ReturnStatement ClassCreator ReferenceType FigLine MemberReference snapX MemberReference snapY MethodInvocation me getX MemberReference snapY MethodInvocation Globals MethodInvocation getRubberbandColor getPrefs MethodDeclaration Modifier public ReferenceType String instructions ReturnStatement MethodInvocation Translator BinaryOperation + Literal ""action.sequence.new."" MethodInvocation Literal ""actionName"" getArg localize MethodDeclaration /**
     * On mousePressed determine what port the user is dragging from.
     * The mousePressed event is sent via ModeSelect.
     * {@inheritDoc}
     */ Modifier public mousePressed FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Fig VariableDeclarator underMouse MethodInvocation ce MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference underMouse Literal null BlockStatement StatementExpression Assignment MemberReference underMouse MethodInvocation ce BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = End IfStatement BinaryOperation == MemberReference underMouse Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End IfStatement BinaryOperation instanceof MemberReference underMouse ReferenceType FigClassifierRole BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End StatementExpression Assignment MemberReference sourceFigClassifierRole Cast ReferenceType FigClassifierRole MemberReference underMouse = StatementExpression Assignment MemberReference startPort MethodInvocation sourceFigClassifierRole MemberReference x MemberReference y deepHitPort = IfStatement BinaryOperation == MemberReference startPort Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End StatementExpression Assignment MemberReference startPortFig MethodInvocation sourceFigClassifierRole MemberReference startPort getPortFig = StatementExpression MethodInvocation start LocalVariableDeclaration ReferenceType Point VariableDeclarator snapPt ClassCreator ReferenceType Point SynchronizedStatement MemberReference snapPt StatementExpression MethodInvocation snapPt BinaryOperation + MethodInvocation startPortFig getX BinaryOperation / MemberReference FigClassifierRole WIDTH Literal 2 MethodInvocation startPortFig getY setLocation StatementExpression MethodInvocation editor MemberReference snapPt snap StatementExpression Assignment MemberReference anchorX MemberReference snapPt x = StatementExpression Assignment MemberReference anchorY MemberReference snapPt y = StatementExpression Assignment MemberReference _newItem MethodInvocation MemberReference me MemberReference anchorX MemberReference anchorY createNewItem = StatementExpression MethodInvocation me consume StatementExpression MethodInvocation MethodInvocation Cursor MemberReference Cursor CROSSHAIR_CURSOR getPredefinedCursor setCursor MethodDeclaration /**
     * On mouseReleased, find the port in the destination node that's
     * on the same height as the source port fig, ask the GraphModel
     * to connect the two ports.  If that connection is allowed, then
     * construct a new FigEdge and add it to the Layer and send it to
     * the back.
     *
     * {@inheritDoc}
     */ Modifier public mouseReleased FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement End IfStatement BinaryOperation == MemberReference sourceFigClassifierRole Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation ce MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference f Literal null BlockStatement StatementExpression Assignment MemberReference f MethodInvocation ce BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = End LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation ce getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType MutableGraphModel BlockStatement StatementExpression Assignment MemberReference f Literal null = End LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator mgm Cast ReferenceType MutableGraphModel MemberReference gm IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigClassifierRole BlockStatement LocalVariableDeclaration ReferenceType FigClassifierRole VariableDeclarator destFigClassifierRole Cast ReferenceType FigClassifierRole MemberReference f LocalVariableDeclaration ReferenceType Object VariableDeclarator foundPort Literal null IfStatement BinaryOperation != MemberReference destFigClassifierRole MemberReference sourceFigClassifierRole BlockStatement StatementExpression Assignment MemberReference y MethodInvocation startPortFig getY = StatementExpression Assignment MemberReference foundPort MethodInvocation destFigClassifierRole MemberReference x MemberReference y deepHitPort = BlockStatement StatementExpression Assignment MemberReference foundPort MethodInvocation destFigClassifierRole MemberReference x MemberReference y deepHitPort = End IfStatement BinaryOperation && BinaryOperation != MemberReference foundPort Literal null BinaryOperation != MemberReference foundPort MemberReference startPort BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator destPortFig MethodInvocation destFigClassifierRole MemberReference foundPort getPortFig LocalVariableDeclaration ReferenceType Object VariableDeclarator edgeType MethodInvocation Model MethodInvocation getMessage getMetaTypes StatementExpression Assignment MemberReference message MethodInvocation mgm MemberReference startPort MemberReference foundPort MemberReference edgeType connect = IfStatement BinaryOperation != Literal null MemberReference message BlockStatement StatementExpression MethodInvocation ce MemberReference _newItem damaged StatementExpression MethodInvocation sourceFigClassifierRole damage StatementExpression MethodInvocation destFigClassifierRole damage StatementExpression Assignment MemberReference _newItem Literal null = LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator fe Cast ReferenceType FigMessage MethodInvocation ce MethodInvocation getActiveLayer MethodInvocation MemberReference message presentationFor getLayerManager StatementExpression MethodInvocation fe MemberReference startPortFig setSourcePortFig StatementExpression MethodInvocation fe MemberReference sourceFigClassifierRole setSourceFigNode StatementExpression MethodInvocation fe MemberReference destPortFig setDestPortFig StatementExpression MethodInvocation fe MemberReference destFigClassifierRole setDestFigNode IfStatement BinaryOperation != MemberReference sourceFigClassifierRole Literal null BlockStatement StatementExpression MethodInvocation sourceFigClassifierRole updateEdges End IfStatement BinaryOperation != MemberReference destFigClassifierRole Literal null BlockStatement StatementExpression MethodInvocation destFigClassifierRole updateEdges End IfStatement BinaryOperation != MemberReference fe Literal null BlockStatement StatementExpression MethodInvocation ce MethodInvocation MemberReference fe select getSelectionManager End StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement BlockStatement StatementExpression MethodInvocation LOG Literal ""connection return null"" debug End End End StatementExpression MethodInvocation sourceFigClassifierRole damage StatementExpression MethodInvocation ce MemberReference _newItem damaged StatementExpression Assignment MemberReference _newItem Literal null = StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume MethodDeclaration Modifier public mouseDragged FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement End IfStatement BinaryOperation != MemberReference _newItem Literal null BlockStatement StatementExpression MethodInvocation editor MemberReference _newItem damaged StatementExpression MethodInvocation MethodInvocation me getX MethodInvocation startPortFig getY creationDrag StatementExpression MethodInvocation editor MemberReference _newItem damaged StatementExpression MethodInvocation editor MethodInvocation me getX MethodInvocation startPortFig getY scrollToShow StatementExpression MethodInvocation me consume BlockStatement StatementExpression SuperMethodInvocation MemberReference me mouseDragged End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6004200950886660909L ReferenceType ModeCreate",0
807,807,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * @author jaap.branderhorst@xs4all.nl
 */ GoClassifierToInstance MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.classifier.collaboration"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getInstances getFacade MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
260,260,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.layout Import org.apache.log4j.Logger Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge ClassDeclaration Modifier public abstract /**
 *
 * @author mkl
 */ ClassdiagramInheritanceEdge FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ClassdiagramInheritanceEdge getLogger FieldDeclaration /**
     * The largest difference that we consider equivalent to zero
     */ Modifier private final static BasicType int VariableDeclarator EPSILON Literal 5 FieldDeclaration /**
     * The figures which are connected by this edge
     */ Modifier private ReferenceType Fig VariableDeclarator high VariableDeclarator low FieldDeclaration /**
     * Offset used to distribute the lines
     */ Modifier private BasicType int VariableDeclarator offset ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param edge the fig edge
     */ ClassdiagramInheritanceEdge FormalParameter ReferenceType FigEdge edge StatementExpression SuperConstructorInvocation MemberReference edge StatementExpression Assignment MemberReference high MethodInvocation getDestFigNode = StatementExpression Assignment MemberReference low MethodInvocation getSourceFigNode = StatementExpression Assignment MemberReference offset Literal 0 = MethodDeclaration /**
     * @return the vertical offset
     */ Modifier public BasicType int getVerticalOffset ReturnStatement BinaryOperation + BinaryOperation - BinaryOperation / MethodInvocation getVGap Literal 2 Literal 10 MethodInvocation getOffset MethodDeclaration /**
     * @return the center of the high node
     */ Modifier public BasicType int getCenterHigh ReturnStatement BinaryOperation + Cast BasicType int BinaryOperation + MethodInvocation high MethodInvocation getX getLocation BinaryOperation / MethodInvocation high MemberReference width getSize Literal 2 MethodInvocation getOffset MethodDeclaration /**
     * @return the center of the low node
     */ Modifier public BasicType int getCenterLow ReturnStatement BinaryOperation + Cast BasicType int BinaryOperation + MethodInvocation low MethodInvocation getX getLocation BinaryOperation / MethodInvocation low MemberReference width getSize Literal 2 MethodInvocation getOffset MethodDeclaration /**
     * @return the gap with the node one level down
     */ Modifier public BasicType int getDownGap ReturnStatement Cast BasicType int BinaryOperation - MethodInvocation low MethodInvocation getY getLocation MethodInvocation getVerticalOffset MethodDeclaration /**
     * @see org.argouml.uml.diagram.layout.LayoutedEdge#layout()
     *
     * Layout the edges in a way that they form a nice inheritance tree. Try to
     * implement these nice zigzag lines between classes and works well when the
     * row difference is one.
     *
     * @author Markus Klink
     * @since 0.9.6
     */ Modifier public layout LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation getUnderlyingFig LocalVariableDeclaration BasicType int VariableDeclarator centerHigh MethodInvocation getCenterHigh LocalVariableDeclaration BasicType int VariableDeclarator centerLow MethodInvocation getCenterLow LocalVariableDeclaration BasicType int VariableDeclarator difference BinaryOperation - MemberReference centerHigh MemberReference centerLow IfStatement BinaryOperation < MethodInvocation Math MemberReference difference abs MemberReference EPSILON BlockStatement StatementExpression MethodInvocation fig BinaryOperation + MemberReference centerLow BinaryOperation + BinaryOperation / MemberReference difference Literal 2 BinaryOperation % MemberReference difference Literal 2 Cast BasicType int MethodInvocation low getLocation addPoint StatementExpression MethodInvocation fig BinaryOperation - MemberReference centerHigh BinaryOperation / MemberReference difference Literal 2 BinaryOperation + MethodInvocation high MemberReference y getLocation MethodInvocation high MemberReference height getSize addPoint BlockStatement StatementExpression MethodInvocation fig MemberReference centerLow Cast BasicType int MethodInvocation low getLocation addPoint IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Point: x: "" MemberReference centerLow Literal "" y: "" MethodInvocation low MemberReference y getLocation debug End StatementExpression MethodInvocation MethodInvocation BinaryOperation - MemberReference centerHigh MemberReference difference MethodInvocation getDownGap addPoint getUnderlyingFig StatementExpression MethodInvocation MethodInvocation MemberReference centerHigh MethodInvocation getDownGap addPoint getUnderlyingFig IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Point: x: "" BinaryOperation - MemberReference centerHigh MemberReference difference Literal "" y: "" MethodInvocation getDownGap debug StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Point: x: "" MemberReference centerHigh Literal "" y: "" MethodInvocation getDownGap debug End StatementExpression MethodInvocation fig MemberReference centerHigh BinaryOperation + MethodInvocation high MemberReference y getLocation MethodInvocation high MemberReference height getSize addPoint IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Point x: "" MemberReference centerHigh Literal "" y: "" BinaryOperation + MethodInvocation high MemberReference y getLocation MethodInvocation high MemberReference height getSize debug End End StatementExpression MethodInvocation fig Literal false setFilled StatementExpression MethodInvocation MethodInvocation MethodInvocation getUnderlyingFig setFig getCurrentEdge MethodDeclaration /**
     * Set the line-offset for this edge
     *
     * @param anOffset
     *            the offset to use for this edge
     */ Modifier public setOffset FormalParameter BasicType int anOffset StatementExpression Assignment MemberReference offset MemberReference anOffset = MethodDeclaration /**
     * @return Line-offset for this edge
     */ Modifier public BasicType int getOffset ReturnStatement MemberReference offset ReferenceType ClassdiagramEdge",1
159,159,"CompilationUnit PackageDeclaration org.argouml.model.euml Import java.util.List Import org.argouml.model.AbstractModelFactory Import org.argouml.model.DataTypesFactory Import org.argouml.model.NotImplementedException Import org.eclipse.uml2.uml.OpaqueExpression Import org.eclipse.uml2.uml.UMLFactory ClassDeclaration /**
 * The implementation of the DataTypesFactory for EUML2.
 */ DataTypesFactoryEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param implementation The ModelImplementation.
     */ DataTypesFactoryEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Object createActionExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createArgListsExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createBooleanExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType OpaqueExpression createExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType OpaqueExpression VariableDeclarator expression MethodInvocation UMLFactory.eINSTANCE createOpaqueExpression StatementExpression MethodInvocation expression MethodInvocation MemberReference language add getLanguages StatementExpression MethodInvocation expression MethodInvocation MemberReference body add getBodies ReturnStatement MemberReference expression MethodDeclaration Modifier public ReferenceType Object createIterationExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createMappingExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createMultiplicity FormalParameter BasicType int lower FormalParameter BasicType int upper ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object createMultiplicity FormalParameter ReferenceType List range ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object createMultiplicity FormalParameter ReferenceType String str ReturnStatement MemberReference str MethodDeclaration Modifier public ReferenceType Object createMultiplicityRange FormalParameter ReferenceType String str ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object createMultiplicityRange FormalParameter BasicType int lower FormalParameter BasicType int upper ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object createObjectSetExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createProcedureExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createTimeExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration Modifier public ReferenceType Object createTypeExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body createExpression MethodDeclaration /**
     * Convert an integer to a string using MultiplicityRange notation.
     * 
     * @param i integer to convert
     * @return String version of integer or ""*"" for unlimited (-1)
     */ Modifier static ReferenceType String boundToString FormalParameter BasicType int i IfStatement BinaryOperation == MemberReference i Literal - 1 BlockStatement ReturnStatement Literal ""*"" BlockStatement ReturnStatement MethodInvocation Integer MemberReference i toString End MethodDeclaration /**
     * Convert a MultiplicityRange bound string to an integer.
     * 
     * @param b String containing a single MultiplicityRange bound
     * @return integer representation
     */ Modifier private static BasicType int stringToBound FormalParameter ReferenceType String b TryStatement IfStatement BinaryOperation || MethodInvocation b Literal ""n"" equals MethodInvocation b Literal ""*"" equals BlockStatement ReturnStatement Literal - 1 BlockStatement ReturnStatement MethodInvocation Integer MemberReference b parseInt End CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""illegal range bound : "" MemberReference b ReferenceType DataTypesFactory ReferenceType AbstractModelFactory",0
306,306,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import java.beans.PropertyChangeEvent Import java.util.Collection Import java.util.Enumeration Import java.util.Iterator Import org.argouml.model.AddAssociationEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.tigris.gef.base.Diagram Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * List model which implements allAvailableContents operation for a
 * ClassifierRole as described in the well formedness rules.
 *
 * @author jaap.branderhorst@xs4all.nl
 */ UMLClassifierRoleAvailableContentsListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierRoleAvailableContentsListModel.
     */ UMLClassifierRoleAvailableContentsListModel StatementExpression SuperConstructorInvocation MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget allAvailableContents getCollaborationsHelper setAllElements MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AddAssociationEvent BlockStatement IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""base"" equals getPropertyName BinaryOperation == MethodInvocation e getSource MethodInvocation getTarget BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation MemberReference e getChangedElement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference clazz getOwnedElements getFacade addAll StatementExpression MethodInvocation Model MethodInvocation This MemberReference clazz Literal ""ownedElement"" addModelEventListener getPump IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""ownedElement"" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases MethodInvocation MethodInvocation e getSource contains getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference e getChangedElement addElement End End IfStatement BinaryOperation instanceof MemberReference e ReferenceType RemoveAssociationEvent BlockStatement IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""base"" equals getPropertyName BinaryOperation == MethodInvocation e getSource MethodInvocation getTarget BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation MemberReference e getChangedElement StatementExpression MethodInvocation Model MethodInvocation This MemberReference clazz Literal ""ownedElement"" removeModelEventListener getPump IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""ownedElement"" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases MethodInvocation MethodInvocation e getSource contains getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference e getChangedElement removeElement End End BlockStatement StatementExpression SuperMethodInvocation MemberReference e propertyChange End End MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object theNewTarget StatementExpression Assignment MemberReference theNewTarget TernaryExpression BinaryOperation instanceof MemberReference theNewTarget ReferenceType Fig Cast ReferenceType Fig MemberReference theNewTarget MemberReference theNewTarget = IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference theNewTarget isAModelElement getFacade BinaryOperation instanceof MemberReference theNewTarget ReferenceType Diagram BlockStatement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation elements WhileStatement MethodInvocation enumeration hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation enumeration nextElement StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal ""ownedElement"" removeModelEventListener getPump End StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getTarget Literal ""base"" removeModelEventListener getPump End StatementExpression MethodInvocation MemberReference theNewTarget setListTarget IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation bases iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal ""ownedElement"" addModelEventListener getPump End StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getTarget Literal ""base"" addModelEventListener getPump End IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation Literal true setBuildingModel StatementExpression MethodInvocation buildModelList StatementExpression MethodInvocation Literal false setBuildingModel IfStatement BinaryOperation > MethodInvocation getSize Literal 0 BlockStatement StatementExpression MethodInvocation This Literal 0 BinaryOperation - MethodInvocation getSize Literal 1 fireIntervalAdded End End End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement Literal false ReferenceType UMLModelElementListModel2",1
1540,1540,,0
1044,1044,,1
610,610,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.ArrayList Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLRadioButtonPanel ClassDeclaration Modifier public /**
 * A panel for the ParameterDirectionKind (in, inout...) of a Parameter.
 *
 * @author mkl
 */ UMLParameterDirectionKindRadioButtonPanel FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String VariableDeclarator labelTextsAndActionCommands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.parameter-direction-in"" localize MemberReference ActionSetParameterDirectionKind IN_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.parameter-direction-out"" localize MemberReference ActionSetParameterDirectionKind OUT_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.parameter-direction-inout"" localize MemberReference ActionSetParameterDirectionKind INOUT_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.parameter-direction-return"" localize MemberReference ActionSetParameterDirectionKind RETURN_COMMAND add ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param title
     *            the title of the panel
     * @param horizontal
     *            determines the orientation
     */ UMLParameterDirectionKindRadioButtonPanel FormalParameter ReferenceType String title FormalParameter BasicType boolean horizontal StatementExpression SuperConstructorInvocation MemberReference title MemberReference labelTextsAndActionCommands Literal ""kind"" MethodInvocation ActionSetParameterDirectionKind getInstance MemberReference horizontal MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getKind getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getInParameter getDirectionKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetParameterDirectionKind IN_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getInOutParameter getDirectionKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetParameterDirectionKind INOUT_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getOutParameter getDirectionKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetParameterDirectionKind OUT_COMMAND setSelected BlockStatement StatementExpression MethodInvocation MemberReference ActionSetParameterDirectionKind RETURN_COMMAND setSelected End End End End End ReferenceType UMLRadioButtonPanel",0
1054,1054,,1
347,347,"CompilationUnit PackageDeclaration org.argouml.profile Import java.util.Collection InterfaceDeclaration Modifier public /**
 * Interface to be implemented by profile model loaders.
 *
 * @author maurelio1234
 */ ProfileModelLoader MethodDeclaration /**
     * Load a model from the specified path.
     * 
     * @param path the path where the profile can be found. <em>Note:</em>The
     *                expected string format is implementation specific!
     * @return the set of defined packages
     * @throws ProfileException if the profile could not be loaded for some
     *                 reason
     */ ReferenceType Collection loadModel FormalParameter ReferenceType String path ProfileException",0
73,73,"CompilationUnit PackageDeclaration org.argouml.gefext Import java.awt.event.MouseEvent Import org.argouml.i18n.Translator Import org.tigris.gef.base.ModeCreateFigCircle Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * A Mode to interprete user input while creating a FigCircle. All of
 * the actual event handling is inherited from ModeCreate. This class
 * just implements the differences needed to make it specific to
 * circles. 
 *
 * @author Michiel
 */ ArgoModeCreateFigCircle MethodDeclaration Modifier public Annotation Override ReferenceType Fig createNewItem FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int snapX FormalParameter BasicType int snapY ReturnStatement ClassCreator ReferenceType ArgoFigCircle MemberReference snapX MemberReference snapY Literal 0 Literal 0 MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal ""statusmsg.help.create.circle"" localize ReferenceType ModeCreateFigCircle",0
41,41,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.sequence.ui Import org.tigris.gef.presentation.ArrowHeadGreater ClassDeclaration Modifier public /**
 * @author jaap.branderhorst
 */ FigCreateActionMessage FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 2607959442732866191L ConstructorDeclaration Modifier public /**
     * @param owner the owner object
     */ FigCreateActionMessage FormalParameter ReferenceType Object owner StatementExpression SuperConstructorInvocation MemberReference owner StatementExpression MethodInvocation ClassCreator ReferenceType ArrowHeadGreater setDestArrowHead StatementExpression MethodInvocation Literal false setDashed ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ FigCreateActionMessage StatementExpression ExplicitConstructorInvocation Literal null ReferenceType FigMessage",1
1282,1282,,0
546,546,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import org.argouml.model.Model Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the ClassifierInState state name text shown in an ObjectFlowState. 
 * Subclass this for all languages.
 * 
 * @author Michiel
 */ ObjectFlowStateStateNotation ConstructorDeclaration Modifier public /**
     * The constructor.
     * 
     * @param objectflowstate the UML object
     */ ObjectFlowStateStateNotation FormalParameter ReferenceType Object objectflowstate IfStatement MethodInvocation ! Model MethodInvocation MemberReference objectflowstate isAObjectFlowState getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not a ObjectFlowState."" End ReferenceType NotationProvider",0
479,479,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.Frame Import java.awt.Insets Import java.awt.datatransfer.Clipboard Import java.awt.datatransfer.ClipboardOwner Import java.awt.datatransfer.StringSelection Import java.awt.datatransfer.Transferable Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.WindowAdapter Import java.awt.event.WindowEvent Import javax.swing.JButton Import javax.swing.JScrollPane Import javax.swing.JTextArea Import org.argouml.application.helpers.ApplicationVersion Import org.argouml.i18n.Translator Import org.argouml.util.ArgoDialog ClassDeclaration Modifier public /**
 * Display System Information (JDK Version, JDK Vendor, etc).
 * A Copy to System Clipboard button is provided to help generate bug reports.
 *
 * @author Eugenio Alvarez
 */ SystemInfoDialog FieldDeclaration /**
     * Version generated by Eclipse for rev. 1.12
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1595302214402366939L FieldDeclaration /** Insets in pixels  */ Modifier private final static BasicType int VariableDeclarator INSET_PX Literal 3 FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator info ClassCreator ReferenceType JTextArea FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator runGCButton ClassCreator ReferenceType JButton FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator copyButton ClassCreator ReferenceType JButton ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param owner - ignored - for backward compatibility only
     * @param modal true if the dialog is modal
     * @deprecated for 0.25.1 by tfmorris - 
     * use {@link #SystemInfoDialog(boolean)}
     */ SystemInfoDialog FormalParameter ReferenceType Frame owner FormalParameter BasicType boolean modal StatementExpression ExplicitConstructorInvocation MemberReference modal ConstructorDeclaration Modifier public /**
     * The constructor.
     * 
     * @param modal true if the dialog is modal
     */ SystemInfoDialog FormalParameter BasicType boolean modal StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""dialog.title.system-information"" localize MemberReference ArgoDialog CLOSE_OPTION MemberReference modal StatementExpression MethodInvocation info Literal false setEditable StatementExpression MethodInvocation info ClassCreator ReferenceType Insets MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX setMargin StatementExpression MethodInvocation runGCButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MemberReference e runGCActionPerformed addActionListener StatementExpression MethodInvocation copyButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MemberReference e copyActionPerformed addActionListener StatementExpression MethodInvocation MemberReference copyButton Literal ""button.copy-to-clipboard"" nameButton StatementExpression MethodInvocation MemberReference runGCButton Literal ""button.run-gc"" nameButton StatementExpression MethodInvocation MemberReference copyButton Literal 0 addButton StatementExpression MethodInvocation MemberReference runGCButton Literal 0 addButton StatementExpression MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference info setContent StatementExpression MethodInvocation updateInfo StatementExpression MethodInvocation ClassCreator ReferenceType WindowAdapter MethodDeclaration Modifier public windowActivated FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation updateInfo addWindowListener StatementExpression MethodInvocation pack MethodDeclaration /**
     * Run garbage collector.
     * 
     * @param e the action
     */ Modifier private runGCActionPerformed FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference runGCButton StatementExpression MethodInvocation Runtime MethodInvocation gc getRuntime StatementExpression MethodInvocation updateInfo MethodDeclaration /**
     * Copy system info to clipboard.
     * 
     * @param e the action
     */ Modifier private copyActionPerformed FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference copyButton LocalVariableDeclaration ReferenceType String VariableDeclarator infoText MethodInvocation info getText LocalVariableDeclaration ReferenceType StringSelection VariableDeclarator contents ClassCreator ReferenceType StringSelection MemberReference infoText LocalVariableDeclaration ReferenceType Clipboard VariableDeclarator clipboard MethodInvocation MethodInvocation getSystemClipboard getToolkit StatementExpression MethodInvocation clipboard MemberReference contents MemberReference defaultClipboardOwner setContents MethodDeclaration updateInfo StatementExpression MethodInvocation info MethodInvocation getInfo setText MethodDeclaration /**
     * Collect system information.
     * @return string containing a variety of system info
     */ Modifier public static ReferenceType String getInfo LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation s Literal ""ArgoUML version       : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation ApplicationVersion getVersion Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Java Version          : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""java.version"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Java Vendor           : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""java.vendor"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Java Vendor URL       : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""java.vendor.url"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Java Home Directory   : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""java.home"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Java Classpath                : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""java.class.path"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Operation System      : "" append StatementExpression MethodInvocation s MethodInvocation System Literal ""os.name"" Literal """" getProperty append StatementExpression MethodInvocation s Literal "", Version "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""os.version"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Architecture          : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""os.arch"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""User Name             : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""user.name"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""User Home Directory   : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""user.home"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""Current Directory     : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation System Literal ""user.dir"" Literal """" getProperty Literal ""\n"" append StatementExpression MethodInvocation s Literal ""JVM Total Memory      : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation String MethodInvocation Runtime MethodInvocation totalMemory getRuntime valueOf Literal ""\n"" append StatementExpression MethodInvocation s Literal ""JVM Free Memory       : "" append StatementExpression MethodInvocation s BinaryOperation + MethodInvocation String MethodInvocation Runtime MethodInvocation freeMemory getRuntime valueOf Literal ""\n"" append ReturnStatement MethodInvocation s toString FieldDeclaration Modifier private static ReferenceType ClipboardOwner VariableDeclarator defaultClipboardOwner ClassCreator ReferenceType ClipboardObserver ClassDeclaration Modifier static ClipboardObserver MethodDeclaration Modifier public lostOwnership FormalParameter ReferenceType Clipboard clipboard FormalParameter ReferenceType Transferable contents ReferenceType ClipboardOwner ReferenceType ArgoDialog",0
975,975,,0
230,230,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionSetCompositeStateConcurrent FieldDeclaration Modifier private final static ReferenceType ActionSetCompositeStateConcurrent VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetCompositeStateConcurrent ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetCompositeStateConcurrent.
     */ ActionSetCompositeStateConcurrent StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isACompositeState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator compositeState MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference compositeState MethodInvocation ! Model MethodInvocation MemberReference compositeState isConcurrent getFacade setConcurrent getStateMachinesHelper End End MethodDeclaration /**
     * @return Returns the singleton.
     */ Modifier public static ReferenceType ActionSetCompositeStateConcurrent getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",0
858,858,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.awt.AlphaComposite Import java.awt.Color Import java.awt.GradientPaint Import java.awt.Graphics2D Import java.awt.Insets Import java.awt.Point Import java.awt.Rectangle Import java.awt.SystemColor Import java.awt.datatransfer.Transferable Import java.awt.datatransfer.UnsupportedFlavorException Import java.awt.dnd.Autoscroll Import java.awt.dnd.DnDConstants Import java.awt.dnd.DragGestureEvent Import java.awt.dnd.DragGestureListener Import java.awt.dnd.DragGestureRecognizer Import java.awt.dnd.DragSource Import java.awt.dnd.DragSourceDragEvent Import java.awt.dnd.DragSourceDropEvent Import java.awt.dnd.DragSourceEvent Import java.awt.dnd.DragSourceListener Import java.awt.dnd.DropTarget Import java.awt.dnd.DropTargetDragEvent Import java.awt.dnd.DropTargetDropEvent Import java.awt.dnd.DropTargetEvent Import java.awt.dnd.DropTargetListener Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.InputEvent Import java.awt.geom.AffineTransform Import java.awt.geom.Rectangle2D Import java.awt.image.BufferedImage Import java.io.IOException Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import javax.swing.Icon Import javax.swing.JLabel Import javax.swing.KeyStroke Import javax.swing.Timer Import javax.swing.event.TreeSelectionEvent Import javax.swing.event.TreeSelectionListener Import javax.swing.tree.DefaultMutableTreeNode Import javax.swing.tree.TreePath Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.ui.TransferableModelElements Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.Relocatable Import org.argouml.uml.diagram.ui.ActionSaveDiagramToClipboard ClassDeclaration Modifier public /**
 * This class extends the default Argo JTree with Drag and drop capabilities.<p>
 * See <a 
 * href=""http://java.sun.com/j2se/1.4.2/docs/guide/dragndrop/spec/dnd1.html"">
 * dnd1</a> and <a 
 * href=""http://java.sun.com/products/jfc/tsc/articles/dragndrop/index.html"">
 * dnd2</a><p>
 *
 * And it adds the 'copy to clipboard' capability for diagrams. See
 * <a href=""http://java.sun.com/j2se/1.3/docs/guide/swing/KeyBindChanges.html"">
 * KeyBindChanges</a><p>
 *
 * The ghosted images code originates from <p><a 
 * href=""http://www.javaworld.com/javaworld/javatips/jw-javatip114.html"">
 * javatip114</a><p>
 *
 * Interesting may also be the following: <p><a 
 * href=""http://forum.java.sun.com/thread.jspa?threadID=296255&start=30"">
 * thread</a>
 *
 * @author  alexb
 * @since Created on 16 April 2003
 */ DnDExplorerTree FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType DnDExplorerTree getLogger FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator DIAGRAM_TO_CLIPBOARD_ACTION Literal ""export Diagram as GIF"" FieldDeclaration /**
     * Where, in the drag image, the mouse was clicked.
     */ Modifier private ReferenceType Point VariableDeclarator clickOffset ClassCreator ReferenceType Point FieldDeclaration /**
     * The path being dragged.
     */ Modifier private ReferenceType TreePath VariableDeclarator sourcePath FieldDeclaration /**
     * The 'drag image'.
     */ Modifier private ReferenceType BufferedImage VariableDeclarator ghostImage FieldDeclaration /**
     * The selected node.
     */ Modifier private ReferenceType TreePath VariableDeclarator selectedTreePath FieldDeclaration /**
     * dnd source.
     */ Modifier private ReferenceType DragSource VariableDeclarator dragSource ConstructorDeclaration Modifier public /**
     * Creates a new instance of DnDArgoJTree.
     */ DnDExplorerTree StatementExpression SuperConstructorInvocation StatementExpression This MethodInvocation ClassCreator ReferenceType DnDTreeSelectionListener addTreeSelectionListener StatementExpression Assignment MemberReference dragSource MethodInvocation DragSource getDefaultDragSource = LocalVariableDeclaration ReferenceType DragGestureRecognizer VariableDeclarator dgr MethodInvocation dragSource This MemberReference DnDConstants ACTION_COPY_OR_MOVE This createDefaultDragGestureRecognizer StatementExpression MethodInvocation dgr BinaryOperation & MethodInvocation dgr getSourceActions MemberReference ~ InputEvent BUTTON3_MASK setSourceActions StatementExpression ClassCreator ReferenceType DropTarget This ClassCreator ReferenceType ArgoDropTargetListener LocalVariableDeclaration ReferenceType KeyStroke VariableDeclarator ctrlC MethodInvocation KeyStroke Literal ""control C"" getKeyStroke StatementExpression This MethodInvocation getInputMap MethodInvocation MemberReference ctrlC MemberReference DIAGRAM_TO_CLIPBOARD_ACTION put StatementExpression This MethodInvocation getActionMap MethodInvocation MemberReference DIAGRAM_TO_CLIPBOARD_ACTION ClassCreator ReferenceType ActionSaveDiagramToClipboard put MethodDeclaration /**
     * The drag gesture listener is notified of drag gestures by a recognizer.
     * The typical response is to initiate a drag by invoking
     * DragSource.startDrag().
     * <p>
     * 
     * TODO: find a way to show a different image when multiple elements are
     * dragged.
     * 
     * @param dragGestureEvent
     *            the DragGestureEvent describing the gesture that has just
     *            occurred
     * @see java.awt.dnd.DragGestureListener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)
     */ Modifier public dragGestureRecognized FormalParameter ReferenceType DragGestureEvent dragGestureEvent LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getModelTargets getInstance IfStatement BinaryOperation < MethodInvocation targets size Literal 1 BlockStatement ReturnStatement End StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Drag: start transferring "" MethodInvocation targets size Literal "" targets."" debug LocalVariableDeclaration ReferenceType TransferableModelElements VariableDeclarator tf ClassCreator ReferenceType TransferableModelElements MemberReference targets LocalVariableDeclaration ReferenceType Point VariableDeclarator ptDragOrigin MethodInvocation dragGestureEvent getDragOrigin LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference ptDragOrigin x MemberReference ptDragOrigin y getPathForLocation IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator raPath MethodInvocation MemberReference path getPathBounds StatementExpression MethodInvocation clickOffset BinaryOperation - MemberReference ptDragOrigin x MemberReference raPath x BinaryOperation - MemberReference ptDragOrigin y MemberReference raPath y setLocation LocalVariableDeclaration ReferenceType JLabel VariableDeclarator lbl Cast ReferenceType JLabel MethodInvocation MethodInvocation This MethodInvocation path getLastPathComponent Literal false MethodInvocation MemberReference path isExpanded MethodInvocation MethodInvocation MethodInvocation path getLastPathComponent isLeaf getModel Literal 0 Literal false getTreeCellRendererComponent getCellRenderer StatementExpression MethodInvocation lbl Cast BasicType int MethodInvocation raPath getWidth Cast BasicType int MethodInvocation raPath getHeight setSize StatementExpression Assignment MemberReference ghostImage ClassCreator ReferenceType BufferedImage Cast BasicType int MethodInvocation raPath getWidth Cast BasicType int MethodInvocation raPath getHeight MemberReference BufferedImage TYPE_INT_ARGB_PRE = LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator g2 MethodInvocation ghostImage createGraphics StatementExpression MethodInvocation g2 MethodInvocation AlphaComposite MemberReference AlphaComposite SRC Literal 0.5f getInstance setComposite StatementExpression MethodInvocation lbl MemberReference g2 paint LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation lbl getIcon LocalVariableDeclaration BasicType int VariableDeclarator nStartOfText TernaryExpression BinaryOperation == MemberReference icon Literal null Literal 0 BinaryOperation + MethodInvocation icon getIconWidth MethodInvocation lbl getIconTextGap StatementExpression MethodInvocation g2 MethodInvocation AlphaComposite MemberReference AlphaComposite DST_OVER Literal 0.5f getInstance setComposite StatementExpression MethodInvocation g2 ClassCreator ReferenceType GradientPaint MemberReference nStartOfText Literal 0 MemberReference SystemColor controlShadow MethodInvocation getWidth Literal 0 ClassCreator ReferenceType Color Literal 255 Literal 255 Literal 255 Literal 0 setPaint StatementExpression MethodInvocation g2 MemberReference nStartOfText Literal 0 MethodInvocation getWidth MethodInvocation ghostImage getHeight fillRect StatementExpression MethodInvocation g2 dispose StatementExpression Assignment MemberReference sourcePath MemberReference path = StatementExpression MethodInvocation dragGestureEvent Literal null MemberReference ghostImage ClassCreator ReferenceType Point Literal 5 Literal 5 MemberReference tf This startDrag MethodDeclaration Modifier private BasicType boolean isValidDrag FormalParameter ReferenceType TreePath destinationPath FormalParameter ReferenceType Transferable tf IfStatement BinaryOperation == MemberReference destinationPath Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: no destination found."" debug ReturnStatement Literal false End IfStatement MethodInvocation selectedTreePath MemberReference destinationPath isDescendant BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: move to descendent."" debug ReturnStatement Literal false End IfStatement MethodInvocation ! tf MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: flavor not supported."" debug ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation destinationPath getLastPathComponent IfStatement MethodInvocation ! Model MethodInvocation MemberReference dest isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: not a namespace."" debug ReturnStatement Literal false End IfStatement MethodInvocation Model MethodInvocation MemberReference dest isADataType getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: destination is a DataType."" debug ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Collection VariableDeclarator c TryStatement StatementExpression Assignment MemberReference c Cast ReferenceType Collection MethodInvocation tf MemberReference TransferableModelElements UML_COLLECTION_FLAVOR getTransferData = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation i next IfStatement MethodInvocation Model MethodInvocation MemberReference me MemberReference dest isValidNamespace getCoreHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Valid Drag: namespace "" MemberReference dest debug ReturnStatement Literal true End IfStatement BinaryOperation instanceof MemberReference me ReferenceType Relocatable BlockStatement LocalVariableDeclaration ReferenceType Relocatable VariableDeclarator d Cast ReferenceType Relocatable MemberReference me IfStatement MethodInvocation d MemberReference dest isRelocationAllowed BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Valid Drag: diagram "" MemberReference dest debug ReturnStatement Literal true End End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference me isAFeature getFacade MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade BlockStatement ReturnStatement Literal true End End CatchClause CatchClauseParameter UnsupportedFlavorException e StatementExpression MethodInvocation LOG MemberReference e debug CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG MemberReference e debug StatementExpression MethodInvocation LOG Literal ""No valid Drag: not a valid namespace."" debug ReturnStatement Literal false MethodDeclaration Modifier public dragDropEnd FormalParameter ReferenceType DragSourceDropEvent dragSourceDropEvent StatementExpression Assignment MemberReference sourcePath Literal null = StatementExpression Assignment MemberReference ghostImage Literal null = MethodDeclaration Modifier public dragEnter FormalParameter ReferenceType DragSourceDragEvent dragSourceDragEvent MethodDeclaration Modifier public dragExit FormalParameter ReferenceType DragSourceEvent dragSourceEvent MethodDeclaration Modifier public dragOver FormalParameter ReferenceType DragSourceDragEvent dragSourceDragEvent MethodDeclaration Modifier public dropActionChanged FormalParameter ReferenceType DragSourceDragEvent dragSourceDragEvent ClassDeclaration /**
     * records the selected path for later use during dnd.
     */ DnDTreeSelectionListener MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType TreeSelectionEvent treeSelectionEvent StatementExpression Assignment MemberReference selectedTreePath MethodInvocation treeSelectionEvent getNewLeadSelectionPath = ReferenceType TreeSelectionListener FieldDeclaration Modifier private final static BasicType int VariableDeclarator AUTOSCROLL_MARGIN Literal 12 MethodDeclaration Modifier public autoscroll FormalParameter ReferenceType Point pt LocalVariableDeclaration BasicType int VariableDeclarator nRow MethodInvocation MemberReference pt x MemberReference pt y getRowForLocation IfStatement BinaryOperation < MemberReference nRow Literal 0 BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator raOuter MethodInvocation getBounds StatementExpression Assignment MemberReference nRow TernaryExpression BinaryOperation <= BinaryOperation + MemberReference pt y MemberReference raOuter y MemberReference AUTOSCROLL_MARGIN TernaryExpression BinaryOperation <= MemberReference nRow Literal 0 Literal 0 BinaryOperation - MemberReference nRow Literal 1 TernaryExpression BinaryOperation < MemberReference nRow BinaryOperation - MethodInvocation getRowCount Literal 1 BinaryOperation + MemberReference nRow Literal 1 MemberReference nRow = StatementExpression MethodInvocation MemberReference nRow scrollRowToVisible MethodDeclaration Modifier public ReferenceType Insets getAutoscrollInsets LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator raOuter MethodInvocation getBounds LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator raInner MethodInvocation MethodInvocation getBounds getParent ReturnStatement ClassCreator ReferenceType Insets BinaryOperation + BinaryOperation - MemberReference raInner y MemberReference raOuter y MemberReference AUTOSCROLL_MARGIN BinaryOperation + BinaryOperation - MemberReference raInner x MemberReference raOuter x MemberReference AUTOSCROLL_MARGIN BinaryOperation + BinaryOperation + BinaryOperation - BinaryOperation - MemberReference raOuter height MemberReference raInner height MemberReference raInner y MemberReference raOuter y MemberReference AUTOSCROLL_MARGIN BinaryOperation + BinaryOperation + BinaryOperation - BinaryOperation - MemberReference raOuter width MemberReference raInner width MemberReference raInner x MemberReference raOuter x MemberReference AUTOSCROLL_MARGIN ClassDeclaration /**
     * The DropTargetListener.
     * Handles drop target events including the drop itself.
     */ ArgoDropTargetListener FieldDeclaration Modifier private ReferenceType TreePath VariableDeclarator lastPath FieldDeclaration Modifier private ReferenceType Rectangle2D VariableDeclarator cueLine ClassCreator ReferenceType Rectangle2D ReferenceType Float FieldDeclaration Modifier private ReferenceType Rectangle2D VariableDeclarator ghostRectangle ClassCreator ReferenceType Rectangle2D ReferenceType Float FieldDeclaration Modifier private ReferenceType Color VariableDeclarator cueLineColor FieldDeclaration Modifier private ReferenceType Point VariableDeclarator lastMouseLocation ClassCreator ReferenceType Point FieldDeclaration Modifier private ReferenceType Timer VariableDeclarator hoverTimer ConstructorDeclaration Modifier public /**
         * The constructor.
         */ ArgoDropTargetListener StatementExpression Assignment MemberReference cueLineColor ClassCreator ReferenceType Color MethodInvocation SystemColor.controlShadow getRed MethodInvocation SystemColor.controlShadow getGreen MethodInvocation SystemColor.controlShadow getBlue Literal 64 = StatementExpression Assignment MemberReference hoverTimer ClassCreator ReferenceType Timer Literal 1000 ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation MethodInvocation MemberReference lastPath equals Literal 0 getPathForRow BlockStatement ReturnStatement End IfStatement MethodInvocation MemberReference lastPath isExpanded BlockStatement StatementExpression MethodInvocation MemberReference lastPath collapsePath BlockStatement StatementExpression MethodInvocation MemberReference lastPath expandPath End = StatementExpression MethodInvocation hoverTimer Literal false setRepeats MethodDeclaration Modifier public dragEnter FormalParameter ReferenceType DropTargetDragEvent dropTargetDragEvent StatementExpression MethodInvocation LOG Literal ""dragEnter"" debug IfStatement MethodInvocation ! MemberReference dropTargetDragEvent isDragAcceptable BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag BlockStatement StatementExpression MethodInvocation dropTargetDragEvent MethodInvocation dropTargetDragEvent getDropAction acceptDrag End MethodDeclaration Modifier public dragExit FormalParameter ReferenceType DropTargetEvent dropTargetEvent StatementExpression MethodInvocation LOG Literal ""dragExit"" debug IfStatement MethodInvocation ! DragSource isDragImageSupported BlockStatement StatementExpression MethodInvocation MethodInvocation ghostRectangle getBounds repaint End MethodDeclaration /**
         * Called when a drag operation is ongoing, while the mouse pointer
         * is still over the operable part of the drop site
         * for the <code>DropTarget</code> registered with this listener.
         *
         * @see java.awt.dnd.DropTargetListener#dragOver(java.awt.dnd.DropTargetDragEvent)
         */ Modifier public dragOver FormalParameter ReferenceType DropTargetDragEvent dropTargetDragEvent LocalVariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation dropTargetDragEvent getLocation IfStatement MethodInvocation pt MemberReference lastMouseLocation equals BlockStatement ReturnStatement End StatementExpression MethodInvocation LOG Literal ""dragOver"" debug StatementExpression Assignment MemberReference lastMouseLocation MemberReference pt = LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator g2 Cast ReferenceType Graphics2D MethodInvocation getGraphics IfStatement BinaryOperation != MemberReference ghostImage Literal null BlockStatement IfStatement MethodInvocation ! DragSource isDragImageSupported BlockStatement StatementExpression MethodInvocation MethodInvocation ghostRectangle getBounds paintImmediately StatementExpression MethodInvocation ghostRectangle BinaryOperation - MemberReference pt x MemberReference clickOffset x BinaryOperation - MemberReference pt y MemberReference clickOffset y MethodInvocation ghostImage getWidth MethodInvocation ghostImage getHeight setRect StatementExpression MethodInvocation g2 MemberReference ghostImage MethodInvocation AffineTransform MethodInvocation ghostRectangle getX MethodInvocation ghostRectangle getY getTranslateInstance Literal null drawImage BlockStatement StatementExpression MethodInvocation MethodInvocation cueLine getBounds paintImmediately End End LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference pt x MemberReference pt y getPathForLocation IfStatement BinaryOperation == MemberReference path MemberReference lastPath BlockStatement StatementExpression Assignment MemberReference lastPath MemberReference path = StatementExpression MethodInvocation hoverTimer restart End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator raPath MethodInvocation MemberReference path getPathBounds IfStatement BinaryOperation != MemberReference raPath Literal null BlockStatement StatementExpression MethodInvocation cueLine Literal 0 BinaryOperation + MemberReference raPath y Cast BasicType int MethodInvocation raPath getHeight MethodInvocation getWidth Literal 2 setRect End StatementExpression MethodInvocation g2 MemberReference cueLineColor setColor StatementExpression MethodInvocation g2 MemberReference cueLine fill StatementExpression Assignment MemberReference ghostRectangle MethodInvocation ghostRectangle MemberReference cueLine createUnion = TryStatement IfStatement MethodInvocation ! dropTargetDragEvent MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement End CatchClause CatchClauseParameter NullPointerException e StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement End IfStatement MethodInvocation path MemberReference sourcePath equals BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement End IfStatement MethodInvocation selectedTreePath MemberReference path isDescendant BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation path getLastPathComponent IfStatement MethodInvocation ! Model MethodInvocation MemberReference dest isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: not a namespace."" debug StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement End IfStatement MethodInvocation Model MethodInvocation MemberReference dest isADataType getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""No valid Drag: destination is a DataType."" debug StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement End StatementExpression MethodInvocation dropTargetDragEvent MethodInvocation dropTargetDragEvent getDropAction acceptDrag MethodDeclaration /**
         * The drop: what is done when the mousebutton is released.
         *
         * @see java.awt.dnd.DropTargetListener#drop(java.awt.dnd.DropTargetDropEvent)
         */ Modifier public drop FormalParameter ReferenceType DropTargetDropEvent dropTargetDropEvent StatementExpression MethodInvocation LOG Literal ""dropping ... "" debug StatementExpression MethodInvocation hoverTimer stop StatementExpression MethodInvocation MethodInvocation ghostRectangle getBounds repaint IfStatement MethodInvocation ! MemberReference dropTargetDropEvent isDropAcceptable BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement End TryStatement LocalVariableDeclaration ReferenceType Transferable VariableDeclarator tr MethodInvocation dropTargetDropEvent getTransferable LocalVariableDeclaration ReferenceType Point VariableDeclarator loc MethodInvocation dropTargetDropEvent getLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator destinationPath MethodInvocation MemberReference loc x MemberReference loc y getPathForLocation StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Drop location: x="" MemberReference loc x Literal "" y="" MemberReference loc y debug IfStatement MethodInvocation ! MemberReference destinationPath MemberReference tr isValidDrag BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement End LocalVariableDeclaration ReferenceType Collection VariableDeclarator modelElements Cast ReferenceType Collection MethodInvocation tr MemberReference TransferableModelElements UML_COLLECTION_FLAVOR getTransferData StatementExpression MethodInvocation LOG BinaryOperation + Literal ""transfer data = "" MemberReference modelElements debug LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation destinationPath getLastPathComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator src Cast ReferenceType DefaultMutableTreeNode MethodInvocation sourcePath getLastPathComponent LocalVariableDeclaration BasicType int VariableDeclarator action MethodInvocation dropTargetDropEvent getDropAction LocalVariableDeclaration BasicType boolean VariableDeclarator copyAction BinaryOperation == MemberReference action MemberReference DnDConstants ACTION_COPY LocalVariableDeclaration BasicType boolean VariableDeclarator moveAction BinaryOperation == MemberReference action MemberReference DnDConstants ACTION_MOVE IfStatement BinaryOperation || MemberReference moveAction MemberReference copyAction BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement End LocalVariableDeclaration ReferenceType Collection VariableDeclarator newTargets ClassCreator ReferenceType ArrayList TryStatement StatementExpression MethodInvocation dropTargetDropEvent MemberReference action acceptDrop LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation modelElements iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation i next StatementExpression MethodInvocation LOG BinaryOperation + TernaryExpression MemberReference moveAction Literal ""move "" Literal ""copy "" MemberReference me debug IfStatement MethodInvocation Model MethodInvocation MemberReference me MemberReference dest isValidNamespace getCoreHelper BlockStatement IfStatement MemberReference moveAction BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference me MemberReference dest setNamespace getCoreHelper StatementExpression MethodInvocation newTargets MemberReference me add End IfStatement MemberReference copyAction BlockStatement TryStatement StatementExpression MethodInvocation newTargets MethodInvocation Model MethodInvocation MemberReference me MemberReference dest copy getCopyHelper add CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG Literal ""Exception"" MemberReference e error End End IfStatement BinaryOperation instanceof MemberReference me ReferenceType Relocatable BlockStatement LocalVariableDeclaration ReferenceType Relocatable VariableDeclarator d Cast ReferenceType Relocatable MemberReference me IfStatement MethodInvocation d MemberReference dest isRelocationAllowed BlockStatement IfStatement MethodInvocation d MemberReference dest relocate BlockStatement StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation MemberReference src modelElementChanged getInstance StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation MemberReference dest modelElementChanged getInstance StatementExpression MethodInvocation MemberReference destinationPath makeVisible StatementExpression MethodInvocation MemberReference destinationPath expandPath StatementExpression MethodInvocation newTargets MemberReference me add End End End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference me isAFeature getFacade MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade BlockStatement IfStatement MemberReference moveAction BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference me getOwner getFacade MemberReference me removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference dest MemberReference me addFeature getCoreHelper StatementExpression MethodInvocation newTargets MemberReference me add End IfStatement MemberReference copyAction BlockStatement StatementExpression MethodInvocation newTargets MethodInvocation Model MethodInvocation MemberReference me MemberReference dest copy getCopyHelper add End End End StatementExpression MethodInvocation dropTargetDropEvent MethodInvocation Literal true dropComplete getDropTargetContext StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newTargets setTargets getInstance CatchClause CatchClauseParameter java.lang.IllegalStateException ils StatementExpression MethodInvocation LOG Literal ""drop IllegalStateException"" debug StatementExpression MethodInvocation dropTargetDropEvent rejectDrop StatementExpression MethodInvocation dropTargetDropEvent MethodInvocation Literal true dropComplete getDropTargetContext CatchClause CatchClauseParameter IOException io StatementExpression MethodInvocation LOG Literal ""drop IOException"" debug StatementExpression MethodInvocation dropTargetDropEvent rejectDrop CatchClause CatchClauseParameter UnsupportedFlavorException ufe StatementExpression MethodInvocation LOG Literal ""drop UnsupportedFlavorException"" debug StatementExpression MethodInvocation dropTargetDropEvent rejectDrop MethodDeclaration Modifier public dropActionChanged FormalParameter ReferenceType DropTargetDragEvent dropTargetDragEvent IfStatement MethodInvocation ! MemberReference dropTargetDragEvent isDragAcceptable BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag BlockStatement StatementExpression MethodInvocation dropTargetDragEvent MethodInvocation dropTargetDragEvent getDropAction acceptDrag End MethodDeclaration /**
         * @param dropTargetEvent the droptargetevent
         * @return true if the drag is acceptable
         */ Modifier public BasicType boolean isDragAcceptable FormalParameter ReferenceType DropTargetDragEvent dropTargetEvent IfStatement BinaryOperation == BinaryOperation & MethodInvocation dropTargetEvent getDropAction MemberReference DnDConstants ACTION_COPY_OR_MOVE Literal 0 BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation dropTargetEvent getLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference pt x MemberReference pt y getPathForLocation IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation path MemberReference sourcePath equals BlockStatement ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration /**
         * @param dropTargetDropEvent the droptargetdropevent
         * @return true if the drop is acceptable
         */ Modifier public BasicType boolean isDropAcceptable FormalParameter ReferenceType DropTargetDropEvent dropTargetDropEvent IfStatement BinaryOperation == BinaryOperation & MethodInvocation dropTargetDropEvent getDropAction MemberReference DnDConstants ACTION_COPY_OR_MOVE Literal 0 BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation dropTargetDropEvent getLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference pt x MemberReference pt y getPathForLocation IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation path MemberReference sourcePath equals BlockStatement ReturnStatement Literal false End ReturnStatement Literal true ReferenceType DropTargetListener FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6207230394860016617L ReferenceType ExplorerTree ReferenceType DragGestureListener ReferenceType DragSourceListener ReferenceType Autoscroll",0
1153,1153,,1
1594,1594,,0
720,720,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Transition->Effect.
 *
 * @author MarkusK
 */ GoTransitiontoEffect MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.transition.effect"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator effect MethodInvocation Model MethodInvocation MemberReference parent getEffect getFacade IfStatement BinaryOperation != MemberReference effect Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation col MemberReference effect add ReturnStatement MemberReference col End End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1192,1192,,0
574,574,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.Collection Import java.util.Iterator Import org.argouml.model.CommonBehaviorFactory Import org.argouml.model.Model Import org.omg.uml.behavioralelements.activitygraphs.ActionState Import org.omg.uml.behavioralelements.collaborations.CollaborationInstanceSet Import org.omg.uml.behavioralelements.collaborations.InteractionInstanceSet Import org.omg.uml.behavioralelements.collaborations.Message Import org.omg.uml.behavioralelements.commonbehavior.Action Import org.omg.uml.behavioralelements.commonbehavior.ActionSequence Import org.omg.uml.behavioralelements.commonbehavior.Argument Import org.omg.uml.behavioralelements.commonbehavior.AttributeLink Import org.omg.uml.behavioralelements.commonbehavior.CallAction Import org.omg.uml.behavioralelements.commonbehavior.CommonBehaviorPackage Import org.omg.uml.behavioralelements.commonbehavior.ComponentInstance Import org.omg.uml.behavioralelements.commonbehavior.CreateAction Import org.omg.uml.behavioralelements.commonbehavior.DataValue Import org.omg.uml.behavioralelements.commonbehavior.DestroyAction Import org.omg.uml.behavioralelements.commonbehavior.Instance Import org.omg.uml.behavioralelements.commonbehavior.Link Import org.omg.uml.behavioralelements.commonbehavior.LinkEnd Import org.omg.uml.behavioralelements.commonbehavior.LinkObject Import org.omg.uml.behavioralelements.commonbehavior.NodeInstance Import org.omg.uml.behavioralelements.commonbehavior.Reception Import org.omg.uml.behavioralelements.commonbehavior.ReturnAction Import org.omg.uml.behavioralelements.commonbehavior.SendAction Import org.omg.uml.behavioralelements.commonbehavior.Signal Import org.omg.uml.behavioralelements.commonbehavior.Stimulus Import org.omg.uml.behavioralelements.commonbehavior.SubsystemInstance Import org.omg.uml.behavioralelements.commonbehavior.TerminateAction Import org.omg.uml.behavioralelements.commonbehavior.UmlException Import org.omg.uml.behavioralelements.commonbehavior.UninterpretedAction Import org.omg.uml.behavioralelements.statemachines.SignalEvent Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Operation ClassDeclaration /**
 * Factory to create UML classes for the UML BehaviorialElements::CommonBehavior
 * package.<p>
 * 
 * @since ARGO0.19.5
 * @author Ludovic Ma&icirc;tre
 * @author Tom Morris
 * Derived from NSUML implementation by: 
 * @author Thierry Lach
 */ CommonBehaviorFactoryMDRImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl FieldDeclaration Modifier private ReferenceType CommonBehaviorPackage VariableDeclarator cbPackage ConstructorDeclaration /**
     * Don't allow instantiation.
     *
     * @param implementation
     *            To get other helpers and factories.
     */ CommonBehaviorFactoryMDRImpl FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = StatementExpression Assignment MemberReference cbPackage MethodInvocation modelImpl MethodInvocation getCommonBehavior getUmlPackage = MethodDeclaration Modifier public ReferenceType ActionSequence createActionSequence LocalVariableDeclaration ReferenceType ActionSequence VariableDeclarator myActionSequence MethodInvocation cbPackage MethodInvocation createActionSequence getActionSequence StatementExpression SuperMethodInvocation MemberReference myActionSequence initialize ReturnStatement MemberReference myActionSequence MethodDeclaration Modifier public ReferenceType Argument createArgument LocalVariableDeclaration ReferenceType Argument VariableDeclarator myArgument MethodInvocation cbPackage MethodInvocation createArgument getArgument StatementExpression SuperMethodInvocation MemberReference myArgument initialize ReturnStatement MemberReference myArgument MethodDeclaration Modifier public ReferenceType AttributeLink createAttributeLink LocalVariableDeclaration ReferenceType AttributeLink VariableDeclarator myAttributeLink MethodInvocation cbPackage MethodInvocation createAttributeLink getAttributeLink StatementExpression SuperMethodInvocation MemberReference myAttributeLink initialize ReturnStatement MemberReference myAttributeLink MethodDeclaration Modifier public ReferenceType CallAction createCallAction LocalVariableDeclaration ReferenceType CallAction VariableDeclarator myCallAction MethodInvocation cbPackage MethodInvocation createCallAction getCallAction StatementExpression SuperMethodInvocation MemberReference myCallAction initialize ReturnStatement MemberReference myCallAction MethodDeclaration Modifier public ReferenceType ComponentInstance createComponentInstance LocalVariableDeclaration ReferenceType ComponentInstance VariableDeclarator myComponentInstance MethodInvocation cbPackage MethodInvocation createComponentInstance getComponentInstance StatementExpression SuperMethodInvocation MemberReference myComponentInstance initialize ReturnStatement MemberReference myComponentInstance MethodDeclaration Modifier public ReferenceType CreateAction createCreateAction LocalVariableDeclaration ReferenceType CreateAction VariableDeclarator myCreateAction MethodInvocation cbPackage MethodInvocation createCreateAction getCreateAction StatementExpression SuperMethodInvocation MemberReference myCreateAction initialize ReturnStatement MemberReference myCreateAction MethodDeclaration Modifier public ReferenceType DataValue createDataValue LocalVariableDeclaration ReferenceType DataValue VariableDeclarator myDataValue MethodInvocation cbPackage MethodInvocation createDataValue getDataValue StatementExpression SuperMethodInvocation MemberReference myDataValue initialize ReturnStatement MemberReference myDataValue MethodDeclaration Modifier public ReferenceType DestroyAction createDestroyAction LocalVariableDeclaration ReferenceType DestroyAction VariableDeclarator myDestroyAction MethodInvocation cbPackage MethodInvocation createDestroyAction getDestroyAction StatementExpression SuperMethodInvocation MemberReference myDestroyAction initialize ReturnStatement MemberReference myDestroyAction MethodDeclaration Modifier public ReferenceType UmlException createException LocalVariableDeclaration ReferenceType UmlException VariableDeclarator myUmlException MethodInvocation cbPackage MethodInvocation createUmlException getUmlException StatementExpression SuperMethodInvocation MemberReference myUmlException initialize ReturnStatement MemberReference myUmlException MethodDeclaration Modifier public ReferenceType Link createLink LocalVariableDeclaration ReferenceType Link VariableDeclarator myLink MethodInvocation cbPackage MethodInvocation createLink getLink StatementExpression SuperMethodInvocation MemberReference myLink initialize ReturnStatement MemberReference myLink MethodDeclaration Modifier public ReferenceType LinkEnd createLinkEnd LocalVariableDeclaration ReferenceType LinkEnd VariableDeclarator myLinkEnd MethodInvocation cbPackage MethodInvocation createLinkEnd getLinkEnd StatementExpression SuperMethodInvocation MemberReference myLinkEnd initialize ReturnStatement MemberReference myLinkEnd MethodDeclaration Modifier public ReferenceType LinkObject createLinkObject LocalVariableDeclaration ReferenceType LinkObject VariableDeclarator myLinkObject MethodInvocation cbPackage MethodInvocation createLinkObject getLinkObject StatementExpression SuperMethodInvocation MemberReference myLinkObject initialize ReturnStatement MemberReference myLinkObject MethodDeclaration Modifier public ReferenceType NodeInstance createNodeInstance LocalVariableDeclaration ReferenceType NodeInstance VariableDeclarator myNodeInstance MethodInvocation cbPackage MethodInvocation createNodeInstance getNodeInstance StatementExpression SuperMethodInvocation MemberReference myNodeInstance initialize ReturnStatement MemberReference myNodeInstance MethodDeclaration Modifier public ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object createObject LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object VariableDeclarator myObject MethodInvocation cbPackage MethodInvocation createObject getObject StatementExpression SuperMethodInvocation MemberReference myObject initialize ReturnStatement MemberReference myObject MethodDeclaration Modifier public ReferenceType Reception createReception LocalVariableDeclaration ReferenceType Reception VariableDeclarator myReception MethodInvocation cbPackage MethodInvocation createReception getReception StatementExpression SuperMethodInvocation MemberReference myReception initialize ReturnStatement MemberReference myReception MethodDeclaration Modifier public ReferenceType ReturnAction createReturnAction LocalVariableDeclaration ReferenceType ReturnAction VariableDeclarator myReturnAction MethodInvocation cbPackage MethodInvocation createReturnAction getReturnAction StatementExpression SuperMethodInvocation MemberReference myReturnAction initialize ReturnStatement MemberReference myReturnAction MethodDeclaration Modifier public ReferenceType SendAction createSendAction LocalVariableDeclaration ReferenceType SendAction VariableDeclarator mySendAction MethodInvocation cbPackage MethodInvocation createSendAction getSendAction StatementExpression SuperMethodInvocation MemberReference mySendAction initialize ReturnStatement MemberReference mySendAction MethodDeclaration Modifier public ReferenceType Signal createSignal LocalVariableDeclaration ReferenceType Signal VariableDeclarator mySignal MethodInvocation cbPackage MethodInvocation createSignal getSignal StatementExpression SuperMethodInvocation MemberReference mySignal initialize ReturnStatement MemberReference mySignal MethodDeclaration Modifier public ReferenceType Stimulus createStimulus LocalVariableDeclaration ReferenceType Stimulus VariableDeclarator myStimulus MethodInvocation cbPackage MethodInvocation createStimulus getStimulus StatementExpression SuperMethodInvocation MemberReference myStimulus initialize ReturnStatement MemberReference myStimulus MethodDeclaration Modifier public ReferenceType SubsystemInstance createSubsystemInstance LocalVariableDeclaration ReferenceType SubsystemInstance VariableDeclarator obj MethodInvocation cbPackage MethodInvocation createSubsystemInstance getSubsystemInstance StatementExpression SuperMethodInvocation MemberReference obj initialize ReturnStatement MemberReference obj MethodDeclaration Modifier public ReferenceType TerminateAction createTerminateAction LocalVariableDeclaration ReferenceType TerminateAction VariableDeclarator myTerminateAction MethodInvocation cbPackage MethodInvocation createTerminateAction getTerminateAction StatementExpression SuperMethodInvocation MemberReference myTerminateAction initialize ReturnStatement MemberReference myTerminateAction MethodDeclaration Modifier public ReferenceType UninterpretedAction createUninterpretedAction LocalVariableDeclaration ReferenceType UninterpretedAction VariableDeclarator myUninterpretedAction MethodInvocation cbPackage MethodInvocation createUninterpretedAction getUninterpretedAction StatementExpression SuperMethodInvocation MemberReference myUninterpretedAction initialize ReturnStatement MemberReference myUninterpretedAction MethodDeclaration Modifier public ReferenceType CallAction buildCallAction FormalParameter ReferenceType Object oper FormalParameter ReferenceType String name IfStatement BinaryOperation instanceof MemberReference oper ReferenceType Operation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""There should be an operation"" Literal "" with a callaction."" End LocalVariableDeclaration ReferenceType CallAction VariableDeclarator action MethodInvocation createCallAction StatementExpression MethodInvocation action MemberReference name setName StatementExpression MethodInvocation action Cast ReferenceType Operation MemberReference oper setOperation ReturnStatement MemberReference action MethodDeclaration Modifier public ReferenceType UninterpretedAction buildUninterpretedAction FormalParameter ReferenceType Object actionState LocalVariableDeclaration ReferenceType UninterpretedAction VariableDeclarator action MethodInvocation createUninterpretedAction IfStatement BinaryOperation instanceof MemberReference actionState ReferenceType ActionState BlockStatement StatementExpression Cast ReferenceType ActionState MemberReference actionState End ReturnStatement MemberReference action MethodDeclaration Modifier public ReferenceType Link buildLink FormalParameter ReferenceType Object fromInstance FormalParameter ReferenceType Object toInstance LocalVariableDeclaration ReferenceType Link VariableDeclarator link MethodInvocation createLink LocalVariableDeclaration ReferenceType LinkEnd VariableDeclarator le0 MethodInvocation createLinkEnd StatementExpression MethodInvocation le0 Cast ReferenceType Instance MemberReference fromInstance setInstance LocalVariableDeclaration ReferenceType LinkEnd VariableDeclarator le1 MethodInvocation createLinkEnd StatementExpression MethodInvocation le1 Cast ReferenceType Instance MemberReference toInstance setInstance StatementExpression MethodInvocation link MethodInvocation MemberReference le0 add getConnection StatementExpression MethodInvocation link MethodInvocation MemberReference le1 add getConnection ReturnStatement MemberReference link MethodDeclaration Modifier public ReferenceType Action buildAction FormalParameter ReferenceType Object message LocalVariableDeclaration ReferenceType Action VariableDeclarator action MethodInvocation createCallAction StatementExpression MethodInvocation action Literal ""action"" setName StatementExpression Cast ReferenceType Message MemberReference message LocalVariableDeclaration ReferenceType Object VariableDeclarator interaction MethodInvocation modelImpl MethodInvocation MemberReference message getInteraction getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference interaction Literal null BinaryOperation != MethodInvocation modelImpl MethodInvocation MemberReference interaction getContext getFacade Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference action MethodInvocation modelImpl MethodInvocation MemberReference interaction getContext getFacade setNamespace getCoreHelper BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""In buildaction: message does not "" Literal ""have an interaction or the "" Literal ""interaction does not have "" Literal ""a context"" End ReturnStatement MemberReference action MethodDeclaration Modifier public ReferenceType Signal buildSignal FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType BehavioralFeature BlockStatement LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal MethodInvocation MemberReference element buildSignalInt StatementExpression MethodInvocation cbPackage MethodInvocation Cast ReferenceType BehavioralFeature MemberReference element MemberReference signal add getAContextRaisedSignal ReturnStatement MemberReference signal IfStatement BinaryOperation instanceof MemberReference element ReferenceType Reception BlockStatement LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal MethodInvocation MemberReference element buildSignalInt StatementExpression Cast ReferenceType Reception MemberReference element ReturnStatement MemberReference signal IfStatement BinaryOperation instanceof MemberReference element ReferenceType SendAction BlockStatement LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal MethodInvocation MemberReference element buildSignalInt StatementExpression Cast ReferenceType SendAction MemberReference element ReturnStatement MemberReference signal IfStatement BinaryOperation instanceof MemberReference element ReferenceType SignalEvent BlockStatement LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal MethodInvocation MemberReference element buildSignalInt StatementExpression Cast ReferenceType SignalEvent MemberReference element ReturnStatement MemberReference signal End End End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodDeclaration /**
     * Create a new Signal in the same namespace as the target.
     * @param element target element
     * @return newly created Signal
     */ Modifier private ReferenceType Signal buildSignalInt FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal Cast ReferenceType Signal MethodInvocation createSignal LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType ModelElement MemberReference element StatementExpression MethodInvocation signal MemberReference ns setNamespace ReturnStatement MemberReference signal MethodDeclaration Modifier public ReferenceType Stimulus buildStimulus FormalParameter ReferenceType Object link IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference link ReferenceType Link BinaryOperation != MethodInvocation modelImpl MethodInvocation MemberReference link getSource getCoreHelper Literal null BinaryOperation != MethodInvocation modelImpl MethodInvocation MemberReference link getDestination getCoreHelper Literal null BlockStatement LocalVariableDeclaration ReferenceType Stimulus VariableDeclarator stimulus MethodInvocation createStimulus LocalVariableDeclaration ReferenceType Object VariableDeclarator sender MethodInvocation modelImpl MethodInvocation MemberReference link getSource getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator receiver MethodInvocation modelImpl MethodInvocation MemberReference link getDestination getCoreHelper StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference stimulus MemberReference receiver setReceiver getCommonBehaviorHelper StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference stimulus MemberReference sender setSender getCollaborationsHelper StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference stimulus MemberReference link setCommunicationLink getCommonBehaviorHelper ReturnStatement MemberReference stimulus End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Argument is not a link or "" Literal ""does not have "" Literal ""a source or "" Literal ""destination instance"" MethodDeclaration Modifier public ReferenceType Reception buildReception FormalParameter ReferenceType Object aClassifier LocalVariableDeclaration ReferenceType Reception VariableDeclarator reception MethodInvocation createReception IfStatement BinaryOperation instanceof MemberReference aClassifier ReferenceType Classifier BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference reception MemberReference aClassifier setOwner getCoreHelper End ReturnStatement MemberReference reception MethodDeclaration /**
     * @param elem
     *            the Action to be deleted
     */ deleteAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation cbPackage MethodInvocation Cast ReferenceType Action MemberReference elem getStimulus getADispatchActionStimulus deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAActionMessage MethodInvocation Cast ReferenceType Action MemberReference elem getMessage getUmlPackage deleteCollection getUmlHelper MethodDeclaration /**
     * @param elem
     *            the ActionSequence to be deleted
     */ deleteActionSequence FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ActionSequence BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteArgument FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Argument BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteAttributeLink FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AttributeLink BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteCallAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType CallAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteComponentInstance FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ComponentInstance BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteCreateAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType CreateAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteDataValue FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType DataValue BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteDestroyAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType DestroyAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteException FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UmlException BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * When an instance is deleted, delete any LinkEnd, AttributLink
     * that depends on it, as well as CollaborationInstanceSets where
     * this is the last participatingInstance
     *
     * @param elem
     *            the element to be deleted
     */ deleteInstance FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Instance BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType Instance MemberReference elem deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation cbPackage MethodInvocation Cast ReferenceType Instance MemberReference elem getAttributeLink getAAttributeLinkValue deleteCollection getUmlHelper ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getACollaborationInstanceSetParticipatingInstance MethodInvocation Cast ReferenceType Instance MemberReference elem getCollaborationInstanceSet MethodInvocation iterator getUmlPackage MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType CollaborationInstanceSet VariableDeclarator cis Cast ReferenceType CollaborationInstanceSet MethodInvocation it next LocalVariableDeclaration ReferenceType Collection VariableDeclarator instances MethodInvocation cis getParticipatingInstance IfStatement BinaryOperation && BinaryOperation == MethodInvocation instances size Literal 1 MethodInvocation instances MemberReference elem contains BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation it next delete getUmlFactory End End StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation cbPackage MethodInvocation Cast ReferenceType Instance MemberReference elem getStimulus getAStimulusSender deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation cbPackage MethodInvocation Cast ReferenceType Instance MemberReference elem getStimulus getAReceiverStimulus deleteCollection getUmlHelper MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteLink FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Link BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * when a linkend is deleted, delete its Links.
     *
     * @param elem
     *            the element to be deleted
     */ deleteLinkEnd FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType LinkEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End LocalVariableDeclaration ReferenceType Link VariableDeclarator link Cast ReferenceType LinkEnd MemberReference elem IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference link Literal null BinaryOperation != MethodInvocation link getConnection Literal null BinaryOperation == MethodInvocation link MethodInvocation size getConnection Literal 2 BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference link delete getUmlFactory End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteLinkObject FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType LinkObject BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteNodeInstance FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType NodeInstance BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteObject FormalParameter ReferenceType Object elem IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteReception FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Reception BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteReturnAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ReturnAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteSendAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SendAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteSignal FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Signal BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation cbPackage MethodInvocation Cast ReferenceType Signal MemberReference elem getSendAction getASignalSendAction deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getASignalOccurrence MethodInvocation Cast ReferenceType Signal MemberReference elem getOccurrence getUmlPackage deleteCollection getUmlHelper MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteStimulus FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Stimulus BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAInteractionInstanceSetParticipatingStimulus MethodInvocation Cast ReferenceType Stimulus MemberReference elem getInteractionInstanceSet MethodInvocation iterator getUmlPackage MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType InteractionInstanceSet VariableDeclarator iis Cast ReferenceType InteractionInstanceSet MethodInvocation it next LocalVariableDeclaration ReferenceType Collection VariableDeclarator instances MethodInvocation iis getParticipatingStimulus IfStatement BinaryOperation && BinaryOperation == MethodInvocation instances size Literal 1 MethodInvocation instances MemberReference elem contains BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation it next delete getUmlFactory End End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteSubsystemInstance FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SubsystemInstance BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteTerminateAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType TerminateAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End MethodDeclaration /**
     * @param elem
     *            the element to be deleted
     */ deleteUninterpretedAction FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UninterpretedAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""elem: "" MemberReference elem End ReferenceType AbstractUmlModelFactoryMDR ReferenceType CommonBehaviorFactory",0
959,959,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.ActionNavigateNamespace Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * The properties panel for an AssociationClass.
 * It is basically a PropPanelClass but with the proper Association Ends
 * for an Association Class.
 *
 *
 * @author pepargouml
 */ PropPanelAssociationClass FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7620821534700927917L FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator attributeScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator operationScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator assocEndScroll FieldDeclaration Modifier private static ReferenceType UMLClassAttributeListModel VariableDeclarator attributeListModel ClassCreator ReferenceType UMLClassAttributeListModel FieldDeclaration Modifier private static ReferenceType UMLClassOperationListModel VariableDeclarator operationListModel ClassCreator ReferenceType UMLClassOperationListModel ConstructorDeclaration Modifier public /**
     * Construct a property panel for AssociationClass elements.
     */ PropPanelAssociationClass StatementExpression SuperConstructorInvocation Literal ""label.association-class"" MethodInvocation Literal ""AssociationClass"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType UMLClassActiveCheckBox add getModifiersPanel StatementExpression MethodInvocation MethodInvocation getModifiersPanel add StatementExpression MethodInvocation MethodInvocation getNamespaceVisibilityPanel add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.client-dependencies"" localize MethodInvocation getClientDependencyScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.supplier-dependencies"" localize MethodInvocation getSupplierDependencyScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.generalizations"" localize MethodInvocation getGeneralizationScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.specializations"" localize MethodInvocation getSpecializationScroll addField LocalVariableDeclaration ReferenceType JList VariableDeclarator assocEndList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationConnectionListModel StatementExpression Assignment MemberReference assocEndScroll ClassCreator ReferenceType JScrollPane MemberReference assocEndList = StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.connections"" localize MemberReference assocEndScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.attributes"" localize MethodInvocation getAttributeScroll addField LocalVariableDeclaration ReferenceType JList VariableDeclarator connections ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLClassifierAssociationEndListModel LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator connectionsScroll ClassCreator ReferenceType JScrollPane MemberReference connections StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.association-ends"" localize MemberReference connectionsScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.operations"" localize MethodInvocation getOperationScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.owned-elements"" localize MethodInvocation getOwnedElementsScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateNamespace addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddAttribute addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddOperation addAction StatementExpression MethodInvocation MethodInvocation getActionNewReception addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewInnerClass addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewClass addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration /**
     * Returns the operationScroll.
     *
     * @return JScrollPane
     */ Modifier public Annotation Override ReferenceType JScrollPane getOperationScroll IfStatement BinaryOperation == MemberReference operationScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType UMLLinkedList MemberReference operationListModel StatementExpression Assignment MemberReference operationScroll ClassCreator ReferenceType JScrollPane MemberReference list = End ReturnStatement MemberReference operationScroll MethodDeclaration /**
     * Returns the attributeScroll.
     *
     * @return JScrollPane
     */ Modifier public Annotation Override ReferenceType JScrollPane getAttributeScroll IfStatement BinaryOperation == MemberReference attributeScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType UMLLinkedList MemberReference attributeListModel StatementExpression Assignment MemberReference attributeScroll ClassCreator ReferenceType JScrollPane MemberReference list = End ReturnStatement MemberReference attributeScroll ReferenceType PropPanelClassifier",0
1085,1085,,1
343,343,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Component Import java.awt.Dimension Import java.awt.Font Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.awt.event.MouseListener Import java.util.ArrayList Import java.util.Arrays Import java.util.Iterator Import java.util.List Import javax.swing.Icon Import javax.swing.JPanel Import javax.swing.JTabbedPane Import javax.swing.event.ChangeEvent Import javax.swing.event.ChangeListener Import javax.swing.event.EventListenerList Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.swingext.LeftArrowIcon Import org.argouml.swingext.UpArrowIcon Import org.argouml.ui.ProjectBrowser.Position Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.PropPanel Import org.argouml.uml.ui.TabConstraints Import org.argouml.uml.ui.TabDocumentation Import org.argouml.uml.ui.TabModelTarget Import org.argouml.uml.ui.TabProps Import org.argouml.uml.ui.TabSrc Import org.argouml.uml.ui.TabStereotype Import org.argouml.uml.ui.TabStyle Import org.argouml.uml.ui.TabTaggedValues Import org.tigris.swidgets.Orientable Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public /**
 * The lower-right pane of the main ArgoUML window, which shows
 * the details of a selected model element. <p>
 *
 * This panel has several tabs that show details of the selected
 * ToDoItem, or the selected model element in the Explorer (NavigatorPane),
 * or the MultiEditorPane. <p>
 *
 * There are requests to have the cursor automatically
 * be set to the primary field.
 */ DetailsPane FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType DetailsPane getLogger FieldDeclaration /**
     * The top level pane, which is a tabbed pane.
     */ Modifier private ReferenceType JTabbedPane VariableDeclarator topLevelTabbedPane ClassCreator ReferenceType JTabbedPane FieldDeclaration /**
     * The current target.
     */ Modifier private ReferenceType Object VariableDeclarator currentTarget FieldDeclaration /**
     * The list of all the tabs, which are JPanels, in the JTabbedPane tabs.
     */ Modifier private ReferenceType List TypeArgument ReferenceType JPanel VariableDeclarator tabPanelList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JPanel FieldDeclaration /**
     * index of the selected tab in the JTabbedPane.
     */ Modifier private BasicType int VariableDeclarator lastNonNullTab Literal - 1 FieldDeclaration /**
     * The list with targetlisteners, this are the property panels
     * managed by TabProps It should only contain one listener at a
     * time.
     */ Modifier private ReferenceType EventListenerList VariableDeclarator listenerList ClassCreator ReferenceType EventListenerList FieldDeclaration Modifier private ReferenceType Orientation VariableDeclarator orientation MethodDeclaration /**
     * Adds a listener.
     * @param listener the listener to add
     */ Modifier private addTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener add MethodDeclaration /**
     * Removes a target listener.
     * @param listener the listener to remove
     */ Modifier private removeTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener remove ConstructorDeclaration Modifier public /**
     * Gets all of the tabPanels from the ConfigLoader, then
     * adds them to the JTabbedPane.<p>
     *
     * Sets the target to null.<p>
     *
     * Registers listeners.<p>
     *
     * @param compassPoint the position for which to build the pane
     * @param theOrientation is the orientation.
     */ DetailsPane FormalParameter ReferenceType String compassPoint FormalParameter ReferenceType Orientation theOrientation StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""making DetailsPane("" MemberReference compassPoint Literal "")"" info StatementExpression Assignment MemberReference orientation MemberReference theOrientation = StatementExpression MethodInvocation MemberReference compassPoint MemberReference theOrientation loadTabs StatementExpression MethodInvocation MemberReference orientation setOrientation StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation ClassCreator ReferenceType Font Literal ""Dialog"" MemberReference Font PLAIN Literal 10 setFont StatementExpression MethodInvocation MemberReference topLevelTabbedPane MemberReference BorderLayout CENTER add ForStatement EnhancedForControl VariableDeclaration ReferenceType JPanel VariableDeclarator t MemberReference tabPanelList BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator titleKey Literal ""tab"" IfStatement BinaryOperation instanceof MemberReference t ReferenceType AbstractArgoJPanel BlockStatement StatementExpression Assignment MemberReference titleKey Cast ReferenceType AbstractArgoJPanel MemberReference t = End LocalVariableDeclaration ReferenceType String VariableDeclarator title MethodInvocation Translator MemberReference titleKey localize IfStatement BinaryOperation instanceof MemberReference t ReferenceType TabToDoTarget BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference title MemberReference leftArrowIcon MemberReference t addTab IfStatement BinaryOperation instanceof MemberReference t ReferenceType TabModelTarget BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference title MemberReference upArrowIcon MemberReference t addTab IfStatement BinaryOperation instanceof MemberReference t ReferenceType TabFigTarget BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference title MemberReference upArrowIcon MemberReference t addTab BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference title MemberReference t addTab End End End End StatementExpression Assignment MemberReference lastNonNullTab Literal - 1 = LocalVariableDeclaration ReferenceType Component VariableDeclarator tabs MethodInvocation topLevelTabbedPane getComponents ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference tabs length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i tabs ReferenceType TabProps BlockStatement StatementExpression Assignment MemberReference lastNonNullTab MemberReference i = BreakStatement End IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i tabs ReferenceType TabToDoTarget BlockStatement StatementExpression Assignment MemberReference lastNonNullTab MemberReference i = End End StatementExpression MethodInvocation Literal null Literal true setTarget StatementExpression MethodInvocation topLevelTabbedPane This addMouseListener StatementExpression MethodInvocation topLevelTabbedPane This addChangeListener MethodDeclaration Modifier private loadTabs FormalParameter ReferenceType String direction FormalParameter ReferenceType Orientation orientation IfStatement BinaryOperation || MethodInvocation Position.South MethodInvocation MemberReference direction equalsIgnoreCase toString Literal MethodInvocation MemberReference direction equalsIgnoreCase ""detail"" BlockStatement StatementExpression MethodInvocation tabPanelList MethodInvocation Arrays ArrayCreator ReferenceType JPanel ArrayInitializer ClassCreator ReferenceType org ReferenceType argouml ReferenceType cognitive ReferenceType ui ReferenceType TabToDo ClassCreator ReferenceType TabProps ClassCreator ReferenceType TabDocumentation ClassCreator ReferenceType TabStyle ClassCreator ReferenceType TabSrc ClassCreator ReferenceType TabConstraints ClassCreator ReferenceType TabStereotype ClassCreator ReferenceType TabTaggedValues ClassCreator ReferenceType org ReferenceType argouml ReferenceType cognitive ReferenceType checklist ReferenceType ui ReferenceType TabChecklist asList addAll End MethodDeclaration /**
     * Returns the JTabbedPane that contains all details panels.
     *
     * @return the JTabbedPane.
     */ Modifier public ReferenceType JTabbedPane getTabs ReturnStatement MemberReference topLevelTabbedPane MethodDeclaration /**
     * Selects the to do tab, and sets the target of that tab.
     * 
     * @param item the selected todo item
     * @return true if todo tab is really selected.
     */ Modifier public BasicType boolean setToDoItem FormalParameter ReferenceType Object item StatementExpression MethodInvocation MemberReference item enableTabs ForStatement EnhancedForControl VariableDeclaration ReferenceType JPanel VariableDeclarator t MemberReference tabPanelList BlockStatement IfStatement BinaryOperation instanceof MemberReference t ReferenceType TabToDoTarget BlockStatement StatementExpression Cast ReferenceType TabToDoTarget MemberReference t StatementExpression MethodInvocation topLevelTabbedPane MemberReference t setSelectedComponent ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration /**
     * Selects the prop tab if it is appropriate for the target.
     *
     * @param target
     *            the target object
     * @return true if props tab is really selected
     */ Modifier private BasicType boolean selectPropsTab FormalParameter ReferenceType Object target IfStatement MethodInvocation MethodInvocation MemberReference target shouldBeEnabled getTabProps BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator indexOfPropPanel MethodInvocation topLevelTabbedPane MethodInvocation getTabProps indexOfComponent StatementExpression MethodInvocation topLevelTabbedPane MemberReference indexOfPropPanel setSelectedIndex StatementExpression Assignment MemberReference lastNonNullTab MemberReference indexOfPropPanel = ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration /**
     * Sets the target of the Details pane to either be a
     * selected model element or
     * the owner(model element) of a selected fig.<p>
     *
     * Decides which panels to enable.
     *
     * @param target the target object
     */ Modifier private setTarget FormalParameter ReferenceType Object target FormalParameter BasicType boolean defaultToProperties StatementExpression MethodInvocation MemberReference target enableTabs IfStatement BinaryOperation != MemberReference target Literal null BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator tabSelected Literal false IfStatement MemberReference defaultToProperties BlockStatement StatementExpression Assignment MemberReference tabSelected MethodInvocation MemberReference target selectPropsTab = BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator selectedTab MethodInvocation topLevelTabbedPane MemberReference lastNonNullTab getComponentAt IfStatement BinaryOperation instanceof MemberReference selectedTab ReferenceType TabTarget BlockStatement IfStatement Cast ReferenceType TabTarget MemberReference selectedTab BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference lastNonNullTab setSelectedIndex StatementExpression Assignment MemberReference tabSelected Literal true = BlockStatement StatementExpression Assignment MemberReference tabSelected MethodInvocation MemberReference target selectPropsTab = End End End IfStatement MemberReference ! tabSelected BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation + MemberReference lastNonNullTab Literal 1 BinaryOperation < MemberReference i MethodInvocation topLevelTabbedPane getTabCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator tab MethodInvocation topLevelTabbedPane MemberReference i getComponentAt IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabTarget BlockStatement IfStatement Cast ReferenceType TabTarget MemberReference tab BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference i setSelectedIndex StatementExpression Cast ReferenceType TabTarget MemberReference tab StatementExpression Assignment MemberReference lastNonNullTab MemberReference i = StatementExpression Assignment MemberReference tabSelected Literal true = BreakStatement End End End End IfStatement MemberReference ! tabSelected BlockStatement LocalVariableDeclaration ReferenceType JPanel VariableDeclarator tab MethodInvocation tabPanelList Literal 0 get IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabToDoTarget BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation tabPanelList iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType TabToDoTarget BlockStatement StatementExpression Assignment MemberReference tab Cast ReferenceType JPanel MemberReference o = BreakStatement End End End IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabToDoTarget BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference tab setSelectedComponent StatementExpression Cast ReferenceType TabToDoTarget MemberReference tab StatementExpression Assignment MemberReference lastNonNullTab MethodInvocation topLevelTabbedPane getSelectedIndex = End End BlockStatement LocalVariableDeclaration ReferenceType JPanel VariableDeclarator tab TernaryExpression MethodInvocation tabPanelList isEmpty Literal null Cast ReferenceType JPanel MethodInvocation tabPanelList Literal 0 get IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabToDoTarget BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation tabPanelList iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType TabToDoTarget BlockStatement StatementExpression Assignment MemberReference tab Cast ReferenceType JPanel MemberReference o = BreakStatement End End End IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabToDoTarget BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference tab setSelectedComponent StatementExpression Cast ReferenceType TabToDoTarget MemberReference tab BlockStatement StatementExpression MethodInvocation topLevelTabbedPane Literal - 1 setSelectedIndex End End StatementExpression Assignment MemberReference currentTarget MemberReference target = MethodDeclaration /**
     * Returns the current model target.
     * @return the current model target
     */ Modifier public ReferenceType Object getTarget ReturnStatement MemberReference currentTarget MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize ReturnStatement ClassCreator ReferenceType Dimension Literal 100 Literal 100 MethodDeclaration /**
     * Get the index of the tab with the given name.
     *
     * @param tabName the name of the required tab
     * @return index of the tab of the given name
     */ Modifier public BasicType int getIndexOfNamedTab FormalParameter ReferenceType String tabName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabPanelList size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator title MethodInvocation topLevelTabbedPane MemberReference i getTitleAt IfStatement BinaryOperation && BinaryOperation != MemberReference title Literal null MethodInvocation title MemberReference tabName equals BlockStatement ReturnStatement MemberReference i End End ReturnStatement Literal - 1 MethodDeclaration /**
     * Get the number of tabs.
     *
     * @return the number of tab pages
     */ Modifier public BasicType int getTabCount ReturnStatement MethodInvocation tabPanelList size MethodDeclaration /**
     * Selects a tab by given name.
     * @param tabName the given name
     * @return true if the named tab has been found
     */ Modifier public BasicType boolean selectTabNamed FormalParameter ReferenceType String tabName LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference tabName getIndexOfNamedTab IfStatement BinaryOperation != MemberReference index Literal - 1 BlockStatement StatementExpression MethodInvocation topLevelTabbedPane MemberReference index setSelectedIndex ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration /**
     * Helper method to add a Property panel for a given class.
     *
     * @param c the given class
     * @param p the given property panel
     */ Modifier public addToPropTab FormalParameter ReferenceType Class c FormalParameter ReferenceType PropPanel p ForStatement EnhancedForControl VariableDeclaration ReferenceType JPanel VariableDeclarator panel MemberReference tabPanelList BlockStatement IfStatement BinaryOperation instanceof MemberReference panel ReferenceType TabProps BlockStatement StatementExpression Cast ReferenceType TabProps MemberReference panel End End MethodDeclaration /**
     * returns the Property panel in the Details Pane.
     *
     * @return the property panel
     */ Modifier public ReferenceType TabProps getTabProps ForStatement EnhancedForControl VariableDeclaration ReferenceType JPanel VariableDeclarator tab MemberReference tabPanelList BlockStatement IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabProps BlockStatement ReturnStatement Cast ReferenceType TabProps MemberReference tab End End ReturnStatement Literal null MethodDeclaration /**
     * Returns the tab instance of the specified class.
     *
     * @param tabClass the given class
     * @return the tab instance for the given class
     */ Modifier public ReferenceType AbstractArgoJPanel getTab FormalParameter ReferenceType Class TypeArgument ReferenceType AbstractArgoJPanel extends tabClass ForStatement EnhancedForControl VariableDeclaration ReferenceType JPanel VariableDeclarator tab MemberReference tabPanelList BlockStatement IfStatement MethodInvocation tab MethodInvocation MemberReference tabClass equals getClass BlockStatement ReturnStatement Cast ReferenceType AbstractArgoJPanel MemberReference tab End End ReturnStatement Literal null MethodDeclaration /**
     * Reacts to a change in the selected tab by calling
     * refresh() for TabToDoTarget's
     * &
     * setTarget on a  TabModelTarget or TabFigTarget instance. <p>
     *
     * Called when the user selects a new tab, by clicking or
     * otherwise.
     *
     * {@inheritDoc}
     */ Modifier public stateChanged FormalParameter ReferenceType ChangeEvent e StatementExpression MethodInvocation LOG Literal ""DetailsPane state changed"" debug LocalVariableDeclaration ReferenceType Component VariableDeclarator sel MethodInvocation topLevelTabbedPane getSelectedComponent IfStatement BinaryOperation >= MemberReference lastNonNullTab Literal 0 BlockStatement LocalVariableDeclaration ReferenceType JPanel VariableDeclarator tab MethodInvocation tabPanelList MemberReference lastNonNullTab get IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TargetListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference tab removeTargetListener End End LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getSingleTarget getInstance IfStatement BinaryOperation instanceof MemberReference sel ReferenceType TabToDoTarget BlockStatement StatementExpression Cast ReferenceType TabToDoTarget MemberReference sel IfStatement BinaryOperation instanceof MemberReference sel ReferenceType TabTarget BlockStatement StatementExpression Cast ReferenceType TabTarget MemberReference sel End End IfStatement BinaryOperation instanceof MemberReference sel ReferenceType TargetListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference sel removeTargetListener StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference sel addTargetListener StatementExpression Cast ReferenceType TargetListener MemberReference sel End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BinaryOperation > MethodInvocation topLevelTabbedPane getSelectedIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference lastNonNullTab MethodInvocation topLevelTabbedPane getSelectedIndex = End MethodDeclaration /**
     * no action currently executed here.
     * called when the user clicks once on a tab.
     *
     * @param tab the index of the clicked tab
     */ Modifier public mySingleClick FormalParameter BasicType int tab StatementExpression MethodInvocation LOG BinaryOperation + Literal ""single: "" MethodInvocation topLevelTabbedPane MethodInvocation toString MemberReference tab getComponentAt debug MethodDeclaration /**
     * Spawns a new tab.
     * called when the user clicks twice on a tab.
     *
     * @param tab the index of the clicked tab
     */ Modifier public myDoubleClick FormalParameter BasicType int tab StatementExpression MethodInvocation LOG BinaryOperation + Literal ""double: "" MethodInvocation topLevelTabbedPane MethodInvocation toString MemberReference tab getComponentAt debug MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseReleased FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseEntered FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseExited FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator tab MethodInvocation topLevelTabbedPane getSelectedIndex IfStatement BinaryOperation != MemberReference tab Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator tabBounds MethodInvocation topLevelTabbedPane MemberReference tab getBoundsAt IfStatement MethodInvocation ! tabBounds MethodInvocation me getX MethodInvocation me getY contains BlockStatement ReturnStatement End IfStatement BinaryOperation == MethodInvocation me getClickCount Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference tab mySingleClick IfStatement BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation MemberReference tab myDoubleClick End End End FieldDeclaration /**
     * Graphic that goes on the tab label.
     */ Modifier private ReferenceType Icon VariableDeclarator upArrowIcon ClassCreator ReferenceType UpArrowIcon FieldDeclaration /**
     * Graphic that goes on the tab label.
     */ Modifier private ReferenceType Icon VariableDeclarator leftArrowIcon ClassCreator ReferenceType LeftArrowIcon MethodDeclaration Modifier public setOrientation FormalParameter ReferenceType Orientation orientation ForStatement EnhancedForControl VariableDeclaration ReferenceType JPanel VariableDeclarator t MemberReference tabPanelList BlockStatement IfStatement BinaryOperation instanceof MemberReference t ReferenceType Orientable BlockStatement LocalVariableDeclaration ReferenceType Orientable VariableDeclarator o Cast ReferenceType Orientable MemberReference t StatementExpression MethodInvocation o MemberReference orientation setOrientation End End MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget Literal false setTarget StatementExpression MethodInvocation MemberReference e fireTargetAdded MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget Literal false setTarget StatementExpression MethodInvocation MemberReference e fireTargetRemoved MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget Literal true setTarget StatementExpression MethodInvocation MemberReference e fireTargetSet MethodDeclaration /**
     * Enables/disables the tabs on the tabbed card. Also selects the tab to
     * show.
     *
     * @param target the target object
     */ Modifier private enableTabs FormalParameter ReferenceType Object target ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabPanelList size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType JPanel VariableDeclarator tab MethodInvocation tabPanelList MemberReference i get LocalVariableDeclaration BasicType boolean VariableDeclarator shouldEnable Literal false IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TargetListener BlockStatement IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabTarget BlockStatement StatementExpression Assignment MemberReference shouldEnable Cast ReferenceType TabTarget MemberReference tab = BlockStatement IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TabToDoTarget BlockStatement StatementExpression Assignment MemberReference shouldEnable Literal true = End End StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference tab removeTargetListener IfStatement MemberReference shouldEnable BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference tab addTargetListener End End StatementExpression MethodInvocation topLevelTabbedPane MemberReference i MemberReference shouldEnable setEnabledAt End MethodDeclaration Modifier private fireTargetSet FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End MethodDeclaration Modifier private fireTargetAdded FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End MethodDeclaration Modifier private fireTargetRemoved FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End ReferenceType JPanel ReferenceType ChangeListener ReferenceType MouseListener ReferenceType Orientable ReferenceType TargetListener",0
826,826,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * The different DirectionKinds.
 */ DirectionKind MethodDeclaration /**
     * @return Returns the In ParameterDirectionKind.
     */ ReferenceType Object getInParameter MethodDeclaration /**
     * @return Returns the Inout ParameterDirectionKind.
     */ ReferenceType Object getInOutParameter MethodDeclaration /**
     * @return Returns the Out ParameterDirectionKind.
     */ ReferenceType Object getOutParameter MethodDeclaration /**
     * @return Returns the Return ParameterDirectionKind.
     */ ReferenceType Object getReturnParameter",1
1514,1514,,0
1398,1398,,0
531,531,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * A wrapper around the genuine XmiWriter that provides public
 * access with no knowledge of actual UML implementation.
 * Unlike many of the interfaces to the model there is no control to force
 * a single instance of an XmiWriter. This is to allow work objects generated
 * by the implementation to be garbage collected when an XmiWriter instance
 * falls out of scope.
 *
 * @author Bob Tarling
 */ XmiWriter MethodDeclaration /**
     * Write XMI to registered writer.
     *
     * @throws UmlException if it goes wrong
     */ write UmlException MethodDeclaration /**
     * Set the object to call back in order to write extension elements into the
     * XMI output stream.
     * 
     * @param xmiExtensionWriter the writer to handle XMI extensions
     */ setXmiExtensionWriter FormalParameter ReferenceType XmiExtensionWriter xmiExtensionWriter",0
1040,1040,,1
1055,1055,,0
553,553,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * An interface to act as an enumerated type for a di collaboration diagram.
 *
 * @author Bob Tarling
 */ CollaborationDiagram ReferenceType DiDiagram",1
850,850,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLStateDeferrableEventListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateDeferrableEventListModel.
     */ UMLStateDeferrableEventListModel StatementExpression SuperConstructorInvocation Literal ""deferrableEvent"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getDeferrableEvents getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getDeferrableEvents MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",0
1276,1276,,0
1341,1341,,0
643,643,"CompilationUnit PackageDeclaration org.argouml.kernel ClassDeclaration Modifier public abstract /**
 * The base class for any commands that can be undone by ActionUndo.
 * @author Bob Tarling
 */ AbstractCommand MethodDeclaration Modifier public abstract ReferenceType Object execute MethodDeclaration Modifier public abstract undo MethodDeclaration Modifier public BasicType boolean isUndoable ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean isRedoable ReturnStatement Literal true ReferenceType Command",0
830,830,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * The critic for ambiguous names of a state.
 *
 * @author Jason Robbins
 */ CrDisambigStateName ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrDisambigStateName StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""name"" addTrigger StatementExpression MethodInvocation Literal ""parent"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference dm getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal """" equals BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType String VariableDeclarator myNameString MemberReference myName IfStatement BinaryOperation == MethodInvocation myNameString length Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator pkgs MethodInvocation Model MethodInvocation MemberReference dm getElementImports2 getFacade IfStatement BinaryOperation == MemberReference pkgs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation pkgs iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator imp MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference imp getPackage getFacade IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator oes MethodInvocation Model MethodInvocation MemberReference ns getOwnedElements getFacade IfStatement BinaryOperation == MemberReference oes Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elems MethodInvocation oes iterator WhileStatement MethodInvocation elems hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation elems next LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation Model MethodInvocation MemberReference eo getModelElement getFacade IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement End IfStatement BinaryOperation == MemberReference me MemberReference dm BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference meName Literal null MethodInvocation meName Literal """" equals BlockStatement ContinueStatement End IfStatement MethodInvocation meName MemberReference myNameString equals BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClClassName getTheInstance FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 5027208502429769593L ReferenceType CrUML",0
953,953,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Point Import java.awt.event.KeyEvent Import java.awt.event.MouseEvent Import java.util.Collection Import java.util.Iterator Import org.apache.log4j.Logger Import org.argouml.model.IllegalModelElementConnectionException Import org.argouml.model.Model Import org.argouml.uml.diagram.static_structure.ui.FigClassifierBox Import org.tigris.gef.base.Layer Import org.tigris.gef.base.ModeCreatePolyEdge Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.graph.GraphNodeRenderer Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.FigPoly ClassDeclaration Modifier public /**
 * A Mode to interpret user input while creating an association end.
 * The association end can connect an existing association to an existing
 * classifier.
 * If the association is an n-ary association (diamond shape node) then
 * the edge is simply added.
 * If the association is a binary association edge then that edge is
 * transformed into a n-ary association.
 * TODO: Investigate if this can extend ModeCreateGraphEdge
 *
 * @author pepargouml@yahoo.es
 */ ModeCreateAssociationEnd FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7249069222789301797L FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ModeCreateAssociationEnd getLogger FieldDeclaration Modifier private ReferenceType FigNode VariableDeclarator newFigNodeAssociation FieldDeclaration Modifier private ReferenceType Object VariableDeclarator association FieldDeclaration Modifier private ReferenceType Collection VariableDeclarator associationEnds MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Fig VariableDeclarator underMouse MethodInvocation editor MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference underMouse Literal null BlockStatement StatementExpression Assignment MemberReference underMouse MethodInvocation editor BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = End IfStatement BinaryOperation && BinaryOperation == MemberReference underMouse Literal null BinaryOperation == MemberReference _npoints Literal 0 BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End IfStatement BinaryOperation > MemberReference _npoints Literal 0 BlockStatement StatementExpression MethodInvocation me consume ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation underMouse getOwner IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAssociationClass getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation underMouse getOwner isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference association MethodInvocation underMouse getOwner = End IfStatement BinaryOperation instanceof MemberReference underMouse ReferenceType FigAssociation BlockStatement StatementExpression Assignment MemberReference associationEnds MethodInvocation Model MethodInvocation MemberReference association getConnections getFacade = StatementExpression Assignment MemberReference newFigNodeAssociation MethodInvocation MemberReference me placeTempNode = StatementExpression Assignment MemberReference underMouse MemberReference newFigNodeAssociation = StatementExpression MethodInvocation MemberReference newFigNodeAssociation setSourceFigNode StatementExpression MethodInvocation MethodInvocation newFigNodeAssociation getOwner setStartPort StatementExpression MethodInvocation MemberReference newFigNodeAssociation setStartPortFig IfStatement BinaryOperation || BinaryOperation instanceof MemberReference underMouse ReferenceType FigNodeAssociation BinaryOperation instanceof MemberReference underMouse ReferenceType FigClassifierBox BlockStatement IfStatement BinaryOperation == MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference underMouse setSourceFigNode StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference x MemberReference y deepHitPort getSourceFigNode setStartPort End IfStatement BinaryOperation == MethodInvocation getStartPort Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation getStartPort getPortFig getSourceFigNode setStartPortFig BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End End End StatementExpression MethodInvocation MemberReference me createFig StatementExpression MethodInvocation me consume MethodDeclaration Modifier public mouseReleased FormalParameter Modifier final ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement End IfStatement BinaryOperation == MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End LocalVariableDeclaration Modifier final BasicType int VariableDeclarator x MethodInvocation me getX LocalVariableDeclaration Modifier final BasicType int VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation editor MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference destFig Literal null BlockStatement StatementExpression Assignment MemberReference destFig MethodInvocation editor BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = End IfStatement BinaryOperation != MemberReference destFig Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation MethodInvocation getOwner getSourceFigNode LocalVariableDeclaration ReferenceType Object VariableDeclarator dest MethodInvocation destFig getOwner IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference source isAAssociationClass getFacade MethodInvocation Model MethodInvocation MemberReference dest isAAssociationClass getFacade BlockStatement IfStatement BinaryOperation && BinaryOperation || MethodInvocation Model MethodInvocation MemberReference source isAAssociation getFacade MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade MethodInvocation ! Model MethodInvocation MemberReference source isAClassifier getFacade BlockStatement StatementExpression MethodInvocation MemberReference me MemberReference destFig mouseReleasedOnClassifier ReturnStatement IfStatement BinaryOperation && BinaryOperation || MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade MethodInvocation Model MethodInvocation MemberReference dest isAAssociation getFacade MethodInvocation ! Model MethodInvocation MemberReference source isAClassifier getFacade BlockStatement StatementExpression MethodInvocation MemberReference me MemberReference destFig mouseReleasedOnAssociation ReturnStatement End End End End IfStatement MethodInvocation ! MemberReference x MemberReference y nearLast BlockStatement StatementExpression MethodInvocation editor damageAll LocalVariableDeclaration ReferenceType Point VariableDeclarator snapPt ClassCreator ReferenceType Point MemberReference x MemberReference y StatementExpression MethodInvocation editor MemberReference snapPt snap StatementExpression Cast ReferenceType FigPoly MemberReference _newItem StatementExpression MemberReference ++ _npoints StatementExpression MethodInvocation editor damageAll End StatementExpression Assignment MemberReference _lastX MemberReference x = StatementExpression Assignment MemberReference _lastY MemberReference y = StatementExpression MethodInvocation me consume MethodDeclaration Modifier private mouseReleasedOnClassifier FormalParameter Modifier final ReferenceType MouseEvent me FormalParameter Modifier final ReferenceType Fig destFig LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator graphModel Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel StatementExpression MethodInvocation graphModel MemberReference association removeEdge TryStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getAssociationEnd getMetaTypes MethodInvocation MethodInvocation getOwner getSourceFigNode Literal null MethodInvocation destFig getOwner Literal null Literal null Literal null buildConnection getUmlFactory CatchClause CatchClauseParameter IllegalModelElementConnectionException e StatementExpression MethodInvocation LOG Literal ""Exception"" MemberReference e error StatementExpression MethodInvocation graphModel MemberReference association addNode StatementExpression Assignment MemberReference associationEnds MethodInvocation Model MethodInvocation MemberReference association getConnections getFacade = StatementExpression MethodInvocation Literal null endAttached StatementExpression MethodInvocation me consume MethodDeclaration Modifier private mouseReleasedOnAssociation FormalParameter Modifier final ReferenceType MouseEvent me FormalParameter Modifier final ReferenceType Fig destFig LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator graphModel Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel LocalVariableDeclaration ReferenceType Object VariableDeclarator destAssociation MethodInvocation destFig getOwner StatementExpression MethodInvocation graphModel MemberReference destAssociation removeEdge StatementExpression MethodInvocation destFig removeFromDiagram StatementExpression MethodInvocation graphModel MethodInvocation getStartPort MemberReference destAssociation MethodInvocation Model MethodInvocation getAssociationEnd getMetaTypes connect StatementExpression MethodInvocation graphModel MemberReference destAssociation addNode LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figNode Cast ReferenceType FigNode MethodInvocation lay MemberReference destAssociation presentationFor StatementExpression MethodInvocation figNode BinaryOperation - MemberReference x BinaryOperation / MethodInvocation figNode getWidth Literal 2 BinaryOperation - MemberReference y BinaryOperation / MethodInvocation figNode getHeight Literal 2 setLocation StatementExpression MethodInvocation editor MemberReference figNode add StatementExpression Assignment MemberReference associationEnds MethodInvocation Model MethodInvocation MemberReference destAssociation getConnections getFacade = StatementExpression MethodInvocation Literal null endAttached StatementExpression MethodInvocation me consume MethodDeclaration /**
     * This will be called when the edge is successfully connected.
     * This method is extended to make sure that all edges are in the
     * graph model
     * @param fe the FigEdge drawn
     */ Modifier protected endAttached FormalParameter ReferenceType FigEdge fe LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator graphModel Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation associationEnds iterator MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation graphModel MethodInvocation it next addEdge End StatementExpression SuperMethodInvocation MemberReference fe endAttached StatementExpression MethodInvocation done MethodDeclaration Modifier private ReferenceType FigNode placeTempNode FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation editor getGraphModel LocalVariableDeclaration ReferenceType GraphNodeRenderer VariableDeclarator renderer MethodInvocation editor getGraphNodeRenderer LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager StatementExpression Assignment MemberReference figNode MethodInvocation renderer MemberReference gm MemberReference lay MemberReference association Literal null getFigNodeFor = StatementExpression MethodInvocation figNode BinaryOperation - MethodInvocation me getX BinaryOperation / MethodInvocation figNode getWidth Literal 2 BinaryOperation - MethodInvocation me getY BinaryOperation / MethodInvocation figNode getHeight Literal 2 setLocation StatementExpression MethodInvocation editor MemberReference figNode add StatementExpression MethodInvocation editor MethodInvocation deselectAll getSelectionManager ReturnStatement MemberReference figNode MethodDeclaration Modifier public keyTyped FormalParameter ReferenceType KeyEvent ke IfStatement BinaryOperation == MethodInvocation ke getKeyChar MemberReference KeyEvent VK_ESCAPE BlockStatement StatementExpression MethodInvocation LOG Literal ""Esc pressed"" debug StatementExpression MethodInvocation abort StatementExpression MethodInvocation done StatementExpression MethodInvocation ke consume End MethodDeclaration /**
     * This method must be called if the edge drawing is aborted for
     * any reason.
     * It removes any FigNodeAssociation that may have been created
     * when drawing started from a FigAssociation edge.
     */ Modifier private abort StatementExpression MethodInvocation LOG Literal ""Drawing association end aborted"" info IfStatement BinaryOperation != MemberReference newFigNodeAssociation Literal null BlockStatement StatementExpression MethodInvocation editor MemberReference newFigNodeAssociation remove StatementExpression MethodInvocation newFigNodeAssociation removeFromDiagram End MethodDeclaration Modifier public leave StatementExpression MethodInvocation abort StatementExpression SuperMethodInvocation leave ReferenceType ModeCreatePolyEdge",1
677,677,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection Import java.util.Iterator Import java.util.List InterfaceDeclaration Modifier public /**
 * Facade object for the Model subsystem in ArgoUML.<p>
 *
 * The purpose of this Facade object is to allow for decoupling other
 * subsystems from the insides of the model. For this purpose all of
 * the methods in this class give away and accept handles (of type
 * {@link java.lang.Object}) to the objects within the model.<p>
 *
 * This is just recognizers and getters.<p>
 *
 * To manipulate the objects of the model there is a set of factories
 * and helpers within the Model subsystem.<p>
 *
 * Signatures for all recognizers are:
 * <ul>
 * <li>public boolean isATYPE(Object handle)
 * <li>public boolean isPROPERTY(Object handle)
 * <li>public boolean hasPROPERTY(Object handle)
 * </ul>
 *
 * Signatures for all getters are:
 * <ul>
 * <li>public Object getROLENAME(Object handle) - 1..1
 * <li>public Iterator/Collection getROLENAMEs(Object handle) - 0..*
 * <li>public String getName(Object handle) - Name
 * </ul>
 *
 * @author Linus Tolke
 */ Facade ConstantDeclaration /**
     * This tag is set on elements that are generated by reference when
     * importing.
     * If it is set, then the critics could ignore those objects if they want.
     * 
     * TODO: This is really belongs in a higher level utility class
     * that uses the Facade's tagged value methods.  Also, it needs to
     * be updated to use a UML 1.4 TagDefinition instead of a simple String.
     */ ReferenceType String VariableDeclarator GENERATED_TAG Literal ""GeneratedFromImport"" ConstantDeclaration /**
     * Tag which indicates a ModelElement is derived. From UML Standard Elements
     * profile.
     */ ReferenceType String VariableDeclarator DERIVED_TAG Literal ""derived"" MethodDeclaration /**
     * Return the version of the UML metamodel supported by the underlying
     * implementation. The version string is made up of numerical components
     * separated by the '.' character with the most significant digits on the
     * left.
     * <p>
     * The MDR implementation supports UML 1.4 and the initial eUML
     * implementation supports UML 2.1.1. The earlier NSUML implementation
     * supported UML 1.3.
     * 
     * @return a period ('.') separated string of version numbers. e.g. ""1.4"" or
     *         ""2.1.1""
     */ ReferenceType String getUmlVersion MethodDeclaration /**
     * Recognizer for Abstraction.
     *
     * @param handle candidate
     * @return true if handle is an Abstraction.
     */ BasicType boolean isAAbstraction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Action.
     *
     * @param handle candidate
     * @return true if handle is an Action
     */ BasicType boolean isAAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ActionExpression.
     *
     * @param handle candidate
     * @return true if handle is an ActionExpression
     */ BasicType boolean isAActionExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ActionSequence.
     *
     * @param handle candidate
     * @return true if handle is an action sequence
     */ BasicType boolean isAActionSequence FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ActionState.
     *
     * @param handle candidate
     * @return true if handle is an ActionState
     */ BasicType boolean isAActionState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for CallState.
     *
     * @param handle candidate
     * @return true if handle is an call state
     */ BasicType boolean isACallState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ObjectFlowState.
     *
     * @param handle candidate
     * @return true if handle is an objectflow state
     */ BasicType boolean isAObjectFlowState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SubactivityState.
     *
     * @param handle candidate
     * @return true if handle is an subactivity state
     */ BasicType boolean isASubactivityState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Actor.
     *
     * @param handle candidate
     * @return true if handle is an Actor
     */ BasicType boolean isAActor FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for AggregationKind.
     *
     * @param handle candidate
     * @return true if handle is an AggregationKind
     */ BasicType boolean isAAggregationKind FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Artifact.
     *
     * @param handle candidate
     * @return true if handle is an Artifact
     */ BasicType boolean isAArtifact FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Association.
     *
     * @param handle candidate
     * @return true if handle is an Association
     */ BasicType boolean isAAssociation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for AssociationEnd.
     *
     * @param handle candidate
     * @return true if handle is an AssociationEnd
     */ BasicType boolean isAAssociationEnd FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for AssociationRole.
     *
     * @param handle candidate
     * @return true if handle is an AssociationRole
     */ BasicType boolean isAAssociationRole FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for AssociationEndRole.
     *
     * @param handle candidate
     * @return true if handle is an AssociationEndRole
     */ BasicType boolean isAAssociationEndRole FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Attribute.
     *
     * @param handle candidate
     * @return true if handle is an Attribute
     */ BasicType boolean isAAttribute FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for AttributeLink.
     *
     * @param handle candidate
     * @return true if handle is an AttributeLink
     */ BasicType boolean isAAttributeLink FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for asynchronisity of an action.
     *
     * @param handle candidate
     * @return true if the argument is asynchronous
     */ BasicType boolean isAsynchronous FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for abstract classes and operations. True if it has an
     * <code>isAbstract</code> attribute with a value of <code>true</code>.
     * If there's no such attribute (ie it isn't a type which has that attribute
     * in the UML metamodel), it will return false without throwing an error.
     * 
     * @param handle
     *            candidate
     * @return true if handle is abstract.
     */ BasicType boolean isAbstract FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ActivityGraph.
     *
     * @param handle candidate
     * @return true if handle is ActivityGraph.
     */ BasicType boolean isAActivityGraph FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for BehavioralFeature.
     *
     * @param handle candidate
     * @return true if handle is a behavioral feature
     */ BasicType boolean isABehavioralFeature FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Binding.
     *
     * @param handle candidate
     * @return true if handle is a Binding
     */ BasicType boolean isABinding FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for CallAction.
     *
     * @param handle candidate
     * @return true if handle is a CallAction
     */ BasicType boolean isACallAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for CallEvent.
     *
     * @param handle candidate
     * @return true if handle is a CallEvent
     */ BasicType boolean isACallEvent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ChangeEvent.
     *
     * @param handle candidate
     * @return true if handle is a ChangeEvent
     */ BasicType boolean isAChangeEvent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for UML Class.
     *
     * @param handle candidate
     * @return true if handle is a UML Class
     */ BasicType boolean isAClass FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for AssociationClass.
     *
     * @param handle candidate
     * @return true if handle is an AssociationClass
     */ BasicType boolean isAAssociationClass FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Classifier.
     *
     * @param handle candidate
     * @return true if handle is a Classifier
     */ BasicType boolean isAClassifier FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ClassifierInState.
     *
     * @param handle candidate
     * @return true if handle is a ClassifierInState
     */ BasicType boolean isAClassifierInState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ClassifierRole.
     *
     * @param handle candidate
     * @return true if handle is a ClassifierRole
     */ BasicType boolean isAClassifierRole FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Comment.
     *
     * @param handle candidate
     * @return true if handle is a Comment
     */ BasicType boolean isAComment FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Collaboration.
     *
     * @param handle candidate
     * @return true if handle is a Collaboration
     */ BasicType boolean isACollaboration FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for CollaborationInstanceSet.
     *
     * @param handle candidate
     * @return true if handle is a CollaborationInstanceSet
     */ BasicType boolean isACollaborationInstanceSet FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Component.
     *
     * @param handle candidate
     * @return true if handle is a Component
     */ BasicType boolean isAComponent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ComponentInstance.
     *
     * @param handle candidate
     * @return true if handle is a ComponentInstance
     */ BasicType boolean isAComponentInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Constraint.
     *
     * @param handle candidate
     * @return true if handle is a Constraint
     */ BasicType boolean isAConstraint FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for CreateAction.
     *
     * @param handle candidate
     * @return true if handle is a CreateAction
     */ BasicType boolean isACreateAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for DataType.
     *
     * @param handle candidate
     * @return true if handle is a DataType
     */ BasicType boolean isADataType FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for DataValue.
     *
     * @param handle candidate
     * @return true if handle is a DataValue
     */ BasicType boolean isADataValue FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Dependency.
     *
     * @param handle candidate
     * @return true if handle is a Dependency
     */ BasicType boolean isADependency FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for DestroyAction.
     *
     * @param handle candidate
     * @return true if handle is a DestroyAction
     */ BasicType boolean isADestroyAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for CompositeState.
     *
     * @param handle candidate
     * @return true if handle is a CompositeState
     */ BasicType boolean isACompositeState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Element.
     * <p>
     * <em>NOTE:</em> In the UML 1.4 specification there are a number of types
     * that one might expect to be subtypes of Element, but which are not. The
     * spec isn't clear on whether this is intentional or not but if you want
     * all types in the spec, including things which are not subtypes of Element
     * such as Expression, Multiplicity, MultiplicityRange TemplateArgument,
     * TemplateParameter, ElementResidence, ElementImport use the method
     * {@link #isAUMLElement(Object)}.
     * 
     * @param handle
     *            candidate
     * @return true if handle is an Element
     * @see #isAUMLElement(Object)
     */ BasicType boolean isAElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ElementImport.
     *
     * @param handle candidate
     * @return true if handle is an ElementImport
     */ BasicType boolean isAElementImport FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ElementResidence.
     *
     * @param handle candidate
     * @return true if handle is an ElementResidence
     */ BasicType boolean isAElementResidence FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for UML Enumeration.
     *
     * @param handle candidate
     * @return true if handle is an UML Enumeration
     */ BasicType boolean isAEnumeration FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for UML EnumerationLiteral
     * 
     * @param handle the candidate
     * @return true if handle is an UML EnumerationLiteral
     */ BasicType boolean isAEnumerationLiteral FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Event.
     *
     * @param handle candidate
     * @return true if handle is an Event
     */ BasicType boolean isAEvent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for UML Exception.
     *
     * @param handle candidate
     * @return true if handle is a UML Exception
     */ BasicType boolean isAException FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Expression.
     *
     * @param handle candidate
     * @return true if handle is an Expression
     */ BasicType boolean isAExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ArgListsExpression.
     *
     * @param handle candidate
     * @return true if handle is an ArgListsExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isAArgListsExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for BooleanExpression.
     *
     * @param handle candidate
     * @return true if handle is an BooleanExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isABooleanExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for IterationExpression.
     *
     * @param handle candidate
     * @return true if handle is an IterationExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isAIterationExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for MappingExpression.
     *
     * @param handle candidate
     * @return true if handle is an MappingExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isAMappingExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ObjectSetExpression.
     *
     * @param handle candidate
     * @return true if handle is an ObjectSetExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isAObjectSetExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ProcedureExpression.
     *
     * @param handle candidate
     * @return true if handle is an ProcedureExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isAProcedureExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TimeExpression.
     *
     * @param handle candidate
     * @return true if handle is an TimeExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isATimeExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TypeExpression.
     *
     * @param handle candidate
     * @return true if handle is an TypeExpression
     * @deprecated for 0.25.4 by tfmorris.  Removed from UML 2.x.
     */ Annotation Deprecated BasicType boolean isATypeExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Extend.
     *
     * @param handle candidate
     * @return true if handle is an Extend
     */ BasicType boolean isAExtend FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ExtensionPoint.
     *
     * @param handle candidate
     * @return true if handle is an ExtensionPoint
     */ BasicType boolean isAExtensionPoint FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Feature.
     *
     * @param handle candidate
     * @return true if handle is a Feature
     */ BasicType boolean isAFeature FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for FinalState.
     *
     * @param handle candidate
     * @return true if handle is a FinalState
     */ BasicType boolean isAFinalState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Flow.
     *
     * @param handle candidate
     * @return true if handle is a Flow
     */ BasicType boolean isAFlow FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Guard.
     *
     * @param handle candidate
     * @return true if handle is a Guard
     */ BasicType boolean isAGuard FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for GeneralizableElement.
     *
     * @param handle candidate
     * @return true if handle is a GeneralizableElement
     */ BasicType boolean isAGeneralizableElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Generalization.
     *
     * @param handle candidate
     * @return true if handle is a Generalization
     */ BasicType boolean isAGeneralization FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Include.
     *
     * @param handle candidate
     * @return true if handle is an Include
     */ BasicType boolean isAInclude FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Instance.
     *
     * @param handle candidate
     * @return true if handle is a Instance
     */ BasicType boolean isAInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Interaction.
     *
     * @param handle candidate
     * @return true if handle is a Interaction
     */ BasicType boolean isAInteraction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for InteractionInstanceSet.
     *
     * @param handle candidate
     * @return true if handle is a InteractionInstanceSet
     */ BasicType boolean isAInteractionInstanceSet FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Interface.
     *
     * @param handle candidate
     * @return true if handle is a Interface
     */ BasicType boolean isAInterface FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Link.
     *
     * @param handle candidate
     * @return true if handle is a Link
     */ BasicType boolean isALink FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for LinkEnd.
     *
     * @param handle candidate
     * @return true if handle is a LinkEnd
     */ BasicType boolean isALinkEnd FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for LinkObject.
     *
     * @param handle candidate
     * @return true if handle is a LinkObject
     */ BasicType boolean isALinkObject FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Message.
     *
     * @param handle candidate
     * @return true if handle is a Method
     */ BasicType boolean isAMessage FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Method.
     *
     * @param handle candidate
     * @return true if handle is a Method
     */ BasicType boolean isAMethod FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Model.
     *
     * @param handle candidate
     * @return true if handle is a Model
     */ BasicType boolean isAModel FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElement.
     *
     * @param handle candidate
     * @return true if handle is a ModelElement
     */ BasicType boolean isAModelElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for a UML element which can have a name. In UML 1.x,
     * this is just a ModelElement, but in UML 2.x it's a separate
     * metatype. Use this method if you're principally interested in
     * whether something can be named.
     * 
     * @param handle
     *            candidate
     * @return true if handle is a ModelElement
     */ BasicType boolean isANamedElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Multiplicity.
     *
     * @param handle candidate
     * @return true if handle is a Multiplicity
     */ BasicType boolean isAMultiplicity FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for MultiplicityRange.
     *
     * @param handle candidate
     * @return true if handle is a MultiplicityRange
     */ BasicType boolean isAMultiplicityRange FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Namespace.
     *
     * @param handle candidate
     * @return true if handle is a Namespace
     */ BasicType boolean isANamespace FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for N-ary Association.
     *
     * TODO: This is not a recognizer for some type. Rename to
     * isNaryAssociation?
     *
     * @param handle candidate
     * @return true if handle is an Association
     */ BasicType boolean isANaryAssociation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for a Node.
     *
     * @param handle candidate
     * @return true if handle is a Node
     */ BasicType boolean isANode FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for a NodeInstance.
     *
     * @param handle candidate
     * @return true if handle is a NodeInstance
     */ BasicType boolean isANodeInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Operation.
     *
     * @param handle candidate
     * @return true if handle is an Operation
     */ BasicType boolean isAOperation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Object.
     *
     * @param handle candidate
     * @return true if handle is an Object
     */ BasicType boolean isAObject FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Parameter.
     *
     * @param handle candidate
     * @return true if handle is a Parameter
     */ BasicType boolean isAParameter FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Partition.
     *
     * @param handle candidate
     * @return true if handle is a Partition
     */ BasicType boolean isAPartition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Permission.
     * 
     * @param handle
     *                candidate
     * @return true if handle is an Permission
     * @deprecated for 0.25.4 by tfmorris. Removed from UML 2.x. Use
     *             {@link #isAPackageImport()}
     * 
     */ BasicType boolean isAPermission FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for PackageImport (was Permission in UML 1.x).
     * 
     * @param handle
     *                candidate
     * @return true if handle is an PackageImport (or Permission in UML 1.4)
     * @since UML 2.0
     */ BasicType boolean isAPackageImport FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Package.
     *
     * @param handle candidate
     * @return true if handle is a Package
     */ BasicType boolean isAPackage FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Primitive.
     * 
     * @param handle
     *            candidate
     * @return true if handle is a Primitive
     * @deprecated for 0.25.4 by tfmorris. Renamed in UML 2.x. Use
     *             {@link #isAPrimitiveType(Object)}.
     */ Annotation Deprecated BasicType boolean isAPrimitive FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for PrimitiveType.
     *
     * @param handle candidate
     * @return true if handle is a Primitive
     */ BasicType boolean isAPrimitiveType FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ProgrammingLanguageDataType.
     * 
     * @param handle
     *            candidate
     * @return true if handle is a ProgrammingLanguageDataType
     * @deprecated for 0.25.4 by tfmorris. Removed from UML 2.x. Use
     *             {@link #isAPrimitiveType(Object)}.
     */ Annotation Deprecated BasicType boolean isAProgrammingLanguageDataType FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Pseudostate.
     *
     * @param handle candidate
     * @return true if handle is a Pseudostate
     */ BasicType boolean isAPseudostate FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for PseudostateKind.
     *
     * @param handle candidate
     * @return true if handle is a PseudostateKind
     */ BasicType boolean isAPseudostateKind FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Kind of a Pseudostate.
     *
     * @param handle the Pseudostate
     * @return the Kind
     * @deprecated by tfmorris for 0.25.3 - use {@link #getKind(Object)}
     */ Annotation Deprecated ReferenceType Object getPseudostateKind FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Kind of a Pseudostate or Parameter.
     *
     * @param handle the Pseudostate or Parameter
     * @return the Kind
     */ ReferenceType Object getKind FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the receiver Instance for a Stimulus or the receiver
     * ClassifierRole for a Message.
     * 
     * @param handle
     *            candidate
     * @return Instance or ClassifierRole
     */ ReferenceType Object getReceiver FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Link belonging to the given LinkEnd.
     *
     * @param handle the LinkEnd
     * @return the Link
     */ ReferenceType Object getLink FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Check whether two pseudostatekinds are equal/of the same type.
     *
     * @return true if the are the same type
     * @param ps1 one kind
     * @param ps2 one kind
     */ BasicType boolean equalsPseudostateKind FormalParameter ReferenceType Object ps1 FormalParameter ReferenceType Object ps2 MethodDeclaration /**
     * Recognizer for Reception.
     *
     * @param handle candidate
     * @return true if handle is a Reception
     */ BasicType boolean isAReception FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ReturnAction.
     *
     * @param handle candidate
     * @return true if handle is a ReturnAction
     */ BasicType boolean isAReturnAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Relationship.
     *
     * @param handle candidate
     * @return true if handle is a Relationship
     */ BasicType boolean isARelationship FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SendAction.
     *
     * @param handle candidate
     * @return true if handle is a SendAction
     */ BasicType boolean isASendAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Signal.
     *
     * @param handle candidate
     * @return true if handle is a Signal
     */ BasicType boolean isASignal FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SignalEvent.
     *
     * @param handle candidate
     * @return true if handle is a SignalEvent
     */ BasicType boolean isASignalEvent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SimpleState.
     *
     * @param handle candidate
     * @return true if handle is a StateMachine
     */ BasicType boolean isASimpleState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for StateMachine.
     *
     * @param handle candidate
     * @return true if handle is a StateMachine
     */ BasicType boolean isAStateMachine FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Stimulus.
     *
     * @param handle candidate
     * @return true if handle is a Stimulus
     */ BasicType boolean isAStimulus FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for StateVertex.
     *
     * @param handle candidate
     * @return true if handle is a StateVertex
     */ BasicType boolean isAStateVertex FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Stereotype.
     *
     * @param handle candidate
     * @return true if handle is a Stereotype
     */ BasicType boolean isAStereotype FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for StructuralFeature.
     *
     * @param handle candidate
     * @return true if handle is a StructuralFeature
     */ BasicType boolean isAStructuralFeature FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for State.
     *
     * @param handle candidate
     * @return true if handle is a State
     */ BasicType boolean isAState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for StubState.
     *
     * @param handle candidate
     * @return true if handle is a StubState
     */ BasicType boolean isAStubState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SubmachineState.
     *
     * @param handle candidate
     * @return true if handle is a SubmachineState
     */ BasicType boolean isASubmachineState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Subsystem.
     *
     * @param handle candidate
     * @return true if handle is a Subsystem
     */ BasicType boolean isASubsystem FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SubsystemInstance.
     *
     * @param handle candidate
     * @return true if handle is a SubsystemInstance
     */ BasicType boolean isASubsystemInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for SynchState.
     *
     * @param handle candidate
     * @return true if handle is a SynchState
     */ BasicType boolean isASynchState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TaggedValue.
     *
     * @param handle candidate
     * @return true if handle is a TaggedValue
     */ BasicType boolean isATaggedValue FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TemplateArgument.
     *
     * @param handle candidate
     * @return true if handle is a TemplateArgument
     */ BasicType boolean isATemplateArgument FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TemplateParameter.
     *
     * @param handle candidate
     * @return true if handle is a TemplateParameter
     */ BasicType boolean isATemplateParameter FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TerminateAction.
     *
     * @param handle candidate
     * @return true if handle is a TerminateAction
     */ BasicType boolean isATerminateAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Transition.
     *
     * @param handle candidate
     * @return true if handle is a Transition
     */ BasicType boolean isATransition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for TimeEvent.
     *
     * @param handle candidate
     * @return true if handle is a TimeEvent
     */ BasicType boolean isATimeEvent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for any UML type defined in the UML specification,
     * including those which are not subtypes of Element. <p>
     * 
     * In the UML 1.4 specification, not all defined types are subtypes
     * of Element, although this has been fixed/changed in UML 2.
     *  
     * @param handle the UML object
     * @return true if the given object is a UML object
     * @see #isAElement(Object)
     */ Modifier public BasicType boolean isAUMLElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for UninterpretedAction.
     *
     * @param handle candidate
     * @return true if handle is a UninterpretedAction
     */ BasicType boolean isAUninterpretedAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Usage.
     *
     * @param handle candidate
     * @return true if handle is a Usage
     */ BasicType boolean isAUsage FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for a UseCase.
     *
     * @param handle candidate
     * @return true if handle is a UseCase
     */ BasicType boolean isAUseCase FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for a UseCaseInstance.
     *
     * @param handle candidate
     * @return true if handle is a UseCaseInstance
     * @deprecated for 0.25.4 by tfmorris. UseCaseInstances have been removed
     *             from UML 2.x.
     */ Annotation Deprecated BasicType boolean isAUseCaseInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for VisibilityKind.
     *
     * @param handle candidate
     * @return true if handle is a VisibilityKind
     */ BasicType boolean isAVisibilityKind FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for UML Classes that are Active.
     *
     * @param handle candidate
     * @return true if Class is Active
     */ BasicType boolean isActive FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for StructuralFeatures and AssociationEnds that are
     * changeable.
     * 
     * @param handle
     *            candidate
     * @return true if handle is changeable
     * @deprecated for 0.25.4 by tfmorris - use {@link #isReadOnly(Object)}.
     *             Note that isChangeable() != !isReadOnly() because UML 1.4
     *             also has an enum point of ADD_ONLY. This has been removed in
     *             UML 2.x.
     */ Annotation Deprecated BasicType boolean isChangeable FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Attributes and Features with classifier scope.
     * 
     * @param handle
     *            candidate
     * @return true if handle has classifier scope.
     * @deprecated for 0.25.4 by tfmorris - use {@link #isStatic()} which has
     *             the same semantics, but is compatible with the UML 2.x
     *             naming.
     */ Annotation Deprecated BasicType boolean isClassifierScope FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for concurrent CompositeState.
     *
     * @param handle composite state
     * @return true if concurent.
     */ BasicType boolean isConcurrent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ConcurrentRegion.  
     * A concurrent region is a CompositeState which has
     * an owner that is concurrent.
     *
     * @param handle candidate
     * @return true if handle is a ConcurrentRegion
     */ BasicType boolean isAConcurrentRegion FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for constructor.
     *
     * A constructor is an operation that has a stereotype named create or
     * a method that is a specification of an operator that is a constructor.
     *
     * @param handle candidate
     * @return true if handle is a constructor.
     */ BasicType boolean isConstructor FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Returns true if the given element is Frozen.
     *
     * @param handle candidate
     * @return boolean true if Frozen
     */ BasicType boolean isFrozen FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Returns true if a given AssociationEnd has an aggretation kind of
     * Composite.
     * 
     * @param handle candidate
     * @return boolean
     */ BasicType boolean isComposite FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Returns true if a given AssociationEnd has an aggretation kind of
     * Aggregate.
     * 
     * @param handle candidate
     * @return boolean
     */ BasicType boolean isAggregate FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Attributes that are initialized. An Attribute is 
     * considered initalized if it has an initialValue expression
     * with a non-empty body.
     *
     * @param handle candidate
     * @return true if the attribute is initialized.
     */ BasicType boolean isInitialized FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for attributes with instance scope.
     * 
     * @param handle
     *            candidate
     * @return true if handle has instance scope.
     * @deprecated for 0.25.4 by tfmorris - use !{@link #isStatic(Object)}
     *             which is compatible with the UML 2.x naming.
     */ Annotation Deprecated BasicType boolean isInstanceScope FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for internal transitions.  An internal Transition has
     * its owning State as both the source State and target State.
     *
     * @author mvw
     * @param handle candidate
     * @return true if handle is an internal transition.
     */ BasicType boolean isInternal FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for leaf element. True if it has an <code>isLeaf</code>
     * attribute with a value of <code>true</code>. If there's no such
     * attribute (ie it isn't a type which has that attribute in the UML
     * metamodel), it will return false without throwing an error.
     * 
     * @param handle
     *            candidate GeneralizableElement, Operation, or Reception
     * @return true if handle is a leaf
     */ BasicType boolean isLeaf FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for roots.  True if it has an <code>isRoot</code>
     * attribute with a value of <code>true</code>.  If there's no such
     * attribute (ie it isn't a type which has that attribute in the UML
     * metamodel), it will return false without throwing an error.
     *
     * @param handle candidate GeneralizableElement, Operation, or Reception
     * @return true if handle is a root
     */ BasicType boolean isRoot FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return value of isSpecification attribute for a ModelElement
     * or ElemetImport.
     *
     * @param handle candidate ModelElement or ElemetImport
     * @return boolean value contained by the isSpecification attribute
     */ BasicType boolean isSpecification FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return navigability of an AssociationEnd.
     *
     * @param handle candidate AssociationEnd
     * @return true if handle is navigable
     */ BasicType boolean isNavigable FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for primary objects. A primary object is an object that is
     * created by the parser or by a user. Object that are created as a side
     * effect of importing some other object are not.
     * <p>
     * TODO: This doesn't belong in the Facade. It's a higher level function
     * used specifically for certain reverse engineering operations. - tfmorris
     * 
     * @param handle
     *            candidate
     * @return true if primary object.
     */ BasicType boolean isPrimaryObject FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements with package visibility.
     *
     * TODO: This method name was chosen for compatibility with
     * the existing naming scheme, but has the potential of 
     * clashing with some future use.
     * 
     * @param handle candidate
     * @return true if handle has package visibility
     */ BasicType boolean isPackage FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements with private visibility.
     *
     * @param handle candidate
     * @return true if handle has private
     */ BasicType boolean isPrivate FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements with public visibility.
     *
     * @param handle candidate
     * @return true if handle has public
     */ BasicType boolean isPublic FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for BehaviouralFeature's that are queries.
     *
     * @param handle candidate
     * @return true if it is a query
     */ BasicType boolean isQuery FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements with protected visibility.
     *
     * @param handle candidate
     * @return true if handle has protected
     */ BasicType boolean isProtected FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements which have the <<realize>> Stereotype 
     * applied.
     *
     * @param handle candidate
     * @return true if handle has a realize stereotype
     */ BasicType boolean isRealize FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Parameter's with a DirectionKind of Return.
     * TODO: This is a duplicate of {@link #hasReturnParameterDirectionKind(Object)}
     * @param handle candidate parameter
     * @return true if handle is a return parameter.
     */ BasicType boolean isReturn FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements which have the <<singleton>> Stereotype
     * applied.
     * <p>
     * TODO: Moved this out of the Facade to someplace elese since it's not
     * Model subsystem specific - tfm 20070607
     * 
     * @param handle
     *            candidate
     * @return true if handle is a singleton.
     */ BasicType boolean isSingleton FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements with a given stereotype.
     *
     * @param handle candidate model element
     * @param stereotypename a string that is the stereotype name.
     * @return true if handle is an object that has the given stereotype.
     */ BasicType boolean isStereotype FormalParameter ReferenceType Object handle FormalParameter ReferenceType String stereotypename MethodDeclaration /**
     * Returns true if the given CompositeState is the top state.  The top
     * state has no containing StateMachine.
     *
     * @param handle CompositeState
     * @return boolean true if top state
     */ BasicType boolean isTop FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements with the <<type>> Stereotype applied.
     *
     * @param handle candidate
     * @return true if handle is a type.
     */ BasicType boolean isType FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for ModelElements which have the <<utility>> Stereotype 
     * applied.
     *
     * @param handle candidate
     * @return true if handle is a utility.
     */ BasicType boolean isUtility FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Returns the Association connected to an AssociationEnd or
     * belonging to the given Link.
     *
     * @param handle the AssociationEnd or Link
     * @return association end
     */ ReferenceType Object getAssociation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the AssociationEnd connecting the given Classifier 
     * and Association.
     *
     * @param classifier the classifier
     * @param association is the association
     * @return association end
     */ ReferenceType Object getAssociationEnd FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object association MethodDeclaration /**
     * Return the collection of AssociationEnds for a Classifier
     *
     * @param handle the Classifier for which to get the AssociationEnds.
     * @return Collection with association ends.
     */ ReferenceType Collection getAssociationEnds FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the collection of AssociationRoles for an Association.
     *
     * @param handle the Association that we get the association roles from.
     * @return Collection of association roles.
     */ ReferenceType Collection getAssociationRoles FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the List of Attributes for a Classifier.
     * 
     * @param handle classifier to examine.
     * @return Collection with attributes.
     */ ReferenceType List getAttributes FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Collection of the names of baseClasses for a Stereotype.
     * Note that the returned values are Names, not Elements.
     *
     * @param handle the stereotype
     * @return collection containing all applicable baseclasses
     */ ReferenceType Collection getBaseClasses FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the base of a ModelElement. The element may be one of the
     * following types: AssociationEndRole, AssociationRole, Extend, Include, or
     * ClassifierRoles. <em>NOTE:</em> in the case of a ClassifierRole, the
     * return value is a Collection of elements, not a single element.  If you
     * know you are dealing with a ClassifierRole, it is prefeable to use
     * {@link #getBases(Object)}.
     * 
     * @param handle
     *            the model element
     * @return the base
     */ ReferenceType Object getBase FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the bases of a ClassifierRole.
     *
     * @param handle ClassifierRole.
     * @return the bases.
     */ ReferenceType Collection getBases FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the StateMachines which define the behaviors of a Modelelement.
     * 
     * @param handle
     *            modelelement to examine.
     * @return collection of StateMachines.
     */ ReferenceType Collection getBehaviors FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the BehavioralFeature of a Parameter.
     *
     * @param handle the Parameter
     * @return the behavioral feature.
     */ ReferenceType Object getBehavioralFeature FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the body of a Method, Constraint, Expression, or Comment.<p>
     *
     * If the argument is an Expression, the body returned is a
     * {@link String} (or <code>null</code>). If you want a type-safe
     * version of this version of the call,
     * use {@link DataTypesHelper#getBody(Object)}.
     *
     * @param handle expression.
     * @return the body.
     */ ReferenceType Object getBody FormalParameter ReferenceType Object handle MethodDeclaration /**
     *  Return the SynchState's bound.
     *  
     *  @param handle the synch State
     *  @return bound
     */ BasicType int getBound FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return Changeability of a StructuralFeature or a AssociationEnd.
     *
     * @param handle the StructuralFeature or AssociationEnd
     * @return the Changeability
     * @deprecated for 0.25.4 by tfmorris - use {@link #isReadOnly(Object)}
     */ Annotation Deprecated ReferenceType Object getChangeability FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the child of a generalization.
     * 
     * @param handle
     *            generalization.
     * @return the child.
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getSpecific(Object)}
     *             which matches the UML 2.x terminology.
     */ Annotation Deprecated ReferenceType Object getChild FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the specific end of a generalization. This was getChild() in UML 1.x.
     * 
     * @param handle
     *            generalization.
     * @return the specific classifier.
     * @since 0.25.4
     */ ReferenceType Object getSpecific FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the children of a GeneralizableElement.
     *
     * @param handle the GeneralizableElement.
     * @return a collection with all children.
     */ ReferenceType Collection getChildren FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the ClassifierRoles of a Classifier or Feature.
     *
     * @param handle the Classifer or Feature.
     * @return the classifiers roles of the instance
     */ ReferenceType Collection getClassifierRoles FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the classifier (participant) of an AssociationEnd.
     *
     * TODO: Rename this getParticipant to align with UML spec - tfm - 20070331
     * @param handle The AssociationEnd to get from.
     * @return The classifier of the AssociationEnd.
     */ ReferenceType Object getClassifier FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the classifiers of an Instance.
     *
     * @param handle the Instance
     * @return the classifiers of the Instance
     */ ReferenceType Collection getClassifiers FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the classifiers in state of a Classifier or State.
     *
     * @param handle the model element
     * @return the classifierss in state
     */ ReferenceType Collection getClassifiersInState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the clients of a Dependency.
     *
     * @param handle the dependency
     * @return the clients of the dependency
     */ ReferenceType Collection getClients FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the client dependencies of a ModelElement.
     *
     * @param handle the ModelElement.
     * @return an iterator with all client dependencies.
     */ ReferenceType Collection getClientDependencies FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the condition of an Extend.
     *
     * @param handle The Extend.
     * @return the condition
     */ ReferenceType Object getCondition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the concurrency of an Operation.
     *
     * @param handle The Operation.
     * @return the concurrency.
     */ ReferenceType Object getConcurrency FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the connections to an Association or a Link.
     *
     * @param handle the Association or Link
     * @return a Collection with all connections.
     */ ReferenceType Collection getConnections FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the effect of a Transition.
     *
     * @param handle the Transition
     * @return the effect
     */ ReferenceType Object getEffect FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the ElementResidences of a ModelElement.
     *
     * @param handle the ModelElement that we are getting the residences of
     * @return the collection with ElementResidences
     */ ReferenceType Collection getElementResidences FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the ElementImports which have this ModelElement as their
     * importedElement. For the inverse relationship (ElementImports which
     * import into a Package) see {@link #getElementImports(Object)}.
     * 
     * @param handle
     *            the ModelElement
     * @return the collection of ElementImports
     * @see #getElementImports(Object)
     */ ReferenceType Collection getElementImports2 FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the ElementImports which import into this Package. For the inverse
     * relationship (ElementImports which have a particular ModelElement as
     * their importedElement), see {@link #getElementImports2(Object)}.
     * 
     * @param handle
     *            the package
     * @return the collection of ElementImports
     * @see #getElementImports2(Object)
     */ ReferenceType Collection getElementImports FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the entry Action for a State.
     *
     * @param handle the State
     * @return the entry
     */ ReferenceType Object getEntry FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Enumeration which owns a given EnumerationLiteral.
     * 
     * @param handle the EnumerationLiteral
     * @return the owning Enumeration
     */ ReferenceType Object getEnumeration FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the List of enumeration literals for a UML Enumeration.
     *
     * @param handle the Enumeration
     * @return List of the Enumeration literals.
     */ ReferenceType List getEnumerationLiterals FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the exit action to a State.
     *
     * @param handle the state
     * @return the exit action
     */ ReferenceType Object getExit FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the Expression belonging to a Argument, Guard, ChangeEvent or
     * TimeEvent.
     * 
     * @param handle
     *            the Object to get the Expression from
     * @return Object the Expression
     */ ReferenceType Object getExpression FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return ModelElements which have a given Stereotype applied. 
     * (ie. the Stereotype's extendedElements collection)
     * 
     * @param handle stereotype for which to return extended elements
     * @return collection of model elements extended by given stereotype
     */ Modifier public ReferenceType Collection getExtendedElements FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all Extends of a UseCase or ExtensionPoint.
     *
     * @param handle the UseCase or the ExtensionPoint
     * @return the extends
     */ ReferenceType Collection getExtends FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all extenders of a UseCase.
     *
     * @param handle  the UseCase
     * @return the extends
     */ ReferenceType Collection getExtenders FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the UseCase which is the extension of an Extend.
     *
     * @param handle the extend
     * @return The extension
     */ ReferenceType Object getExtension FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the ExtensionPoint at given index-number.
     *
     * @param handle Extend
     * @param index int
     * @return ExtensionPoint
     */ ReferenceType Object getExtensionPoint FormalParameter ReferenceType Object handle FormalParameter BasicType int index MethodDeclaration /**
     * Return all ExtensionPoints of a UseCase or Extend.
     * 
     * @param handle
     *            the UseCase or the Extend
     * @return the Collection of ExtensionPoints. If the argument was an Extend,
     *         the Collection is ordered, ie a List.
     */ ReferenceType Collection getExtensionPoints FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the List of Features owned by a Classifier.
     *
     * @param handle Classifier to retrieve from.
     * @return List of Features
     */ ReferenceType List getFeatures FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the Generalization connecting two GeneralizableElements.
     * Returns null if there is none.
     *
     * @param handle the child
     * @param parent is the parent
     * @return The generalization or null if none found
     */ ReferenceType Object getGeneralization FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent MethodDeclaration /**
     * Return collection of Generalizations that the given GeneralizableElement
     * participates in as a child.  Use {@link #getSpecializations(Object)} to
     * find the Generalizations that it particpates in as a parent.
     *
     * @param handle GeneralizableElement to retrieve from.
     * @return Generalizations
     */ ReferenceType Collection getGeneralizations FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the guard for a Transition.
     *
     * @param handle the Transition
     * @return Object
     */ ReferenceType Object getGuard FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Icon of a Stereotype.
     *
     * @param handle the Stereotype to get the Icon from
     * @return the Icon
     */ ReferenceType Object getIcon FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the includes for a UseCase.<p>
     *
     * @param handle the UseCase
     * @return a Collection containing the Includes
     */ ReferenceType Collection getIncludes FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return Includes which have the given UseCase as an addition.
     * <em>NOTE:</em> The association is not navigable in this direction,
     * so this isn't guaranteed to work in the general case, but it will
     * return all appropriate elements which can be found in the current
     * model repository.
     *
     * @param handle the UseCase
     * @return the includes as a Collection
     */ ReferenceType Collection getIncluders FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the incoming Transitions for some StateVertex, Transition, Action,
     * or Guard.  For a Transition, the incomings of its source StateVertex are
     * used.  For an Action or Guard, the owning Transition is found and then
     * the algorithm for Transitions is applied.
     * 
     * @param handle
     *            a StateVertex, Transition, Action, or Guard
     * @return Collection of Transitions
     */ ReferenceType Collection getIncomings FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the initial value of an Attribute.
     *
     * @param handle the Attribute
     * @return an Expression representing the initial value
     */ ReferenceType Object getInitialValue FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the instance of an AttributeLink or LinkEnd.
     *
     * @param handle the attribute link or link end
     * @return initial value
     */ ReferenceType Object getInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Instances associated with a Classifier.  
     *
     * @param handle the classifier
     * @return Collection
     */ ReferenceType Collection getInstances FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the collection of States for a ClassifierInState.
     *
     * @param handle the classifierInState
     * @return Collection
     */ ReferenceType Collection getInStates FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Interaction for a Message.
     *
     * @param handle the Message
     * @return the interaction
     */ ReferenceType Object getInteraction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Interactions belonging to a Collaboration.
     *
     * @param handle the Collaboration
     * @return Collection
     */ ReferenceType Collection getInteractions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the internalTransitions belonging to a State.
     *
     * @param handle the State
     * @return Collection
     */ ReferenceType Collection getInternalTransitions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the messages belonging to an Interaction, AssociationRole, or
     * Action.
     * 
     * @param handle
     *            the candidate element
     * @return Collection of Messages
     */ ReferenceType Collection getMessages FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Messages which are successors to the given Message.
     *
     * @param handle the message
     * @return Collection
     */ ReferenceType Collection getSuccessors FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Messages that are activated by the given Message.
     *
     * @param handle Message
     * @return the Collection of Messages
     */ ReferenceType Collection getActivatedMessages FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Messages received by the given ClassifierRole.
     *
     * @param handle the ClassifierRole
     * @return Collection
     */ ReferenceType Collection getReceivedMessages FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Messages sent by the given ClassifierRole.
     *
     * @param handle the ClassifierRole
     * @return Collection
     */ ReferenceType Collection getSentMessages FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the containing Model of a ModelElement.
     * <p>
     * If no containing Model can be found, the outermost containing
     * ModelElement is returned (which could be the original element itself if
     * it has no owner).
     * <p>
     * TODO: This currently (MDR implementation) returns the innermost
     * containing Model, but there are circumstances where it is used that
     * really expect the outermost containing Model or root package (e.g. where
     * it's being used to test if two elements are from disjoint namespace
     * hierarchies). This probably needs to be split into two separate methods
     * with different semantics. Note also that some code uses
     * org.argouml.kernel.Project#getRoot() to navigate down from the top
     * instead of up from the bottom. We need to use a consistent algorithm for
     * this. - tfm 20070724
     * 
     * @param handle
     *                to the model element.
     * @return model for the model element.
     */ ReferenceType Object getModel FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return a collection of all Elements which have no owner (ie top level
     * elements).
     * <p>
     * For ArgoUML created models this will typically just return a single 
     * top level Model model element, but models created by other tools may
     * have other top level elements.
     */ ReferenceType Collection getRootElements MethodDeclaration /**
     * Get the ModelElement which is one of:
     * <ul>
     * <li>the importElement of an ElementImport </li>
     * <li>the modelElement of a TaggedValue</li>
     * <li>the modelElement of a TemplateParameter</li>
     * <ul>
     * 
     * @param handle
     *            an Element Import or TaggedValue.
     * @return the model element
     */ ReferenceType Object getModelElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the Multiplicity of an AssociationEnd, ClassifierRole,
     * StructuralFeature, or TagDefinition.
     * 
     * @param handle
     *            model element to retrieve from.
     * @return multiplicity
     */ ReferenceType Object getMultiplicity FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the Ranges from a Multiplicity.
     * 
     * @param handle
     *            multiplicity to retrieve from.
     * @return iterator containing ranges
     * @deprecated for 0.25.4 by tfmorris. Multiplicities in UML 2.x only have a
     *             single range.
     */ Annotation Deprecated ReferenceType Iterator getRanges FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the Comments which annotate a ModelElement.
     *
     * @param handle the ModelElement that we are getting the comments of
     * @return the Collection of Comments
     */ ReferenceType Collection getComments FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the ModelElements (annotatedElements) which are annotated by a
     * Comment.
     * 
     * @param handle
     *            the Comment that we are getting the model elements of
     * @return a Collection of ModelElements
     */ ReferenceType Collection getAnnotatedElements FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the communicationConnection of a Message.
     * 
     * @param handle
     *            the Message for which to find the communicationConnection
     * @return Message which is the communicationConnection or null
     */ ReferenceType Object getCommunicationConnection FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the communicationLink of a Stimulus.
     * 
     * @param handle
     *            the Stimulus for which to find the communicationLink
     * @return Link which is the communicationLink or null if none.
     */ ReferenceType Object getCommunicationLink FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the collaborations for a Classifier or Operation. This returns the
     * Collaborations which have the given Classifier or Operation as their
     * representedClassifier or representedOperation.
     * 
     * @param handle
     *            the model element that we are getting the collaborations of.
     * @return Collection of Collaborations
     */ ReferenceType Collection getCollaborations FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the componentInstance of an Instance.
     *
     * @param handle the Instance
     * @return the ComponentInstance
     */ ReferenceType Object getComponentInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the constrainingElements of a Collaboration.
     *
     * @param handle the Collaboration
     * @return Collection of ModelElements
     */ ReferenceType Collection getConstrainingElements FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the constrainedElements of a Constraint.
     *
     * @param handle the Constraint
     * @return List of ModelElements
     */ ReferenceType List getConstrainedElements FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Constraints for the given ModelElement.
     *
     * @param handle the ModelElement
     * @return the collection of all Constraints
     */ ReferenceType Collection getConstraints FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the container for the given modelelement. If you know the type of
     * ModelElement you are working with, you should use the appropriate more
     * specific function (e.g. getAssociation for an AssociationEnd).<p>
     * 
     * This is principally intended as a convenience function for generic code
     * that deals with a variety of element types that just wants a parent of
     * some type without really caring what it is.<p>
     * 
     * The container is the owner of the modelelement. It will be null for
     * elements that don't have an owner. All elements except for the root
     * element in a project should have an owner. The root element is always a
     * model.<p>
     * 
     * In the future, this function could return the container of Figs too.
     * 
     * @param handle
     *            is the base
     * @return Object
     */ ReferenceType Object getModelElementContainer FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all composite components of given ModelElement.
     * This is the inverse of getModelElementContainer and
     * that method will return handle for all elements in the
     * Collection.<p>
     * 
     * @param handle ModelElement for which to fetch components
     * @return collection of components contained by ModelElement
     */ ReferenceType List getModelElementContents FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all ModelElements associated with the given ModelElement
     * by a MOF level association (not an just an association in the user 
     * model, although it includes those too).<p>
     * 
     * This is useful for traversing the model to find elements which
     * are related in ANY way to the current element.
     * 
     * @param handle ModelElement for which to find associated elements
     * @return collection of elements associated with ModelElement
     */ ReferenceType List getModelElementAssociated FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the CompositeState or Component that is the container of the
     * given StateVertex or ElementResidence, respectively.<p>
     * 
     * ElementResidence support is new in UML 1.4 (was
     * getImplementationLocation)
     * 
     * @param handle
     *            the StateVertex or ElementResidence
     * @return the CompositeState or Component that is the container
     */ ReferenceType Object getContainer FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all ModelElements contained in a Partition.
     *
     * @param handle the Partition
     * @return Collection of ModelElements
     */ ReferenceType Collection getContents FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the context of a StateMachine or Interaction.
     * 
     * @param handle
     *            the StateMachine or the Interaction
     * @return the ModelElement representing the context, or null if no context
     *         set.
     */ ReferenceType Object getContext FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the BehavioralFeatures which are contexts for a given Signal (ie
     * have this Signal as a raisedSignal).
     * 
     * @param handle
     *            the Signal
     * @return Collection of BehavioralFeatures
     */ ReferenceType Collection getContexts FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the CreateActions that create/instantiate the given Classifier.
     * 
     * @param handle
     *            the Classifier
     * @return a collection of CreateActions
     */ ReferenceType Collection getCreateActions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the defaultValue of a Parameter.
     *
     * @param handle the Parameter that we are getting the defaultvalue from
     * @return an Expression representing the default value
     */ ReferenceType Object getDefaultValue FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get deferrable events of a State.
     *
     * @param handle the state that we are getting the deferrable event from
     * @return Collection of Events
     */ ReferenceType Collection getDeferrableEvents FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all Components that are deployed inside the given Node.
     * 
     * @param handle the given Node
     * @return Collection of Components
     */ ReferenceType Collection getDeployedComponents FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all Nodes in which the given Component is deployed.
     * 
     * @param handle the Componet
     * @return Collection of Nodes
     */ ReferenceType Collection getDeploymentLocations FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the discriminator for a Generalization.
     * 
     * @param handle
     *            the Generalization
     * @return the discriminator a String
     * @deprecated for 0.25.4 by tfmorris. Discriminators have been removed from
     *             UML 2.x.
     */ Annotation Deprecated ReferenceType Object getDiscriminator FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the dispatchAction of a Stimulus.
     *
     * @param handle the stimulus that we are getting the dispatchaction of
     * @return the dispatchaction (or null)
     */ ReferenceType Object getDispatchAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Action which is the doActivity for the given State.
     *
     * @param handle the state
     * @return the do activity
     */ ReferenceType Object getDoActivity FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The collection of imported elements of the given package.
     *
     * @param pack package to retrieve from.
     * @return A Collection with the imported elements.
     */ ReferenceType Collection getImportedElements FormalParameter ReferenceType Object pack MethodDeclaration /**
     * Return the imported element from a ElementImport.
     * 
     * @param elementImport the given ElementImport
     * @return the ModelElement that was imported
     */ ReferenceType Object getImportedElement FormalParameter ReferenceType Object elementImport MethodDeclaration /**
     * Return the Links of a given Association.
     *
     * @param handle the Association
     * @return the collection of Links
     */ ReferenceType Collection getLinks FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the LinkEnds of a given Instance or AssociationEnd.
     *
     * @param handle the candidate
     * @return the collection of LinkEnds
     */ ReferenceType Collection getLinkEnds FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the location of an ExtensionPoint.
     *
     * @param handle ExtensionPoint
     * @return the location
     */ ReferenceType String getLocation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Methods of an Operation.
     *
     * @param handle the operation that we are getting the methods of
     * @return Collection of Methods
     */ ReferenceType Collection getMethods FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the namespace of a ModelElement.  Note: the namespace/ownedElement
     * association is a composition, so ModelElements which are owned by other
     * elements will have a null namespace attribute.
     *
     * @param handle the model element that we are getting the namespace of
     * @return the namespace (or null)
     */ ReferenceType Object getNamespace FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the node instance of a ComponentInstance.
     *
     * @param handle the model element that we are getting the node instance of
     * @return the node instance
     */ ReferenceType Object getNodeInstance FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get ObjectFlowStates which have this Classifier as their type.
     *
     * @param handle the classifier
     * @return collection of ObjectFlowStates
     */ ReferenceType Collection getObjectFlowStates FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the Operation of a CallAction or CallEvent.
     *
     * @param handle the model element that we are getting the operation of
     * @return the Operation
     */ ReferenceType Object getOperation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the CallEvents which are occurrences of an Operation.
     * 
     * @param handle the Opration
     * @return Collection of CallEvents
     */ ReferenceType Collection getOccurrences FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the list of Operations owned by a Classifier.
     *
     * @param handle classifier to examine.
     * @return list of operations.
     */ ReferenceType List getOperations FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the list of operations and receptions owned by a Classifier.
     *
     * @param handle classifier to examine.
     * @return list of operations.
     */ ReferenceType List getOperationsAndReceptions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the ""opposite"" end of an AssociationEnd.  This just 
     * calls {@link #getNextEnd(Object)}, so for an Association
     * with more than two AssociationEnds, this returns the nextEnd in 
     * sequence.
     *
     * @param handle the association end
     * @return Object the opposite end.
     * @deprecated for 0.25.2 by tfmorris - use {@link #getNextEnd(Object)}
     */ Annotation Deprecated ReferenceType Object getOppositeEnd FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the next AssociationEnd in the owning Association. If this is the
     * last AssociationEnd, the search will wrap and return the first end so
     * that all AssociationEnds may be visited by repeatedly calling this
     * method.
     * 
     * @param handle
     *            the AssociationEnd
     * @return the next AssociationEnd in sequence
     */ ReferenceType Object getNextEnd FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get ordering of an association end.
     *
     * @param handle association end to retrieve from
     * @return ordering
     */ ReferenceType Object getOrdering FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the collection of Transitions outgoing from the given 
     * stateVertex.
     *
     * @param handle statevertex
     * @return Collection
     */ ReferenceType Collection getOutgoings FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the collection of Associations Ends connected to this association 
     * end.
     *
     * @param handle association end to start from
     * @return A Collection with all connected association ends.
     */ ReferenceType Collection getOtherAssociationEnds FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the collection of Link Ends connected to this link end.
     *
     * @param handle link end to start from
     * @return A Collection with all connected link ends.
     */ ReferenceType Collection getOtherLinkEnds FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The collection of owned elements of the the namespace.
     *
     * @param handle namespace to retrieve from.
     * @return A Collection with the owned elements.
     */ ReferenceType Collection getOwnedElements FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the owner scope of a feature.
     * 
     * @param handle
     *            feature
     * @return owner scope
     * @deprecated for 0.25.4 by tfmorris. Use {@link #isStatic(Object)}. The
     *             ScopeKind with only two enumerated values has been replaced
     *             by a boolean in UML 2.x.
     */ Annotation Deprecated ReferenceType Object getOwnerScope FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the powertype of a generalization.
     *
     * @param handle generalization
     * @return powertype
     */ ReferenceType Object getPowertype FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the powertype ranges of a classifier.
     *
     * @param handle classifier to retrieve from
     * @return collection of poertype ranges
     */ ReferenceType Collection getPowertypeRanges FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the predecessors of a message.
     *
     * @param handle message to retrieve from
     * @return collection of predecessors
     */ ReferenceType Collection getPredecessors FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the qualified attributes of an association end.
     *
     * @param handle association end to retrieve from
     * @return List of qualifiers.
     */ ReferenceType List getQualifiers FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Determine if the passed parameter has a RETURN direction kind.
     * 
     * TODO: This is a duplicate of {@link #isReturn(Object)}
     * 
     * @return true if it is a return direction kind
     * @param handle the parameter
     */ BasicType boolean hasReturnParameterDirectionKind FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Package that is connected by the given ElementImport.
     *
     * @param handle the ElementImport
     * @return the Package
     */ ReferenceType Object getPackage FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the parameter of a TemplateParameter.
     * 
     * @param handle
     *            the TemplateParameter
     * @return parameter the ModelElement which provides the type and other info
     *         for the given parameter.
     */ ReferenceType Object getParameter FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get a specific parameter of a Behavioral Feature or Event.
     *
     * @param handle behavioral feature to retrieve from
     * @param n parameter number
     * @return parameter.
     */ ReferenceType Object getParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int n MethodDeclaration /**
     * Get the parameters of a Behavioral Feature, Event, or Object Flow State,
     * or all the parameters which have a given classifier as their type. The
     * collection returned for the first two parameter types (Behavioral Feature
     * and Event) is an ordered List, while the latter two return an unordered
     * collection.
     * 
     * @param handle
     *            operation to retrieve from
     * @return A Collection with the parameters.
     */ ReferenceType Collection getParameters FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get an ordered list of parameters of a Behavioral Feature
     * or Event.
     * 
     * @param handle
     *            operation to retrieve from
     * @return List of parameters.
     */ ReferenceType List getParametersList FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the parent of a generalization.
     * 
     * @param handle
     *            generalization.
     * @return the parent.
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getGeneral(Object)} which
     *             matches the UML 2.x terminology.
     */ Annotation Deprecated ReferenceType Object getParent FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the general end of a generalization. This was getParent in UML 1.x.
     * 
     * @param handle
     *            generalization.
     * @return the general end.
     * @since 0.25.4
     */ ReferenceType Object getGeneral FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the raised signals of an operation.
     *
     * @param handle the operation
     * @return raised signals
     */ ReferenceType Collection getRaisedSignals FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the receptions of a signal.
     *
     * @param handle the signal
     * @return receptions
     */ ReferenceType Collection getReceptions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the recurrence iteration expression of an action.
     *
     * @param handle the action.
     * @return the recurrence
     */ ReferenceType Object getRecurrence FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the represented classifier of a collaboration.
     *
     * @param handle the collaboration
     * @return represented classifier
     */ ReferenceType Object getRepresentedClassifier FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the represented operation of a collaboration.
     *
     * @param handle the collaboration
     * @return represented operation
     */ ReferenceType Object getRepresentedOperation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the script belonging to a given action.
     *
     * @param handle the action
     * @return the script
     */ ReferenceType Object getScript FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the sender object of a stimulus or a message.
     *
     * @param handle the stimulus or message
     * @return the sender
     */ ReferenceType Object getSender FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Signal of a SendAction, SignalEvent or Reception.
     *
     * @param handle the object
     * @return the signal
     */ ReferenceType Object getSignal FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the resident element.
     *
     * @param handle the ElementResidence
     * @return the resident ModelElement
     */ ReferenceType Object getResident FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the collection of ElementResidences for a given Component.
     *
     * @param handle the Component
     * @return the Collection of ElementResidence
     */ ReferenceType Collection getResidentElements FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return a collection with all residents belonging to the given
     * Component, ComponentInstance or NodeInstance.
     *
     * @param handle the Component, NodeInstance, ComponentInstance
     * @return the Collection of resident: <ul><li> 
     *          ComponentInstances (in case of a NodeInstance)<li>
     *          Instances (in case of a ComponentInstance)<li>
     *          ModelElements (in case of a Component)</ul>
     */ ReferenceType Collection getResidents FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the source for a given transition.
     *
     * @param handle the transition
     * @return Object (MStateVertex)
     */ ReferenceType Object getSource FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the source for some given flow.
     *
     * @param handle the flow
     * @return Collection
     */ ReferenceType Collection getSources FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the sourceflows of a model element.
     *
     * @param handle the model element
     * @return a collection of sourceflows
     */ ReferenceType Collection getSourceFlows FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The collection of Specializations from a GeneralizableElement.
     *
     * @param handle GeneralizableElement to retrieve from.
     * @return Collection of Specializations.
     */ ReferenceType Collection getSpecializations FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the state machine belonging to some given state or transition
     * If you need to find the StateMachine for an internal transition,
     * or for ANY state,
     * use StateMachinesHelper.getStateMachine() instead.
     *
     * @param handle the state or transition
     * @return Object
     */ ReferenceType Object getStateMachine FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the state belonging to some given transition.
     *
     * @param handle the transition
     * @return Object
     */ ReferenceType Object getState FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the states from a deferable event.
     *
     * @param handle the event
     * @return Object
     */ ReferenceType Collection getStates FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the stereotypes belonging to some given model element.<p>
     *
     * Note! For UML version 1.3 there can only be one stereotype
     * per model element. This means that the returned Collection will
     * only have zero or one elements. Don't write any code that rely
     * on this! Consider it to be a Collection with zero or more
     * elements as it will be in later UML versions.
     *
     * @param handle The model element.
     * @return a Collection with all stereotypes or empty if none.
     */ ReferenceType Collection getStereotypes FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the stimuli belonging to some given link.
     *
     * @param handle the link
     * @return Object
     */ ReferenceType Collection getStimuli FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Stimuli that are received by the given Instance.
     *
     * @param handle the Instance
     * @return the collection of stimuli
     */ ReferenceType Collection getReceivedStimuli FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Stimuli that are send by the given Instance.
     *
     * @param handle the Instance
     * @return the collection of stimuli
     */ ReferenceType Collection getSentStimuli FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all subvertices belonging to the given
     * CompositeState.
     *
     * @param handle the composite state
     * @return Collection
     */ ReferenceType Collection getSubvertices FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the submachine of a submachine state.
     *
     * @param handle the submachine state
     * @return submachine
     */ ReferenceType Object getSubmachine FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the submachine of a submachine state.
     *
     * @param handle the submachine state
     * @return submachine
     */ ReferenceType Collection getSubmachineStates FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The collection of SupplierDependencies from a ModelElement.
     *
     * @param handle model element.
     * @return A Collection with the supplier dependencies.
     */ ReferenceType Collection getSupplierDependencies FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The top of a state machine.
     *
     * @param handle the state machine
     * @return the top
     */ ReferenceType Object getTop FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the transition of a guard or action.
     *
     * @param handle the guard or action
     * @return the transition
     */ ReferenceType Object getTransition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the trigger of a transition.
     *
     * @param handle the transition
     * @return the trigger
     */ ReferenceType Object getTrigger FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The type of a StructuralFeature, AssociationEnd, Parameter,
     * ObjectFlowState, TagDefinition, TaggedValue or ClassifierInState.
     *
     * @param handle the StructuralFeature, AssociationEnd, Parameter,
     *  ObjectFlowState, TagDefinition, TaggedValue or ClassifierInState
     * @return the type
     */ ReferenceType Object getType FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all TaggedValues typed by a TagDefinition
     *
     * @param handle the TagDefinition
     * @return collection of TaggedValues
     */ ReferenceType Collection getTypedValues FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the target of a Transition.
     *
     * @param handle the transition
     * @return Object
     */ ReferenceType Object getTarget FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the target scope of a ModelElement.
     * 
     * @param handle
     *            the model element
     * @return Object
     * @deprecated for 0.25.4 by tmorris. This has been removed from UML 2.x and
     *             should no longer be used.
     */ Annotation Deprecated ReferenceType Object getTargetScope FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the targetflows of a model element.
     *
     * @param handle the model element
     * @return a collection of targetflows
     */ ReferenceType Collection getTargetFlows FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the list of TemplateParameters for a ModelElement that is
     * parameterized.
     * 
     * @param handle
     *            the ModelElement
     * @return a list of TemplateParameters
     */ ReferenceType List getTemplateParameters FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the defaultElement for a TemplateParameter.
     * @param handle the TemplateParameter
     * @return the default ModelElement or null
     */ ReferenceType Object getDefaultElement FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the ModelElement that owns a TemplateParameter.
     * @param handle the TemplateParameter
     * @return the containing ModelElement or null if none
     */ ReferenceType Object getTemplate FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Binding associated with a TemplateArgument.
     * @param handle the TemplateArgument
     * @return the Binding
     */ ReferenceType Object getBinding FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the list of TemplateArguments associated with a Binding.
     * 
     * @param handle the binding
     * @return the list of TemplateArguments
     */ ReferenceType List getArguments FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the upper bound of the multiplicity of the given element
     * (AssociationEnd, Multiplicity or MultiplicityRange). A value of -1
     * corresponds to the special UML value 'unlimited' represented graphically
     * by '*'.
     * 
     * @param handle
     *            is the model element
     * @return int
     */ BasicType int getUpper FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the UseCase of an ExtensionPoint.
     *
     * @param handle the ExtensionPoint
     * @return a UseCase
     */ ReferenceType Object getUseCase FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the lower bound of the multiplicity of the given element
     * (AssociationEnd, Multiplicity or MultiplicityRange).
     *
     * @param handle the model element
     * @return int
     */ BasicType int getLower FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the transitions belonging to the given handle. The handle can be
     * a StateMachine, CompositeState, or Event. For a StateMachine, the
     * Transitions transitions belonging to StateMachine are returned. For a
     * CompositeState, its internalTransitions are returned. For an Event, all
     * transitions triggered by this event will be given back.
     * 
     * @param handle
     *            a StateMachine, CompositeState, or Event
     * @return Collection of Transitions
     */ ReferenceType Collection getTransitions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all StructuralFeatures of a given Classifier.
     *
     * @param handle the classifier to query.
     * @return Collection of StructuralFeatures
     */ ReferenceType List getStructuralFeatures FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the Specification of a given Reception or Operation.
     * If you need the Specification of a Method, use the method
     * in CoreHelper which returns an object instead of a string.
     * @see CoreHelper#getSpecification(Object)
     *
     * @param handle the Reception or Operation
     * @return String the Specification
     */ ReferenceType String getSpecification FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return specifications for an AssociationEnd or for a Classifier it
     * returns all Interfaces of which this class is a realization.<p>
     * 
     * When returning Interfaces it follows all Abstraction depencies
     * which have the ""realize"" Stereotype and returns the Interfaces
     * at the far end.
     * 
     * @param handle
     *            the class you want to have the interfaces for
     * @return a collection of the Interfaces
     */ ReferenceType Collection getSpecifications FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the suppliers of a Dependency.
     *
     * @param handle the dependency
     * @return a collection of the suppliers
     */ ReferenceType Collection getSuppliers FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Returns the action belonging to some message or argument.
     *
     * @param handle the message or argument.
     * @return the action
     */ ReferenceType Object getAction FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the list of Actions in an ActionSequence.
     *
     * @param handle the ActionSequence.
     * @return the List of Actions
     */ ReferenceType List getActions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the ActionSequence, if any, that owns this Action.
     *
     * @param handle the Action.
     * @return the ActionSequence or null
     */ ReferenceType Object getActionSequence FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the activator belonging to some message.
     *
     * @param handle the message
     * @return the activator
     */ ReferenceType Object getActivator FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the activityGraph of the given partition.
     * 
     * @param handle the partition
     * @return the activityGraph
     */ ReferenceType Object getActivityGraph FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the actual arguments for a given action.
     *
     * @param handle the action
     * @return the actual arguments
     */ ReferenceType List getActualArguments FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return an addition for a given include.
     *
     * @param handle the include
     * @return the addition
     */ ReferenceType Object getAddition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the AggregationKind of a given AssociationEnd.
     *
     * @param handle the AssociationEnd
     * @return the AggregationKind
     */ ReferenceType Object getAggregation FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the alias of an ElementImport.
     * 
     * @param handle the ElementImport
     * @return the alias Name
     */ ReferenceType String getAlias FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return all associated classes (classes connected by an
     * Association) for some given classifier.
     * Returns an empty collection if the given argument handle is not
     * a classifier.  The given parameter is included in the returned
     * collection if it has a self-referencing association.
     *
     * @param handle the classifier
     * @return Collection
     */ ReferenceType Collection getAssociatedClasses FormalParameter ReferenceType Object handle MethodDeclaration /**
     * The name of a model element or some diagram part.
     *
     * @param handle that points out the object.
     * @return the name
     */ ReferenceType String getName FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the owner of a Feature, TagDefinition, Attribute, or
     * TemplateParameter. For a qualifier Attribute of an AssociationEnd, it
     * returns the owning AssociationEnd. For a TemplateParameter ot returns the
     * owning template ModelElement.
     * 
     * @param handle
     *            the Feature, TagDefinition, Attribute, or TemplateParameter
     * @return the owner
     */ ReferenceType Object getOwner FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the tag of a tagged value, i.e. the name 
     * of the TagDefinition which is the type of the given TaggedValue.
     *
     * @param handle the given tagged value
     * @return The found tag as a String.
     */ ReferenceType String getTag FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the tagged values iterator of a model element.
     *
     * @param handle The tagged values belong to this.
     * @return The tagged values iterator
     */ ReferenceType Iterator getTaggedValues FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the TaggedValues of a ModelElement.
     *
     * @param handle the ModelElement
     * @return the Collection of TaggedValues
     */ ReferenceType Collection getTaggedValuesCollection FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the tagged value with a specific tag.
     *
     * @param handle The model element the tagged value belongs to.
     * @param name The tag name.
     * @return The found tag, null if not found
     */ ReferenceType Object getTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name MethodDeclaration /**
     * Return the value of a tagged value with a specific tag.
     *
     * @param handle The model element that the tagged value belongs to.
     * @param name The tag name.
     * @return The value of the found tag. """" if not found.
     */ ReferenceType String getTaggedValueValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name MethodDeclaration /**
     * Return the key (tag) of some tagged value.
     *
     * TODO: This does exactly the same as getTag(Object). Remove one of them.
     *
     * @param handle The tagged value.
     * @return The found value as String.
     */ ReferenceType String getTagOfTag FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the value of some UML Object.
     *
     * @param handle Object
     * @return Object the exact type depends on the handle type
     * (String, Expression, Instance, TaggedValue...)
     */ ReferenceType Object getValue FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the value of some tagged value.
     *
     * @param handle The tagged value.
     * @return The found value as String.
     */ ReferenceType String getValueOfTag FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the referenceValue collection for a taggedValue.
     * 
     * @param taggedValue the tagged value to read from
     * @return collection of referenceValues for the given TaggedValue
     */ ReferenceType Collection getReferenceValue FormalParameter ReferenceType Object taggedValue MethodDeclaration /**
     * Return the dataValue collection for a taggedValue.
     * 
     * @param taggedValue taggedValue the tagged value to read from
     * @return a collection of dataValues for the given TaggedValue
     */ ReferenceType Collection getDataValue FormalParameter ReferenceType Object taggedValue MethodDeclaration /**
     * Return the ID of this element.
     * 
     * This is guaranteed to always return a value, but the
     * uniqueness and stability of the ID may vary by implementation.
     * The original implementation guaranteed universally unique
     * (across time and space) identifiers which were also stable
     * across reloads of an XMI file.
     *
     * @param element ModelElement to retrieve ID for.
     * @return UUID
     */ ReferenceType String getUUID FormalParameter ReferenceType Object element MethodDeclaration /**
     * Return the visibility of this element.
     *
     * @param handle a model element
     * @return visibility
     */ ReferenceType Object getVisibility FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Get the partitions from a container.
     *
     * @param container The container.
     * @return The partitions (a collection).
     */ ReferenceType Collection getPartitions FormalParameter ReferenceType Object container MethodDeclaration /**
     *  Return the StubState's referenceState.
     *  @param o Stub State
     *  @return referenced state
     */ ReferenceType String getReferenceState FormalParameter ReferenceType Object o MethodDeclaration /**
     * Return a named object in the given object by calling it's lookup method.
     *
     * @param handle the object that we search through
     * @param name of the model element
     * @return found object, null otherwise
     */ ReferenceType Object lookupIn FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name MethodDeclaration /**
     * Return the name of the UML Model class.<p>
     *
     * @param handle The object to check.
     * @return classname of modelelement
     */ ReferenceType String getUMLClassName FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Recognizer for Arguments.
     *
     * @param modelElement candidate
     * @return true if an argument.
     */ BasicType boolean isAArgument FormalParameter ReferenceType Object modelElement MethodDeclaration /**
     * Return a tooltip that should be shown for the given model element.<p>
     *
     * @param modelElement The model element for which to gerneate a tip
     * @return the tip
     */ ReferenceType String getTipString FormalParameter ReferenceType Object modelElement MethodDeclaration /**
     * Return a textual representation of the given model element.<p>
     * All implementations should return the same value as would be expected
     * from the toString() method of the NSUML class MModelElement.
     *
     * @param modelElement The model element for which to convert to text
     * @return the textual representation of the model element
     */ ReferenceType String toString FormalParameter ReferenceType Object modelElement MethodDeclaration /**
     * @param target The TimeEvent.
     * @return TimeExpression
     */ ReferenceType Object getWhen FormalParameter ReferenceType Object target MethodDeclaration /**
     * @param target The ChangeEvent.
     * @return BooleanExpression
     */ ReferenceType Object getChangeExpression FormalParameter ReferenceType Object target MethodDeclaration /**
     * Recognizer for TagDefinition. Implemented only in UML 1.4+ metamodels.
     *
     * @param handle candidate
     * @return true if handle is a TagDefinition
     */ BasicType boolean isATagDefinition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the TagDefinitions for a StereoType.
     *
     * @param handle Stereotype to fetch TagDefinitions for
     * @return collection of TagDefinitions
     */ ReferenceType Collection getTagDefinitions FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the TagDefinition for a TaggedValue.
     *
     * @param handle TaggedValue to return TagDefinition for
     * @return TagDefinition for given element
     */ ReferenceType Object getTagDefinition FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the value of the isSynch attribute on an ObjectFlowState
     * @param handle the ObjectFlowState
     * @return true if this ObjectFlowState is a synch state.
     */ BasicType boolean isSynch FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the value of the isStatic attribute. This replaces the ScopeKind
     * enumeration of UML 1.x and is equivalent to a ScopeKind of CLASSIFIER.
     * 
     * @param handle
     *            the Feature
     * @return true if the element is static
     * @since 0.25.4
     */ BasicType boolean isStatic FormalParameter ReferenceType Object handle MethodDeclaration /**
     * Return the value of the isReadOnly attribute. This replaces the
     * ChangeableKind enumeration of UML 1.x and is equivalent to a
     * ChangeableKind of FROZEN. The UML 1.x enum of ADD_ONLY has been removed
     * from UML 2.x.
     * 
     * @param handle
     *            the StructuralFeature
     * @return true if the element is readonly
     * @since 0.25.4
     */ BasicType boolean isReadOnly FormalParameter ReferenceType Object handle",0
529,529,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration Modifier public final /**
 * A Mode to interpret user input while creating a usage edge.
 * The usage can connect any model elements including those represented
 * by edges as well as nodes.
 */ ModeCreateUsage MethodDeclaration Modifier final protected ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getUsage getMetaTypes ReferenceType ModeCreateDependency",0
898,898,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Namespace->Classifer or Package.
 * Generates only package and classifier children from a namespace parent.
 *
 * @since 0.15.2
 */ GoNamespaceToClassifierAndPackage MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.namespace.classifer-or-package"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elements MethodInvocation Model MethodInvocation MemberReference parent getOwnedElements MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation elements hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation elements next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation result MemberReference element add End End ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",1
1407,1407,,0
714,714,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Image Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import org.apache.log4j.Logger Import org.argouml.kernel.Project Import org.argouml.model.AddAssociationEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * A Fig designed to be the child of some FigNode or FigEdge to display the
 * stereotypes of the model element represented by the parent Fig.
 * Currently display of multiple stereotypes are stacked one on top of the
 * each enclosed by guillemets.<p>
 * 
 * The minimum width of this fig is the largest minimum width of its child
 * figs.<p>
 * 
 * The minimum height of this fig is the total minimum height of its child
 * figs.<p>
 * 
 * TODO: Allow for UML2 style display where all stereotypes are displayed in
 * the same guillemet pair and are delimited by commas. The style should be
 * changeable by calling getOrientation(Orientation). The swidget Orientation
 * class can be used for this.
 * @author Bob Tarling
 */ FigStereotypesCompartment FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1696363445893406130L FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType FigStereotypesCompartment getLogger FieldDeclaration /**
     * One UML keyword is allowed. These are not strictly stereotypes but are
     * displayed as such. e.g. &lt;&lt;interface&gt;&gt;
     */ Modifier private ReferenceType String VariableDeclarator keyword FieldDeclaration Modifier private BasicType int VariableDeclarator stereotypeCount Literal 0 FieldDeclaration Modifier private BasicType boolean VariableDeclarator hidingStereotypesWithIcon Literal false ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param x x
     * @param y y
     * @param w width
     * @param h height
     */ FigStereotypesCompartment FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h StatementExpression MethodInvocation Literal false setFilled MethodDeclaration Modifier public Annotation Override setOwner FormalParameter ReferenceType Object own IfStatement BinaryOperation != MemberReference own Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference own setOwner StatementExpression MethodInvocation populate StatementExpression MethodInvocation Model MethodInvocation This MemberReference own Literal ""stereotype"" addModelEventListener getPump End MethodDeclaration Modifier public Annotation Override removeFromDiagram StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getOwner Literal ""stereotype"" removeModelEventListener getPump MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent event IfStatement BinaryOperation instanceof MemberReference event ReferenceType AddAssociationEvent BlockStatement LocalVariableDeclaration ReferenceType AddAssociationEvent VariableDeclarator aae Cast ReferenceType AddAssociationEvent MemberReference event IfStatement MethodInvocation event MethodInvocation Literal ""stereotype"" equals getPropertyName BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation aae getChangedValue IfStatement BinaryOperation == MethodInvocation MemberReference stereotype findFig Literal null BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator bigPort This MethodInvocation getBigPort LocalVariableDeclaration ReferenceType FigText VariableDeclarator stereotypeTextFig ClassCreator ReferenceType FigStereotype BinaryOperation + MethodInvocation bigPort getX Literal 1 BinaryOperation + BinaryOperation + MethodInvocation bigPort getY Literal 1 BinaryOperation * MemberReference stereotypeCount MemberReference FigNodeModelElement ROWHEIGHT Literal 0 BinaryOperation - MemberReference FigNodeModelElement ROWHEIGHT Literal 2 MemberReference bigPort MemberReference stereotype StatementExpression MethodInvocation stereotypeTextFig MemberReference FigText JUSTIFY_CENTER setJustification StatementExpression MethodInvocation stereotypeTextFig Literal false setEditable StatementExpression MethodInvocation stereotypeTextFig MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade setText StatementExpression MethodInvocation stereotypeTextFig MemberReference stereotype setOwner StatementExpression MethodInvocation MemberReference stereotypeTextFig addFig StatementExpression MethodInvocation reorderStereotypeFigs StatementExpression MethodInvocation damage End BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unexpected property "" MethodInvocation event getPropertyName warn End End IfStatement BinaryOperation instanceof MemberReference event ReferenceType RemoveAssociationEvent BlockStatement IfStatement MethodInvocation event MethodInvocation Literal ""stereotype"" equals getPropertyName BlockStatement LocalVariableDeclaration ReferenceType RemoveAssociationEvent VariableDeclarator rae Cast ReferenceType RemoveAssociationEvent MemberReference event LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation rae getChangedValue LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation MemberReference stereotype findFig IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation MemberReference f removeFig StatementExpression MemberReference -- stereotypeCount End BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Unexpected property "" MethodInvocation event getPropertyName warn End End MethodDeclaration /**
     * Keep the Figs which are likely invisible at the end of the list.
     */ Modifier private reorderStereotypeFigs LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator allFigs MethodInvocation getFigs LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figsWithIcon ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figsWithOutIcon ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator others ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference allFigs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigStereotype BlockStatement LocalVariableDeclaration ReferenceType FigStereotype VariableDeclarator s Cast ReferenceType FigStereotype MemberReference f IfStatement BinaryOperation != MethodInvocation MemberReference s getIconForStereotype Literal null BlockStatement StatementExpression MethodInvocation figsWithIcon MemberReference s add BlockStatement StatementExpression MethodInvocation figsWithOutIcon MemberReference s add End BlockStatement StatementExpression MethodInvocation others MemberReference f add End End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator n ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig StatementExpression MethodInvocation n MemberReference others addAll StatementExpression MethodInvocation n MemberReference figsWithOutIcon addAll StatementExpression MethodInvocation n MemberReference figsWithIcon addAll StatementExpression MethodInvocation MemberReference n setFigs MethodDeclaration Modifier private ReferenceType Fig findFig FormalParameter ReferenceType Object stereotype ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getFigs MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MethodInvocation it next IfStatement BinaryOperation == MethodInvocation f getOwner MemberReference stereotype BlockStatement ReturnStatement MemberReference f End End ReturnStatement Literal null MethodDeclaration /**
     * TODO: This should become private and only called from setOwner
     *
     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#populate()
     */ Modifier public populate StatementExpression Assignment MemberReference stereotypeCount Literal 0 = LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Cannot populate the stereotype compartment "" Literal ""unless the parent has an owner."" debug ReturnStatement End IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Populating stereotypes compartment for "" MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade debug End LocalVariableDeclaration BasicType int VariableDeclarator acounter Literal 1 LocalVariableDeclaration ReferenceType Fig VariableDeclarator bigPort This MethodInvocation getBigPort LocalVariableDeclaration BasicType int VariableDeclarator xpos MethodInvocation bigPort getX LocalVariableDeclaration BasicType int VariableDeclarator ypos MethodInvocation bigPort getY LocalVariableDeclaration ReferenceType List VariableDeclarator figs MethodInvocation getFigs LocalVariableDeclaration ReferenceType CompartmentFigText VariableDeclarator stereotypeTextFig IfStatement BinaryOperation != MemberReference keyword Literal null BlockStatement IfStatement BinaryOperation <= MethodInvocation figs size MemberReference acounter BlockStatement StatementExpression MemberReference ++ stereotypeCount StatementExpression Assignment MemberReference stereotypeTextFig ClassCreator ReferenceType FigStereotype BinaryOperation + MemberReference xpos Literal 1 BinaryOperation + BinaryOperation + MemberReference ypos Literal 1 BinaryOperation * BinaryOperation - MemberReference acounter Literal 1 MemberReference FigNodeModelElement ROWHEIGHT Literal 0 BinaryOperation - MemberReference FigNodeModelElement ROWHEIGHT Literal 2 MemberReference bigPort Literal null = StatementExpression MethodInvocation stereotypeTextFig MemberReference FigText JUSTIFY_CENTER setJustification StatementExpression MethodInvocation stereotypeTextFig Literal false setEditable StatementExpression MethodInvocation MemberReference stereotypeTextFig addFig BlockStatement StatementExpression Assignment MemberReference stereotypeTextFig Cast ReferenceType CompartmentFigText MethodInvocation figs MemberReference acounter get = End StatementExpression MethodInvocation stereotypeTextFig MemberReference keyword setText StatementExpression MemberReference ++ acounter End LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereos MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade IfStatement BinaryOperation != MemberReference stereos Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation stereos iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation iter next IfStatement BinaryOperation <= MethodInvocation figs size MemberReference acounter BlockStatement StatementExpression MemberReference ++ stereotypeCount StatementExpression Assignment MemberReference stereotypeTextFig ClassCreator ReferenceType FigStereotype BinaryOperation + MemberReference xpos Literal 1 BinaryOperation + BinaryOperation + MemberReference ypos Literal 1 BinaryOperation * BinaryOperation - MemberReference acounter Literal 1 MemberReference FigNodeModelElement ROWHEIGHT Literal 0 BinaryOperation - MemberReference FigNodeModelElement ROWHEIGHT Literal 2 MemberReference bigPort MemberReference stereotype = StatementExpression MethodInvocation stereotypeTextFig MemberReference FigText JUSTIFY_CENTER setJustification StatementExpression MethodInvocation stereotypeTextFig Literal false setEditable StatementExpression MethodInvocation MemberReference stereotypeTextFig addFig BlockStatement StatementExpression Assignment MemberReference stereotypeTextFig Cast ReferenceType CompartmentFigText MethodInvocation figs MemberReference acounter get = End StatementExpression MethodInvocation stereotypeTextFig MemberReference stereotype setOwner StatementExpression MemberReference ++ acounter End IfStatement BinaryOperation > MethodInvocation figs size MemberReference acounter BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation figs size Literal 1 BinaryOperation >= MemberReference i MemberReference acounter MemberReference -- i BlockStatement StatementExpression MethodInvocation Cast ReferenceType Fig MethodInvocation figs MemberReference i get removeFig End End StatementExpression MethodInvocation reorderStereotypeFigs StatementExpression MethodInvocation updateHiddenStereotypes End MethodDeclaration Modifier private updateHiddenStereotypes LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs MethodInvocation getFigs ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigStereotype BlockStatement LocalVariableDeclaration ReferenceType FigStereotype VariableDeclarator fs Cast ReferenceType FigStereotype MemberReference f StatementExpression MethodInvocation fs BinaryOperation || BinaryOperation == MethodInvocation MemberReference fs getIconForStereotype Literal null MethodInvocation ! isHidingStereotypesWithIcon setVisible End End MethodDeclaration Modifier private ReferenceType Image getIconForStereotype FormalParameter ReferenceType FigStereotype fs LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation getProject IfStatement BinaryOperation == MemberReference project Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""getProject() returned null"" warn ReturnStatement Literal null End ReturnStatement MethodInvocation project MethodInvocation getFigNodeStrategy MethodInvocation MethodInvocation fs getOwner getIconForStereotype getProfileConfiguration MethodDeclaration Modifier protected Annotation Override setBoundsImpl FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig LocalVariableDeclaration BasicType int VariableDeclarator yy MemberReference y LocalVariableDeclaration ReferenceType Iterator VariableDeclarator figs MethodInvocation iterator WhileStatement MethodInvocation figs hasNext BlockStatement StatementExpression Assignment MemberReference fig Cast ReferenceType Fig MethodInvocation figs next = IfStatement BinaryOperation != MemberReference fig MethodInvocation getBigPort BlockStatement StatementExpression MethodInvocation fig BinaryOperation + MemberReference x Literal 1 BinaryOperation + MemberReference yy Literal 1 BinaryOperation - MemberReference w Literal 2 MethodInvocation fig MemberReference height getMinimumSize setBounds StatementExpression Assignment MemberReference yy MethodInvocation fig MemberReference height getMinimumSize += End End StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation calcBounds MethodDeclaration /**
     * Allows a parent Fig to specify some keyword text to display amongst the
     * stereotypes.
     * An example of this usage is to display &lt;&lt;interface&gt;&gt;
     * on FigInterface.
     * @param word the text of the pseudo stereotype
     */ Modifier public setKeyword FormalParameter ReferenceType String word StatementExpression Assignment MemberReference keyword MemberReference word = MethodDeclaration Modifier protected createModelElement MethodDeclaration /**
     * @return true if textual stereotypes are being hidden in preference to
     *         displaying icon.
     */ Modifier public BasicType boolean isHidingStereotypesWithIcon ReturnStatement MemberReference hidingStereotypesWithIcon MethodDeclaration /**
     * Turn on/off textual stereotype display in preference to icon.
     * 
     * @param hidingStereotypesWithIcon true to hide textual stereotypes and
     *                show icon instead.
     */ Modifier public setHidingStereotypesWithIcon FormalParameter BasicType boolean hidingStereotypesWithIcon StatementExpression Assignment This MemberReference hidingStereotypesWithIcon MemberReference hidingStereotypesWithIcon = StatementExpression MethodInvocation updateHiddenStereotypes ReferenceType FigCompartment",0
983,983,,1
1456,1456,,0
1029,1029,,1
539,539,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JMenu Import javax.swing.JPopupMenu Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.ActionRemoveModelElement Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLCompositeStateSubvertexList ClassDeclaration Modifier private PopupMenu ConstructorDeclaration Modifier public /**
         * Constructor for PopupMenu.
         */ PopupMenu StatementExpression SuperConstructorInvocation LocalVariableDeclaration ReferenceType JMenu VariableDeclarator pMenu ClassCreator ReferenceType JMenu StatementExpression MethodInvocation pMenu MethodInvocation Translator Literal ""button.new-pseudostate"" localize setText StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getChoice getPseudostateKind Literal ""label.pseudostate.choice"" add StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getInitial getPseudostateKind Literal ""label.pseudostate.initial"" add StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind Literal ""label.pseudostate.deephistory"" add StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getJunction getPseudostateKind Literal ""label.pseudostate.junction"" add StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getShallowHistory getPseudostateKind Literal ""label.pseudostate.shallowhistory"" add StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getFork getPseudostateKind Literal ""label.pseudostate.fork"" add StatementExpression MethodInvocation pMenu ClassCreator ReferenceType ActionNewPseudoState MethodInvocation Model MethodInvocation getJoin getPseudostateKind Literal ""label.pseudostate.join"" add LocalVariableDeclaration ReferenceType JMenu VariableDeclarator newMenu ClassCreator ReferenceType JMenu StatementExpression MethodInvocation newMenu MethodInvocation Translator Literal ""action.new"" localize setText StatementExpression MethodInvocation newMenu MemberReference pMenu add StatementExpression MethodInvocation newMenu MethodInvocation ActionNewSynchState getInstance add StatementExpression MethodInvocation ActionNewSynchState MethodInvocation MethodInvocation getTarget setTarget getInstance StatementExpression MethodInvocation newMenu MethodInvocation ActionNewStubState getInstance add StatementExpression MethodInvocation ActionNewStubState MethodInvocation MethodInvocation getTarget setTarget getInstance StatementExpression MethodInvocation newMenu MethodInvocation ActionNewCompositeState getSingleton add StatementExpression MethodInvocation ActionNewCompositeState MethodInvocation MethodInvocation getTarget setTarget getSingleton StatementExpression MethodInvocation newMenu MethodInvocation ActionNewSimpleState getSingleton add StatementExpression MethodInvocation ActionNewSimpleState MethodInvocation MethodInvocation getTarget setTarget getSingleton StatementExpression MethodInvocation newMenu MethodInvocation ActionNewFinalState getSingleton add StatementExpression MethodInvocation ActionNewFinalState MethodInvocation MethodInvocation getTarget setTarget getSingleton StatementExpression MethodInvocation newMenu MethodInvocation ActionNewSubmachineState getInstance add StatementExpression MethodInvocation ActionNewSubmachineState MethodInvocation MethodInvocation getTarget setTarget getInstance StatementExpression MethodInvocation MemberReference newMenu add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation ActionRemoveModelElement.SINGLETON MethodInvocation getSelectedValue setTarget StatementExpression MethodInvocation ActionRemoveModelElement.SINGLETON MethodInvocation getSelectedValue setObjectToRemove StatementExpression MethodInvocation MemberReference ActionRemoveModelElement SINGLETON add ReferenceType JPopupMenu ConstructorDeclaration Modifier public /**
     * Constructor for UMLCompositeStateSubvertexList.
     * @param dataModel the data model
     */ UMLCompositeStateSubvertexList FormalParameter ReferenceType UMLModelElementListModel2 dataModel StatementExpression SuperConstructorInvocation MemberReference dataModel MethodDeclaration Modifier public ReferenceType JPopupMenu getPopupMenu ReturnStatement ClassCreator ReferenceType PopupMenu ReferenceType UMLMutableLinkedList",0
1485,1485,,1
1177,1177,,1
1008,1008,,1
257,257,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import org.argouml.model.Model Import org.argouml.uml.ui.ActionSetMultiplicity ClassDeclaration Modifier public /**
 *
 * @author mkl
 *
 */ ActionSetClassifierRoleMultiplicity FieldDeclaration Modifier private final static ReferenceType ActionSetClassifierRoleMultiplicity VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetClassifierRoleMultiplicity ConstructorDeclaration Modifier public /**
     *
     */ ActionSetClassifierRoleMultiplicity StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public setSelectedItem FormalParameter ReferenceType Object item FormalParameter ReferenceType Object target IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAClassifierRole getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference item isAMultiplicity getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference target getMultiplicity MethodInvocation MemberReference item equals getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference item setMultiplicity getCoreHelper End IfStatement BinaryOperation instanceof MemberReference item ReferenceType String BlockStatement IfStatement MethodInvocation ! item MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getMultiplicity getFacade toString getFacade equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation Model MethodInvocation Cast ReferenceType String MemberReference item createMultiplicity getDataTypesFactory setMultiplicity getCoreHelper End BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null setMultiplicity getCoreHelper End End End MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionSetClassifierRoleMultiplicity getInstance ReturnStatement MemberReference SINGLETON ReferenceType ActionSetMultiplicity",0
879,879,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * Well-formedness rule for Package. Check that the alias for an imported
 * element doesn't conflict with any existing name. Section 2.14.3.3 of UML 1.4
 * spec.
 * <p>
 * Other types of name conflicts in a Namespace are checked by
 * {@link CrNameConflict}.
 * <p>
 * TODO: MVW: If an Alias is the same as another class' name, then this critic
 * fires, but the explanation and wizard are wrong!
 */ CrDisambigClassName ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrDisambigClassName StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""name"" addTrigger StatementExpression MethodInvocation Literal ""elementOwnership"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator designMaterialName MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference designMaterialName Literal null BinaryOperation == MethodInvocation designMaterialName length Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator elementImports MethodInvocation Model MethodInvocation MemberReference classifier getElementImports2 getFacade IfStatement BinaryOperation == MemberReference elementImports Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation elementImports iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator imp MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator pack MethodInvocation Model MethodInvocation MemberReference imp getPackage getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator alias MethodInvocation Model MethodInvocation MemberReference imp getAlias getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference alias Literal null BinaryOperation == MethodInvocation alias length Literal 0 BlockStatement StatementExpression Assignment MemberReference alias MemberReference designMaterialName = End LocalVariableDeclaration ReferenceType Collection VariableDeclarator siblings MethodInvocation Model MethodInvocation MemberReference pack getOwnedElements getFacade IfStatement BinaryOperation == MemberReference siblings Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elems MethodInvocation siblings iterator WhileStatement MethodInvocation elems hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation elems next LocalVariableDeclaration ReferenceType Object VariableDeclarator me MemberReference eo IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement End IfStatement BinaryOperation == MemberReference me MemberReference classifier BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference meName Literal null MethodInvocation meName Literal """" equals BlockStatement ContinueStatement End IfStatement MethodInvocation meName MemberReference alias equals BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClClassName getTheInstance MethodDeclaration Modifier public initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w getToDoItem LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator sug MethodInvocation Model MethodInvocation MemberReference me getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w End MethodDeclaration Modifier public ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizMEName ReferenceType CrUML",1
66,66,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.ImageIcon Import javax.swing.JPanel Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.ScrollList Import org.argouml.uml.ui.UMLDerivedCheckBox Import org.argouml.uml.ui.behavior.common_behavior.ActionNewReception Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public abstract /**
 * The abstract properties panel for Classifiers.
 */ PropPanelClassifier FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator modifiersPanel FieldDeclaration /**
     * The action used to add a reception to the classifier.
     */ Modifier private ReferenceType ActionNewReception VariableDeclarator actionNewReception ClassCreator ReferenceType ActionNewReception FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator generalizationScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator specializationScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator featureScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator createActionScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator powerTypeRangeScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator associationEndScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator attributeScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator operationScroll FieldDeclaration Modifier private static ReferenceType UMLGeneralizableElementGeneralizationListModel VariableDeclarator generalizationListModel ClassCreator ReferenceType UMLGeneralizableElementGeneralizationListModel FieldDeclaration Modifier private static ReferenceType UMLGeneralizableElementSpecializationListModel VariableDeclarator specializationListModel ClassCreator ReferenceType UMLGeneralizableElementSpecializationListModel FieldDeclaration Modifier private static ReferenceType UMLClassifierFeatureListModel VariableDeclarator featureListModel ClassCreator ReferenceType UMLClassifierFeatureListModel FieldDeclaration Modifier private static ReferenceType UMLClassifierCreateActionListModel VariableDeclarator createActionListModel ClassCreator ReferenceType UMLClassifierCreateActionListModel FieldDeclaration Modifier private static ReferenceType UMLClassifierPowertypeRangeListModel VariableDeclarator powertypeRangeListModel ClassCreator ReferenceType UMLClassifierPowertypeRangeListModel FieldDeclaration Modifier private static ReferenceType UMLClassifierAssociationEndListModel VariableDeclarator associationEndListModel ClassCreator ReferenceType UMLClassifierAssociationEndListModel FieldDeclaration Modifier private static ReferenceType UMLClassAttributeListModel VariableDeclarator attributeListModel ClassCreator ReferenceType UMLClassAttributeListModel FieldDeclaration Modifier private static ReferenceType UMLClassOperationListModel VariableDeclarator operationListModel ClassCreator ReferenceType UMLClassOperationListModel ConstructorDeclaration Modifier public /**
     * Construct a property panel for a Classififer with the given name and
     * icon.
     * 
     * @param name the title of the properties panel
     * @param icon the icon shown next to the name
     */ PropPanelClassifier FormalParameter ReferenceType String name FormalParameter ReferenceType ImageIcon icon StatementExpression SuperConstructorInvocation MemberReference name MemberReference icon StatementExpression MethodInvocation initialize ConstructorDeclaration Modifier public Annotation Deprecated /**
     * The constructor.
     *
     * @param title the title of the properties panel
     * @param orientation the orientation of the panel
     * @deprecated for 0.25.4 by tfmorris. Use
     *             {@link #PropPanelClassifier(String, ImageIcon)} and
     *             setOrientation() after instantiation.
     */ PropPanelClassifier FormalParameter ReferenceType String title FormalParameter ReferenceType Orientation orientation StatementExpression SuperConstructorInvocation MemberReference title MemberReference orientation StatementExpression MethodInvocation initialize ConstructorDeclaration Modifier public Annotation Deprecated /**
     * The constructor.
     *
     * @param name the title of the properties panel
     * @param orientation the orientation of the panel
     * @param icon the icon shown next to the name
     * @deprecated for 0.25.4 by tfmorris. Use
     *             {@link #PropPanelClassifier(String, ImageIcon)} and
     *             setOrientation() after instantiation.
     */ PropPanelClassifier FormalParameter ReferenceType String name FormalParameter ReferenceType ImageIcon icon FormalParameter ReferenceType Orientation orientation StatementExpression SuperConstructorInvocation MemberReference name MemberReference icon MemberReference orientation StatementExpression MethodInvocation initialize MethodDeclaration /**
     * Initialize the panel with the common fields and stuff.
     */ Modifier private initialize StatementExpression Assignment MemberReference modifiersPanel MethodInvocation MethodInvocation Translator Literal ""label.modifiers"" localize createBorderPanel = StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLGeneralizableElementAbstractCheckBox add StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLGeneralizableElementLeafCheckBox add StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLGeneralizableElementRootCheckBox add StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLDerivedCheckBox add MethodDeclaration /**
     * Returns the associationEndScroll.
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getAssociationEndScroll IfStatement BinaryOperation == MemberReference associationEndScroll Literal null BlockStatement StatementExpression Assignment MemberReference associationEndScroll ClassCreator ReferenceType ScrollList MemberReference associationEndListModel = End ReturnStatement MemberReference associationEndScroll MethodDeclaration /**
     * Returns the createActionScroll.
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getCreateActionScroll IfStatement BinaryOperation == MemberReference createActionScroll Literal null BlockStatement StatementExpression Assignment MemberReference createActionScroll ClassCreator ReferenceType ScrollList MemberReference createActionListModel = End ReturnStatement MemberReference createActionScroll MethodDeclaration /**
     * Returns the featureScroll.
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getFeatureScroll IfStatement BinaryOperation == MemberReference featureScroll Literal null BlockStatement StatementExpression Assignment MemberReference featureScroll ClassCreator ReferenceType ScrollList MemberReference featureListModel Literal true Literal false = End ReturnStatement MemberReference featureScroll MethodDeclaration /**
     * Returns the generalizationScroll.
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getGeneralizationScroll IfStatement BinaryOperation == MemberReference generalizationScroll Literal null BlockStatement StatementExpression Assignment MemberReference generalizationScroll ClassCreator ReferenceType ScrollList MemberReference generalizationListModel = End ReturnStatement MemberReference generalizationScroll MethodDeclaration /**
     * Returns the powerTypeRangeScroll.
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getPowerTypeRangeScroll IfStatement BinaryOperation == MemberReference powerTypeRangeScroll Literal null BlockStatement StatementExpression Assignment MemberReference powerTypeRangeScroll ClassCreator ReferenceType ScrollList MemberReference powertypeRangeListModel = End ReturnStatement MemberReference powerTypeRangeScroll MethodDeclaration /**
     * Returns the specializationScroll.
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getSpecializationScroll IfStatement BinaryOperation == MemberReference specializationScroll Literal null BlockStatement StatementExpression Assignment MemberReference specializationScroll ClassCreator ReferenceType ScrollList MemberReference specializationListModel = End ReturnStatement MemberReference specializationScroll MethodDeclaration /**
     * Returns the attributeScroll.
     *
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getAttributeScroll IfStatement BinaryOperation == MemberReference attributeScroll Literal null BlockStatement StatementExpression Assignment MemberReference attributeScroll ClassCreator ReferenceType ScrollList MemberReference attributeListModel Literal true Literal false = End ReturnStatement MemberReference attributeScroll MethodDeclaration /**
     * Returns the operationScroll.
     *
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getOperationScroll IfStatement BinaryOperation == MemberReference operationScroll Literal null BlockStatement StatementExpression Assignment MemberReference operationScroll ClassCreator ReferenceType ScrollList MemberReference operationListModel Literal true Literal false = End ReturnStatement MemberReference operationScroll MethodDeclaration /**
     * @return the action for a new reception
     */ Modifier protected ReferenceType ActionNewReception getActionNewReception ReturnStatement MemberReference actionNewReception MethodDeclaration /**
     * @return Returns the modifiersPanel.
     */ Modifier protected ReferenceType JPanel getModifiersPanel ReturnStatement MemberReference modifiersPanel ReferenceType PropPanelNamespace",0
1424,1424,,0
371,371,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.uml.diagram.DiagramFactory Import org.argouml.uml.diagram.ArgoDiagram ClassDeclaration Modifier public /**
 * Action to trigger creation of new class diagram.
 */ ActionClassDiagram FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ActionClassDiagram getLogger ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionClassDiagram StatementExpression SuperConstructorInvocation Literal ""action.class-diagram"" MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object ns IfStatement MethodInvocation Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramFactory.DiagramType Class MemberReference ns Literal null createDiagram getInstance End StatementExpression MethodInvocation LOG Literal ""No namespace as argument"" error StatementExpression MethodInvocation LOG MemberReference ns error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""The argument "" MemberReference ns Literal ""is not a namespace."" MethodDeclaration Modifier public BasicType boolean isValidNamespace FormalParameter ReferenceType Object handle IfStatement MethodInvocation ! Model MethodInvocation MemberReference handle isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""No namespace as argument"" error StatementExpression MethodInvocation LOG MemberReference handle error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""The argument "" MemberReference handle Literal "" is not a namespace."" End ReturnStatement Literal true FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2415943949021223859L ReferenceType ActionAddDiagram",0
1557,1557,,0
475,475,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import java.beans.PropertyVetoException Import java.util.ArrayList Import java.util.Collection Import javax.swing.Action Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.model.Facade Import org.argouml.model.Model Import org.argouml.ui.CmdCreateNode Import org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel Import org.argouml.uml.diagram.ui.ActionSetAddAssociationMode Import org.argouml.uml.diagram.ui.ActionSetMode Import org.argouml.uml.diagram.ui.RadioAction Import org.argouml.uml.diagram.ui.UMLDiagram Import org.argouml.util.ToolBarUtility Import org.tigris.gef.base.LayerPerspective Import org.tigris.gef.base.LayerPerspectiveMutable Import org.tigris.gef.base.ModeCreatePolyEdge Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * The base class of the deployment diagram.<p>
 *
 * Defines the toolbar, provides for its initialization and provides
 * constructors for a top level diagram and one within a defined
 * namespace.<p>
 *
 * @author Clemens Eichler
 */ UMLDeploymentDiagram FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType UMLDeploymentDiagram getLogger FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMNode FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMNodeInstance FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMComponent FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMComponentInstance FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMClass FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMInterface FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMObject FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMDependency FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMAssociation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMLink FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionAssociation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionAggregation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionComposition FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionUniAssociation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionUniAggregation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionUniComposition FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMGeneralization FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionMAbstraction ConstructorDeclaration Modifier public /**
     * Constructor.
     */ UMLDeploymentDiagram TryStatement StatementExpression MethodInvocation MethodInvocation getNewDiagramName setName CatchClause CatchClauseParameter PropertyVetoException pve StatementExpression MethodInvocation MethodInvocation createGraphModel setGraphModel ConstructorDeclaration Modifier public /**
     * @param namespace the namespace for the new diagram
     */ UMLDeploymentDiagram FormalParameter ReferenceType Object namespace StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference namespace setNamespace MethodDeclaration /**
     * Method to perform a number of important initializations of a
     * <em>Deployment Diagram</em>.<p>
     *
     * Each diagram type has a similar <em>UMLxxxDiagram</em> class.<p>
     *
     * Changed <em>lay</em> from <em>LayerPerspective</em> to
     * <em>LayerPerspectiveMutable</em>.  This class is a child of
     * <em>LayerPerspective</em> and was implemented to correct some
     * difficulties in changing the model. <em>lay</em> is used mainly
     * in <em>LayerManager</em>(GEF) to control the adding, changing and
     * deleting layers on the diagram...<p>
     *
     * @param handle package from the model
     * @author psager@tigris.org Jan. 24, 2002
     */ Modifier public setNamespace FormalParameter ReferenceType Object handle IfStatement MethodInvocation ! Model MethodInvocation MemberReference handle isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Illegal argument. Object "" MemberReference handle Literal "" is not a namespace"" error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""Illegal argument. Object "" MemberReference handle Literal "" is not a namespace"" End LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference handle LocalVariableDeclaration BasicType boolean VariableDeclarator init BinaryOperation == Literal null MethodInvocation getNamespace StatementExpression SuperMethodInvocation MemberReference m setNamespace LocalVariableDeclaration ReferenceType DeploymentDiagramGraphModel VariableDeclarator gm MethodInvocation createGraphModel StatementExpression MethodInvocation gm MemberReference m setHomeModel IfStatement MemberReference init BlockStatement LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference m getName getFacade MemberReference gm LocalVariableDeclaration ReferenceType DeploymentDiagramRenderer VariableDeclarator rend ClassCreator ReferenceType DeploymentDiagramRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer End MethodDeclaration Modifier private ReferenceType DeploymentDiagramGraphModel createGraphModel IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType DeploymentDiagramGraphModel BlockStatement ReturnStatement Cast ReferenceType DeploymentDiagramGraphModel MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType DeploymentDiagramGraphModel End MethodDeclaration Modifier protected ReferenceType Object getUmlActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation getActionMNode MethodInvocation getActionMNodeInstance MethodInvocation getActionMComponent MethodInvocation getActionMComponentInstance MethodInvocation getActionMGeneralization MethodInvocation getActionMAbstraction MethodInvocation getActionMDependency MethodInvocation getAssociationActions MethodInvocation getActionMObject MethodInvocation getActionMLink ReturnStatement MemberReference actions MethodDeclaration Modifier private ReferenceType Object getAssociationActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer ArrayInitializer MethodInvocation getActionAssociation MethodInvocation getActionUniAssociation ArrayInitializer MethodInvocation getActionAggregation MethodInvocation getActionUniAggregation ArrayInitializer MethodInvocation getActionComposition MethodInvocation getActionUniComposition StatementExpression MethodInvocation ToolBarUtility MemberReference actions Literal ""diagram.deployment.association"" manageDefault ReturnStatement MemberReference actions FieldDeclaration /**
     * The UID.
     */ Modifier final static BasicType long VariableDeclarator serialVersionUID Literal - 375918274062198744L MethodDeclaration Modifier public ReferenceType String getLabelName ReturnStatement MethodInvocation Translator Literal ""label.deployment-diagram"" localize MethodDeclaration /**
     * @return Returns the actionAggregation.
     */ Modifier protected ReferenceType Action getActionAggregation IfStatement BinaryOperation == MemberReference actionAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal false Literal ""button.new-aggregation"" = End ReturnStatement MemberReference actionAggregation MethodDeclaration /**
     * @return Returns the actionAssociation.
     */ Modifier protected ReferenceType Action getActionAssociation IfStatement BinaryOperation == MemberReference actionAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getNone getAggregationKind Literal false Literal ""button.new-association"" = End ReturnStatement MemberReference actionAssociation MethodDeclaration /**
     * @return Returns the actionComposition.
     */ Modifier protected ReferenceType Action getActionComposition IfStatement BinaryOperation == MemberReference actionComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal false Literal ""button.new-composition"" = End ReturnStatement MemberReference actionComposition MethodDeclaration /**
     * @return Returns the actionMAssociation.
     */ Modifier protected ReferenceType Action getActionMAssociation IfStatement BinaryOperation == MemberReference actionMAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionMAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getAssociation getMetaTypes Literal ""button.new-association"" = End ReturnStatement MemberReference actionMAssociation MethodDeclaration /**
     * @return Returns the actionMClass.
     */ Modifier protected ReferenceType Action getActionMClass IfStatement BinaryOperation == MemberReference actionMClass Literal null BlockStatement StatementExpression Assignment MemberReference actionMClass ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getUMLClass getMetaTypes Literal ""button.new-class"" = End ReturnStatement MemberReference actionMClass MethodDeclaration /**
     * @return Returns the actionMComponent.
     */ Modifier protected ReferenceType Action getActionMComponent IfStatement BinaryOperation == MemberReference actionMComponent Literal null BlockStatement StatementExpression Assignment MemberReference actionMComponent ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getComponent getMetaTypes Literal ""button.new-component"" = End ReturnStatement MemberReference actionMComponent MethodDeclaration /**
     * @return Returns the actionMComponentInstance.
     */ Modifier protected ReferenceType Action getActionMComponentInstance IfStatement BinaryOperation == MemberReference actionMComponentInstance Literal null BlockStatement StatementExpression Assignment MemberReference actionMComponentInstance ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getComponentInstance getMetaTypes Literal ""button.new-componentinstance"" = End ReturnStatement MemberReference actionMComponentInstance MethodDeclaration /**
     * @return Returns the actionMDependency.
     */ Modifier protected ReferenceType Action getActionMDependency IfStatement BinaryOperation == MemberReference actionMDependency Literal null BlockStatement StatementExpression Assignment MemberReference actionMDependency ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getDependency getMetaTypes Literal ""button.new-dependency"" = End ReturnStatement MemberReference actionMDependency MethodDeclaration /**
     * @return Returns the actionMGeneralization.
     */ Modifier protected ReferenceType Action getActionMGeneralization IfStatement BinaryOperation == MemberReference actionMGeneralization Literal null BlockStatement StatementExpression Assignment MemberReference actionMGeneralization ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getGeneralization getMetaTypes Literal ""button.new-generalization"" = End ReturnStatement MemberReference actionMGeneralization MethodDeclaration /**
     * @return Returns the actionMAbstraction.
     */ Modifier protected ReferenceType Action getActionMAbstraction IfStatement BinaryOperation == MemberReference actionMAbstraction Literal null BlockStatement StatementExpression Assignment MemberReference actionMAbstraction ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getAbstraction getMetaTypes Literal ""button.new-realization"" = End ReturnStatement MemberReference actionMAbstraction MethodDeclaration /**
     * @return Returns the actionMInterface.
     */ Modifier protected ReferenceType Action getActionMInterface IfStatement BinaryOperation == MemberReference actionMInterface Literal null BlockStatement StatementExpression Assignment MemberReference actionMInterface ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getInterface getMetaTypes Literal ""button.new-interface"" = End ReturnStatement MemberReference actionMInterface MethodDeclaration /**
     * @return Returns the actionMLink.
     */ Modifier protected ReferenceType Action getActionMLink IfStatement BinaryOperation == MemberReference actionMLink Literal null BlockStatement StatementExpression Assignment MemberReference actionMLink ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getLink getMetaTypes Literal ""button.new-link"" = End ReturnStatement MemberReference actionMLink MethodDeclaration /**
     * @return Returns the actionMNode.
     */ Modifier protected ReferenceType Action getActionMNode IfStatement BinaryOperation == MemberReference actionMNode Literal null BlockStatement StatementExpression Assignment MemberReference actionMNode ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getNode getMetaTypes Literal ""button.new-node"" = End ReturnStatement MemberReference actionMNode MethodDeclaration /**
     * @return Returns the actionMNodeInstance.
     */ Modifier protected ReferenceType Action getActionMNodeInstance IfStatement BinaryOperation == MemberReference actionMNodeInstance Literal null BlockStatement StatementExpression Assignment MemberReference actionMNodeInstance ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getNodeInstance getMetaTypes Literal ""button.new-nodeinstance"" = End ReturnStatement MemberReference actionMNodeInstance MethodDeclaration /**
     * @return Returns the actionMObject.
     */ Modifier protected ReferenceType Action getActionMObject IfStatement BinaryOperation == MemberReference actionMObject Literal null BlockStatement StatementExpression Assignment MemberReference actionMObject ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getObject getMetaTypes Literal ""button.new-object"" = End ReturnStatement MemberReference actionMObject MethodDeclaration /**
     * @return Returns the actionUniAggregation.
     */ Modifier protected ReferenceType Action getActionUniAggregation IfStatement BinaryOperation == MemberReference actionUniAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionUniAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal true Literal ""button.new-uniaggregation"" = End ReturnStatement MemberReference actionUniAggregation MethodDeclaration /**
     * @return Returns the actionUniAssociation.
     */ Modifier protected ReferenceType Action getActionUniAssociation IfStatement BinaryOperation == MemberReference actionUniAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionUniAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getNone getAggregationKind Literal true Literal ""button.new-uniassociation"" = End ReturnStatement MemberReference actionUniAssociation MethodDeclaration /**
     * @return Returns the actionUniComposition.
     */ Modifier protected ReferenceType Action getActionUniComposition IfStatement BinaryOperation == MemberReference actionUniComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionUniComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal true Literal ""button.new-unicomposition"" = End ReturnStatement MemberReference actionUniComposition MethodDeclaration Modifier public BasicType boolean isRelocationAllowed FormalParameter ReferenceType Object base ReturnStatement MethodInvocation Model MethodInvocation MemberReference base isAPackage getFacade MethodDeclaration Modifier public BasicType boolean relocate FormalParameter ReferenceType Object base StatementExpression MethodInvocation MemberReference base setNamespace StatementExpression MethodInvocation damage ReturnStatement Literal true MethodDeclaration /**
     * Provides the standard functionality of the superclass only for
     * deployment diagram specific model elements
     * @param modelElement the model element
     * @param namespace the namespace (or null for diagram)
     * @see org.argouml.uml.diagram.ui.UMLDiagram#setModelElementNamespace(java.lang.Object, Object)
     */ Modifier public setModelElementNamespace FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Facade VariableDeclarator facade MethodInvocation Model getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation facade MemberReference modelElement isANode MethodInvocation facade MemberReference modelElement isANodeInstance MethodInvocation facade MemberReference modelElement isAComponent MethodInvocation facade MemberReference modelElement isAComponentInstance BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Setting namespace of "" MemberReference modelElement info StatementExpression SuperMethodInvocation MemberReference modelElement MemberReference namespace setModelElementNamespace End MethodDeclaration Modifier public encloserChanged FormalParameter ReferenceType FigNode enclosed FormalParameter ReferenceType FigNode oldEncloser FormalParameter ReferenceType FigNode newEncloser IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference oldEncloser Literal null BinaryOperation == MemberReference newEncloser Literal null MethodInvocation Model MethodInvocation MethodInvocation oldEncloser getOwner isAComponent getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator er1 MethodInvocation Model MethodInvocation MethodInvocation enclosed getOwner getElementResidences getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator er2 MethodInvocation Model MethodInvocation MethodInvocation oldEncloser getOwner getResidentElements getFacade LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator common ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference er1 StatementExpression MethodInvocation common MemberReference er2 retainAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator elementResidence MemberReference common BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference elementResidence delete getUmlFactory End End ReferenceType UMLDiagram",0
1072,1072,,0
130,130,"CompilationUnit PackageDeclaration org.argouml.util.osdep Import java.io.IOException Import java.lang.reflect.Method Import java.net.URL Import org.apache.log4j.Logger ClassDeclaration Modifier public /**
 * @stereotype utility
 */ StartBrowser FieldDeclaration /** logger */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType StartBrowser getLogger MethodDeclaration /**
     * Open an URL in the system's default browser.
     *
     * @param url string containing the given URL
     */ Modifier public static openUrl FormalParameter ReferenceType String url TryStatement IfStatement MethodInvocation OsUtil isWin32 BlockStatement StatementExpression MethodInvocation Runtime MethodInvocation BinaryOperation + Literal ""rundll32 url.dll,FileProtocolHandler "" MemberReference url exec getRuntime IfStatement MethodInvocation OsUtil isMac BlockStatement TryStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator cl MethodInvocation ClassLoader getSystemClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation cl Literal ""com.apple.mrj.MRJFileUtils"" loadClass LocalVariableDeclaration ReferenceType Class VariableDeclarator argtypes ArrayInitializer ClassReference ReferenceType String LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation c Literal ""openURL"" MemberReference argtypes getMethod LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference url StatementExpression MethodInvocation m MethodInvocation c newInstance MemberReference args invoke CatchClause CatchClauseParameter Exception cnfe StatementExpression MethodInvocation LOG MemberReference cnfe error StatementExpression MethodInvocation LOG Literal ""Trying a default browser (netscape)"" info LocalVariableDeclaration ReferenceType String VariableDeclarator commline ArrayInitializer Literal ""netscape"" MemberReference url StatementExpression MethodInvocation Runtime MethodInvocation MemberReference commline exec getRuntime BlockStatement StatementExpression MethodInvocation Runtime MethodInvocation BinaryOperation + Literal ""firefox "" MemberReference url exec getRuntime End End CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation LOG MemberReference ioe error MethodDeclaration /**
     * Open an URL in the system's default browser.
     *
     * @param url the URL to open
     */ Modifier public static openUrl FormalParameter ReferenceType URL url StatementExpression MethodInvocation MethodInvocation url toString openUrl",0
178,178,"CompilationUnit PackageDeclaration org.argouml.application.events ClassDeclaration Modifier public /**
 * ArgoDiagramAppearanceEvent is used to notify interested parties that the
 * module which is the event source has been changed.
 * @author Aleksandar
 */ ArgoDiagramAppearanceEvent ConstructorDeclaration Modifier public /**
     * @param eventType reported by this event.
     * @param src object that caused the event.
     */ ArgoDiagramAppearanceEvent FormalParameter BasicType int eventType FormalParameter ReferenceType Object src StatementExpression SuperConstructorInvocation MemberReference eventType MemberReference src MethodDeclaration /**
     * Indicates the start of the 100-digit range for diagram appearance events.
     *
     * @return the first id reserved for events.
     */ Modifier public BasicType int getEventStartRange ReturnStatement MemberReference ANY_DIAGRAM_APPEARANCE_EVENT ReferenceType ArgoEvent",0
881,881,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * A MultiLine FigText to provide consistency across Figs displaying multiple
 * lines of text.
 * By default -
 * <ul>
 * <li>Text is black
 * <li>The display area is transparent
 * <li>Text is left justified
 * <li>There is no line border
 * </ul>
 *
 * @author Bob Tarling
 */ FigMultiLineText ConstructorDeclaration Modifier public FigMultiLineText FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter BasicType boolean expandOnly StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h MemberReference expandOnly StatementExpression MethodInvocation MemberReference Color black setTextColor StatementExpression MethodInvocation MemberReference FigText INSERT setReturnAction StatementExpression MethodInvocation Literal ""\n"" setLineSeparator StatementExpression MethodInvocation MemberReference FigText END_EDITING setTabAction StatementExpression MethodInvocation MemberReference FigText JUSTIFY_LEFT setJustification StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation Literal 0 setLineWidth ReferenceType ArgoFigText",0
912,912,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect whether an attribute has a name
 */ CrMissingAttrName ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMissingAttrName StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""name"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference attr getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null Literal MethodInvocation MemberReference myName equals """" ReturnStatement MemberReference PROBLEM_FOUND End IfStatement BinaryOperation == MethodInvocation myName length Literal 0 ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClAttributeCompartment getTheInstance MethodDeclaration Modifier public initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w getToDoItem LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion IfStatement MethodInvocation Model MethodInvocation MemberReference me isAAttribute getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator a MemberReference me LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference a getOwner getFacade Literal null StatementExpression Assignment MemberReference count MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference a getOwner getFacade getFeatures MethodInvocation size getFacade = End StatementExpression Assignment MemberReference sug BinaryOperation + Literal ""attr"" BinaryOperation + MemberReference count Literal 1 = End StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w End MethodDeclaration Modifier public ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizMEName ReferenceType CrUML",0
1165,1165,,0
997,997,,0
1493,1493,,0
1465,1465,,0
1386,1386,,0
582,582,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import java.awt.event.MouseEvent Import java.util.Vector Import org.tigris.gef.graph.GraphModel ClassDeclaration Modifier public /**
 * Class to display graphics for a UML Component in a diagram.
 *
 * @author 5eichler
 */ FigComponent ConstructorDeclaration Modifier public /**
     * Constructor.
     */ FigComponent StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier public /**
     * The constructor that hooks the Fig into an existing UML element.
     *
     * @param gm ignored
     * @param node the UML element
     */ FigComponent FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression SuperConstructorInvocation MemberReference gm MemberReference node MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp add ReturnStatement MemberReference popUpActions ReferenceType AbstractFigComponent",0
380,380,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.ActionSetMultiplicity ClassDeclaration Modifier public /**
 * Action to set the multiplicity of a structural feature.
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 6, 2003
 */ ActionSetStructuralFeatureMultiplicity FieldDeclaration Modifier private final static ReferenceType ActionSetStructuralFeatureMultiplicity VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetStructuralFeatureMultiplicity ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetStructuralFeatureMultiplicity.
     */ ActionSetStructuralFeatureMultiplicity StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public setSelectedItem FormalParameter ReferenceType Object item FormalParameter ReferenceType Object target IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAStructuralFeature getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference item isAMultiplicity getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference target getMultiplicity MethodInvocation MemberReference item equals getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference item setMultiplicity getCoreHelper End IfStatement BinaryOperation instanceof MemberReference item ReferenceType String BlockStatement IfStatement MethodInvocation ! item MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getMultiplicity getFacade toString getFacade equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation Model MethodInvocation Cast ReferenceType String MemberReference item createMultiplicity getDataTypesFactory setMultiplicity getCoreHelper End BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null setMultiplicity getCoreHelper End End End MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType ActionSetStructuralFeatureMultiplicity getInstance ReturnStatement MemberReference SINGLETON ReferenceType ActionSetMultiplicity",0
919,919,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.explorer.ExplorerEventAdaptor Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public abstract /**
 * Abstract action to trigger creation of a new diagram.
 * TODO: Bobs says, can we merge ActionAddDiagram with this class?
 * 
 * @author michiel
 */ ActionNewDiagram ConstructorDeclaration Modifier protected /**
     * The constructor.
     * @param name the i18n key for this action name.
     */ ActionNewDiagram FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference name localize MethodInvocation ResourceLoaderWrapper MemberReference name lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator MemberReference name localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation MethodInvocation p getRoot createDiagram AssertStatement BinaryOperation != MemberReference diagram Literal null Literal ""No diagram was returned by the concrete class"" StatementExpression MethodInvocation p MemberReference diagram addMember StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation MethodInvocation diagram getNamespace modelElementAdded getInstance StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference diagram setTarget getInstance MethodDeclaration /**
     * @param namespace the namespace in which to create the diagram
     * @return the new diagram
     */ Modifier protected abstract ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace MethodDeclaration /**
     * Utility function to create a collaboration.
     * 
     * @return a new collaboration
     * @deprecated by MVW in V0.25.3. Replaced by 
     * createCollaboration(Object namespace)
     */ Modifier protected static ReferenceType Object createCollaboration LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation p getRoot ReturnStatement MethodInvocation MemberReference namespace createCollaboration MethodDeclaration /**
     * Utility function to create a collaboration.
     * 
     * @return a new collaboration
     * @param namespace the back-up namespace to put the collaboration in
     */ Modifier protected static ReferenceType Object createCollaboration FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator collaboration Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getOwner getFacade getNamespace getFacade StatementExpression Assignment MemberReference collaboration MethodInvocation Model MethodInvocation MemberReference ns MemberReference target buildCollaboration getCollaborationsFactory = IfStatement MethodInvocation Model MethodInvocation MemberReference target isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade StatementExpression Assignment MemberReference collaboration MethodInvocation Model MethodInvocation MemberReference ns MemberReference target buildCollaboration getCollaborationsFactory = BlockStatement StatementExpression Assignment MemberReference collaboration MethodInvocation Model MethodInvocation createCollaboration getCollaborationsFactory = IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference namespace MemberReference target = BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference namespace MemberReference ns = End End End StatementExpression MethodInvocation Model MethodInvocation MemberReference collaboration MemberReference namespace setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference collaboration Literal ""unattachedCollaboration"" setName getCoreHelper End End ReturnStatement MemberReference collaboration ReferenceType UndoableAction",0
1114,1114,,0
1527,1527,,0
3,3,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Font Import java.util.Collections Import javax.swing.JScrollPane Import javax.swing.JTextArea Import javax.swing.JToolBar Import javax.swing.SwingConstants Import javax.swing.event.DocumentEvent Import javax.swing.event.DocumentListener Import org.apache.log4j.Logger Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.TabModelTarget Import org.tigris.toolbar.ToolBarFactory ClassDeclaration Modifier public /**
 * A tab that contains textual information.
 */ TabText FieldDeclaration Modifier private ReferenceType Object VariableDeclarator target FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator textArea ClassCreator ReferenceType JTextArea FieldDeclaration Modifier private BasicType boolean VariableDeclarator parseChanges Literal true FieldDeclaration Modifier private BasicType boolean VariableDeclarator enabled FieldDeclaration /**
     * The optional toolbar. Contains <code>null</code> if no toolbar
     * was requested.
     */ Modifier private ReferenceType JToolBar VariableDeclarator toolbar FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType TabText getLogger ConstructorDeclaration Modifier public /**
     * Create a text tab without a toolbar.
     *
     * @param title the title of the tab
     */ TabText FormalParameter ReferenceType String title StatementExpression ExplicitConstructorInvocation MemberReference title Literal false ConstructorDeclaration Modifier public /**
     * Create a text tab and optionally request a toolbar.
     * @since ARGO0.9.4
     *
     * @param title the title
     * @param withToolbar true if a toolbar is needed
     */ TabText FormalParameter ReferenceType String title FormalParameter BasicType boolean withToolbar StatementExpression SuperConstructorInvocation MemberReference title StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation textArea ClassCreator ReferenceType Font Literal ""Monospaced"" MemberReference Font PLAIN Literal 12 setFont StatementExpression MethodInvocation textArea Literal 4 setTabSize StatementExpression MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference textArea MemberReference BorderLayout CENTER add StatementExpression MethodInvocation textArea MethodInvocation This addDocumentListener getDocument IfStatement MemberReference withToolbar BlockStatement StatementExpression Assignment MemberReference toolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference Collections EMPTY_LIST = StatementExpression MethodInvocation toolbar MemberReference SwingConstants HORIZONTAL setOrientation StatementExpression MethodInvocation toolbar Literal false setFloatable StatementExpression MethodInvocation toolbar MethodInvocation getTitle setName StatementExpression MethodInvocation MemberReference toolbar MemberReference BorderLayout NORTH add End MethodDeclaration Modifier private doGenerateText StatementExpression Assignment MemberReference parseChanges Literal false = IfStatement BinaryOperation == MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation textArea Literal false setEnabled StatementExpression MethodInvocation textArea Literal ""Nothing selected"" setText StatementExpression Assignment MemberReference enabled Literal false = BlockStatement StatementExpression MethodInvocation textArea Literal true setEnabled IfStatement MethodInvocation isVisible BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator generatedText MethodInvocation MethodInvocation getTarget genText IfStatement BinaryOperation != MemberReference generatedText Literal null BlockStatement StatementExpression MethodInvocation textArea MemberReference generatedText setText StatementExpression Assignment MemberReference enabled Literal true = StatementExpression MethodInvocation textArea Literal 0 setCaretPosition BlockStatement StatementExpression MethodInvocation textArea Literal false setEnabled StatementExpression MethodInvocation textArea Literal ""N/A"" setText StatementExpression Assignment MemberReference enabled Literal false = End End End StatementExpression Assignment MemberReference parseChanges Literal true = MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference target MemberReference t = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation doGenerateText End MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target MethodDeclaration Modifier public refresh LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation TargetManager MethodInvocation getTarget getInstance StatementExpression MethodInvocation MemberReference t setTarget MethodDeclaration /**
     * This tab pane is enabled if there is a target,
     * i.e. the target must not be null.
     *
     * {@inheritDoc}
     */ Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object t ReturnStatement BinaryOperation != MemberReference t Literal null MethodDeclaration /**
     * The target has changed, so let's generate some text to be shown.
     *
     * @param t the object to be ""generated"" = make a string of it
     * @return the generated text
     */ Modifier protected ReferenceType String genText FormalParameter ReferenceType Object t ReturnStatement TernaryExpression BinaryOperation == MemberReference t Literal null Literal ""Nothing selected"" MethodInvocation t toString MethodDeclaration /**
     * The user has edited the text in the textfield, so let's parse it now,
     * and update the model.
     *
     * @param s the string to parse
     */ Modifier protected parseText FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s Literal ""(null)"" = End StatementExpression MethodInvocation LOG BinaryOperation + Literal ""parsing text:"" MemberReference s debug MethodDeclaration Modifier public insertUpdate FormalParameter ReferenceType DocumentEvent e IfStatement MemberReference parseChanges BlockStatement StatementExpression MethodInvocation MethodInvocation textArea getText parseText End MethodDeclaration Modifier public removeUpdate FormalParameter ReferenceType DocumentEvent e IfStatement MemberReference parseChanges BlockStatement StatementExpression MethodInvocation MethodInvocation textArea getText parseText End MethodDeclaration Modifier public changedUpdate FormalParameter ReferenceType DocumentEvent e IfStatement MemberReference parseChanges BlockStatement StatementExpression MethodInvocation MethodInvocation textArea getText parseText End MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration /**
     * @return Returns the toolbar.
     */ Modifier protected ReferenceType JToolBar getToolbar ReturnStatement MemberReference toolbar MethodDeclaration /**
     * @param s true if we are enabled
     */ Modifier protected setShouldBeEnabled FormalParameter BasicType boolean s StatementExpression Assignment This MemberReference enabled MemberReference s = MethodDeclaration /**
     * @return returns true if enabled
     */ Modifier protected BasicType boolean shouldBeEnabled ReturnStatement MemberReference enabled MethodDeclaration /**
     * Sets if text area can be edited.
     * @param editable if true, text area is editable (default), else not
     */ Modifier public setEditable FormalParameter BasicType boolean editable StatementExpression MethodInvocation textArea MemberReference editable setEditable MethodDeclaration /**
     * Generates the text whenever this panel becomes visible.
     * {@inheritDoc}
     */ Modifier public Annotation Override setVisible FormalParameter BasicType boolean visible StatementExpression SuperMethodInvocation MemberReference visible setVisible IfStatement MemberReference visible BlockStatement StatementExpression MethodInvocation doGenerateText End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1484647093166393888L ReferenceType AbstractArgoJPanel ReferenceType TabModelTarget ReferenceType DocumentListener",0
1414,1414,,0
772,772,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.JList Import javax.swing.JPanel Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public /**
 * The properties panel for a Association.
 *
 */ PropPanelAssociation FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 4272135235664638209L FieldDeclaration /**
     * The scrollpane with the associationends.
     */ Modifier private ReferenceType JScrollPane VariableDeclarator assocEndScroll FieldDeclaration /**
     * The scrollpane with the associationroles this association plays a role
     * in.
     */ Modifier private ReferenceType JScrollPane VariableDeclarator associationRoleScroll FieldDeclaration /**
     * Ths scrollpane with the links that implement this association.
     */ Modifier private ReferenceType JScrollPane VariableDeclarator linksScroll FieldDeclaration /**
     * Panel for abstract/leaf/root
     */ Modifier private ReferenceType JPanel VariableDeclarator modifiersPanel ConstructorDeclaration Modifier public /**
     * Construct a property panel for UML Association elements.
     */ PropPanelAssociation StatementExpression ExplicitConstructorInvocation Literal ""label.association"" StatementExpression MethodInvocation Literal ""label.name"" MethodInvocation getNameTextField addField StatementExpression MethodInvocation Literal ""label.namespace"" MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MemberReference modifiersPanel add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""label.connections"" MemberReference assocEndScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""label.association-roles"" MemberReference associationRoleScroll addField StatementExpression MethodInvocation Literal ""label.association-links"" MemberReference linksScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ConstructorDeclaration Modifier protected Annotation Deprecated /**
     * Construct a property panel for an Association.
     * 
     * @param title the title of the panel
     * @param orientation the orientation of the panel
     * @deprecated for 0.25.4 by tfmorris. Use {@link #PropPanelAssociation()}.
     */ PropPanelAssociation FormalParameter ReferenceType String title FormalParameter ReferenceType Orientation orientation StatementExpression ExplicitConstructorInvocation MemberReference title StatementExpression MethodInvocation MemberReference orientation setOrientation ConstructorDeclaration Modifier protected /**
     * Construct a property panel for an Association.
     *
     * @param title the title of the panel
     */ PropPanelAssociation FormalParameter ReferenceType String title StatementExpression SuperConstructorInvocation MemberReference title MethodInvocation Literal ""Association"" lookupIcon StatementExpression MethodInvocation initialize LocalVariableDeclaration ReferenceType JList VariableDeclarator assocEndList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationConnectionListModel StatementExpression Assignment MemberReference assocEndScroll ClassCreator ReferenceType JScrollPane MemberReference assocEndList = LocalVariableDeclaration ReferenceType JList VariableDeclarator baseList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationAssociationRoleListModel StatementExpression Assignment MemberReference associationRoleScroll ClassCreator ReferenceType JScrollPane MemberReference baseList = LocalVariableDeclaration ReferenceType JList VariableDeclarator linkList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationLinkListModel StatementExpression Assignment MemberReference linksScroll ClassCreator ReferenceType JScrollPane MemberReference linkList = MethodDeclaration Modifier private initialize StatementExpression Assignment MemberReference modifiersPanel MethodInvocation MethodInvocation Translator Literal ""label.modifiers"" localize createBorderPanel = StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLGeneralizableElementAbstractCheckBox add StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLGeneralizableElementLeafCheckBox add StatementExpression MethodInvocation modifiersPanel ClassCreator ReferenceType UMLGeneralizableElementRootCheckBox add ReferenceType PropPanelRelationship",0
1592,1592,,0
870,870,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.awt.EventQueue Import java.awt.event.ItemEvent Import java.awt.event.ItemListener Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Comparator Import java.util.Enumeration Import java.util.HashMap Import java.util.HashSet Import java.util.Iterator Import java.util.LinkedList Import java.util.List Import java.util.Map Import java.util.Set Import javax.swing.tree.DefaultMutableTreeNode Import javax.swing.tree.DefaultTreeModel Import javax.swing.tree.MutableTreeNode Import javax.swing.tree.TreeNode Import javax.swing.tree.TreePath Import org.apache.log4j.Logger Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.InvalidElementException Import org.argouml.ui.explorer.rules.PerspectiveRule ClassDeclaration Modifier public /**
 * The model for the Explorer tree view of the uml model.
 *
 * provides:
 *  - receives events from the uml model and updates itself and the tree ui.
 *  - responds to changes in perspective and ordering.
 *
 * @author  alexb
 * @since 0.15.2
 */ ExplorerTreeModel FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ExplorerTreeModel getLogger FieldDeclaration /**
     * an array of
     * {@link org.argouml.ui.explorer.rules.PerspectiveRule PerspectiveRules},
     * that determine the tree view.
     */ Modifier private ReferenceType List TypeArgument ReferenceType PerspectiveRule VariableDeclarator rules FieldDeclaration /**
     * a map used to resolve model elements to tree nodes when determining
     * what effect a model event will have on the tree.
     */ Modifier private ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType Set TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator modelElementMap FieldDeclaration /**
     * the global order for siblings in the tree.
     */ Modifier private ReferenceType Comparator VariableDeclarator order FieldDeclaration /**
     * The children currently being updated.
     */ Modifier private ReferenceType List TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator updatingChildren ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExplorerTreeNode FieldDeclaration /**
     * A Runnable object that when executed does update some
     * currently pending nodes.
     */ Modifier private ReferenceType ExplorerUpdater VariableDeclarator nodeUpdater ClassCreator ReferenceType ExplorerUpdater FieldDeclaration Modifier private ReferenceType ExplorerTree VariableDeclarator tree ClassDeclaration /**
     * Help class to semi-lazily update nodes in the tree.
     * This class is thread safe.
     */ ExplorerUpdater FieldDeclaration /**
	 * The set of nodes pending being updated.
	 */ Modifier private ReferenceType LinkedList TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator pendingUpdates ClassCreator ReferenceType LinkedList TypeArgument ReferenceType ExplorerTreeNode FieldDeclaration /**
	 * Is this object currently waiting to be run.
	 */ Modifier private BasicType boolean VariableDeclarator hot FieldDeclaration /**
         * The maximum number of nodes to update in one chunk.
         */ Modifier public final static BasicType int VariableDeclarator MAX_UPDATES_PER_RUN Literal 100 MethodDeclaration /**
	 * Schedule this object to run on AWT-EventQueue-0 at some later time.
	 */ Modifier private synchronized schedule IfStatement MemberReference hot BlockStatement ReturnStatement End StatementExpression Assignment MemberReference hot Literal true = StatementExpression MethodInvocation EventQueue This invokeLater MethodDeclaration /**
	 * Schedule updateChildren to be called on node at some later time.
	 * Does nothing if there already is a pending update of node.
	 *
	 * @param node The ExplorerTreeNode to be updated.
	 * @throws NullPointerException If node is null.
	 */ Modifier public synchronized schedule FormalParameter ReferenceType ExplorerTreeNode node IfStatement MethodInvocation node getPending BlockStatement ReturnStatement End StatementExpression MethodInvocation pendingUpdates MemberReference node add StatementExpression MethodInvocation node Literal true setPending StatementExpression MethodInvocation schedule MethodDeclaration /**
	 * Call updateChildren for some pending nodes. Will call at most
	 * MAX_UPDATES_PER_RUN each time. Should there still be pending
	 * updates after that then it will reschedule itself.<p>
	 *
	 * This method should not be called explicitly, instead schedule
	 * should be called and this method will be called automatically.
	 */ Modifier public run LocalVariableDeclaration BasicType boolean VariableDeclarator done Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MAX_UPDATES_PER_RUN MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator node Literal null SynchronizedStatement This IfStatement MethodInvocation ! pendingUpdates isEmpty BlockStatement StatementExpression Assignment MemberReference node MethodInvocation pendingUpdates removeFirst = StatementExpression MethodInvocation node Literal false setPending BlockStatement StatementExpression Assignment MemberReference done Literal true = StatementExpression Assignment MemberReference hot Literal false = BreakStatement End StatementExpression MethodInvocation ClassCreator ReferenceType TreePath MethodInvocation MemberReference node getPathToRoot updateChildren End IfStatement MemberReference ! done BlockStatement StatementExpression MethodInvocation schedule BlockStatement StatementExpression MethodInvocation tree refreshSelection End ReferenceType Runnable ConstructorDeclaration Modifier public /**
     * The constructor of ExplorerTreeModel.
     *
     * @param root an object to place at the root
     * @param myTree the tree
     */ ExplorerTreeModel FormalParameter ReferenceType Object root FormalParameter ReferenceType ExplorerTree myTree StatementExpression SuperConstructorInvocation ClassCreator ReferenceType DefaultMutableTreeNode StatementExpression Assignment MemberReference tree MemberReference myTree = StatementExpression MethodInvocation ClassCreator ReferenceType ExplorerTreeNode MemberReference root This setRoot StatementExpression MethodInvocation Literal false setAsksAllowsChildren StatementExpression Assignment MemberReference modelElementMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType Object TypeArgument ReferenceType Set TypeArgument ReferenceType ExplorerTreeNode = StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation This setTreeModelUMLEventListener getInstance StatementExpression Assignment MemberReference order ClassCreator ReferenceType TypeThenNameOrder = MethodDeclaration Modifier public modelElementChanged FormalParameter ReferenceType Object node StatementExpression MethodInvocation Cast ReferenceType TreeNode MethodInvocation getRoot MemberReference node traverseModified MethodDeclaration Modifier public modelElementAdded FormalParameter ReferenceType Object node StatementExpression MethodInvocation Cast ReferenceType TreeNode MethodInvocation getRoot MemberReference node traverseModified MethodDeclaration /**
     * Traverses the children, finds those affected by the given node, 
     * and notifies them that they are modified.
     *
     * @param start the node to start from
     * @param node the given node
     */ Modifier private traverseModified FormalParameter ReferenceType TreeNode start FormalParameter ReferenceType Object node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation start children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType TreeNode VariableDeclarator child Cast ReferenceType TreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child MemberReference node traverseModified End IfStatement BinaryOperation instanceof MemberReference start ReferenceType ExplorerTreeNode BlockStatement StatementExpression Cast ReferenceType ExplorerTreeNode MemberReference start End MethodDeclaration Modifier public modelElementRemoved FormalParameter ReferenceType Object node ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator changeNode MethodInvocation MemberReference node findNodes BlockStatement IfStatement BinaryOperation != MethodInvocation changeNode getParent Literal null BlockStatement StatementExpression MethodInvocation MemberReference changeNode removeNodeFromParent End End StatementExpression MethodInvocation Cast ReferenceType TreeNode MethodInvocation getRoot MemberReference node traverseModified MethodDeclaration Modifier public structureChanged IfStatement BinaryOperation instanceof MethodInvocation getRoot ReferenceType ExplorerTreeNode BlockStatement StatementExpression Cast ReferenceType ExplorerTreeNode MethodInvocation getRoot End ForStatement EnhancedForControl VariableDeclaration ReferenceType Collection VariableDeclarator nodes MethodInvocation modelElementMap values BlockStatement StatementExpression MethodInvocation nodes clear End StatementExpression MethodInvocation modelElementMap clear StatementExpression Assignment MemberReference modelElementMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType Object TypeArgument ReferenceType Set TypeArgument ReferenceType ExplorerTreeNode = LocalVariableDeclaration ReferenceType Project VariableDeclarator proj MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator rootNode ClassCreator ReferenceType ExplorerTreeNode MemberReference proj This StatementExpression MethodInvocation MemberReference proj MemberReference rootNode addToMap StatementExpression MethodInvocation MemberReference rootNode setRoot MethodDeclaration /**
     * updates next level of the explorer tree for a given tree path.
     *
     * @param path the path to the node whose children to update.
     * @throws IllegalArgumentException if node has a child that is not a
     *         (descendant of) DefaultMutableTreeNode.
     */ Modifier public updateChildren FormalParameter ReferenceType TreePath path LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator node Cast ReferenceType ExplorerTreeNode MethodInvocation path getLastPathComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation node getUserObject IfStatement BinaryOperation == MemberReference rules Literal null BlockStatement ReturnStatement End IfStatement MethodInvocation updatingChildren MemberReference node contains BlockStatement ReturnStatement End StatementExpression MethodInvocation updatingChildren MemberReference node add LocalVariableDeclaration ReferenceType List VariableDeclarator children MethodInvocation MemberReference node reorderChildren LocalVariableDeclaration ReferenceType List VariableDeclarator newChildren ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Set VariableDeclarator deps ClassCreator ReferenceType HashSet StatementExpression MethodInvocation MemberReference modelElement MemberReference newChildren MemberReference deps collectChildren StatementExpression MethodInvocation node MemberReference deps setModifySet StatementExpression MethodInvocation MemberReference node MemberReference children MemberReference newChildren mergeChildren StatementExpression MethodInvocation updatingChildren MemberReference node remove MethodDeclaration /**
     * Sorts the child nodes of node using the current ordering.<p>
     *
     * Note: UserObject is only available from descendants of
     * DefaultMutableTreeNode, so any other children couldn't be sorted.
     * Thus these are currently forbidden. But currently no such node is
     * ever inserted into the tree.
     *
     * @param node the node whose children to sort
     * @return the UserObjects of the children, in the same order as the
     *         children.
     * @throws IllegalArgumentException if node has a child that is not a
     *         (descendant of) DefaultMutableTreeNode.
     */ Modifier private ReferenceType List TypeArgument ReferenceType Object reorderChildren FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Object VariableDeclarator childUserObjects ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator reordered ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExplorerTreeNode LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enChld MethodInvocation node children LocalVariableDeclaration ReferenceType Object VariableDeclarator lastObj Literal null WhileStatement MethodInvocation enChld hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation enChld nextElement IfStatement BinaryOperation instanceof MemberReference child ReferenceType ExplorerTreeNode BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj Cast ReferenceType ExplorerTreeNode MemberReference child IfStatement BinaryOperation && BinaryOperation != MemberReference lastObj Literal null BinaryOperation > MethodInvocation order MemberReference lastObj MemberReference obj compare Literal 0 BlockStatement IfStatement MethodInvocation ! tree ClassCreator ReferenceType TreePath MethodInvocation Cast ReferenceType ExplorerTreeNode MemberReference child getPathToRoot isPathSelected BlockStatement StatementExpression MethodInvocation reordered Cast ReferenceType ExplorerTreeNode MemberReference child add BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator prev Cast ReferenceType ExplorerTreeNode Cast ReferenceType ExplorerTreeNode MemberReference child WhileStatement BinaryOperation && BinaryOperation != MemberReference prev Literal null BinaryOperation >= MethodInvocation order MethodInvocation prev getUserObject MemberReference obj compare Literal 0 BlockStatement StatementExpression MethodInvocation reordered MemberReference prev add StatementExpression MethodInvocation childUserObjects BinaryOperation - MethodInvocation childUserObjects size Literal 1 remove StatementExpression Assignment MemberReference prev Cast ReferenceType ExplorerTreeNode MethodInvocation prev getPreviousSibling = End StatementExpression MethodInvocation childUserObjects MemberReference obj add StatementExpression Assignment MemberReference lastObj MemberReference obj = End BlockStatement StatementExpression MethodInvocation childUserObjects MemberReference obj add StatementExpression Assignment MemberReference lastObj MemberReference obj = End BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Incomprehencible child node "" MethodInvocation child toString End End ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child MemberReference reordered BlockStatement StatementExpression SuperMethodInvocation MemberReference child removeNodeFromParent End ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child MemberReference reordered BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation child getUserObject LocalVariableDeclaration BasicType int VariableDeclarator ip MethodInvocation Collections MemberReference childUserObjects MemberReference obj MemberReference order binarySearch IfStatement BinaryOperation < MemberReference ip Literal 0 BlockStatement StatementExpression Assignment MemberReference ip BinaryOperation + MemberReference ip Literal 1 = End StatementExpression SuperMethodInvocation MemberReference child MemberReference node MemberReference ip insertNodeInto StatementExpression MethodInvocation childUserObjects MemberReference ip MemberReference obj add End ReturnStatement MemberReference childUserObjects MethodDeclaration /**
     * Collects the set of children modelElement should have at this point in
     * time. The children are added to newChildren.<p>
     *
     * Note: Both newChildren and deps are modified by this function, it
     * is in fact it's primary purpose to modify these collections. It is your
     * responsibility to make sure that they are empty when it is called, or
     * to know what you are doing if they are not.
     *
     * @param modelElement the element to collect children for.
     * @param newChildren the new children of modelElement.
     * @param deps the set of objects that should be monitored for changes
     *        since these could affect this list.
     * @throws UnsupportedOperationException if add is not supported by
     *         newChildren or addAll isn't supported by deps.
     * @throws NullPointerException if newChildren or deps is null.
     * @throws ClassCastException if newChildren or deps rejects some element.
     * @throws IllegalArgumentException if newChildren or deps rejects some
     *         element.
     */ Modifier private collectChildren FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType List newChildren FormalParameter ReferenceType Set deps IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType PerspectiveRule VariableDeclarator rule MemberReference rules BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children Literal null TryStatement StatementExpression Assignment MemberReference children MethodInvocation rule MemberReference modelElement getChildren = CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""InvalidElementException in ExplorerTree : "" MethodInvocation e getStackTrace debug ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator child MemberReference children BlockStatement IfStatement BinaryOperation == MemberReference child Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""PerspectiveRule "" MemberReference rule Literal "" wanted to "" Literal ""add null to the explorer tree!"" warn IfStatement MethodInvocation ! newChildren MemberReference child contains BlockStatement StatementExpression MethodInvocation newChildren MemberReference child add End End End TryStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator dependencies MethodInvocation rule MemberReference modelElement getDependencies StatementExpression MethodInvocation deps MemberReference dependencies addAll CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal ""InvalidElementException in ExplorerTree : "" MethodInvocation e getStackTrace debug End StatementExpression MethodInvocation Collections MemberReference newChildren MemberReference order sort StatementExpression MethodInvocation deps MemberReference newChildren addAll MethodDeclaration /**
     * Returns a Set of current children to remove and modifies newChildren
     * to only contain the children not already in children and not subsumed
     * by any WeakExplorerNode in children.<p>
     *
     * Note: newChildren will be modified by this call.<p>
     *
     * Note: It is expected that a WeakExplorerNode will not be reused and
     * thus they will always initially be slated for removal, and only those
     * nodes are in fact used to check subsumption of new nodes. New nodes
     * are not checked among themselves for subsumtion.
     *
     * @param children is the list of current children.
     * @param newChildren is the list of expected children.
     * @return the Set of current children to remove.
     * @throws UnsupportedOperationException if newChildren doesn't support
     *         remove or removeAll.
     * @throws NullPointerException if either argument is null.
     */ Modifier private ReferenceType Set prepareAddRemoveSets FormalParameter ReferenceType List children FormalParameter ReferenceType List newChildren LocalVariableDeclaration ReferenceType Set VariableDeclarator removeSet ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Set VariableDeclarator commonObjects ClassCreator ReferenceType HashSet IfStatement BinaryOperation < MethodInvocation children size MethodInvocation newChildren size BlockStatement StatementExpression MethodInvocation commonObjects MemberReference children addAll StatementExpression MethodInvocation commonObjects MemberReference newChildren retainAll BlockStatement StatementExpression MethodInvocation commonObjects MemberReference newChildren addAll StatementExpression MethodInvocation commonObjects MemberReference children retainAll End StatementExpression MethodInvocation newChildren MemberReference commonObjects removeAll StatementExpression MethodInvocation removeSet MemberReference children addAll StatementExpression MethodInvocation removeSet MemberReference commonObjects removeAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation removeSet iterator LocalVariableDeclaration ReferenceType List VariableDeclarator weakNodes Literal null WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType WeakExplorerNode BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType WeakExplorerNode VariableDeclarator node Cast ReferenceType WeakExplorerNode MemberReference obj IfStatement BinaryOperation == MemberReference weakNodes Literal null BlockStatement StatementExpression Assignment MemberReference weakNodes ClassCreator ReferenceType LinkedList = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation newChildren iterator WhileStatement MethodInvocation it2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj2 MethodInvocation it2 next IfStatement BinaryOperation instanceof MemberReference obj2 ReferenceType WeakExplorerNode BlockStatement StatementExpression MethodInvocation weakNodes MemberReference obj2 add End End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it3 MethodInvocation weakNodes iterator WhileStatement MethodInvocation it3 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj3 MethodInvocation it3 next IfStatement MethodInvocation node MemberReference obj3 subsumes BlockStatement StatementExpression MethodInvocation it remove StatementExpression MethodInvocation newChildren MemberReference obj3 remove StatementExpression MethodInvocation it3 remove BreakStatement End End End ReturnStatement MemberReference removeSet MethodDeclaration /**
     * Merges the current children with the new children removing children no
     * longer present and adding new children in the right place.
     *
     * @param node the TreeNode were merging lists for.
     * @param children the current child UserObjects, in order.
     * @param newChildren the expected child UserObjects, in order.
     * @throws UnsupportedOperationException if the Iterator returned by
     *         newChildren doesn't support the remove operation, or if
     *         newChildren itself doesn't support remove or removeAll.
     * @throws NullPointerException if node, children or newChildren are null.
     */ Modifier private mergeChildren FormalParameter ReferenceType ExplorerTreeNode node FormalParameter ReferenceType List children FormalParameter ReferenceType List newChildren LocalVariableDeclaration ReferenceType Set VariableDeclarator removeObjects MethodInvocation MemberReference children MemberReference newChildren prepareAddRemoveSets LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator actualNodes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExplorerTreeNode LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator childrenEnum MethodInvocation node children WhileStatement MethodInvocation childrenEnum hasMoreElements BlockStatement StatementExpression MethodInvocation actualNodes Cast ReferenceType ExplorerTreeNode MethodInvocation childrenEnum nextElement add End LocalVariableDeclaration BasicType int VariableDeclarator position Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator childNodes MethodInvocation actualNodes iterator LocalVariableDeclaration ReferenceType Iterator VariableDeclarator newNodes MethodInvocation newChildren iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator firstNew TernaryExpression MethodInvocation newNodes hasNext MethodInvocation newNodes next Literal null WhileStatement MethodInvocation childNodes hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator childObj MethodInvocation childNodes next IfStatement BinaryOperation instanceof MemberReference childObj ReferenceType ExplorerTreeNode BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MemberReference childObj LocalVariableDeclaration ReferenceType Object VariableDeclarator userObject MethodInvocation child getUserObject IfStatement MethodInvocation removeObjects MemberReference userObject contains BlockStatement StatementExpression MethodInvocation MemberReference child removeNodeFromParent BlockStatement WhileStatement BinaryOperation && BinaryOperation != MemberReference firstNew Literal null BinaryOperation < MethodInvocation order MemberReference firstNew MemberReference userObject compare Literal 0 BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType ExplorerTreeNode MemberReference firstNew This MemberReference node MemberReference position insertNodeInto StatementExpression MemberReference ++ position StatementExpression Assignment MemberReference firstNew TernaryExpression MethodInvocation newNodes hasNext MethodInvocation newNodes next Literal null = End StatementExpression MemberReference ++ position End End WhileStatement BinaryOperation != MemberReference firstNew Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType ExplorerTreeNode MemberReference firstNew This MemberReference node MemberReference position insertNodeInto StatementExpression MemberReference ++ position StatementExpression Assignment MemberReference firstNew TernaryExpression MethodInvocation newNodes hasNext MethodInvocation newNodes next Literal null = End MethodDeclaration Modifier public Annotation Override insertNodeInto FormalParameter ReferenceType MutableTreeNode newChild FormalParameter ReferenceType MutableTreeNode parent FormalParameter BasicType int index StatementExpression SuperMethodInvocation MemberReference newChild MemberReference parent MemberReference index insertNodeInto IfStatement BinaryOperation instanceof MemberReference newChild ReferenceType ExplorerTreeNode BlockStatement StatementExpression MethodInvocation Cast ReferenceType ExplorerTreeNode MemberReference newChild addNodesToMap End MethodDeclaration Modifier public Annotation Override removeNodeFromParent FormalParameter ReferenceType MutableTreeNode node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ExplorerTreeNode BlockStatement StatementExpression MethodInvocation Cast ReferenceType ExplorerTreeNode MemberReference node removeNodesFromMap StatementExpression Cast ReferenceType ExplorerTreeNode MemberReference node End StatementExpression SuperMethodInvocation MemberReference node removeNodeFromParent MethodDeclaration /**
     * Map all nodes in the subtree rooted at node.
     *
     * @param node the node to be added
     */ Modifier private addNodesToMap FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation node children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child addNodesToMap End StatementExpression MethodInvocation MethodInvocation node getUserObject MemberReference node addToMap MethodDeclaration /**
     * Unmap all nodes in the subtree rooted at the given node.
     *
     * @param node the given node
     */ Modifier private removeNodesFromMap FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation node children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child removeNodesFromMap End StatementExpression MethodInvocation MethodInvocation node getUserObject MemberReference node removeFromMap MethodDeclaration /**
     * Adds a new tree node and model element to the map.
     * nodes are removed from the map when a {@link #modelElementRemoved(Object)
     * modelElementRemoved} event is received.
     *
     * @param modelElement the modelelement to be added
     * @param node the node to be added
     */ Modifier private addToMap FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation != MemberReference nodes Literal null BlockStatement StatementExpression MethodInvocation nodes MemberReference node add BlockStatement StatementExpression Assignment MemberReference nodes ClassCreator ReferenceType HashSet TypeArgument ReferenceType ExplorerTreeNode = StatementExpression MethodInvocation nodes MemberReference node add StatementExpression MethodInvocation modelElementMap MemberReference modelElement MemberReference nodes put End MethodDeclaration /**
     * removes a new tree node and model element from the map.
     *
     * @param modelElement the modelelement to be removed
     * @param node the node to be removed
     */ Modifier private removeFromMap FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation != MemberReference nodes Literal null BlockStatement StatementExpression MethodInvocation nodes MemberReference node remove IfStatement MethodInvocation nodes isEmpty BlockStatement StatementExpression MethodInvocation modelElementMap MemberReference modelElement remove End End MethodDeclaration /**
     * Node lookup for a given model element.
     *
     * @param modelElement the given modelelement
     * @return the nodes sought
     */ Modifier private ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode findNodes FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation == MemberReference nodes Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End ReturnStatement MemberReference nodes MethodDeclaration /**
     * Updates the explorer for new perspectives / orderings.
     *
     * {@inheritDoc}
     */ Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType PerspectiveComboBox BlockStatement StatementExpression Assignment MemberReference rules Cast ReferenceType ExplorerPerspective MethodInvocation e getItem = BlockStatement StatementExpression Assignment MemberReference order Cast ReferenceType Comparator MethodInvocation e getItem = End StatementExpression MethodInvocation structureChanged StatementExpression MethodInvocation tree MethodInvocation tree Literal 1 getPathForRow expandPath MethodDeclaration /**
     * @return Returns the nodeUpdater.
     */ ReferenceType ExplorerUpdater getNodeUpdater ReturnStatement MemberReference nodeUpdater FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 3132732494386565870L ReferenceType DefaultTreeModel ReferenceType TreeModelUMLEventListener ReferenceType ItemListener",1
1607,1607,,0
1102,1102,,1
1610,1610,,0
639,639,"CompilationUnit PackageDeclaration org.argouml.gefext Import javax.management.ListenerNotFoundException Import javax.management.MBeanNotificationInfo Import javax.management.Notification Import javax.management.NotificationBroadcasterSupport Import javax.management.NotificationEmitter Import javax.management.NotificationFilter Import javax.management.NotificationListener Import org.tigris.gef.presentation.FigCircle ClassDeclaration Modifier public /**
 * Primitive Fig for displaying circles and ovals.
 *
 * @author Michiel
 */ ArgoFigCircle FieldDeclaration Modifier private ReferenceType NotificationBroadcasterSupport VariableDeclarator notifier ClassCreator ReferenceType NotificationBroadcasterSupport ConstructorDeclaration Modifier public ArgoFigCircle FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h MethodDeclaration Modifier public Annotation Override deleteFromModel StatementExpression SuperMethodInvocation deleteFromModel StatementExpression MethodInvocation Literal ""remove"" Literal null Literal null firePropChange StatementExpression MethodInvocation notifier ClassCreator ReferenceType Notification Literal ""remove"" This Literal 0 sendNotification MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType NotificationListener listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener MethodDeclaration Modifier public addNotificationListener FormalParameter ReferenceType NotificationListener listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback IllegalArgumentException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback addNotificationListener MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType NotificationListener listener ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener ReferenceType FigCircle ReferenceType NotificationEmitter",0
962,962,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Iterator Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Component -> Resident Element.
 *
 * @author mvw@tigris.org
 *
 */ GoComponentToResidentModelElement MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.component.resident.modelelement"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAComponent getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator eri MethodInvocation Model MethodInvocation MemberReference parent getResidentElements MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation eri hasNext BlockStatement StatementExpression MethodInvocation result MethodInvocation Model MethodInvocation MethodInvocation eri next getResident getFacade add End ReturnStatement MemberReference result End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1340,1340,,0
102,102,"CompilationUnit PackageDeclaration org.argouml.application Import java.awt.Cursor Import java.awt.EventQueue Import java.awt.GraphicsEnvironment Import java.awt.Rectangle Import java.io.File Import java.io.IOException Import java.io.InputStream Import java.net.InetAddress Import java.net.URL Import java.net.UnknownHostException Import java.util.ArrayList Import java.util.Enumeration Import java.util.Iterator Import java.util.List Import java.util.Properties Import javax.swing.JOptionPane Import javax.swing.JPanel Import javax.swing.ToolTipManager Import javax.swing.UIDefaults Import javax.swing.UIManager Import org.apache.log4j.BasicConfigurator Import org.apache.log4j.Level Import org.apache.log4j.Logger Import org.apache.log4j.PropertyConfigurator Import org.argouml.application.api.Argo Import org.argouml.application.api.CommandLineInterface Import org.argouml.application.security.ArgoAwtExceptionHandler Import org.argouml.cognitive.AbstractCognitiveTranslator Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ui.ToDoPane Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.language.java.generator.GeneratorJava Import org.argouml.model.Model Import org.argouml.moduleloader.InitModuleLoader Import org.argouml.moduleloader.ModuleLoader2 Import org.argouml.notation.InitNotation Import org.argouml.notation.providers.java.InitNotationJava Import org.argouml.notation.providers.uml.InitNotationUml Import org.argouml.notation.ui.InitNotationUI Import org.argouml.persistence.PersistenceManager Import org.argouml.profile.init.InitProfileSubsystem Import org.argouml.ui.LookAndFeelMgr Import org.argouml.ui.ProjectBrowser Import org.argouml.ui.SplashScreen Import org.argouml.ui.cmd.ActionExit Import org.argouml.ui.cmd.InitUiCmdSubsystem Import org.argouml.ui.cmd.PrintManager Import org.argouml.uml.diagram.ui.InitDiagramAppearanceUI Import org.argouml.uml.reveng.java.JavaImport Import org.argouml.util.ArgoFrame Import org.argouml.util.logging.SimpleTimer Import org.tigris.gef.util.Util ClassDeclaration Modifier public /**
 * This is the main class for two of the types 
 * of ArgoUML application invocation: 
 * non-GUI command line and Swing GUI.<p>
 * 
 * NOTE: Functionality which should be common to all types of application
 * invocation (e.g. extension modules to be loaded) should added to some
 * common class and <b>not</b> here.  Adding things here will cause behavior
 * to diverge for other application invocation types (e.g. ArgoEclipse).
 *
 */ Main FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType Main getLogger FieldDeclaration /**
     * The location of the default logging configuration (.lcf) file.
     */ Modifier public final static ReferenceType String VariableDeclarator DEFAULT_LOGGING_CONFIGURATION Literal ""org/argouml/resource/default.lcf"" FieldDeclaration /**
     * The default implementation to start.
     */ Modifier private final static ReferenceType String VariableDeclarator DEFAULT_MODEL_IMPLEMENTATION Literal ""org.argouml.model.mdr.MDRModelImplementation"" FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType Runnable VariableDeclarator postLoadActions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Runnable MethodDeclaration /**
     * The main entry point of ArgoUML.
     * @param args command line parameters
     */ Modifier public static main FormalParameter ReferenceType String args TryStatement StatementExpression MethodInvocation LOG Literal ""ArgoUML Started."" info LocalVariableDeclaration ReferenceType SimpleTimer VariableDeclarator st ClassCreator ReferenceType SimpleTimer StatementExpression MethodInvocation st Literal ""begin"" mark StatementExpression MethodInvocation checkJVMVersion StatementExpression MethodInvocation checkHostsFile StatementExpression MethodInvocation Configuration load LocalVariableDeclaration ReferenceType String VariableDeclarator directory MethodInvocation Argo getDirectory StatementExpression MethodInvocation org.tigris.gef.base.Globals MemberReference directory setLastDirectory StatementExpression MethodInvocation initVersion StatementExpression MethodInvocation Translator MethodInvocation Configuration MemberReference Argo KEY_LOCALE getString init StatementExpression MethodInvocation org.argouml.cognitive.Translator ClassCreator ReferenceType AbstractCognitiveTranslator MethodDeclaration Modifier public ReferenceType String i18nlocalize FormalParameter ReferenceType String key ReturnStatement MethodInvocation Translator MemberReference key localize MethodDeclaration Modifier public ReferenceType String i18nmessageFormat FormalParameter ReferenceType String key FormalParameter ReferenceType Object iArgs ReturnStatement MethodInvocation Translator MemberReference key MemberReference iArgs messageFormat setTranslator StatementExpression MethodInvocation org.argouml.util.Tools logVersionInfo StatementExpression MethodInvocation st Literal ""arguments"" mark StatementExpression MethodInvocation System Literal ""gef.imageLocation"" Literal ""/org/argouml/Images"" setProperty StatementExpression MethodInvocation System Literal ""apple.laf.useScreenMenuBar"" Literal ""true"" setProperty StatementExpression MethodInvocation System Literal ""com.apple.mrj.application.apple.menu.about.name"" Literal ""ArgoUML"" setProperty LocalVariableDeclaration BasicType boolean VariableDeclarator doSplash MethodInvocation Configuration MemberReference Argo KEY_SPLASH Literal true getBoolean LocalVariableDeclaration BasicType boolean VariableDeclarator reloadRecent MethodInvocation Configuration MemberReference Argo KEY_RELOAD_RECENT_PROJECT Literal false getBoolean LocalVariableDeclaration BasicType boolean VariableDeclarator batch Literal false LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator commands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator projectName Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator theTheme Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-"" startsWith args BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator themeName MethodInvocation LookAndFeelMgr MethodInvocation MemberReference ArraySelector MemberReference i args getThemeClassNameFromArg getInstance IfStatement BinaryOperation != MemberReference themeName Literal null BlockStatement StatementExpression Assignment MemberReference theTheme MemberReference themeName = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-help"" equalsIgnoreCase args MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-h"" equalsIgnoreCase args MemberReference ArraySelector MemberReference i MethodInvocation Literal ""--help"" equalsIgnoreCase args MemberReference ArraySelector MemberReference i MethodInvocation Literal ""/?"" equalsIgnoreCase args BlockStatement StatementExpression MethodInvocation printUsage StatementExpression MethodInvocation System Literal 0 exit IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-nosplash"" equalsIgnoreCase args BlockStatement StatementExpression Assignment MemberReference doSplash Literal false = IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-norecentfile"" equalsIgnoreCase args BlockStatement StatementExpression Assignment MemberReference reloadRecent Literal false = IfStatement BinaryOperation && MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-command"" equalsIgnoreCase args BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference args length BlockStatement StatementExpression MethodInvocation commands MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args add StatementExpression MemberReference ++ i IfStatement BinaryOperation && MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-locale"" equalsIgnoreCase args BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference args length BlockStatement StatementExpression MethodInvocation Translator MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 args setLocale StatementExpression MemberReference ++ i IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-batch"" equalsIgnoreCase args BlockStatement StatementExpression Assignment MemberReference batch Literal true = IfStatement BinaryOperation && MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-open"" equalsIgnoreCase args BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference args length BlockStatement StatementExpression Assignment MemberReference projectName MemberReference ArraySelector MemberReference ++ i args = IfStatement BinaryOperation && MemberReference ArraySelector MemberReference i MethodInvocation Literal ""-print"" equalsIgnoreCase args BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference args length BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator projectToBePrinted MethodInvocation PersistenceManager MethodInvocation MemberReference ArraySelector MemberReference ++ i args fixExtension getInstance LocalVariableDeclaration ReferenceType URL VariableDeclarator urlToBePrinted MethodInvocation MemberReference projectToBePrinted Literal null projectUrl StatementExpression MethodInvocation ProjectBrowser MethodInvocation ClassCreator ReferenceType File MethodInvocation urlToBePrinted getFile Literal true Literal null loadProject getInstance StatementExpression MethodInvocation PrintManager MethodInvocation print getInstance StatementExpression MethodInvocation System Literal 0 exit BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal ""Ignoring unknown/incomplete option '"" MemberReference ArraySelector MemberReference i args Literal ""'"" println End End End End End End End End End BlockStatement IfStatement BinaryOperation == MemberReference projectName Literal null BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + Literal ""Setting projectName to '"" MemberReference ArraySelector MemberReference i args Literal ""'"" println StatementExpression Assignment MemberReference projectName MemberReference ArraySelector MemberReference i args = End End End StatementExpression MethodInvocation st Literal ""initialize laf"" mark StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation initializeLookAndFeel getInstance IfStatement BinaryOperation != MemberReference theTheme Literal null BlockStatement StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation MemberReference theTheme setCurrentTheme getInstance End StatementExpression MethodInvocation st Literal ""create splash"" mark LocalVariableDeclaration ReferenceType SplashScreen VariableDeclarator splash Literal null IfStatement BinaryOperation && MemberReference doSplash MemberReference ! batch BlockStatement StatementExpression Assignment MemberReference splash MethodInvocation initializeSplash = End StatementExpression MethodInvocation st Literal ""initialize model subsystem"" mark StatementExpression MethodInvocation initModel StatementExpression MethodInvocation MemberReference splash Literal 5 Literal ""statusmsg.bar.model-subsystem"" updateProgress StatementExpression MethodInvocation st Literal ""initialize the profile subsystem"" mark StatementExpression ClassCreator MethodInvocation init ReferenceType InitProfileSubsystem StatementExpression MethodInvocation st Literal ""modules"" mark StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitModuleLoader initSubsystem StatementExpression MethodInvocation GeneratorJava getInstance StatementExpression MethodInvocation st Literal ""initialize gui"" mark LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator pb MethodInvocation MemberReference splash initializeGUI StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitUiCmdSubsystem initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitNotationUI initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitNotation initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitNotationUml initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitNotationJava initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType InitDiagramAppearanceUI initSubsystem IfStatement BinaryOperation && MemberReference reloadRecent BinaryOperation == MemberReference projectName Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Configuration MemberReference Argo KEY_MOST_RECENT_PROJECT_FILE Literal """" getString IfStatement Literal ! """" BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference s IfStatement MethodInvocation file exists BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Re-opening project "" MemberReference s info StatementExpression Assignment MemberReference projectName MemberReference s = BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Cannot re-open "" MemberReference s Literal "" because it does not exist"" warn End End End LocalVariableDeclaration ReferenceType URL VariableDeclarator urlToOpen Literal null IfStatement BinaryOperation != MemberReference projectName Literal null BlockStatement StatementExpression Assignment MemberReference projectName MethodInvocation PersistenceManager MethodInvocation MemberReference projectName fixExtension getInstance = StatementExpression Assignment MemberReference urlToOpen MethodInvocation MemberReference projectName MemberReference urlToOpen projectUrl = End StatementExpression MethodInvocation st Literal ""perform commands"" mark IfStatement MemberReference batch BlockStatement StatementExpression MethodInvocation MemberReference commands performCommands StatementExpression Assignment MemberReference commands Literal null = StatementExpression MethodInvocation System.out Literal ""Exiting because we are running in batch."" println StatementExpression ClassCreator MethodInvocation Literal null doCommand ReferenceType ActionExit ReturnStatement End IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement IfStatement BinaryOperation == MemberReference urlToOpen Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal ""statusmsg.bar.defaultproject"" localize showStatus getStatusBar BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MemberReference projectName StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal ""statusmsg.bar.readingproject"" MemberReference msgArgs messageFormat showStatus getStatusBar End StatementExpression MethodInvocation splash MethodInvocation Literal 40 showProgress getStatusBar End StatementExpression MethodInvocation st Literal ""make empty project"" mark StatementExpression MethodInvocation Designer disableCritiquing StatementExpression MethodInvocation Designer clearCritiquing LocalVariableDeclaration BasicType boolean VariableDeclarator projectLoaded Literal false IfStatement BinaryOperation != MemberReference urlToOpen Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation urlToOpen getFile LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference filename StatementExpression MethodInvocation System.err BinaryOperation + Literal ""The url of the file to open is "" MemberReference urlToOpen println StatementExpression MethodInvocation System.err BinaryOperation + Literal ""The filename is "" MemberReference filename println StatementExpression MethodInvocation System.err BinaryOperation + Literal ""The file is "" MemberReference file println StatementExpression MethodInvocation System.err BinaryOperation + Literal ""File.exists = "" MethodInvocation file exists println StatementExpression Assignment MemberReference projectLoaded MethodInvocation pb MemberReference file Literal true Literal null loadProject = End IfStatement MemberReference ! projectLoaded BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager setCurrentProject getManager StatementExpression MethodInvocation ProjectManager MethodInvocation Literal false setSaveEnabled getManager End StatementExpression MethodInvocation st Literal ""set project"" mark StatementExpression MethodInvocation Designer enableCritiquing StatementExpression MethodInvocation st Literal ""perspectives"" mark IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation Literal 75 showProgress getStatusBar End StatementExpression MethodInvocation st Literal ""open window"" mark StatementExpression MethodInvocation MemberReference splash Literal 95 Literal ""statusmsg.bar.open-project-browser"" updateProgress StatementExpression MethodInvocation ArgoFrame MethodInvocation Literal true setVisible getInstance StatementExpression MethodInvocation st Literal ""close splash"" mark IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash Literal false setVisible StatementExpression MethodInvocation splash dispose StatementExpression Assignment MemberReference splash Literal null = End StatementExpression MethodInvocation MemberReference commands performCommands StatementExpression Assignment MemberReference commands Literal null = StatementExpression MethodInvocation st Literal ""start critics"" mark LocalVariableDeclaration ReferenceType Runnable VariableDeclarator startCritics ClassCreator ReferenceType StartCritics StatementExpression MethodInvocation Main MemberReference startCritics addPostLoadAction StatementExpression MethodInvocation st Literal ""start loading modules"" mark LocalVariableDeclaration ReferenceType Runnable VariableDeclarator moduleLoader ClassCreator ReferenceType LoadModules StatementExpression MethodInvocation Main MemberReference moduleLoader addPostLoadAction LocalVariableDeclaration ReferenceType PostLoad VariableDeclarator pl ClassCreator ReferenceType PostLoad MemberReference postLoadActions LocalVariableDeclaration ReferenceType Thread VariableDeclarator postLoadThead ClassCreator ReferenceType Thread MemberReference pl StatementExpression MethodInvocation postLoadThead start StatementExpression MethodInvocation LOG Literal """" info StatementExpression MethodInvocation LOG Literal ""profile of load time ############"" info ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator i MethodInvocation st result MethodInvocation i hasMoreElements BlockStatement StatementExpression MethodInvocation LOG MethodInvocation i nextElement info End StatementExpression MethodInvocation LOG Literal ""#################################"" info StatementExpression MethodInvocation LOG Literal """" info StatementExpression Assignment MemberReference st Literal null = StatementExpression MethodInvocation ArgoFrame MethodInvocation MethodInvocation Cursor MemberReference Cursor DEFAULT_CURSOR getPredefinedCursor setCursor getInstance StatementExpression MethodInvocation ToolTipManager MethodInvocation Literal 50000000 setDismissDelay sharedInstance CatchClause CatchClauseParameter Throwable t TryStatement StatementExpression MethodInvocation LOG Literal ""Fatal error on startup.  ArgoUML failed to start"" MemberReference t fatal StatementExpression MethodInvocation System.out BinaryOperation + Literal ""Fatal error on startup.  "" Literal ""ArgoUML failed to start."" println StatementExpression MethodInvocation t printStackTrace StatementExpression MethodInvocation System Literal 1 exit MethodDeclaration /**
     * Initialise the UMl model repository.
     */ Modifier private static initModel LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation System Literal ""argouml.model.implementation"" MemberReference DEFAULT_MODEL_IMPLEMENTATION getProperty LocalVariableDeclaration ReferenceType Throwable VariableDeclarator ret MethodInvocation Model MemberReference className initialise IfStatement BinaryOperation != MemberReference ret Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""Model component not correctly initialized."" MemberReference ret fatal StatementExpression MethodInvocation System.err BinaryOperation + MemberReference className Literal "" is not a working Model implementation."" println StatementExpression MethodInvocation System Literal 1 exit End MethodDeclaration /**
     * Helper to update progress if we have a splash screen displayed.
     *
     * @param splash <code>true</code> if the splash is to be shown
     * @param percent the new percentage for progress bar
     * @param message the messae to be shown in the splash
     */ Modifier private static updateProgress FormalParameter ReferenceType SplashScreen splash FormalParameter BasicType int percent FormalParameter ReferenceType String message IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator MemberReference message localize showStatus getStatusBar StatementExpression MethodInvocation splash MethodInvocation MemberReference percent showProgress getStatusBar End MethodDeclaration /**
     * Calculates the {@link URL} for the given project name.
     * If the file does not exist or cannot be converted the default
     * {@link URL} is returned.
     *
     * @param projectName is the file name of the project
     * @param urlToOpen is the default {@link URL}
     * @return the new URL.
     */ Modifier private static ReferenceType URL projectUrl FormalParameter Modifier final ReferenceType String projectName FormalParameter ReferenceType URL urlToOpen LocalVariableDeclaration ReferenceType File VariableDeclarator projectFile ClassCreator ReferenceType File MemberReference projectName IfStatement MethodInvocation ! projectFile exists BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal ""Project file '"" MemberReference projectFile Literal ""' does not exist."" println BlockStatement TryStatement StatementExpression Assignment MemberReference urlToOpen MethodInvocation Util MemberReference projectFile fileToURL = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal ""Exception opening project in main()"" MemberReference e error End ReturnStatement MemberReference urlToOpen MethodDeclaration /**
     * Prints the usage message.
     */ Modifier private static printUsage StatementExpression MethodInvocation System.err Literal ""Usage: [options] [project-file]"" println StatementExpression MethodInvocation System.err Literal ""Options include: "" println StatementExpression MethodInvocation System.err Literal ""  -help           display this information"" println StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation printThemeArgs getInstance StatementExpression MethodInvocation System.err Literal ""  -nosplash       don't display logo at startup"" println StatementExpression MethodInvocation System.err Literal ""  -norecentfile   don't reload last saved file"" println StatementExpression MethodInvocation System.err Literal ""  -command <arg>  command to perform on startup"" println StatementExpression MethodInvocation System.err Literal ""  -batch          don't start GUI"" println StatementExpression MethodInvocation System.err Literal ""  -locale <arg>   set the locale (e.g. 'en_GB')"" println StatementExpression MethodInvocation System.err Literal """" println StatementExpression MethodInvocation System.err BinaryOperation + Literal ""You can also set java settings which influence "" Literal ""the behaviour of ArgoUML:"" println StatementExpression MethodInvocation System.err BinaryOperation + Literal ""  -Xms250M -Xmx500M  [makes ArgoUML reserve "" Literal ""more memory for large projects]"" println StatementExpression MethodInvocation System.err Literal ""\n\n"" println MethodDeclaration /**
     * Check tha JVM Version.
     * <p>
     * If it is a unsupported JVM version we exit immediately.
     * <p>
     * NOTE: In most cases the JVM classloader will complain about an
     * UnsupportedClassVersionError long before we get anywhere near this point
     * in the initialization.
     */ Modifier private static checkJVMVersion LocalVariableDeclaration ReferenceType String VariableDeclarator javaVersion MethodInvocation System Literal ""java.version"" Literal """" getProperty IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation javaVersion Literal ""1.4"" startsWith MethodInvocation javaVersion Literal ""1.3"" startsWith MethodInvocation javaVersion Literal ""1.2"" startsWith MethodInvocation javaVersion Literal ""1.1"" startsWith BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""You are using Java "" MemberReference javaVersion Literal "", "" Literal ""Please use Java 5 (aka 1.5) or later"" Literal "" with ArgoUML"" println StatementExpression MethodInvocation System Literal 0 exit End MethodDeclaration /**
     * Check that we can get the InetAddress for localhost.
     * This can fail on Unix if /etc/hosts is not correctly set up.
     */ Modifier private static checkHostsFile TryStatement StatementExpression MethodInvocation InetAddress getLocalHost CatchClause CatchClauseParameter UnknownHostException e StatementExpression MethodInvocation System.err Literal ""ERROR: unable to get localhost information."" println StatementExpression MethodInvocation e MemberReference System err printStackTrace StatementExpression MethodInvocation System.err BinaryOperation + Literal ""On Unix systems this usually indicates that"" Literal ""your /etc/hosts file is incorrectly setup."" println StatementExpression MethodInvocation System.err Literal ""Stopping execution of ArgoUML."" println StatementExpression MethodInvocation System Literal 0 exit MethodDeclaration /**
     * Add an element to the PostLoadActions list,
     * which contains actions that are run after ArgoUML has started.
     *
     * @param r a ""Runnable"" action
     */ Modifier public static addPostLoadAction FormalParameter ReferenceType Runnable r StatementExpression MethodInvocation postLoadActions MemberReference r add MethodDeclaration /**
     * Perform a list of commands that were given on the command line.
     *
     * This first implementation just has a list of commands that
     * is possible to give.
     *
     * @param list The commands, a list of strings.
     */ Modifier public static performCommands FormalParameter ReferenceType List list LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation list iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator commandstring Cast ReferenceType String MethodInvocation iter next LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation commandstring Literal '=' indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator commandname LocalVariableDeclaration ReferenceType String VariableDeclarator commandargument IfStatement BinaryOperation == MemberReference pos Literal - 1 BlockStatement StatementExpression Assignment MemberReference commandname MemberReference commandstring = StatementExpression Assignment MemberReference commandargument Literal null = BlockStatement StatementExpression Assignment MemberReference commandname MethodInvocation commandstring Literal 0 MemberReference pos substring = StatementExpression Assignment MemberReference commandargument MethodInvocation commandstring BinaryOperation + MemberReference pos Literal 1 substring = End LocalVariableDeclaration ReferenceType Class VariableDeclarator c TryStatement StatementExpression Assignment MemberReference c MethodInvocation Class MemberReference commandname forName = CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation System.out BinaryOperation + Literal ""Cannot find the command: "" MemberReference commandname println ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o Literal null TryStatement StatementExpression Assignment MemberReference o MethodInvocation c newInstance = CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + MemberReference commandname Literal "" could not be instantiated - skipping"" Literal "" (InstantiationException)"" println ContinueStatement CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + MemberReference commandname Literal "" could not be instantiated - skipping"" Literal "" (IllegalAccessException)"" println ContinueStatement IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation instanceof MemberReference o ReferenceType CommandLineInterface BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + MemberReference commandname Literal "" is not a command - skipping."" println ContinueStatement End LocalVariableDeclaration ReferenceType CommandLineInterface VariableDeclarator clio Cast ReferenceType CommandLineInterface MemberReference o StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Performing command "" MemberReference commandname Literal ""( "" TernaryExpression BinaryOperation == MemberReference commandargument Literal null Literal """" MemberReference commandargument Literal "" )"" println LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation clio MemberReference commandargument doCommand IfStatement MemberReference ! result BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""There was an error executing "" Literal ""the command "" MemberReference commandname Literal ""( "" TernaryExpression BinaryOperation == MemberReference commandargument Literal null Literal """" MemberReference commandargument Literal "" )"" println StatementExpression MethodInvocation System.out Literal ""Aborting the rest of the commands."" println ReturnStatement End End StatementExpression MethodInvocation System Literal ""sun.awt.exception.handler"" ClassReference MethodInvocation getName ReferenceType ArgoAwtExceptionHandler setProperty IfStatement BinaryOperation == MethodInvocation System Literal ""log4j.configuration"" getProperty Literal null BlockStatement LocalVariableDeclaration ReferenceType Properties VariableDeclarator props ClassCreator ReferenceType Properties LocalVariableDeclaration ReferenceType InputStream VariableDeclarator stream Literal null TryStatement StatementExpression Assignment MemberReference stream MethodInvocation Thread MethodInvocation getContextClassLoader MethodInvocation MemberReference DEFAULT_LOGGING_CONFIGURATION getResourceAsStream currentThread = IfStatement BinaryOperation != MemberReference stream Literal null BlockStatement StatementExpression MethodInvocation props MemberReference stream load End CatchClause CatchClauseParameter IOException io StatementExpression MethodInvocation io printStackTrace StatementExpression MethodInvocation System Literal - 1 exit StatementExpression MethodInvocation PropertyConfigurator MemberReference props configure IfStatement BinaryOperation == MemberReference stream Literal null BlockStatement StatementExpression MethodInvocation BasicConfigurator configure StatementExpression MethodInvocation Logger MethodInvocation getLoggerRepository MethodInvocation MemberReference Level ERROR setThreshold getRootLogger StatementExpression MethodInvocation Logger MethodInvocation BinaryOperation + BinaryOperation + Literal ""Failed to find valid log4j properties"" Literal ""in log4j.configuration"" Literal ""using default logging configuration"" error getRootLogger End End MethodDeclaration /**
     * Create and display a splash screen.
     * @return the splash screen
     */ Modifier private static ReferenceType SplashScreen initializeSplash LocalVariableDeclaration ReferenceType SplashScreen VariableDeclarator splash ClassCreator ReferenceType SplashScreen StatementExpression MethodInvocation splash Literal true setVisible IfStatement BinaryOperation && MethodInvocation ! EventQueue isDispatchThread BinaryOperation == MethodInvocation Runtime MethodInvocation availableProcessors getRuntime Literal 1 BlockStatement SynchronizedStatement MemberReference splash WhileStatement MethodInvocation ! splash isPaintCalled BlockStatement TryStatement StatementExpression MethodInvocation splash wait CatchClause CatchClauseParameter InterruptedException e End End ReturnStatement MemberReference splash MethodDeclaration /**
     * Do a part of the initialization that is very much GUI-stuff.
     *
     * @param splash the splash screeen
     */ Modifier private static ReferenceType ProjectBrowser initializeGUI FormalParameter ReferenceType SplashScreen splash LocalVariableDeclaration ReferenceType JPanel VariableDeclarator todoPane ClassCreator ReferenceType ToDoPane MemberReference splash LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator pb MethodInvocation ProjectBrowser MemberReference splash Literal true MemberReference todoPane makeInstance StatementExpression MethodInvocation JOptionPane MemberReference pb setRootFrame StatementExpression MethodInvocation pb MethodInvocation Cursor MemberReference Cursor WAIT_CURSOR getPredefinedCursor setCursor LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator scrSize MethodInvocation GraphicsEnvironment MethodInvocation getMaximumWindowBounds getLocalGraphicsEnvironment LocalVariableDeclaration BasicType int VariableDeclarator configFrameWidth MethodInvocation Configuration MemberReference Argo KEY_SCREEN_WIDTH MemberReference scrSize width getInteger LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation Math MemberReference configFrameWidth MemberReference scrSize width min IfStatement BinaryOperation == MemberReference w Literal 0 BlockStatement StatementExpression Assignment MemberReference w Literal 600 = End LocalVariableDeclaration BasicType int VariableDeclarator configFrameHeight MethodInvocation Configuration MemberReference Argo KEY_SCREEN_HEIGHT MemberReference scrSize height getInteger LocalVariableDeclaration BasicType int VariableDeclarator h MethodInvocation Math MemberReference configFrameHeight MemberReference scrSize height min IfStatement BinaryOperation == MemberReference h Literal 0 BlockStatement StatementExpression Assignment MemberReference h Literal 400 = End LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation Configuration MemberReference Argo KEY_SCREEN_LEFT_X Literal 0 getInteger LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation Configuration MemberReference Argo KEY_SCREEN_TOP_Y Literal 0 getInteger StatementExpression MethodInvocation pb MemberReference x MemberReference y setLocation StatementExpression MethodInvocation pb MemberReference w MemberReference h setSize StatementExpression MethodInvocation UIManager Literal ""Button.focusInputMap"" ClassCreator ReferenceType UIDefaults ReferenceType LazyInputMap ArrayCreator ReferenceType Object ArrayInitializer Literal ""ENTER"" Literal ""pressed"" Literal ""released ENTER"" Literal ""released"" Literal ""SPACE"" Literal ""pressed"" Literal ""released SPACE"" Literal ""released"" put ReturnStatement MemberReference pb MethodDeclaration /**
     * Publish the version of the ArgoUML application. <p>
     * 
     * This function is intentionally public, 
     * since applications built on ArgoUML, 
     * that do not make use of Main.main(), 
     * can call this function and then access ArgoUML's version 
     * from the ApplicationVersion class. 
     */ Modifier public static initVersion StatementExpression MethodInvocation ArgoVersion init ClassDeclaration /**
 * Class to hold a list of actions to be perform and to perform them
 * after the initializations is done.
 */ PostLoad FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType PostLoad getLogger FieldDeclaration /**
     * The list of actions to perform.
     */ Modifier private ReferenceType List TypeArgument ReferenceType Runnable VariableDeclarator postLoadActions ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param actions The actions to perform.
     */ PostLoad FormalParameter ReferenceType List TypeArgument ReferenceType Runnable actions StatementExpression Assignment MemberReference postLoadActions MemberReference actions = MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation Thread Literal 1000 sleep CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal ""post load no sleep"" MemberReference ex error ForStatement EnhancedForControl VariableDeclaration ReferenceType Runnable VariableDeclarator r MemberReference postLoadActions BlockStatement StatementExpression MethodInvocation r run TryStatement StatementExpression MethodInvocation Thread Literal 100 sleep CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal ""post load no sleep2"" MemberReference ex error End ReferenceType Runnable ClassDeclaration /**
 * Class to load modules.
 */ LoadModules FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType LoadModules getLogger FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator OPTIONAL_INTERNAL_MODULES ArrayInitializer Literal ""org.argouml.dev.DeveloperModule"" MethodDeclaration /**
     * Load internal modules which should be found on the standard
     * classpath.
     */ Modifier private huntForInternalModules ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator module MemberReference OPTIONAL_INTERNAL_MODULES BlockStatement TryStatement StatementExpression MethodInvocation ModuleLoader2 MemberReference module addClass CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Module "" MemberReference module Literal "" not found"" debug End MethodDeclaration Modifier public run StatementExpression ClassCreator MethodInvocation init ReferenceType JavaImport StatementExpression MethodInvocation huntForInternalModules StatementExpression MethodInvocation LOG Literal ""Module loading done"" info ReferenceType Runnable",0
388,388,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.Collection Import java.util.Iterator Import org.argouml.model.UmlHelper Import org.omg.uml.behavioralelements.collaborations.Message Import org.omg.uml.behavioralelements.statemachines.Transition Import org.omg.uml.foundation.core.AssociationEnd Import org.omg.uml.foundation.core.Relationship ClassDeclaration /**
 * Helper class for UML metamodel.
 * 
 * @since ARGO0.11.2
 * @author Thierry Lach
 */ UmlHelperMDRImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl ConstructorDeclaration /**
     * Don't allow instantiation.
     * 
     * @param implementation
     *            To get other helpers and factories.
     */ UmlHelperMDRImpl FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public addListenersToModel FormalParameter ReferenceType Object model MethodDeclaration Modifier public deleteCollection FormalParameter ReferenceType Collection col LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation it next delete getUmlFactory End MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object relationship IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Message BlockStatement LocalVariableDeclaration ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference relationship ReturnStatement MethodInvocation message getSender End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Relationship BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference relationship getSource getCoreHelper End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Transition BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference relationship getSource getStateMachinesHelper End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference relationship getSource getCoreHelper End ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object relationship IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Message BlockStatement LocalVariableDeclaration ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference relationship ReturnStatement MethodInvocation message getSender End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Relationship BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference relationship getDestination getCoreHelper End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Transition BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference relationship getDestination getStateMachinesHelper End IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference relationship getDestination getCoreHelper End ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReferenceType UmlHelper",1
667,667,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 3, 2003
 */ PropPanelUMLUseCaseDiagram ConstructorDeclaration Modifier public /**
     * Constructor for PropPanelUMLUseCaseDiagram.
     */ PropPanelUMLUseCaseDiagram StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""label.usecase-diagram"" localize MethodInvocation Literal ""UseCaseDiagram"" lookupIcon ReferenceType PropPanelDiagram",0
290,290,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import javax.swing.JTextArea Import org.argouml.ui.LookAndFeelMgr Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargettableModelView ClassDeclaration Modifier public /**
 * A JTextArea especially made to represent UMLPlainTextDocuments.
 * @author jaap.branderhorst@xs4all.nl
 * @since Dec 28, 2002
 */ UMLTextArea2 FieldDeclaration /**
     * Serial version generated for rev 1.9
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 9172093001792636086L ConstructorDeclaration Modifier public /**
     * Constructor for UMLTextArea2.
     * @param doc the plain text document
     */ UMLTextArea2 FormalParameter ReferenceType UMLDocument doc StatementExpression SuperConstructorInvocation MemberReference doc StatementExpression MethodInvocation MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont StatementExpression MethodInvocation MethodInvocation ActionCopy getInstance addCaretListener StatementExpression MethodInvocation MethodInvocation ActionCut getInstance addCaretListener StatementExpression MethodInvocation MethodInvocation ActionPaste getInstance addCaretListener StatementExpression MethodInvocation MethodInvocation ActionPaste getInstance addFocusListener MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression Cast ReferenceType UMLDocument MethodInvocation getDocument MethodDeclaration Modifier public ReferenceType TargetListener getTargettableModel ReturnStatement Cast ReferenceType UMLDocument MethodInvocation getDocument ReferenceType JTextArea ReferenceType PropertyChangeListener ReferenceType TargettableModelView",0
51,51,"CompilationUnit PackageDeclaration org.argouml.profile Import java.util.Iterator InterfaceDeclaration Modifier public /**
 * Interface for the formating strategy to be used when formating model element
 * names.
 * 
 * @author Marcos Aurélio
 */ FormatingStrategy MethodDeclaration /**
     * Produce a string that represents the specific model element in the
     * context of the specified namespace.
     * 
     * @param element
     *                element to represent.
     * @param namespace
     *                context namespace (may be null).
     * @return a string representing the model element
     */ Modifier public abstract ReferenceType String formatElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Object namespace MethodDeclaration /**
     * Produce a string the represents the collection of model elements in the
     * context of the specified namespace.
     * 
     * @param iter
     *                iterator over collection
     * @param namespace
     *                context namespace (may be null).
     * @return a string representing the collection
     */ Modifier public abstract ReferenceType String formatCollection FormalParameter ReferenceType Iterator iter FormalParameter ReferenceType Object namespace",0
635,635,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.util.Iterator Import java.util.List Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper ClassDeclaration Modifier public abstract /**
 * An action to navigate to the next in the list, 
 * i.e. first we go up, then down again to the next in the list.
 * 
 * @author Michiel
 */ ActionNavigateUpNextDown ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNavigateUpNextDown StatementExpression SuperConstructorInvocation Literal ""button.go-up-next-down"" Literal true StatementExpression MethodInvocation MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""NavigateUpNext"" lookupIconResource putValue MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source LocalVariableDeclaration ReferenceType Object VariableDeclarator up MethodInvocation MemberReference source getParent LocalVariableDeclaration ReferenceType List VariableDeclarator family MethodInvocation MemberReference up getFamily AssertStatement MethodInvocation family MemberReference source contains LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation family iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation it next IfStatement BinaryOperation == MemberReference child MemberReference source BlockStatement IfStatement MethodInvocation it hasNext BlockStatement ReturnStatement MethodInvocation it next BlockStatement ReturnStatement Literal null End End End ReturnStatement Literal null MethodDeclaration /**
     * Get the list of elements that we are navigating through.
     * 
     * @param parent the parent element that owns all elements in the list
     * @return the list
     */ Modifier public abstract ReferenceType List getFamily FormalParameter ReferenceType Object parent MethodDeclaration /**
     * Get the parent of the list of elements that we are navigating through.
     * 
     * @param child the childelement of which we seek the previous element
     * @return the parent element
     */ Modifier public abstract ReferenceType Object getParent FormalParameter ReferenceType Object child ReferenceType AbstractActionNavigate",0
855,855,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.util.Collection Import java.util.Iterator Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.profile.FormatingStrategy Import org.argouml.profile.Profile ClassDeclaration Modifier public /**
 * A combobox entry. <p>
 *
 * TODO: What is a Phantom element? Document it.
 * MVW: I think it is an entry in the list, 
 * that when selected, deletes the
 * UML model-association, just like the """" 
 * in the comboboxes currently. <p>
 * 
 *  This class does not seem to be in use currently. 
 *  Is it a good idea to complete this? Or shall we remove?
 *  @deprecated in 0.25.1 by Bob Tarling. This class is never instantiated 
 *  by ArgoUML.
 */ UMLComboBoxEntry FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType UMLComboBoxEntry getLogger FieldDeclaration Modifier private ReferenceType Object VariableDeclarator element FieldDeclaration Modifier private ReferenceType String VariableDeclarator shortName FieldDeclaration /** longName is composed of an identifier and a name as in Class: String */ Modifier private ReferenceType String VariableDeclarator longName FieldDeclaration Modifier private ReferenceType FormatingStrategy VariableDeclarator formater FieldDeclaration /** display name will be the same as shortName unless there
     *  is a name collision */ Modifier private ReferenceType String VariableDeclarator displayName FieldDeclaration /** i am not quite sure what isPhantom means, it may be that it is an
     *  entry that is not in the model list...pjs */ Modifier private BasicType boolean VariableDeclarator thisIsAPhantom ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param modelElement the model element that this combobox entry represents
     * @param theProfile the profile according which the textual
     *                   representatation of the modelelement is generated
     * @param isPhantom true if this is a phantom element
     */ UMLComboBoxEntry FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Profile theProfile FormalParameter BasicType boolean isPhantom StatementExpression Assignment MemberReference element MemberReference modelElement = IfStatement BinaryOperation != MemberReference modelElement Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade IfStatement BinaryOperation != MethodInvocation theProfile getFormatingStrategy Literal null BlockStatement StatementExpression Assignment MemberReference shortName MethodInvocation theProfile MethodInvocation MemberReference modelElement MemberReference ns formatElement getFormatingStrategy = BlockStatement End BlockStatement StatementExpression Assignment MemberReference shortName Literal """" = End StatementExpression Assignment MemberReference formater MethodInvocation theProfile getFormatingStrategy = StatementExpression Assignment MemberReference longName Literal null = StatementExpression Assignment MemberReference displayName MemberReference shortName = StatementExpression Assignment MemberReference thisIsAPhantom MemberReference isPhantom = MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference displayName MethodDeclaration /**
     * Generate a string representatation of the UML modelelement
     * of this combobox element.
     */ Modifier public updateName IfStatement BinaryOperation != MemberReference element Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade IfStatement BinaryOperation != MemberReference formater Literal null BlockStatement StatementExpression Assignment MemberReference shortName MethodInvocation formater MemberReference element MemberReference ns formatElement = BlockStatement End End MethodDeclaration /**
     * If one of the given names equals the ""short name"", then
     * we'll display the longname.
     *
     * @param before the first given name
     * @param after the 2nd given name
     */ Modifier public checkCollision FormalParameter ReferenceType String before FormalParameter ReferenceType String after LocalVariableDeclaration BasicType boolean VariableDeclarator collision BinaryOperation || BinaryOperation && BinaryOperation != MemberReference before Literal null MethodInvocation before MemberReference shortName equals BinaryOperation && BinaryOperation != MemberReference after Literal null MethodInvocation after MemberReference shortName equals IfStatement MemberReference collision BlockStatement IfStatement BinaryOperation == MemberReference longName Literal null BlockStatement StatementExpression Assignment MemberReference longName MethodInvocation getLongName = End StatementExpression Assignment MemberReference displayName MemberReference longName = End MethodDeclaration /**
     * @return the short name of the modelelement
     */ Modifier public ReferenceType String getShortName ReturnStatement MemberReference shortName MethodDeclaration /**
     * @return the long name of the modelelement
     */ Modifier public ReferenceType String getLongName IfStatement BinaryOperation == MemberReference longName Literal null BlockStatement IfStatement BinaryOperation != MemberReference element Literal null BlockStatement IfStatement BinaryOperation != MemberReference formater Literal null BlockStatement StatementExpression Assignment MemberReference longName MethodInvocation formater MemberReference element Literal null formatElement = BlockStatement End BlockStatement StatementExpression Assignment MemberReference longName Literal ""(unspecified)"" = End End ReturnStatement MemberReference longName MethodDeclaration Modifier private static ReferenceType Object findNamespace FormalParameter ReferenceType Object phantomNS FormalParameter ReferenceType Object targetModel LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator targetParentNS Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator parentNS MethodInvocation Model MethodInvocation MemberReference phantomNS getNamespace getFacade IfStatement BinaryOperation == MemberReference parentNS Literal null BlockStatement StatementExpression Assignment MemberReference ns MemberReference targetModel = BlockStatement StatementExpression Assignment MemberReference targetParentNS MethodInvocation MemberReference parentNS MemberReference targetModel findNamespace = LocalVariableDeclaration ReferenceType Collection VariableDeclarator ownedElements MethodInvocation Model MethodInvocation MemberReference targetParentNS getOwnedElements getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator phantomName MethodInvocation Model MethodInvocation MemberReference phantomNS getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator targetName IfStatement BinaryOperation != MemberReference ownedElements Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ownedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ownedElements iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference ownedElement MethodInvocation iter next = StatementExpression Assignment MemberReference targetName MethodInvocation Model MethodInvocation MemberReference ownedElement getName getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference targetName Literal null MethodInvocation phantomName MemberReference targetName equals BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference ownedElement isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference ownedElement = BreakStatement End End End End IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation createPackage getModelManagementFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference ns MemberReference phantomName setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference targetParentNS MemberReference ns addOwnedElement getCoreHelper End End ReturnStatement MemberReference ns MethodDeclaration /**
     * @param targetModel the UML Model that contains the modelelement
     * @return the modelelement represented by this combobox item
     */ Modifier public ReferenceType Object getElement FormalParameter ReferenceType Object targetModel IfStatement BinaryOperation && MemberReference thisIsAPhantom BinaryOperation != MemberReference targetModel Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator targetNS MethodInvocation MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade MemberReference targetModel findNamespace LocalVariableDeclaration ReferenceType Object VariableDeclarator clone Literal null TryStatement StatementExpression Assignment MemberReference clone MethodInvocation element MethodInvocation ArrayCreator ReferenceType Class ArrayInitializer getConstructor MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer newInstance getClass = StatementExpression MethodInvocation Model MethodInvocation MemberReference clone MethodInvocation Model MethodInvocation MemberReference element getName getFacade setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clone MethodInvocation Model MethodInvocation MemberReference element getStereotypes getFacade addAllStereotypes getCoreHelper IfStatement MethodInvocation Model MethodInvocation MemberReference clone isAStereotype getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator baseClasses MethodInvocation Model MethodInvocation MemberReference element getBaseClasses getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter TernaryExpression BinaryOperation != MemberReference baseClasses Literal null MethodInvocation baseClasses iterator Literal null WhileStatement BinaryOperation && BinaryOperation != MemberReference iter Literal null MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference clone MethodInvocation iter next addBaseClass getExtensionMechanismsHelper End End StatementExpression MethodInvocation Model MethodInvocation MemberReference targetNS MemberReference clone addOwnedElement getCoreHelper StatementExpression Assignment MemberReference element MemberReference clone = CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal ""Exception in getElement()"" MemberReference ex error StatementExpression Assignment MemberReference thisIsAPhantom Literal false = End ReturnStatement MemberReference element MethodDeclaration /**
     * @param modelElement the modelelement represented by this combobox item
     * @param isPhantom true if this is a phantom element
     */ Modifier public setElement FormalParameter ReferenceType Object modelElement FormalParameter BasicType boolean isPhantom StatementExpression Assignment MemberReference element MemberReference modelElement = StatementExpression Assignment MemberReference thisIsAPhantom MemberReference isPhantom = MethodDeclaration Modifier public BasicType int compareTo FormalParameter Modifier final ReferenceType java ReferenceType lang ReferenceType Object other LocalVariableDeclaration BasicType int VariableDeclarator compare Literal - 1 IfStatement BinaryOperation instanceof MemberReference other ReferenceType UMLComboBoxEntry BlockStatement LocalVariableDeclaration ReferenceType UMLComboBoxEntry VariableDeclarator otherEntry Cast ReferenceType UMLComboBoxEntry MemberReference other StatementExpression Assignment MemberReference compare Literal 0 = IfStatement BinaryOperation != MemberReference otherEntry This BlockStatement IfStatement BinaryOperation == MemberReference element Literal null BlockStatement StatementExpression Assignment MemberReference compare Literal - 1 = BlockStatement IfStatement BinaryOperation == MethodInvocation otherEntry Literal null getElement Literal null BlockStatement StatementExpression Assignment MemberReference compare Literal 1 = BlockStatement StatementExpression Assignment MemberReference compare MethodInvocation MethodInvocation MethodInvocation otherEntry getShortName compareTo getShortName = IfStatement BinaryOperation == MemberReference compare Literal 0 BlockStatement StatementExpression Assignment MemberReference compare MethodInvocation MethodInvocation MethodInvocation otherEntry getLongName compareTo getLongName = End End End End End ReturnStatement MemberReference compare MethodDeclaration /**
     * @param modelElement the modelelement that has its name changed
     */ Modifier public nameChanged FormalParameter ReferenceType Object modelElement IfStatement BinaryOperation && BinaryOperation == MemberReference modelElement MemberReference element BinaryOperation != MemberReference element Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade IfStatement BinaryOperation != MemberReference formater Literal null BlockStatement StatementExpression Assignment MemberReference shortName MethodInvocation formater MemberReference element MemberReference ns formatElement = BlockStatement End StatementExpression Assignment MemberReference displayName MemberReference shortName = StatementExpression Assignment MemberReference longName Literal null = End MethodDeclaration /**
     * @return true if this is a phantom element
     */ Modifier public BasicType boolean isPhantom ReturnStatement MemberReference thisIsAPhantom ReferenceType Comparable",1
94,94,"CompilationUnit PackageDeclaration org.argouml.profile ClassDeclaration Modifier public /**
 * An exception to be thrown during failure in the Profile subsystem.
 * This will typically be a wrapped exception containing the exception
 * representing the underlying failure cause.
 * 
 * @author Marcus Aurelio (maurelio1234)
 */ ProfileException ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param message the message to show
     */ ProfileException FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference message ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param message the message to show
     * @param theCause the cause for the exception
     */ ProfileException FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable theCause StatementExpression SuperConstructorInvocation MemberReference message MemberReference theCause ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param theCause the cause for the exception
     */ ProfileException FormalParameter ReferenceType Throwable theCause StatementExpression SuperConstructorInvocation MemberReference theCause ReferenceType Exception",0
1484,1484,,0
1517,1517,,0
524,524,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration Modifier public final /**
 * A Mode to interpret user input while creating a permission edge.
 * The permission can connect any model elements including those represented
 * by edges as well as nodes.
 * <p>
 * TODO: In UML 2.x, Permission becomes PackageImport and the class hierarchy
 * has changed so that it is no longer a subtype of Dependency, so this may
 * need to be refactored to work correctly.
 */ ModeCreatePermission MethodDeclaration Modifier final protected ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getPackageImport getMetaTypes ReferenceType ModeCreateDependency",1
284,284,"CompilationUnit PackageDeclaration org.argouml.application.events ClassDeclaration Modifier public /**
 * ArgoNotationEvent is used to notify interested parties
 * that the notation has been changed.
 */ ArgoNotationEvent ConstructorDeclaration Modifier public /**
     * @param eventType reported by this event.
     * @param src object that caused the event.
     */ ArgoNotationEvent FormalParameter BasicType int eventType FormalParameter ReferenceType Object src StatementExpression SuperConstructorInvocation MemberReference eventType MemberReference src MethodDeclaration /**
     * Indicates the start of the 100-digit range for notation events.
     *
     * @return the first id reserved for events.
     */ Modifier public BasicType int getEventStartRange ReturnStatement MemberReference ANY_NOTATION_EVENT ReferenceType ArgoEvent",0
78,78,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.UMLLinkedList ClassDeclaration Modifier public /**
 * The properties panel for an Enumeration element.
 */ PropPanelEnumeration FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator literalsScroll FieldDeclaration Modifier private static ReferenceType UMLEnumerationLiteralsListModel VariableDeclarator literalsListModel ClassCreator ReferenceType UMLEnumerationLiteralsListModel ConstructorDeclaration Modifier public /**
     * Construct a property panel for the UML Enumeration element.
     */ PropPanelEnumeration StatementExpression SuperConstructorInvocation Literal ""label.enumeration-title"" MethodInvocation Literal ""Enumeration"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.literals"" localize MethodInvocation getLiteralsScroll addField MethodDeclaration Modifier protected Annotation Override addEnumerationButtons StatementExpression SuperMethodInvocation addEnumerationButtons StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddLiteral addAction MethodDeclaration /**
     * Returns the attributeScroll.
     *
     * @return JScrollPane
     */ Modifier public ReferenceType JScrollPane getLiteralsScroll IfStatement BinaryOperation == MemberReference literalsScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType UMLLinkedList MemberReference literalsListModel StatementExpression Assignment MemberReference literalsScroll ClassCreator ReferenceType JScrollPane MemberReference list = End ReturnStatement MemberReference literalsScroll ReferenceType PropPanelDataType",0
922,922,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.extension_mechanisms Import java.util.ArrayList Import java.util.Collection Import java.util.Comparator Import java.util.HashSet Import java.util.List Import java.util.Set Import java.util.TreeSet Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * A model for tagdefinitions.
 * @author lmaitre
 * @since October 27, 2005
 */ UMLTagDefinitionComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLTagDefinitionComboBoxModel.
     */ UMLTagDefinitionComboBoxModel StatementExpression SuperConstructorInvocation Literal ""definedTag"" Literal false MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation Model MethodInvocation MemberReference element getOwner getFacade ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isATagDefinition getFacade BinaryOperation || BinaryOperation == MemberReference owner Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget getStereotypes MethodInvocation MemberReference owner contains getFacade MethodDeclaration Modifier public Annotation Override setSelectedItem FormalParameter ReferenceType Object o StatementExpression MethodInvocation Literal false setFireListEvents StatementExpression SuperMethodInvocation MemberReference o setSelectedItem StatementExpression MethodInvocation Literal true setFireListEvents MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget StatementExpression MethodInvocation MethodInvocation MemberReference t getApplicableTagDefinitions addAll MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement ReturnStatement MethodInvocation getSelectedItem MethodDeclaration Modifier private ReferenceType Collection getApplicableTagDefinitions FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType List TypeArgument ReferenceType String VariableDeclarator paths ClassCreator ReferenceType HashSet TypeArgument ReferenceType List TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator availableTagDefs ClassCreator ReferenceType TreeSet TypeArgument ReferenceType Object ClassCreator ReferenceType Comparator TypeArgument ReferenceType Object MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name1 MethodInvocation Model MethodInvocation MemberReference o1 getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator name2 MethodInvocation Model MethodInvocation MemberReference o2 getName getFacade StatementExpression Assignment MemberReference name1 TernaryExpression BinaryOperation != MemberReference name1 Literal null MemberReference name1 Literal """" = StatementExpression Assignment MemberReference name2 TernaryExpression BinaryOperation != MemberReference name2 Literal null MemberReference name2 Literal """" = LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation name1 MemberReference name2 compareTo IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement IfStatement MethodInvocation o1 MemberReference o2 equals BlockStatement ReturnStatement Literal 0 BlockStatement ReturnStatement Literal 1 End BlockStatement ReturnStatement MemberReference result End CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType ClassCastException MethodInvocation e getMessage LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation Model MethodInvocation MemberReference t getStereotypes getFacade LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation project getModels BlockStatement StatementExpression MethodInvocation MemberReference availableTagDefs MemberReference paths MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getTagDefinition getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAllUniqueModelElementsFrom End StatementExpression MethodInvocation MemberReference availableTagDefs MemberReference paths MethodInvocation project MethodInvocation MethodInvocation Model MethodInvocation getTagDefinition getMetaTypes findByMetaType getProfileConfiguration addAllUniqueModelElementsFrom LocalVariableDeclaration ReferenceType List VariableDeclarator notValids ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator tagDef MemberReference availableTagDefs BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation Model MethodInvocation MemberReference tagDef getOwner getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference owner Literal null MethodInvocation ! stereotypes MemberReference owner contains BlockStatement StatementExpression MethodInvocation notValids MemberReference tagDef add End End LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation availableTagDefs size StatementExpression MethodInvocation availableTagDefs MemberReference notValids removeAll LocalVariableDeclaration BasicType int VariableDeclarator delta BinaryOperation - MemberReference size MethodInvocation availableTagDefs size ReturnStatement MemberReference availableTagDefs MethodDeclaration /**
     * Helper method for buildModelList.<p>
     *
     * Adds those elements from source that do not have the same path as any
     * path in paths to elements, and its path to paths. Thus elements will
     * never contain two objects with the same path, unless they are added by
     * other means.
     */ Modifier private static addAllUniqueModelElementsFrom FormalParameter ReferenceType Set elements FormalParameter ReferenceType Set TypeArgument ReferenceType List TypeArgument ReferenceType String paths FormalParameter ReferenceType Collection sources ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator source MemberReference sources BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path MethodInvocation Model MethodInvocation MemberReference source getPathList getModelManagementHelper IfStatement MethodInvocation ! paths MemberReference path contains BlockStatement StatementExpression MethodInvocation paths MemberReference path add StatementExpression MethodInvocation elements MemberReference source add End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4194727034416788372L ReferenceType UMLComboBoxModel2",1
228,228,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import javax.swing.event.TreeModelListener Import javax.swing.tree.TreePath Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ToDoList ClassDeclaration Modifier public /**
 * Rule for sorting the ToDo list: Priority -> Item.
 *
 */ GoListToPriorityToItem MethodDeclaration Modifier public ReferenceType Object getChild FormalParameter ReferenceType Object parent FormalParameter BasicType int index IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation PriorityNode MethodInvocation MemberReference index get getPriorityList End IfStatement BinaryOperation instanceof MemberReference parent ReferenceType PriorityNode BlockStatement LocalVariableDeclaration ReferenceType PriorityNode VariableDeclarator pn Cast ReferenceType PriorityNode MemberReference parent ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation Designer MethodInvocation getToDoList theDesigner BlockStatement IfStatement BinaryOperation == MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement ReturnStatement MemberReference item End StatementExpression MemberReference -- index End End End ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException BinaryOperation + Literal ""getChild shouldnt get here "" Literal ""GoListToPriorityToItem"" MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation PriorityNode MethodInvocation size getPriorityList End IfStatement BinaryOperation instanceof MemberReference parent ReferenceType PriorityNode BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator res Literal 0 LocalVariableDeclaration ReferenceType PriorityNode VariableDeclarator pn Cast ReferenceType PriorityNode MemberReference parent ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation Designer MethodInvocation getToDoList theDesigner BlockStatement IfStatement BinaryOperation == MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement StatementExpression MemberReference ++ res End End ReturnStatement MemberReference res End ReturnStatement Literal 0 MethodDeclaration Modifier public BasicType int getIndexOfChild FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation PriorityNode MethodInvocation MemberReference child indexOf getPriorityList End IfStatement BinaryOperation instanceof MemberReference parent ReferenceType PriorityNode BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration ReferenceType PriorityNode VariableDeclarator pn Cast ReferenceType PriorityNode MemberReference parent ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation Designer MethodInvocation getToDoList theDesigner BlockStatement IfStatement BinaryOperation == MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement IfStatement BinaryOperation == MemberReference item MemberReference child BlockStatement ReturnStatement MemberReference index End StatementExpression MemberReference ++ index End End End ReturnStatement Literal - 1 MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList ReturnStatement Literal false End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType PriorityNode BinaryOperation > MethodInvocation MemberReference node getChildCount Literal 0 ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration Modifier public valueForPathChanged FormalParameter ReferenceType TreePath path FormalParameter ReferenceType Object newValue MethodDeclaration Modifier public addTreeModelListener FormalParameter ReferenceType TreeModelListener l MethodDeclaration Modifier public removeTreeModelListener FormalParameter ReferenceType TreeModelListener l ReferenceType AbstractGoList",1
268,268,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 ClassDeclaration Modifier public /**
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 29, 2003
 */ UMLStructuralFeatureTargetScopeCheckBox ConstructorDeclaration Modifier public /**
     * Constructor for UMLStructuralFeatureTargetScopeCheckBox.
     */ UMLStructuralFeatureTargetScopeCheckBox StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""label.classifier"" localize MethodInvocation ActionSetStructuralFeatureTargetScope getInstance Literal ""targetScope"" MethodDeclaration Modifier public buildModel IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getTargetScope getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation Model MethodInvocation getInstance getScopeKind setTargetScope getCoreHelper End StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getTargetScope MethodInvocation MethodInvocation Model MethodInvocation getClassifier getScopeKind equals getFacade setSelected ReferenceType UMLCheckBox2",0
170,170,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * ListModel for resident relations and containers, such as Node,
 * ComponentInstance, NodeInstance.
 *
 * @author mkl
 *
 */ UMLContainerResidentListModel ConstructorDeclaration Modifier public /**
     * Constructor.
     */ UMLContainerResidentListModel StatementExpression SuperConstructorInvocation Literal ""resident"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getResidents getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference o isAComponent getFacade MethodInvocation Model MethodInvocation MemberReference o isAInstance getFacade ReferenceType UMLModelElementListModel2",0
403,403,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.uml.diagram.DiagramFactory Import org.argouml.uml.diagram.ArgoDiagram ClassDeclaration Modifier public /**
 * Action to create a new use case diagram.
 */ ActionUseCaseDiagram FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ActionUseCaseDiagram getLogger ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionUseCaseDiagram StatementExpression SuperConstructorInvocation Literal ""action.usecase-diagram"" MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""No namespace as argument"" error StatementExpression MethodInvocation LOG MemberReference namespace error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""The argument "" MemberReference namespace Literal ""is not a namespace."" End ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramFactory.DiagramType UseCase MemberReference namespace Literal null createDiagram getInstance MethodDeclaration Modifier public BasicType boolean isValidNamespace FormalParameter ReferenceType Object handle LocalVariableDeclaration BasicType boolean VariableDeclarator validNamespace Literal false IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference handle isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference handle isAClassifier getFacade StatementExpression Assignment MemberReference validNamespace Literal true = End ReturnStatement MemberReference validNamespace ReferenceType ActionAddDiagram",1
611,611,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.Font Import java.awt.event.MouseEvent Import java.beans.PropertyChangeEvent Import java.util.Iterator Import org.argouml.model.Model Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigCircle Import org.tigris.gef.presentation.FigRect Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML SynchState in a diagram. <p>
 * 
 * TODO: If the font increases, the circle should grow, too.
 *
 * @author pepargouml@yahoo.es
 */ FigSynchState FieldDeclaration Modifier private final static BasicType int VariableDeclarator X Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator Y Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator WIDTH Literal 25 FieldDeclaration Modifier private final static BasicType int VariableDeclarator HEIGHT Literal 25 FieldDeclaration Modifier private ReferenceType FigText VariableDeclarator bound FieldDeclaration Modifier private ReferenceType FigCircle VariableDeclarator head ConstructorDeclaration Modifier public /**
     * The constructor.
     */ FigSynchState StatementExpression MethodInvocation Literal false setEditable StatementExpression MethodInvocation ClassCreator ReferenceType FigCircle MemberReference X MemberReference Y MemberReference WIDTH MemberReference HEIGHT MemberReference Color cyan MemberReference Color cyan setBigPort StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigCircle MemberReference X MemberReference Y MemberReference WIDTH MemberReference HEIGHT MemberReference Color black MemberReference Color white = StatementExpression Assignment MemberReference bound ClassCreator ReferenceType FigText BinaryOperation - MemberReference X Literal 2 BinaryOperation + MemberReference Y Literal 2 Literal 0 Literal 0 Literal true = StatementExpression MethodInvocation bound Literal false setFilled StatementExpression MethodInvocation bound Literal 0 setLineWidth StatementExpression MethodInvocation bound MemberReference Color black setTextColor StatementExpression MethodInvocation bound MemberReference FigText END_EDITING setReturnAction StatementExpression MethodInvocation bound MemberReference FigText END_EDITING setTabAction StatementExpression MethodInvocation bound Literal ""center"" setJustificationByName StatementExpression MethodInvocation bound Literal false setEditable StatementExpression MethodInvocation bound Literal ""*"" setText StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation MemberReference bound addFig StatementExpression MethodInvocation Literal false setBlinkPorts ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param gm the graphmodel (not used)
     * @param node the UML object
     */ FigSynchState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSynchState VariableDeclarator figClone Cast ReferenceType FigSynchState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigCircle MethodInvocation it next = StatementExpression Assignment MemberReference figClone bound Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone MethodDeclaration /**
     * Synch states are fixed size.
     *
     * @return false
     */ Modifier public BasicType boolean isResizable ReturnStatement Literal false MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setLineColor MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor MethodDeclaration Modifier public setFilled FormalParameter BasicType boolean f MethodDeclaration Modifier public BasicType boolean getFilled ReturnStatement Literal true MethodDeclaration Modifier public setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth MethodDeclaration Modifier public BasicType int getLineWidth ReturnStatement MethodInvocation head getLineWidth MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement MethodInvocation mee MethodInvocation Literal ""bound"" equals getPropertyName BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation Model MethodInvocation MethodInvocation getOwner getBound getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator aux IfStatement BinaryOperation <= MemberReference b Literal 0 BlockStatement StatementExpression Assignment MemberReference aux Literal ""*"" = BlockStatement StatementExpression Assignment MemberReference aux MethodInvocation String MemberReference b valueOf = End StatementExpression MethodInvocation bound MemberReference aux setText StatementExpression MethodInvocation updateBounds StatementExpression MethodInvocation damage End MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me MethodDeclaration /**
     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateFont()
     */ Modifier protected Annotation Override updateFont StatementExpression SuperMethodInvocation updateFont LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation MethodInvocation getProjectSettings MethodInvocation MemberReference Font PLAIN getFont getProject StatementExpression MethodInvocation bound MemberReference f setFont ReferenceType FigStateVertex",0
466,466,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Statemachine->Top State.
 *
 */ GoStateMachineToTop MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state-machine.top-state"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade add ReturnStatement MemberReference list End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
533,533,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.event.MouseEvent Import javax.swing.Icon Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.model.Model Import org.argouml.uml.StereotypeUtility Import org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel Import org.argouml.uml.diagram.ui.SelectionNodeClarifiers2 Import org.tigris.gef.base.Globals Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * The buttons on selection for a Stereotype. <p>
 * 
 * TODO: Find a way to hide the OperationsCompartment 
 * on the FigClass of the created metaclass.
 * 
 * @author michiel
 */ SelectionStereotype FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator inheritIcon MethodInvocation ResourceLoaderWrapper Literal ""Generalization"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator dependIcon MethodInvocation ResourceLoaderWrapper Literal ""Dependency"" lookupIconResource FieldDeclaration Modifier private BasicType boolean VariableDeclarator useComposite FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator icons ArrayInitializer MemberReference inheritIcon MemberReference dependIcon Literal null Literal null Literal null FieldDeclaration Modifier private static ReferenceType String VariableDeclarator instructions ArrayInitializer Literal ""Add a baseClass"" Literal ""Add a subStereotype"" Literal null Literal null Literal null Literal ""Move object(s)"" ConstructorDeclaration Modifier public /**
     * Construct a new  SelectionStereotype for the given Fig.
     *
     * @param f the given fig
     */ SelectionStereotype FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier public Annotation Override mouseEntered FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseEntered StatementExpression Assignment MemberReference useComposite MethodInvocation me isShiftDown = MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index MethodInvocation getButton = End LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent getNamespace getFacade SwitchStatement MemberReference index SwitchStatementCase Literal 10 LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation Model MethodInvocation MemberReference ns buildClass getCoreFactory StatementExpression MethodInvocation StereotypeUtility MemberReference clazz Literal ""metaclass"" Literal false dealWithStereotypes ReturnStatement MemberReference clazz SwitchStatementCase Literal 11 LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation Model MethodInvocation createStereotype getExtensionMechanismsFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference st MemberReference ns setNamespace getCoreHelper ReturnStatement MemberReference st End ReturnStatement Literal null MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index SwitchStatement MemberReference index SwitchStatementCase Literal 10 ReturnStatement MethodInvocation Model MethodInvocation getClass getMetaTypes SwitchStatementCase Literal 11 ReturnStatement MethodInvocation Model MethodInvocation getStereotype getMetaTypes End ReturnStatement Literal null MethodDeclaration Modifier protected Annotation Override ReferenceType Object createEdgeAbove FormalParameter ReferenceType MutableGraphModel mgm FormalParameter ReferenceType Object newNode LocalVariableDeclaration ReferenceType Object VariableDeclarator dep SuperMethodInvocation MemberReference mgm MemberReference newNode createEdgeAbove StatementExpression MethodInvocation StereotypeUtility MemberReference dep Literal ""stereotype"" Literal false dealWithStereotypes ReturnStatement MemberReference dep MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons IfStatement BinaryOperation instanceof MethodInvocation Globals MethodInvocation getGraphModel curEditor ReferenceType DeploymentDiagramGraphModel BlockStatement ReturnStatement Literal null End ReturnStatement MemberReference icons MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewEdgeType FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference TOP BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getDependency getMetaTypes IfStatement BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getGeneralization getMetaTypes End End ReturnStatement Literal null MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier protected Annotation Override BasicType boolean isEdgePostProcessRequested ReturnStatement MemberReference useComposite ReferenceType SelectionNodeClarifiers2",0
1156,1156,,1
215,215,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.argouml.model.ChangeableKind Import org.argouml.model.NotImplementedException ClassDeclaration /**
 * Eclipse UML2 implementation for ChangeableKind.
 * 
 * @author Tom Morris
 * @deprecated This is a simple binary choice (isReadOnly or not) in UML2, so
 *             this is purely for backward compatibility.
 */ ChangeableKindEUMLImpl MethodDeclaration Modifier public ReferenceType Object getAddOnly ReturnStatement Literal """" MethodDeclaration Modifier public ReferenceType Object getChangeable ReturnStatement Literal ""changeable"" MethodDeclaration Modifier public ReferenceType Object getFrozen ReturnStatement Literal ""frozen"" ReferenceType ChangeableKind",0
501,501,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.UMLExpressionModel2 Import org.argouml.uml.ui.UMLTimeExpressionModel Import org.argouml.uml.ui.UMLUserInterfaceContainer ClassDeclaration /**
 * The model for the boolean expression of a ChangeEvent.
 * 
 * @author michiel
 */ UMLChangeExpressionModel FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType UMLTimeExpressionModel getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param container the container of UML user interface components
     * @param propertyName the name of the property
     */ UMLChangeExpressionModel FormalParameter ReferenceType UMLUserInterfaceContainer container FormalParameter ReferenceType String propertyName StatementExpression SuperConstructorInvocation MemberReference container MemberReference propertyName MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance getChangeExpression getFacade MethodDeclaration Modifier public setExpression FormalParameter ReferenceType Object expression LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal ""There is no target for "" MethodInvocation getContainer End StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference expression setChangeExpression getStateMachinesHelper MethodDeclaration Modifier public ReferenceType Object newExpression StatementExpression MethodInvocation LOG Literal ""new boolean expression"" debug ReturnStatement MethodInvocation Model MethodInvocation Literal """" Literal """" createBooleanExpression getDataTypesFactory ReferenceType UMLExpressionModel2",0
1251,1251,,0
35,35,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration ActionVisibilityPublic FieldDeclaration /**
     * Serial version generated for rev 1.5
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4288749276325868991L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param o the target
     */ ActionVisibilityPublic FormalParameter ReferenceType Object o StatementExpression SuperConstructorInvocation Literal ""checkbox.visibility.public-uc"" Literal false StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean MethodInvocation Model MethodInvocation getPublic MethodInvocation MethodInvocation MemberReference o valueOfTarget equals getVisibilityKind valueOf putValue MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation Model MethodInvocation getPublic getVisibilityKind setVisibility getCoreHelper MethodDeclaration /**
     * Make use of the default visibility, which is public...
     * TODO: centralise this knowledge.
     *
     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
     */ ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference t getVisibility getFacade ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null MethodInvocation Model MethodInvocation getPublic getVisibilityKind MemberReference v ReferenceType AbstractActionRadioMenuItem",1
1313,1313,,0
757,757,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import java.beans.PropertyChangeListener Import java.util.Collection Import org.argouml.model.Model Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the text shown in the Fig that represents the ClassifierRole.
 * Subclass this for all languages.
 * 
 * @author Michiel
 */ ClassifierRoleNotation ConstructorDeclaration Modifier public /**
     * The Constructor. 
     *
     * @param classifierRole the UML element
     */ ClassifierRoleNotation FormalParameter ReferenceType Object classifierRole IfStatement MethodInvocation ! Model MethodInvocation MemberReference classifierRole isAClassifierRole getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not a ClassifierRole."" End MethodDeclaration Modifier public Annotation Override initialiseListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement StatementExpression SuperMethodInvocation MemberReference listener MemberReference modelElement initialiseListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator classifiers MethodInvocation Model MethodInvocation MemberReference modelElement getBases getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator c MemberReference classifiers BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference c Literal ""name"" addElementListener End ReferenceType NotationProvider",0
246,246,"CompilationUnit PackageDeclaration jdepend.framework Import java.io  Import java.util  ClassDeclaration Modifier public /**
 * The <code>PackageFilter</code> class is used to filter imported 
 * package names.
 * <p>
 * The default filter contains any packages declared in the
 * <code>jdepend.properties</code> file, if such a file exists 
 * either in the user's home directory or somewhere in the classpath.
 * 
 * @author <b>Mike Clark</b>
 * @author Clarkware Consulting, Inc.
 */ PackageFilter FieldDeclaration Modifier private ReferenceType Collection VariableDeclarator filtered ConstructorDeclaration Modifier public /**
     * Constructs a <code>PackageFilter</code> instance containing 
     * the filters specified in the <code>jdepend.properties</code> file, 
     * if it exists.
     */ PackageFilter StatementExpression ExplicitConstructorInvocation ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType PropertyConfigurator VariableDeclarator config ClassCreator ReferenceType PropertyConfigurator StatementExpression MethodInvocation MethodInvocation config getFilteredPackages addPackages ConstructorDeclaration Modifier public /**
     * Constructs a <code>PackageFilter</code> instance containing 
     * the filters contained in the specified file.
     * 
     * @param f Property file.
     */ PackageFilter FormalParameter ReferenceType File f StatementExpression ExplicitConstructorInvocation ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType PropertyConfigurator VariableDeclarator config ClassCreator ReferenceType PropertyConfigurator MemberReference f StatementExpression MethodInvocation MethodInvocation config getFilteredPackages addPackages ConstructorDeclaration Modifier public /**
     * Constructs a <code>PackageFilter</code> instance with the 
     * specified collection of package names to filter.
     * 
     * @param packageNames Package names to filter.
     */ PackageFilter FormalParameter ReferenceType Collection packageNames StatementExpression Assignment MemberReference filtered ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation MemberReference packageNames addPackages MethodDeclaration /**
     * Returns the collection of filtered package names.
     * 
     * @return Filtered package names.
     */ Modifier public ReferenceType Collection getFilters ReturnStatement MemberReference filtered MethodDeclaration /**
     * Indicates whether the specified package name passes this package filter.
     * 
     * @param packageName Package name.
     * @return <code>true</code> if the package name should be included;
     *         <code>false</code> otherwise.
     */ Modifier public BasicType boolean accept FormalParameter ReferenceType String packageName ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation MethodInvocation iterator getFilters MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nameToFilter Cast ReferenceType String MethodInvocation i next IfStatement MethodInvocation packageName MemberReference nameToFilter startsWith BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration Modifier public addPackages FormalParameter ReferenceType Collection packageNames ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation packageNames iterator MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MethodInvocation i next addPackage End MethodDeclaration Modifier public addPackage FormalParameter ReferenceType String packageName IfStatement MethodInvocation packageName Literal ""*"" endsWith BlockStatement StatementExpression Assignment MemberReference packageName MethodInvocation packageName Literal 0 BinaryOperation - MethodInvocation packageName length Literal 1 substring = End IfStatement BinaryOperation > MethodInvocation packageName length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference packageName add getFilters End",0
600,600,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Iterator Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.Goal Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a class can never have instances (of
 * itself of any subclasses).
 *
 * @author jrobbins
 */ CrUselessInterface ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrUselessInterface StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision INHERITANCE addSupportedDecision StatementExpression MethodInvocation MethodInvocation Goal getUnspecifiedGoal addSupportedGoal StatementExpression MethodInvocation MemberReference Critic KT_COMPLETENESS setKnowledgeTypes StatementExpression MethodInvocation Literal ""realization"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAInterface getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isPrimaryObject getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference dm getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation iter hasNext BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation iter next isRealize getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End End ReturnStatement MemberReference PROBLEM_FOUND FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 6586457111453473553L ReferenceType CrUML",0
199,199,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.Color Import java.awt.Dimension Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.beans.PropertyChangeEvent Import java.util.Iterator Import java.util.Vector Import javax.swing.Action Import org.argouml.model.AddAssociationEvent Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.ui.ArgoJMenu Import org.argouml.uml.diagram.OperationsCompartmentContainer Import org.argouml.uml.diagram.ui.ActionAddNote Import org.argouml.uml.diagram.ui.ActionCompartmentDisplay Import org.argouml.uml.diagram.ui.ActionEdgesDisplay Import org.argouml.uml.diagram.ui.CompartmentFigText Import org.argouml.uml.diagram.ui.FigCompartmentBox Import org.argouml.uml.diagram.ui.FigEmptyRect Import org.argouml.uml.diagram.ui.FigOperationsCompartment Import org.argouml.uml.ui.foundation.core.ActionAddOperation Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public abstract /**
 * Class to display graphics for any UML Classifier in a diagram.<p>
 * 
 * This Fig has an Operations compartment. <p>
 *
 * Note that the upper line of the name box will be blanked out
 * if there is eventually a stereotype above.
 */ FigClassifierBox FieldDeclaration /**
     * The Fig for the operations compartment (if any).
     */ Modifier private ReferenceType FigOperationsCompartment VariableDeclarator operationsFig FieldDeclaration /**
     * Text highlighted by mouse actions on the diagram.<p>
     */ Modifier protected ReferenceType CompartmentFigText VariableDeclarator highlightedFigText FieldDeclaration Modifier protected ReferenceType Fig VariableDeclarator borderFig ConstructorDeclaration /**
     * Constructor.
     */ FigClassifierBox StatementExpression Assignment MemberReference operationsFig ClassCreator ReferenceType FigOperationsCompartment Literal 10 BinaryOperation + Literal 31 MemberReference ROWHEIGHT Literal 60 BinaryOperation + MemberReference ROWHEIGHT Literal 2 = StatementExpression MethodInvocation MethodInvocation Literal true setFilled getStereotypeFig StatementExpression MethodInvocation MethodInvocation Literal 1 setLineWidth getStereotypeFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference STEREOHEIGHT Literal 1 setHeight getStereotypeFig StatementExpression Assignment MemberReference borderFig ClassCreator ReferenceType FigEmptyRect Literal 10 Literal 10 Literal 0 Literal 0 = StatementExpression MethodInvocation borderFig Literal 1 setLineWidth StatementExpression MethodInvocation borderFig MemberReference Color black setLineColor StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression MethodInvocation MethodInvocation MemberReference Color white setFillColor getBigPort MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigClassifierBox VariableDeclarator figClone Cast ReferenceType FigClassifierBox SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator thisIter This MethodInvocation getFigs MethodInvocation iterator WhileStatement MethodInvocation thisIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator thisFig Cast ReferenceType Fig MethodInvocation thisIter next IfStatement BinaryOperation == MemberReference thisFig MemberReference operationsFig BlockStatement StatementExpression Assignment MemberReference figClone operationsFig Cast ReferenceType FigOperationsCompartment MemberReference thisFig = ReturnStatement MemberReference figClone End End ReturnStatement MemberReference figClone MethodDeclaration /**
     * Updates the operations box. Called from modelchanged if there is
     * a modelevent effecting the attributes and from renderingChanged in all
     * cases.
     */ Modifier protected updateOperations IfStatement MethodInvocation ! isOperationsVisible BlockStatement ReturnStatement End StatementExpression MethodInvocation operationsFig populate LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation getBounds StatementExpression MethodInvocation MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height setBounds StatementExpression MethodInvocation damage MethodDeclaration Modifier public renderingChanged StatementExpression MethodInvocation updateOperations StatementExpression SuperMethodInvocation renderingChanged MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation && BinaryOperation instanceof MemberReference mee ReferenceType AssociationChangeEvent MethodInvocation MethodInvocation MethodInvocation mee getSource equals getOwner BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o Literal null IfStatement BinaryOperation instanceof MemberReference mee ReferenceType AddAssociationEvent BlockStatement StatementExpression Assignment MemberReference o MethodInvocation mee getNewValue = IfStatement BinaryOperation instanceof MemberReference mee ReferenceType RemoveAssociationEvent BlockStatement StatementExpression Assignment MemberReference o MethodInvocation mee getOldValue = End End IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference o isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference o isAReception getFacade BlockStatement StatementExpression MethodInvocation updateOperations End StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners End MethodDeclaration /**
     * @return The Fig for the operations compartment
     */ Modifier protected ReferenceType FigOperationsCompartment getOperationsFig ReturnStatement MemberReference operationsFig MethodDeclaration /**
     * Get the bounds of the operations compartment.
     *
     * @return the bounds of the operations compartment
     */ Modifier public ReferenceType Rectangle getOperationsBounds ReturnStatement MethodInvocation operationsFig getBounds MethodDeclaration Modifier public BasicType boolean isOperationsVisible ReturnStatement MethodInvocation operationsFig isVisible MethodDeclaration Modifier public setOperationsVisible FormalParameter BasicType boolean isVisible LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation getBounds IfStatement MethodInvocation isOperationsVisible BlockStatement IfStatement MemberReference ! isVisible BlockStatement StatementExpression MethodInvocation damage LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation getFigs MethodInvocation iterator getOperationsFig WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Fig MethodInvocation it next End StatementExpression MethodInvocation MethodInvocation Literal false setVisible getOperationsFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize This MethodInvocation getMinimumSize StatementExpression MethodInvocation MemberReference rect x MemberReference rect y Cast BasicType int MethodInvocation aSize getWidth Cast BasicType int MethodInvocation aSize getHeight setBounds End BlockStatement IfStatement MemberReference isVisible BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation getFigs MethodInvocation iterator getOperationsFig WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Fig MethodInvocation it next End StatementExpression MethodInvocation MethodInvocation Literal true setVisible getOperationsFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize This MethodInvocation getMinimumSize StatementExpression MethodInvocation MemberReference rect x MemberReference rect y Cast BasicType int MethodInvocation aSize getWidth Cast BasicType int MethodInvocation aSize getHeight setBounds StatementExpression MethodInvocation damage End End MethodDeclaration Modifier public translate FormalParameter BasicType int dx FormalParameter BasicType int dy StatementExpression SuperMethodInvocation MemberReference dx MemberReference dy translate LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This findSelectionFor getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType SelectionClass BlockStatement StatementExpression Cast ReferenceType SelectionClass MemberReference sel End MethodDeclaration /**
     * Build a collection of menu items relevant for a right-click
     * popup menu on an Interface.
     *
     * @param     me     a mouse event
     * @return           a collection of menu items
     */ Modifier public ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator addMenu MethodInvocation buildAddMenu StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference addMenu add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation buildModifierPopUp add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation buildVisibilityPopUp add ReturnStatement MemberReference popUpActions MethodDeclaration Modifier protected ReferenceType ArgoJMenu buildShowPopUp LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator showMenu SuperMethodInvocation buildShowPopUp LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation ActionCompartmentDisplay MethodInvocation iterator getActions WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation showMenu Cast ReferenceType Action MethodInvocation i next add End ReturnStatement MemberReference showMenu MethodDeclaration Modifier protected ReferenceType ArgoJMenu buildAddMenu LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator addMenu ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.add"" LocalVariableDeclaration ReferenceType Action VariableDeclarator addOperation ClassCreator ReferenceType ActionAddOperation StatementExpression MethodInvocation addOperation MethodInvocation isSingleTarget setEnabled StatementExpression MethodInvocation addMenu MemberReference addOperation Literal 0 insert StatementExpression MethodInvocation addMenu ClassCreator ReferenceType ActionAddNote add StatementExpression MethodInvocation addMenu MethodInvocation ActionEdgesDisplay getShowEdges add StatementExpression MethodInvocation addMenu MethodInvocation ActionEdgesDisplay getHideEdges add ReturnStatement MemberReference addMenu MethodDeclaration Modifier protected ReferenceType Object buildModifierPopUp ReturnStatement MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp ReferenceType FigCompartmentBox ReferenceType OperationsCompartmentContainer",0
903,903,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a fork state has the wrong number of
 * transitions.  Implements constraint [5] on Pseudostate in the UML
 * Semantics v1.1, pp. 104.
 *
 * @author jrobbins
 */ CrInvalidFork ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrInvalidFork StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""incoming"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getFork getPseudostateKind equalsPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator outgoing MethodInvocation Model MethodInvocation MemberReference dm getOutgoings getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator incoming MethodInvocation Model MethodInvocation MemberReference dm getIncomings getFacade LocalVariableDeclaration BasicType int VariableDeclarator nOutgoing TernaryExpression BinaryOperation == MemberReference outgoing Literal null Literal 0 MethodInvocation outgoing size LocalVariableDeclaration BasicType int VariableDeclarator nIncoming TernaryExpression BinaryOperation == MemberReference incoming Literal null Literal 0 MethodInvocation incoming size IfStatement BinaryOperation > MemberReference nIncoming Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End IfStatement BinaryOperation == MemberReference nOutgoing Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",1
1358,1358,,1
794,794,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state Import java.beans.PropertyChangeEvent Import java.beans.VetoableChangeListener Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Iterator Import java.util.List Import org.apache.log4j.Logger Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.CommentEdge Import org.argouml.uml.diagram.UMLMutableGraphSupport Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * This class defines a bridge between the UML meta-model representation of the
 * design and the GraphModel interface used by GEF. This class handles UML
 * Statemachine Diagrams, and is also used for Activity diagrams.
 */ StateDiagramGraphModel FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType StateDiagramGraphModel getLogger FieldDeclaration /**
     * The statemachine we are diagramming.
     */ Modifier private ReferenceType Object VariableDeclarator machine MethodDeclaration /**
     * @return the statemachine of this diagram
     */ Modifier public ReferenceType Object getMachine ReturnStatement MemberReference machine MethodDeclaration /**
     * @param sm   the statemachine of this diagram
     */ Modifier public setMachine FormalParameter ReferenceType Object sm IfStatement MethodInvocation ! Model MethodInvocation MemberReference sm isAStateMachine getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End IfStatement BinaryOperation != MemberReference sm Literal null BlockStatement StatementExpression Assignment MemberReference machine MemberReference sm = End MethodDeclaration Modifier public ReferenceType List getPorts FormalParameter ReferenceType Object nodeOrEdge LocalVariableDeclaration ReferenceType List VariableDeclarator res ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAState getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add End IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAPseudostate getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add End ReturnStatement MemberReference res MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType Object port ReturnStatement MemberReference port MethodDeclaration Modifier public ReferenceType List getInEdges FormalParameter ReferenceType Object port IfStatement MethodInvocation Model MethodInvocation MemberReference port isAStateVertex getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference port getIncomings getFacade End StatementExpression MethodInvocation LOG Literal ""TODO: getInEdges of MState"" debug ReturnStatement MemberReference Collections EMPTY_LIST MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object port IfStatement MethodInvocation Model MethodInvocation MemberReference port isAStateVertex getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference port getOutgoings getFacade End StatementExpression MethodInvocation LOG Literal ""TODO: getOutEdges of MState"" debug ReturnStatement MemberReference Collections EMPTY_LIST MethodDeclaration Modifier public BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference node Literal null MethodInvocation ! Model MethodInvocation MemberReference node isAModelElement getFacade MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference node isAStateVertex getFacade MethodInvocation Model MethodInvocation MemberReference node isAPartition getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nodeMachine MethodInvocation Model MethodInvocation MemberReference node getStateMachine getStateMachinesHelper IfStatement BinaryOperation || BinaryOperation == MemberReference nodeMachine Literal null BinaryOperation == MemberReference nodeMachine MethodInvocation getMachine BlockStatement ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration Modifier public BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement SuperMethodInvocation MemberReference edge canAddEdge BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator end0 Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator end1 Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade BlockStatement StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference edge getSource getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference edge getTarget getFacade = IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference end0 isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference end0 getAllSubStates MethodInvocation MemberReference end1 contains getStateMachinesHelper BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference end0 Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference end1 Cast ReferenceType CommentEdge MemberReference edge = BlockStatement ReturnStatement Literal false End End IfStatement BinaryOperation || BinaryOperation == MemberReference end0 Literal null BinaryOperation == MemberReference end1 Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""Edge rejected. Its ends are not attached to anything"" error ReturnStatement Literal false End IfStatement BinaryOperation && MethodInvocation ! MemberReference end0 containsNode MethodInvocation ! MemberReference end0 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Edge rejected. Its source end is attached to "" MemberReference end0 Literal "" but this is not in the graph model"" error ReturnStatement Literal false End IfStatement BinaryOperation && MethodInvocation ! MemberReference end1 containsNode MethodInvocation ! MemberReference end1 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Edge rejected. Its destination end is attached to "" MemberReference end1 Literal "" but this is not in the graph model"" error ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration Modifier public addNode FormalParameter ReferenceType Object node StatementExpression MethodInvocation LOG BinaryOperation + Literal ""adding statechart/activity diagram node: "" MemberReference node debug IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement End IfStatement MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement End StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement MethodInvocation Model MethodInvocation MemberReference node isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator top MethodInvocation Model MethodInvocation MethodInvocation getMachine getTop getStateMachinesHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference top MemberReference node addSubvertex getStateMachinesHelper End StatementExpression MethodInvocation MemberReference node fireNodeAdded MethodDeclaration Modifier public addEdge FormalParameter ReferenceType Object edge StatementExpression MethodInvocation LOG Literal ""adding statechart/activity diagram edge!!!!!!"" debug IfStatement MethodInvocation ! MemberReference edge canAddEdge BlockStatement ReturnStatement End StatementExpression MethodInvocation MethodInvocation MemberReference edge add getEdges StatementExpression MethodInvocation MemberReference edge fireEdgeAdded MethodDeclaration Modifier public addNodeRelatedEdges FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node addNodeRelatedEdges IfStatement MethodInvocation Model MethodInvocation MemberReference node isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator transen ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference node getOutgoings getFacade StatementExpression MethodInvocation transen MethodInvocation Model MethodInvocation MemberReference node getIncomings getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation transen iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dep MethodInvocation iter next IfStatement MethodInvocation MemberReference dep canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference dep addEdge End End End MethodDeclaration Modifier public BasicType boolean canConnect FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""internal error not from sv"" error ReturnStatement Literal false End IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation LOG Literal ""internal error not to sv"" error ReturnStatement Literal false End IfStatement MethodInvocation Model MethodInvocation MemberReference fromPort isAFinalState getFacade BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation Model MethodInvocation MemberReference toPort isAPseudostate getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference toPort getKind getFacade equals getPseudostateKind BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration Modifier public ReferenceType Object connect FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort FormalParameter ReferenceType Object edgeClass IfStatement MethodInvocation Model MethodInvocation MemberReference fromPort isAFinalState getFacade BlockStatement ReturnStatement Literal null End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference toPort isAPseudostate getFacade MethodInvocation Model MethodInvocation getInitial MethodInvocation MethodInvocation Model MethodInvocation MemberReference toPort getKind getFacade equals getPseudostateKind BlockStatement ReturnStatement Literal null End IfStatement MethodInvocation Model MethodInvocation getTransition MethodInvocation MemberReference edgeClass equals getMetaTypes BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tr Literal null StatementExpression Assignment MemberReference tr MethodInvocation Model MethodInvocation MemberReference fromPort MemberReference toPort buildTransition getStateMachinesFactory = IfStatement MethodInvocation MemberReference tr canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference tr addEdge BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference tr moveToTrash getManager StatementExpression Assignment MemberReference tr Literal null = End ReturnStatement MemberReference tr IfStatement BinaryOperation == MemberReference edgeClass ClassReference ReferenceType CommentEdge BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator connection MethodInvocation MemberReference edgeClass MemberReference fromPort Literal null MemberReference toPort Literal null Literal null MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager buildConnection StatementExpression MethodInvocation MemberReference connection addEdge ReturnStatement MemberReference connection CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal ""buildConnection() failed"" MemberReference ex error ReturnStatement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""wrong kind of edge in StateDiagram connect3 "" MemberReference edgeClass debug ReturnStatement Literal null End End MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement Literal MethodInvocation MethodInvocation pce getPropertyName equals ""ownedElement"" BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator oldOwned Cast ReferenceType Collection MethodInvocation pce getOldValue LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation pce getNewValue LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation Model MethodInvocation MemberReference eo getModelElement getFacade IfStatement MethodInvocation oldOwned MemberReference eo contains BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""model removed "" MemberReference me debug IfStatement MethodInvocation Model MethodInvocation MemberReference me isAState getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeNode End IfStatement MethodInvocation Model MethodInvocation MemberReference me isAPseudostate getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeNode End IfStatement MethodInvocation Model MethodInvocation MemberReference me isATransition getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeEdge End BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""model added "" MemberReference me debug End End FieldDeclaration /**
     * The UID.
     */ Modifier final static BasicType long VariableDeclarator serialVersionUID Literal - 8056507319026044174L MethodDeclaration /**
     * @param newNode
     *            this is the new node that one of the ends is dragged to.
     * @param oldNode
     *            this is the existing node that is already connected.
     * @param edge
     *            this is the edge that is being dragged/rerouted
     * @return true if a transition is being rerouted between two states.
     */ Modifier public BasicType boolean canChangeConnectedNode FormalParameter ReferenceType Object newNode FormalParameter ReferenceType Object oldNode FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference newNode MemberReference oldNode BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference newNode isAState getFacade MethodInvocation Model MethodInvocation MemberReference oldNode isAState getFacade MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator otherSideNode MethodInvocation Model MethodInvocation MemberReference edge getSource getFacade IfStatement BinaryOperation == MemberReference otherSideNode MemberReference oldNode BlockStatement StatementExpression Assignment MemberReference otherSideNode MethodInvocation Model MethodInvocation MemberReference edge getTarget getFacade = End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference newNode isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference newNode getAllSubStates MethodInvocation MemberReference otherSideNode contains getStateMachinesHelper BlockStatement ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration /**
     * Reroutes the connection to the old node to be connected to the new node.
     *
     * @param newNode
     *            this is the new node that one of the ends is dragged to.
     * @param oldNode
     *            this is the existing node that is already connected.
     * @param edge
     *            this is the edge that is being dragged/rerouted
     * @param isSource
     *            tells us which end is being rerouted.
     */ Modifier public changeConnectedNode FormalParameter ReferenceType Object newNode FormalParameter ReferenceType Object oldNode FormalParameter ReferenceType Object edge FormalParameter BasicType boolean isSource IfStatement MemberReference isSource BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference edge MemberReference newNode setSource getStateMachinesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference edge MemberReference newNode setTarget getCommonBehaviorHelper End MethodDeclaration Modifier public BasicType boolean isRemoveFromDiagramAllowed FormalParameter ReferenceType Collection figs IfStatement MethodInvocation figs isEmpty BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation figs iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Fig BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator uml Cast ReferenceType Fig MemberReference obj IfStatement BinaryOperation != MemberReference uml Literal null BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true ReferenceType UMLMutableGraphSupport ReferenceType VetoableChangeListener",0
1048,1048,,0
428,428,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.apache.log4j.Logger Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to check for empty packages.
 *
 * @author Jason Robbins
 */ CrEmptyPackage FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType CrEmptyPackage getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrEmptyPackage StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision MODULARITY addSupportedDecision StatementExpression MethodInvocation Literal ""ownedElement"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator elems MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade IfStatement BinaryOperation == MethodInvocation elems size Literal 0 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Found empty package "" MethodInvocation Model MethodInvocation MemberReference dm toString getFacade debug ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",1
1130,1130,,0
800,800,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewSynchState FieldDeclaration Modifier private final static ReferenceType ActionNewSynchState VariableDeclarator SINGLETON ClassCreator ReferenceType ActionNewSynchState ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewPseudoState.
     */ ActionNewSynchState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-synchstate"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget buildSynchState getStateMachinesFactory MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionNewSynchState getInstance ReturnStatement MemberReference SINGLETON ReferenceType AbstractActionNewModelElement",0
1506,1506,,0
334,334,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration ActionModifierAbstract FieldDeclaration /**
     * Serial version generated for rev. 1.5
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2005311943576318145L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param o the target
     */ ActionModifierAbstract FormalParameter ReferenceType Object o StatementExpression SuperConstructorInvocation Literal ""checkbox.abstract-uc"" StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean MethodInvocation MemberReference o valueOfTarget valueOf putValue MethodDeclaration /**
     * This action is performed on ALL targets.
     *
     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
     */ toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation ! Model MethodInvocation MemberReference t isAbstract getFacade setAbstract getCoreHelper MethodDeclaration /**
     * This action should be enabled when:
     * <ul>
     * <li>all targets are modelelements that support
     *     the ""abstract"" checkmark and
     * <li>all targets are either abstract or not
     *     (mixed is not yet supported, but could be if a tri-state
     *     checkmark is implemented)
     * </ul>
     *
     * @see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
     */ BasicType boolean valueOfTarget FormalParameter ReferenceType Object t ReturnStatement MethodInvocation Model MethodInvocation MemberReference t isAbstract getFacade ReferenceType AbstractActionCheckBoxMenuItem",1
917,917,"CompilationUnit PackageDeclaration org.argouml.application.events Import org.argouml.application.api.ArgoEventListener InterfaceDeclaration Modifier public /**
 * An interface that objects that are interested in StatusEvents 
 * must extend.
 *
 * @author Tom Morris <tfmorris@gmail.com>
 */ ArgoStatusEventListener MethodDeclaration /**
     * Invoked when there is a new status text to be shown, 
     * that should replace any previous one.
     * 
     * @param e <code>ArgoStatusEvent</code> describing the changed text
     */ Modifier public statusText FormalParameter ReferenceType ArgoStatusEvent e MethodDeclaration /**
     * Invoked when a previously shown status text has to be removed.
     * 
     * @param e <code>ArgoStatusEvent</code> describing the removed event
     */ Modifier public statusCleared FormalParameter ReferenceType ArgoStatusEvent e MethodDeclaration /**
     * A project has been saved.
     * 
     * @param e <code>ArgoStatusEvent</code> with the name of the project that
     *            was saved.
     */ Modifier public projectSaved FormalParameter ReferenceType ArgoStatusEvent e MethodDeclaration /**
     * A project has been loaded.
     * 
     * @param e <code>ArgoStatusEvent</code> with the name of the project that
     *            was loaded.
     */ Modifier public projectLoaded FormalParameter ReferenceType ArgoStatusEvent e MethodDeclaration /**
     * A project has been modified.
     * 
     * @param e <code>ArgoStatusEvent</code> with the name of the project that
     *            was modified (ignored for current ArgoUML implementation where
     *            there is only a single project open at a time).
     */ Modifier public projectModified FormalParameter ReferenceType ArgoStatusEvent e ReferenceType ArgoEventListener",0
197,197,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.ArrayList Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLRadioButtonPanel ClassDeclaration Modifier public /**
 * A radio button panel for the visibility of a ModelElement 
 * or ElementResidence, or ElementImport.
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 4, 2003
 */ UMLModelElementVisibilityRadioButtonPanel FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1705561978481456281L FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String VariableDeclarator labelTextsAndActionCommands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.visibility-public"" localize MemberReference ActionSetModelElementVisibility PUBLIC_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.visibility-package"" localize MemberReference ActionSetModelElementVisibility PACKAGE_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.visibility-protected"" localize MemberReference ActionSetModelElementVisibility PROTECTED_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.visibility-private"" localize MemberReference ActionSetModelElementVisibility PRIVATE_COMMAND add ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationEndChangeabilityRadioButtonPanel.
     * @param title the title for the panel
     * @param horizontal determines the orientation
     */ UMLModelElementVisibilityRadioButtonPanel FormalParameter ReferenceType String title FormalParameter BasicType boolean horizontal StatementExpression SuperConstructorInvocation MemberReference title MemberReference labelTextsAndActionCommands Literal ""visibility"" MethodInvocation ActionSetModelElementVisibility getInstance MemberReference horizontal MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getVisibility getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPublic getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PUBLIC_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPackage getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PACKAGE_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getProtected getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PROTECTED_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPrivate getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PRIVATE_COMMAND setSelected BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PUBLIC_COMMAND setSelected End End End End End End ReferenceType UMLRadioButtonPanel",0
893,893,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import javax.swing.JList Import org.argouml.model.Model Import org.argouml.uml.ui.ActionNavigateNamespace Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.foundation.core.PropPanelModelElement Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * Builds the property panel for an Include relationship.<p>
 *
 * This is a type of Relationship, but, since Relationship has no
 * semantic meaning of its own, we derive directly from
 * PropPanelModelElement (as other children of Relationship do).<p>
 *
 * @author Jeremy Bennett
 */ PropPanelInclude FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8235207258195445477L ConstructorDeclaration Modifier public /**
     * Construct a property panel for Include model elements.
     */ PropPanelInclude StatementExpression SuperConstructorInvocation Literal ""label.include"" MethodInvocation Literal ""Include"" lookupIcon StatementExpression MethodInvocation Literal ""label.name"" MethodInvocation getNameTextField addField StatementExpression MethodInvocation Literal ""label.namespace"" MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType JList VariableDeclarator baseBox ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLIncludeBaseListModel StatementExpression MethodInvocation Literal ""label.usecase-base"" MethodInvocation MemberReference baseBox getSingleRowScroll addField LocalVariableDeclaration ReferenceType JList VariableDeclarator additionBox ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLIncludeAdditionListModel StatementExpression MethodInvocation Literal ""label.addition"" MethodInvocation MemberReference additionBox getSingleRowScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateNamespace addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration /**
     * Get the current base use case of the include relationship.<p>
     * @return The UseCase that is the base of this include relationship or
     * <code>null</code> if there is none.
     */ Modifier public ReferenceType Object getBase LocalVariableDeclaration ReferenceType Object VariableDeclarator base Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAInclude getFacade BlockStatement StatementExpression Assignment MemberReference base MethodInvocation Model MethodInvocation MemberReference target getBase getFacade = End ReturnStatement MemberReference base MethodDeclaration /**
     * Set the base use case of the include relationship.<p>
     * @param base The UseCase to set as the base of this include relationship.
     */ Modifier public setBase FormalParameter ReferenceType Object base LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAInclude getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference base setBase getUseCasesHelper End MethodDeclaration /**
     * Get the current addition use case of the include relationship.<p>
     *
     *
     * @return The UseCase that is the addition of this include
     * relationship or <code>null</code> if there is none.
     */ Modifier public ReferenceType Object getAddition LocalVariableDeclaration ReferenceType Object VariableDeclarator addition Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAInclude getFacade BlockStatement StatementExpression Assignment MemberReference addition MethodInvocation Model MethodInvocation MemberReference target getAddition getFacade = End ReturnStatement MemberReference addition MethodDeclaration /**
     * Set the addition use case of the include relationship.<p>
     *
     *
     * @param addition The UseCase to set as the addition of this
     * include relationship.
     */ Modifier public setAddition FormalParameter ReferenceType Object addition LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAInclude getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference addition setAddition getUseCasesHelper End MethodDeclaration /**
     * Predicate to test if a model element may appear in the list of
     * potential use cases.<p>
     *
     * <em>Note</em>. We don't try to prevent the user setting up
     * circular include relationships. This may be necessary
     * temporarily, for example while reversing a relationship. It is
     * up to a critic to track this.<p>
     *
     * @param modElem the ModelElement to test.
     *
     * @return <code>true</code> if modElem is a use case,
     * <code>false</code> otherwise.
     */ Modifier public BasicType boolean isAcceptableUseCase FormalParameter ReferenceType Object modElem ReturnStatement MethodInvocation Model MethodInvocation MemberReference modElem isAUseCase getFacade ReferenceType PropPanelModelElement",0
349,349,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui ClassDeclaration Modifier public /**
 * When this action is triggered the selected node visualization changes into 
 * <code>BigIcon</code> mode. If the node has more than one applied stereotype
 * it should be displayed exactly as its default visualization. If if has just 
 * one stereotype and it provider an icon, this icon replaces the default 
 * figure for the classifier.
 *
 * @author maurelio1234
 */ ActionStereotypeViewBigIcon ConstructorDeclaration Modifier public /**
     * Default constructor for this action
     * 
     * @param node the current node
     */ ActionStereotypeViewBigIcon FormalParameter ReferenceType FigNodeModelElement node StatementExpression SuperConstructorInvocation MemberReference node Literal ""menu.popup.stereotype-view.big-icon"" MemberReference FigNodeModelElement STEREOTYPE_VIEW_BIG_ICON ReferenceType ActionStereotypeView",0
820,820,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.Dimension Import java.awt.Rectangle Import java.beans.PropertyChangeEvent Import java.beans.PropertyVetoException Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import javax.swing.Action Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.Model Import org.argouml.ui.ArgoJMenu Import org.argouml.uml.diagram.ui.CompartmentFigText Import org.argouml.uml.diagram.ui.EnumLiteralsCompartmentContainer Import org.argouml.uml.diagram.ui.FigEnumLiteralsCompartment Import org.argouml.uml.diagram.ui.FigStereotypesCompartment Import org.argouml.uml.ui.foundation.core.ActionAddEnumerationLiteral Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML Enumeration in a diagram.
 * It depends on FigDataType for most of its behavior.<p>
 * 
 */ FigEnumeration FieldDeclaration /**
     * Serial version (generated)
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 3333154292883077250L FieldDeclaration /**
     * The Fig that represents the literals compartment.
     */ Modifier private ReferenceType FigEnumLiteralsCompartment VariableDeclarator literalsCompartment ConstructorDeclaration Modifier public /**
     * Main constructor for a {@link FigEnumeration}.
     */ FigEnumeration StatementExpression SuperConstructorInvocation LocalVariableDeclaration ReferenceType FigStereotypesCompartment VariableDeclarator fsc Cast ReferenceType FigStereotypesCompartment MethodInvocation getStereotypeFig StatementExpression MethodInvocation fsc Literal ""enumeration"" setKeyword StatementExpression MethodInvocation Literal true enableSizeChecking StatementExpression MethodInvocation Literal false setSuppressCalcBounds StatementExpression MethodInvocation MethodInvocation getLiteralsCompartment addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds ConstructorDeclaration Modifier public FigEnumeration FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation Literal true enableSizeChecking StatementExpression MethodInvocation Literal true setEnumLiteralsVisible StatementExpression MethodInvocation MemberReference node setOwner StatementExpression MethodInvocation literalsCompartment populate StatementExpression MethodInvocation MethodInvocation getBounds setBounds MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionEnumeration This MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigEnumeration VariableDeclarator clone Cast ReferenceType FigEnumeration SuperMethodInvocation clone StatementExpression Assignment MemberReference clone literalsCompartment Cast ReferenceType FigEnumLiteralsCompartment MethodInvocation literalsCompartment clone = ReturnStatement MemberReference clone MethodDeclaration Modifier protected Annotation Override ReferenceType ArgoJMenu buildAddMenu LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator addMenu SuperMethodInvocation buildAddMenu LocalVariableDeclaration ReferenceType Action VariableDeclarator addEnumerationLiteral ClassCreator ReferenceType ActionAddEnumerationLiteral StatementExpression MethodInvocation addEnumerationLiteral MethodInvocation isSingleTarget setEnabled StatementExpression MethodInvocation addMenu MemberReference addEnumerationLiteral add ReturnStatement MemberReference addMenu MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mee ReferenceType AssociationChangeEvent BinaryOperation instanceof MemberReference mee ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation renderingChanged StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners End MethodDeclaration Modifier public Annotation Override renderingChanged IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation updateEnumLiterals End StatementExpression SuperMethodInvocation renderingChanged MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation removeAllElementListeners End IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner addElementListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference newOwner getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference newOwner getFeatures MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator feat MethodInvocation it next StatementExpression MethodInvocation c MemberReference feat add StatementExpression MethodInvocation c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference feat getStereotypes getFacade addAll End StatementExpression MethodInvocation c MethodInvocation Model MethodInvocation MemberReference newOwner getEnumerationLiterals getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation c iterator WhileStatement MethodInvocation it2 hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation it2 next addElementListener End End MethodDeclaration /**
     * Update (i.e. redraw) the compartment with the literals.
     */ Modifier protected updateEnumLiterals IfStatement MethodInvocation ! literalsCompartment isVisible BlockStatement ReturnStatement End StatementExpression MethodInvocation literalsCompartment populate StatementExpression MethodInvocation MethodInvocation getBounds setBounds MethodDeclaration Modifier protected Annotation Override textEdited FormalParameter ReferenceType FigText ft PropertyVetoException StatementExpression SuperMethodInvocation MemberReference ft textEdited LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation getOwner IfStatement BinaryOperation == MemberReference cls Literal null BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation literalsCompartment MethodInvocation MemberReference ft indexOf getFigs IfStatement BinaryOperation != MemberReference i Literal - 1 BlockStatement StatementExpression Assignment MemberReference highlightedFigText Cast ReferenceType CompartmentFigText MemberReference ft = StatementExpression MethodInvocation highlightedFigText Literal true setHighlighted StatementExpression MethodInvocation Model MethodInvocation MethodInvocation highlightedFigText getOwner MethodInvocation highlightedFigText MethodInvocation trim getText setName getCoreHelper ReturnStatement End MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize SuperMethodInvocation getMinimumSize IfStatement MethodInvocation literalsCompartment isVisible BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator literalsMin MethodInvocation literalsCompartment getMinimumSize StatementExpression Assignment MemberReference aSize width MethodInvocation Math MemberReference aSize width MemberReference literalsMin width max = StatementExpression Assignment MemberReference aSize height MemberReference literalsMin height += End ReturnStatement MemberReference aSize MethodDeclaration Modifier protected Annotation Override setStandardBounds FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation borderFig MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig LocalVariableDeclaration Modifier final BasicType int VariableDeclarator whitespace Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator currentHeight Literal 0 IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator stereotypeHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getStereotypeFig StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference stereotypeHeight setBounds getStereotypeFig StatementExpression Assignment MemberReference currentHeight MemberReference stereotypeHeight += End LocalVariableDeclaration BasicType int VariableDeclarator nameHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference x BinaryOperation + MemberReference y MemberReference currentHeight MemberReference w MemberReference nameHeight setBounds getNameFig StatementExpression Assignment MemberReference currentHeight MemberReference nameHeight += IfStatement MethodInvocation MethodInvocation isVisible getLiteralsCompartment BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator literalsHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getLiteralsCompartment StatementExpression Assignment MemberReference literalsHeight BinaryOperation / MemberReference whitespace Literal 2 += StatementExpression MethodInvocation MethodInvocation MemberReference x BinaryOperation + MemberReference y MemberReference currentHeight MemberReference w MemberReference literalsHeight setBounds getLiteralsCompartment StatementExpression Assignment MemberReference currentHeight MemberReference literalsHeight += End IfStatement MethodInvocation MethodInvocation isVisible getOperationsFig BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator operationsHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getOperationsFig StatementExpression Assignment MemberReference operationsHeight BinaryOperation / MemberReference whitespace Literal 2 += StatementExpression MethodInvocation MethodInvocation MemberReference x BinaryOperation + MemberReference y MemberReference currentHeight MemberReference w MemberReference operationsHeight setBounds getOperationsFig StatementExpression Assignment MemberReference currentHeight MemberReference operationsHeight += End StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange MethodDeclaration /**
     * @return the Fig for the EnumerationLiterals compartment
     */ Modifier public ReferenceType FigEnumLiteralsCompartment getLiteralsCompartment IfStatement BinaryOperation == MemberReference literalsCompartment Literal null BlockStatement StatementExpression Assignment MemberReference literalsCompartment ClassCreator ReferenceType FigEnumLiteralsCompartment Literal 10 Literal 30 Literal 60 BinaryOperation + MemberReference ROWHEIGHT Literal 2 = End ReturnStatement MemberReference literalsCompartment MethodDeclaration /**
     * @return true if the literals compartment is visible
     */ Modifier public BasicType boolean isEnumLiteralsVisible ReturnStatement MethodInvocation literalsCompartment isVisible MethodDeclaration /**
     * @param isVisible true will show the enumeration literal compartment
     */ Modifier public setEnumLiteralsVisible FormalParameter BasicType boolean isVisible LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation getBounds IfStatement MethodInvocation literalsCompartment isVisible BlockStatement IfStatement MemberReference ! isVisible BlockStatement StatementExpression MethodInvocation damage LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation literalsCompartment MethodInvocation iterator getFigs WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Fig MethodInvocation it next End StatementExpression MethodInvocation literalsCompartment Literal false setVisible LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize This MethodInvocation getMinimumSize StatementExpression MethodInvocation MemberReference rect x MemberReference rect y Cast BasicType int MethodInvocation aSize getWidth Cast BasicType int MethodInvocation aSize getHeight setBounds End BlockStatement IfStatement MemberReference isVisible BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation literalsCompartment MethodInvocation iterator getFigs WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Fig MethodInvocation it next End StatementExpression MethodInvocation literalsCompartment Literal true setVisible LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize This MethodInvocation getMinimumSize StatementExpression MethodInvocation MemberReference rect x MemberReference rect y Cast BasicType int MethodInvocation aSize getWidth Cast BasicType int MethodInvocation aSize getHeight setBounds StatementExpression MethodInvocation damage End End MethodDeclaration /**
     * @return the bounds of the EnumerationLiterals compartment
     */ Modifier public ReferenceType Rectangle getEnumLiteralsBounds ReturnStatement MethodInvocation literalsCompartment getBounds ReferenceType FigDataType ReferenceType EnumLiteralsCompartmentContainer",0
1254,1254,,0
1418,1418,,0
594,594,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.util.Collection Import org.argouml.model.Model Import org.argouml.notation.NotationProvider Import org.argouml.notation.NotationProviderFactory2 Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.static_structure.ui.FigEnumerationLiteral Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * The Fig for the compartment of an Enumeration 
 * that shows a list of enumerationliterals.
 * 
 * @author Tom Morris
 */ FigEnumLiteralsCompartment FieldDeclaration /**
     * Serial version for initial implementation.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 829674049363538379L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param x x
     * @param y y
     * @param w width
     * @param h height
     */ FigEnumLiteralsCompartment FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h MethodDeclaration Modifier protected ReferenceType Collection getUmlCollection LocalVariableDeclaration ReferenceType Object VariableDeclarator enumeration MethodInvocation MethodInvocation getOwner getGroup ReturnStatement MethodInvocation Model MethodInvocation MemberReference enumeration getEnumerationLiterals getFacade MethodDeclaration Modifier protected BasicType int getNotationType ReturnStatement MemberReference NotationProviderFactory2 TYPE_NAME MethodDeclaration /**
     * @see org.argouml.uml.diagram.ui.FigEditableCompartment#createModelElement()
     */ Modifier protected createModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator enumeration MethodInvocation MethodInvocation getOwner getGroup LocalVariableDeclaration ReferenceType Object VariableDeclarator literal MethodInvocation Model MethodInvocation Literal """" MemberReference enumeration buildEnumerationLiteral getCoreFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference literal setTarget getInstance MethodDeclaration Modifier protected ReferenceType FigSingleLineText createFigText FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter ReferenceType Fig aFig FormalParameter ReferenceType NotationProvider np ReturnStatement ClassCreator ReferenceType FigEnumerationLiteral MemberReference x MemberReference y MemberReference w MemberReference h MemberReference aFig MemberReference np ReferenceType FigEditableCompartment",0
709,709,"CompilationUnit PackageDeclaration org.argouml.uml.diagram Import org.argouml.model.DiDiagram Import org.argouml.model.DiElement Import org.argouml.model.Model Import org.tigris.gef.graph.GraphEvent Import org.tigris.gef.graph.GraphListener Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public final /**
 * Adapts changes in the Diagram subsystem (the graph presentation layer)
 * to changes in the Model subsyetm (diagram interchange model).
 * The curent implementaion does this by listening to graph events and
 * forwarding those as specific calls to the DiagramInterchangeModel.
 * This should be changed to a more standard Adapter architecture that
 * provides an interface for Figs and GraphModels to call only when required.
 *
 * @author Bob Tarling
 * @stereotype singleton
 */ GraphChangeAdapter FieldDeclaration /**
     * The instance.
     */ Modifier private final static ReferenceType GraphChangeAdapter VariableDeclarator INSTANCE ClassCreator ReferenceType GraphChangeAdapter MethodDeclaration /**
     * The getter for the instance.
     *
     * @return The instance.
     */ Modifier public static ReferenceType GraphChangeAdapter getInstance ReturnStatement MemberReference INSTANCE ConstructorDeclaration Modifier private /**
     * The constructor of a singleton is private.
     */ GraphChangeAdapter MethodDeclaration Modifier public ReferenceType DiDiagram createDiagram FormalParameter ReferenceType Class type FormalParameter ReferenceType Object owner IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference type MemberReference owner createDiagram getDiagramInterchangeModel End ReturnStatement Literal null MethodDeclaration Modifier public removeDiagram FormalParameter ReferenceType DiDiagram dd IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference dd deleteDiagram getDiagramInterchangeModel End MethodDeclaration Modifier public ReferenceType DiElement createElement FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation Cast ReferenceType UMLMutableGraphSupport MemberReference gm MemberReference node createElement getDiagramInterchangeModel End ReturnStatement Literal null MethodDeclaration Modifier public removeElement FormalParameter ReferenceType DiElement element IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element deleteElement getDiagramInterchangeModel End MethodDeclaration Modifier public nodeAdded FormalParameter ReferenceType GraphEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e getArg IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = End IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = End StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg nodeAdded getDiagramInterchangeModel MethodDeclaration Modifier public edgeAdded FormalParameter ReferenceType GraphEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e getArg IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = End IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = End StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg edgeAdded getDiagramInterchangeModel MethodDeclaration Modifier public nodeRemoved FormalParameter ReferenceType GraphEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e getArg IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = End IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = End StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg nodeRemoved getDiagramInterchangeModel MethodDeclaration Modifier public edgeRemoved FormalParameter ReferenceType GraphEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e getArg IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = End IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = End StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg edgeRemoved getDiagramInterchangeModel MethodDeclaration Modifier public graphChanged FormalParameter ReferenceType GraphEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e getArg IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = End IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = End StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg graphChanged getDiagramInterchangeModel ReferenceType GraphListener",0
505,505,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Navigate to container of the element.
 *
 * @see org.argouml.model.Facade#getModelElementContainer(Object)
 * @author mkl
 */ ActionNavigateContainerElement MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getModelElementContainer getFacade ReferenceType AbstractActionNavigate",0
1332,1332,,0
303,303,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewTimeEvent FieldDeclaration /**
     * The instance.
     */ Modifier private static ReferenceType ActionNewTimeEvent VariableDeclarator singleton ClassCreator ReferenceType ActionNewTimeEvent ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewTimeEvent.
     */ ActionNewTimeEvent StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference NAME MethodInvocation Translator Literal ""button.new-timeevent"" localize putValue MethodDeclaration Modifier protected ReferenceType Object createEvent FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation Model MethodInvocation MemberReference ns buildTimeEvent getStateMachinesFactory MethodDeclaration /**
     * @return Returns the singleton.
     */ Modifier public static ReferenceType ActionNewTimeEvent getSingleton ReturnStatement MemberReference singleton ReferenceType ActionNewEvent",1
242,242,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import org.apache.log4j.Logger Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.UMLToDoItem ClassDeclaration Modifier public /**
 * UML 1.5 Well-formedness rule [2] for Composite States.
 *
 * @author pepargouml@yahoo.es
 */ CrMultipleDeepHistoryStates FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType CrMultipleDeepHistoryStates getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMultipleDeepHistoryStates StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""parent"" addTrigger StatementExpression MethodInvocation Literal ""kind"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equalsPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MethodInvocation Model MethodInvocation MemberReference dm getContainer getFacade IfStatement BinaryOperation == MemberReference cs Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""null parent state"" debug ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator peers MethodInvocation Model MethodInvocation MemberReference cs getSubvertices getFacade LocalVariableDeclaration BasicType int VariableDeclarator initialStateCount Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation peers iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MethodInvocation iter next IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equalsPseudostateKind getFacade BlockStatement StatementExpression MemberReference ++ initialStateCount End End IfStatement BinaryOperation > MemberReference initialStateCount Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dm computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr MethodDeclaration /**
     * @param ps the design material
     * @return the offenders
     */ Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object ps LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet MemberReference ps LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MethodInvocation Model MethodInvocation MemberReference ps getContainer getFacade IfStatement BinaryOperation == MemberReference cs Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""null parent in still valid"" debug ReturnStatement MemberReference offs End LocalVariableDeclaration ReferenceType Collection VariableDeclarator peers MethodInvocation Model MethodInvocation MemberReference cs getSubvertices getFacade ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation peers iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MethodInvocation iter next IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equalsPseudostateKind getFacade BlockStatement StatementExpression MethodInvocation offs MemberReference sv add End End ReturnStatement MemberReference offs MethodDeclaration Modifier public BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4893102976661022514L ReferenceType CrUML",0
1539,1539,,0
859,859,"CompilationUnit PackageDeclaration org.argouml.language.ui Import java.awt.Dimension Import java.util.Iterator Import javax.swing.JComboBox Import org.apache.log4j.Logger Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoGeneratorEvent Import org.argouml.application.events.ArgoGeneratorEventListener Import org.argouml.uml.generator.GeneratorManager Import org.argouml.uml.generator.Language ClassDeclaration Modifier public /**
 * This class provides a self-updating language combo box.
 * @author Daniele Tamino
 */ LanguageComboBox FieldDeclaration /** logger */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType LanguageComboBox getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     */ LanguageComboBox StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal false setEditable StatementExpression MethodInvocation Literal 6 setMaximumRowCount LocalVariableDeclaration ReferenceType Dimension VariableDeclarator d MethodInvocation getPreferredSize StatementExpression Assignment MemberReference d width Literal 200 = StatementExpression MethodInvocation MemberReference d setMaximumSize StatementExpression MethodInvocation ArgoEventPump MemberReference ArgoEventTypes ANY_GENERATOR_EVENT This addListener StatementExpression MethodInvocation refresh MethodDeclaration Modifier protected finalize StatementExpression MethodInvocation ArgoEventPump This removeListener MethodDeclaration /**
     * Refresh the combobox contents.
     */ Modifier public refresh StatementExpression MethodInvocation removeAllItems LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iterator MethodInvocation GeneratorManager MethodInvocation getLanguages MethodInvocation iterator getInstance WhileStatement MethodInvocation iterator hasNext BlockStatement TryStatement LocalVariableDeclaration ReferenceType Language VariableDeclarator ll Cast ReferenceType Language MethodInvocation iterator next StatementExpression MethodInvocation MemberReference ll addItem CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal ""Unexpected exception"" MemberReference e error End StatementExpression MethodInvocation Literal true setVisible StatementExpression MethodInvocation invalidate MethodDeclaration Modifier public generatorChanged FormalParameter ReferenceType ArgoGeneratorEvent e StatementExpression MethodInvocation refresh MethodDeclaration Modifier public generatorAdded FormalParameter ReferenceType ArgoGeneratorEvent e StatementExpression MethodInvocation refresh MethodDeclaration Modifier public generatorRemoved FormalParameter ReferenceType ArgoGeneratorEvent e StatementExpression MethodInvocation refresh ReferenceType JComboBox ReferenceType ArgoGeneratorEventListener",0
1041,1041,,0
728,728,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.BorderLayout Import java.awt.Component Import java.awt.Container Import java.awt.Dimension Import java.awt.FlowLayout Import java.awt.Frame Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.WindowAdapter Import java.awt.event.WindowEvent Import java.util.ArrayList Import java.util.List Import java.util.Vector Import javax.swing.BorderFactory Import javax.swing.Box Import javax.swing.DefaultListModel Import javax.swing.JButton Import javax.swing.JDialog Import javax.swing.JLabel Import javax.swing.JList Import javax.swing.JOptionPane Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.ListCellRenderer Import javax.swing.ListSelectionModel Import javax.swing.SwingUtilities Import javax.swing.WindowConstants Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * UMLAddDialog allows the user to do a multiple select from a list of choices
 * in a separate dialog. The dialog has two possible uses:
 * <ol>
 * <li>As dialog as described above with a custom cellrenderer or a default
 * cellrenderer.
 * <li>As dialog with a UMLCellRenderer. Cells in the choices list and selected
 * list are presented with their name instead of their toString function.
 * </ol>
 */ UMLAddDialog FieldDeclaration /**
     * The choices a user has
     */ Modifier private ReferenceType List VariableDeclarator choices Literal null FieldDeclaration /**
     * The preselected choices
     */ Modifier private ReferenceType List VariableDeclarator preSelected Literal null FieldDeclaration /**
     * The selected choices.
     * TODO: This should be switched to a List when {@link #getSelected()}
     * is removed.  It needs to remain a Vector for now to preserve the 
     * semantics of {@link #getSelected()} because it returns the Vector
     * itself, not a copy.
     */ Modifier private ReferenceType Vector VariableDeclarator selected Literal null FieldDeclaration /**
     * The GUI list for the choices
     */ Modifier private ReferenceType JList VariableDeclarator choicesList Literal null FieldDeclaration /**
     * The GUI list for the selected choices
     */ Modifier private ReferenceType JList VariableDeclarator selectedList Literal null FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator addButton Literal null FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator removeButton Literal null FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator okButton Literal null FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator cancelButton Literal null FieldDeclaration Modifier private ReferenceType JDialog VariableDeclarator dialog Literal null FieldDeclaration Modifier private ReferenceType String VariableDeclarator title Literal null FieldDeclaration Modifier private BasicType boolean VariableDeclarator multiSelectAllowed Literal false FieldDeclaration /**
     * The returnvalue of the method showDialog. Returnvalue can be either
     * JOptionPane.OK_OPTION or JOptionPane.CANCEL_OPTION
     */ Modifier private BasicType int VariableDeclarator returnValue ConstructorDeclaration Modifier public /**
     * Constructs a UMLAddDialog with a UMLListCellRenderer. Modelelements are
     * represented with their names in the choices list and the selected list.
     *
     * @param theChoices
     *            A List containing the choices a user has.
     * @param preselected
     *            A List containing the preselected choices
     * @param theTitle
     *            The title of the dialog
     * @param multiselectAllowed
     *            True if the user may select multiple choices
     * @param exclusive
     *            True if choices in the selected list may not appear in the
     *            choices list. If true preselected choices are removed from the
     *            choices list.
     */ UMLAddDialog FormalParameter ReferenceType List theChoices FormalParameter ReferenceType List preselected FormalParameter ReferenceType String theTitle FormalParameter BasicType boolean multiselectAllowed FormalParameter BasicType boolean exclusive StatementExpression ExplicitConstructorInvocation MemberReference theChoices MemberReference preselected MemberReference theTitle ClassCreator ReferenceType UMLListCellRenderer2 Literal true MemberReference multiselectAllowed MemberReference exclusive ConstructorDeclaration Modifier public /**
     * Constructs a UMLAddDialog with a given UMLListCellRenderer.
     *
     * @param theChoices
     *            A List containing the choices a user has.
     * @param preselected
     *            A List containing the preselected choices
     * @param theTitle
     *            The title of the dialog
     * @param renderer
     *            The cellrenderer of the choices list and the selected list
     * @param multiselectAllowed
     *            True if the user may select multiple choices
     * @param exclusive
     *            True if choices in the selected list may not appear in the
     *            choices list. If true preselected choices are removed from the
     *            choices list.
     */ UMLAddDialog FormalParameter ReferenceType List theChoices FormalParameter ReferenceType List preselected FormalParameter ReferenceType String theTitle FormalParameter ReferenceType ListCellRenderer renderer FormalParameter BasicType boolean multiselectAllowed FormalParameter BasicType boolean exclusive StatementExpression Assignment MemberReference multiSelectAllowed MemberReference multiselectAllowed = IfStatement BinaryOperation == MemberReference theChoices Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""There should allways be choices in UMLAddDialog"" End IfStatement BinaryOperation && BinaryOperation && MemberReference exclusive BinaryOperation != MemberReference preselected Literal null MethodInvocation ! preselected isEmpty BlockStatement StatementExpression MethodInvocation theChoices MemberReference preselected removeAll End StatementExpression Assignment MemberReference choices MemberReference theChoices = StatementExpression Assignment MemberReference preSelected MemberReference preselected = StatementExpression Assignment MemberReference selected ClassCreator ReferenceType Vector = IfStatement BinaryOperation != MemberReference theTitle Literal null BlockStatement StatementExpression Assignment MemberReference title MemberReference theTitle = BlockStatement StatementExpression Assignment MemberReference title Literal """" = End IfStatement BinaryOperation != MemberReference preselected Literal null BlockStatement StatementExpression MethodInvocation selected MemberReference preselected addAll End StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration ReferenceType JPanel VariableDeclarator upperPanel ClassCreator ReferenceType JPanel LocalVariableDeclaration ReferenceType JPanel VariableDeclarator panelChoices ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout LocalVariableDeclaration ReferenceType JPanel VariableDeclarator panelSelected ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout StatementExpression Assignment MemberReference choicesList ClassCreator ReferenceType JList MethodInvocation MemberReference theChoices constructListModel = StatementExpression MethodInvocation choicesList ClassCreator ReferenceType Dimension Literal 150 Literal 300 setMinimumSize IfStatement BinaryOperation != MemberReference renderer Literal null BlockStatement StatementExpression MethodInvocation choicesList MemberReference renderer setCellRenderer End IfStatement MemberReference multiselectAllowed BlockStatement StatementExpression MethodInvocation choicesList MemberReference ListSelectionModel MULTIPLE_INTERVAL_SELECTION setSelectionMode BlockStatement StatementExpression MethodInvocation choicesList MemberReference ListSelectionModel SINGLE_SELECTION setSelectionMode End StatementExpression MethodInvocation choicesList Literal 15 setVisibleRowCount LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator choicesScroll ClassCreator ReferenceType JScrollPane MemberReference choicesList StatementExpression MethodInvocation panelChoices ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.choices"" localize MemberReference BorderLayout NORTH add StatementExpression MethodInvocation panelChoices MemberReference choicesScroll MemberReference BorderLayout CENTER add StatementExpression Assignment MemberReference addButton ClassCreator ReferenceType JButton MethodInvocation ResourceLoaderWrapper Literal ""NavigateForward"" lookupIconResource = StatementExpression MethodInvocation addButton This addActionListener StatementExpression Assignment MemberReference removeButton ClassCreator ReferenceType JButton MethodInvocation ResourceLoaderWrapper Literal ""NavigateBack"" lookupIconResource = StatementExpression MethodInvocation removeButton This addActionListener LocalVariableDeclaration ReferenceType Box VariableDeclarator buttonBox MethodInvocation Box createVerticalBox StatementExpression MethodInvocation buttonBox MemberReference addButton add StatementExpression MethodInvocation buttonBox MethodInvocation Box ClassCreator ReferenceType Dimension Literal 0 Literal 5 createRigidArea add StatementExpression MethodInvocation buttonBox MemberReference removeButton add StatementExpression Assignment MemberReference selectedList ClassCreator ReferenceType JList MethodInvocation MemberReference selected constructListModel = StatementExpression MethodInvocation selectedList ClassCreator ReferenceType Dimension Literal 150 Literal 300 setMinimumSize IfStatement BinaryOperation != MemberReference renderer Literal null BlockStatement StatementExpression MethodInvocation selectedList MemberReference renderer setCellRenderer End StatementExpression MethodInvocation selectedList MemberReference ListSelectionModel MULTIPLE_INTERVAL_SELECTION setSelectionMode StatementExpression MethodInvocation selectedList Literal 15 setVisibleRowCount LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator selectedScroll ClassCreator ReferenceType JScrollPane MemberReference selectedList StatementExpression MethodInvocation panelSelected ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.selected"" localize MemberReference BorderLayout NORTH add StatementExpression MethodInvocation panelSelected MemberReference selectedScroll MemberReference BorderLayout CENTER add StatementExpression MethodInvocation upperPanel MemberReference panelChoices add StatementExpression MethodInvocation upperPanel MethodInvocation Box ClassCreator ReferenceType Dimension Literal 5 Literal 0 createRigidArea add StatementExpression MethodInvocation upperPanel MemberReference buttonBox add StatementExpression MethodInvocation upperPanel MethodInvocation Box ClassCreator ReferenceType Dimension Literal 5 Literal 0 createRigidArea add StatementExpression MethodInvocation upperPanel MemberReference panelSelected add StatementExpression MethodInvocation MemberReference upperPanel MemberReference BorderLayout NORTH add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator okCancelPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType FlowLayout MemberReference FlowLayout RIGHT StatementExpression Assignment MemberReference okButton ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""button.ok"" localize = StatementExpression MethodInvocation okButton This addActionListener StatementExpression Assignment MemberReference cancelButton ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""button.cancel"" localize = StatementExpression MethodInvocation cancelButton This addActionListener StatementExpression MethodInvocation okCancelPanel MemberReference okButton add StatementExpression MethodInvocation okCancelPanel MemberReference cancelButton add StatementExpression MethodInvocation okCancelPanel MethodInvocation BorderFactory Literal 10 Literal 0 Literal 10 Literal 10 createEmptyBorder setBorder StatementExpression MethodInvocation MemberReference okCancelPanel MemberReference BorderLayout SOUTH add StatementExpression MethodInvocation MethodInvocation BorderFactory Literal 20 Literal 10 Literal 20 Literal 10 createEmptyBorder setBorder StatementExpression MethodInvocation update MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource IfStatement MethodInvocation source MemberReference addButton equals BlockStatement StatementExpression MethodInvocation addSelection StatementExpression MethodInvocation update End IfStatement MethodInvocation source MemberReference removeButton equals BlockStatement StatementExpression MethodInvocation removeSelection StatementExpression MethodInvocation update End IfStatement MethodInvocation source MemberReference okButton equals BlockStatement StatementExpression MethodInvocation ok End IfStatement MethodInvocation source MemberReference cancelButton equals BlockStatement StatementExpression MethodInvocation cancel End MethodDeclaration /**
     * Updates the add and remove button (sets enabled/disabled). Called
     * whenever the model is changed.
     */ Modifier public update IfStatement BinaryOperation == MethodInvocation choices size Literal 0 BlockStatement StatementExpression MethodInvocation addButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation addButton Literal true setEnabled End IfStatement BinaryOperation == MethodInvocation selected size Literal 0 BlockStatement StatementExpression MethodInvocation removeButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation removeButton Literal true setEnabled End IfStatement BinaryOperation && BinaryOperation > MethodInvocation selected size Literal 1 MemberReference ! multiSelectAllowed BlockStatement StatementExpression MethodInvocation addButton Literal false setEnabled StatementExpression MethodInvocation okButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation addButton Literal true setEnabled StatementExpression MethodInvocation okButton Literal true setEnabled End MethodDeclaration /**
     * Utility method to construct a DefaultListModel from a List
     *
     * @param vec
     *            the given list
     * @return DefaultListModel
     */ Modifier protected ReferenceType DefaultListModel constructListModel FormalParameter ReferenceType List list LocalVariableDeclaration ReferenceType DefaultListModel VariableDeclarator model ClassCreator ReferenceType DefaultListModel ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference list BlockStatement StatementExpression MethodInvocation model MemberReference o addElement End ReturnStatement MemberReference model MethodDeclaration /**
     * Shows the dialog. First a dialog must be constructed using one of the
     * constructors of this class. After that this method should be called to
     * actually show the dialog. This method returns either
     * JOptionPane.OK_OPTION if the user wants to select his choices or
     * JOptionPane.CANCEL_OPTION if he does not want to.
     *
     * @param parent
     *            The parent frame of this dialog.
     * @return int The returnvalue, can be either JOptionPane.OK_OPTION or
     *         JOptionPane.CANCEL_OPTION
     */ Modifier public BasicType int showDialog FormalParameter ReferenceType Component parent LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame TernaryExpression BinaryOperation instanceof MemberReference parent ReferenceType Frame Cast ReferenceType Frame MemberReference parent Cast ReferenceType Frame MethodInvocation SwingUtilities ClassReference ReferenceType Frame MemberReference parent getAncestorOfClass StatementExpression Assignment MemberReference dialog ClassCreator ReferenceType JDialog MemberReference frame MemberReference title Literal true = LocalVariableDeclaration ReferenceType Container VariableDeclarator contentPane MethodInvocation dialog getContentPane StatementExpression MethodInvocation contentPane ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation contentPane This MemberReference BorderLayout CENTER add StatementExpression MethodInvocation dialog MemberReference WindowConstants DO_NOTHING_ON_CLOSE setDefaultCloseOperation StatementExpression MethodInvocation dialog ClassCreator ReferenceType WindowAdapter MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent we StatementExpression MethodInvocation cancel addWindowListener StatementExpression MethodInvocation dialog pack StatementExpression MethodInvocation dialog MemberReference parent setLocationRelativeTo StatementExpression MethodInvocation dialog Literal true setVisible ReturnStatement MemberReference returnValue MethodDeclaration /**
     * Return the choices a user can make.
     *
     * @return List of choices
     */ Modifier public ReferenceType List getChoicesList LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation MemberReference result getChoicesListInternal ReturnStatement MemberReference result MethodDeclaration /**
     * Returns the choices a user can make.
     *
     * @return Vector
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getSelectedChoicesList()}.
     */ Modifier public ReferenceType Vector getChoices LocalVariableDeclaration ReferenceType Vector VariableDeclarator result ClassCreator ReferenceType Vector StatementExpression MethodInvocation MemberReference result getChoicesListInternal ReturnStatement MemberReference result MethodDeclaration Modifier private getChoicesListInternal FormalParameter ReferenceType List result ForStatement EnhancedForControl VariableDeclaration BasicType int VariableDeclarator index MethodInvocation choicesList getSelectedIndices BlockStatement StatementExpression MethodInvocation result MethodInvocation choices MemberReference index get add End MethodDeclaration /**
     * Returns the selected elements in the selected list
     *
     * @return List of elements
     */ Modifier public ReferenceType List getSelectedChoicesList LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation MemberReference result getSelectedChoicesInternal ReturnStatement MemberReference result MethodDeclaration /**
     * Returns the selected elements in the selected list
     *
     * @return Vector
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getSelectedChoicesList()}.
     */ Modifier public ReferenceType Vector getSelectedChoices LocalVariableDeclaration ReferenceType Vector VariableDeclarator result ClassCreator ReferenceType Vector StatementExpression MethodInvocation MemberReference result getSelectedChoicesInternal ReturnStatement MemberReference result MethodDeclaration Modifier private getSelectedChoicesInternal FormalParameter ReferenceType List result IfStatement BinaryOperation && BinaryOperation != MemberReference selectedList Literal null BinaryOperation != MemberReference selected Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration BasicType int VariableDeclarator index MethodInvocation selectedList getSelectedIndices BlockStatement StatementExpression MethodInvocation result MethodInvocation selected MemberReference index get add End End MethodDeclaration /**
     * Returns the by the user selected elements. This method should be called
     * if the selected choices are to be known.
     *
     * @return Vector
     * @deprecated for 0.25.4 by tfmorris.  Use {@link #getSelectedList()}.
     */ Modifier public ReferenceType Vector getSelected ReturnStatement MemberReference selected MethodDeclaration /**
     * Returns the by the user selected elements. This method should be called
     * if the selected choices are to be known.
     *
     * @return List
     */ Modifier public ReferenceType List getSelectedList ReturnStatement MemberReference selected MethodDeclaration /**
     * Adds the selected elements in the choices list to the selected list.
     * Updates the GUI too.
     */ Modifier public addSelection LocalVariableDeclaration ReferenceType List VariableDeclarator theChoices MethodInvocation getChoicesList StatementExpression MethodInvocation choices MemberReference theChoices removeAll ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation theChoices size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType DefaultListModel MethodInvocation choicesList getModel End StatementExpression MethodInvocation selected MemberReference theChoices addAll ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation theChoices size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType DefaultListModel MethodInvocation selectedList getModel End MethodDeclaration /**
     * Removes the selected elements in the selected list and adds them to the
     * choices list. Updates the GUI too.
     */ Modifier public removeSelection LocalVariableDeclaration ReferenceType List VariableDeclarator theChoices MethodInvocation getSelectedChoicesList StatementExpression MethodInvocation selected MemberReference theChoices removeAll ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation theChoices size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType DefaultListModel MethodInvocation selectedList getModel End StatementExpression MethodInvocation choices MemberReference theChoices addAll ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation theChoices size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType DefaultListModel MethodInvocation choicesList getModel End MethodDeclaration /**
     * Called when the okbutton is pressed. Closes this dialog and sets the
     * returnvalue to JOptionPane.OK_OPTION.
     */ Modifier public ok IfStatement BinaryOperation != MemberReference dialog Literal null BlockStatement StatementExpression MethodInvocation dialog Literal false setVisible StatementExpression Assignment MemberReference returnValue MemberReference JOptionPane OK_OPTION = End MethodDeclaration /**
     * Called when the cancel button is pressed. Closes this dialog and sets the
     * returnvalue to JOptionPane.CANCEL_OPTION. Resets the selected list to the
     * originally preselection if there is one. Otherwise the selected list is
     * emptied.
     */ Modifier public cancel StatementExpression MethodInvocation selected clear IfStatement BinaryOperation != MemberReference preSelected Literal null BlockStatement StatementExpression MethodInvocation selected MemberReference preSelected addAll End IfStatement BinaryOperation != MemberReference dialog Literal null BlockStatement StatementExpression MethodInvocation dialog Literal false setVisible StatementExpression Assignment MemberReference returnValue MemberReference JOptionPane CANCEL_OPTION = End ReferenceType JPanel ReferenceType ActionListener",0
1406,1406,,0
1195,1195,,0
666,666,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.awt.event.ActionEvent Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.util.ArrayList Import java.util.Collection Import java.util.List Import javax.swing.Action Import javax.swing.Icon Import javax.swing.JComboBox Import javax.swing.JScrollPane Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 Import org.argouml.uml.ui.AbstractActionNewModelElement Import org.argouml.uml.ui.AbstractActionRemoveElement Import org.argouml.uml.ui.UMLComboBoxNavigator Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.UMLSearchableComboBox Import org.argouml.uml.ui.behavior.state_machines.AbstractPropPanelState ClassDeclaration Modifier public /**
 * The properties panel for an ObjectFlowState.
 *
 * @author mkl
 */ PropPanelObjectFlowState FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator classifierComboBox FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator statesScroll FieldDeclaration Modifier private ReferenceType ActionNewClassifierInState VariableDeclarator actionNewCIS FieldDeclaration Modifier private ReferenceType UMLObjectFlowStateClassifierComboBoxModel VariableDeclarator classifierComboBoxModel ClassCreator ReferenceType UMLObjectFlowStateClassifierComboBoxModel ConstructorDeclaration Modifier public /**
     * Construct a property panel for ObjectFlowState elements.
     */ PropPanelObjectFlowState StatementExpression SuperConstructorInvocation Literal ""label.object-flow-state"" MethodInvocation Literal ""ObjectFlowState"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.container"" localize MethodInvocation getContainerScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.synch-state"" localize ClassCreator ReferenceType UMLActionSynchCheckBox addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.type"" localize ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator Literal ""label.classifierinstate.navigate.tooltip"" localize MethodInvocation getClassifierComboBox addField LocalVariableDeclaration ReferenceType UMLMutableLinkedList VariableDeclarator list ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLOFSStateListModel ClassCreator ReferenceType ActionAddOFSState Literal null ClassCreator ReferenceType ActionRemoveOFSState Literal true StatementExpression Assignment MemberReference statesScroll ClassCreator ReferenceType JScrollPane MemberReference list = StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.instate"" localize MemberReference statesScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.incoming"" localize MethodInvocation getIncomingScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.outgoing"" localize MethodInvocation getOutgoingScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.parameters"" localize ClassCreator ReferenceType JScrollPane ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLObjectFlowStateParameterListModel ClassCreator ReferenceType ActionAddOFSParameter ClassCreator ReferenceType ActionNewOFSParameter ClassCreator ReferenceType ActionRemoveOFSParameter Literal true addField MethodDeclaration Modifier protected Annotation Override addExtraButtons StatementExpression Assignment MemberReference actionNewCIS ClassCreator ReferenceType ActionNewClassifierInState = StatementExpression MethodInvocation actionNewCIS MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""button.new-classifierinstate"" localize putValue LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation ResourceLoaderWrapper Literal ""ClassifierInState"" lookupIcon StatementExpression MethodInvocation actionNewCIS MemberReference Action SMALL_ICON MemberReference icon putValue StatementExpression MethodInvocation MemberReference actionNewCIS addAction MethodDeclaration Modifier public Annotation Override setTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator oldTarget MethodInvocation getTarget StatementExpression SuperMethodInvocation MemberReference t setTarget StatementExpression MethodInvocation actionNewCIS MethodInvocation actionNewCIS isEnabled setEnabled IfStatement MethodInvocation Model MethodInvocation MemberReference oldTarget isAObjectFlowState getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference oldTarget Literal ""type"" removeModelEventListener getPump End IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference t Literal ""type"" addModelEventListener getPump End MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation actionNewCIS MethodInvocation actionNewCIS isEnabled setEnabled MethodDeclaration /**
     * @return the combo box for the type (Classifier or ClassifierInState)
     */ Modifier protected ReferenceType JComboBox getClassifierComboBox IfStatement BinaryOperation == MemberReference classifierComboBox Literal null BlockStatement StatementExpression Assignment MemberReference classifierComboBox ClassCreator ReferenceType UMLSearchableComboBox MemberReference classifierComboBoxModel ClassCreator ReferenceType ActionSetObjectFlowStateClassifier Literal true = End ReturnStatement MemberReference classifierComboBox MethodDeclaration /**
     * Utility function to remove the top states
     * from a given collection of states.
     *
     * @param ret a collection of states
     */ Modifier static removeTopStateFrom FormalParameter ReferenceType Collection ret LocalVariableDeclaration ReferenceType Collection VariableDeclarator tops ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator state MemberReference ret BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference state isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference state isTop getFacade BlockStatement StatementExpression MethodInvocation tops MemberReference state add End End StatementExpression MethodInvocation ret MemberReference tops removeAll MethodDeclaration Modifier private static ReferenceType Object getType FormalParameter ReferenceType Object target LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference target getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAClassifierInState getFacade BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Model MethodInvocation MemberReference type getType getFacade = End ReturnStatement MemberReference type ClassDeclaration Modifier static UMLOFSStateListModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLOFSStateListModel.
         */ UMLOFSStateListModel StatementExpression SuperConstructorInvocation Literal ""type"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifierInState getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference classifier getInStates getFacade StatementExpression MethodInvocation MemberReference c setAllElements End End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem isAState getFacade MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference t getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAClassifierInState getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference type getInStates getFacade IfStatement MethodInvocation c MemberReference elem contains BlockStatement ReturnStatement Literal true End End End ReturnStatement Literal false FieldDeclaration /**
         * The UID.
         */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7742772495832660119L ReferenceType UMLModelElementListModel2 ClassDeclaration Modifier static ActionAddOFSState FieldDeclaration Modifier private ReferenceType Object VariableDeclarator choiceClass MethodInvocation Model MethodInvocation getState getMetaTypes ConstructorDeclaration Modifier public /**
         * The constructor.
         */ ActionAddOFSState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal true setMultiSelect MethodDeclaration Modifier protected doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference t getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAClassifierInState getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference type MemberReference selected setInStates getActivityGraphsHelper IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference type isAClassifier getFacade BinaryOperation != MemberReference selected Literal null BinaryOperation > MethodInvocation selected size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation Model MethodInvocation MemberReference type MemberReference selected buildClassifierInState getActivityGraphsFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference t MemberReference cis setType getCoreHelper End End End MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation MemberReference t getType IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference classifier MemberReference choiceClass getAllModelElementsOfKindWithModel getModelManagementHelper addAll End StatementExpression MethodInvocation MemberReference ret removeTopStateFrom End ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-state"" localize MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference t getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAClassifierInState getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference type getInStates getFacade End End ReturnStatement ClassCreator ReferenceType ArrayList FieldDeclaration /**
         * The UID.
         */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 7266495601719117169L ReferenceType AbstractActionAddModelElement2 ClassDeclaration Modifier static ActionRemoveOFSState ConstructorDeclaration Modifier public /**
         * Constructor.
         */ ActionRemoveOFSState StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.remove"" localize MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getObjectToRemove IfStatement BinaryOperation != MemberReference state Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference t getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAClassifierInState getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator states ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference type getInStates getFacade StatementExpression MethodInvocation states MemberReference state remove StatementExpression MethodInvocation Model MethodInvocation MemberReference type MemberReference states setInStates getActivityGraphsHelper End End End FieldDeclaration /**
         * The UID.
         */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5113809512624883836L ReferenceType AbstractActionRemoveElement ClassDeclaration Modifier static /**
     * This is the model for the list of parameters for an ObjectFlowState.<p>
     *
     * @author Tom Morris
     * @since 6 May 2007
     */ UMLObjectFlowStateParameterListModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLObjectFlowStateParameterListModel.
         */ UMLObjectFlowStateParameterListModel StatementExpression SuperConstructorInvocation Literal ""parameter"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getParameters getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getParameters MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2 ClassDeclaration Modifier static ActionAddOFSParameter FieldDeclaration Modifier private ReferenceType Object VariableDeclarator choiceClass MethodInvocation Model MethodInvocation getParameter getMetaTypes ConstructorDeclaration Modifier public /**
         * The constructor.
         */ ActionAddOFSParameter StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal true setMultiSelect MethodDeclaration Modifier protected doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference t MemberReference selected setParameters getActivityGraphsHelper End MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation MemberReference t getType IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference classifier MemberReference choiceClass getAllModelElementsOfKindWithModel getModelManagementHelper addAll End End ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-state"" localize MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference t getParameters getFacade End ReturnStatement ClassCreator ReferenceType ArrayList ReferenceType AbstractActionAddModelElement2 ClassDeclaration Modifier static ActionNewOFSParameter ConstructorDeclaration ActionNewOFSParameter StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAObjectFlowState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation MemberReference target getType LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation createParameter getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MemberReference type setType getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference parameter addParameter getActivityGraphsHelper End ReferenceType AbstractActionNewModelElement ClassDeclaration Modifier static ActionRemoveOFSParameter ConstructorDeclaration Modifier public /**
         * Constructor.
         */ ActionRemoveOFSParameter StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.remove"" localize MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator param MethodInvocation getObjectToRemove IfStatement BinaryOperation != MemberReference param Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isAObjectFlowState getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference t MemberReference param removeParameter getActivityGraphsHelper End End ReferenceType AbstractActionRemoveElement ReferenceType AbstractPropPanelState ReferenceType PropertyChangeListener",0
1042,1042,,0
1550,1550,,1
93,93,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Dimension Import java.awt.Frame Import java.awt.Toolkit Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.WindowAdapter Import java.awt.event.WindowEvent Import java.io.PrintWriter Import java.io.StringWriter Import java.util.Date Import javax.swing.BorderFactory Import javax.swing.JButton Import javax.swing.JDialog Import javax.swing.JEditorPane Import javax.swing.JLabel Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.event.HyperlinkEvent Import javax.swing.event.HyperlinkListener Import org.argouml.i18n.Translator Import org.argouml.util.osdep.StartBrowser ClassDeclaration Modifier public /**
 * A window that displays an exception to the user if we can't handle it
 * in any other way.
 * 
 * TODO: This has been partly converted to be a generic error dialog 
 * rather than something specific to exceptions.  This should be renamed
 * when that process is complete.
 */ ExceptionDialog FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator closeButton FieldDeclaration Modifier private ReferenceType JButton VariableDeclarator copyButton FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator northLabel FieldDeclaration Modifier private ReferenceType JEditorPane VariableDeclarator textArea ConstructorDeclaration Modifier public /**
     * Construct an exception dialog for the given frame and throwable.
     *
     * @param f the <code>Frame</code> from which the dialog is displayed
     * @param e the exception
     */ ExceptionDialog FormalParameter ReferenceType Frame f FormalParameter ReferenceType Throwable e StatementExpression ExplicitConstructorInvocation MemberReference f MethodInvocation Translator Literal ""dialog.exception.unknown.error"" localize MemberReference e ConstructorDeclaration Modifier public /**
     * Construct an exception dialog with the given parameters.
     *
     * @param f the <code>Frame</code> from which the dialog is displayed
     * @param message the message
     * @param e the exception
     */ ExceptionDialog FormalParameter ReferenceType Frame f FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable e StatementExpression ExplicitConstructorInvocation MemberReference f MemberReference message MemberReference e Literal false ConstructorDeclaration Modifier public /**
     * Construct an exception dialog with the given parameters.
     *
     * @param f   the <code>Frame</code> from which the dialog is displayed
     * @param message
     *            the message
     * @param e   the exception
     * @param highlightCause
     *            give priority to Throwable.cause in display. Use this if the
     *            main exception is mostly boilerplate and the really useful
     *            information is in the enclosed cause.
     */ ExceptionDialog FormalParameter ReferenceType Frame f FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable e FormalParameter BasicType boolean highlightCause StatementExpression ExplicitConstructorInvocation MemberReference f MethodInvocation MemberReference message MemberReference e MemberReference highlightCause formatException MethodDeclaration Modifier public static ReferenceType String formatException FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable e FormalParameter BasicType boolean highlightCause LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference sw IfStatement BinaryOperation && MemberReference highlightCause BinaryOperation != MethodInvocation e getCause Literal null BlockStatement StatementExpression MethodInvocation pw MemberReference message print StatementExpression MethodInvocation pw BinaryOperation + Literal ""<hr>System Info:<p>"" MethodInvocation SystemInfoDialog getInfo print StatementExpression MethodInvocation pw BinaryOperation + Literal ""<p><hr>Error occurred at : "" ClassCreator ReferenceType Date print StatementExpression MethodInvocation pw Literal ""<p>  Cause : "" print StatementExpression MethodInvocation e MethodInvocation MemberReference pw printStackTrace getCause StatementExpression MethodInvocation pw Literal ""-------<p>Full exception : "" print End StatementExpression MethodInvocation e MemberReference pw printStackTrace ReturnStatement MethodInvocation sw toString ConstructorDeclaration Modifier public /**
     * Construct an exception dialog with a preformatted error string.
     *
     * @param f   the <code>Frame</code> from which the dialog is displayed
     * @param message
     *            the message
     * @deprecated by tfmorris for 0.24, use 
     * {@link #ExceptionDialog(Frame, String, String, String)}
     */ ExceptionDialog FormalParameter ReferenceType Frame f FormalParameter ReferenceType String message StatementExpression ExplicitConstructorInvocation MemberReference f MethodInvocation Translator Literal ""dialog.exception.title"" localize MethodInvocation Translator Literal ""dialog.exception.message"" localize MemberReference message ConstructorDeclaration Modifier public /**
     * Construct an exception dialog with given title, introduction, and detail
     * message.
     * 
     * @param f
     *            the <code>Frame</code> from which the dialog is displayed
     * @param title
     *            string to use as title of dialog box
     * @param intro
     *            introductory text (summary of error)
     * @param message
     *            the message
     */ ExceptionDialog FormalParameter ReferenceType Frame f FormalParameter ReferenceType String title FormalParameter ReferenceType String intro FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference f StatementExpression MethodInvocation Literal true setResizable StatementExpression MethodInvocation Literal false setModal StatementExpression MethodInvocation MemberReference title setTitle LocalVariableDeclaration ReferenceType Dimension VariableDeclarator scrSize MethodInvocation Toolkit MethodInvocation getScreenSize getDefaultToolkit StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType BorderLayout Literal 0 Literal 0 setLayout getContentPane StatementExpression Assignment MemberReference northLabel ClassCreator ReferenceType JLabel MemberReference intro = StatementExpression MethodInvocation northLabel MethodInvocation BorderFactory Literal 5 Literal 5 Literal 5 Literal 5 createEmptyBorder setBorder StatementExpression MethodInvocation MethodInvocation MemberReference northLabel MemberReference BorderLayout NORTH add getContentPane StatementExpression Assignment MemberReference textArea ClassCreator ReferenceType JEditorPane = StatementExpression MethodInvocation textArea Literal ""text/html"" setContentType StatementExpression MethodInvocation textArea Literal false setEditable StatementExpression MethodInvocation textArea ClassCreator ReferenceType HyperlinkListener MethodDeclaration Modifier public hyperlinkUpdate FormalParameter ReferenceType HyperlinkEvent hle StatementExpression MethodInvocation MemberReference hle linkEvent addHyperlinkListener StatementExpression MethodInvocation textArea MethodInvocation message Literal ""\n"" Literal ""<p>"" replaceAll setText StatementExpression MethodInvocation textArea Literal 0 setCaretPosition LocalVariableDeclaration ReferenceType JPanel VariableDeclarator centerPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout StatementExpression MethodInvocation centerPanel ClassCreator ReferenceType JScrollPane MemberReference textArea add StatementExpression MethodInvocation centerPanel ClassCreator ReferenceType Dimension Literal 500 Literal 200 setPreferredSize StatementExpression MethodInvocation MethodInvocation MemberReference centerPanel add getContentPane StatementExpression Assignment MemberReference copyButton ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""button.copy-to-clipboard"" localize = StatementExpression MethodInvocation copyButton ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent evt StatementExpression MethodInvocation MemberReference evt copyActionPerformed addActionListener StatementExpression Assignment MemberReference closeButton ClassCreator ReferenceType JButton MethodInvocation Translator Literal ""button.close"" localize = StatementExpression MethodInvocation closeButton This addActionListener LocalVariableDeclaration ReferenceType JPanel VariableDeclarator bottomPanel ClassCreator ReferenceType JPanel StatementExpression MethodInvocation bottomPanel MemberReference copyButton add StatementExpression MethodInvocation bottomPanel MemberReference closeButton add StatementExpression MethodInvocation MethodInvocation MemberReference bottomPanel MemberReference BorderLayout SOUTH add getContentPane StatementExpression MethodInvocation ClassCreator ReferenceType WindowAdapter MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent evt StatementExpression MethodInvocation disposeDialog addWindowListener StatementExpression MethodInvocation pack LocalVariableDeclaration ReferenceType Dimension VariableDeclarator contentPaneSize MethodInvocation MethodInvocation getSize getContentPane StatementExpression MethodInvocation BinaryOperation - BinaryOperation / MemberReference scrSize width Literal 2 BinaryOperation / MemberReference contentPaneSize width Literal 2 BinaryOperation - BinaryOperation / MemberReference scrSize height Literal 2 BinaryOperation / MemberReference contentPaneSize height Literal 2 setLocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation disposeDialog MethodDeclaration /**
     * Copy the textpane's contents to the clipboard.
     *
     * @param e the actionEvent
     */ Modifier private copyActionPerformed FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference copyButton StatementExpression MethodInvocation textArea Literal 0 setSelectionStart StatementExpression MethodInvocation textArea MethodInvocation textArea MethodInvocation length getText setSelectionEnd StatementExpression MethodInvocation textArea copy StatementExpression MethodInvocation textArea Literal 0 setSelectionEnd MethodDeclaration /**
     * Dispose this dialog.
     */ Modifier private disposeDialog StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation dispose MethodDeclaration /**
     * Handle link activation for our hyperlink.
     *
     * @param e the event
     */ Modifier private linkEvent FormalParameter ReferenceType HyperlinkEvent e IfStatement MethodInvocation e MethodInvocation MemberReference HyperlinkEvent.EventType ACTIVATED equals getEventType BlockStatement StatementExpression MethodInvocation StartBrowser MethodInvocation e getURL openUrl End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 2773182347529547418L ReferenceType JDialog ReferenceType ActionListener",0
134,134,"CompilationUnit PackageDeclaration org.argouml.model.euml Import java.util.Collection Import org.argouml.model.AbstractModelFactory Import org.argouml.model.ExtensionMechanismsFactory Import org.eclipse.uml2.uml.UMLFactory ClassDeclaration /**
 * The implementation of the ExtensionMechanismsFactory for EUML2.
 */ ExtensionMechanismsFactoryEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param implementation
     *            The ModelImplementation.
     */ ExtensionMechanismsFactoryEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Object buildStereotype FormalParameter ReferenceType Object theModelElementObject FormalParameter ReferenceType Object theName FormalParameter ReferenceType Object theNamespaceObject ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildStereotype FormalParameter ReferenceType Object theModelElementObject FormalParameter ReferenceType String theName FormalParameter ReferenceType Object model FormalParameter ReferenceType Collection models ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildStereotype FormalParameter ReferenceType String text FormalParameter ReferenceType Object ns ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildTagDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType Object stereotype FormalParameter ReferenceType Object ns ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildTagDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType Object stereotype FormalParameter ReferenceType Object namespace FormalParameter ReferenceType String tagType ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object buildTaggedValue FormalParameter ReferenceType String tag FormalParameter ReferenceType String value ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object copyStereotype FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object copyTagDefinition FormalParameter ReferenceType Object aTd FormalParameter ReferenceType Object aNs ReturnStatement Literal null MethodDeclaration Modifier public copyTaggedValues FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target MethodDeclaration Modifier public ReferenceType Object createStereotype ReturnStatement MethodInvocation UMLFactory.eINSTANCE createStereotype MethodDeclaration Modifier public ReferenceType Object createTagDefinition ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object createTaggedValue ReturnStatement Literal null ReferenceType ExtensionMechanismsFactory ReferenceType AbstractModelFactory",0
949,949,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 *
 */ UMLInstanceLinkEndListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLInstanceLinkEndListModel.
     */ UMLInstanceLinkEndListModel StatementExpression SuperConstructorInvocation Literal ""linkEnd"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getLinkEnds getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getLinkEnds MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",1
486,486,"CompilationUnit PackageDeclaration org.argouml.persistence Import java.io.Reader Import java.util.ArrayList Import java.util.List Import org.apache.log4j.Logger Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectSettings Import org.xml.sax.InputSource Import org.xml.sax.SAXException ClassDeclaration /**
 * Parser for ArgoUML project description file (.argo)
 */ ArgoParser FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ArgoParser getLogger FieldDeclaration Modifier private ReferenceType Project VariableDeclarator project FieldDeclaration Modifier private ReferenceType ProjectSettings VariableDeclarator ps FieldDeclaration Modifier private ReferenceType ArgoTokenTable VariableDeclarator tokens ClassCreator ReferenceType ArgoTokenTable FieldDeclaration Modifier private ReferenceType List VariableDeclarator memberList ClassCreator ReferenceType ArrayList ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ ArgoParser StatementExpression SuperConstructorInvocation MethodDeclaration /**
     * @param theProject the project to populate
     * @param source the input source
     * @throws SAXException on error when parsing xml
     */ Modifier public readProject FormalParameter ReferenceType Project theProject FormalParameter ReferenceType InputSource source SAXException IfStatement BinaryOperation == MemberReference source Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""An InputSource must be supplied"" End StatementExpression MethodInvocation MemberReference theProject preRead TryStatement StatementExpression MethodInvocation MemberReference source parse CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation MethodInvocation source toString MemberReference e logError ThrowStatement MemberReference e MethodDeclaration /**
     * @param theProject the project to populate
     * @param reader the reader
     * @throws SAXException on error when parsing xml
     */ Modifier public readProject FormalParameter ReferenceType Project theProject FormalParameter ReferenceType Reader reader SAXException IfStatement BinaryOperation == MemberReference reader Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A reader must be supplied"" End StatementExpression MethodInvocation MemberReference theProject preRead TryStatement StatementExpression MethodInvocation MemberReference reader parse CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation MethodInvocation reader toString MemberReference e logError ThrowStatement MemberReference e MethodDeclaration Modifier private preRead FormalParameter ReferenceType Project theProject StatementExpression MethodInvocation PersistenceManager MethodInvocation Literal ""OK"" setLastLoadMessage getInstance StatementExpression MethodInvocation PersistenceManager MethodInvocation Literal true setLastLoadStatus getInstance StatementExpression MethodInvocation LOG Literal ""======================================="" info StatementExpression MethodInvocation LOG BinaryOperation + Literal ""== READING PROJECT "" MemberReference theProject info StatementExpression Assignment MemberReference project MemberReference theProject = StatementExpression Assignment MemberReference ps MethodInvocation project getProjectSettings = MethodDeclaration Modifier private logError FormalParameter ReferenceType String projectName FormalParameter ReferenceType SAXException e StatementExpression MethodInvocation PersistenceManager MethodInvocation Literal false setLastLoadStatus getInstance StatementExpression MethodInvocation LOG Literal ""Exception reading project================"" error StatementExpression MethodInvocation LOG MemberReference projectName error StatementExpression MethodInvocation PersistenceManager MethodInvocation MethodInvocation e toString setLastLoadMessage getInstance MethodDeclaration /**
     * Get the project to which the URI is to be parsed.
     * @return the project
     */ Modifier public ReferenceType Project getProject ReturnStatement MemberReference project MethodDeclaration /**
     * Set the project to which the URI is to be parsed.
     * @param newProj the project
     */ Modifier public setProject FormalParameter ReferenceType Project newProj StatementExpression Assignment MemberReference project MemberReference newProj = StatementExpression Assignment MemberReference ps MethodInvocation project getProjectSettings = MethodDeclaration Modifier public handleStartElement FormalParameter ReferenceType XMLElement e SAXException IfStatement MemberReference DBG BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""NOTE: ArgoParser handleStartTag:"" MethodInvocation e getName debug End SwitchStatement MethodInvocation tokens MethodInvocation e getName Literal true toToken SwitchStatementCase MemberReference ArgoTokenTable TOKEN_ARGO StatementExpression MethodInvocation MemberReference e handleArgo BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_DOCUMENTATION StatementExpression MethodInvocation MemberReference e handleDocumentation BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SETTINGS StatementExpression MethodInvocation MemberReference e handleSettings BreakStatement SwitchStatementCase IfStatement MemberReference DBG BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""WARNING: unknown tag:"" MethodInvocation e getName warn End BreakStatement End MethodDeclaration Modifier public handleEndElement FormalParameter ReferenceType XMLElement e SAXException IfStatement MemberReference DBG BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""NOTE: ArgoParser handleEndTag:"" MethodInvocation e getName Literal ""."" debug End SwitchStatement MethodInvocation tokens MethodInvocation e getName Literal false toToken SwitchStatementCase MemberReference ArgoTokenTable TOKEN_MEMBER StatementExpression MethodInvocation MemberReference e handleMember BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_AUTHORNAME StatementExpression MethodInvocation MemberReference e handleAuthorName BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_AUTHOREMAIL StatementExpression MethodInvocation MemberReference e handleAuthorEmail BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_VERSION StatementExpression MethodInvocation MemberReference e handleVersion BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_DESCRIPTION StatementExpression MethodInvocation MemberReference e handleDescription BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SEARCHPATH StatementExpression MethodInvocation MemberReference e handleSearchpath BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_HISTORYFILE StatementExpression MethodInvocation MemberReference e handleHistoryfile BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_NOTATIONLANGUAGE StatementExpression MethodInvocation MemberReference e handleNotationLanguage BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWBOLDNAMES StatementExpression MethodInvocation MemberReference e handleShowBoldNames BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_USEGUILLEMOTS StatementExpression MethodInvocation MemberReference e handleUseGuillemots BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWVISIBILITY StatementExpression MethodInvocation MemberReference e handleShowVisibility BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWMULTIPLICITY StatementExpression MethodInvocation MemberReference e handleShowMultiplicity BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWINITIALVALUE StatementExpression MethodInvocation MemberReference e handleShowInitialValue BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWPROPERTIES StatementExpression MethodInvocation MemberReference e handleShowProperties BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWTYPES StatementExpression MethodInvocation MemberReference e handleShowTypes BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SHOWSTEREOTYPES StatementExpression MethodInvocation MemberReference e handleShowStereotypes BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_DEFAULTSHADOWWIDTH StatementExpression MethodInvocation MemberReference e handleDefaultShadowWidth BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_FONTNAME StatementExpression MethodInvocation MemberReference e handleFontName BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_FONTSIZE StatementExpression MethodInvocation MemberReference e handleFontSize BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_GENERATION_OUTPUT_DIR StatementExpression MethodInvocation MemberReference e handleGenerationOutputDir BreakStatement SwitchStatementCase IfStatement MemberReference DBG BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""WARNING: unknown end tag:"" MethodInvocation e getName warn End BreakStatement End MethodDeclaration Modifier protected BasicType boolean isElementOfInterest FormalParameter ReferenceType String name ReturnStatement MethodInvocation tokens MemberReference name contains MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleArgo FormalParameter ReferenceType XMLElement e MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleDocumentation FormalParameter ReferenceType XMLElement e MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleSettings FormalParameter ReferenceType XMLElement e MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleAuthorName FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator authorname MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference authorname setAuthorname MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleAuthorEmail FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator authoremail MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference authoremail setAuthoremail MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleVersion FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator version MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference version setVersion MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleDescription FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator description MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference description setDescription MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleSearchpath FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator searchpath MethodInvocation e MethodInvocation trim Literal ""href"" getAttribute StatementExpression MethodInvocation project MemberReference searchpath addSearchPath MethodDeclaration /**
     * @param e the element
     * @throws SAXException on any error parsing the member XML.
     */ Modifier protected handleMember FormalParameter ReferenceType XMLElement e SAXException IfStatement BinaryOperation == MemberReference e Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXException Literal ""XML element is null"" End LocalVariableDeclaration ReferenceType String VariableDeclarator type MethodInvocation e Literal ""type"" getAttribute IfStatement MethodInvocation type Literal ""xmi"" equals BlockStatement StatementExpression MethodInvocation memberList Literal 0 MemberReference type add BlockStatement StatementExpression MethodInvocation memberList MemberReference type add End MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleHistoryfile FormalParameter ReferenceType XMLElement e IfStatement BinaryOperation == MethodInvocation e Literal ""name"" getAttribute Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator historyfile MethodInvocation e MethodInvocation trim Literal ""name"" getAttribute StatementExpression MethodInvocation project MemberReference historyfile setHistoryFile MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleNotationLanguage FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator language MethodInvocation e MethodInvocation trim getText LocalVariableDeclaration BasicType boolean VariableDeclarator success MethodInvocation ps MemberReference language setNotationLanguage MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowBoldNames FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator ug MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference ug setShowBoldNames MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleUseGuillemots FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator ug MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference ug setUseGuillemots MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowVisibility FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showVisibility MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference showVisibility setShowVisibility MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowMultiplicity FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showMultiplicity MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference showMultiplicity setShowMultiplicity MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowInitialValue FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showInitialValue MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference showInitialValue setShowInitialValue MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowProperties FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showproperties MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference showproperties setShowProperties MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowTypes FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showTypes MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference showTypes setShowTypes MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleShowStereotypes FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showStereotypes MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference showStereotypes setShowStereotypes MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleDefaultShadowWidth FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator dsw MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference dsw setDefaultShadowWidth MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleFontName FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator dsw MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference dsw setFontName MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleFontSize FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator dsw MethodInvocation e MethodInvocation trim getText TryStatement StatementExpression MethodInvocation ps MethodInvocation Integer MemberReference dsw parseInt setFontSize CatchClause CatchClauseParameter NumberFormatException e1 StatementExpression MethodInvocation LOG Literal ""NumberFormatException while parsing Font Size"" MemberReference e1 error MethodDeclaration /**
     * @param e the element
     */ Modifier protected handleGenerationOutputDir FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator dsw MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation ps MemberReference dsw setGenerationOutputDir MethodDeclaration /**
     * Get the number of diagram members read.
     * @return the number of diagram members read.
     */ Modifier public ReferenceType List getMemberList ReturnStatement MemberReference memberList ReferenceType SAXParserBase",1
1528,1528,,0
1457,1457,,0
824,824,"CompilationUnit PackageDeclaration org.argouml.notation Import java.util.ArrayList Import java.util.Collections Import java.util.List Import java.util.ListIterator Import javax.swing.Icon Import org.apache.log4j.Logger Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoNotationEvent ClassDeclaration /**
 * This class provides definition and manipulation of notation names.
 * All notation names will be accessed using the
 * {@link NotationName} wrapper.
 *
 * Not mutable!
 *
 * @author Thierry Lach
 * @since 0.9.4
 */ NotationNameImpl FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType NotationNameImpl getLogger FieldDeclaration Modifier private ReferenceType String VariableDeclarator name FieldDeclaration Modifier private ReferenceType String VariableDeclarator version FieldDeclaration Modifier private ReferenceType Icon VariableDeclarator icon FieldDeclaration /** The one and only list of notations available 
     * in the running ArgoUML application. */ Modifier private static ReferenceType ArrayList TypeArgument ReferenceType NotationName VariableDeclarator notations ClassCreator ReferenceType ArrayList TypeArgument ReferenceType NotationName ConstructorDeclaration Modifier protected /**
     * A notation without a version or icon.
     *
     * @param theName the name of the notation
     */ NotationNameImpl FormalParameter ReferenceType String theName StatementExpression ExplicitConstructorInvocation MemberReference theName Literal null Literal null ConstructorDeclaration Modifier protected /**
     * A notation without a version and with an icon.
     *
     * @param theName the name of the notation
     * @param theIcon the icon for of the notation
     */ NotationNameImpl FormalParameter ReferenceType String theName FormalParameter ReferenceType Icon theIcon StatementExpression ExplicitConstructorInvocation MemberReference theName Literal null MemberReference theIcon ConstructorDeclaration Modifier protected /**
     * A notation with a version and no icon.
     *
     * @param theName the name of the notation
     * @param theVersion the version of the notation
     */ NotationNameImpl FormalParameter ReferenceType String theName FormalParameter ReferenceType String theVersion StatementExpression ExplicitConstructorInvocation MemberReference theName MemberReference theVersion Literal null ConstructorDeclaration Modifier protected /**
     * A notation with a version and an icon.
     *
     * @param myName    the name of the notation
     * @param myVersion the version of the notation
     * @param myIcon    the icon of the notation
     */ NotationNameImpl FormalParameter ReferenceType String myName FormalParameter ReferenceType String myVersion FormalParameter ReferenceType Icon myIcon StatementExpression Assignment MemberReference name MemberReference myName = StatementExpression Assignment MemberReference version MemberReference myVersion = StatementExpression Assignment MemberReference icon MemberReference myIcon = MethodDeclaration /**
     * Accessor for the language name.
     *
     * @see org.argouml.notation.NotationName#getName()
     */ Modifier public ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration /**
     * Accessor for the language version.
     *
     * @see org.argouml.notation.NotationName#getVersion()
     */ Modifier public ReferenceType String getVersion ReturnStatement MemberReference version MethodDeclaration /**
     * Gets a textual title for the notation suitable for use
     * in a combo box or other such visual location.
     *
     * @see org.argouml.notation.NotationName#getTitle()
     */ Modifier public ReferenceType String getTitle LocalVariableDeclaration ReferenceType String VariableDeclarator myName MemberReference name IfStatement MethodInvocation myName Literal ""uml"" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference myName MethodInvocation myName toUpperCase = End IfStatement BinaryOperation || BinaryOperation == MemberReference version Literal null MethodInvocation version Literal """" equals BlockStatement ReturnStatement MemberReference myName End ReturnStatement BinaryOperation + BinaryOperation + MemberReference myName Literal "" "" MemberReference version MethodDeclaration /**
     * Returns an icon for the notation, or null if no icon is available.
     *
     * @see org.argouml.notation.NotationName#getIcon()
     */ Modifier public ReferenceType Icon getIcon ReturnStatement MemberReference icon MethodDeclaration Modifier public ReferenceType String getConfigurationValue ReturnStatement MethodInvocation MemberReference name MemberReference version getNotationNameString MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getTitle MethodDeclaration /**
     * @param k1 first part of the given name
     * @param k2 2nd part of the given name
     * @return the notation name string
     */ Modifier static ReferenceType String getNotationNameString FormalParameter ReferenceType String k1 FormalParameter ReferenceType String k2 IfStatement BinaryOperation == MemberReference k2 Literal null BlockStatement ReturnStatement MemberReference k1 End IfStatement MethodInvocation k2 Literal """" equals BlockStatement ReturnStatement MemberReference k1 End ReturnStatement BinaryOperation + BinaryOperation + MemberReference k1 Literal "" "" MemberReference k2 MethodDeclaration Modifier private static fireEvent FormalParameter BasicType int eventType FormalParameter ReferenceType NotationName nn StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoNotationEvent MemberReference eventType MemberReference nn fireEvent MethodDeclaration /**
     * Create a NotationName with or without a version.
     * The NotationName is only created if there is no such notation before.
     *
     * @param k1 the 1st part of the notation name
     * @param k2 the 2nd part of the notation name
     * @param icon the icon for the notation
     * @return the newly created or the old NotationName
     */ Modifier static ReferenceType NotationName makeNotation FormalParameter ReferenceType String k1 FormalParameter ReferenceType String k2 FormalParameter ReferenceType Icon icon LocalVariableDeclaration ReferenceType NotationName VariableDeclarator nn Literal null StatementExpression Assignment MemberReference nn MethodInvocation MethodInvocation MemberReference k1 MemberReference k2 getNotationNameString findNotation = IfStatement BinaryOperation == MemberReference nn Literal null BlockStatement StatementExpression Assignment MemberReference nn ClassCreator ReferenceType NotationNameImpl MemberReference k1 MemberReference k2 MemberReference icon = StatementExpression MethodInvocation notations MemberReference nn add StatementExpression MethodInvocation MemberReference ArgoEventTypes NOTATION_ADDED MemberReference nn fireEvent End ReturnStatement MemberReference nn MethodDeclaration Modifier static BasicType boolean removeNotation FormalParameter ReferenceType NotationName theNotation ReturnStatement MethodInvocation notations MemberReference theNotation remove MethodDeclaration /**
     * Get all of the registered notations.
     *
     * @return a List with all notations
     */ Modifier static ReferenceType List TypeArgument ReferenceType NotationName getAvailableNotations ReturnStatement MethodInvocation Collections MemberReference notations unmodifiableList MethodDeclaration /**
     * Finds a NotationName matching the string matching
     * the name of the notation. Returns null if no match.
     *
     * @param s the name string
     * @return the notationName or null
     */ Modifier static ReferenceType NotationName findNotation FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator iterator MethodInvocation notations listIterator WhileStatement MethodInvocation iterator hasNext BlockStatement TryStatement LocalVariableDeclaration ReferenceType NotationName VariableDeclarator nn Cast ReferenceType NotationName MethodInvocation iterator next IfStatement MethodInvocation s MethodInvocation nn getConfigurationValue equals BlockStatement ReturnStatement MemberReference nn End CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal ""Unexpected exception"" MemberReference e error End ReturnStatement Literal null MethodDeclaration Modifier public BasicType boolean sameNotationAs FormalParameter ReferenceType NotationName nn ReturnStatement This MethodInvocation getConfigurationValue MethodInvocation MethodInvocation nn getConfigurationValue equals MethodDeclaration /**
     * Finds a NotationName matching the language with no version.
     * Returns null if no match.
     *
     * @param k1 the notation name string
     * @return the notation name
     */ Modifier static ReferenceType NotationName getNotation FormalParameter ReferenceType String k1 ReturnStatement MethodInvocation MethodInvocation MemberReference k1 Literal null getNotationNameString findNotation MethodDeclaration /**
     * Finds a NotationName matching the language and version.
     * Returns null if no match.
     *
     * @param k1 the 1st part of the notation name
     * @param k2 the 2nd part of the notation name
     * @return the notation name
     */ Modifier static ReferenceType NotationName getNotation FormalParameter ReferenceType String k1 FormalParameter ReferenceType String k2 ReturnStatement MethodInvocation MethodInvocation MemberReference k1 MemberReference k2 getNotationNameString findNotation ReferenceType NotationName",1
1335,1335,,0
1360,1360,,0
1481,1481,,0
1208,1208,,0
663,663,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.event.ActionEvent Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.tigris.gef.undo.UndoableAction Import org.tigris.toolbar.toolbutton.ModalAction ClassDeclaration Modifier abstract /**
 *
 * @author Michiel
 */ ButtonActionNewEffect ConstructorDeclaration Modifier public ButtonActionNewEffect StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference NAME MethodInvocation getKeyName putValue StatementExpression MethodInvocation MemberReference SHORT_DESCRIPTION MethodInvocation Translator MethodInvocation getKeyName localize putValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation ResourceLoaderWrapper MethodInvocation getIconName lookupIconResource StatementExpression MethodInvocation MemberReference SMALL_ICON MemberReference icon putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation ! isEnabled BlockStatement ReturnStatement End StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation Model MethodInvocation MemberReference target getModel getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target MemberReference model findNamespaceForEvent getStateMachinesHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation MemberReference ns createEvent StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference event setEventAsTrigger getStateMachinesHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference event setTarget getInstance MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isATransition getFacade MethodDeclaration Modifier protected abstract ReferenceType Object createEvent FormalParameter ReferenceType Object ns MethodDeclaration Modifier protected abstract ReferenceType String getKeyName MethodDeclaration Modifier protected abstract ReferenceType String getIconName ReferenceType UndoableAction ReferenceType ModalAction",0
1151,1151,,0
703,703,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Component Import java.awt.Dimension Import java.awt.Font Import java.awt.KeyboardFocusManager Import java.awt.Window Import java.awt.event.ComponentAdapter Import java.awt.event.ComponentEvent Import java.awt.event.WindowAdapter Import java.awt.event.WindowEvent Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.io.File Import java.io.IOException Import java.io.PrintWriter Import java.io.StringWriter Import java.net.URI Import java.text.MessageFormat Import java.util.ArrayList Import java.util.Collection Import java.util.HashMap Import java.util.Iterator Import java.util.List Import java.util.Locale Import java.util.Map Import javax.swing.AbstractAction Import javax.swing.ImageIcon Import javax.swing.JDialog Import javax.swing.JFileChooser Import javax.swing.JFrame Import javax.swing.JMenuBar Import javax.swing.JOptionPane Import javax.swing.JPanel Import javax.swing.JToolBar Import javax.swing.SwingUtilities Import org.apache.log4j.Logger Import org.argouml.application.api.Argo Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.cognitive.Designer Import org.argouml.configuration.Configuration Import org.argouml.configuration.ConfigurationKey Import org.argouml.i18n.Translator Import org.argouml.kernel.Command Import org.argouml.kernel.NonUndoableCommand Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.persistence.AbstractFilePersister Import org.argouml.persistence.OpenException Import org.argouml.persistence.PersistenceManager Import org.argouml.persistence.ProjectFilePersister Import org.argouml.persistence.ProjectFileView Import org.argouml.persistence.UmlVersionException Import org.argouml.persistence.VersionException Import org.argouml.persistence.XmiFormatException Import org.argouml.taskmgmt.ProgressMonitor Import org.argouml.ui.cmd.GenericArgoMenuBar Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.DiagramFactory Import org.argouml.uml.diagram.UMLMutableGraphSupport Import org.argouml.uml.diagram.ui.ActionRemoveFromDiagram Import org.argouml.uml.ui.ActionSaveProject Import org.argouml.uml.ui.TabProps Import org.argouml.util.ArgoFrame Import org.argouml.util.ThreadUtils Import org.tigris.gef.base.Diagram Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Layer Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.ui.IStatusBar Import org.tigris.gef.util.Util Import org.tigris.swidgets.BorderSplitPane Import org.tigris.swidgets.Horizontal Import org.tigris.swidgets.Orientation Import org.tigris.swidgets.Vertical Import org.tigris.toolbar.layouts.DockBorderLayout ClassDeclaration Modifier public final /**
 * The main window of the ArgoUML application.
 *
 * @stereotype singleton
 */ ProjectBrowser FieldDeclaration /**
     * Default width.
     */ Modifier public final static BasicType int VariableDeclarator DEFAULT_COMPONENTWIDTH Literal 400 FieldDeclaration /**
     * Default height.
     */ Modifier public final static BasicType int VariableDeclarator DEFAULT_COMPONENTHEIGHT Literal 350 FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ProjectBrowser getLogger EnumDeclaration Modifier public /**
     * Position of pane in overall browser window.
     */ Position EnumBody EnumConstantDeclaration Center EnumConstantDeclaration North EnumConstantDeclaration South EnumConstantDeclaration East EnumConstantDeclaration West EnumConstantDeclaration NorthEast EnumConstantDeclaration SouthEast EnumConstantDeclaration SouthWest EnumConstantDeclaration NorthWest AssertStatement MethodInvocation Position.Center MethodInvocation MemberReference BorderSplitPane CENTER equals toString AssertStatement MethodInvocation Position.North MethodInvocation MemberReference BorderSplitPane NORTH equals toString AssertStatement MethodInvocation Position.NorthEast MethodInvocation MemberReference BorderSplitPane NORTHEAST equals toString AssertStatement MethodInvocation Position.South MethodInvocation MemberReference BorderSplitPane SOUTH equals toString FieldDeclaration /**
     * Flag to indicate if we are the main application
     * or being integrated in another top level application such
     * as Eclipse (via the ArgoEclipse plugin).
     * TODO: This is a temporary measure until ProjectBrowser
     * can be refactored more appropriately. - tfm
     */ Modifier private static BasicType boolean VariableDeclarator isMainApplication FieldDeclaration /**
     * Member attribute to contain the singleton.
     */ Modifier private static ReferenceType ProjectBrowser VariableDeclarator theInstance FieldDeclaration Modifier private ReferenceType String VariableDeclarator appName Literal ""ProjectBrowser"" FieldDeclaration Modifier private ReferenceType MultiEditorPane VariableDeclarator editorPane FieldDeclaration Modifier private ReferenceType DetailsPane VariableDeclarator northEastPane FieldDeclaration Modifier private ReferenceType DetailsPane VariableDeclarator northPane FieldDeclaration Modifier private ReferenceType DetailsPane VariableDeclarator northWestPane FieldDeclaration Modifier private ReferenceType DetailsPane VariableDeclarator eastPane FieldDeclaration Modifier private ReferenceType DetailsPane VariableDeclarator southEastPane FieldDeclaration Modifier private ReferenceType DetailsPane VariableDeclarator southPane FieldDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType Position TypeArgument ReferenceType DetailsPane VariableDeclarator detailsPanesByCompassPoint ClassCreator ReferenceType HashMap TypeArgument ReferenceType Position TypeArgument ReferenceType DetailsPane FieldDeclaration Modifier private ReferenceType GenericArgoMenuBar VariableDeclarator menuBar FieldDeclaration /**
     * Partially implemented. Needs work to display
     * import of source and saving of zargo.
     */ Modifier private ReferenceType StatusBar VariableDeclarator statusBar ClassCreator ReferenceType StatusBar FieldDeclaration /**
     * TODO: this needs work so that users can set the font
     * size through a gui preference window.
     */ Modifier private ReferenceType Font VariableDeclarator defaultFont ClassCreator ReferenceType Font Literal ""Dialog"" MemberReference Font PLAIN Literal 10 FieldDeclaration Modifier private ReferenceType BorderSplitPane VariableDeclarator workAreaPane FieldDeclaration /**
     * The explorer (formerly called navigator) pane
     * containing the modelstructure.
     */ Modifier private ReferenceType NavigatorPane VariableDeclarator explorerPane FieldDeclaration /**
     * The todopane (lower left corner of screen).
     */ Modifier private ReferenceType JPanel VariableDeclarator todoPane FieldDeclaration /**
     * A class that handles the title of this frame, 
     * e.g. to indicate save status.
     */ Modifier private ReferenceType TitleHandler VariableDeclarator titleHandler ClassCreator ReferenceType TitleHandler FieldDeclaration /**
     * The action to save the current project.
     */ Modifier private ReferenceType AbstractAction VariableDeclarator saveAction FieldDeclaration /**
     * The action to remove the current selected Figs from the diagram.
     */ Modifier private final ReferenceType ActionRemoveFromDiagram VariableDeclarator removeFromDiagram ClassCreator ReferenceType ActionRemoveFromDiagram MethodInvocation Translator Literal ""action.remove-from-diagram"" localize ConstructorDeclaration Modifier private /**
     * For testing purposes. In tests this constructor can be called so
     * TheInstance is filled.
     */ ProjectBrowser StatementExpression ExplicitConstructorInvocation Literal ""ArgoUML"" Literal null Literal true Literal null ConstructorDeclaration Modifier private /**
     * The constructor.
     * 
     * @param applicationName
     *            the title of the frame
     * @param splash
     *            the splash screen to show at startup
     * @param mainApplication
     *            flag indicating whether we are the top level application.
     *            False if we are providing components to another top level app.
     */ ProjectBrowser FormalParameter ReferenceType String applicationName FormalParameter ReferenceType SplashScreen splash FormalParameter BasicType boolean mainApplication FormalParameter ReferenceType JPanel leftBottomPane StatementExpression SuperConstructorInvocation MemberReference applicationName StatementExpression Assignment MemberReference theInstance This = StatementExpression Assignment MemberReference isMainApplication MemberReference mainApplication = StatementExpression MethodInvocation MethodInvocation MemberReference defaultFont setFont getContentPane StatementExpression Assignment MemberReference saveAction ClassCreator ReferenceType ActionSaveProject = StatementExpression MethodInvocation ProjectManager MethodInvocation MemberReference saveAction setSaveAction getManager StatementExpression MethodInvocation MemberReference splash MemberReference leftBottomPane createPanels IfStatement MemberReference isMainApplication BlockStatement StatementExpression Assignment MemberReference menuBar ClassCreator ReferenceType GenericArgoMenuBar = StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType BorderLayout setLayout getContentPane StatementExpression This MethodInvocation MemberReference menuBar setJMenuBar StatementExpression MethodInvocation MethodInvocation MethodInvocation assemblePanels MemberReference BorderLayout CENTER add getContentPane LocalVariableDeclaration ReferenceType JPanel VariableDeclarator bottom ClassCreator ReferenceType JPanel StatementExpression MethodInvocation bottom ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation bottom MemberReference statusBar MemberReference BorderLayout CENTER add StatementExpression MethodInvocation bottom ClassCreator ReferenceType HeapMonitor MemberReference BorderLayout EAST add StatementExpression MethodInvocation MethodInvocation MemberReference bottom MemberReference BorderLayout SOUTH add getContentPane StatementExpression MethodInvocation MemberReference applicationName setAppName StatementExpression MethodInvocation MemberReference ProjectBrowser DO_NOTHING_ON_CLOSE setDefaultCloseOperation StatementExpression MethodInvocation ClassCreator ReferenceType WindowCloser addWindowListener LocalVariableDeclaration ReferenceType ImageIcon VariableDeclarator argoImage MethodInvocation ResourceLoaderWrapper Literal ""ArgoIcon"" lookupIconResource StatementExpression This MethodInvocation MethodInvocation argoImage getImage setIconImage StatementExpression MethodInvocation ProjectManager MethodInvocation This addPropertyChangeListener getManager StatementExpression MethodInvocation TargetManager MethodInvocation This addTargetListener getInstance LocalVariableDeclaration ReferenceType KeyboardFocusManager VariableDeclarator kfm MethodInvocation KeyboardFocusManager getCurrentKeyboardFocusManager StatementExpression MethodInvocation kfm ClassCreator ReferenceType PropertyChangeListener FieldDeclaration Modifier private ReferenceType Object VariableDeclarator obj MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && BinaryOperation && Literal MethodInvocation MethodInvocation evt getPropertyName equals ""focusOwner"" BinaryOperation != MethodInvocation evt getNewValue Literal null BinaryOperation != MemberReference obj MethodInvocation evt getNewValue BlockStatement StatementExpression Assignment MemberReference obj MethodInvocation evt getNewValue = LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation p MethodInvocation Literal ""Focus"" startInteraction getUndoManager End addPropertyChangeListener End StatementExpression MethodInvocation ArgoEventPump MemberReference ArgoEventTypes ANY_HELP_EVENT ClassCreator ReferenceType HelpListener MethodInvocation getStatusBar addListener MethodDeclaration /**
     * Singleton retrieval method for the projectbrowser. Lazely instantiates
     * the projectbrowser.
     * @return the singleton instance of the projectbrowser
     */ Modifier public static synchronized ReferenceType ProjectBrowser getInstance IfStatement BinaryOperation == MemberReference theInstance Literal null BlockStatement StatementExpression Assignment MemberReference theInstance ClassCreator ReferenceType ProjectBrowser = End ReturnStatement MemberReference theInstance MethodDeclaration /**
     * Creator method for the ProjectBrowser which optionally allows all
     * components to be created without making a top level application window
     * visible.
     * 
     * @param splash
     *            true if we are allowed to show a splash screen
     * @param mainApplication
     *            true to create a top level application, false if integrated
     *            with something else.
     * 
     * @return the singleton instance of the projectbrowser
     */ Modifier public static ReferenceType ProjectBrowser makeInstance FormalParameter ReferenceType SplashScreen splash FormalParameter BasicType boolean mainApplication FormalParameter ReferenceType JPanel leftBottomPane ReturnStatement ClassCreator ReferenceType ProjectBrowser Literal ""ArgoUML"" MemberReference splash MemberReference mainApplication MemberReference leftBottomPane MethodDeclaration Modifier public Annotation Override ReferenceType Locale getLocale ReturnStatement MethodInvocation Locale getDefault MethodDeclaration /**
     * Creates the panels in the working area.
     *
     * @param splash true if we show  the splashscreen during startup
     */ Modifier protected createPanels FormalParameter ReferenceType SplashScreen splash FormalParameter ReferenceType JPanel leftBottomPane IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal ""statusmsg.bar.making-project-browser"" localize showStatus getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 10 showProgress getStatusBar StatementExpression MethodInvocation splash Literal true setVisible End StatementExpression Assignment MemberReference editorPane ClassCreator ReferenceType MultiEditorPane = IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal ""statusmsg.bar.making-project-browser-explorer"" localize showStatus getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 5 incProgress getStatusBar End StatementExpression Assignment MemberReference explorerPane ClassCreator ReferenceType NavigatorPane MemberReference splash = StatementExpression Assignment MemberReference workAreaPane ClassCreator ReferenceType BorderSplitPane = IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal ""statusmsg.bar.making-project-browser-to-do-pane"" localize showStatus getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 5 incProgress getStatusBar End StatementExpression Assignment MemberReference todoPane MemberReference leftBottomPane = StatementExpression MethodInvocation createDetailsPanes StatementExpression MethodInvocation restorePanelSizes MethodDeclaration Modifier private ReferenceType Component assemblePanels StatementExpression MethodInvocation MemberReference editorPane MemberReference Position Center addPanel StatementExpression MethodInvocation MemberReference explorerPane MemberReference Position West addPanel StatementExpression MethodInvocation MemberReference todoPane MemberReference Position SouthWest addPanel ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Position TypeArgument ReferenceType DetailsPane VariableDeclarator entry MethodInvocation detailsPanesByCompassPoint entrySet BlockStatement LocalVariableDeclaration ReferenceType Position VariableDeclarator position MethodInvocation entry getKey StatementExpression MethodInvocation MethodInvocation entry getValue MemberReference position addPanel End LocalVariableDeclaration Modifier final ReferenceType JPanel VariableDeclarator toolbarBoundary ClassCreator ReferenceType JPanel StatementExpression MethodInvocation toolbarBoundary ClassCreator ReferenceType DockBorderLayout setLayout LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator toolbarPosition MemberReference BorderLayout NORTH StatementExpression MethodInvocation toolbarBoundary MethodInvocation menuBar getFileToolbar MemberReference toolbarPosition add StatementExpression MethodInvocation toolbarBoundary MethodInvocation menuBar getEditToolbar MemberReference toolbarPosition add StatementExpression MethodInvocation toolbarBoundary MethodInvocation menuBar getViewToolbar MemberReference toolbarPosition add StatementExpression MethodInvocation toolbarBoundary MethodInvocation menuBar getCreateDiagramToolbar MemberReference toolbarPosition add StatementExpression MethodInvocation toolbarBoundary MemberReference workAreaPane MemberReference BorderLayout CENTER add StatementExpression MethodInvocation ArgoToolbarManager MethodInvocation MethodInvocation menuBar getFileToolbar MethodInvocation menuBar getFileToolbar Literal 0 registerToolbar getInstance StatementExpression MethodInvocation ArgoToolbarManager MethodInvocation MethodInvocation menuBar getEditToolbar MethodInvocation menuBar getEditToolbar Literal 1 registerToolbar getInstance StatementExpression MethodInvocation ArgoToolbarManager MethodInvocation MethodInvocation menuBar getViewToolbar MethodInvocation menuBar getViewToolbar Literal 2 registerToolbar getInstance StatementExpression MethodInvocation ArgoToolbarManager MethodInvocation MethodInvocation menuBar getCreateDiagramToolbar MethodInvocation menuBar getCreateDiagramToolbar Literal 3 registerToolbar getInstance LocalVariableDeclaration Modifier final ReferenceType JToolBar VariableDeclarator toolbars ArrayCreator ReferenceType JToolBar ArrayInitializer MethodInvocation menuBar getFileToolbar MethodInvocation menuBar getEditToolbar MethodInvocation menuBar getViewToolbar MethodInvocation menuBar getCreateDiagramToolbar ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator toolbar MemberReference toolbars BlockStatement StatementExpression MethodInvocation toolbar ClassCreator ReferenceType ComponentAdapter MethodDeclaration Modifier public componentHidden FormalParameter ReferenceType ComponentEvent e LocalVariableDeclaration BasicType boolean VariableDeclarator allHidden Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator bar MemberReference toolbars BlockStatement IfStatement MethodInvocation bar isVisible BlockStatement StatementExpression Assignment MemberReference allHidden Literal false = BreakStatement End End IfStatement MemberReference allHidden BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator bar MemberReference toolbars BlockStatement StatementExpression MethodInvocation toolbarBoundary MethodInvocation MemberReference bar removeLayoutComponent getLayout End StatementExpression MethodInvocation toolbarBoundary MethodInvocation MemberReference toolbarBoundary layoutContainer getLayout End MethodDeclaration Modifier public componentShown FormalParameter ReferenceType ComponentEvent e LocalVariableDeclaration ReferenceType JToolBar VariableDeclarator oneVisible Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator bar MemberReference toolbars BlockStatement IfStatement MethodInvocation bar isVisible BlockStatement StatementExpression Assignment MemberReference oneVisible MemberReference bar = BreakStatement End End IfStatement BinaryOperation != MemberReference oneVisible Literal null BlockStatement StatementExpression MethodInvocation toolbarBoundary MemberReference oneVisible MemberReference toolbarPosition add StatementExpression MethodInvocation toolbarBoundary MethodInvocation MemberReference toolbarBoundary layoutContainer getLayout End addComponentListener End ReturnStatement MemberReference toolbarBoundary MethodDeclaration Modifier private createDetailsPanes StatementExpression Assignment MemberReference eastPane MethodInvocation MemberReference BorderSplitPane EAST MethodInvocation Vertical getInstance makeDetailsPane = StatementExpression Assignment MemberReference southPane MethodInvocation MemberReference BorderSplitPane SOUTH MethodInvocation Horizontal getInstance makeDetailsPane = StatementExpression Assignment MemberReference southEastPane MethodInvocation MemberReference BorderSplitPane SOUTHEAST MethodInvocation Horizontal getInstance makeDetailsPane = StatementExpression Assignment MemberReference northWestPane MethodInvocation MemberReference BorderSplitPane NORTHWEST MethodInvocation Horizontal getInstance makeDetailsPane = StatementExpression Assignment MemberReference northPane MethodInvocation MemberReference BorderSplitPane NORTH MethodInvocation Horizontal getInstance makeDetailsPane = StatementExpression Assignment MemberReference northEastPane MethodInvocation MemberReference BorderSplitPane NORTHEAST MethodInvocation Horizontal getInstance makeDetailsPane = IfStatement BinaryOperation != MemberReference southPane Literal null BlockStatement StatementExpression MethodInvocation detailsPanesByCompassPoint MemberReference Position South MemberReference southPane put End IfStatement BinaryOperation != MemberReference southEastPane Literal null BlockStatement StatementExpression MethodInvocation detailsPanesByCompassPoint MemberReference Position SouthEast MemberReference southEastPane put End IfStatement BinaryOperation != MemberReference eastPane Literal null BlockStatement StatementExpression MethodInvocation detailsPanesByCompassPoint MemberReference Position East MemberReference eastPane put End IfStatement BinaryOperation != MemberReference northWestPane Literal null BlockStatement StatementExpression MethodInvocation detailsPanesByCompassPoint MemberReference Position NorthWest MemberReference northWestPane put End IfStatement BinaryOperation != MemberReference northPane Literal null BlockStatement StatementExpression MethodInvocation detailsPanesByCompassPoint MemberReference Position North MemberReference northPane put End IfStatement BinaryOperation != MemberReference northEastPane Literal null BlockStatement StatementExpression MethodInvocation detailsPanesByCompassPoint MemberReference Position NorthEast MemberReference northEastPane put End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation detailsPanesByCompassPoint MethodInvocation iterator entrySet WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation Cast ReferenceType DetailsPane Cast ReferenceType Map ReferenceType Entry MethodInvocation it next addTargetListener getInstance End MethodDeclaration /**
     * Add a panel to a split pane area.
     *
     * @param comp the panel to add
     * @param position the position where the panel should be added
     */ Modifier public addPanel FormalParameter ReferenceType Component comp FormalParameter ReferenceType Position position StatementExpression MethodInvocation workAreaPane MemberReference comp MethodInvocation position toString add MethodDeclaration /**
     * Remove a panel from a split pane area.
     *
     * @param comp the panel to remove
     */ Modifier public removePanel FormalParameter ReferenceType Component comp StatementExpression MethodInvocation workAreaPane MemberReference comp remove StatementExpression MethodInvocation workAreaPane validate StatementExpression MethodInvocation workAreaPane repaint MethodDeclaration /**
     * Set the size of each panel to that last saved in the configuration file.
     */ Modifier private restorePanelSizes IfStatement BinaryOperation != MemberReference northPane Literal null BlockStatement StatementExpression MethodInvocation northPane ClassCreator ReferenceType Dimension Literal 0 MethodInvocation MemberReference Argo KEY_SCREEN_NORTH_HEIGHT getSavedHeight setPreferredSize End IfStatement BinaryOperation != MemberReference southPane Literal null BlockStatement StatementExpression MethodInvocation southPane ClassCreator ReferenceType Dimension Literal 0 MethodInvocation MemberReference Argo KEY_SCREEN_SOUTH_HEIGHT getSavedHeight setPreferredSize End IfStatement BinaryOperation != MemberReference eastPane Literal null BlockStatement StatementExpression MethodInvocation eastPane ClassCreator ReferenceType Dimension MethodInvocation MemberReference Argo KEY_SCREEN_EAST_WIDTH getSavedWidth Literal 0 setPreferredSize End IfStatement BinaryOperation != MemberReference explorerPane Literal null BlockStatement StatementExpression MethodInvocation explorerPane ClassCreator ReferenceType Dimension MethodInvocation MemberReference Argo KEY_SCREEN_WEST_WIDTH getSavedWidth Literal 0 setPreferredSize End IfStatement BinaryOperation != MemberReference northWestPane Literal null BlockStatement StatementExpression MethodInvocation northWestPane MethodInvocation MemberReference Argo KEY_SCREEN_NORTHWEST_WIDTH MemberReference Argo KEY_SCREEN_NORTH_HEIGHT getSavedDimensions setPreferredSize End IfStatement BinaryOperation != MemberReference todoPane Literal null BlockStatement StatementExpression MethodInvocation todoPane MethodInvocation MemberReference Argo KEY_SCREEN_SOUTHWEST_WIDTH MemberReference Argo KEY_SCREEN_SOUTH_HEIGHT getSavedDimensions setPreferredSize End IfStatement BinaryOperation != MemberReference northEastPane Literal null BlockStatement StatementExpression MethodInvocation northEastPane MethodInvocation MemberReference Argo KEY_SCREEN_NORTHEAST_WIDTH MemberReference Argo KEY_SCREEN_NORTH_HEIGHT getSavedDimensions setPreferredSize End IfStatement BinaryOperation != MemberReference southEastPane Literal null BlockStatement StatementExpression MethodInvocation southEastPane MethodInvocation MemberReference Argo KEY_SCREEN_SOUTHEAST_WIDTH MemberReference Argo KEY_SCREEN_SOUTH_HEIGHT getSavedDimensions setPreferredSize End MethodDeclaration Modifier private ReferenceType Dimension getSavedDimensions FormalParameter ReferenceType ConfigurationKey width FormalParameter ReferenceType ConfigurationKey height ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation MemberReference width getSavedWidth MethodInvocation MemberReference height getSavedHeight MethodDeclaration Modifier private BasicType int getSavedWidth FormalParameter ReferenceType ConfigurationKey width ReturnStatement MethodInvocation Configuration MemberReference width MemberReference DEFAULT_COMPONENTWIDTH getInteger MethodDeclaration Modifier private BasicType int getSavedHeight FormalParameter ReferenceType ConfigurationKey height ReturnStatement MethodInvocation Configuration MemberReference height MemberReference DEFAULT_COMPONENTHEIGHT getInteger ClassDeclaration Modifier private /**
     * Handle the title-bar of the window.
     * 
     * @author michiel
     */ TitleHandler FieldDeclaration Modifier private ReferenceType ArgoDiagram VariableDeclarator monitoredDiagram Literal null MethodDeclaration /**
         * Create a title for the main window's title.
         *
         * @param projectFileName the project-file name
         * @param activeDiagram the (new) current diagram
         */ Modifier protected buildTitle FormalParameter ReferenceType String projectFileName FormalParameter ReferenceType ArgoDiagram activeDiagram IfStatement BinaryOperation || BinaryOperation == MemberReference projectFileName Literal null Literal MethodInvocation MemberReference projectFileName equals """" BlockStatement IfStatement BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager Literal null BlockStatement StatementExpression Assignment MemberReference projectFileName MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getName getManager = End End IfStatement BinaryOperation == MemberReference activeDiagram Literal null BlockStatement StatementExpression Assignment MemberReference activeDiagram MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager = End LocalVariableDeclaration ReferenceType String VariableDeclarator changeIndicator Literal """" IfStatement BinaryOperation && BinaryOperation != MemberReference saveAction Literal null MethodInvocation saveAction isEnabled BlockStatement StatementExpression Assignment MemberReference changeIndicator Literal "" *"" = End IfStatement BinaryOperation != MemberReference activeDiagram Literal null BlockStatement IfStatement BinaryOperation != MemberReference monitoredDiagram Literal null BlockStatement StatementExpression MethodInvocation monitoredDiagram Literal ""name"" This removePropertyChangeListener End StatementExpression MethodInvocation activeDiagram Literal ""name"" This addPropertyChangeListener StatementExpression Assignment MemberReference monitoredDiagram MemberReference activeDiagram = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference projectFileName Literal "" - "" MethodInvocation activeDiagram getName Literal "" - "" MethodInvocation getAppName MemberReference changeIndicator setTitle BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference projectFileName Literal "" - "" MethodInvocation getAppName MemberReference changeIndicator setTitle End MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && MethodInvocation evt MethodInvocation Literal ""name"" equals getPropertyName BinaryOperation instanceof MethodInvocation evt getSource ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getName getManager Cast ReferenceType ArgoDiagram MethodInvocation evt getSource buildTitle End ReferenceType PropertyChangeListener MethodDeclaration /**
     * Set the save indicator (the * after the title) to appear depending on
     * the curreny save action enabled status.
     */ Modifier public showSaveIndicator StatementExpression MethodInvocation titleHandler Literal null Literal null buildTitle MethodDeclaration /**
     * @return the application name (""ArgoUML"") as shown in the titlebar
     */ Modifier public ReferenceType String getAppName ReturnStatement MemberReference appName MethodDeclaration /**
     * @param n the application name (""ArgoUML"") as shown in the titlebar
     */ Modifier public setAppName FormalParameter ReferenceType String n StatementExpression Assignment MemberReference appName MemberReference n = MethodDeclaration /**
     * The method used by the NavigatorPane, MultiEditor and DetailsPane
     * to set the target of the application.<p>
     *
     * the target is either a Model Element (usually selected in
     * the Navigation pane or Properties panel) or a Fig (selected in
     * a diagram).<p>
     *
     * The concept of a selection transaction is used to prevent a change
     * of target in one view creating a call back to this method, which
     * would then change the target in all views again...<p>
     *
     * @param o the target
     */ Modifier private setTarget FormalParameter ReferenceType Object o StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference o setTarget getInstance MethodDeclaration /**
     * Select the tab page containing the todo item.
     *
     * TODO: should introduce an instance variable to go straight to
     * the correct tab instead of trying all
     *
     * @param o the todo item to select
     */ Modifier public setToDoItem FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation detailsPanesByCompassPoint MethodInvocation iterator values WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType DetailsPane VariableDeclarator detailsPane Cast ReferenceType DetailsPane MethodInvocation it next IfStatement MethodInvocation detailsPane MemberReference o setToDoItem BlockStatement ReturnStatement End End MethodDeclaration /**
     * Get the tab page containing the properties.
     *
     * @return the TabProps tabpage
     */ Modifier public ReferenceType TabProps getTabProps LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation detailsPanesByCompassPoint MethodInvocation iterator values WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType DetailsPane VariableDeclarator detailsPane Cast ReferenceType DetailsPane MethodInvocation it next LocalVariableDeclaration ReferenceType TabProps VariableDeclarator tabProps MethodInvocation detailsPane getTabProps IfStatement BinaryOperation != MemberReference tabProps Literal null BlockStatement ReturnStatement MemberReference tabProps End End ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""No properties tab found"" MethodDeclaration /**
     * Get the tab page instance of the given class.
     *
     * @param tabClass the given class
     * @return the tabpage
     */ Modifier public ReferenceType AbstractArgoJPanel getTab FormalParameter ReferenceType Class tabClass LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation detailsPanesByCompassPoint MethodInvocation iterator values WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType DetailsPane VariableDeclarator detailsPane Cast ReferenceType DetailsPane MethodInvocation it next LocalVariableDeclaration ReferenceType AbstractArgoJPanel VariableDeclarator tab MethodInvocation detailsPane MemberReference tabClass getTab IfStatement BinaryOperation != MemberReference tab Literal null BlockStatement ReturnStatement MemberReference tab End End ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal ""No "" MethodInvocation tabClass getName Literal "" tab found"" MethodDeclaration /**
     * @return the status bar
     */ Modifier public ReferenceType StatusBar getStatusBar ReturnStatement MemberReference statusBar MethodDeclaration Modifier public ReferenceType JMenuBar getJMenuBar ReturnStatement MemberReference menuBar MethodDeclaration /**
     * @return the editor pane
     */ Modifier public ReferenceType MultiEditorPane getEditorPane ReturnStatement MemberReference editorPane MethodDeclaration /**
     * @return the explorer pane
     */ Modifier public ReferenceType NavigatorPane getExplorerPane ReturnStatement MemberReference explorerPane MethodDeclaration /**
     * @return the details pane
     */ Modifier public ReferenceType JPanel getDetailsPane ReturnStatement MemberReference southPane MethodDeclaration /**
     * Find the tabpage with the given label and make it the front tab.
     *
     * @param tabName The tabpage label
     */ Modifier public selectTabNamed FormalParameter ReferenceType String tabName LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation detailsPanesByCompassPoint MethodInvocation iterator values WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType DetailsPane VariableDeclarator detailsPane Cast ReferenceType DetailsPane MethodInvocation it next IfStatement MethodInvocation detailsPane MethodInvocation Translator MemberReference tabName localize selectTabNamed BlockStatement ReturnStatement End End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""No such tab named "" MemberReference tabName MethodDeclaration /**
     * Given a list of targets, displays the corresponding diagram.
     * This method jumps to the diagram showing the targets,
     * and scrolls to make it visible.
     *
     * @param targets Collection of targets to show
     */ Modifier public jumpToDiagramShowing FormalParameter ReferenceType Collection targets IfStatement BinaryOperation || BinaryOperation == MemberReference targets Literal null BinaryOperation == MethodInvocation targets size Literal 0 BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType List VariableDeclarator dms ClassCreator ReferenceType ArrayList MemberReference targets LocalVariableDeclaration ReferenceType Object VariableDeclarator first MethodInvocation dms Literal 0 get IfStatement BinaryOperation && BinaryOperation instanceof MemberReference first ReferenceType Diagram BinaryOperation > MethodInvocation dms size Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference first setTarget StatementExpression MethodInvocation MethodInvocation dms Literal 1 get setTarget ReturnStatement End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference first ReferenceType Diagram BinaryOperation == MethodInvocation dms size Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference first setTarget ReturnStatement End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ArgoDiagram VariableDeclarator diagrams MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDiagramList getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement BinaryOperation && BinaryOperation instanceof MemberReference target ReferenceType Diagram BinaryOperation == Cast ReferenceType Diagram MemberReference target MethodInvocation dms size BlockStatement StatementExpression MethodInvocation MemberReference first setTarget ReturnStatement End LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator bestDiagram Literal null LocalVariableDeclaration BasicType int VariableDeclarator bestNumContained Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d MemberReference diagrams BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nc MethodInvocation d MemberReference dms countContained IfStatement BinaryOperation > MemberReference nc MemberReference bestNumContained BlockStatement StatementExpression Assignment MemberReference bestNumContained MemberReference nc = StatementExpression Assignment MemberReference bestDiagram MemberReference d = End IfStatement BinaryOperation == MemberReference nc MethodInvocation dms size BlockStatement BreakStatement End End IfStatement BinaryOperation != MemberReference bestDiagram Literal null BlockStatement IfStatement MethodInvocation ! ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram MethodInvocation MemberReference bestDiagram equals getManager BlockStatement StatementExpression MethodInvocation MemberReference bestDiagram setTarget End StatementExpression MethodInvocation MemberReference first setTarget End IfStatement MethodInvocation first MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getRoot getManager equals BlockStatement StatementExpression MethodInvocation MemberReference first setTarget End LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation TargetManager MethodInvocation getFigTarget getInstance IfStatement BinaryOperation instanceof MemberReference f ReferenceType Fig BlockStatement StatementExpression MethodInvocation Globals MethodInvocation Cast ReferenceType Fig MemberReference f scrollToShow curEditor End End MethodDeclaration Modifier public Annotation Override setVisible FormalParameter BasicType boolean b StatementExpression SuperMethodInvocation MemberReference b setVisible IfStatement MemberReference b BlockStatement StatementExpression MethodInvocation Globals This setStatusBar End MethodDeclaration Modifier public showStatus FormalParameter ReferenceType String s StatementExpression MethodInvocation statusBar MemberReference s showStatus MethodDeclaration /**
     * Save the positions of the screen splitters, sizes and postion
     * of main window in the properties file.
     */ Modifier private saveScreenConfiguration IfStatement BinaryOperation != MemberReference explorerPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_WEST_WIDTH MethodInvocation explorerPane getWidth setInteger End IfStatement BinaryOperation != MemberReference eastPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_EAST_WIDTH MethodInvocation eastPane getWidth setInteger End IfStatement BinaryOperation != MemberReference northPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_NORTH_HEIGHT MethodInvocation northPane getHeight setInteger End IfStatement BinaryOperation != MemberReference southPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_SOUTH_HEIGHT MethodInvocation southPane getHeight setInteger End IfStatement BinaryOperation != MemberReference todoPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_SOUTHWEST_WIDTH MethodInvocation todoPane getWidth setInteger End IfStatement BinaryOperation != MemberReference southEastPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_SOUTHEAST_WIDTH MethodInvocation southEastPane getWidth setInteger End IfStatement BinaryOperation != MemberReference northWestPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_NORTHWEST_WIDTH MethodInvocation northWestPane getWidth setInteger End IfStatement BinaryOperation != MemberReference northEastPane Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_NORTHEAST_WIDTH MethodInvocation northEastPane getWidth setInteger End StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_WIDTH MethodInvocation getWidth setInteger StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_HEIGHT MethodInvocation getHeight setInteger StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_LEFT_X MethodInvocation getX setInteger StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SCREEN_TOP_Y MethodInvocation getY setInteger MethodDeclaration /**
     * Build a new details pane for the given compass point.
     *
     * @param compassPoint the position for which to build the pane
     * @param orientation the required orientation of the pane.
     * @return the details pane or null if none is required for the given
     *         compass point.
     */ Modifier private ReferenceType DetailsPane makeDetailsPane FormalParameter ReferenceType String compassPoint FormalParameter ReferenceType Orientation orientation LocalVariableDeclaration ReferenceType DetailsPane VariableDeclarator detailsPane ClassCreator ReferenceType DetailsPane MethodInvocation compassPoint toLowerCase MemberReference orientation IfStatement BinaryOperation == MethodInvocation detailsPane getTabCount Literal 0 BlockStatement ReturnStatement Literal null End ReturnStatement MemberReference detailsPane MethodDeclaration /**
     * Exit the application if no save is required.
     * If a save is required then prompt the user if they wish to,
     * save and exit, exit without saving or cancel the exit operation.
     */ Modifier public tryExit IfStatement BinaryOperation && BinaryOperation != MemberReference saveAction Literal null MethodInvocation saveAction isEnabled BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MessageFormat MethodInvocation Translator Literal ""optionpane.exit-save-changes-to"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p getName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane This MemberReference t MemberReference t MemberReference JOptionPane YES_NO_CANCEL_OPTION showConfirmDialog IfStatement BinaryOperation || BinaryOperation == MemberReference response MemberReference JOptionPane CANCEL_OPTION BinaryOperation == MemberReference response MemberReference JOptionPane CLOSED_OPTION BlockStatement ReturnStatement End IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager Literal null BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getURI getManager Literal null trySave IfStatement MethodInvocation saveAction isEnabled BlockStatement ReturnStatement End End End StatementExpression MethodInvocation saveScreenConfiguration StatementExpression MethodInvocation Configuration save StatementExpression MethodInvocation System Literal 0 exit MethodDeclaration Modifier public dispose ClassDeclaration /**
     * Receives window events.
     */ WindowCloser ConstructorDeclaration Modifier public /**
         * Constructor.
         */ WindowCloser MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation tryExit ReferenceType WindowAdapter MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement MethodInvocation evt MethodInvocation MemberReference ProjectManager CURRENT_PROJECT_PROPERTY_NAME equals getPropertyName BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p Cast ReferenceType Project MethodInvocation evt getNewValue IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation titleHandler MethodInvocation p getName Literal null buildTitle StatementExpression MethodInvocation Designer MemberReference p setCritiquingRoot StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation p getInitialTarget setTarget getInstance End End MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget targetChanged MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget targetChanged MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget targetChanged MethodDeclaration /**
     * Called to update the current namespace and active diagram after
     * the target has changed.
     *
     * @param target the new target
     */ Modifier private targetChanged FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation titleHandler Literal null Cast ReferenceType ArgoDiagram MemberReference target buildTitle End StatementExpression MethodInvocation determineRemoveEnabled LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator theCurrentNamespace Literal null StatementExpression Assignment MemberReference target MethodInvocation TargetManager MethodInvocation getTarget getInstance = IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference theCurrentNamespace Cast ReferenceType ArgoDiagram MemberReference target = IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference theCurrentNamespace MemberReference target = IfStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference theCurrentNamespace MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = BlockStatement StatementExpression Assignment MemberReference theCurrentNamespace MethodInvocation p getRoot = End End End StatementExpression MethodInvocation p MemberReference theCurrentNamespace setCurrentNamespace IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation p Cast ReferenceType ArgoDiagram MemberReference target setActiveDiagram End MethodDeclaration /**
     * Enabled the remove action if an item is selected in anything other then
     * the activity or state diagrams.
     */ Modifier private determineRemoveEnabled LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation editor MethodInvocation getFigs getSelectionManager LocalVariableDeclaration BasicType boolean VariableDeclarator removeEnabled MethodInvocation ! figs isEmpty LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation editor getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType UMLMutableGraphSupport BlockStatement StatementExpression Assignment MemberReference removeEnabled Cast ReferenceType UMLMutableGraphSupport MemberReference gm = End StatementExpression MethodInvocation removeFromDiagram MemberReference removeEnabled setEnabled MethodDeclaration /**
     * Returns the todopane.
     * @return ToDoPane
     */ Modifier public ReferenceType JPanel getTodoPane ReturnStatement MemberReference todoPane MethodDeclaration /**
     * @return Returns the defaultFont.
     */ Modifier public ReferenceType Font getDefaultFont ReturnStatement MemberReference defaultFont MethodDeclaration /**
     * Try to save the project, possibly not creating a new file
     * @param overwrite if true, then we overwrite without asking
     */ Modifier public trySave FormalParameter BasicType boolean overwrite StatementExpression This MethodInvocation MemberReference overwrite Literal false trySave MethodDeclaration /**
     * Try to save the project.
     * @param overwrite if true, then we overwrite without asking
     * @param saveNewFile if true, we'll ask for a new file even if
     *                    the current project already had one  
     */ Modifier public trySave FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean saveNewFile LocalVariableDeclaration ReferenceType URI VariableDeclarator uri MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getURI getManager LocalVariableDeclaration ReferenceType File VariableDeclarator file Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference uri Literal null MemberReference ! saveNewFile BlockStatement StatementExpression Assignment MemberReference file ClassCreator ReferenceType File MemberReference uri = IfStatement MethodInvocation ! file exists BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane This MethodInvocation Translator Literal ""optionpane.save-project-file-not-found"" localize MethodInvocation Translator Literal ""optionpane.save-project-file-not-found-title"" localize MemberReference JOptionPane YES_NO_OPTION showConfirmDialog IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression Assignment MemberReference saveNewFile Literal true = BlockStatement ReturnStatement End End BlockStatement StatementExpression Assignment MemberReference saveNewFile Literal true = End IfStatement MemberReference saveNewFile BlockStatement StatementExpression Assignment MemberReference file MethodInvocation getNewFile = IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ReturnStatement End End StatementExpression MethodInvocation MemberReference overwrite MemberReference file trySaveWithProgressMonitor MethodDeclaration /**
     * Checks if the given file is writable or read-only
     * @param file the file to be checked
     * @return true if the given file is read-only
     */ Modifier private BasicType boolean isFileReadonly FormalParameter ReferenceType File file TryStatement ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference file Literal null BinaryOperation && MethodInvocation file exists MethodInvocation ! file canWrite BinaryOperation && MethodInvocation ! file exists MethodInvocation ! file createNewFile CatchClause CatchClauseParameter IOException ioExc ReturnStatement Literal true MethodDeclaration /**
     * Loads a project displaying a nice ProgressMonitor
     * 
     * @param overwrite if true, the file is going to be overwritten
     * @param file      the target file
     * 
     * TODO: Separate this into a Swing specific class - tfm
     */ Modifier public trySaveWithProgressMonitor FormalParameter BasicType boolean overwrite FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType SaveSwingWorker VariableDeclarator worker ClassCreator ReferenceType SaveSwingWorker MemberReference overwrite MemberReference file StatementExpression MethodInvocation Thread MethodInvocation MemberReference Thread MAX_PRIORITY setPriority currentThread StatementExpression MethodInvocation worker start MethodDeclaration /**
     * Rebuild the title using the name of the current project.
     *
     */ Modifier public buildTitleWithCurrentProjectName StatementExpression MethodInvocation titleHandler MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getName getManager Literal null buildTitle MethodDeclaration /**
     * Try to save the project.
     * @param overwrite if true, then we overwrite without asking
     * @param file the File to save to
     * @param pmw       the ProgressMonitor to be updated;  
     * @return true if successful
     * 
     * TODO: Separate this into a Swing specific class - tfm
     */ Modifier public BasicType boolean trySave FormalParameter BasicType boolean overwrite FormalParameter ReferenceType File file FormalParameter ReferenceType ProgressMonitor pmw StatementExpression MethodInvocation LOG Literal ""Saving the project"" info LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType PersistenceManager VariableDeclarator pm MethodInvocation PersistenceManager getInstance LocalVariableDeclaration ReferenceType ProjectFilePersister VariableDeclarator persister Literal null TryStatement IfStatement MethodInvocation ! PersistenceManager MethodInvocation MethodInvocation ArgoFrame getInstance MemberReference overwrite MemberReference file confirmOverwrite getInstance BlockStatement ReturnStatement Literal false End IfStatement This MethodInvocation MemberReference file isFileReadonly BlockStatement StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal ""optionpane.save-project-cant-write"" localize MethodInvocation Translator Literal ""optionpane.save-project-cant-write-title"" localize MemberReference JOptionPane INFORMATION_MESSAGE showMessageDialog ReturnStatement Literal false End LocalVariableDeclaration ReferenceType String VariableDeclarator sStatus MethodInvocation MessageFormat MethodInvocation Translator Literal ""label.save-project-status-writing"" localize ArrayCreator ReferenceType Object ArrayInitializer MemberReference file format StatementExpression This MethodInvocation MemberReference sStatus showStatus StatementExpression Assignment MemberReference persister MethodInvocation pm getSavePersister = StatementExpression MethodInvocation pm Literal null setSavePersister IfStatement BinaryOperation == MemberReference persister Literal null BlockStatement StatementExpression Assignment MemberReference persister MethodInvocation pm MethodInvocation file getName getPersisterFromFileName = End IfStatement BinaryOperation == MemberReference persister Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal ""Filename "" MethodInvocation project getName Literal "" is not of a known file type"" End StatementExpression MethodInvocation testSimulateErrors LocalVariableDeclaration ReferenceType String VariableDeclarator report MethodInvocation project repair IfStatement BinaryOperation > MethodInvocation report length Literal 0 BlockStatement StatementExpression Assignment MemberReference report BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""An inconsistency has been detected when saving the model."" Literal ""These have been repaired and are reported below. "" Literal ""The save will continue with the model having been "" Literal ""amended as described.\n"" MemberReference report = StatementExpression MethodInvocation MemberReference pmw BinaryOperation + MethodInvocation Translator Literal ""dialog.repair"" localize MemberReference report Literal true reportError End IfStatement BinaryOperation != MemberReference pmw Literal null BlockStatement StatementExpression MethodInvocation pmw Literal 25 updateProgress StatementExpression MethodInvocation persister MemberReference pmw addProgressListener End StatementExpression MethodInvocation project preSave StatementExpression MethodInvocation persister MemberReference project MemberReference file save StatementExpression MethodInvocation project postSave StatementExpression Assignment MemberReference sStatus MethodInvocation MessageFormat MethodInvocation Translator Literal ""label.save-project-status-wrote"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation project getURI format = StatementExpression MethodInvocation MemberReference sStatus showStatus StatementExpression MethodInvocation LOG BinaryOperation + Literal ""setting most recent project file to "" MethodInvocation file getCanonicalPath debug StatementExpression MethodInvocation saveAction Literal false setEnabled StatementExpression MethodInvocation MemberReference file addFileSaved StatementExpression MethodInvocation Configuration MemberReference Argo KEY_MOST_RECENT_PROJECT_FILE MethodInvocation file getCanonicalPath setString ReturnStatement Literal true CatchClause CatchClauseParameter Exception ex LocalVariableDeclaration ReferenceType String VariableDeclarator sMessage MethodInvocation MessageFormat MethodInvocation Translator Literal ""optionpane.save-project-general-exception"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation ex getMessage format StatementExpression MethodInvocation JOptionPane This MemberReference sMessage MethodInvocation Translator Literal ""optionpane.save-project-general-exception-title"" localize MemberReference JOptionPane ERROR_MESSAGE showMessageDialog StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.save.error"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation file getName localize Literal true MemberReference ex reportError StatementExpression MethodInvocation LOG MemberReference sMessage MemberReference ex error ReturnStatement Literal false MethodDeclaration Modifier private testSimulateErrors IfStatement Literal false BlockStatement LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation Globals MethodInvocation getLayerManager MethodInvocation getActiveLayer curEditor LocalVariableDeclaration ReferenceType List VariableDeclarator figs MethodInvocation lay getContentsNoEdges IfStatement BinaryOperation > MethodInvocation figs size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figs Literal 0 get StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Setting owner of "" MethodInvocation fig MethodInvocation getName getClass Literal "" to null"" error StatementExpression MethodInvocation fig Literal null setOwner End IfStatement BinaryOperation > MethodInvocation figs size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figs Literal 1 get StatementExpression MethodInvocation fig Literal null setLayer End IfStatement BinaryOperation > MethodInvocation figs size Literal 2 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figs Literal 2 get LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation fig getOwner StatementExpression MethodInvocation Model MethodInvocation MemberReference owner delete getUmlFactory End End MethodDeclaration /**
     * Register a new file saved.
     *
     * @param file The file.
     * @throws IOException if we cannot get the file name from the file.
     */ Modifier public addFileSaved FormalParameter ReferenceType File file IOException LocalVariableDeclaration ReferenceType GenericArgoMenuBar VariableDeclarator menu Cast ReferenceType GenericArgoMenuBar MethodInvocation getJMenuBar IfStatement BinaryOperation != MemberReference menu Literal null BlockStatement StatementExpression MethodInvocation menu MethodInvocation file getCanonicalPath addFileSaved End MethodDeclaration /**
     * If the current project is dirty (needs saving) then this function will
     * ask confirmation from the user.
     * If the user indicates that saving is needed, then saving is attempted.
     * See ActionExit.actionPerformed() for a very similar procedure!
     *
     * @return true if we can continue with opening
     */ Modifier public BasicType boolean askConfirmationAndSave LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator pb MethodInvocation ProjectBrowser getInstance LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null MethodInvocation saveAction isEnabled BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MessageFormat MethodInvocation Translator Literal ""optionpane.open-project-save-changes-to"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p getName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane MemberReference pb MemberReference t MemberReference t MemberReference JOptionPane YES_NO_CANCEL_OPTION showConfirmDialog IfStatement BinaryOperation || BinaryOperation == MemberReference response MemberReference JOptionPane CANCEL_OPTION BinaryOperation == MemberReference response MemberReference JOptionPane CLOSED_OPTION BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager Literal null BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getURI getManager Literal null trySave IfStatement MethodInvocation saveAction isEnabled BlockStatement ReturnStatement Literal false End End End ReturnStatement Literal true MethodDeclaration /**
     * Loads a project displaying a nice ProgressMonitor
     * 
     * @param file      the project to be opened
     * @param showUI    whether to show the GUI or not
     * 
     * TODO: This needs to be refactored to be GUI independent - tfm
     */ Modifier public loadProjectWithProgressMonitor FormalParameter ReferenceType File file FormalParameter BasicType boolean showUI LocalVariableDeclaration ReferenceType LoadSwingWorker VariableDeclarator worker ClassCreator ReferenceType LoadSwingWorker MemberReference file MemberReference showUI StatementExpression MethodInvocation worker start MethodDeclaration /**
     * Loads the project file and opens all kinds of error message windows
     * if it doesn't work for some reason. In those cases it preserves
     * the old project.
     *
     * @param file the file to open.
     * @param showUI true if an error message may be shown to the user,
     *               false if run in commandline mode
     * @param pmw 	the ProgressMonitor to be updated;  
     * 				if not needed, use null 
     * @return true if the file was successfully opened
     * 
     * TODO: Separate this into a Swing specific class - tfm
     */ Modifier public BasicType boolean loadProject FormalParameter ReferenceType File file FormalParameter BasicType boolean showUI FormalParameter ReferenceType ProgressMonitor pmw StatementExpression MethodInvocation LOG Literal ""Loading project."" info LocalVariableDeclaration ReferenceType PersistenceManager VariableDeclarator pm MethodInvocation PersistenceManager getInstance LocalVariableDeclaration ReferenceType Project VariableDeclarator oldProject MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration BasicType boolean VariableDeclarator success Literal true StatementExpression MethodInvocation Designer disableCritiquing StatementExpression MethodInvocation Designer clearCritiquing StatementExpression MethodInvocation clearDialogs LocalVariableDeclaration ReferenceType Project VariableDeclarator project Literal null IfStatement MethodInvocation ! file canRead BlockStatement StatementExpression MethodInvocation MemberReference pmw BinaryOperation + BinaryOperation + Literal ""File not found "" MemberReference file Literal ""."" MemberReference showUI reportError StatementExpression MethodInvocation Designer enableCritiquing StatementExpression Assignment MemberReference success Literal false = BlockStatement LocalVariableDeclaration ReferenceType AbstractAction VariableDeclarator rememberedSaveAction This MemberReference saveAction StatementExpression Assignment This MemberReference saveAction Literal null = StatementExpression MethodInvocation ProjectManager MethodInvocation Literal null setSaveAction getManager TryStatement LocalVariableDeclaration ReferenceType ProjectFilePersister VariableDeclarator persister MethodInvocation pm MethodInvocation file getName getPersisterFromFileName IfStatement BinaryOperation == MemberReference persister Literal null BlockStatement StatementExpression Assignment MemberReference success Literal false = ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal ""Filename "" MethodInvocation file getName Literal "" is not of a known file type"" End IfStatement BinaryOperation != MemberReference pmw Literal null BlockStatement StatementExpression MethodInvocation persister MemberReference pmw addProgressListener End StatementExpression MethodInvocation DiagramFactory MethodInvocation getDiagram MethodInvocation clear getInstance StatementExpression Assignment MemberReference project MethodInvocation persister MemberReference file doLoad = IfStatement BinaryOperation != MemberReference pmw Literal null BlockStatement StatementExpression MethodInvocation persister MemberReference pmw removeProgressListener End StatementExpression MethodInvocation ThreadUtils checkIfInterrupted IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator diagrams MethodInvocation DiagramFactory MethodInvocation getDiagram getInstance LocalVariableDeclaration ReferenceType Iterator VariableDeclarator diag MethodInvocation diagrams iterator WhileStatement MethodInvocation diag hasNext BlockStatement StatementExpression MethodInvocation project MethodInvocation diag next addMember End IfStatement MethodInvocation ! diagrams isEmpty BlockStatement StatementExpression MethodInvocation project Cast ReferenceType ArgoDiagram MethodInvocation diagrams MethodInvocation next iterator setActiveDiagram End End StatementExpression This MethodInvocation MemberReference file addFileSaved StatementExpression MethodInvocation Configuration MemberReference Argo KEY_MOST_RECENT_PROJECT_FILE MethodInvocation file getCanonicalPath setString StatementExpression MethodInvocation ProjectBrowser MethodInvocation MethodInvocation Translator Literal ""label.open-project-status-read"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation file getName localize showStatus getInstance CatchClause CatchClauseParameter VersionException ex StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression Assignment MemberReference success Literal false = StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.file.version"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation ex getMessage localize MemberReference showUI reportError CatchClause CatchClauseParameter OutOfMemoryError ex StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression Assignment MemberReference success Literal false = StatementExpression MethodInvocation LOG Literal ""Out of memory while loading project"" MemberReference ex error StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.memory.limit"" localize MemberReference showUI reportError CatchClause CatchClauseParameter java.lang.InterruptedException ex StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression Assignment MemberReference success Literal false = StatementExpression MethodInvocation LOG Literal ""Project loading interrupted by user"" error CatchClause CatchClauseParameter UmlVersionException ex StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression Assignment MemberReference success Literal false = StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.file.version.error"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation ex getMessage localize MemberReference showUI MemberReference ex reportError CatchClause CatchClauseParameter XmiFormatException ex StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression Assignment MemberReference success Literal false = StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.xmi.format.error"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation ex getMessage localize MemberReference showUI MemberReference ex reportError CatchClause CatchClauseParameter IOException ex StatementExpression Assignment MemberReference success Literal false = StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression MethodInvocation LOG Literal ""Exception while loading project"" MemberReference ex error StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.open.error"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation file getName localize MemberReference showUI MemberReference ex reportError CatchClause CatchClauseParameter OpenException ex StatementExpression Assignment MemberReference success Literal false = StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression MethodInvocation LOG Literal ""Exception while loading project"" MemberReference ex error StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.open.error"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation file getName localize MemberReference showUI MemberReference ex reportError CatchClause CatchClauseParameter RuntimeException ex StatementExpression Assignment MemberReference success Literal false = StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression MethodInvocation LOG Literal ""Exception while loading project"" MemberReference ex error StatementExpression MethodInvocation MemberReference pmw MethodInvocation Translator Literal ""dialog.error.open.error"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation file getName localize MemberReference showUI MemberReference ex reportError TryStatement IfStatement MethodInvocation ! PersistenceManager MethodInvocation getLastLoadStatus getInstance BlockStatement StatementExpression Assignment MemberReference project MemberReference oldProject = StatementExpression Assignment MemberReference success Literal false = StatementExpression MethodInvocation MemberReference pmw BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Problem loading the project "" MethodInvocation file getName Literal ""\n"" Literal ""Error message:\n"" MethodInvocation PersistenceManager MethodInvocation getLastLoadMessage getInstance Literal ""\n"" Literal ""Some (or all) information may be missing "" Literal ""from the project.\n"" Literal ""Please report this problem at "" Literal ""http://argouml.tigris.org\n"" MemberReference showUI reportError IfStatement BinaryOperation != MemberReference oldProject Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference project Literal null MethodInvocation ! project MemberReference oldProject equals BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""There are "" MethodInvocation oldProject MethodInvocation size getDiagramList Literal "" diagrams in the old project"" info StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""There are "" MethodInvocation project MethodInvocation size getDiagramList Literal "" diagrams in the new project"" info StatementExpression MethodInvocation ProjectManager MethodInvocation MemberReference project setCurrentProject getManager StatementExpression MethodInvocation ProjectManager MethodInvocation MemberReference oldProject removeProject getManager StatementExpression MethodInvocation project MethodInvocation init getProjectSettings LocalVariableDeclaration ReferenceType Command VariableDeclarator cmd ClassCreator ReferenceType NonUndoableCommand MethodDeclaration Modifier public ReferenceType Object execute ReturnStatement Literal null StatementExpression MethodInvocation project MethodInvocation MemberReference cmd addCommand getUndoManager End End End IfStatement BinaryOperation == MemberReference project Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""The current project is null"" info BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""There are "" MethodInvocation project MethodInvocation size getDiagramList Literal "" diagrams in the current project"" info End StatementExpression MethodInvocation Designer enableCritiquing StatementExpression Assignment This MemberReference saveAction MemberReference rememberedSaveAction = StatementExpression MethodInvocation ProjectManager MethodInvocation MemberReference rememberedSaveAction setSaveAction getManager IfStatement MemberReference success BlockStatement StatementExpression MethodInvocation rememberedSaveAction Literal false setEnabled End End ReturnStatement MemberReference success MethodDeclaration /**
     * Open a Message Dialog with an error message.
     *
     * @param message the message to display.
     * @param showUI true if an error message may be shown to the user,
     *               false if run in commandline mode
     */ Modifier private reportError FormalParameter ReferenceType ProgressMonitor monitor FormalParameter Modifier final ReferenceType String message FormalParameter BasicType boolean showUI IfStatement MemberReference showUI BlockStatement IfStatement BinaryOperation != MemberReference monitor Literal null BlockStatement StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.error.title"" localize MethodInvocation Translator Literal ""dialog.error.open.save.error"" localize MemberReference message notifyMessage BlockStatement StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType ExceptionDialog MethodInvocation ArgoFrame getInstance MethodInvocation Translator Literal ""dialog.error.title"" localize MethodInvocation Translator Literal ""dialog.error.open.save.error"" localize MemberReference message StatementExpression MethodInvocation dialog Literal true setVisible invokeLater End BlockStatement StatementExpression MethodInvocation System.err MemberReference message print End MethodDeclaration /**
     * Open a Message Dialog with an error message.
     *
     * @param message the message to display.
     * @param showUI true if an error message may be shown to the user,
     *               false if run in commandline mode
     * @param ex The exception that was thrown.
     */ Modifier private reportError FormalParameter ReferenceType ProgressMonitor monitor FormalParameter Modifier final ReferenceType String message FormalParameter BasicType boolean showUI FormalParameter Modifier final ReferenceType Throwable ex IfStatement MemberReference showUI BlockStatement IfStatement BinaryOperation != MemberReference monitor Literal null BlockStatement StatementExpression MethodInvocation monitor MethodInvocation Translator Literal ""dialog.error.title"" localize MemberReference message MethodInvocation ExceptionDialog MemberReference message MemberReference ex BinaryOperation instanceof MemberReference ex ReferenceType OpenException formatException notifyMessage BlockStatement StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType ExceptionDialog MethodInvocation ArgoFrame getInstance MethodInvocation Translator Literal ""dialog.error.title"" localize MemberReference message MethodInvocation ExceptionDialog MemberReference message MemberReference ex BinaryOperation instanceof MemberReference ex ReferenceType OpenException formatException StatementExpression MethodInvocation dialog Literal true setVisible invokeLater End BlockStatement LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference sw StatementExpression MethodInvocation ex MemberReference pw printStackTrace LocalVariableDeclaration ReferenceType String VariableDeclarator exception MethodInvocation sw toString StatementExpression MethodInvocation MemberReference monitor BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Please report the error below to the ArgoUML"" Literal ""development team at http://argouml.tigris.org.\n"" MemberReference message Literal ""\n\n"" MemberReference exception MemberReference showUI reportError End MethodDeclaration /**
     * We should remove all open dialogs. They have as parent the
     * ProjectBrowser. This is needed for the non-modal dialogs
     * such as Find and Goto.
     */ Modifier public clearDialogs LocalVariableDeclaration ReferenceType Window VariableDeclarator windows MethodInvocation getOwnedWindows ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference windows length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i windows ReferenceType FindDialog BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation dispose windows End End StatementExpression MethodInvocation FindDialog MethodInvocation reset getInstance MethodDeclaration /**
     * Get the action that can save the current project.
     * @return the save action.
     */ Modifier public ReferenceType AbstractAction getSaveAction ReturnStatement MemberReference saveAction MethodDeclaration /**
     * Get the action that removes selected figs from the diagram.
     * @return the remove from diagram action.
     */ Modifier public ReferenceType AbstractAction getRemoveFromDiagramAction ReturnStatement MemberReference removeFromDiagram MethodDeclaration /**
     * @return the File to save to
     */ Modifier protected ReferenceType File getNewFile LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator pb MethodInvocation ProjectBrowser getInstance LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser Literal null LocalVariableDeclaration ReferenceType URI VariableDeclarator uri MethodInvocation p getURI IfStatement BinaryOperation != MemberReference uri Literal null BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator projectFile ClassCreator ReferenceType File MemberReference uri IfStatement BinaryOperation > MethodInvocation projectFile length Literal 0 BlockStatement StatementExpression Assignment MemberReference chooser ClassCreator ReferenceType JFileChooser MemberReference projectFile = BlockStatement StatementExpression Assignment MemberReference chooser ClassCreator ReferenceType JFileChooser = End StatementExpression MethodInvocation chooser MemberReference projectFile setSelectedFile BlockStatement StatementExpression Assignment MemberReference chooser ClassCreator ReferenceType JFileChooser = End LocalVariableDeclaration ReferenceType String VariableDeclarator sChooserTitle MethodInvocation Translator Literal ""filechooser.save-as-project"" localize StatementExpression MethodInvocation chooser BinaryOperation + BinaryOperation + MemberReference sChooserTitle Literal "" "" MethodInvocation p getName setDialogTitle StatementExpression MethodInvocation chooser MethodInvocation ProjectFileView getInstance setFileView StatementExpression MethodInvocation chooser Literal false setAcceptAllFileFilterUsed StatementExpression MethodInvocation PersistenceManager MethodInvocation MemberReference chooser TernaryExpression BinaryOperation != MemberReference uri Literal null MethodInvocation Util MethodInvocation uri toString URIToFilename Literal null setSaveFileChooserFilters getInstance LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation chooser MemberReference pb showSaveDialog IfStatement BinaryOperation == MemberReference retval MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile LocalVariableDeclaration ReferenceType AbstractFilePersister VariableDeclarator filter Cast ReferenceType AbstractFilePersister MethodInvocation chooser getFileFilter IfStatement BinaryOperation != MemberReference theFile Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference PersistenceManager KEY_PROJECT_NAME_PATH MethodInvocation PersistenceManager MethodInvocation MethodInvocation theFile getPath getBaseName getInstance setString LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation theFile getName IfStatement MethodInvocation ! name BinaryOperation + Literal ""."" MethodInvocation filter getExtension endsWith BlockStatement StatementExpression Assignment MemberReference theFile ClassCreator ReferenceType File MethodInvocation theFile getParent BinaryOperation + BinaryOperation + MemberReference name Literal ""."" MethodInvocation filter getExtension = End End StatementExpression MethodInvocation PersistenceManager MethodInvocation MemberReference filter setSavePersister getInstance ReturnStatement MemberReference theFile End ReturnStatement Literal null FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6974246679451284917L ReferenceType JFrame ReferenceType IStatusBar ReferenceType PropertyChangeListener ReferenceType TargetListener",0
1190,1190,,0
355,355,"CompilationUnit PackageDeclaration org.argouml.cognitive Import java.io.Serializable Import javax.swing.Icon Import org.argouml.cognitive.critics.Wizard Import org.argouml.cognitive.critics.WizardItem Import org.argouml.model.Model Import org.argouml.util.CollectionUtil Import org.tigris.gef.base.Diagram Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * This class defines the feedback items that can be placed on the
 * Designer's ToDoList.  The main point of a ToDoItem is to inform
 * the Designer of some problem or open design issue.  Additional
 * information in the ToDoItem helps put the designer in a mental
 * context suitable for resolving the issue: ToDoItem's are well tied
 * into the design and design process so that the Designer can see
 * which design material's are the subject of this ToDoItem, and which
 * Critic raised it.  The more info URL helps
 * provide background knowledge of the domain. In the future
 * ToDoItems will include ties back to the design rationale log.
 * Also the run-time system needs to know who posted each ToDoItem so
 * that it can automatically remove it if it is no longer valid.
 */ ToDoItem FieldDeclaration /**
     * The interruptive priority todoitem of 4 levels.
     */ Modifier public final static BasicType int VariableDeclarator INTERRUPTIVE_PRIORITY Literal 9 FieldDeclaration /**
     * The high priority todoitem of 4 levels.
     */ Modifier public final static BasicType int VariableDeclarator HIGH_PRIORITY Literal 1 FieldDeclaration /**
     * The medium priority todoitem of 4 levels.
     */ Modifier public final static BasicType int VariableDeclarator MED_PRIORITY Literal 2 FieldDeclaration /**
     * The lowest priority todoitem of 4 levels.
     */ Modifier public final static BasicType int VariableDeclarator LOW_PRIORITY Literal 3 FieldDeclaration /**
     * Who posted this item (e.g., a Critic, or the designer)?
     */ Modifier private ReferenceType Poster VariableDeclarator thePoster FieldDeclaration /**
     * One line description of issue.
     */ Modifier private ReferenceType String VariableDeclarator theHeadline FieldDeclaration /**
     * How important is this issue? Enough to interrupt the designer?
     */ Modifier private BasicType int VariableDeclarator thePriority FieldDeclaration /**
     * One paragraph description of the issue.
     */ Modifier private ReferenceType String VariableDeclarator theDescription FieldDeclaration /**
     * URL for background (textbook?) knowledge about the domain.
     */ Modifier private ReferenceType String VariableDeclarator theMoreInfoURL FieldDeclaration /**
     * Which part of the design this issue affects.<p>
     *
     * Each member is either a model element, a {@link Fig}, or
     * a {@link Diagram}. TODO: Because there is not a common
     * supertype for these three types, we can't type this list.
     * We should introduce a common supertype/interface. - tfm <p>
     *
     * This is set by the constructor and cannot change.<p>
     * 
     * TODO: Offenders need to be more strongly typed. - tfm 20070630
     */ Modifier private ReferenceType ListSet VariableDeclarator theOffenders FieldDeclaration Modifier private ReferenceType Wizard VariableDeclarator theWizard ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param poster the poster
     * @param h the headline
     * @param p the priority
     * @param d the description
     * @param m the more info url
     * @param offs the offenders
     */ ToDoItem FormalParameter ReferenceType Poster poster FormalParameter ReferenceType String h FormalParameter BasicType int p FormalParameter ReferenceType String d FormalParameter ReferenceType String m FormalParameter ReferenceType ListSet offs StatementExpression MethodInvocation MemberReference offs checkOffs StatementExpression Assignment MemberReference thePoster MemberReference poster = StatementExpression Assignment MemberReference theHeadline MemberReference h = StatementExpression Assignment MemberReference theOffenders MemberReference offs = StatementExpression Assignment MemberReference thePriority MemberReference p = StatementExpression Assignment MemberReference theDescription MemberReference d = StatementExpression Assignment MemberReference theMoreInfoURL MemberReference m = ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param poster the poster
     * @param h the headline
     * @param p the priority
     * @param d the description
     * @param m the more info url
     */ ToDoItem FormalParameter ReferenceType Poster poster FormalParameter ReferenceType String h FormalParameter BasicType int p FormalParameter ReferenceType String d FormalParameter ReferenceType String m StatementExpression Assignment MemberReference thePoster MemberReference poster = StatementExpression Assignment MemberReference theHeadline MemberReference h = StatementExpression Assignment MemberReference theOffenders ClassCreator ReferenceType ListSet = StatementExpression Assignment MemberReference thePriority MemberReference p = StatementExpression Assignment MemberReference theDescription MemberReference d = StatementExpression Assignment MemberReference theMoreInfoURL MemberReference m = ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param c the poster (critic)
     * @param dm A single offender.
     * @param dsgr the designer
     */ ToDoItem FormalParameter ReferenceType Critic c FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr StatementExpression MethodInvocation MemberReference dm checkArgument StatementExpression Assignment MemberReference thePoster MemberReference c = StatementExpression Assignment MemberReference theHeadline MethodInvocation c MemberReference dm MemberReference dsgr getHeadline = StatementExpression Assignment MemberReference theOffenders ClassCreator ReferenceType ListSet MemberReference dm = StatementExpression Assignment MemberReference thePriority MethodInvocation c MemberReference theOffenders MemberReference dsgr getPriority = StatementExpression Assignment MemberReference theDescription MethodInvocation c MemberReference theOffenders MemberReference dsgr getDescription = StatementExpression Assignment MemberReference theMoreInfoURL MethodInvocation c MemberReference theOffenders MemberReference dsgr getMoreInfoURL = StatementExpression Assignment MemberReference theWizard MethodInvocation c This makeWizard = MethodDeclaration Modifier private checkArgument FormalParameter ReferenceType Object dm IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference dm isAUMLElement getFacade BinaryOperation instanceof MemberReference dm ReferenceType Fig BinaryOperation instanceof MemberReference dm ReferenceType Diagram BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The offender must be a model element, "" Literal ""a Fig or a Diagram"" End ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param c the poster (critic)
     * @param offs the offenders
     * @param dsgr the designer
     */ ToDoItem FormalParameter ReferenceType Critic c FormalParameter ReferenceType ListSet offs FormalParameter ReferenceType Designer dsgr StatementExpression MethodInvocation MemberReference offs checkOffs StatementExpression Assignment MemberReference thePoster MemberReference c = StatementExpression Assignment MemberReference theHeadline MethodInvocation c MemberReference offs MemberReference dsgr getHeadline = StatementExpression Assignment MemberReference theOffenders MemberReference offs = StatementExpression Assignment MemberReference thePriority MethodInvocation c MemberReference theOffenders MemberReference dsgr getPriority = StatementExpression Assignment MemberReference theDescription MethodInvocation c MemberReference theOffenders MemberReference dsgr getDescription = StatementExpression Assignment MemberReference theMoreInfoURL MethodInvocation c MemberReference theOffenders MemberReference dsgr getMoreInfoURL = StatementExpression Assignment MemberReference theWizard MethodInvocation c This makeWizard = ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param c the poster (critic)
     */ ToDoItem FormalParameter ReferenceType Critic c StatementExpression Assignment MemberReference thePoster MemberReference c = StatementExpression Assignment MemberReference theHeadline MethodInvocation c getHeadline = StatementExpression Assignment MemberReference theOffenders ClassCreator ReferenceType ListSet = StatementExpression Assignment MemberReference thePriority MethodInvocation c Literal null Literal null getPriority = StatementExpression Assignment MemberReference theDescription MethodInvocation c Literal null Literal null getDescription = StatementExpression Assignment MemberReference theMoreInfoURL MethodInvocation c Literal null Literal null getMoreInfoURL = StatementExpression Assignment MemberReference theWizard MethodInvocation c This makeWizard = MethodDeclaration /**
     * Check the offenders.<p>
     *
     * This is called from the constructors where the offenders are given.
     *
     * TODO: Why do we only care about checking the first 2 offenders above?
     * @param offs The offenders.
     */ Modifier private checkOffs FormalParameter ReferenceType ListSet offs IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A ListSet of offenders must be supplied."" End LocalVariableDeclaration ReferenceType Object VariableDeclarator offender MethodInvocation CollectionUtil MemberReference offs getFirstItemOrNull IfStatement BinaryOperation != MemberReference offender Literal null BlockStatement StatementExpression MethodInvocation MemberReference offender checkArgument End IfStatement BinaryOperation >= MethodInvocation offs size Literal 2 BlockStatement StatementExpression Assignment MemberReference offender MethodInvocation offs Literal 1 get = StatementExpression MethodInvocation MemberReference offender checkArgument End FieldDeclaration Modifier private ReferenceType String VariableDeclarator cachedExpandedHeadline FieldDeclaration Modifier private ReferenceType String VariableDeclarator cachedExpandedDescription MethodDeclaration /**
     * @return the headline
     */ Modifier public ReferenceType String getHeadline IfStatement BinaryOperation == MemberReference cachedExpandedHeadline Literal null BlockStatement StatementExpression Assignment MemberReference cachedExpandedHeadline MethodInvocation thePoster MemberReference theHeadline MemberReference theOffenders expand = End ReturnStatement MemberReference cachedExpandedHeadline MethodDeclaration /**
     * @param h the headline
     */ Modifier public setHeadline FormalParameter ReferenceType String h StatementExpression Assignment MemberReference theHeadline MemberReference h = StatementExpression Assignment MemberReference cachedExpandedHeadline Literal null = MethodDeclaration /**
     * @return the description
     */ Modifier public ReferenceType String getDescription IfStatement BinaryOperation == MemberReference cachedExpandedDescription Literal null BlockStatement StatementExpression Assignment MemberReference cachedExpandedDescription MethodInvocation thePoster MemberReference theDescription MemberReference theOffenders expand = End ReturnStatement MemberReference cachedExpandedDescription MethodDeclaration /**
     * @param d the description
     */ Modifier public setDescription FormalParameter ReferenceType String d StatementExpression Assignment MemberReference theDescription MemberReference d = StatementExpression Assignment MemberReference cachedExpandedDescription Literal null = MethodDeclaration /**
     * @return the more-info-url
     */ Modifier public ReferenceType String getMoreInfoURL ReturnStatement MemberReference theMoreInfoURL MethodDeclaration /**
     * @param m the more-info-url
     */ Modifier public setMoreInfoURL FormalParameter ReferenceType String m StatementExpression Assignment MemberReference theMoreInfoURL MemberReference m = MethodDeclaration /**
     * @return the priority
     */ Modifier public BasicType int getPriority ReturnStatement MemberReference thePriority MethodDeclaration /**
     * @param p the priority
     */ Modifier public setPriority FormalParameter BasicType int p StatementExpression Assignment MemberReference thePriority MemberReference p = MethodDeclaration /**
     * @return the wizard progress. An integer between 0 and 100,
     *         shows percent done.
     */ Modifier public BasicType int getProgress IfStatement BinaryOperation != MemberReference theWizard Literal null BlockStatement ReturnStatement MethodInvocation theWizard getProgress End ReturnStatement Literal 0 MethodDeclaration /**
     * Reply a Set of design material's that are the subject of this ToDoItem.
     *
     * @return the offenders
     * TODO: Offenders need to be more strongly typed. - tfm 20070630
     */ Modifier public ReferenceType ListSet getOffenders AssertStatement BinaryOperation != MemberReference theOffenders Literal null AssertStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation <= MethodInvocation theOffenders size Literal 0 MethodInvocation Model MethodInvocation MethodInvocation theOffenders Literal 0 get isAUMLElement getFacade BinaryOperation instanceof MethodInvocation theOffenders Literal 0 get ReferenceType Fig BinaryOperation instanceof MethodInvocation theOffenders Literal 0 get ReferenceType Diagram ReturnStatement MemberReference theOffenders MethodDeclaration /**
     * Set the design material that is subject of this ToDoItem.
     *
     * @param offenders the offenders
     * TODO: Offenders need to be more strongly typed. - tfm 20070630
     */ Modifier public setOffenders FormalParameter ReferenceType ListSet offenders StatementExpression Assignment MemberReference theOffenders MemberReference offenders = MethodDeclaration /**
     * Reply the Critic or Designer that posted this ToDoItem.
     *
     * @return the poster
     */ Modifier public ReferenceType Poster getPoster ReturnStatement MemberReference thePoster MethodDeclaration /**
     * Return a clarifier object that can graphical highlight this
     * error in a design diagram. Return a clarifier for this todoitem,
     * if not found by the poster, or null.
     *
     * @return an Icon or null if none found.
     */ Modifier public ReferenceType Icon getClarifier ReturnStatement MethodInvocation thePoster getClarifier MethodDeclaration /**
     * @return the wizard
     */ Modifier public ReferenceType Wizard getWizard ReturnStatement MemberReference theWizard MethodDeclaration /**
     * @param type the knowledgetype
     * @return true if the poster contains the given knowledgetype
     */ Modifier public BasicType boolean containsKnowledgeType FormalParameter ReferenceType String type ReturnStatement MethodInvocation MethodInvocation MemberReference type containsKnowledgeType getPoster MethodDeclaration /**
     * @param d the decision
     * @return true if the decision is supported by the poster
     */ Modifier public BasicType boolean supports FormalParameter ReferenceType Decision d ReturnStatement MethodInvocation MethodInvocation MemberReference d supports getPoster MethodDeclaration /**
     * @param g the given goal
     * @return true if the poster supports the given goal
     */ Modifier public BasicType boolean supports FormalParameter ReferenceType Goal g ReturnStatement MethodInvocation MethodInvocation MemberReference g supports getPoster MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator code Literal 0 StatementExpression Assignment MemberReference code MethodInvocation MethodInvocation hashCode getHeadline += IfStatement BinaryOperation != MethodInvocation getPoster Literal null BlockStatement StatementExpression Assignment MemberReference code MethodInvocation MethodInvocation hashCode getPoster += End ReturnStatement MemberReference code MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType ToDoItem BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator i Cast ReferenceType ToDoItem MemberReference o IfStatement MethodInvocation ! MethodInvocation MethodInvocation i getHeadline equals getHeadline BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation == MethodInvocation getPoster MethodInvocation i getPoster BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation ! MethodInvocation MethodInvocation i getOffenders equals getOffenders BlockStatement ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration /**
     * When a ToDoItem is selected in the UiToDoList window, highlight
     * the ""offending"" design material's.
     */ Modifier public select ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference dm End End MethodDeclaration /**
     * When a ToDoItem is deselected in the UiToDoList window,
     * unhighlight the ""offending"" design material's.
     */ Modifier public deselect ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference dm End End MethodDeclaration /**
     * The user has double-clicked or otherwise indicated that they
     * want to do something active with this item. By default, just
     * re-select it, subclasses may choose to do more (e.g., navigate to
     * the offending item if it is not visible).
     */ Modifier public action StatementExpression MethodInvocation deselect StatementExpression MethodInvocation select MethodDeclaration /**
     * Notify the user interface that this ToDoItem has
     * changed. Currently, this is used to update the progress bar.
     */ Modifier public changed LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList theDesigner StatementExpression MethodInvocation list This fireToDoItemChanged MethodDeclaration /**
     * Some problems can be automatically fixed, ask the Critic to do
     * it if it can. <p>
     */ Modifier public fixIt StatementExpression MethodInvocation thePoster This Literal null fixIt MethodDeclaration /**
     * Some problems can be automatically fixed, ask the Critic to do
     * it if it can.
     *
     * @return true if the critic can automatically fix the problem
     */ Modifier public BasicType boolean canFixIt ReturnStatement MethodInvocation thePoster This canFixIt MethodDeclaration /**
     * Reply true iff this ToDoItem should be kept on the Designer's
     * ToDoList. This should return false if the poster has been
     * deactivated, or if it can be determined that the problem that
     * raised this issue is no longer present.
     *
     * @param d the given designer
     * @return true if the todoitem is still valid
     */ Modifier public BasicType boolean stillValid FormalParameter ReferenceType Designer d IfStatement BinaryOperation == MemberReference thePoster Literal null BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference theWizard Literal null MethodInvocation theWizard isStarted MethodInvocation ! theWizard isFinished BlockStatement ReturnStatement Literal true End ReturnStatement MethodInvocation thePoster This MemberReference d stillValid MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + This MethodInvocation getClass MethodInvocation getName Literal ""("" MethodInvocation getHeadline Literal "") on "" MethodInvocation MethodInvocation toString getOffenders FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 3058660098451455153L ReferenceType Serializable ReferenceType WizardItem",0
1097,1097,,0
939,939,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection InterfaceDeclaration Modifier public /**
 * The interface for the factory for ActivityGraphs.
 */ ActivityGraphsFactory MethodDeclaration /**
     * Create an empty but initialized instance of a UML ActionState.
     *
     * @return an initialized UML ActionState instance.
     */ ReferenceType Object createActionState MethodDeclaration /**
     * Create an empty but initialized instance of a UML ActivityGraph.
     *
     * @return an initialized UML ActivityGraph instance.
     */ ReferenceType Object createActivityGraph MethodDeclaration /**
     * Create an empty but initialized instance of a UML CallState.
     *
     * @return an initialized UML CallState instance.
     */ ReferenceType Object createCallState MethodDeclaration /**
     * Create an empty but initialized instance of a UML ClassifierInState.
     *
     * @return an initialized UML ClassifierInState instance.
     */ ReferenceType Object createClassifierInState MethodDeclaration /**
     * Create an empty but initialized instance of a UML ObjectFlowState.
     *
     * @return an initialized UML ObjectFlowState instance.
     */ ReferenceType Object createObjectFlowState MethodDeclaration /**
     * Create an empty but initialized instance of a UML Partition.
     *
     * @return an initialized UML Partition instance.
     */ ReferenceType Object createPartition MethodDeclaration /**
     * Create an empty but initialized instance of a UML SubactivityState.
     *
     * @return an initialized UML SubactivityState instance.
     */ ReferenceType Object createSubactivityState MethodDeclaration /**
     * Builds an activity graph owned by the given context.<p>
     *
     * @param theContext is a ModelElement that will own the graph.
     * @return the new MActivityGraph as Object
     */ ReferenceType Object buildActivityGraph FormalParameter ReferenceType Object theContext MethodDeclaration /**
     * Builds an ObjectFlowState. The ObjectFlowState will be a subvertex of
     * the given compositestate. The parameter compositeState is of
     * type Object to decouple the factory and model implementation as much as
     * possible from the rest of ArgoUML.
     *
     * @author MVW
     * @param compositeState the given compositestate
     * @return Object the newly build objectflow state.
     */ ReferenceType Object buildObjectFlowState FormalParameter ReferenceType Object compositeState MethodDeclaration /**
     * Builds a ClassifierInState. Links it to the 2 required objects:
     * the classifier that forms the type of this classifierInState,
     * and a collection of one or more states.
     *
     * @param classifier the classifier (type)
     * @param state the collection of states (inState)
     * @return the newly build classifierInState
     */ ReferenceType Object buildClassifierInState FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Collection state ReferenceType Factory",1
1135,1135,,0
1462,1462,,1
616,616,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.uml.diagram.DiagramFactory Import org.argouml.uml.diagram.ArgoDiagram ClassDeclaration Modifier public final /**
 * Action to add a new sequence diagram.
 */ ActionSequenceDiagram ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionSequenceDiagram StatementExpression SuperConstructorInvocation Literal ""action.sequence-diagram"" MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramFactory.DiagramType Sequence MethodInvocation MemberReference namespace createCollaboration Literal null createDiagram getInstance ReferenceType ActionNewDiagram",0
1329,1329,,0
33,33,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a class can never have instances (of
 * itself of any subclasses). This is done by checking that there
 * are no instance operations or attributes in the class itself
 * or in any of the realized interfaces or inherited classes.
 *
 * @author jrobbins
 */ CrUtilityViolated ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrUtilityViolated StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STORAGE addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision STEREOTYPES addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision CLASS_SELECTION addSupportedDecision StatementExpression MethodInvocation Literal ""stereotype"" addTrigger StatementExpression MethodInvocation Literal ""behavioralFeature"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator classesToCheck ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation classesToCheck MethodInvocation Model MethodInvocation MemberReference dm getSupertypes getCoreHelper addAll StatementExpression MethodInvocation classesToCheck MethodInvocation Model MethodInvocation MemberReference dm getAllRealizedInterfaces getCoreHelper addAll StatementExpression MethodInvocation classesToCheck MemberReference dm add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation classesToCheck iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! Model MethodInvocation MemberReference o isAInterface getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation Model MethodInvocation MemberReference o getAttributes MethodInvocation iterator getFacade WhileStatement MethodInvocation it2 hasNext BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation it2 next isStatic getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation Model MethodInvocation MemberReference o getOperations MethodInvocation iterator getFacade WhileStatement MethodInvocation it2 hasNext BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation it2 next isStatic getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",0
623,623,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.datatransfer.DataFlavor Import java.awt.datatransfer.Transferable Import java.awt.datatransfer.UnsupportedFlavorException Import java.io.IOException Import java.util.Collection ClassDeclaration Modifier public /**
 * A transferable wraps the data that is transferred
 * (in casu a collection of UML modelelements)
 * from a drag source to a drop target.
 * The initiator of a drag wraps data in a transferable,
 * and drops are handled by accessing a transferable's data.
 */ TransferableModelElements FieldDeclaration /**
     * The data flavor we use for collections of UML elements.
     */ Modifier public final static ReferenceType DataFlavor VariableDeclarator UML_COLLECTION_FLAVOR ClassCreator ReferenceType DataFlavor ClassReference ReferenceType Collection Literal ""UML ModelElements Collection"" FieldDeclaration Modifier private static ReferenceType DataFlavor VariableDeclarator flavors ArrayInitializer MemberReference UML_COLLECTION_FLAVOR FieldDeclaration Modifier private ReferenceType Collection VariableDeclarator theModelElements ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param data the collection of UML elements
     */ TransferableModelElements FormalParameter ReferenceType Collection data StatementExpression Assignment MemberReference theModelElements MemberReference data = MethodDeclaration Modifier public ReferenceType Object getTransferData FormalParameter ReferenceType DataFlavor dataFlavor UnsupportedFlavorException IOException IfStatement MethodInvocation dataFlavor MemberReference UML_COLLECTION_FLAVOR match BlockStatement ReturnStatement MemberReference theModelElements End ThrowStatement ClassCreator ReferenceType UnsupportedFlavorException MemberReference dataFlavor MethodDeclaration Modifier public ReferenceType DataFlavor getTransferDataFlavors ReturnStatement MemberReference flavors MethodDeclaration Modifier public BasicType boolean isDataFlavorSupported FormalParameter ReferenceType DataFlavor dataFlavor ReturnStatement MethodInvocation dataFlavor MemberReference UML_COLLECTION_FLAVOR match ReferenceType Transferable",0
747,747,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import javax.swing.AbstractAction Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.cognitive.Designer Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.ProjectBrowser Import org.argouml.ui.targetmanager.TargetManager ClassDeclaration Modifier public /**
 * Action to trigger creation of a new project.
 */ ActionNew ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNew StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.new"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.new"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.new"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump StatementExpression MethodInvocation Model MethodInvocation stopPumpingEvents getPump StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MethodInvocation Literal ""non-interactive"" getValue Literal null BlockStatement IfStatement MethodInvocation ! ProjectBrowser MethodInvocation askConfirmationAndSave getInstance BlockStatement ReturnStatement End End StatementExpression MethodInvocation ProjectBrowser MethodInvocation clearDialogs getInstance StatementExpression MethodInvocation Designer disableCritiquing StatementExpression MethodInvocation Designer clearCritiquing StatementExpression MethodInvocation TargetManager MethodInvocation cleanHistory getInstance StatementExpression MethodInvocation p remove StatementExpression Assignment MemberReference p MethodInvocation ProjectManager MethodInvocation makeEmptyProject getManager = StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation p MethodInvocation Literal 0 get getDiagramList setTarget getInstance StatementExpression MethodInvocation Designer enableCritiquing StatementExpression MethodInvocation Model MethodInvocation startPumpingEvents getPump FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 3943153836514178100L ReferenceType AbstractAction",0
759,759,"CompilationUnit PackageDeclaration org.argouml.uml.ui.model_management Import java.beans.PropertyChangeEvent Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration /**
 * Shows the ModelElements imported in a Package.
 * 
 * @author Michiel
 */ UMLClassifierPackageImportsListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierRoleBaseListModel.
     */ UMLClassifierPackageImportsListModel StatementExpression SuperConstructorInvocation Literal ""elementImport"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getImportedElements getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem IfStatement MethodInvocation ! Model MethodInvocation MemberReference elem isAElementImport getFacade BlockStatement ReturnStatement Literal false End ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference elem getPackage getFacade MethodInvocation getTarget MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent e IfStatement MethodInvocation MemberReference e isValidEvent BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation Literal true setBuildingModel StatementExpression MethodInvocation buildModelList StatementExpression MethodInvocation Literal false setBuildingModel IfStatement BinaryOperation > MethodInvocation getSize Literal 0 BlockStatement StatementExpression MethodInvocation This Literal 0 BinaryOperation - MethodInvocation getSize Literal 1 fireIntervalAdded End End ReferenceType UMLModelElementListModel2",0
1314,1314,,0
84,84,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import javax.swing.JLabel Import javax.swing.JTextField Import javax.swing.event.DocumentEvent Import javax.swing.event.DocumentListener Import org.argouml.i18n.Translator Import org.argouml.ui.AbstractArgoJPanel Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.uml.ui.TabModelTarget Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * The properties panel for a simple text / string.
 *
 */ PropPanelString FieldDeclaration Modifier private ReferenceType FigText VariableDeclarator target FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator nameLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.text"" localize FieldDeclaration Modifier private ReferenceType JTextField VariableDeclarator nameField ClassCreator ReferenceType JTextField ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ PropPanelString StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""tab.string"" localize LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation MemberReference gb setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c ipadx Literal 3 = StatementExpression Assignment MemberReference c ipady Literal 3 = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression MethodInvocation gb MemberReference nameLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference nameLabel add StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridwidth MemberReference GridBagConstraints REMAINDER = StatementExpression Assignment MemberReference c gridheight MemberReference GridBagConstraints REMAINDER = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression MethodInvocation gb MemberReference nameField MemberReference c setConstraints StatementExpression MethodInvocation MemberReference nameField add StatementExpression MethodInvocation nameField MethodInvocation This addDocumentListener getDocument StatementExpression MethodInvocation nameField Literal true setEditable MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation target This removePropertyChangeListener End IfStatement BinaryOperation instanceof MemberReference t ReferenceType FigText BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType FigText MemberReference t = StatementExpression MethodInvocation target This removePropertyChangeListener IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation target This addPropertyChangeListener End End MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target MethodDeclaration Modifier public refresh StatementExpression MethodInvocation MemberReference target setTarget MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object theTarget ReturnStatement Literal false MethodDeclaration /**
     * Set the target name.
     */ Modifier protected setTargetName MethodDeclaration Modifier public insertUpdate FormalParameter ReferenceType DocumentEvent e IfStatement BinaryOperation && BinaryOperation == MethodInvocation e getDocument MethodInvocation nameField getDocument BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation target MethodInvocation nameField getText setText StatementExpression MethodInvocation target damage End MethodDeclaration Modifier public removeUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation MemberReference e insertUpdate MethodDeclaration Modifier public changedUpdate FormalParameter ReferenceType DocumentEvent e MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && MethodInvocation evt MethodInvocation Literal ""editing"" equals getPropertyName MethodInvocation evt MethodInvocation MemberReference Boolean FALSE equals getNewValue BlockStatement StatementExpression MethodInvocation nameField MethodInvocation target getText setText End MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget ReferenceType AbstractArgoJPanel ReferenceType TabModelTarget ReferenceType PropertyChangeListener ReferenceType DocumentListener",0
461,461,"CompilationUnit PackageDeclaration org.argouml.util Import java.awt.event.ActionEvent Import java.awt.event.KeyEvent Import javax.swing.AbstractAction Import javax.swing.JComponent Import javax.swing.JDialog Import javax.swing.JRootPane Import javax.swing.KeyStroke ClassDeclaration Modifier public /**
 * Utility class for UI components
 *
 * @author andrea.nironi@gmail.com
 */ UIUtils FieldDeclaration /**
     * The key for the escape action
     */ Modifier private final static ReferenceType String VariableDeclarator ACTION_KEY_ESCAPE Literal ""escapeAction"" MethodDeclaration /**
     * This method enables exiting the dialog by pressing the escape key
     * 
     * @param dialog    the JDialog
     */ Modifier public static loadCommonKeyMap FormalParameter Modifier final ReferenceType JDialog dialog LocalVariableDeclaration ReferenceType JRootPane VariableDeclarator rootPane MethodInvocation dialog getRootPane StatementExpression MethodInvocation rootPane MethodInvocation MethodInvocation KeyStroke MemberReference KeyEvent VK_ESCAPE Literal 0 getKeyStroke MemberReference ACTION_KEY_ESCAPE put MemberReference JComponent WHEN_IN_FOCUSED_WINDOW getInputMap StatementExpression MethodInvocation rootPane MethodInvocation MemberReference ACTION_KEY_ESCAPE ClassCreator ReferenceType AbstractAction FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 0 MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent evt StatementExpression MethodInvocation dialog dispose put getActionMap",0
941,941,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import java.util.ArrayList Import java.util.Collection Import java.util.List Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram Import org.argouml.uml.generator.ui.ClassGenerationDialog Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * Action to trigger code generation for one or more classes.
 * <p>
 * In fact, only all named classes and interfaces
 * on the active diagram are generated.
 * Or, if this delivers an empty collection, all selected classes, interfaces
 * and the contents of selected packages are generated
 * (independent if they are named or not). <p>
 * TODO: Implement a more logical behaviour.
 */ ActionGenerateAll ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionGenerateAll StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.generate-all-classes"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.generate-all-classes"" localize putValue MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager IfStatement BinaryOperation instanceof MemberReference activeDiagram ReferenceType UMLClassDiagram BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType UMLClassDiagram VariableDeclarator d Cast ReferenceType UMLClassDiagram MemberReference activeDiagram LocalVariableDeclaration ReferenceType List VariableDeclarator classes ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator nodes MethodInvocation d getNodes ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator owner MemberReference nodes BlockStatement IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference owner isAClass getFacade MethodInvocation ! Model MethodInvocation MemberReference owner isAInterface getFacade BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference owner getName getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 MethodInvocation Character MethodInvocation name Literal 0 charAt isDigit BlockStatement ContinueStatement End StatementExpression MethodInvocation classes MemberReference owner add End IfStatement BinaryOperation == MethodInvocation classes size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator selectedObjects MethodInvocation TargetManager MethodInvocation getTargets getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator selected MemberReference selectedObjects BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference selected isAPackage getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference selected MethodInvocation Model MethodInvocation getUMLClass getMetaTypes getAllModelElementsOfKind getModelManagementHelper MemberReference classes addCollection StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference selected MethodInvocation Model MethodInvocation getInterface getMetaTypes getAllModelElementsOfKind getModelManagementHelper MemberReference classes addCollection IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference selected isAClass getFacade MethodInvocation Model MethodInvocation MemberReference selected isAInterface getFacade BlockStatement IfStatement MethodInvocation ! classes MemberReference selected contains BlockStatement StatementExpression MethodInvocation classes MemberReference selected add End End End End End LocalVariableDeclaration ReferenceType ClassGenerationDialog VariableDeclarator cgd ClassCreator ReferenceType ClassGenerationDialog MemberReference classes StatementExpression MethodInvocation cgd Literal true setVisible MethodDeclaration /**
     * @return true if the action is enabled and the active diagram is a class
     *         diagram
     * @see org.tigris.gef.undo.UndoableAction#isEnabled()
     */ Modifier public Annotation Override BasicType boolean isEnabled LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager ReturnStatement BinaryOperation && SuperMethodInvocation isEnabled BinaryOperation instanceof MemberReference activeDiagram ReferenceType UMLClassDiagram MethodDeclaration /**
     * Adds elements from collection without duplicates.
     */ Modifier private addCollection FormalParameter ReferenceType Collection c FormalParameter ReferenceType Collection v ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference c BlockStatement IfStatement MethodInvocation ! v MemberReference o contains BlockStatement StatementExpression MethodInvocation v MemberReference o add End End ReferenceType UndoableAction",1
1576,1576,,0
786,786,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.util.Iterator Import java.util.List Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper ClassDeclaration Modifier public abstract /**
 * An action to navigate to the previous in the list, 
 * i.e. first we go up, then down again to the previous in the list.
 * 
 * @author Michiel
 */ ActionNavigateUpPreviousDown ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNavigateUpPreviousDown StatementExpression SuperConstructorInvocation Literal ""button.go-up-previous-down"" Literal true StatementExpression MethodInvocation MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""NavigateUpPrevious"" lookupIconResource putValue MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source LocalVariableDeclaration ReferenceType Object VariableDeclarator up MethodInvocation MemberReference source getParent LocalVariableDeclaration ReferenceType List VariableDeclarator family MethodInvocation MemberReference up getFamily AssertStatement MethodInvocation family MemberReference source contains LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation family iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator previous Literal null WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation it next IfStatement BinaryOperation == MemberReference child MemberReference source BlockStatement ReturnStatement MemberReference previous End StatementExpression Assignment MemberReference previous MemberReference child = End ReturnStatement Literal null MethodDeclaration /**
     * Get the list of elements that we are navigating through.
     * 
     * @param parent the parent element that owns all elements in the list
     * @return the list
     */ Modifier public abstract ReferenceType List getFamily FormalParameter ReferenceType Object parent MethodDeclaration /**
     * Get the parent of the list of elements that we are navigating through.
     * 
     * @param child the childelement of which we seek the previous element
     * @return the parent element
     */ Modifier public abstract ReferenceType Object getParent FormalParameter ReferenceType Object child ReferenceType AbstractActionNavigate",0
1308,1308,,0
1306,1306,,0
1564,1564,,0
799,799,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Go rule to navigate from an Enumeration to its Literals. <p>
 * Enumeration->Literal.
 */ GoEnumerationToLiterals ConstructorDeclaration Modifier public /**
     * The constructor.
     */ GoEnumerationToLiterals StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade addAll End ReturnStatement MemberReference list End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.enumeration.literal"" localize MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade addAll ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
976,976,,0
1450,1450,,0
1426,1426,,0
1568,1568,,1
1611,1611,,0
68,68,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import org.argouml.model.Model Import org.tigris.gef.presentation.Fig ClassDeclaration /**
 * The buttons on selection for a DataType.
 * 
 * @author Michiel
 */ SelectionDataType ConstructorDeclaration Modifier public /**
     * Construct a new SelectionClass for the given Fig.
     *
     * @param f The given Fig.
     */ SelectionDataType FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier protected ReferenceType Object getNewNode FormalParameter BasicType int buttonCode LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent getNamespace getFacade ReturnStatement MethodInvocation Model MethodInvocation Literal """" MemberReference ns buildDataType getCoreFactory MethodDeclaration Modifier protected ReferenceType Object getNewNodeType FormalParameter BasicType int buttonCode ReturnStatement MethodInvocation Model MethodInvocation getDataType getMetaTypes ReferenceType SelectionGeneralizableElement",0
519,519,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewSubmachineState FieldDeclaration Modifier private final static ReferenceType ActionNewSubmachineState VariableDeclarator SINGLETON ClassCreator ReferenceType ActionNewSubmachineState ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewFinalState.
     */ ActionNewSubmachineState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-submachinestate"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget buildSubmachineState getStateMachinesFactory MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionNewSubmachineState getInstance ReturnStatement MemberReference SINGLETON ReferenceType AbstractActionNewModelElement",1
141,141,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import org.argouml.ui.explorer.WeakExplorerNode ClassDeclaration Modifier public /**
 * This class is a support class for The Navigation panel Go Rules.
 * Don't confuse it with anything to do with GEF nodes or the like.
 *
 * @author  alexb, d00mst
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ OutgoingDependencyNode FieldDeclaration /**
     * The parent.
     */ Modifier private ReferenceType Object VariableDeclarator parent ConstructorDeclaration Modifier public /**
     * Creates a new instance of AssociationsNode.
     *
     * @param p the parent
     */ OutgoingDependencyNode FormalParameter ReferenceType Object p StatementExpression Assignment MemberReference parent MemberReference p = MethodDeclaration /**
     * @return the parent
     */ Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal ""Outgoing Dependencies"" MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType OutgoingDependencyNode ReferenceType WeakExplorerNode",1
247,247,"CompilationUnit PackageDeclaration jdepend.framework Import java.util.Comparator ClassDeclaration Modifier public /**
 * The <code>PackageComparator</code> class is a <code>Comparator</code>
 * used to compare two <code>JavaPackage</code> instances for order using a
 * sorting strategy.
 * 
 * @author <b>Mike Clark</b>
 * @author Clarkware Consulting, Inc.
 */ PackageComparator FieldDeclaration Modifier private ReferenceType PackageComparator VariableDeclarator byWhat FieldDeclaration Modifier private static ReferenceType PackageComparator VariableDeclarator byName StatementExpression Assignment MemberReference byName ClassCreator ReferenceType PackageComparator = MethodDeclaration Modifier public static ReferenceType PackageComparator byName ReturnStatement MemberReference byName ConstructorDeclaration Modifier private PackageComparator ConstructorDeclaration Modifier public PackageComparator FormalParameter ReferenceType PackageComparator byWhat StatementExpression Assignment This MemberReference byWhat MemberReference byWhat = MethodDeclaration Modifier public ReferenceType PackageComparator byWhat ReturnStatement MemberReference byWhat MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object p1 FormalParameter ReferenceType Object p2 LocalVariableDeclaration ReferenceType JavaPackage VariableDeclarator a Cast ReferenceType JavaPackage MemberReference p1 LocalVariableDeclaration ReferenceType JavaPackage VariableDeclarator b Cast ReferenceType JavaPackage MemberReference p2 IfStatement BinaryOperation == MethodInvocation byWhat MethodInvocation byName BlockStatement ReturnStatement MethodInvocation a MethodInvocation MethodInvocation b getName compareTo getName End ReturnStatement Literal 0 ReferenceType Comparator",0
1298,1298,,0
518,518,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.Insets Import javax.swing.JLabel Import javax.swing.JPanel Import javax.swing.JTextField Import org.argouml.application.api.Argo Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager ClassDeclaration Modifier public /**
 * Tab Panel for setting the project attributes: 
 * author name and email, project description. 
 * These are stored in the project file.
 *
 * @author michiel
 */ ProjectSettingsTabProperties FieldDeclaration /**
     * This is where the user enters full name in settings tab.
     * This information is stored in the zargo file.
     */ Modifier private ReferenceType JTextField VariableDeclarator userFullname FieldDeclaration /**
     * This is where the user enters email in settings tab.
     * This information is stored in the zargo file.
     */ Modifier private ReferenceType JTextField VariableDeclarator userEmail FieldDeclaration /**
     * This is where the user enters a description of the project
     * in the settings tab.
     * This information is stored in the zargo file.
     */ Modifier private ReferenceType JTextField VariableDeclarator description FieldDeclaration /**
     * This is where the ArgoUML version that last saved this project
     * is shown in the settings tab.
     * This information is stored in the zargo file.
     */ Modifier private ReferenceType JTextField VariableDeclarator version ConstructorDeclaration /**
     * The constructor.
     */ ProjectSettingsTabProperties StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration ReferenceType JPanel VariableDeclarator top ClassCreator ReferenceType JPanel StatementExpression MethodInvocation top ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator labelConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference labelConstraints anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference labelConstraints gridy Literal 0 = StatementExpression Assignment MemberReference labelConstraints gridx Literal 0 = StatementExpression Assignment MemberReference labelConstraints gridwidth Literal 1 = StatementExpression Assignment MemberReference labelConstraints gridheight Literal 1 = StatementExpression Assignment MemberReference labelConstraints insets ClassCreator ReferenceType Insets Literal 2 Literal 20 Literal 2 Literal 4 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator fieldConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference fieldConstraints anchor MemberReference GridBagConstraints EAST = StatementExpression Assignment MemberReference fieldConstraints fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 0 = StatementExpression Assignment MemberReference fieldConstraints gridx Literal 1 = StatementExpression Assignment MemberReference fieldConstraints gridwidth Literal 3 = StatementExpression Assignment MemberReference fieldConstraints gridheight Literal 1 = StatementExpression Assignment MemberReference fieldConstraints weightx Literal 1.0 = StatementExpression Assignment MemberReference fieldConstraints insets ClassCreator ReferenceType Insets Literal 2 Literal 4 Literal 2 Literal 20 = StatementExpression Assignment MemberReference labelConstraints gridy Literal 0 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 0 = StatementExpression MethodInvocation top ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.user"" localize MemberReference labelConstraints add StatementExpression Assignment MemberReference userFullname ClassCreator ReferenceType JTextField = StatementExpression MethodInvocation top MemberReference userFullname MemberReference fieldConstraints add StatementExpression Assignment MemberReference labelConstraints gridy Literal 1 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 1 = StatementExpression MethodInvocation top ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.email"" localize MemberReference labelConstraints add StatementExpression Assignment MemberReference userEmail ClassCreator ReferenceType JTextField = StatementExpression MethodInvocation top MemberReference userEmail MemberReference fieldConstraints add StatementExpression Assignment MemberReference labelConstraints gridy Literal 2 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 2 = StatementExpression MethodInvocation top ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.project.description"" localize MemberReference labelConstraints add StatementExpression Assignment MemberReference description ClassCreator ReferenceType JTextField = StatementExpression MethodInvocation top MemberReference description MemberReference fieldConstraints add StatementExpression Assignment MemberReference labelConstraints gridy Literal 3 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 3 = StatementExpression MethodInvocation top ClassCreator ReferenceType JLabel MethodInvocation Translator Literal ""label.argouml.version"" localize MemberReference labelConstraints add StatementExpression Assignment MemberReference version ClassCreator ReferenceType JTextField = StatementExpression MethodInvocation version Literal false setEditable StatementExpression MethodInvocation top MemberReference version MemberReference fieldConstraints add StatementExpression MethodInvocation MemberReference top MemberReference BorderLayout NORTH add MethodDeclaration Modifier public handleSettingsTabRefresh LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation userFullname MethodInvocation p getAuthorname setText StatementExpression MethodInvocation userEmail MethodInvocation p getAuthoremail setText StatementExpression MethodInvocation description MethodInvocation p getDescription setText StatementExpression MethodInvocation version MethodInvocation p getVersion setText MethodDeclaration Modifier public handleSettingsTabSave LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation p MethodInvocation userFullname getText setAuthorname StatementExpression MethodInvocation p MethodInvocation userEmail getText setAuthoremail StatementExpression MethodInvocation p MethodInvocation description getText setDescription MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation handleSettingsTabRefresh MethodDeclaration Modifier public handleResetToDefault StatementExpression MethodInvocation userFullname MethodInvocation Configuration MemberReference Argo KEY_USER_FULLNAME getString setText StatementExpression MethodInvocation userEmail MethodInvocation Configuration MemberReference Argo KEY_USER_EMAIL getString setText MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal ""tab.user"" MethodDeclaration Modifier public ReferenceType JPanel getTabPanel ReturnStatement This ReferenceType JPanel ReferenceType GUISettingsTabInterface",1
468,468,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.tigris.gef.undo.UndoableAction Import org.tigris.toolbar.toolbutton.ModalAction ClassDeclaration Modifier public /**
 * This is an Action to be used for Buttons to create a guard.
 * If a guard already exists, then navigate to it.
 * 
 * @author Michiel
 */ ButtonActionNewGuard ConstructorDeclaration Modifier public ButtonActionNewGuard StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference NAME MethodInvocation getKeyName putValue StatementExpression MethodInvocation MemberReference SHORT_DESCRIPTION MethodInvocation Translator MethodInvocation getKeyName localize putValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation ResourceLoaderWrapper MethodInvocation getIconName lookupIconResource StatementExpression MethodInvocation MemberReference SMALL_ICON MemberReference icon putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation ! isEnabled ReturnStatement End StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator guard MethodInvocation Model MethodInvocation MemberReference target getGuard getFacade IfStatement BinaryOperation == MemberReference guard Literal null BlockStatement StatementExpression Assignment MemberReference guard MethodInvocation Model MethodInvocation MemberReference target buildGuard getStateMachinesFactory = End StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference guard setTarget getInstance MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isATransition getFacade MethodDeclaration Modifier protected ReferenceType String getKeyName ReturnStatement Literal ""button.new-guard"" MethodDeclaration Modifier protected ReferenceType String getIconName ReturnStatement Literal ""Guard"" ReferenceType UndoableAction ReferenceType ModalAction",1
1087,1087,,1
545,545,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.Component Import java.util.Iterator Import java.util.List Import javax.swing.DefaultListCellRenderer Import javax.swing.JLabel Import javax.swing.JList Import javax.swing.UIManager Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.InvalidElementException Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * The default cell renderer for uml model elements. Used by UMLList2 and its
 * children.
 *
 * This class must be efficient as it is called many 1000's of times.
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 2, 2003
 */ UMLListCellRenderer2 FieldDeclaration /**
     * True if the icon for the modelelement should be shown. The icon is, for
     * instance, a small class symbol for a class.
     */ Modifier private BasicType boolean VariableDeclarator showIcon FieldDeclaration /**
     * True if the containment path should be shown 
     * (to help the user disambiguate elements with the same name);
     */ Modifier private BasicType boolean VariableDeclarator showPath ConstructorDeclaration Modifier public /**
     * Constructor for UMLListCellRenderer2.
     *
     * @param showTheIcon true if the list should show icons
     */ UMLListCellRenderer2 FormalParameter BasicType boolean showTheIcon StatementExpression ExplicitConstructorInvocation MemberReference showTheIcon Literal true ConstructorDeclaration Modifier public /**
     * Constructor for UMLListCellRenderer2.
     *
     * @param showTheIcon true if the list should show icons
     * @param showThePath true if the list should show containment path
     */ UMLListCellRenderer2 FormalParameter BasicType boolean showTheIcon FormalParameter BasicType boolean showThePath StatementExpression MethodInvocation updateUI StatementExpression MethodInvocation MemberReference LEFT_ALIGNMENT setAlignmentX StatementExpression Assignment MemberReference showIcon MemberReference showTheIcon = StatementExpression Assignment MemberReference showPath MemberReference showThePath = MethodDeclaration Modifier public ReferenceType Component getListCellRendererComponent FormalParameter ReferenceType JList list FormalParameter ReferenceType Object value FormalParameter BasicType int index FormalParameter BasicType boolean isSelected FormalParameter BasicType boolean cellHasFocus IfStatement MethodInvocation Model MethodInvocation MemberReference value isAUMLElement getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation MemberReference value makeText StatementExpression MethodInvocation MemberReference text setText IfStatement MemberReference showIcon BlockStatement StatementExpression MethodInvocation MethodInvocation list getComponentOrientation setComponentOrientation IfStatement MemberReference isSelected BlockStatement StatementExpression MethodInvocation MethodInvocation list getSelectionForeground setForeground StatementExpression MethodInvocation MethodInvocation list getSelectionBackground setBackground BlockStatement StatementExpression MethodInvocation MethodInvocation list getForeground setForeground StatementExpression MethodInvocation MethodInvocation list getBackground setBackground End StatementExpression MethodInvocation MethodInvocation list isEnabled setEnabled StatementExpression MethodInvocation MethodInvocation list getFont setFont StatementExpression MethodInvocation TernaryExpression MemberReference cellHasFocus MethodInvocation UIManager Literal ""List.focusCellHighlightBorder"" getBorder MemberReference noFocusBorder setBorder StatementExpression MethodInvocation MethodInvocation ResourceLoaderWrapper MethodInvocation MemberReference value lookupIcon getInstance setIcon BlockStatement ReturnStatement SuperMethodInvocation MemberReference list MemberReference text MemberReference index MemberReference isSelected MemberReference cellHasFocus getListCellRendererComponent End IfStatement BinaryOperation instanceof MemberReference value ReferenceType String BlockStatement ReturnStatement SuperMethodInvocation MemberReference list MemberReference value MemberReference index MemberReference isSelected MemberReference cellHasFocus getListCellRendererComponent IfStatement BinaryOperation || BinaryOperation == MemberReference value Literal null MethodInvocation value Literal """" equals BlockStatement LocalVariableDeclaration ReferenceType JLabel VariableDeclarator label ClassCreator ReferenceType JLabel Literal "" "" StatementExpression MethodInvocation label Literal null setIcon ReturnStatement MemberReference label End End End ReturnStatement This MethodDeclaration /**
     * Makes the text that must be placed on the label that is returned.
     * If there is no name for the given modelelement, then
     * (anon xxx) is shown, with xxx the type name.
     *
     * @param value the given modelelement
     * @return String the text to be shown
     * 
     * TODO: I18N needed
     */ Modifier public ReferenceType String makeText FormalParameter ReferenceType Object value IfStatement BinaryOperation instanceof MemberReference value ReferenceType String BlockStatement ReturnStatement Cast ReferenceType String MemberReference value End LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference value isAParameter getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference value getType getFacade StatementExpression Assignment MemberReference name MethodInvocation MemberReference value getName = LocalVariableDeclaration ReferenceType String VariableDeclarator typeName Literal null IfStatement BinaryOperation != MemberReference type Literal null StatementExpression Assignment MemberReference typeName MethodInvocation Model MethodInvocation MemberReference type getName getFacade = End IfStatement BinaryOperation || BinaryOperation != MemberReference typeName Literal null Literal MethodInvocation MemberReference typeName equals """" BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""misc.name.withType"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference name MemberReference typeName localize = End ReturnStatement MemberReference name End IfStatement MethodInvocation Model MethodInvocation MemberReference value isAUMLElement getFacade BlockStatement TryStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference value getName = IfStatement MethodInvocation Model MethodInvocation MemberReference value isAStereotype getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator baseString Literal """" LocalVariableDeclaration ReferenceType Iterator VariableDeclarator bases MethodInvocation Model MethodInvocation MemberReference value getBaseClasses MethodInvocation iterator getFacade IfStatement MethodInvocation bases hasNext BlockStatement StatementExpression Assignment MemberReference baseString MethodInvocation MethodInvocation bases next makeText = WhileStatement MethodInvocation bases hasNext BlockStatement StatementExpression Assignment MemberReference baseString MethodInvocation Translator Literal ""misc.name.baseClassSeparator"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference baseString MethodInvocation MethodInvocation bases next makeText localize = End End StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""misc.name.withBaseClasses"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference name MemberReference baseString localize = IfStatement MemberReference showPath BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator pathList MethodInvocation Model MethodInvocation MemberReference value getPathList getModelManagementHelper LocalVariableDeclaration ReferenceType String VariableDeclarator path IfStatement BinaryOperation > MethodInvocation pathList size Literal 1 BlockStatement StatementExpression Assignment MemberReference path Cast ReferenceType String MethodInvocation pathList Literal 0 get = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i BinaryOperation - MethodInvocation pathList size Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n Cast ReferenceType String MethodInvocation pathList MemberReference i get StatementExpression Assignment MemberReference path MethodInvocation Translator Literal ""misc.name.pathSeparator"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference path MemberReference n localize = End StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""misc.name.withPath"" ArrayCreator ReferenceType Object ArrayInitializer MemberReference name MemberReference path localize = End End End CatchClause CatchClauseParameter InvalidElementException e StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""misc.name.deleted"" localize = IfStatement MethodInvocation Model MethodInvocation MemberReference value isAMultiplicity getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference value getName getFacade = BlockStatement StatementExpression Assignment MemberReference name MethodInvocation MemberReference value makeTypeName = End End ReturnStatement MemberReference name MethodDeclaration Modifier private ReferenceType String getName FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference value getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation name Literal """" equals BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Translator Literal ""misc.name.unnamed"" ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation MemberReference value makeTypeName localize = End ReturnStatement MemberReference name MethodDeclaration Modifier private ReferenceType String makeTypeName FormalParameter ReferenceType Object elem IfStatement MethodInvocation Model MethodInvocation MemberReference elem isAUMLElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference elem getUMLClassName getFacade End ReturnStatement Literal null ReferenceType DefaultListCellRenderer",0
1247,1247,,0
844,844,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public abstract /**
 * @since Oct 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ AbstractActionNewModelElement FieldDeclaration Modifier private ReferenceType Object VariableDeclarator target ConstructorDeclaration Modifier protected /**
     * The constructor.
     * Defaults to name ""action.new"", global and NO_ICON
     */ AbstractActionNewModelElement StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.new"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.new"" localize putValue ConstructorDeclaration Modifier protected /**
     * The constructor.
     *
     * @param name the to be localized name of the action
     */ AbstractActionNewModelElement FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference name localize MethodInvocation ResourceLoaderWrapper MemberReference name lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator MemberReference name localize putValue MethodDeclaration /**
     * Returns the target.
     * @return ModelElement
     */ Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target MethodDeclaration /**
     * Sets the target.
     * @param theTarget The target to set
     */ Modifier public setTarget FormalParameter ReferenceType Object theTarget StatementExpression Assignment MemberReference target MemberReference theTarget = ReferenceType UndoableAction",1
1380,1380,,0
151,151,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import javax.swing.JRadioButton Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLRadioButtonPanel Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * An action to set the concurrency of an operation.
 *
 * @author mkl
 *
 */ ActionSetOperationConcurrencyKind FieldDeclaration Modifier private final static ReferenceType ActionSetOperationConcurrencyKind VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetOperationConcurrencyKind FieldDeclaration /**
     * SEQUENTIAL_COMMAND determines the kind of concurrency.
     */ Modifier public final static ReferenceType String VariableDeclarator SEQUENTIAL_COMMAND Literal ""sequential"" FieldDeclaration /**
     * GUARDED_COMMAND determines the kind of concurrency.
     */ Modifier public final static ReferenceType String VariableDeclarator GUARDED_COMMAND Literal ""guarded"" FieldDeclaration /**
     * CONCURRENT_COMMAND determines the kind of concurrency.
     */ Modifier public final static ReferenceType String VariableDeclarator CONCURRENT_COMMAND Literal ""concurrent"" ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetElementOwnershipSpecification.
     */ ActionSetOperationConcurrencyKind StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType JRadioButton BlockStatement LocalVariableDeclaration ReferenceType JRadioButton VariableDeclarator source Cast ReferenceType JRadioButton MethodInvocation e getSource LocalVariableDeclaration ReferenceType String VariableDeclarator actionCommand MethodInvocation source getActionCommand LocalVariableDeclaration ReferenceType Object VariableDeclarator target Cast ReferenceType UMLRadioButtonPanel MethodInvocation source getParent IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator kind Literal null IfStatement MethodInvocation actionCommand MemberReference SEQUENTIAL_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getSequential getConcurrencyKind = IfStatement MethodInvocation actionCommand MemberReference GUARDED_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind = BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrent getConcurrencyKind = End End StatementExpression MethodInvocation Model MethodInvocation MemberReference m MemberReference kind setConcurrency getCoreHelper End End MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType ActionSetOperationConcurrencyKind getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",1
1549,1549,,0
245,245,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.sequence.ui Import org.tigris.gef.presentation.ArrowHeadTriangle ClassDeclaration Modifier public /**
 * Fig that represents a link on a sequence diagram that has a callaction.
 *
 * @author jaap.branderhorst@xs4all.nl
 */ FigCallActionMessage FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6483648469519347377L ConstructorDeclaration Modifier public /**
     * @param owner the owner object
     */ FigCallActionMessage FormalParameter ReferenceType Object owner StatementExpression SuperConstructorInvocation MemberReference owner StatementExpression MethodInvocation ClassCreator ReferenceType ArrowHeadTriangle setDestArrowHead StatementExpression MethodInvocation Literal false setDashed ConstructorDeclaration Modifier public /**
     *
     */ FigCallActionMessage StatementExpression ExplicitConstructorInvocation Literal null ReferenceType FigMessage",0
1316,1316,,0
1387,1387,,0
842,842,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.deployment.ui Import javax.swing.Icon Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.model.Model Import org.argouml.uml.diagram.ui.SelectionNodeClarifiers2 Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * @author 5eichler@informatik.uni-hamburg.de
 */ SelectionComponentInstance FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator dep MethodInvocation ResourceLoaderWrapper Literal ""Dependency"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator depRight MethodInvocation ResourceLoaderWrapper Literal ""DependencyRight"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator icons ArrayInitializer MemberReference dep MemberReference dep MemberReference depRight MemberReference depRight Literal null FieldDeclaration Modifier private static ReferenceType String VariableDeclarator instructions ArrayInitializer Literal ""Add a component-instance"" Literal ""Add a component-instance"" Literal ""Add a component-instance"" Literal ""Add a component-instance"" Literal null Literal ""Move object(s)"" ConstructorDeclaration Modifier public /**
     * Construct a new SelectionComponentInstanceInstance for the given Fig.
     *
     * @param f The given Fig.
     */ SelectionComponentInstance FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons ReturnStatement MemberReference icons MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewEdgeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getDependency getMetaTypes MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation createComponentInstance getCommonBehaviorFactory MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getComponentInstance getMetaTypes MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference BOTTOM BinaryOperation == MemberReference index MemberReference LEFT BlockStatement ReturnStatement Literal true End ReturnStatement Literal false ReferenceType SelectionNodeClarifiers2",0
930,930,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import javax.swing.tree.TreeModel Import org.tigris.gef.util.Predicate Import org.tigris.gef.util.PredicateTrue ClassDeclaration Modifier public abstract /**
 * @author MarkusK
 *
 */ AbstractGoList FieldDeclaration Modifier private ReferenceType Predicate VariableDeclarator listPredicate ClassCreator ReferenceType PredicateTrue MethodDeclaration /**
     * @param newPredicate the new list predicate
     */ Modifier public setListPredicate FormalParameter ReferenceType Predicate newPredicate StatementExpression Assignment MemberReference listPredicate MemberReference newPredicate = MethodDeclaration /**
     * @return the list predicate
     */ Modifier public ReferenceType Predicate getListPredicate ReturnStatement MemberReference listPredicate MethodDeclaration Modifier public ReferenceType Object getRoot ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration /**
     * @param r ignored
     */ Modifier public setRoot FormalParameter ReferenceType Object r ReferenceType TreeModel",1
1511,1511,,0
854,854,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionSetContextStateMachine FieldDeclaration /**
     * The Instance.
     */ Modifier private final static ReferenceType ActionSetContextStateMachine VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetContextStateMachine ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetCompositeStateConcurrent.
     */ ActionSetContextStateMachine StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator source Cast ReferenceType UMLComboBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference target getContext getFacade MethodInvocation source getSelectedItem BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation source getSelectedItem setContext getStateMachinesHelper End End MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType ActionSetContextStateMachine getInstance ReturnStatement MemberReference SINGLETON FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8118983979324112900L ReferenceType UndoableAction",0
1495,1495,,0
1018,1018,,1
338,338,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.collaboration Import java.beans.PropertyChangeEvent Import java.beans.VetoableChangeListener Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.Iterator Import java.util.List Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.uml.CommentEdge Import org.argouml.uml.diagram.UMLMutableGraphSupport ClassDeclaration Modifier public /**
 * This class defines a bridge between the UML meta-model
 * representation of the design and the GraphModel interface used by
 * GEF.  This class handles only UML Collaboration Diagrams.
 */ CollabDiagramGraphModel FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType CollabDiagramGraphModel getLogger MethodDeclaration /**
     * @param collaboration the collaboration to be set for this diagram
     */ Modifier public setCollaboration FormalParameter ReferenceType Object collaboration TryStatement IfStatement BinaryOperation == MemberReference collaboration Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A null collaboration was supplied"" End IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Expected a collaboration. The type received was "" MethodInvocation collaboration MethodInvocation getName getClass End CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression MethodInvocation LOG Literal ""Illegal Argument to setCollaboration"" MemberReference e error ThrowStatement MemberReference e StatementExpression MethodInvocation MemberReference collaboration setHomeModel MethodDeclaration Modifier public ReferenceType List getPorts FormalParameter ReferenceType Object nodeOrEdge IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAClassifierRole getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result End ReturnStatement MemberReference Collections EMPTY_LIST MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType Object port ReturnStatement MemberReference port MethodDeclaration Modifier public ReferenceType List getInEdges FormalParameter ReferenceType Object port IfStatement MethodInvocation Model MethodInvocation MemberReference port isAClassifierRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cr MemberReference port LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference cr getAssociationEnds getFacade IfStatement BinaryOperation == MemberReference ends Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MemberReference ends BlockStatement StatementExpression MethodInvocation result MethodInvocation Model MethodInvocation MemberReference end getAssociation getFacade add End End ReturnStatement MemberReference Collections EMPTY_LIST MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object port ReturnStatement MemberReference Collections EMPTY_LIST MethodDeclaration Modifier public Annotation Override BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade MethodInvocation ! Model MethodInvocation MemberReference node isANaryAssociation getFacade BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement Literal false End ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference node isAClassifierRole getFacade MethodInvocation Model MethodInvocation MemberReference node isAMessage getFacade MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade MethodDeclaration Modifier public Annotation Override BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator end0 Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator end1 Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation conns iterator IfStatement BinaryOperation < MethodInvocation conns size Literal 2 BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEndRole0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEndRole1 MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference associationEndRole0 Literal null BinaryOperation == MemberReference associationEndRole1 Literal null BlockStatement ReturnStatement Literal false End StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference associationEndRole0 getType getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference associationEndRole1 getType getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator gen MemberReference edge StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference gen getGeneral getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference gen getSpecific getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference edge getClients getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference clients Literal null MethodInvocation clients isEmpty BinaryOperation == MemberReference suppliers Literal null MethodInvocation suppliers isEmpty BlockStatement ReturnStatement Literal false End StatementExpression Assignment MemberReference end0 MethodInvocation clients MethodInvocation next iterator = StatementExpression Assignment MemberReference end1 MethodInvocation suppliers MethodInvocation next iterator = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference end0 Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference end1 Cast ReferenceType CommentEdge MemberReference edge = BlockStatement ReturnStatement Literal false End End End End IfStatement BinaryOperation || BinaryOperation == MemberReference end0 Literal null BinaryOperation == MemberReference end1 Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""Edge rejected. Its ends are not attached to anything"" error ReturnStatement Literal false End IfStatement BinaryOperation && MethodInvocation ! MemberReference end0 containsNode MethodInvocation ! MemberReference end0 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Edge rejected. Its source end is attached to "" MemberReference end0 Literal "" but this is not in the graph model"" error ReturnStatement Literal false End IfStatement BinaryOperation && MethodInvocation ! MemberReference end1 containsNode MethodInvocation ! MemberReference end1 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Edge rejected. Its destination end is attached to "" MemberReference end1 Literal "" but this is not in the graph model"" error ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration Modifier public Annotation Override addNode FormalParameter ReferenceType Object node StatementExpression MethodInvocation LOG Literal ""adding MClassifierRole node!!"" debug IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement End StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference node addOwnedElement getCoreHelper End StatementExpression MethodInvocation MemberReference node fireNodeAdded MethodDeclaration Modifier public Annotation Override addEdge FormalParameter ReferenceType Object edge StatementExpression MethodInvocation LOG Literal ""adding class edge!!!!!!"" debug IfStatement MethodInvocation ! MemberReference edge canAddEdge BlockStatement ReturnStatement End StatementExpression MethodInvocation MethodInvocation MemberReference edge add getEdges IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference edge isAModelElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference edge getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference edge addOwnedElement getCoreHelper End StatementExpression MethodInvocation MemberReference edge fireEdgeAdded MethodDeclaration Modifier public Annotation Override addNodeRelatedEdges FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node addNodeRelatedEdges IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getAssociationEnds getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MemberReference ends BlockStatement IfStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference end getAssociation getFacade canAddEdge BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference end getAssociation getFacade addEdge End End End IfStatement MethodInvocation Model MethodInvocation MemberReference node isAGeneralizableElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator generalizations MethodInvocation Model MethodInvocation MemberReference node getGeneralizations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator generalization MemberReference generalizations BlockStatement IfStatement MethodInvocation MemberReference generalization canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference generalization addEdge ReturnStatement End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference node getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator specialization MemberReference specializations BlockStatement IfStatement MethodInvocation MemberReference specialization canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference specialization addEdge ReturnStatement End End End IfStatement MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator dependencies ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference node getClientDependencies getFacade StatementExpression MethodInvocation dependencies MethodInvocation Model MethodInvocation MemberReference node getSupplierDependencies getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dependency MemberReference dependencies BlockStatement IfStatement MethodInvocation MemberReference dependency canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference dependency addEdge ReturnStatement End End End MethodDeclaration Modifier public Annotation Override BasicType boolean canConnect FormalParameter ReferenceType Object fromP FormalParameter ReferenceType Object toP IfStatement BinaryOperation && MethodInvocation Model getFacade MethodInvocation Model getFacade BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement Literal MethodInvocation MethodInvocation pce getPropertyName equals ""ownedElement"" BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator oldOwned Cast ReferenceType List MethodInvocation pce getOldValue LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation pce getNewValue LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation Model MethodInvocation MemberReference eo getModelElement getFacade IfStatement MethodInvocation oldOwned MemberReference eo contains BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""model removed "" MemberReference me debug IfStatement MethodInvocation Model MethodInvocation MemberReference me isAClassifier getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeNode End IfStatement MethodInvocation Model MethodInvocation MemberReference me isAMessage getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeNode End IfStatement MethodInvocation Model MethodInvocation MemberReference me isAAssociation getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeEdge End BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""model added "" MemberReference me debug End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 4895696235473642985L ReferenceType UMLMutableGraphSupport ReferenceType VetoableChangeListener",0
522,522,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.ArrayList Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLRadioButtonPanel ClassDeclaration Modifier public /**
 * A panel for the concurrency settings of an operation.
 *
 * @author mkl
 */ UMLOperationConcurrencyRadioButtonPanel FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String VariableDeclarator labelTextsAndActionCommands MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String getCommands IfStatement BinaryOperation == MemberReference labelTextsAndActionCommands Literal null BlockStatement StatementExpression Assignment MemberReference labelTextsAndActionCommands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.concurrency-sequential"" localize MemberReference ActionSetOperationConcurrencyKind SEQUENTIAL_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.concurrency-guarded"" localize MemberReference ActionSetOperationConcurrencyKind GUARDED_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.concurrency-concurrent"" localize MemberReference ActionSetOperationConcurrencyKind CONCURRENT_COMMAND add End ReturnStatement MemberReference labelTextsAndActionCommands ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param title the title of the panel
     * @param horizontal determines the orientation
     */ UMLOperationConcurrencyRadioButtonPanel FormalParameter ReferenceType String title FormalParameter BasicType boolean horizontal StatementExpression SuperConstructorInvocation MemberReference title MethodInvocation getCommands Literal ""concurrency"" MethodInvocation ActionSetOperationConcurrencyKind getInstance MemberReference horizontal MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getConcurrency getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getSequential getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetOperationConcurrencyKind SEQUENTIAL_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetOperationConcurrencyKind GUARDED_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getConcurrent getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetOperationConcurrencyKind CONCURRENT_COMMAND setSelected BlockStatement StatementExpression MethodInvocation MemberReference ActionSetOperationConcurrencyKind SEQUENTIAL_COMMAND setSelected End End End End End ReferenceType UMLRadioButtonPanel",1
1343,1343,,0
819,819,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Oct 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLInteractionContextListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLInteractionContextListModel.
     */ UMLInteractionContextListModel StatementExpression SuperConstructorInvocation Literal ""context"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getContext getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem isACollaboration getFacade MethodInvocation Model MethodInvocation MemberReference elem getInteractions MethodInvocation MethodInvocation getTarget contains getFacade ReferenceType UMLModelElementListModel2",0
416,416,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Graphics Import org.tigris.gef.base.SelectionMove Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 *
 *
 *
 * @author jrobbins
 */ SelectionMoveClarifiers ConstructorDeclaration Modifier public /** Construct a new SelectionMoveClarifiers for the given Fig
     *
     * @param f the given Fig
     */ SelectionMoveClarifiers FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration /**
     * Paint the handles at the four corners and midway along each edge of the
     * bounding box.
     *
     * @see org.tigris.gef.base.Selection#paint(java.awt.Graphics)
     */ Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression Cast ReferenceType Clarifiable MethodInvocation getContent StatementExpression SuperMethodInvocation MemberReference g paint ReferenceType SelectionMove",0
784,784,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * This critics tests if a ModelElement has a name.
 */ CrMissingClassName ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMissingClassName StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_COMPLETENESS MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""name"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator e MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference e getName getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal """" equals BinaryOperation == MethodInvocation myName length Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClClassName getTheInstance MethodDeclaration Modifier public initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w getToDoItem LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference me getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference count MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference me getNamespace getFacade getOwnedElements MethodInvocation size getFacade = End StatementExpression Assignment MemberReference sug BinaryOperation + MethodInvocation Model MethodInvocation MemberReference me getUMLClassName getFacade BinaryOperation + MemberReference count Literal 1 = StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w End MethodDeclaration Modifier public ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizMEName ReferenceType CrUML",0
98,98,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewCallAction FieldDeclaration Modifier private final static ReferenceType ActionNewCallAction VariableDeclarator SINGLETON ClassCreator ReferenceType ActionNewCallAction ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewCallAction.
     */ ActionNewCallAction StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-callaction"" localize putValue MethodDeclaration Modifier protected ReferenceType Object createAction ReturnStatement MethodInvocation Model MethodInvocation createCallAction getCommonBehaviorFactory MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionNewCallAction getInstance ReturnStatement MemberReference SINGLETON MethodDeclaration /**
     * @return an instanceof this class usable for a button
     */ Modifier public static ReferenceType ActionNewAction getButtonInstance LocalVariableDeclaration ReferenceType ActionNewAction VariableDeclarator a ClassCreator ReferenceType ActionNewCallAction MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade ReturnStatement End StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation a MemberReference SHORT_DESCRIPTION MethodInvocation a MemberReference Action NAME getValue putValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation ResourceLoaderWrapper Literal ""CallAction"" lookupIconResource StatementExpression MethodInvocation a MemberReference SMALL_ICON MemberReference icon putValue StatementExpression MethodInvocation a MemberReference ROLE MemberReference Roles EFFECT putValue ReturnStatement MemberReference a ReferenceType ActionNewAction",0
392,392,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Go rule for the package perspective to show the comments belonging to some
 * modelelement. <p>
 * ModelElement->Comment
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 21, 2003
 */ GoModelElementToComment MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getComments getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.model-element.comment"" localize MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
556,556,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a state has no outgoing transitions.
 *
 * @author jrobbins
 */ CrNoTransitions ConstructorDeclaration Modifier public /**
     * Constructor.
     */ CrNoTransitions StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_COMPLETENESS setKnowledgeTypes StatementExpression MethodInvocation Literal ""incoming"" addTrigger StatementExpression MethodInvocation Literal ""outgoing"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference dm IfStatement MethodInvocation Model MethodInvocation MemberReference sv isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sm MethodInvocation Model MethodInvocation MemberReference sv getStateMachine getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference sm Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference sm getTop getFacade MemberReference sv BlockStatement ReturnStatement MemberReference NO_PROBLEM End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator outgoing MethodInvocation Model MethodInvocation MemberReference sv getOutgoings getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator incoming MethodInvocation Model MethodInvocation MemberReference sv getIncomings getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator needsOutgoing BinaryOperation || BinaryOperation == MemberReference outgoing Literal null BinaryOperation == MethodInvocation outgoing size Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator needsIncoming BinaryOperation || BinaryOperation == MemberReference incoming Literal null BinaryOperation == MethodInvocation incoming size Literal 0 IfStatement MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getJunction getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getInitial getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference needsIncoming Literal false = End End IfStatement MethodInvocation Model MethodInvocation MemberReference sv isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference needsOutgoing Literal false = End IfStatement BinaryOperation && MemberReference needsIncoming MemberReference needsOutgoing BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",1
927,927,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public abstract /**
 * Framework action to set the multiplicity of some modelelement.
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 6, 2003
 */ ActionSetMultiplicity ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetMultiplicity.
     */ ActionSetMultiplicity StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource IfStatement BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator selected Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator target Cast ReferenceType UMLComboBox2 MemberReference source IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null BinaryOperation != MemberReference selected Literal null StatementExpression MethodInvocation MemberReference selected MemberReference target setSelectedItem End End MethodDeclaration /**
     * The user should implement this method to set the multiplicity (the given
     * item) for the target of the comboboxmodel (target
     * @param item The multiplicity that should be set
     * @param target The target of the comboboxmodel (the modelelement that
     * should have its multiplicity set).
     */ Modifier public abstract setSelectedItem FormalParameter ReferenceType Object item FormalParameter ReferenceType Object target ReferenceType UndoableAction",1
374,374,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Dimension Import java.awt.event.ActionEvent Import javax.swing.JPanel Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.util.ArgoDialog ClassDeclaration Modifier public /**
 * The dialog that allows the user to go to any diagram in the project
 * by doubleclicking on it.<p>
 *
 * This dialog is not modal, and can stay open while the user
 * is working on the model. It is even possible to open multiple
 * of these dialogs, although the purpose of such useraction eludes me.<p>
 *
 * TODO: This dialog should have multiple tabs named ""Help"", ""Diagram"",
 * ""Classifier"", ""StateVertex"", etc. Which would allow the user to go to other
 * things than diagrams.
 *
 * @author MVW
 *
 */ GotoDialog FieldDeclaration Modifier private final ReferenceType TabResults VariableDeclarator allDiagrams ClassCreator ReferenceType TabResults Literal false ConstructorDeclaration Modifier public /**
     * The constructor.
     */ GotoDialog StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""dialog.gotodiagram.title"" localize MemberReference ArgoDialog OK_CANCEL_OPTION Literal false LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation allDiagrams MethodInvocation p getDiagramList MethodInvocation p getDiagramList setResults StatementExpression MethodInvocation allDiagrams ClassCreator ReferenceType Dimension MethodInvocation allDiagrams MemberReference width getPreferredSize BinaryOperation / MethodInvocation allDiagrams MemberReference height getPreferredSize Literal 2 setPreferredSize StatementExpression MethodInvocation allDiagrams Literal 0 selectResult LocalVariableDeclaration ReferenceType JPanel VariableDeclarator mainPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout StatementExpression MethodInvocation mainPanel MemberReference allDiagrams MemberReference BorderLayout CENTER add StatementExpression MethodInvocation MemberReference mainPanel setContent MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement BinaryOperation == MethodInvocation e getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation allDiagrams doDoubleClick BlockStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed End MethodDeclaration Modifier protected nameButtons StatementExpression SuperMethodInvocation nameButtons StatementExpression MethodInvocation MethodInvocation getOkButton Literal ""button.go-to-selection"" nameButton StatementExpression MethodInvocation MethodInvocation getCancelButton Literal ""button.close"" nameButton ReferenceType ArgoDialog",0
241,241,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLStateExitListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateExitListModel.
     */ UMLStateExitListModel StatementExpression SuperConstructorInvocation Literal ""exit"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getExit getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MemberReference element MethodInvocation Model MethodInvocation MethodInvocation getTarget getExit getFacade ReferenceType UMLModelElementListModel2",0
1373,1373,,0
1194,1194,,0
547,547,"CompilationUnit PackageDeclaration org.argouml.uml.reveng.java Import org.argouml.model.Model ClassDeclaration /**
   This context is a specific classifier.
*/ ClassifierContext FieldDeclaration /** The classifier this context represents. */ Modifier private ReferenceType Object VariableDeclarator mClassifier ConstructorDeclaration Modifier public /**
       Create a new context from a classifier.

       @param base Based on this context.
       @param classifier Represents this classifier.
    */ ClassifierContext FormalParameter ReferenceType Context base FormalParameter ReferenceType Object classifier StatementExpression SuperConstructorInvocation MemberReference base StatementExpression Assignment This MemberReference mClassifier MemberReference classifier = MethodDeclaration Modifier public ReferenceType Object getInterface FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal true get MethodDeclaration /**
     * Get the classifier for a given name
     *
     * @param classifierName The name of the classifier to retrieve.
     * @return A classifier for the name.
     */ Modifier public ReferenceType Object get FormalParameter ReferenceType String classifierName ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference classifierName Literal false get MethodDeclaration /**
     * Get the classifier for a given name
     * 
     * @param classifierName
     *            The name of the classifier to retrieve.
     * @return A classifier for the name.
     */ Modifier public ReferenceType Object get FormalParameter ReferenceType String classifierName FormalParameter BasicType boolean interfacesOnly ClassifierNotFoundException IfStatement BinaryOperation && MethodInvocation classifierName MethodInvocation Model MethodInvocation MemberReference mClassifier getName getFacade equals BinaryOperation || MemberReference ! interfacesOnly MethodInvocation Model MethodInvocation MemberReference mClassifier isAInterface getFacade BlockStatement ReturnStatement MemberReference mClassifier BlockStatement IfStatement BinaryOperation != MethodInvocation getContext Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference classifierName MemberReference interfacesOnly get getContext BlockStatement ReturnStatement Literal null End End ReferenceType Context",0
1544,1544,,0
906,906,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import java.util.ArrayList Import java.util.Collection Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 ClassDeclaration Modifier public /**
 * @since Oct 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 * @stereotype singleton
 */ ActionAddClassifierRoleBase FieldDeclaration /**
     * The one and only instance of this class.
     */ Modifier public final static ReferenceType ActionAddClassifierRoleBase VariableDeclarator SINGLETON ClassCreator ReferenceType ActionAddClassifierRoleBase ConstructorDeclaration Modifier protected /**
     * Constructor for ActionAddClassifierRoleBase.
     */ ActionAddClassifierRoleBase StatementExpression SuperConstructorInvocation MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation getTarget getAllPossibleBases getCollaborationsHelper addAll ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases getFacade addAll ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-bases"" localize MethodDeclaration Modifier protected doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator role MethodInvocation getTarget StatementExpression MethodInvocation Model MethodInvocation MemberReference role MemberReference selected setBases getCollaborationsHelper ReferenceType AbstractActionAddModelElement2",1
1210,1210,,0
998,998,,1
1562,1562,,0
24,24,"CompilationUnit PackageDeclaration org.argouml.notation Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.util.List Import javax.swing.Icon Import org.apache.log4j.Logger Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoNotationEvent Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.configuration.Configuration Import org.argouml.configuration.ConfigurationKey ClassDeclaration Modifier public final /**
 * Provides centralized methods dealing with notation.
 *
 * @stereotype singleton
 * @author Thierry Lach
 * @since 0.9.4
 */ Notation FieldDeclaration /**
     * Define a static log4j category variable for ArgoUML notation.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType Notation getLogger FieldDeclaration /**
     * The name of the default ArgoUML notation.  This notation is
     * part of ArgoUML core distribution.
     */ Modifier private static ReferenceType NotationName VariableDeclarator notationArgo MethodInvocation Literal ""UML"" Literal ""1.4"" MethodInvocation ResourceLoaderWrapper Literal ""UmlNotation"" lookupIconResource makeNotation FieldDeclaration /**
     * The configuration key for the preferred notation.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_DEFAULT_NOTATION MethodInvocation Configuration Literal ""notation"" Literal ""default"" makeKey FieldDeclaration /**
     * The configuration key that indicates whether to show stereotypes
     * in the navigation panel.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_STEREOTYPES MethodInvocation Configuration Literal ""notation"" Literal ""navigation"" Literal ""show"" Literal ""stereotypes"" makeKey FieldDeclaration /**
     * The configuration key that indicates whether to show stereotypes
     * in the navigation panel.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_SINGULAR_MULTIPLICITIES MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""singularmultiplicities"" makeKey FieldDeclaration /**
     * The configuration key that indicates whether to show bold names.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_BOLD_NAMES MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""bold"" Literal ""names"" makeKey FieldDeclaration /**
     * The configuration key that indicates whether to use guillemots
     * or greater/lessthan characters in stereotypes.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_USE_GUILLEMOTS MethodInvocation Configuration Literal ""notation"" Literal ""guillemots"" makeKey FieldDeclaration /**
     * Indicates if the user wants to see visibility signs (public,
     * private, protected or # + -).
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_VISIBILITY MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""visibility"" makeKey FieldDeclaration /**
     * Indicates if the user wants to see multiplicity in attributes
     * and classes.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_MULTIPLICITY MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""multiplicity"" makeKey FieldDeclaration /**
     * Indicates if the user wants to see the initial value.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_INITIAL_VALUE MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""initialvalue"" makeKey FieldDeclaration /**
     * Indicates if the user wants to see the properties (everything
     * between braces), that is for example the concurrency.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_PROPERTIES MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""properties"" makeKey FieldDeclaration /**
     * Indicates if the user wants to see the types and parameters
     * of attributes and operations.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_SHOW_TYPES MethodInvocation Configuration Literal ""notation"" Literal ""show"" Literal ""types"" makeKey FieldDeclaration /**
     * Default value for the shadow size of classes, interfaces etc.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_DEFAULT_SHADOW_WIDTH MethodInvocation Configuration Literal ""notation"" Literal ""default"" Literal ""shadow-width"" makeKey FieldDeclaration /**
     * The instance.
     */ Modifier private final static ReferenceType Notation VariableDeclarator SINGLETON ClassCreator ReferenceType Notation ConstructorDeclaration Modifier private /**
     * The constructor.
     */ Notation StatementExpression MethodInvocation Configuration MemberReference KEY_SHOW_BOLD_NAMES This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_USE_GUILLEMOTS This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_DEFAULT_NOTATION This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_SHOW_TYPES This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_SHOW_MULTIPLICITY This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_SHOW_PROPERTIES This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_SHOW_VISIBILITY This addListener StatementExpression MethodInvocation Configuration MemberReference KEY_SHOW_INITIAL_VALUE This addListener MethodDeclaration /**
     * @param n the NotationName that will become default
     */ Modifier public static setDefaultNotation FormalParameter ReferenceType NotationName n StatementExpression MethodInvocation LOG BinaryOperation + Literal ""default notation set to "" MethodInvocation n getConfigurationValue info StatementExpression MethodInvocation Configuration MemberReference KEY_DEFAULT_NOTATION MethodInvocation n getConfigurationValue setString MethodDeclaration /**
     * Convert a String into a NotationName.
     * @param s the String
     * @return the matching Notationname
     */ Modifier public static ReferenceType NotationName findNotation FormalParameter ReferenceType String s ReturnStatement MethodInvocation NotationNameImpl MemberReference s findNotation MethodDeclaration /**
     * Returns the Notation as set in the menu.
     *
     * @return the default NotationName
     */ Modifier public static ReferenceType NotationName getConfiguredNotation LocalVariableDeclaration ReferenceType NotationName VariableDeclarator n MethodInvocation NotationNameImpl MethodInvocation Configuration MemberReference KEY_DEFAULT_NOTATION MethodInvocation notationArgo getConfigurationValue getString findNotation IfStatement BinaryOperation == MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference n MethodInvocation NotationNameImpl Literal ""UML 1.4"" findNotation = End StatementExpression MethodInvocation LOG BinaryOperation + Literal ""default notation is "" MethodInvocation n getConfigurationValue debug ReturnStatement MemberReference n MethodDeclaration /**
     * @return the singleton
     */ Modifier public static ReferenceType Notation getInstance ReturnStatement MemberReference SINGLETON MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Notation change:"" MethodInvocation pce getOldValue Literal "" to "" MethodInvocation pce getNewValue info StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoNotationEvent MemberReference ArgoEventTypes NOTATION_CHANGED MemberReference pce fireEvent MethodDeclaration /**
     * Get list of available notations, of type NotationName.
     * This returns an immutable list so that 
     * the implementation type isn't exposed in the API.
     *
     * @return list of available notations
     */ Modifier public static ReferenceType List TypeArgument ReferenceType NotationName getAvailableNotations ReturnStatement MethodInvocation NotationNameImpl getAvailableNotations MethodDeclaration /**
     * Remove a complete Notation language.
     * This is to be used by plugins that implement their own notation, 
     * and that are removed. <p>
     * This function fails if the given notation does not exist.
     * 
     * @param theNotation the given NotationName
     * @return true if the Notation indeed is removed
     */ Modifier public static BasicType boolean removeNotation FormalParameter ReferenceType NotationName theNotation ReturnStatement MethodInvocation NotationNameImpl MemberReference theNotation removeNotation MethodDeclaration /**
     * Create a versioned notation name with an icon.
     *
     * @param k1 the name (e.g. UML)
     * @param k2 the version (e.g. 1.3)
     * @param icon the icon
     * @return the notation name
     */ Modifier public static ReferenceType NotationName makeNotation FormalParameter ReferenceType String k1 FormalParameter ReferenceType String k2 FormalParameter ReferenceType Icon icon LocalVariableDeclaration ReferenceType NotationName VariableDeclarator nn MethodInvocation NotationNameImpl MemberReference k1 MemberReference k2 MemberReference icon makeNotation ReturnStatement MemberReference nn ReferenceType PropertyChangeListener",0
1149,1149,,1
1022,1022,,1
53,53,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.util.ArrayList Import java.util.Arrays Import java.util.Collection Import java.util.List Import java.util.StringTokenizer Import org.apache.log4j.Logger Import org.argouml.application.api.Argo Import org.argouml.configuration.Configuration Import org.argouml.ui.explorer.rules.GoAssocRoleToMessages Import org.argouml.ui.explorer.rules.GoBehavioralFeatureToStateDiagram Import org.argouml.ui.explorer.rules.GoBehavioralFeatureToStateMachine Import org.argouml.ui.explorer.rules.GoClassToAssociatedClass Import org.argouml.ui.explorer.rules.GoClassToNavigableClass Import org.argouml.ui.explorer.rules.GoClassToSummary Import org.argouml.ui.explorer.rules.GoClassifierToBehavioralFeature Import org.argouml.ui.explorer.rules.GoClassifierToCollaboration Import org.argouml.ui.explorer.rules.GoClassifierToInstance Import org.argouml.ui.explorer.rules.GoClassifierToSequenceDiagram Import org.argouml.ui.explorer.rules.GoClassifierToStateMachine Import org.argouml.ui.explorer.rules.GoClassifierToStructuralFeature Import org.argouml.ui.explorer.rules.GoCollaborationToDiagram Import org.argouml.ui.explorer.rules.GoCollaborationToInteraction Import org.argouml.ui.explorer.rules.GoComponentToResidentModelElement Import org.argouml.ui.explorer.rules.GoCompositeStateToSubvertex Import org.argouml.ui.explorer.rules.GoDiagramToEdge Import org.argouml.ui.explorer.rules.GoDiagramToNode Import org.argouml.ui.explorer.rules.GoElementToMachine Import org.argouml.ui.explorer.rules.GoEnumerationToLiterals Import org.argouml.ui.explorer.rules.GoGeneralizableElementToSpecialized Import org.argouml.ui.explorer.rules.GoInteractionToMessages Import org.argouml.ui.explorer.rules.GoLinkToStimuli Import org.argouml.ui.explorer.rules.GoMessageToAction Import org.argouml.ui.explorer.rules.GoModelElementToBehavior Import org.argouml.ui.explorer.rules.GoModelElementToComment Import org.argouml.ui.explorer.rules.GoModelElementToContainedDiagrams Import org.argouml.ui.explorer.rules.GoModelElementToContainedLostElements Import org.argouml.ui.explorer.rules.GoModelElementToContents Import org.argouml.ui.explorer.rules.GoModelToBaseElements Import org.argouml.ui.explorer.rules.GoModelToCollaboration Import org.argouml.ui.explorer.rules.GoModelToDiagrams Import org.argouml.ui.explorer.rules.GoModelToElements Import org.argouml.ui.explorer.rules.GoModelToNode Import org.argouml.ui.explorer.rules.GoNamespaceToClassifierAndPackage Import org.argouml.ui.explorer.rules.GoNamespaceToDiagram Import org.argouml.ui.explorer.rules.GoNamespaceToOwnedElements Import org.argouml.ui.explorer.rules.GoNodeToResidentComponent Import org.argouml.ui.explorer.rules.GoOperationToCollaboration Import org.argouml.ui.explorer.rules.GoOperationToCollaborationDiagram Import org.argouml.ui.explorer.rules.GoOperationToSequenceDiagram Import org.argouml.ui.explorer.rules.GoPackageToClass Import org.argouml.ui.explorer.rules.GoPackageToElementImport Import org.argouml.ui.explorer.rules.GoProfileConfigurationToProfile Import org.argouml.ui.explorer.rules.GoProfileToModel Import org.argouml.ui.explorer.rules.GoProjectToCollaboration Import org.argouml.ui.explorer.rules.GoProjectToDiagram Import org.argouml.ui.explorer.rules.GoProjectToModel Import org.argouml.ui.explorer.rules.GoProjectToProfileConfiguration Import org.argouml.ui.explorer.rules.GoProjectToRoots Import org.argouml.ui.explorer.rules.GoProjectToStateMachine Import org.argouml.ui.explorer.rules.GoSignalToReception Import org.argouml.ui.explorer.rules.GoStateMachineToState Import org.argouml.ui.explorer.rules.GoStateMachineToTop Import org.argouml.ui.explorer.rules.GoStateMachineToTransition Import org.argouml.ui.explorer.rules.GoStateToDoActivity Import org.argouml.ui.explorer.rules.GoStateToDownstream Import org.argouml.ui.explorer.rules.GoStateToEntry Import org.argouml.ui.explorer.rules.GoStateToExit Import org.argouml.ui.explorer.rules.GoStateToIncomingTrans Import org.argouml.ui.explorer.rules.GoStateToInternalTrans Import org.argouml.ui.explorer.rules.GoStateToOutgoingTrans Import org.argouml.ui.explorer.rules.GoStatemachineToDiagram Import org.argouml.ui.explorer.rules.GoStereotypeToTagDefinition Import org.argouml.ui.explorer.rules.GoStimulusToAction Import org.argouml.ui.explorer.rules.GoSubmachineStateToStateMachine Import org.argouml.ui.explorer.rules.GoSummaryToAssociation Import org.argouml.ui.explorer.rules.GoSummaryToAttribute Import org.argouml.ui.explorer.rules.GoSummaryToIncomingDependency Import org.argouml.ui.explorer.rules.GoSummaryToInheritance Import org.argouml.ui.explorer.rules.GoSummaryToOperation Import org.argouml.ui.explorer.rules.GoSummaryToOutgoingDependency Import org.argouml.ui.explorer.rules.GoTransitionToGuard Import org.argouml.ui.explorer.rules.GoTransitionToSource Import org.argouml.ui.explorer.rules.GoTransitionToTarget Import org.argouml.ui.explorer.rules.GoTransitiontoEffect Import org.argouml.ui.explorer.rules.GoUseCaseToExtensionPoint Import org.argouml.ui.explorer.rules.PerspectiveRule ClassDeclaration Modifier public final /**
 * Provides a model and event management for perspectives(views) of the
 * Explorer.<p>
 *
 * This class defines the complete list of perspective rules, and knows the
 * default perspectives and their contents.
 *
 * @author alexb
 * @since 0.15.2
 */ PerspectiveManager FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType PerspectiveManager getLogger FieldDeclaration Modifier private static ReferenceType PerspectiveManager VariableDeclarator instance FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType PerspectiveManagerListener VariableDeclarator perspectiveListeners FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ExplorerPerspective VariableDeclarator perspectives FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType PerspectiveRule VariableDeclarator rules MethodDeclaration /**
     * @return the instance (singleton)
     */ Modifier public static ReferenceType PerspectiveManager getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType PerspectiveManager = End ReturnStatement MemberReference instance ConstructorDeclaration Modifier private /**
     * Creates a new instance of PerspectiveManager.
     */ PerspectiveManager StatementExpression Assignment MemberReference perspectiveListeners ClassCreator ReferenceType ArrayList TypeArgument ReferenceType PerspectiveManagerListener = StatementExpression Assignment MemberReference perspectives ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExplorerPerspective = StatementExpression Assignment MemberReference rules ClassCreator ReferenceType ArrayList TypeArgument ReferenceType PerspectiveRule = StatementExpression MethodInvocation loadRules MethodDeclaration /**
     * @param listener
     *            the listener to be added
     */ Modifier public addListener FormalParameter ReferenceType PerspectiveManagerListener listener StatementExpression MethodInvocation perspectiveListeners MemberReference listener add MethodDeclaration /**
     * @param listener
     *            the listener to be removed
     */ Modifier public removeListener FormalParameter ReferenceType PerspectiveManagerListener listener StatementExpression MethodInvocation perspectiveListeners MemberReference listener remove MethodDeclaration /**
     * @param perspective
     *            the perspective to be added
     */ Modifier public addPerspective FormalParameter ReferenceType ExplorerPerspective perspective StatementExpression MethodInvocation perspectives MemberReference perspective add ForStatement EnhancedForControl VariableDeclaration ReferenceType PerspectiveManagerListener VariableDeclarator listener MemberReference perspectiveListeners BlockStatement StatementExpression MethodInvocation listener MemberReference perspective addPerspective End MethodDeclaration /**
     * @param newPerspectives
     *            the collection of perspectives to be added
     */ Modifier public addAllPerspectives FormalParameter ReferenceType Collection TypeArgument ReferenceType ExplorerPerspective newPerspectives ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator newPerspective MemberReference newPerspectives BlockStatement StatementExpression MethodInvocation MemberReference newPerspective addPerspective End MethodDeclaration /**
     * @param perspective
     *            the perspective to be removed
     */ Modifier public removePerspective FormalParameter ReferenceType ExplorerPerspective perspective StatementExpression MethodInvocation perspectives MemberReference perspective remove ForStatement EnhancedForControl VariableDeclaration ReferenceType PerspectiveManagerListener VariableDeclarator listener MemberReference perspectiveListeners BlockStatement StatementExpression MethodInvocation listener MemberReference perspective removePerspective End MethodDeclaration /**
     * Remove all perspectives.
     */ Modifier public removeAllPerspectives LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ExplorerPerspective VariableDeclarator pers ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExplorerPerspective StatementExpression MethodInvocation pers MethodInvocation getPerspectives addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator perspective MemberReference pers BlockStatement StatementExpression MethodInvocation MemberReference perspective removePerspective End MethodDeclaration /**
     * @return the list of all perspectives
     */ Modifier public ReferenceType List TypeArgument ReferenceType ExplorerPerspective getPerspectives ReturnStatement MemberReference perspectives MethodDeclaration /**
     * Tries to load user defined perspectives, if it can't it loads the
     * (predefined) default perspectives.
     */ Modifier public loadUserPerspectives LocalVariableDeclaration ReferenceType String VariableDeclarator userPerspectives MethodInvocation Configuration MemberReference Argo KEY_USER_EXPLORER_PERSPECTIVES Literal """" getString LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator pst ClassCreator ReferenceType StringTokenizer MemberReference userPerspectives Literal "";"" IfStatement MethodInvocation pst hasMoreTokens BlockStatement WhileStatement MethodInvocation pst hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator perspective MethodInvocation pst nextToken LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator perspectiveDetails ClassCreator ReferenceType StringTokenizer MemberReference perspective Literal "","" LocalVariableDeclaration ReferenceType String VariableDeclarator perspectiveName MethodInvocation perspectiveDetails nextToken LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator userDefinedPerspective ClassCreator ReferenceType ExplorerPerspective MemberReference perspectiveName IfStatement MethodInvocation perspectiveDetails hasMoreTokens BlockStatement WhileStatement MethodInvocation perspectiveDetails hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ruleName MethodInvocation perspectiveDetails nextToken TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator ruleClass MethodInvocation Class MemberReference ruleName forName LocalVariableDeclaration ReferenceType PerspectiveRule VariableDeclarator rule Cast ReferenceType PerspectiveRule MethodInvocation ruleClass newInstance StatementExpression MethodInvocation userDefinedPerspective MemberReference rule addRule CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""could not create rule "" MemberReference ruleName Literal "" you can try to "" Literal ""refresh the perspectives to the "" Literal ""default settings."" MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""could not create rule "" MemberReference ruleName Literal "" you can try to "" Literal ""refresh the perspectives to the "" Literal ""default settings."" MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""could not create rule "" MemberReference ruleName Literal "" you can try to "" Literal ""refresh the perspectives to the "" Literal ""default settings."" MemberReference e error End BlockStatement ContinueStatement End StatementExpression MethodInvocation MemberReference userDefinedPerspective addPerspective End BlockStatement StatementExpression MethodInvocation loadDefaultPerspectives End IfStatement BinaryOperation == MethodInvocation MethodInvocation size getPerspectives Literal 0 BlockStatement StatementExpression MethodInvocation loadDefaultPerspectives End MethodDeclaration /**
     * Loads a pre-defined default set of perspectives.
     */ Modifier public loadDefaultPerspectives LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerPerspective VariableDeclarator c MethodInvocation getDefaultPerspectives StatementExpression MethodInvocation MemberReference c addAllPerspectives MethodDeclaration /**
     * @return a collection of default perspectives (i.e. the predefined ones)
     */ Modifier public ReferenceType Collection TypeArgument ReferenceType ExplorerPerspective getDefaultPerspectives LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator classPerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.class-centric"" StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProjectToRoots addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoNamespaceToClassifierAndPackage addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoNamespaceToDiagram addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoClassToSummary addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoSummaryToAssociation addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoSummaryToAttribute addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoSummaryToOperation addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoSummaryToInheritance addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoSummaryToIncomingDependency addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoSummaryToOutgoingDependency addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator packagePerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.package-centric"" StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoProjectToRoots addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoNamespaceToOwnedElements addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoPackageToElementImport addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoNamespaceToDiagram addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoUseCaseToExtensionPoint addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoClassifierToStructuralFeature addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoClassifierToBehavioralFeature addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoEnumerationToLiterals addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoCollaborationToInteraction addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoInteractionToMessages addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoMessageToAction addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoSignalToReception addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoLinkToStimuli addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStimulusToAction addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoClassifierToCollaboration addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoOperationToCollaboration addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoModelElementToComment addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoCollaborationToDiagram addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoBehavioralFeatureToStateMachine addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStatemachineToDiagram addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateMachineToState addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoCompositeStateToSubvertex addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateToInternalTrans addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateToDoActivity addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateToEntry addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateToExit addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoClassifierToSequenceDiagram addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoOperationToSequenceDiagram addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoClassifierToInstance addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateToIncomingTrans addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStateToOutgoingTrans addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoSubmachineStateToStateMachine addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoStereotypeToTagDefinition addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoModelElementToBehavior addRule StatementExpression MethodInvocation packagePerspective ClassCreator ReferenceType GoModelElementToContainedLostElements addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator diagramPerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.diagram-centric"" StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoModelToDiagrams addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoDiagramToNode addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoDiagramToEdge addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoUseCaseToExtensionPoint addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoClassifierToStructuralFeature addRule StatementExpression MethodInvocation diagramPerspective ClassCreator ReferenceType GoClassifierToBehavioralFeature addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator inheritancePerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.inheritance-centric"" StatementExpression MethodInvocation inheritancePerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation inheritancePerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation classPerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation inheritancePerspective ClassCreator ReferenceType GoModelToBaseElements addRule StatementExpression MethodInvocation inheritancePerspective ClassCreator ReferenceType GoGeneralizableElementToSpecialized addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator associationsPerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.class-associations"" StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoNamespaceToDiagram addRule StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoPackageToClass addRule StatementExpression MethodInvocation associationsPerspective ClassCreator ReferenceType GoClassToAssociatedClass addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator residencePerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.residence-centric"" StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoModelToNode addRule StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoNodeToResidentComponent addRule StatementExpression MethodInvocation residencePerspective ClassCreator ReferenceType GoComponentToResidentModelElement addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator statePerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.state-centric"" StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoProjectToStateMachine addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoStatemachineToDiagram addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoStateMachineToState addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoCompositeStateToSubvertex addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoStateToIncomingTrans addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoStateToOutgoingTrans addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoTransitiontoEffect addRule StatementExpression MethodInvocation statePerspective ClassCreator ReferenceType GoTransitionToGuard addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator transitionsPerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.transitions-centric"" StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoProjectToStateMachine addRule StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoStatemachineToDiagram addRule StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoStateMachineToTransition addRule StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoTransitionToSource addRule StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoTransitionToTarget addRule StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoTransitiontoEffect addRule StatementExpression MethodInvocation transitionsPerspective ClassCreator ReferenceType GoTransitionToGuard addRule LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator compositionPerspective ClassCreator ReferenceType ExplorerPerspective Literal ""combobox.item.composite-centric"" StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoProjectToModel addRule StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoProjectToProfileConfiguration addRule StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoProfileConfigurationToProfile addRule StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoProfileToModel addRule StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoProjectToRoots addRule StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoModelElementToContents addRule StatementExpression MethodInvocation compositionPerspective ClassCreator ReferenceType GoModelElementToContainedDiagrams addRule LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerPerspective VariableDeclarator c ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ExplorerPerspective StatementExpression MethodInvocation c MemberReference packagePerspective add StatementExpression MethodInvocation c MemberReference classPerspective add StatementExpression MethodInvocation c MemberReference diagramPerspective add StatementExpression MethodInvocation c MemberReference inheritancePerspective add StatementExpression MethodInvocation c MemberReference associationsPerspective add StatementExpression MethodInvocation c MemberReference residencePerspective add StatementExpression MethodInvocation c MemberReference statePerspective add StatementExpression MethodInvocation c MemberReference transitionsPerspective add StatementExpression MethodInvocation c MemberReference compositionPerspective add ReturnStatement MemberReference c MethodDeclaration /**
     * Get the predefined rules.<p>
     *
     * This is a hard coded rules library for now, since it is quite a lot of
     * work to get all possible rule names in ""org.argouml.ui.explorer.rules""
     * from the classpath (which would also not allow adding rules from other
     * locations).
     */ Modifier public loadRules LocalVariableDeclaration ReferenceType PerspectiveRule VariableDeclarator ruleNamesArray ArrayInitializer ClassCreator ReferenceType GoAssocRoleToMessages ClassCreator ReferenceType GoBehavioralFeatureToStateDiagram ClassCreator ReferenceType GoBehavioralFeatureToStateMachine ClassCreator ReferenceType GoClassifierToBehavioralFeature ClassCreator ReferenceType GoClassifierToCollaboration ClassCreator ReferenceType GoClassifierToInstance ClassCreator ReferenceType GoClassifierToSequenceDiagram ClassCreator ReferenceType GoClassifierToStateMachine ClassCreator ReferenceType GoClassifierToStructuralFeature ClassCreator ReferenceType GoClassToAssociatedClass ClassCreator ReferenceType GoClassToNavigableClass ClassCreator ReferenceType GoClassToSummary ClassCreator ReferenceType GoCollaborationToDiagram ClassCreator ReferenceType GoCollaborationToInteraction ClassCreator ReferenceType GoComponentToResidentModelElement ClassCreator ReferenceType GoCompositeStateToSubvertex ClassCreator ReferenceType GoDiagramToEdge ClassCreator ReferenceType GoDiagramToNode ClassCreator ReferenceType GoElementToMachine ClassCreator ReferenceType GoEnumerationToLiterals ClassCreator ReferenceType GoGeneralizableElementToSpecialized ClassCreator ReferenceType GoInteractionToMessages ClassCreator ReferenceType GoLinkToStimuli ClassCreator ReferenceType GoMessageToAction ClassCreator ReferenceType GoModelElementToComment ClassCreator ReferenceType GoModelElementToBehavior ClassCreator ReferenceType GoModelElementToContents ClassCreator ReferenceType GoModelElementToContainedDiagrams ClassCreator ReferenceType GoModelElementToContainedLostElements ClassCreator ReferenceType GoModelToBaseElements ClassCreator ReferenceType GoModelToCollaboration ClassCreator ReferenceType GoModelToDiagrams ClassCreator ReferenceType GoModelToElements ClassCreator ReferenceType GoModelToNode ClassCreator ReferenceType GoNamespaceToClassifierAndPackage ClassCreator ReferenceType GoNamespaceToDiagram ClassCreator ReferenceType GoNamespaceToOwnedElements ClassCreator ReferenceType GoNodeToResidentComponent ClassCreator ReferenceType GoOperationToCollaborationDiagram ClassCreator ReferenceType GoOperationToCollaboration ClassCreator ReferenceType GoOperationToSequenceDiagram ClassCreator ReferenceType GoPackageToClass ClassCreator ReferenceType GoPackageToElementImport ClassCreator ReferenceType GoProjectToCollaboration ClassCreator ReferenceType GoProjectToDiagram ClassCreator ReferenceType GoProjectToModel ClassCreator ReferenceType GoProjectToStateMachine ClassCreator ReferenceType GoProjectToProfileConfiguration ClassCreator ReferenceType GoProfileConfigurationToProfile ClassCreator ReferenceType GoProfileToModel ClassCreator ReferenceType GoProjectToRoots ClassCreator ReferenceType GoSignalToReception ClassCreator ReferenceType GoStateMachineToTop ClassCreator ReferenceType GoStatemachineToDiagram ClassCreator ReferenceType GoStateMachineToState ClassCreator ReferenceType GoStateMachineToTransition ClassCreator ReferenceType GoStateToDoActivity ClassCreator ReferenceType GoStateToDownstream ClassCreator ReferenceType GoStateToEntry ClassCreator ReferenceType GoStateToExit ClassCreator ReferenceType GoStateToIncomingTrans ClassCreator ReferenceType GoStateToInternalTrans ClassCreator ReferenceType GoStateToOutgoingTrans ClassCreator ReferenceType GoStereotypeToTagDefinition ClassCreator ReferenceType GoStimulusToAction ClassCreator ReferenceType GoSummaryToAssociation ClassCreator ReferenceType GoSummaryToAttribute ClassCreator ReferenceType GoSummaryToIncomingDependency ClassCreator ReferenceType GoSummaryToInheritance ClassCreator ReferenceType GoSummaryToOperation ClassCreator ReferenceType GoSummaryToOutgoingDependency ClassCreator ReferenceType GoTransitionToSource ClassCreator ReferenceType GoTransitionToTarget ClassCreator ReferenceType GoTransitiontoEffect ClassCreator ReferenceType GoTransitionToGuard ClassCreator ReferenceType GoUseCaseToExtensionPoint ClassCreator ReferenceType GoSubmachineStateToStateMachine StatementExpression Assignment MemberReference rules MethodInvocation Arrays MemberReference ruleNamesArray asList = MethodDeclaration /**
     * Add a rule to the list of rules.
     *
     * @param rule
     *            the PerspectiveRule to be added
     */ Modifier public addRule FormalParameter ReferenceType PerspectiveRule rule StatementExpression MethodInvocation rules MemberReference rule add MethodDeclaration /**
     * Remove a rule from the list.
     *
     * @param rule
     *            the PerspectiveRule to be removed
     */ Modifier public removeRule FormalParameter ReferenceType PerspectiveRule rule StatementExpression MethodInvocation rules MemberReference rule remove MethodDeclaration /**
     * @return the collection of rules
     */ Modifier public ReferenceType Collection TypeArgument ReferenceType PerspectiveRule getRules ReturnStatement MemberReference rules MethodDeclaration /**
     * Save the user perspectives in the ArgoUML configuration.
     */ Modifier public saveUserPerspectives StatementExpression MethodInvocation Configuration MemberReference Argo KEY_USER_EXPLORER_PERSPECTIVES This MethodInvocation toString setString MethodDeclaration /**
     * @return string representation of the perspectives in the same format as
     *         saved in the user properties.
     * @see java.lang.Object#toString()
     */ Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator p ClassCreator ReferenceType StringBuffer ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator perspective MethodInvocation getPerspectives BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation perspective toString StatementExpression MethodInvocation p MethodInvocation Literal "","" append MemberReference name append ForStatement EnhancedForControl VariableDeclaration ReferenceType PerspectiveRule VariableDeclarator rule MethodInvocation perspective getList BlockStatement StatementExpression MethodInvocation p MethodInvocation Literal "","" append MethodInvocation rule MethodInvocation getName getClass append End StatementExpression MethodInvocation p BinaryOperation - MethodInvocation p length Literal 1 deleteCharAt StatementExpression MethodInvocation p Literal "";"" append End StatementExpression MethodInvocation p BinaryOperation - MethodInvocation p length Literal 1 deleteCharAt ReturnStatement MethodInvocation p toString",0
234,234,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection Import java.util.List Import java.util.Map Import org.xml.sax.InputSource InterfaceDeclaration Modifier public /**
 * XMI file reader to deserialize a model into the model repository.
 * <p>
 * @author Bob Tarling
 */ XmiReader MethodDeclaration /**
     * Parse a given inputsource to a collection of top level model elements.
     *
     * @param pIs the input source for parsing
     * @return a collection of top level elements
     * @throws UmlException on any error
     * @deprecated for 0.25.4 by tfmorris. Use 
     * {@link #parse(InputSource, boolean)}.
     */ Annotation Deprecated ReferenceType Collection parse FormalParameter ReferenceType InputSource pIs UmlException MethodDeclaration /**
     * Parse a given inputsource to a collection of top level model elements.
     * 
     * @param pIs
     *            the input source for parsing
     * @param profile
     *            true if the resulting model will be used as a profile.
     *            Profiles are read-only and will not be written back out when
     *            the model data is written.
     * @return a collection of top level elements
     * @throws UmlException
     *             on any error
     * @since 0.22
     */ ReferenceType Collection parse FormalParameter ReferenceType InputSource pIs FormalParameter BasicType boolean profile UmlException MethodDeclaration /**
     * @return the map
     */ ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object getXMIUUIDToObjectMap MethodDeclaration /**
     * Set the list of element names for which errors should be ignored when
     * reading the XMI file.  The common one is ""UML:Diagram"" but it can be
     * any element which is not in the metamodel.<p>
     * 
     * This may not be supported by all implementations.  The method will
     * return false if unsupported.
     * 
     * @param elementNames array of element names which reader should ignore
     * @return returns false if the operation is unsupported
     */ Modifier public BasicType boolean setIgnoredElements FormalParameter ReferenceType String elementNames MethodDeclaration /**
     * Returns list of element names which will be ignored during XMI import
     * if they cause an error.
     * 
     * @return array of names (Strings)
     */ Modifier public ReferenceType String getIgnoredElements MethodDeclaration /**
     * Return the count of elements read during the last XMI read which were on
     * the ignore list.
     * 
     * @return the count
     */ Modifier public BasicType int getIgnoredElementCount MethodDeclaration /**
     * Return the name of the outermost tag in the XMI file.
     * 
     * @return the tag name
     */ Modifier public ReferenceType String getTagName MethodDeclaration /**
     * Get the list of paths to be searched when looking for XMI files to
     * resolve external references with. The list is maintained in a static 
     * structure shared by all instances.
     * 
     * @return a List of directory paths
     */ Modifier public ReferenceType List TypeArgument ReferenceType String getSearchPath MethodDeclaration /**
     * Add a path to the list of paths to be searched when looking for XMI files
     * to resolve external references with. The list is maintained in a static
     * structure shared by all instances.
     * <p>
     * TODO: It's desirable to have separate search paths for separate files,
     * but more work is required in ArgoUML so that it knows how to maintain
     * separate contexts for the profiles and user models.
     * 
     * @param path
     *                a directory path to add to the search path
     */ Modifier public addSearchPath FormalParameter ReferenceType String path MethodDeclaration /**
     * Remove a path from the list of paths to be searched when looking for XMI
     * files to resolve external references with. The list is maintained in a
     * static structure shared by all instances.
     * 
     * @param path
     *                directory path to remove from search
     */ Modifier public removeSearchPath FormalParameter ReferenceType String path",0
588,588,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JPopupMenu Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.behavior.common_behavior.ActionNewAction Import org.argouml.uml.ui.behavior.common_behavior.PopupMenuNewAction ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLTransitionEffectList ConstructorDeclaration Modifier public /**
     * Constructor for UMLTransitionTriggerList.
     * @param dataModel the model
     */ UMLTransitionEffectList FormalParameter ReferenceType UMLModelElementListModel2 dataModel StatementExpression SuperConstructorInvocation MemberReference dataModel MethodDeclaration Modifier public ReferenceType JPopupMenu getPopupMenu ReturnStatement ClassCreator ReferenceType PopupMenuNewAction MemberReference ActionNewAction.Roles EFFECT This ReferenceType UMLMutableLinkedList",0
1185,1185,,0
581,581,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * List model that shows the AssociationEndRoles belonging to some
 * AssociationRole. <p>
 * 
 * This is NOT an ordered list, according to the UML 1.4 standard. 
 * This is a derived association in the metamodel.
 * 
 * @since Oct 4, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLAssociationRoleAssociationEndRoleListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationRoleAssociationEndRoleListModel.
     */ UMLAssociationRoleAssociationEndRoleListModel StatementExpression SuperConstructorInvocation Literal ""connection"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getConnections getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAAssociationEndRole getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getConnections MethodInvocation MemberReference o contains getFacade ReferenceType UMLModelElementListModel2",0
530,530,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.extension_mechanisms Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * This action creates a new TagDefinition in the current Model or Stereotype or
 * Package.
 *
 * @author rastaman@tigris.org
 */ ActionNewTagDefinition ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionNewTagDefinition StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""button.new-tagdefinition"" localize MethodInvocation ResourceLoaderWrapper Literal ""button.new-tagdefinition"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""button.new-tagdefinition"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference t isAStereotype getFacade BlockStatement StatementExpression Assignment MemberReference owner MemberReference t = IfStatement MethodInvocation Model MethodInvocation MemberReference t isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference namespace MemberReference t = BlockStatement StatementExpression Assignment MemberReference namespace MethodInvocation Model MethodInvocation MemberReference t getModel getFacade = End End LocalVariableDeclaration ReferenceType Object VariableDeclarator newTagDefinition MethodInvocation Model MethodInvocation Cast ReferenceType String Literal null MemberReference owner MemberReference namespace buildTagDefinition getExtensionMechanismsFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newTagDefinition setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed ReferenceType UndoableAction",0
1520,1520,,0
775,775,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Summary->IncomingDependency.
 * This class is a Go Rule for the ""Class - centric"" Navigation perspective.
 *
 * @author  alexb, d00mst
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ GoSummaryToIncomingDependency MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.summary.incoming-dependency"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType IncomingDependencyNode BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation Cast ReferenceType IncomingDependencyNode MemberReference parent getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation ! Model MethodInvocation MemberReference next isAAbstraction getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add End End ReturnStatement MemberReference list End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType IncomingDependencyNode BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set Cast ReferenceType IncomingDependencyNode MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1318,1318,,0
1431,1431,,0
1543,1543,,0
62,62,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.model.StateMachinesFactory Import org.omg.uml.behavioralelements.statemachines.CallEvent Import org.omg.uml.behavioralelements.statemachines.ChangeEvent Import org.omg.uml.behavioralelements.statemachines.CompositeState Import org.omg.uml.behavioralelements.statemachines.Event Import org.omg.uml.behavioralelements.statemachines.FinalState Import org.omg.uml.behavioralelements.statemachines.Guard Import org.omg.uml.behavioralelements.statemachines.Pseudostate Import org.omg.uml.behavioralelements.statemachines.SignalEvent Import org.omg.uml.behavioralelements.statemachines.SimpleState Import org.omg.uml.behavioralelements.statemachines.State Import org.omg.uml.behavioralelements.statemachines.StateMachine Import org.omg.uml.behavioralelements.statemachines.StateMachinesPackage Import org.omg.uml.behavioralelements.statemachines.StateVertex Import org.omg.uml.behavioralelements.statemachines.StubState Import org.omg.uml.behavioralelements.statemachines.SubmachineState Import org.omg.uml.behavioralelements.statemachines.SynchState Import org.omg.uml.behavioralelements.statemachines.TimeEvent Import org.omg.uml.behavioralelements.statemachines.Transition Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Operation Import org.omg.uml.foundation.datatypes.BooleanExpression Import org.omg.uml.foundation.datatypes.PseudostateKindEnum Import org.omg.uml.foundation.datatypes.TimeExpression ClassDeclaration /**
 * Factory to create UML classes for the UML BehaviorialElements::StateMachines
 * package.<p>
 *
 * Abstract metatypes from the UML metamodel do not have create methods.<p>
 *
 * @since ARGO0.19.3
 * @author Bob Tarling
 * @author Ludovic Ma&icirc;tre
 * @author Tom Morris
 */ StateMachinesFactoryMDRImpl FieldDeclaration /**
     * Logger
     */ Modifier private ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType StateMachinesFactoryMDRImpl getLogger FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl FieldDeclaration /**
     * The State Machine Package proxy 
     */ Modifier private ReferenceType StateMachinesPackage VariableDeclarator smPackage ConstructorDeclaration /**
     * Package-private constructor.
     *
     * @param implementation
     *            To get other helpers and factories.
     */ StateMachinesFactoryMDRImpl FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = StatementExpression Assignment MemberReference smPackage MethodInvocation modelImpl MethodInvocation getStateMachines getUmlPackage = MethodDeclaration Modifier public ReferenceType CallEvent createCallEvent LocalVariableDeclaration ReferenceType CallEvent VariableDeclarator myCallEvent MethodInvocation smPackage MethodInvocation createCallEvent getCallEvent StatementExpression SuperMethodInvocation MemberReference myCallEvent initialize ReturnStatement MemberReference myCallEvent MethodDeclaration Modifier public ReferenceType ChangeEvent createChangeEvent LocalVariableDeclaration ReferenceType ChangeEvent VariableDeclarator myChangeEvent MethodInvocation smPackage MethodInvocation createChangeEvent getChangeEvent StatementExpression SuperMethodInvocation MemberReference myChangeEvent initialize ReturnStatement MemberReference myChangeEvent MethodDeclaration Modifier public ReferenceType CompositeState createCompositeState LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator myCompositeState MethodInvocation smPackage MethodInvocation createCompositeState getCompositeState StatementExpression SuperMethodInvocation MemberReference myCompositeState initialize ReturnStatement MemberReference myCompositeState MethodDeclaration Modifier public ReferenceType FinalState createFinalState LocalVariableDeclaration ReferenceType FinalState VariableDeclarator myFinalState MethodInvocation smPackage MethodInvocation createFinalState getFinalState StatementExpression SuperMethodInvocation MemberReference myFinalState initialize ReturnStatement MemberReference myFinalState MethodDeclaration Modifier public ReferenceType Guard createGuard LocalVariableDeclaration ReferenceType Guard VariableDeclarator myGuard MethodInvocation smPackage MethodInvocation createGuard getGuard StatementExpression SuperMethodInvocation MemberReference myGuard initialize ReturnStatement MemberReference myGuard MethodDeclaration Modifier public ReferenceType Pseudostate createPseudostate LocalVariableDeclaration ReferenceType Pseudostate VariableDeclarator myPseudostate MethodInvocation smPackage MethodInvocation createPseudostate getPseudostate StatementExpression SuperMethodInvocation MemberReference myPseudostate initialize ReturnStatement MemberReference myPseudostate MethodDeclaration Modifier public ReferenceType SignalEvent createSignalEvent LocalVariableDeclaration ReferenceType SignalEvent VariableDeclarator mySignalEvent MethodInvocation smPackage MethodInvocation createSignalEvent getSignalEvent StatementExpression SuperMethodInvocation MemberReference mySignalEvent initialize ReturnStatement MemberReference mySignalEvent MethodDeclaration Modifier public ReferenceType SimpleState createSimpleState LocalVariableDeclaration ReferenceType SimpleState VariableDeclarator mySimpleState MethodInvocation smPackage MethodInvocation createSimpleState getSimpleState StatementExpression SuperMethodInvocation MemberReference mySimpleState initialize ReturnStatement MemberReference mySimpleState MethodDeclaration Modifier public ReferenceType StateMachine createStateMachine LocalVariableDeclaration ReferenceType StateMachine VariableDeclarator myStateMachine MethodInvocation smPackage MethodInvocation createStateMachine getStateMachine StatementExpression SuperMethodInvocation MemberReference myStateMachine initialize ReturnStatement MemberReference myStateMachine MethodDeclaration Modifier public ReferenceType StubState createStubState LocalVariableDeclaration ReferenceType StubState VariableDeclarator myStubState MethodInvocation smPackage MethodInvocation createStubState getStubState StatementExpression SuperMethodInvocation MemberReference myStubState initialize ReturnStatement MemberReference myStubState MethodDeclaration Modifier public ReferenceType SubmachineState createSubmachineState LocalVariableDeclaration ReferenceType SubmachineState VariableDeclarator mySubmachineState MethodInvocation smPackage MethodInvocation createSubmachineState getSubmachineState StatementExpression SuperMethodInvocation MemberReference mySubmachineState initialize ReturnStatement MemberReference mySubmachineState MethodDeclaration Modifier public ReferenceType SynchState createSynchState LocalVariableDeclaration ReferenceType SynchState VariableDeclarator mySynchState MethodInvocation smPackage MethodInvocation createSynchState getSynchState StatementExpression SuperMethodInvocation MemberReference mySynchState initialize ReturnStatement MemberReference mySynchState MethodDeclaration Modifier public ReferenceType TimeEvent createTimeEvent LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator myTimeEvent MethodInvocation smPackage MethodInvocation createTimeEvent getTimeEvent StatementExpression SuperMethodInvocation MemberReference myTimeEvent initialize ReturnStatement MemberReference myTimeEvent MethodDeclaration Modifier public ReferenceType Transition createTransition LocalVariableDeclaration ReferenceType Transition VariableDeclarator myTransition MethodInvocation smPackage MethodInvocation createTransition getTransition StatementExpression SuperMethodInvocation MemberReference myTransition initialize ReturnStatement MemberReference myTransition MethodDeclaration Modifier public ReferenceType CompositeState buildCompositeStateOnStateMachine FormalParameter ReferenceType Object statemachine IfStatement BinaryOperation instanceof MemberReference statemachine ReferenceType StateMachine BlockStatement LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator state MethodInvocation createCompositeState StatementExpression MethodInvocation state Cast ReferenceType StateMachine MemberReference statemachine setStateMachine StatementExpression MethodInvocation state Literal ""top"" setName ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""statemachine"" MethodDeclaration Modifier public ReferenceType StateMachine buildStateMachine FormalParameter ReferenceType Object oContext IfStatement BinaryOperation && BinaryOperation != MemberReference oContext Literal null MethodInvocation modelImpl getStateMachinesHelper BlockStatement LocalVariableDeclaration ReferenceType StateMachine VariableDeclarator machine MethodInvocation createStateMachine LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator context Cast ReferenceType ModelElement MemberReference oContext StatementExpression MethodInvocation machine MemberReference context setContext IfStatement BinaryOperation instanceof MemberReference context ReferenceType Classifier BlockStatement StatementExpression MethodInvocation machine Cast ReferenceType Classifier MemberReference context setNamespace IfStatement BinaryOperation instanceof MemberReference context ReferenceType BehavioralFeature BlockStatement LocalVariableDeclaration ReferenceType BehavioralFeature VariableDeclarator feature Cast ReferenceType BehavioralFeature MemberReference context StatementExpression MethodInvocation machine MethodInvocation feature getOwner setNamespace End End LocalVariableDeclaration ReferenceType Object VariableDeclarator top MethodInvocation MemberReference machine buildCompositeStateOnStateMachine StatementExpression MethodInvocation machine Cast ReferenceType State MemberReference top setTop ReturnStatement MemberReference machine End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""In buildStateMachine: "" Literal ""context null or not legal"" MethodDeclaration Modifier public ReferenceType Transition buildTransition FormalParameter ReferenceType Object owningState FormalParameter ReferenceType Object source FormalParameter ReferenceType Object dest IfStatement BinaryOperation instanceof MemberReference owningState ReferenceType CompositeState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""owningState"" End IfStatement BinaryOperation instanceof MemberReference source ReferenceType StateVertex BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""source"" End IfStatement BinaryOperation instanceof MemberReference dest ReferenceType StateVertex BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""dest"" End LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator compositeState Cast ReferenceType CompositeState MemberReference owningState IfStatement BinaryOperation && MethodInvocation compositeState MethodInvocation MemberReference source contains getSubvertex MethodInvocation compositeState MethodInvocation MemberReference dest contains getSubvertex BlockStatement LocalVariableDeclaration ReferenceType Transition VariableDeclarator trans MethodInvocation createTransition StatementExpression MethodInvocation compositeState MethodInvocation MemberReference trans add getInternalTransition StatementExpression MethodInvocation trans Cast ReferenceType StateVertex MemberReference source setSource StatementExpression MethodInvocation trans Cast ReferenceType StateVertex MemberReference dest setTarget ReturnStatement MemberReference trans End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""In buildTransition: "" Literal ""arguments not legal"" MethodDeclaration Modifier public ReferenceType Pseudostate buildPseudoState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType Pseudostate VariableDeclarator state MethodInvocation createPseudostate StatementExpression MethodInvocation state MemberReference PseudostateKindEnum PK_CHOICE setKind StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer StatementExpression Cast ReferenceType CompositeState MemberReference compositeState ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType SynchState buildSynchState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType SynchState VariableDeclarator state MethodInvocation createSynchState StatementExpression MethodInvocation state Literal 0 setBound StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType StubState buildStubState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType StubState VariableDeclarator state MethodInvocation createStubState StatementExpression MethodInvocation state Literal """" setReferenceState StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType CompositeState buildCompositeState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator state MethodInvocation createCompositeState StatementExpression MethodInvocation state Literal false setConcurrent StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType SimpleState buildSimpleState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType SimpleState VariableDeclarator state MethodInvocation createSimpleState StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType FinalState buildFinalState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType FinalState VariableDeclarator state MethodInvocation createFinalState StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType SubmachineState buildSubmachineState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType SubmachineState VariableDeclarator state MethodInvocation createSubmachineState StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a CompositeState"" MethodDeclaration Modifier public ReferenceType Transition buildInternalTransition FormalParameter ReferenceType Object state IfStatement BinaryOperation instanceof MemberReference state ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType Transition VariableDeclarator trans MethodInvocation createTransition StatementExpression Cast ReferenceType State MemberReference state StatementExpression MethodInvocation trans Cast ReferenceType State MemberReference state setSource StatementExpression MethodInvocation trans Cast ReferenceType State MemberReference state setTarget ReturnStatement MemberReference trans End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Argument must be a State"" MethodDeclaration Modifier public ReferenceType Transition buildTransition FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType StateVertex BinaryOperation instanceof MemberReference target ReferenceType StateVertex BlockStatement LocalVariableDeclaration ReferenceType Transition VariableDeclarator trans MethodInvocation createTransition StatementExpression MethodInvocation trans Cast ReferenceType StateVertex MemberReference source setSource StatementExpression MethodInvocation trans Cast ReferenceType StateVertex MemberReference target setTarget StatementExpression MethodInvocation trans Cast ReferenceType StateMachine MethodInvocation modelImpl MethodInvocation MemberReference source getStateMachine getStateMachinesHelper setStateMachine ReturnStatement MemberReference trans End ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodDeclaration Modifier public ReferenceType CallEvent buildCallEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType CallEvent VariableDeclarator event MethodInvocation createCallEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal """" setName ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType CallEvent buildCallEvent FormalParameter ReferenceType Object trans FormalParameter ReferenceType String name FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType CallEvent VariableDeclarator evt MethodInvocation createCallEvent StatementExpression MethodInvocation evt Cast ReferenceType Namespace MemberReference ns setNamespace LocalVariableDeclaration ReferenceType String VariableDeclarator operationName TernaryExpression BinaryOperation > MethodInvocation name Literal ""("" indexOf Literal 0 MethodInvocation name MethodInvocation trim Literal 0 MethodInvocation name Literal ""("" indexOf substring MethodInvocation name trim StatementExpression MethodInvocation evt MemberReference operationName setName LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation modelImpl MethodInvocation MemberReference trans MemberReference operationName findOperationByName getStateMachinesHelper IfStatement BinaryOperation != MemberReference op Literal null BlockStatement StatementExpression MethodInvocation evt Cast ReferenceType Operation MemberReference op setOperation End ReturnStatement MemberReference evt MethodDeclaration Modifier public ReferenceType SignalEvent buildSignalEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType SignalEvent VariableDeclarator event MethodInvocation createSignalEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal """" setName ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType SignalEvent buildSignalEvent FormalParameter ReferenceType String name FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType SignalEvent VariableDeclarator event MethodInvocation createSignalEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event MemberReference name setName ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType TimeEvent buildTimeEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator event MethodInvocation createTimeEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal """" setName ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType TimeEvent buildTimeEvent FormalParameter ReferenceType String s FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator event MethodInvocation createTimeEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal """" setName LocalVariableDeclaration ReferenceType Object VariableDeclarator te MethodInvocation modelImpl MethodInvocation Literal """" MemberReference s createTimeExpression getDataTypesFactory StatementExpression MethodInvocation event Cast ReferenceType TimeExpression MemberReference te setWhen ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType ChangeEvent buildChangeEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType ChangeEvent VariableDeclarator event MethodInvocation createChangeEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal """" setName ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType ChangeEvent buildChangeEvent FormalParameter ReferenceType String expression FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType ChangeEvent VariableDeclarator event MethodInvocation MemberReference ns buildChangeEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator ce MethodInvocation modelImpl MethodInvocation Literal """" MemberReference expression createBooleanExpression getDataTypesFactory StatementExpression MethodInvocation event Cast ReferenceType BooleanExpression MemberReference ce setChangeExpression ReturnStatement MemberReference event MethodDeclaration Modifier public ReferenceType Guard buildGuard FormalParameter ReferenceType Object transition IfStatement BinaryOperation instanceof MemberReference transition ReferenceType Transition BlockStatement LocalVariableDeclaration ReferenceType Transition VariableDeclarator t Cast ReferenceType Transition MemberReference transition IfStatement BinaryOperation != MethodInvocation t getGuard Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Replacing Guard "" MethodInvocation t MethodInvocation getName getGuard Literal "" on Transition "" MethodInvocation t getName warn End LocalVariableDeclaration ReferenceType Guard VariableDeclarator guard MethodInvocation createGuard StatementExpression MethodInvocation guard Cast ReferenceType Transition MemberReference transition setTransition ReturnStatement MemberReference guard End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""transition: "" MemberReference transition MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteCallEvent FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType CallEvent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteChangeEvent FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ChangeEvent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * Deletes any associated subVertices.
     *
     * @param elem
     *            the UML element to be deleted
     */ deleteCompositeState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType CompositeState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End ForStatement EnhancedForControl VariableDeclaration ReferenceType StateVertex VariableDeclarator vertex Cast ReferenceType CompositeState MemberReference elem BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference vertex delete getUmlFactory End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteEvent FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Event BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteFinalState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType FinalState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteGuard FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Guard BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deletePseudostate FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Pseudostate BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteSignalEvent FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SignalEvent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteSimpleState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SimpleState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * deletes its top state, which is a composite state (state vertex).
     * Delete any submachine states which depend on this StateMachine.
     *
     * @param elem
     *            the state machine to be removed.
     */ deleteStateMachine FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType StateMachine BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType State VariableDeclarator top Cast ReferenceType State MethodInvocation Model MethodInvocation MemberReference elem getTop getFacade IfStatement BinaryOperation != MemberReference top Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference top delete getUmlFactory End StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType StateMachine MemberReference elem deleteCollection getUmlHelper MethodDeclaration /**
     * Deletes the outgoing and incoming transitions of a statevertex.
     * <p>
     *
     * @param elem
     *            the UML element to be deleted
     */ deleteStateVertex FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType StateVertex BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType StateVertex MemberReference elem deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType StateVertex MemberReference elem deleteCollection getUmlHelper MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteStubState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType StubState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteSubmachineState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SubmachineState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteSynchState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SynchState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteTimeEvent FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType TimeEvent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End MethodDeclaration /**
     * @param elem
     *            the UML element to be deleted
     */ deleteTransition FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Transition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End ReferenceType AbstractUmlModelFactoryMDR ReferenceType StateMachinesFactory",0
520,520,"CompilationUnit PackageDeclaration org.argouml.kernel Import java.awt.Image Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import org.apache.log4j.Logger Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoProfileEvent Import org.argouml.configuration.Configuration Import org.argouml.configuration.ConfigurationKey Import org.argouml.model.Model Import org.argouml.profile.DefaultTypeStrategy Import org.argouml.profile.FigNodeStrategy Import org.argouml.profile.FormatingStrategy Import org.argouml.profile.Profile Import org.argouml.profile.ProfileException Import org.argouml.profile.ProfileFacade ClassDeclaration Modifier public /**
 *   This class captures represents the unique access point for the 
 *   configurability allowed by the use of profiles. 
 *
 *   @author maurelio1234
 */ ProfileConfiguration FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ProfileConfiguration getLogger FieldDeclaration Modifier private ReferenceType FormatingStrategy VariableDeclarator formatingStrategy FieldDeclaration Modifier private ReferenceType DefaultTypeStrategy VariableDeclarator defaultTypeStrategy FieldDeclaration Modifier private ReferenceType List VariableDeclarator figNodeStrategies ClassCreator ReferenceType ArrayList FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Profile VariableDeclarator profiles ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Profile FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Object VariableDeclarator profileModels ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object FieldDeclaration /**
     * The extension used in serialization and returned by {@link #getType()}
     */ Modifier public final static ReferenceType String VariableDeclarator EXTENSION Literal ""profile"" FieldDeclaration /**
     * The configuration key for the default stereotype view.
     */ Modifier public final static ReferenceType ConfigurationKey VariableDeclarator KEY_DEFAULT_STEREOTYPE_VIEW MethodInvocation Configuration Literal ""profiles"" Literal ""stereotypeView"" makeKey ConstructorDeclaration Modifier public /**
     * The default constructor for this class. Sets the Java profile as the 
     * default one and its formating strategy as the default one.
     * 
     * @param project the project that contains this configuration
     */ ProfileConfiguration FormalParameter ReferenceType Project project StatementExpression SuperConstructorInvocation MemberReference EXTENSION MemberReference project ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator p MethodInvocation ProfileFacade MethodInvocation getDefaultProfiles getManager BlockStatement StatementExpression MethodInvocation MemberReference p addProfile End StatementExpression MethodInvocation updateStrategies MethodDeclaration Modifier private updateStrategies ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MemberReference profiles BlockStatement StatementExpression MethodInvocation MemberReference profile activateFormatingStrategy StatementExpression MethodInvocation MemberReference profile activateDefaultTypeStrategy End MethodDeclaration /**
     * @return the current formating strategy
     */ Modifier public ReferenceType FormatingStrategy getFormatingStrategy ReturnStatement MemberReference formatingStrategy MethodDeclaration /**
     * @return the current default type strategy
     */ Modifier public ReferenceType DefaultTypeStrategy getDefaultTypeStrategy ReturnStatement MemberReference defaultTypeStrategy MethodDeclaration /**
     * Updates the current strategy to the strategy provided by the 
     * passed profile. The profile should have been previously registered.
     * 
     * @param profile the profile providing the current default type strategy
     */ Modifier public activateDefaultTypeStrategy FormalParameter ReferenceType Profile profile IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference profile Literal null BinaryOperation != MethodInvocation profile getDefaultTypeStrategy Literal null MethodInvocation MethodInvocation MemberReference profile contains getProfiles BlockStatement StatementExpression Assignment This MemberReference defaultTypeStrategy MethodInvocation profile getDefaultTypeStrategy = End MethodDeclaration /**
     * Updates the current strategy to the strategy provided by the 
     * passed profile. The profile should have been previously registered.
     * 
     * @param profile the profile providing the current formating strategy
     */ Modifier public activateFormatingStrategy FormalParameter ReferenceType Profile profile IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference profile Literal null BinaryOperation != MethodInvocation profile getFormatingStrategy Literal null MethodInvocation MethodInvocation MemberReference profile contains getProfiles BlockStatement StatementExpression Assignment This MemberReference formatingStrategy MethodInvocation profile getFormatingStrategy = End MethodDeclaration /**
     * @return the list of applied profiles
     */ Modifier public ReferenceType List TypeArgument ReferenceType Profile getProfiles ReturnStatement MemberReference profiles MethodDeclaration /**
     * Applies a new profile to this configuration
     * 
     * @param p the profile to be applied
     */ Modifier public Annotation SuppressWarnings Literal ""unchecked"" addProfile FormalParameter ReferenceType Profile p IfStatement MethodInvocation ! profiles MemberReference p contains BlockStatement StatementExpression MethodInvocation profiles MemberReference p add TryStatement StatementExpression MethodInvocation profileModels MethodInvocation p getProfilePackages addAll CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Error retrieving profile's "" MemberReference p Literal "" packages."" MemberReference e warn LocalVariableDeclaration ReferenceType FigNodeStrategy VariableDeclarator fns MethodInvocation p getFigureStrategy IfStatement BinaryOperation != MemberReference fns Literal null BlockStatement StatementExpression MethodInvocation figNodeStrategies MemberReference fns add End ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator dependency MethodInvocation p getDependencies BlockStatement StatementExpression MethodInvocation MemberReference dependency addProfile End StatementExpression MethodInvocation updateStrategies StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoProfileEvent MemberReference ArgoEventTypes PROFILE_ADDED ClassCreator ReferenceType PropertyChangeEvent This Literal ""profile"" Literal null MemberReference p fireEvent End MethodDeclaration /**
     * @return the list of models of the currently applied profile.
     */ Modifier private ReferenceType List getProfileModels ReturnStatement MemberReference profileModels MethodDeclaration /**
     * Removes the passed profile from the configuration. 
     * 
     * @param p the profile to be removed
     */ Modifier public removeProfile FormalParameter ReferenceType Profile p StatementExpression MethodInvocation profiles MemberReference p remove TryStatement StatementExpression MethodInvocation profileModels MethodInvocation p getProfilePackages removeAll CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG Literal ""Exception"" MemberReference e error LocalVariableDeclaration ReferenceType FigNodeStrategy VariableDeclarator fns MethodInvocation p getFigureStrategy IfStatement BinaryOperation != MemberReference fns Literal null BlockStatement StatementExpression MethodInvocation figNodeStrategies MemberReference fns remove End IfStatement BinaryOperation == MemberReference formatingStrategy MethodInvocation p getFormatingStrategy BlockStatement StatementExpression Assignment MemberReference formatingStrategy Literal null = End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Profile VariableDeclarator markForRemoval ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Profile ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MemberReference profiles BlockStatement IfStatement MethodInvocation profile MethodInvocation MemberReference p contains getDependencies BlockStatement StatementExpression MethodInvocation markForRemoval MemberReference profile add End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MemberReference markForRemoval BlockStatement StatementExpression MethodInvocation MemberReference profile removeProfile End StatementExpression MethodInvocation updateStrategies StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoProfileEvent MemberReference ArgoEventTypes PROFILE_REMOVED ClassCreator ReferenceType PropertyChangeEvent This Literal ""profile"" MemberReference p Literal null fireEvent FieldDeclaration Modifier private ReferenceType FigNodeStrategy VariableDeclarator compositeFigNodeStrategy ClassCreator ReferenceType FigNodeStrategy MethodDeclaration Modifier public ReferenceType Image getIconForStereotype FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figNodeStrategies iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType FigNodeStrategy VariableDeclarator strat Cast ReferenceType FigNodeStrategy MethodInvocation it next LocalVariableDeclaration ReferenceType Image VariableDeclarator extra MethodInvocation strat MemberReference element getIconForStereotype IfStatement BinaryOperation != MemberReference extra Literal null BlockStatement ReturnStatement MemberReference extra End End ReturnStatement Literal null MethodDeclaration /**
     * @return the current FigNodeStrategy
     */ Modifier public ReferenceType FigNodeStrategy getFigNodeStrategy ReturnStatement MemberReference compositeFigNodeStrategy MethodDeclaration /**
     * @return the extension for this project member
     * @see org.argouml.kernel.AbstractProjectMember#getType()
     */ Modifier public ReferenceType String getType ReturnStatement MemberReference EXTENSION MethodDeclaration /**
     * Objects of this class are always consistent, there's no need 
     * to repair them.
     * 
     * @return the empty string.
     * @see org.argouml.kernel.ProjectMember#repair()
     */ Modifier public ReferenceType String repair ReturnStatement Literal """" MethodDeclaration /**
     * @return the ""Profile Configuration"" string
     * @see java.lang.Object#toString()
     */ Modifier public Annotation Override ReferenceType String toString ReturnStatement Literal ""Profile Configuration"" MethodDeclaration /**
     * Find a stereotype with the given name which is applicable to the given 
     * element.
     * 
     * @param name name of stereotype to look for
     * @param element model element to which the stereotype must be applicable
     * @return the stereotype or null if none found
     */ Modifier public ReferenceType Object findStereotypeForObject FormalParameter ReferenceType String name FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MemberReference profileModels BlockStatement StatementExpression Assignment MemberReference iter MethodInvocation Model MethodInvocation MemberReference model getOwnedElements MethodInvocation iterator getFacade = WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation iter next IfStatement BinaryOperation || MethodInvocation ! Model MethodInvocation MemberReference stereo isAStereotype getFacade MethodInvocation ! name MethodInvocation Model MethodInvocation MemberReference stereo getName getFacade equals BlockStatement ContinueStatement End IfStatement MethodInvocation Model MethodInvocation MemberReference element MemberReference stereo isValidStereotype getExtensionMechanismsHelper BlockStatement ReturnStatement MemberReference stereo End End End ReturnStatement Literal null MethodDeclaration /**
     * Search for the given type in all of the profile models.
     * 
     * @param name name of type to be found
     * @return the type or null
     */ Modifier public ReferenceType Object findType FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation getProfileModels BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation MemberReference name MemberReference model findTypeInModel IfStatement BinaryOperation != MemberReference result Literal null BlockStatement ReturnStatement MemberReference result End End ReturnStatement Literal null MethodDeclaration /**
     * Finds a type in a model by name
     * 
     * FIXME: duplicated from the method with the same name in 
     * org.argouml.profile.internal.ModelUtils.
     * 
     * @param s the type name
     * @param model the model
     * @return the type or <code>null</code> if the type has not been found.
     */ Modifier public static ReferenceType Object findTypeInModel FormalParameter ReferenceType String s FormalParameter ReferenceType Object model IfStatement MethodInvocation ! Model MethodInvocation MemberReference model isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Looking for the classifier "" MemberReference s Literal "" in a non-namespace object of "" MemberReference model Literal "". A namespace was expected."" End LocalVariableDeclaration ReferenceType Collection VariableDeclarator allClassifiers MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator classifiers MethodInvocation allClassifiers toArray LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference classifiers length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference classifier MemberReference ArraySelector MemberReference i classifiers = IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade Literal null MethodInvocation Model MethodInvocation MemberReference classifier getName MethodInvocation MemberReference s equals getFacade BlockStatement ReturnStatement MemberReference classifier End End ReturnStatement Literal null MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""unchecked"" ReferenceType Collection findByMetaType FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType Set VariableDeclarator elements ClassCreator ReferenceType HashSet LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getProfileModels WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation it next StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MemberReference metaType getAllModelElementsOfKind getModelManagementHelper addAll End ReturnStatement MemberReference elements MethodDeclaration /**
     * @param modelElement
     *                ModelElement for which find possible stereotypes
     * @return collection of stereotypes which are valid for the given model
     *         element.
     */ Modifier public ReferenceType Collection findAllStereotypesForModelElement FormalParameter ReferenceType Object modelElement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getProfileModels MemberReference modelElement getAllPossibleStereotypes getExtensionMechanismsHelper ReferenceType AbstractProjectMember",0
11,11,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import java.util.Vector Import javax.jmi.model.MofClass Import javax.jmi.reflect.InvalidObjectException Import javax.jmi.reflect.RefClass Import javax.jmi.reflect.RefObject Import javax.jmi.reflect.RefPackage Import org.apache.log4j.Logger Import org.argouml.model.InvalidElementException Import org.argouml.model.ModelManagementHelper Import org.omg.uml.behavioralelements.collaborations.Collaboration Import org.omg.uml.behavioralelements.commonbehavior.Instance Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.GeneralizableElement Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Permission Import org.omg.uml.foundation.datatypes.VisibilityKindEnum Import org.omg.uml.modelmanagement.ElementImport Import org.omg.uml.modelmanagement.Model Import org.omg.uml.modelmanagement.Subsystem Import org.omg.uml.modelmanagement.UmlPackage ClassDeclaration /**
 * Helper class for UML ModelManagement Package.
 * <p>
 * 
 * @since ARGO0.19.5
 * @author Ludovic Ma&icirc;tre
 * <p>
 * derived from NSUML implementation by:
 * @author Thierry Lach
 */ ModelManagementHelperMDRImpl FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ModelManagementHelperMDRImpl getLogger FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl ConstructorDeclaration /**
     * Construct a ModelManagementHelper.  Not for use outside of the
     * Model subsystem implementation.
     * 
     * @param implementation
     *            To get other helpers and factories.
     */ ModelManagementHelperMDRImpl FormalParameter ReferenceType MDRModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Collection getAllSubSystems FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList End IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Namespace MemberReference ns LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference o getAllSubSystems addAll End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Subsystem BlockStatement StatementExpression MethodInvocation list MemberReference o add End End ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection getAllNamespaces FormalParameter ReferenceType Object ns IfStatement BinaryOperation || BinaryOperation == MemberReference ns Literal null BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End LocalVariableDeclaration ReferenceType Collection VariableDeclarator namespaces Cast ReferenceType Namespace MemberReference ns LocalVariableDeclaration ReferenceType List VariableDeclarator list MemberReference Collections EMPTY_LIST IfStatement BinaryOperation || BinaryOperation == MemberReference namespaces MemberReference Collections EMPTY_LIST BinaryOperation == MethodInvocation namespaces size Literal 0 BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation namespaces iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement IfStatement BinaryOperation == MemberReference list MemberReference Collections EMPTY_LIST BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList MethodInvocation namespaces size = End StatementExpression MethodInvocation list MemberReference o add LocalVariableDeclaration ReferenceType Collection VariableDeclarator namespaces1 MethodInvocation MemberReference o getAllNamespaces IfStatement BinaryOperation && BinaryOperation != MemberReference namespaces1 MemberReference Collections EMPTY_LIST BinaryOperation > MethodInvocation namespaces1 size Literal 0 BlockStatement StatementExpression MethodInvocation list MemberReference namespaces1 addAll End End End ReturnStatement MemberReference list MethodDeclaration Modifier public ReferenceType Collection getAllModelElementsOfKindWithModel FormalParameter ReferenceType Object model FormalParameter ReferenceType Object type IfStatement BinaryOperation == MemberReference model Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A model must be supplied"" End LocalVariableDeclaration ReferenceType Class VariableDeclarator kind Cast ReferenceType Class MemberReference type LocalVariableDeclaration ReferenceType Collection VariableDeclarator ret MethodInvocation MemberReference model MemberReference kind getAllModelElementsOfKind IfStatement MethodInvocation kind MethodInvocation model getClass isAssignableFrom BlockStatement StatementExpression Assignment MemberReference ret ClassCreator ReferenceType ArrayList MemberReference ret = IfStatement MethodInvocation ! ret MemberReference model contains BlockStatement StatementExpression MethodInvocation ret MemberReference model add End End ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType Object type LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis IfStatement BinaryOperation || BinaryOperation == MemberReference nsa Literal null BinaryOperation == MemberReference type Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End IfStatement BinaryOperation instanceof MemberReference type ReferenceType String BlockStatement ReturnStatement MethodInvocation MemberReference nsa Cast ReferenceType String MemberReference type getAllModelElementsOfKind End IfStatement BinaryOperation || BinaryOperation instanceof MemberReference nsa ReferenceType Namespace BinaryOperation instanceof MemberReference type ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""illegal argument - namespace: "" MemberReference nsa Literal "" type: "" MemberReference type End LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType Class MemberReference type StatementExpression Assignment MemberReference name MethodInvocation name BinaryOperation + MethodInvocation name Literal ""."" lastIndexOf Literal 1 substring = IfStatement MethodInvocation name Literal ""Uml"" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name Literal 3 substring = End LocalVariableDeclaration ReferenceType Collection VariableDeclarator allOfType MemberReference Collections EMPTY_LIST LocalVariableDeclaration ReferenceType Collection VariableDeclarator metaTypes MethodInvocation modelImpl MethodInvocation getMofClass MethodInvocation refAllOfClass getModelPackage ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation metaTypes iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType MofClass VariableDeclarator elem Cast ReferenceType MofClass MethodInvocation it next IfStatement MethodInvocation name MethodInvocation elem getName equals BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator names MethodInvocation elem getQualifiedName LocalVariableDeclaration ReferenceType RefPackage VariableDeclarator pkg MethodInvocation modelImpl MethodInvocation Cast ReferenceType String MethodInvocation names Literal 0 get refPackage getUmlPackage LocalVariableDeclaration ReferenceType RefClass VariableDeclarator classProxy MethodInvocation pkg Cast ReferenceType String MethodInvocation names Literal 1 get refClass StatementExpression Assignment MemberReference allOfType MethodInvocation classProxy refAllOfType = BreakStatement End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator returnElements ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation allOfType iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation i next IfStatement MethodInvocation MemberReference nsa MemberReference me contained BlockStatement StatementExpression MethodInvocation returnElements MemberReference me add End End LocalVariableDeclaration BasicType long VariableDeclarator duration BinaryOperation - MethodInvocation System currentTimeMillis MemberReference startTime StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Get allOfKind took "" MemberReference duration Literal "" msec."" debug ReturnStatement MemberReference returnElements MethodDeclaration Modifier private BasicType boolean contained FormalParameter ReferenceType Object container FormalParameter ReferenceType Object candidate LocalVariableDeclaration ReferenceType Object VariableDeclarator current MethodInvocation modelImpl MethodInvocation MemberReference candidate getModelElementContainer getFacade WhileStatement BinaryOperation != MemberReference current Literal null BlockStatement IfStatement MethodInvocation container MemberReference current equals BlockStatement ReturnStatement Literal true End StatementExpression Assignment MemberReference current MethodInvocation modelImpl MethodInvocation MemberReference current getModelElementContainer getFacade = End ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType String kind IfStatement BinaryOperation || BinaryOperation == MemberReference nsa Literal null BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End IfStatement BinaryOperation instanceof MemberReference nsa ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""given argument "" MemberReference nsa Literal "" is not a namespace"" End LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Literal null TryStatement StatementExpression Assignment MemberReference col MethodInvocation MemberReference nsa MethodInvocation Class MemberReference kind forName getAllModelElementsOfKind = CatchClause CatchClauseParameter ClassNotFoundException cnfe ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Can't derive a class name from "" MemberReference kind ReturnStatement MemberReference col MethodDeclaration Modifier public ReferenceType Collection getAllSurroundingNamespaces FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference ns add LocalVariableDeclaration ReferenceType Namespace VariableDeclarator namespace Cast ReferenceType Namespace MemberReference ns IfStatement BinaryOperation != MethodInvocation namespace getNamespace Literal null BlockStatement StatementExpression MethodInvocation set MethodInvocation MethodInvocation namespace getNamespace getAllSurroundingNamespaces addAll End ReturnStatement MemberReference set MethodDeclaration Modifier public ReferenceType Collection getAllBehavioralFeatures FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator features ClassCreator ReferenceType ArrayList TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator classifiers MethodInvocation MemberReference ns MethodInvocation modelImpl MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation classifiers iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation features MethodInvocation modelImpl MethodInvocation MethodInvocation i next getFeatures getFacade addAll End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator behavioralfeatures ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ii MethodInvocation features iterator WhileStatement MethodInvocation ii hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation ii next IfStatement BinaryOperation instanceof MemberReference f ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation behavioralfeatures MemberReference f add End End ReturnStatement MemberReference behavioralfeatures MethodDeclaration Modifier public ReferenceType Collection getAllPossibleImports FormalParameter ReferenceType Object pack LocalVariableDeclaration ReferenceType Object VariableDeclarator container MemberReference pack LocalVariableDeclaration ReferenceType Object VariableDeclarator cc MethodInvocation modelImpl MethodInvocation MemberReference pack getModelElementContainer getFacade WhileStatement BinaryOperation != MemberReference cc Literal null BlockStatement StatementExpression Assignment MemberReference container MemberReference cc = StatementExpression Assignment MemberReference cc MethodInvocation modelImpl MethodInvocation MemberReference cc getModelElementContainer getFacade = End LocalVariableDeclaration ReferenceType Collection VariableDeclarator mes MethodInvocation MemberReference container MethodInvocation modelImpl MethodInvocation getModelElement getMetaTypes getAllModelElementsOfKind LocalVariableDeclaration ReferenceType Collection VariableDeclarator vmes ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation mes iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation i next IfStatement MethodInvocation modelImpl MethodInvocation MemberReference me MemberReference pack isValidNamespace getCoreHelper BlockStatement StatementExpression MethodInvocation vmes MemberReference me add End End ReturnStatement MemberReference vmes MethodDeclaration Modifier public ReferenceType Object getElement FormalParameter ReferenceType List TypeArgument ReferenceType String path FormalParameter ReferenceType Object theRootNamespace LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator root Cast ReferenceType ModelElement MemberReference theRootNamespace IfStatement BinaryOperation == MemberReference root Literal null BlockStatement ReturnStatement MethodInvocation MemberReference path getElement BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation path size MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference root Literal null BinaryOperation instanceof MemberReference root ReferenceType Namespace BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation path MemberReference i get LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType Namespace MemberReference root BlockStatement IfStatement BinaryOperation && BinaryOperation < MemberReference i BinaryOperation - MethodInvocation path size Literal 1 BinaryOperation instanceof MemberReference me ReferenceType Namespace BlockStatement ContinueStatement End IfStatement MethodInvocation name MethodInvocation me getName equals BlockStatement StatementExpression Assignment MemberReference root MemberReference me = StatementExpression Assignment MemberReference found Literal true = BreakStatement End End IfStatement MemberReference ! found BlockStatement ReturnStatement Literal null End End ReturnStatement MemberReference root End MethodDeclaration Modifier public ReferenceType Object getElement FormalParameter ReferenceType List TypeArgument ReferenceType String fullPath IfStatement BinaryOperation || BinaryOperation == MemberReference fullPath Literal null MethodInvocation fullPath isEmpty BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType Object VariableDeclarator element Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator root MethodInvocation modelImpl MethodInvocation getRootElements getFacade BlockStatement IfStatement Cast ReferenceType ModelElement MemberReference root BlockStatement StatementExpression Assignment MemberReference element MemberReference root = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference root ReferenceType Namespace BinaryOperation > MethodInvocation fullPath size Literal 1 BlockStatement StatementExpression Assignment MemberReference element MethodInvocation modelImpl MethodInvocation MethodInvocation fullPath Literal 1 MethodInvocation fullPath size subList MemberReference root getElement getModelManagementHelper = End IfStatement BinaryOperation != MemberReference element Literal null BlockStatement BreakStatement End End End ReturnStatement MemberReference element MethodDeclaration Modifier public Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType String getPath FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Vector TypeArgument ReferenceType String VariableDeclarator path IfStatement BinaryOperation || BinaryOperation == MemberReference element Literal null BinaryOperation instanceof MemberReference element ReferenceType Model BlockStatement ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType String End StatementExpression Assignment MemberReference path MethodInvocation MethodInvocation modelImpl MethodInvocation MemberReference element getModelElementContainer getFacade getPath = StatementExpression MethodInvocation path MethodInvocation modelImpl MethodInvocation MemberReference element getName getFacade add ReturnStatement MemberReference path MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getPathList FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference element Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String End IfStatement BinaryOperation instanceof MemberReference element ReferenceType RefObject BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path MethodInvocation Cast ReferenceType RefObject MemberReference element getPathList StatementExpression MethodInvocation path MethodInvocation modelImpl MethodInvocation MemberReference element getName getFacade add ReturnStatement MemberReference path MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object getCorrespondingElement FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object model ReturnStatement MemberReference elem MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object getCorrespondingElement FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object model FormalParameter BasicType boolean canCreate ReturnStatement MemberReference elem MethodDeclaration Modifier public Annotation Deprecated BasicType boolean corresponds FormalParameter ReferenceType Object obj1 FormalParameter ReferenceType Object obj2 ReturnStatement MethodInvocation obj1 MemberReference obj2 equals MethodDeclaration Modifier public BasicType boolean isCyclicOwnership FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child ReturnStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference child contains MemberReference parent getOwnerShipPath BinaryOperation == MemberReference parent MemberReference child MethodDeclaration /**
     * Return a list of all ModelElements which contain this one, starting with
     * the immediate parent and ending with the top level ModelElement.
     * 
     * @param elem
     *            the model element to search for
     * @return a list of ModelElements
     */ Modifier private ReferenceType List getOwnerShipPath FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator ownershipPath ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation modelImpl MethodInvocation MemberReference elem getModelElementContainer getFacade WhileStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression MethodInvocation ownershipPath MemberReference parent add StatementExpression Assignment MemberReference parent MethodInvocation modelImpl MethodInvocation MemberReference parent getModelElementContainer getFacade = End ReturnStatement MemberReference ownershipPath End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Not a base"" MethodDeclaration Modifier public removeImportedElement FormalParameter ReferenceType Object pack FormalParameter ReferenceType Object me TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pack ReferenceType UmlPackage BinaryOperation instanceof MemberReference me ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c Cast ReferenceType UmlPackage MemberReference pack LocalVariableDeclaration ReferenceType ElementImport VariableDeclarator match Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation c iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType ElementImport VariableDeclarator ei Cast ReferenceType ElementImport MethodInvocation it next IfStatement BinaryOperation == MethodInvocation ei getImportedElement MemberReference me BlockStatement StatementExpression Assignment MemberReference match MemberReference ei = BreakStatement End End IfStatement BinaryOperation != MemberReference match Literal null StatementExpression MethodInvocation c MemberReference match remove End ReturnStatement End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""There must be a Package and a ModelElement"" MethodDeclaration Modifier public setImportedElements FormalParameter ReferenceType Object pack FormalParameter ReferenceType Collection imports IfStatement BinaryOperation instanceof MemberReference pack ReferenceType UmlPackage BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator eis Cast ReferenceType UmlPackage MemberReference pack LocalVariableDeclaration ReferenceType Collection VariableDeclarator toRemove ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Collection VariableDeclarator toAdd ClassCreator ReferenceType ArrayList MemberReference imports LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation eis iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ElementImport VariableDeclarator ei Cast ReferenceType ElementImport MethodInvocation i next IfStatement MethodInvocation imports MethodInvocation ei getImportedElement contains BlockStatement StatementExpression MethodInvocation toAdd MemberReference ei remove BlockStatement StatementExpression MethodInvocation toRemove MemberReference ei add End End StatementExpression MethodInvocation eis MemberReference toRemove removeAll LocalVariableDeclaration ReferenceType Collection VariableDeclarator toAddEIs ClassCreator ReferenceType ArrayList StatementExpression Assignment MemberReference i MethodInvocation toAdd iterator = WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MethodInvocation i next StatementExpression MethodInvocation toAddEIs MethodInvocation modelImpl MethodInvocation MemberReference pack MemberReference me buildElementImport getModelManagementFactory add End StatementExpression MethodInvocation eis MemberReference toAddEIs addAll ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""There must be a Package and a ModelElement"" MethodDeclaration Modifier public setAlias FormalParameter ReferenceType Object handle FormalParameter ReferenceType String alias IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BinaryOperation != MemberReference alias Literal null BlockStatement StatementExpression Cast ReferenceType ElementImport MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "" or alias: "" MemberReference alias MethodDeclaration Modifier public setSpecification FormalParameter ReferenceType Object handle FormalParameter BasicType boolean specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement StatementExpression Cast ReferenceType ElementImport MemberReference handle ReturnStatement End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType Object modelelement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType HashSet TypeArgument ReferenceType ModelElement IfStatement BinaryOperation == MemberReference modelelement Literal null BlockStatement ReturnStatement MemberReference results End IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType UmlPackage BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ElementImport VariableDeclarator c Cast ReferenceType UmlPackage MemberReference modelelement ForStatement EnhancedForControl VariableDeclaration ReferenceType ElementImport VariableDeclarator ei MemberReference c BlockStatement StatementExpression MethodInvocation results MethodInvocation ei getImportedElement add End End IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType Namespace BlockStatement StatementExpression MethodInvocation results Cast ReferenceType Namespace MemberReference modelelement addAll LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference modelelement IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement StatementExpression MethodInvocation results MethodInvocation MemberReference ns getContents addAll End End IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType Instance BlockStatement StatementExpression MethodInvocation results Cast ReferenceType Instance MemberReference modelelement addAll StatementExpression MethodInvocation results Cast ReferenceType Instance MemberReference modelelement addAll End ReturnStatement MemberReference results MethodDeclaration Modifier public ReferenceType Collection getAllImportedElements FormalParameter ReferenceType Object pack LocalVariableDeclaration ReferenceType Collection VariableDeclarator c ClassCreator ReferenceType ArrayList TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator deps MethodInvocation modelImpl MethodInvocation MemberReference pack getClientDependencies getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation deps iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dep MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference dep ReferenceType Permission BlockStatement IfStatement MethodInvocation modelImpl MethodInvocation MemberReference dep MemberReference FRIEND_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator mes MethodInvocation modelImpl MethodInvocation MemberReference dep getSuppliers getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator mei MethodInvocation mes iterator WhileStatement MethodInvocation mei hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation mei next IfStatement MethodInvocation modelImpl MethodInvocation MemberReference o isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator v MethodInvocation modelImpl MethodInvocation MemberReference o getOwnedElements getFacade StatementExpression MethodInvocation c MemberReference v addAll End End IfStatement BinaryOperation || MethodInvocation modelImpl MethodInvocation MemberReference dep MemberReference IMPORT_STEREOTYPE hasStereotype getExtensionMechanismsHelper MethodInvocation modelImpl MethodInvocation MemberReference dep MemberReference ACCESS_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator mes MethodInvocation modelImpl MethodInvocation MemberReference dep getSuppliers getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator mei MethodInvocation mes iterator WhileStatement MethodInvocation mei hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation mei next IfStatement MethodInvocation modelImpl MethodInvocation MemberReference o isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator v MethodInvocation modelImpl MethodInvocation MemberReference o getAllVisibleElements getCoreHelper StatementExpression MethodInvocation c MemberReference v addAll End End End End End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator imports MethodInvocation modelImpl MethodInvocation MemberReference pack getImportedElements getFacade StatementExpression MethodInvocation c MemberReference imports addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference c MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement getAllContents FormalParameter ReferenceType Object pack LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType HashSet TypeArgument ReferenceType ModelElement IfStatement BinaryOperation == MemberReference pack Literal null BlockStatement ReturnStatement MemberReference results End IfStatement BinaryOperation instanceof MemberReference pack ReferenceType Namespace BlockStatement StatementExpression MethodInvocation results MethodInvocation MemberReference pack getContents addAll End IfStatement BinaryOperation || BinaryOperation instanceof MemberReference pack ReferenceType Classifier BinaryOperation instanceof MemberReference pack ReferenceType Package BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator ges MethodInvocation modelImpl MethodInvocation MemberReference pack getParents getCoreHelper LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator allContents ClassCreator ReferenceType HashSet TypeArgument ReferenceType ModelElement ForStatement EnhancedForControl VariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge MemberReference ges BlockStatement StatementExpression MethodInvocation allContents MethodInvocation MemberReference ge getAllContents addAll End ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator element MemberReference allContents BlockStatement IfStatement BinaryOperation || MethodInvocation element MethodInvocation MemberReference VisibilityKindEnum VK_PUBLIC equals getVisibility MethodInvocation element MethodInvocation MemberReference VisibilityKindEnum VK_PROTECTED equals getVisibility BlockStatement StatementExpression MethodInvocation results MemberReference element add End End End IfStatement BinaryOperation instanceof MemberReference pack ReferenceType Collaboration BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal ""Not implement - getAllContents for: "" MemberReference pack End ReturnStatement MemberReference results ReferenceType ModelManagementHelper",0
1526,1526,,0
827,827,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * TODO: this property panel needs refactoring to remove dependency on
 *       old gui components.
 *
 * @author 5eichler
 */ PropPanelNode FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2681345252220104772L ConstructorDeclaration Modifier public /**
     * Construct a property panel for a UML Node element.
     */ PropPanelNode StatementExpression SuperConstructorInvocation Literal ""label.node"" MethodInvocation Literal ""Node"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MethodInvocation getModifiersPanel add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""Generalizations:"" MethodInvocation getGeneralizationScroll addField StatementExpression MethodInvocation Literal ""Specializations:"" MethodInvocation getSpecializationScroll addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType JList VariableDeclarator resList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLNodeDeployedComponentListModel StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.deployedcomponents"" localize ClassCreator ReferenceType JScrollPane MemberReference resList addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation MethodInvocation getActionNewReception addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelClassifier ClassDeclaration UMLNodeDeployedComponentListModel FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7137518645846584922L ConstructorDeclaration Modifier public /**
     * Construct a list model for the deployed components of a Node.
     */ UMLNodeDeployedComponentListModel StatementExpression SuperConstructorInvocation Literal ""deployedComponent"" MethodDeclaration Modifier protected buildModelList IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isANode getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getDeployedComponents getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model getFacade ReferenceType UMLModelElementListModel2",1
535,535,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * The listmodel of the client dependencies for some modelelement.
 *
 * @since Oct 12, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLModelElementClientDependencyListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLModelElementClientDependencyListModel.
     */ UMLModelElementClientDependencyListModel StatementExpression SuperConstructorInvocation Literal ""clientDependency"" MethodInvocation Model MethodInvocation getDependency getMetaTypes MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getClientDependencies getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isADependency getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getClientDependencies MethodInvocation MemberReference o contains getFacade ReferenceType UMLModelElementListModel2",0
1136,1136,,0
857,857,"CompilationUnit PackageDeclaration org.argouml.persistence ClassDeclaration /**
 * An exception to be thrown during failure of a save
 * to some medium.
 * @author Bob Tarling
 */ SaveException ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param message the message to be shown
     * @param cause the cause of the exception
     */ SaveException FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable cause StatementExpression SuperConstructorInvocation MemberReference message MemberReference cause ConstructorDeclaration Modifier public /**
     * @param message the message to be shown
     */ SaveException FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference message ConstructorDeclaration Modifier public /**
     * @param cause the cause of the exception
     */ SaveException FormalParameter ReferenceType Throwable cause StatementExpression SuperConstructorInvocation MemberReference cause ReferenceType PersistenceException",0
450,450,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 4, 2003
 */ UMLAssociationEndOrderingCheckBox ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationEndOrderingCheckBox.
     */ UMLAssociationEndOrderingCheckBox StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""label.ordered"" localize MethodInvocation ActionSetAssociationEndOrdering getInstance Literal ""ordering"" MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd MethodInvocation getTarget StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getOrdered MethodInvocation MethodInvocation Model MethodInvocation MemberReference associationEnd getOrdering getFacade equals getOrderingKind setSelected End ReferenceType UMLCheckBox2",1
868,868,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.UMLToDoItem Import org.argouml.uml.diagram.deployment.ui.FigNodeInstance Import org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram ClassDeclaration Modifier public /**
 * A critic to detect when there are node-instances that
 * are inside another element
 *
 * @author jrobbins
 */ CrNodeInstanceInsideElement ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ CrNodeInstanceInsideElement StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision PATTERNS addSupportedDecision MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType UMLDeploymentDiagram BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res MethodDeclaration /**
     * If there are node-instances that have an enclosing Fig
     * the returned vector-set is not null. Then in the vector-set
     * are the UMLDeploymentDiagram and all FigMNodeInstances with an
     * enclosing Fig
     *
     * @param dd the diagram to check
     * @return the set of offenders
     */ Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigNodeInstance BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType FigNodeInstance VariableDeclarator fn Cast ReferenceType FigNodeInstance MemberReference obj IfStatement BinaryOperation != MethodInvocation fn getEnclosingFig Literal null BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add End StatementExpression MethodInvocation offs MemberReference fn add End End ReturnStatement MemberReference offs ReferenceType CrUML",0
281,281,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * @since Nov 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionSetGeneralizationPowertype FieldDeclaration Modifier private final static ReferenceType ActionSetGeneralizationPowertype VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetGeneralizationPowertype ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetStructuralFeatureType.
     */ ActionSetGeneralizationPowertype StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator oldClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator newClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator gen Literal null IfStatement BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator box Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation box getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference o isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference gen MemberReference o = StatementExpression Assignment MemberReference oldClassifier MethodInvocation Model MethodInvocation MemberReference gen getPowertype getFacade = End StatementExpression Assignment MemberReference o MethodInvocation box getSelectedItem = IfStatement MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference newClassifier MemberReference o = End End IfStatement BinaryOperation && BinaryOperation != MemberReference newClassifier MemberReference oldClassifier BinaryOperation != MemberReference gen Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference gen MemberReference newClassifier setPowertype getCoreHelper End MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionSetGeneralizationPowertype getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",0
1534,1534,,0
144,144,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Oct 6, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLExtensionPointUseCaseListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLExtensionPointUseCaseListModel.
     */ UMLExtensionPointUseCaseListModel StatementExpression SuperConstructorInvocation Literal ""useCase"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getUseCase getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAUseCase getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getUseCase getFacade MemberReference o ReferenceType UMLModelElementListModel2",1
580,580,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.cognitive.critics.ui.CriticBrowserDialog Import org.argouml.i18n.Translator Import org.tigris.gef.undo.UndoableAction ClassDeclaration /**
 * Action to open the Browse Critics dialog.
 */ ActionOpenCritics ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionOpenCritics StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.browse-critics"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.browse-critics"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType CriticBrowserDialog VariableDeclarator dialog ClassCreator ReferenceType CriticBrowserDialog StatementExpression MethodInvocation dialog Literal true setVisible ReferenceType UndoableAction",0
295,295,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.kernel.Project InterfaceDeclaration Modifier public /**
 * An interface that all ArgoUML Figs are required to interface. It provides a
 * single place to specify behaviors that we want all Figs to have since with
 * don't have access to the GEF class hiearchy (and it's made up of concrete
 * classes instead of interfaces.
 * 
 * @author Tom Morris <tfmorris@gmail.com>
 * @since 0.25.4
 */ ArgoFig MethodDeclaration /**
     * Set the owning project for this Fig.
     * 
     * @param p the project
     */ Modifier public setProject FormalParameter ReferenceType Project p MethodDeclaration /**
     * Get the owning project for this fig.
     * 
     * @return the project
     */ Modifier public ReferenceType Project getProject",0
204,204,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for State->Internal Transitions.
 *
 */ GoStateToInternalTrans MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state.internal-transitions"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getInternalTransitions getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
275,275,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.util.List Import org.apache.log4j.Logger Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ToDoListEvent Import org.argouml.cognitive.ToDoListListener ClassDeclaration Modifier public /**
 * Represents a perspective for ToDo items: grouping by priority.
 *
 */ ToDoByPriority FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ToDoByPriority getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ ToDoByPriority StatementExpression SuperConstructorInvocation Literal ""combobox.todo-perspective-priority"" StatementExpression MethodInvocation ClassCreator ReferenceType GoListToPriorityToItem addSubTreeModel MethodDeclaration Modifier public toDoItemsChanged FormalParameter ReferenceType ToDoListEvent tde StatementExpression MethodInvocation LOG Literal ""toDoItemChanged"" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tde getToDoItemList LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType PriorityNode VariableDeclarator pn MethodInvocation PriorityNode getPriorityList BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference pn = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement ContinueStatement End StatementExpression MemberReference ++ nMatchingItems End IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 BlockStatement ContinueStatement End LocalVariableDeclaration BasicType int VariableDeclarator childIndices ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement ContinueStatement End StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems childIndices MethodInvocation MemberReference pn MemberReference item getIndexOfChild = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems End StatementExpression MethodInvocation This MemberReference path MemberReference childIndices MemberReference children fireTreeNodesChanged End MethodDeclaration Modifier public toDoItemsAdded FormalParameter ReferenceType ToDoListEvent tde StatementExpression MethodInvocation LOG Literal ""toDoItemAdded"" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tde getToDoItemList LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType PriorityNode VariableDeclarator pn MethodInvocation PriorityNode getPriorityList BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference pn = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement ContinueStatement End StatementExpression MemberReference ++ nMatchingItems End IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 BlockStatement ContinueStatement End LocalVariableDeclaration BasicType int VariableDeclarator childIndices ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement ContinueStatement End StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems childIndices MethodInvocation MemberReference pn MemberReference item getIndexOfChild = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems End StatementExpression MethodInvocation This MemberReference path MemberReference childIndices MemberReference children fireTreeNodesInserted End MethodDeclaration Modifier public toDoItemsRemoved FormalParameter ReferenceType ToDoListEvent tde StatementExpression MethodInvocation LOG Literal ""toDoItemRemoved"" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tde getToDoItemList LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType PriorityNode VariableDeclarator pn MethodInvocation PriorityNode getPriorityList BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nodePriority MethodInvocation pn getPriority LocalVariableDeclaration BasicType boolean VariableDeclarator anyInPri Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pri MethodInvocation item getPriority IfStatement BinaryOperation == MemberReference pri MemberReference nodePriority BlockStatement StatementExpression Assignment MemberReference anyInPri Literal true = End End IfStatement MemberReference ! anyInPri BlockStatement ContinueStatement End StatementExpression MethodInvocation LOG Literal ""toDoItemRemoved updating PriorityNode"" debug StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference pn = StatementExpression MethodInvocation MemberReference path fireTreeStructureChanged End MethodDeclaration Modifier public toDoListChanged FormalParameter ReferenceType ToDoListEvent tde ReferenceType ToDoPerspective ReferenceType ToDoListListener",0
1434,1434,,0
1490,1490,,0
816,816,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.io.File Import java.util.Collection Import java.util.Iterator Import javax.swing.table.DefaultTableModel Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration /**
 * The table model for source path settings. This class contains functionality
 * to load the source path settings from the model.
 */ SourcePathTableModel FieldDeclaration /**
     * Index of the column where model element objects are placed.
     */ Modifier final static BasicType int VariableDeclarator MODEL_ELEMENT_COLUMN Literal 0 FieldDeclaration /**
     * Index of the column where the model element names are placed.
     */ Modifier final static BasicType int VariableDeclarator NAME_COLUMN Literal 1 FieldDeclaration /**
     * Index of the column where the types of the model elements are placed.
     */ Modifier final static BasicType int VariableDeclarator TYPE_COLUMN Literal 2 FieldDeclaration /**
     * Index of the column where the source paths for the model elements are
     * placed.
     */ Modifier final static BasicType int VariableDeclarator SOURCE_PATH_COLUMN Literal 3 FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType SourcePathTableModel getLogger ConstructorDeclaration Modifier public /**
     * Creates a new instance of SourcePathTableModel.
     */ SourcePathTableModel FormalParameter ReferenceType SourcePathController srcPathCtrl StatementExpression SuperConstructorInvocation ArrayCreator ReferenceType Object ArrayInitializer ArrayCreator ReferenceType String ArrayInitializer Literal "" "" MethodInvocation Translator Literal ""misc.name"" localize MethodInvocation Translator Literal ""misc.type"" localize MethodInvocation Translator Literal ""misc.source-path"" localize LocalVariableDeclaration ReferenceType String VariableDeclarator strModel MethodInvocation Translator Literal ""misc.model"" localize LocalVariableDeclaration ReferenceType String VariableDeclarator strPackage MethodInvocation Translator Literal ""misc.package"" localize LocalVariableDeclaration ReferenceType String VariableDeclarator strClass MethodInvocation Translator Literal ""misc.class"" localize LocalVariableDeclaration ReferenceType String VariableDeclarator strInterface MethodInvocation Translator Literal ""misc.interface"" localize LocalVariableDeclaration ReferenceType Collection VariableDeclarator elems MethodInvocation srcPathCtrl getAllModelElementsWithSourcePath LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation elems iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation iter next LocalVariableDeclaration ReferenceType File VariableDeclarator path MethodInvocation srcPathCtrl MemberReference me getSourcePath IfStatement BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator type Literal """" LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference me isAModel getFacade BlockStatement StatementExpression Assignment MemberReference type MemberReference strModel = IfStatement MethodInvocation Model MethodInvocation MemberReference me isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference type MemberReference strPackage = LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference me getNamespace getFacade WhileStatement BinaryOperation != MemberReference parent Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + BinaryOperation + MethodInvocation Model MethodInvocation MemberReference parent getName getFacade Literal ""."" MemberReference name = End StatementExpression Assignment MemberReference parent MethodInvocation Model MethodInvocation MemberReference parent getNamespace getFacade = End IfStatement MethodInvocation Model MethodInvocation MemberReference me isAClass getFacade BlockStatement StatementExpression Assignment MemberReference type MemberReference strClass = IfStatement MethodInvocation Model MethodInvocation MemberReference me isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference type MemberReference strInterface = BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Can't assign a type to this model element: "" MemberReference me warn End End End End StatementExpression MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference me MemberReference name MemberReference type MethodInvocation path toString addRow BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Unexpected: the source path for "" MemberReference me Literal "" is null!"" warn End End MethodDeclaration /**
     * The only editable cells are the ones in the source path column.
     * @see javax.swing.table.DefaultTableModel#isCellEditable(int, int)
     */ Modifier public BasicType boolean isCellEditable FormalParameter BasicType int rowIndex FormalParameter BasicType int columnIndex ReturnStatement BinaryOperation == MemberReference columnIndex MemberReference SOURCE_PATH_COLUMN MethodDeclaration /**
     * For the specified row, get the model element (ME).
     * @param rowIndex the row index where the ME data is located
     * @return the ME
     */ Modifier public ReferenceType Object getModelElement FormalParameter BasicType int rowIndex ReturnStatement MethodInvocation MemberReference rowIndex MemberReference MODEL_ELEMENT_COLUMN getValueAt MethodDeclaration /**
     * For the specified row, get the model element (ME) name.
     * @param rowIndex the row index where the ME data is located
     * @return the ME name
     */ Modifier public ReferenceType String getMEName FormalParameter BasicType int rowIndex ReturnStatement Cast ReferenceType String MethodInvocation MemberReference rowIndex MemberReference NAME_COLUMN getValueAt MethodDeclaration /**
     * For the specified row, get the ME type.
     * @param rowIndex the row index where the ME data is located
     * @return the String representation of the ME type
     */ Modifier public ReferenceType String getMEType FormalParameter BasicType int rowIndex ReturnStatement Cast ReferenceType String MethodInvocation MemberReference rowIndex MemberReference TYPE_COLUMN getValueAt MethodDeclaration /**
     * For the specified row get the, get the source path.
     * @param rowIndex the row index where the ME data is located
     * @return the String representation of the ME source path
     */ Modifier public ReferenceType String getMESourcePath FormalParameter BasicType int rowIndex ReturnStatement Cast ReferenceType String MethodInvocation MemberReference rowIndex MemberReference SOURCE_PATH_COLUMN getValueAt ReferenceType DefaultTableModel",0
938,938,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Iterator Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect if a class has instance variables.
 * The critic fires currently only if a class and its base classes have
 * no attributes at all.
 * This is not necessarily correct and the critic will have to deal with
 * static attributes or attributes which are defined in a base class but are
 * private.
 */ CrNoInstanceVariables FieldDeclaration Modifier private final static BasicType int VariableDeclarator MAX_DEPTH Literal 50 ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrNoInstanceVariables StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STORAGE addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_COMPLETENESS setKnowledgeTypes StatementExpression MethodInvocation Literal ""structuralFeature"" addTrigger MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MemberReference dm getName getFacade Literal null Literal """" BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isType getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isUtility getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation MemberReference dm Literal 0 findChangeableInstanceAttributeInInherited BlockStatement ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND MethodDeclaration Modifier public Annotation Override ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClAttributeCompartment getTheInstance MethodDeclaration /**
     * Searches for attributes that are changeable instance attributes.
     *
     * @param dm The classifier to examine.
     * @param depth Number of levels searched.
     * @return true if an attribute can be found in this class
     *		or in any of its generalizations.
     */ Modifier private BasicType boolean findChangeableInstanceAttributeInInherited FormalParameter ReferenceType Object dm FormalParameter BasicType int depth LocalVariableDeclaration ReferenceType Iterator VariableDeclarator attribs MethodInvocation Model MethodInvocation MemberReference dm getAttributes MethodInvocation iterator getFacade WhileStatement MethodInvocation attribs hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation attribs next IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference attr isStatic getFacade MethodInvocation ! Model MethodInvocation MemberReference attr isReadOnly getFacade BlockStatement ReturnStatement Literal true End End IfStatement BinaryOperation > MemberReference depth MemberReference MAX_DEPTH ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference dm getGeneralizations MethodInvocation iterator getFacade WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation iter next getGeneral getFacade IfStatement BinaryOperation == MemberReference parent MemberReference dm ContinueStatement End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade MethodInvocation MemberReference parent BinaryOperation + MemberReference depth Literal 1 findChangeableInstanceAttributeInInherited BlockStatement ReturnStatement Literal true End End ReturnStatement Literal false MethodDeclaration Modifier public Annotation Override initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizAddInstanceVariable BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion StatementExpression Cast ReferenceType WizAddInstanceVariable MemberReference w StatementExpression Cast ReferenceType WizAddInstanceVariable MemberReference w End MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizAddInstanceVariable ReferenceType CrUML",1
1103,1103,,1
821,821,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.behavior.state_machines.PropPanelStateMachine ClassDeclaration Modifier public /**
 * PropertyPanel for Activitygraphs. It inherits almost everything from
 * PropPanelStateMachine.
 */ PropPanelActivityGraph ConstructorDeclaration Modifier public /**
     * The constructor.
     */ PropPanelActivityGraph StatementExpression SuperConstructorInvocation Literal ""label.activity-graph-title"" MethodInvocation Literal ""ActivityGraph"" lookupIcon MethodDeclaration Modifier protected Annotation Override ReferenceType UMLComboBoxModel2 getContextComboBoxModel ReturnStatement ClassCreator ReferenceType UMLActivityGraphContextComboBoxModel MethodDeclaration /**
     * @see org.argouml.uml.ui.behavior.state_machines.PropPanelStateMachine#initialize()
     */ Modifier protected Annotation Override initialize StatementExpression SuperMethodInvocation initialize StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType JList VariableDeclarator partitionList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLActivityGraphPartiitionListModel StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.partition"" localize ClassCreator ReferenceType JScrollPane MemberReference partitionList addField ClassDeclaration Modifier public /**
     * The model for the partitions of a ActivityGraph.
     *
     * @author Michiel
     */ UMLActivityGraphPartiitionListModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLActivityGraphPartiitionListModel.
         */ UMLActivityGraphPartiitionListModel StatementExpression SuperConstructorInvocation Literal ""partition"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getPartitions getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getPartitions MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2 ReferenceType PropPanelStateMachine",0
77,77,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.Dimension Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.beans.PropertyChangeEvent Import java.util.Iterator Import java.util.List Import java.util.Vector Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ui.ActionAddConcurrentRegion Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigLine Import org.tigris.gef.presentation.FigRRect Import org.tigris.gef.presentation.FigRect Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML MCompositeState in a diagram.
 *
 * @author jrobbins@ics.uci.edu
 */ FigCompositeState FieldDeclaration Modifier private ReferenceType FigRect VariableDeclarator cover FieldDeclaration Modifier private ReferenceType FigLine VariableDeclarator divider ConstructorDeclaration Modifier public /**
     * The main constructor.
     *
     */ FigCompositeState StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference cover ClassCreator ReferenceType FigRRect MethodInvocation getInitialX MethodInvocation getInitialY MethodInvocation getInitialWidth MethodInvocation getInitialHeight MemberReference Color black MemberReference Color white = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression Assignment MemberReference divider ClassCreator ReferenceType FigLine MethodInvocation getInitialX BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 BinaryOperation - MethodInvocation getInitialWidth Literal 1 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 MemberReference Color black = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference divider addFig StatementExpression MethodInvocation MethodInvocation getInternal addFig LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds ConstructorDeclaration Modifier public /**
     * The constructor for when a new Fig is created for an existing UML elm.
     *
     * @param gm ignored
     * @param node the UML element
     */ FigCompositeState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigCompositeState VariableDeclarator figClone Cast ReferenceType FigCompositeState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone divider Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setInternal ReturnStatement MemberReference figClone MethodDeclaration Modifier public ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator internalDim MethodInvocation MethodInvocation getMinimumSize getInternal LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference SPACE_TOP MemberReference nameDim height MemberReference SPACE_MIDDLE MemberReference internalDim height MemberReference SPACE_BOTTOM LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation Math BinaryOperation + MemberReference nameDim width BinaryOperation * Literal 2 MemberReference MARGIN BinaryOperation + MemberReference internalDim width BinaryOperation * Literal 2 MemberReference MARGIN max ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h MethodDeclaration Modifier public BasicType boolean getUseTrapRect ReturnStatement Literal true MethodDeclaration Modifier protected setStandardBounds FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration ReferenceType List VariableDeclarator regionsList MethodInvocation getEnclosedFigs IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MethodInvocation getOwner isConcurrent getFacade MethodInvocation ! regionsList isEmpty BinaryOperation instanceof MethodInvocation regionsList BinaryOperation - MethodInvocation regionsList size Literal 1 get ReferenceType FigConcurrentRegion BlockStatement LocalVariableDeclaration ReferenceType FigConcurrentRegion VariableDeclarator f Cast ReferenceType FigConcurrentRegion MethodInvocation regionsList BinaryOperation - MethodInvocation regionsList size Literal 1 get LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator regionBounds MethodInvocation f getBounds IfStatement BinaryOperation <= BinaryOperation + BinaryOperation - MemberReference h MemberReference oldBounds height MemberReference regionBounds height MethodInvocation f getMinimumSize BlockStatement StatementExpression Assignment MemberReference h MemberReference oldBounds height = StatementExpression Assignment MemberReference y MemberReference oldBounds y = End End End StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference MARGIN BinaryOperation + MemberReference y MemberReference SPACE_TOP BinaryOperation - MemberReference w BinaryOperation * Literal 2 MemberReference MARGIN MemberReference nameDim height setBounds getNameFig StatementExpression MethodInvocation divider MemberReference x BinaryOperation + BinaryOperation + MemberReference y MemberReference DIVIDER_Y MemberReference nameDim height BinaryOperation - BinaryOperation + MemberReference x MemberReference w Literal 1 BinaryOperation + BinaryOperation + MemberReference y MemberReference DIVIDER_Y MemberReference nameDim height setShape StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference MARGIN BinaryOperation + BinaryOperation + BinaryOperation + MemberReference y MemberReference nameDim height MemberReference SPACE_TOP MemberReference SPACE_MIDDLE BinaryOperation - MemberReference w BinaryOperation * Literal 2 MemberReference MARGIN BinaryOperation - BinaryOperation - BinaryOperation - BinaryOperation - MemberReference h MemberReference nameDim height MemberReference SPACE_TOP MemberReference SPACE_MIDDLE MemberReference SPACE_BOTTOM setBounds getInternal StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MethodInvocation getOwner isConcurrent getFacade MethodInvocation ! regionsList isEmpty BinaryOperation instanceof MethodInvocation regionsList BinaryOperation - MethodInvocation regionsList size Literal 1 get ReferenceType FigConcurrentRegion BlockStatement LocalVariableDeclaration ReferenceType FigConcurrentRegion VariableDeclarator f Cast ReferenceType FigConcurrentRegion MethodInvocation regionsList BinaryOperation - MethodInvocation regionsList size Literal 1 get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MethodInvocation regionsList size Literal 1 MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType FigConcurrentRegion MethodInvocation regionsList MemberReference i get End StatementExpression MethodInvocation f BinaryOperation - MemberReference x MemberReference oldBounds x BinaryOperation - MemberReference y MemberReference oldBounds y BinaryOperation - MemberReference w Literal 6 BinaryOperation - MemberReference h MemberReference oldBounds height Literal true setBounds End End MethodDeclaration /**
     * To resize only when a new concurrent region is added,
     * changing the height.
     *
     * @param h the new height
     */ Modifier public setBounds FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator x MemberReference oldBounds x LocalVariableDeclaration BasicType int VariableDeclarator y MemberReference oldBounds y LocalVariableDeclaration BasicType int VariableDeclarator w MemberReference oldBounds width StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + BinaryOperation + MemberReference y MemberReference nameDim height Literal 4 BinaryOperation - MemberReference w Literal 4 BinaryOperation - BinaryOperation - MemberReference h MemberReference nameDim height Literal 6 setBounds getInternal StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange MethodDeclaration Modifier public ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions LocalVariableDeclaration BasicType boolean VariableDeclarator ms BinaryOperation > MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 IfStatement MemberReference ! ms BlockStatement StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset ClassCreator ReferenceType ActionAddConcurrentRegion add End ReturnStatement MemberReference popUpActions MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor StatementExpression MethodInvocation divider MemberReference col setLineColor MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setFillColor MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation cover getFillColor MethodDeclaration Modifier public setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled StatementExpression MethodInvocation MethodInvocation MemberReference f setFilled getBigPort MethodDeclaration Modifier public BasicType boolean getFilled ReturnStatement MethodInvocation cover isFilled MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled MethodDeclaration Modifier public setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation cover MemberReference w setLineWidth StatementExpression MethodInvocation divider MemberReference w setLineWidth MethodDeclaration Modifier public BasicType int getLineWidth ReturnStatement MethodInvocation cover getLineWidth MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement MethodInvocation mee MethodInvocation Literal ""isConcurrent"" equals getPropertyName BlockStatement StatementExpression MethodInvocation renderingChanged End MethodDeclaration Modifier protected BasicType int getInitialHeight ReturnStatement Literal 150 MethodDeclaration Modifier protected BasicType int getInitialWidth ReturnStatement Literal 180 MethodDeclaration Modifier protected BasicType int getInitialX ReturnStatement Literal 0 MethodDeclaration Modifier protected BasicType int getInitialY ReturnStatement Literal 0 FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8173637358029852407L ReferenceType FigState",0
940,940,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import javax.swing.JPanel Import org.apache.log4j.Logger Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ui.WizStepChoice Import org.argouml.cognitive.ui.WizStepConfirm Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * A non-modal wizard to help the user change select an association
 * to make non-aggregate.
 */ WizBreakCircularComp FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType WizBreakCircularComp getLogger FieldDeclaration Modifier private ReferenceType String VariableDeclarator instructions1 MethodInvocation Translator Literal ""critics.WizBreakCircularComp-ins1"" localize FieldDeclaration Modifier private ReferenceType String VariableDeclarator instructions2 MethodInvocation Translator Literal ""critics.WizBreakCircularComp-ins2"" localize FieldDeclaration Modifier private ReferenceType String VariableDeclarator instructions3 MethodInvocation Translator Literal ""critics.WizBreakCircularComp-ins3"" localize FieldDeclaration Modifier private ReferenceType WizStepChoice VariableDeclarator step1 Literal null FieldDeclaration Modifier private ReferenceType WizStepChoice VariableDeclarator step2 Literal null FieldDeclaration Modifier private ReferenceType WizStepConfirm VariableDeclarator step3 Literal null FieldDeclaration Modifier private ReferenceType Object VariableDeclarator selectedCls Literal null FieldDeclaration Modifier private ReferenceType Object VariableDeclarator selectedAsc Literal null ConstructorDeclaration Modifier public /**
     * The constructor.
     */ WizBreakCircularComp MethodDeclaration Modifier public Annotation Override BasicType int getNumSteps ReturnStatement Literal 3 MethodDeclaration /**
     * @return The choices for this step.
     */ Modifier protected ReferenceType List TypeArgument ReferenceType String getOptions1 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement BinaryOperation != MethodInvocation getToDoItem Literal null BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation getToDoItem ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item getOffenders BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Model MethodInvocation MemberReference me getName getFacade StatementExpression MethodInvocation result MemberReference s add End End ReturnStatement MemberReference result MethodDeclaration /**
     * @return The choices for this step.
     */ Modifier protected ReferenceType List TypeArgument ReferenceType String getOptions2 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement BinaryOperation != MemberReference selectedCls Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator aes MethodInvocation Model MethodInvocation MemberReference selectedCls getAssociationEnds getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator fromType MemberReference selectedCls LocalVariableDeclaration ReferenceType String VariableDeclarator fromName MethodInvocation Model MethodInvocation MemberReference fromType getName getFacade ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation aes iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator fromEnd MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference fromEnd getAssociation getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator toEnd ClassCreator MethodInvocation Literal 0 get ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade IfStatement BinaryOperation == MemberReference toEnd MemberReference fromEnd BlockStatement StatementExpression Assignment MemberReference toEnd ClassCreator MethodInvocation Literal 1 get ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade = End LocalVariableDeclaration ReferenceType Object VariableDeclarator toType MethodInvocation Model MethodInvocation MemberReference toEnd getType getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator ascName MethodInvocation Model MethodInvocation MemberReference asc getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator toName MethodInvocation Model MethodInvocation MemberReference toType getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference ascName Literal "" "" MethodInvocation Translator Literal ""critics.WizBreakCircularComp-from"" localize MemberReference fromName Literal "" "" MethodInvocation Translator Literal ""critics.WizBreakCircularComp-to"" localize Literal "" "" MemberReference toName StatementExpression MethodInvocation result MemberReference s add End End ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType JPanel makePanel FormalParameter BasicType int newStep SwitchStatement MemberReference newStep SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference step1 ClassCreator ReferenceType WizStepChoice This MemberReference instructions1 MethodInvocation getOptions1 = StatementExpression MethodInvocation step1 MethodInvocation getToDoItem setTarget End ReturnStatement MemberReference step1 SwitchStatementCase Literal 2 IfStatement BinaryOperation == MemberReference step2 Literal null BlockStatement StatementExpression Assignment MemberReference step2 ClassCreator ReferenceType WizStepChoice This MemberReference instructions2 MethodInvocation getOptions2 = StatementExpression MethodInvocation step2 MethodInvocation getToDoItem setTarget End ReturnStatement MemberReference step2 SwitchStatementCase Literal 3 IfStatement BinaryOperation == MemberReference step3 Literal null BlockStatement StatementExpression Assignment MemberReference step3 ClassCreator ReferenceType WizStepConfirm This MemberReference instructions3 = End ReturnStatement MemberReference step3 End ReturnStatement Literal null MethodDeclaration Modifier public doAction FormalParameter BasicType int oldStep StatementExpression MethodInvocation LOG BinaryOperation + Literal ""doAction "" MemberReference oldStep debug LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation getToDoItem LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation item getOffenders SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1 getSelectedIndex = End IfStatement BinaryOperation == MemberReference choice Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType Error Literal ""nothing selected, should not get here"" End StatementExpression Assignment MemberReference selectedCls MethodInvocation offs MemberReference choice get = BreakStatement SwitchStatementCase Literal 2 IfStatement BinaryOperation != MemberReference step2 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step2 getSelectedIndex = End IfStatement BinaryOperation == MemberReference choice Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType Error Literal ""nothing selected, should not get here"" End LocalVariableDeclaration ReferenceType Object VariableDeclarator ae Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference selectedCls getAssociationEnds MethodInvocation iterator getFacade ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator n Literal 0 BinaryOperation <= MemberReference n MemberReference choice MemberReference ++ n BlockStatement StatementExpression Assignment MemberReference ae MethodInvocation iter next = End StatementExpression Assignment MemberReference selectedAsc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade = BreakStatement SwitchStatementCase Literal 3 IfStatement BinaryOperation != MemberReference selectedAsc Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator conns ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference selectedAsc getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 MethodInvocation conns Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 MethodInvocation conns Literal 1 get TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG Literal ""could not set aggregation"" MemberReference pve error End BreakStatement End MethodDeclaration Modifier public Annotation Override BasicType boolean canGoNext ReturnStatement MethodInvocation canFinish MethodDeclaration Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1 Literal null BinaryOperation != MethodInvocation step1 getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 2 BinaryOperation != MemberReference step2 Literal null BinaryOperation != MethodInvocation step2 getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true End ReturnStatement Literal false ReferenceType UMLWizard",0
289,289,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.util.ArrayList Import java.util.List Import java.util.Vector Import org.argouml.cognitive.Critic ClassDeclaration Modifier public /**
 * This class represents a knowledgetype, which is a classification for critics.
 *
 */ KnowledgeTypeNode FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType KnowledgeTypeNode VariableDeclarator types Literal null FieldDeclaration Modifier private ReferenceType String VariableDeclarator name ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param n the name for the knowledgetype
     */ KnowledgeTypeNode FormalParameter ReferenceType String n StatementExpression Assignment MemberReference name MemberReference n = MethodDeclaration /**
     * @return a list of all the types
     * @deprecated for 0.25.4 by tfmorris. Use {@link #getTypeList()}.
     */ Modifier public static Annotation Deprecated ReferenceType Vector TypeArgument ReferenceType KnowledgeTypeNode getTypes ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType KnowledgeTypeNode MethodInvocation getTypeList MethodDeclaration /**
     * @return a list of all the types
     */ Modifier public static ReferenceType List TypeArgument ReferenceType KnowledgeTypeNode getTypeList IfStatement BinaryOperation == MemberReference types Literal null BlockStatement StatementExpression Assignment MemberReference types ClassCreator ReferenceType ArrayList TypeArgument ReferenceType KnowledgeTypeNode = StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_DESIGNERS add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_CORRECTNESS add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_COMPLETENESS add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_CONSISTENCY add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_SYNTAX add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_SEMANTICS add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_OPTIMIZATION add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_PRESENTATION add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_ORGANIZATIONAL add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_EXPERIENCIAL add StatementExpression MethodInvocation types ClassCreator ReferenceType KnowledgeTypeNode MemberReference Critic KT_TOOL add End ReturnStatement MemberReference types MethodDeclaration /**
     * @return the name of the knowledgetype
     */ Modifier public ReferenceType String getName ReturnStatement MemberReference name MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getName",0
430,430,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 29, 2003
 */ ActionSetStructuralFeatureTargetScope FieldDeclaration Modifier private final static ReferenceType ActionSetStructuralFeatureTargetScope VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetStructuralFeatureTargetScope ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetCompositeStateConcurrent.
     */ ActionSetStructuralFeatureTargetScope StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAStructuralFeature getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference m TernaryExpression MethodInvocation source isSelected MethodInvocation Model MethodInvocation getClassifier getScopeKind MethodInvocation Model MethodInvocation getInstance getScopeKind setTargetScope getCoreHelper End End MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionSetStructuralFeatureTargetScope getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",0
516,516,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Class->Associated Class.
 *
 */ GoClassToAssociatedClass MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.class.associated-class"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getAssociatedClasses getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1000,1000,,0
364,364,"CompilationUnit PackageDeclaration org.argouml.uml.reveng.java Import java.util.ArrayList Import java.util.Collection Import org.apache.log4j.Logger Import org.argouml.model.Model ClassDeclaration /**
 * The parse state keep control of data during parsing.
 *
 * @author Marcus Andersson
 */ ParseState FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ParseState getLogger FieldDeclaration /**
     * When the classifier parse is finished, these features will be
     * removed from the model.
     */ Modifier private ReferenceType Collection VariableDeclarator obsoleteFeatures FieldDeclaration /**
     * When the classifier parse is finished, these inner classes
     * will be removed from the model.
     */ Modifier private ReferenceType Collection VariableDeclarator obsoleteInnerClasses FieldDeclaration /**
     * This prefix is appended to inner classes, if any.
     */ Modifier private ReferenceType String VariableDeclarator classnamePrefix FieldDeclaration /**
     * The available context for currentClassifier.
     */ Modifier private ReferenceType Context VariableDeclarator context FieldDeclaration /**
     * The classifier that is parsed for the moment.
     */ Modifier private ReferenceType Object VariableDeclarator classifier FieldDeclaration /**
     * Counter for anonymous innner classes.
     */ Modifier private BasicType int VariableDeclarator anonymousClassCounter FieldDeclaration /**
     * Represents the source file being parsed.
     */ Modifier private ReferenceType Object VariableDeclarator component ConstructorDeclaration Modifier public /**
     * Create a new parse state.
     *
     * @param model The model.
     * @param javaLangPackage The default package java.lang.
     */ ParseState FormalParameter ReferenceType Object model FormalParameter ReferenceType Object javaLangPackage StatementExpression Assignment MemberReference obsoleteInnerClasses ClassCreator ReferenceType ArrayList = StatementExpression Assignment MemberReference classifier Literal null = StatementExpression Assignment MemberReference context ClassCreator ReferenceType PackageContext ClassCreator ReferenceType PackageContext Literal null MemberReference model MemberReference javaLangPackage = StatementExpression Assignment MemberReference anonymousClassCounter Literal 0 = ConstructorDeclaration Modifier public /**
     * Create a new parse state based on another parse state.
     *
     * @param previousState The base parse state.
     * @param mClassifier The new classifier being parsed.
     * @param currentPackage The current package being parsed.
     */ ParseState FormalParameter ReferenceType ParseState previousState FormalParameter ReferenceType Object mClassifier FormalParameter ReferenceType Object currentPackage StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Parsing the state of "" MemberReference mClassifier info StatementExpression Assignment MemberReference classnamePrefix BinaryOperation + BinaryOperation + MemberReference previousState classnamePrefix MethodInvocation Model MethodInvocation MemberReference mClassifier getName getFacade Literal ""$"" = StatementExpression Assignment MemberReference obsoleteFeatures ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference mClassifier getFeatures getFacade = StatementExpression Assignment MemberReference obsoleteInnerClasses ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference mClassifier getOwnedElements getFacade = StatementExpression Assignment MemberReference context ClassCreator ReferenceType OuterClassifierContext MemberReference previousState context MemberReference mClassifier MemberReference currentPackage MemberReference classnamePrefix = StatementExpression Assignment MemberReference classifier MemberReference mClassifier = StatementExpression Assignment MemberReference anonymousClassCounter MemberReference previousState anonymousClassCounter = MethodDeclaration /**
     * Add a package to the current context.
     *
     * @param mPackage The package to add.
     */ Modifier public addPackageContext FormalParameter ReferenceType Object mPackage StatementExpression Assignment MemberReference context ClassCreator ReferenceType PackageContext MemberReference context MemberReference mPackage = MethodDeclaration /**
     * Add a classifier to the current context.
     *
     * @param mClassifier The classifier to add.
     */ Modifier public addClassifierContext FormalParameter ReferenceType Object mClassifier StatementExpression Assignment MemberReference context ClassCreator ReferenceType ClassifierContext MemberReference context MemberReference mClassifier = MethodDeclaration /**
     * @param c the source file being parsed
     */ Modifier public addComponent FormalParameter ReferenceType Object c StatementExpression Assignment This MemberReference component MemberReference c = MethodDeclaration /**
     * @return the source file being parsed
     */ Modifier public ReferenceType Object getComponent ReturnStatement MemberReference component MethodDeclaration /**
     * Get the current context.
     *
     * @return The current context.
     */ Modifier public ReferenceType Context getContext ReturnStatement MemberReference context MethodDeclaration /**
     * Get the current classifier.
     *
     * @return The current classifier.
     */ Modifier public ReferenceType Object getClassifier ReturnStatement MemberReference classifier MethodDeclaration /**
     * Tell the parse state that an anonymous class is being parsed.
     *
     * @return The name of the anonymous class.
     */ Modifier public ReferenceType String anonymousClass StatementExpression Assignment MemberReference classnamePrefix MethodInvocation classnamePrefix Literal 0 BinaryOperation + MethodInvocation classnamePrefix Literal ""$"" indexOf Literal 1 substring = StatementExpression MemberReference ++ anonymousClassCounter ReturnStatement MethodInvocation Integer MethodInvocation toString MemberReference anonymousClassCounter valueOf MethodDeclaration /**
     * Tell the parse state that an outer class is being parsed.
     */ Modifier public outerClassifier StatementExpression Assignment MemberReference classnamePrefix Literal """" = StatementExpression Assignment MemberReference anonymousClassCounter Literal 0 = MethodDeclaration /**
     * Get the current classname prefix.
     *
     * @return The current classname prefix.
     */ Modifier public ReferenceType String getClassnamePrefix ReturnStatement MemberReference classnamePrefix MethodDeclaration /**
     * Tell the parse state that a classifier is an inner classifier
     * to the current parsed classifier.
     *
     * @param mClassifier The inner classifier.
     */ Modifier public innerClassifier FormalParameter ReferenceType Object mClassifier StatementExpression MethodInvocation obsoleteInnerClasses MemberReference mClassifier remove MethodDeclaration /**
     * Remove features no longer in the source from the current
     * classifier in the model.
     */ Modifier public removeObsoleteFeatures IfStatement BinaryOperation == MemberReference obsoleteFeatures Literal null BlockStatement ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference classifier MemberReference feature removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference feature delete getUmlFactory End MethodDeclaration /**
     * Remove inner classes no longer in the source from the current
     * classifier in the model.
     */ Modifier public removeObsoleteInnerClasses IfStatement BinaryOperation == MemberReference obsoleteInnerClasses Literal null BlockStatement ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference obsoleteInnerClasses BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element delete getUmlFactory End End MethodDeclaration /**
     * Tell the parse state that a feature belongs to the current
     * classifier.
     *
     * @param feature The feature.
     */ Modifier public feature FormalParameter ReferenceType Object feature StatementExpression MethodInvocation obsoleteFeatures MemberReference feature remove MethodDeclaration /**
     * Get a feature from the current classifier not yet modeled.
     *
     * @param name The name of the feature.
     * @return The found feature, null if not found.
     */ Modifier public ReferenceType Object getFeature FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator mFeature MemberReference obsoleteFeatures BlockStatement IfStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference mFeature getName getFacade equals BlockStatement ReturnStatement MemberReference mFeature End End ReturnStatement Literal null MethodDeclaration /**
     * Get a features from the current classifier not yet modeled.
     *
     * @param name The name of the feature.
     * @return The collection of found features
     */ Modifier public ReferenceType Collection getFeatures FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator mFeature MemberReference obsoleteFeatures BlockStatement IfStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference mFeature getName getFacade equals BlockStatement StatementExpression MethodInvocation list MemberReference mFeature add End End ReturnStatement MemberReference list MethodDeclaration /**
     * Get a method from the current classifier not yet modeled.
     *
     * @param name The name of the method.
     * @return The found method, null if not found.
     */ Modifier public ReferenceType Object getMethod FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator mFeature MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference mFeature isAMethod getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference mFeature getName getFacade equals BlockStatement ReturnStatement MemberReference mFeature End End ReturnStatement Literal null MethodDeclaration /**
     * Get a operation from the current classifier not yet modeled.
     *
     * @param name The name of the operation.
     * @return The found operation, null if not found.
     */ Modifier public ReferenceType Object getOperation FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference feature isAOperation getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference feature getName getFacade equals BlockStatement ReturnStatement MemberReference feature End End ReturnStatement Literal null MethodDeclaration /**
     * Get a attribute from the current classifier not yet modeled.
     *
     * @param name The name of the attribute.
     * @return The found attribute, null if not found.
     */ Modifier public ReferenceType Object getAttribute FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference feature isAAttribute getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference feature getName getFacade equals BlockStatement ReturnStatement MemberReference feature End End ReturnStatement Literal null",0
5,5,"CompilationUnit PackageDeclaration org.argouml.application.events Import org.argouml.application.api.ArgoEventListener InterfaceDeclaration Modifier public /**
 * An interface that objects that are interested in HelpEvents 
 * must extend.
 *
 * @author Michiel
 */ ArgoHelpEventListener MethodDeclaration /**
     * Invoked when there is a new help text to be shown, 
     * that should replace any previous one.
     * 
     * @param e <code>ArgoHelpEvent</code> describing the changed text
     */ Modifier public helpChanged FormalParameter ReferenceType ArgoHelpEvent e MethodDeclaration /**
     * Invoked when a previously shown help text has to be removed.
     * 
     * @param e <code>ArgoHelpEvent</code> describing the removed event
     */ Modifier public helpRemoved FormalParameter ReferenceType ArgoHelpEvent e ReferenceType ArgoEventListener",0
910,910,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.event.KeyListener Import java.awt.event.MouseEvent Import java.awt.event.MouseListener Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.beans.VetoableChangeListener Import javax.swing.Action Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.kernel.DelayedVChangeListener Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.uml.CommentEdge Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.argouml.uml.diagram.ui.FigNodeModelElement Import org.tigris.gef.base.Layer Import org.tigris.gef.base.LayerPerspectiveMutable Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * Class to display a UML note connection to a
 * annotated model element.<p>
 *
 * The owner of this fig is always CommentEdge
 *
 * @author Andreas Rueckert a_rueckert@gmx.net
 * @author jaap.branderhorst@xs4all.nl
 */ FigEdgeNote FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 7210384676965727564L FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType FigEdgeNote getLogger FieldDeclaration Modifier private ReferenceType CommentEdge VariableDeclarator owner FieldDeclaration Modifier private ReferenceType Object VariableDeclarator comment FieldDeclaration Modifier private ReferenceType Object VariableDeclarator annotatedElement ConstructorDeclaration Modifier public /**
     * Construct a new note connection. Use the same layout as for
     * other edges.
     */ FigEdgeNote StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation LOG Literal ""Constructing a FigEdgeNote"" info StatementExpression MethodInvocation Literal true setBetweenNearestPoints StatementExpression MethodInvocation MethodInvocation Literal true setDashed getFig StatementExpression MethodInvocation Literal false allowRemoveFromDiagram ConstructorDeclaration Modifier public /**
     * Constructor that hooks the Fig to a CommentEdge.
     *
     * @param commentEdge the CommentEdge
     * @param theLayer the layer (ignored)
     */ FigEdgeNote FormalParameter ReferenceType Object commentEdge FormalParameter ReferenceType Layer theLayer StatementExpression ExplicitConstructorInvocation IfStatement BinaryOperation instanceof MemberReference theLayer ReferenceType LayerPerspectiveMutable BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The layer must be a mutable perspective. Got "" MemberReference theLayer End IfStatement BinaryOperation instanceof MemberReference commentEdge ReferenceType CommentEdge BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The owner must be a CommentEdge. Got "" MemberReference commentEdge End LocalVariableDeclaration ReferenceType Object VariableDeclarator fromNode Cast ReferenceType CommentEdge MemberReference commentEdge IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""The given comment edge must start at a model element. "" Literal ""Got "" MemberReference fromNode End LocalVariableDeclaration ReferenceType Object VariableDeclarator toNode Cast ReferenceType CommentEdge MemberReference commentEdge IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The given comment edge must end at a model element. Got "" MemberReference toNode End LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation theLayer MemberReference toNode presentationFor IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeModelElement BlockStatement StatementExpression Assignment MemberReference destFig Cast ReferenceType FigEdgeModelElement MemberReference destFig = End IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigNodeModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The given comment edge must end at a model element"" Literal "" in the given layer."" End LocalVariableDeclaration ReferenceType Fig VariableDeclarator sourceFig MethodInvocation theLayer MemberReference fromNode presentationFor IfStatement BinaryOperation instanceof MemberReference sourceFig ReferenceType FigEdgeModelElement BlockStatement StatementExpression Assignment MemberReference sourceFig Cast ReferenceType FigEdgeModelElement MemberReference sourceFig = End IfStatement BinaryOperation instanceof MemberReference sourceFig ReferenceType FigNodeModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The given comment edge must start at a model element "" Literal ""in the given layer."" End StatementExpression MethodInvocation MemberReference theLayer setLayer StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference destFig setDestFigNode StatementExpression MethodInvocation MemberReference destFig setDestPortFig StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference sourceFig setSourceFigNode StatementExpression MethodInvocation MemberReference sourceFig setSourcePortFig StatementExpression MethodInvocation computeRoute StatementExpression MethodInvocation MemberReference commentEdge setOwner MethodDeclaration Modifier public setFig FormalParameter ReferenceType Fig f StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Setting the internal fig to "" MemberReference f info StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation MethodInvocation Literal true setDashed getFig MethodDeclaration Modifier protected BasicType boolean canEdit FormalParameter ReferenceType Fig f ReturnStatement Literal false MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation Translator Literal ""misc.comment-edge"" localize MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation && BinaryOperation instanceof MemberReference e ReferenceType RemoveAssociationEvent BinaryOperation == MethodInvocation e getOldValue MemberReference annotatedElement BlockStatement StatementExpression MethodInvocation removeFromDiagram End MethodDeclaration Modifier public ReferenceType String getTipString FormalParameter ReferenceType MouseEvent me ReturnStatement Literal ""Comment Edge"" MethodDeclaration Modifier public setOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation == MemberReference newOwner Literal null BlockStatement StatementExpression Assignment MemberReference newOwner ClassCreator ReferenceType CommentEdge MemberReference comment MemberReference annotatedElement = End StatementExpression Assignment MemberReference owner Cast ReferenceType CommentEdge MemberReference newOwner = MethodDeclaration Modifier public ReferenceType Object getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression Assignment MemberReference owner ClassCreator ReferenceType CommentEdge = End ReturnStatement MemberReference owner MethodDeclaration /**
     * Overrides the standard method to return null. A note edge
     * cannot have a stereotype.
     *
     * @return empty array of actions.
     */ Modifier final protected ReferenceType Action getApplyStereotypeActions ReturnStatement ArrayCreator ReferenceType Action Literal 0 MethodDeclaration Modifier public postLoad StatementExpression SuperMethodInvocation postLoad LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator o Cast ReferenceType CommentEdge MethodInvocation getOwner StatementExpression MethodInvocation o MethodInvocation MethodInvocation getOwner getDestFigNode setDestination StatementExpression MethodInvocation o MethodInvocation MethodInvocation getOwner getSourceFigNode setSource MethodDeclaration /**
     * generate the notation for the modelelement and stuff it into the text Fig
     */ Modifier protected updateNameText ReturnStatement MethodDeclaration /**
     * generate the notation for the stereotype and stuff it into the text Fig
     */ Modifier protected updateStereotypeText ReturnStatement MethodDeclaration Modifier protected updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent pve StatementExpression MethodInvocation MemberReference pve modelChanged MethodDeclaration Modifier public removeFromDiagramImpl StatementExpression MethodInvocation superRemoveFromDiagram MethodDeclaration /**
     * Returns the source of the edge. The source is the owner of the
     * node the edge travels from in a binary relationship. For
     * instance: for a classifierrole, this is the sender.
     * @return MModelElement
     */ Modifier protected ReferenceType Object getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator theOwner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference theOwner Literal null BlockStatement ReturnStatement Cast ReferenceType CommentEdge MemberReference theOwner End ReturnStatement Literal null MethodDeclaration /**
     * Returns the destination of the edge. The destination is the
     * owner of the node the edge travels to in a binary
     * relationship. For instance: for a classifierrole, this is the
     * receiver.
     * @return Object
     */ Modifier protected ReferenceType Object getDestination LocalVariableDeclaration ReferenceType Object VariableDeclarator theOwner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference theOwner Literal null BlockStatement ReturnStatement Cast ReferenceType CommentEdge MemberReference theOwner End ReturnStatement Literal null MethodDeclaration Modifier public setDestFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldComment MemberReference comment IfStatement BinaryOperation != MemberReference oldComment Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldComment removeElementListener End StatementExpression Assignment MemberReference comment MethodInvocation fn getOwner = IfStatement BinaryOperation != MemberReference comment Literal null BlockStatement StatementExpression MethodInvocation MemberReference comment addElementListener End StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation ! Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement StatementExpression Assignment MemberReference annotatedElement MethodInvocation fn getOwner = StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner End End StatementExpression SuperMethodInvocation MemberReference fn setDestFigNode MethodDeclaration Modifier public setSourceFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldComment MemberReference comment IfStatement BinaryOperation != MemberReference oldComment Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldComment removeElementListener End StatementExpression Assignment MemberReference comment MethodInvocation fn getOwner = IfStatement BinaryOperation != MemberReference comment Literal null BlockStatement StatementExpression MethodInvocation MemberReference comment addElementListener End StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation ! Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement StatementExpression Assignment MemberReference annotatedElement MethodInvocation fn getOwner = StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner End End StatementExpression SuperMethodInvocation MemberReference fn setSourceFigNode ReferenceType FigEdgeModelElement ReferenceType VetoableChangeListener ReferenceType DelayedVChangeListener ReferenceType MouseListener ReferenceType KeyListener ReferenceType PropertyChangeListener",1
1033,1033,,0
333,333,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Dimension Import java.util.ArrayList Import java.util.Collection Import javax.swing.JComboBox Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.JToolBar Import org.argouml.i18n.Translator Import org.argouml.ui.explorer.ActionPerspectiveConfig Import org.argouml.ui.explorer.DnDExplorerTree Import org.argouml.ui.explorer.ExplorerTree Import org.argouml.ui.explorer.ExplorerTreeModel Import org.argouml.ui.explorer.NameOrder Import org.argouml.ui.explorer.PerspectiveComboBox Import org.argouml.ui.explorer.PerspectiveManager Import org.argouml.ui.explorer.TypeThenNameOrder Import org.tigris.toolbar.ToolBarFactory ClassDeclaration /**
 * The upper-left pane of the main ArgoUML window, contains a tree view
 * of the UML model. Currently named ""Explorer"" instead of ""Navigator"".<p>
 *
 * The model can be viewed from different tree ""Perspectives"".<p>
 *
 * Perspectives are now built in the Perspective Manager.<p>
 */ NavigatorPane ConstructorDeclaration Modifier public /**
     * Constructs a new navigator panel.<p>
     *
     * This panel consists of a Combobox to select a navigation
     * perspective, a combobox to select ordering,
     * a JTree to display the UML model,
     * and a configuration dialog to tailor the perspectives.
     *
     * @param splash The splash screen where to show progress.
     */ NavigatorPane FormalParameter ReferenceType SplashScreen splash LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator perspectiveCombo ClassCreator ReferenceType PerspectiveComboBox LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator orderByCombo ClassCreator ReferenceType JComboBox LocalVariableDeclaration ReferenceType ExplorerTree VariableDeclarator tree ClassCreator ReferenceType DnDExplorerTree LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator toolbarTools ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionPerspectiveConfig add StatementExpression MethodInvocation toolbarTools MemberReference perspectiveCombo add LocalVariableDeclaration ReferenceType JToolBar VariableDeclarator toolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference toolbarTools StatementExpression MethodInvocation toolbar Literal false setFloatable StatementExpression MethodInvocation orderByCombo ClassCreator ReferenceType TypeThenNameOrder addItem StatementExpression MethodInvocation orderByCombo ClassCreator ReferenceType NameOrder addItem LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator toolbarTools2 ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object StatementExpression MethodInvocation toolbarTools2 MemberReference orderByCombo add LocalVariableDeclaration ReferenceType JToolBar VariableDeclarator toolbar2 ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference toolbarTools2 StatementExpression MethodInvocation toolbar2 Literal false setFloatable LocalVariableDeclaration ReferenceType JPanel VariableDeclarator toolbarpanel ClassCreator ReferenceType JPanel StatementExpression MethodInvocation toolbarpanel ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation toolbarpanel MemberReference toolbar MemberReference BorderLayout NORTH add StatementExpression MethodInvocation toolbarpanel MemberReference toolbar2 MemberReference BorderLayout SOUTH add StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout StatementExpression MethodInvocation MemberReference toolbarpanel MemberReference BorderLayout NORTH add StatementExpression MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference tree MemberReference BorderLayout CENTER add IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal ""statusmsg.bar.making-navigator-pane-perspectives"" localize showStatus getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 25 showProgress getStatusBar End StatementExpression MethodInvocation perspectiveCombo Cast ReferenceType ExplorerTreeModel MethodInvocation tree getModel addItemListener StatementExpression MethodInvocation orderByCombo Cast ReferenceType ExplorerTreeModel MethodInvocation tree getModel addItemListener StatementExpression MethodInvocation PerspectiveManager MethodInvocation loadUserPerspectives getInstance MethodDeclaration Modifier public ReferenceType Dimension getMinimumSize ReturnStatement ClassCreator ReferenceType Dimension Literal 120 Literal 100 FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 8403903607517813289L ReferenceType JPanel",0
886,886,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import javax.swing.AbstractAction Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * Print the current active diagram.
 */ ActionPrint ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionPrint StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.print"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.print"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.print"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression MethodInvocation PrintManager MethodInvocation print getInstance ReferenceType AbstractAction",0
1326,1326,,0
845,845,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import javax.swing.Action Import javax.swing.JComboBox Import org.argouml.ui.LookAndFeelMgr Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargettableModelView ClassDeclaration Modifier public /**
 * ComboBox for UML modelelements. <p>
 *
 * This implementation does not use
 * reflection and seperates Model, View and Controller better then does
 * UMLComboBox. The ancient UMLComboBoxModel and UMLComboBox are
 * replaced with this implementation to improve performance.
 */ UMLComboBox2 ConstructorDeclaration Modifier protected /**
     * Constructor for UMLComboBox2.
     * @deprecated As of ArgoUml version unknown (before 0.13.5),
     * replaced by {@link #UMLComboBox2(UMLComboBoxModel2, Action, boolean)}
     * @param arg0 the ComboBoxModel
     */ UMLComboBox2 FormalParameter ReferenceType UMLComboBoxModel2 arg0 StatementExpression SuperConstructorInvocation MemberReference arg0 StatementExpression MethodInvocation MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont StatementExpression MethodInvocation This addActionListener ConstructorDeclaration Modifier public /**
     * Constructor for UMLComboBox2. Via the given action, the
     * action for this combobox is done.
     * @param arg0 the ComboBoxModel
     * @param action the action
     * @param showIcon true if an icon should be shown in front of the items
     */ UMLComboBox2 FormalParameter ReferenceType UMLComboBoxModel2 arg0 FormalParameter ReferenceType Action action FormalParameter BasicType boolean showIcon StatementExpression SuperConstructorInvocation MemberReference arg0 StatementExpression MethodInvocation MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont StatementExpression MethodInvocation MemberReference action addActionListener StatementExpression MethodInvocation ClassCreator ReferenceType UMLListCellRenderer2 MemberReference showIcon setRenderer ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param arg0 the ComboBoxModel
     * @param action the action
     */ UMLComboBox2 FormalParameter ReferenceType UMLComboBoxModel2 arg0 FormalParameter ReferenceType Action action StatementExpression ExplicitConstructorInvocation MemberReference arg0 MemberReference action Literal true MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation getSelectedIndex IfStatement BinaryOperation >= MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference arg0 doIt End MethodDeclaration /**
     * The 'body' of the actionPerformed method. Is only called if there is
     * actually a selection made.
     *
     * @param event the event
     */ Modifier protected doIt FormalParameter ReferenceType ActionEvent event MethodDeclaration /**
     * Utility method to get the current target.
     *
     * @return Object
     */ Modifier public ReferenceType Object getTarget ReturnStatement Cast ReferenceType UMLComboBoxModel2 MethodInvocation getModel MethodDeclaration Modifier public ReferenceType TargetListener getTargettableModel ReturnStatement Cast ReferenceType TargetListener MethodInvocation getModel MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e IfStatement BinaryOperation != MethodInvocation e getNewTarget MethodInvocation getTarget BlockStatement StatementExpression MethodInvocation This removeActionListener End MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation This removeActionListener MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation This addActionListener ReferenceType JComboBox ReferenceType TargettableModelView ReferenceType TargetListener",1
1224,1224,,0
1052,1052,,0
259,259,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import javax.swing.ImageIcon Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public /**
 * The properties panel for a Datatype.
 */ PropPanelDataType FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator operationScroll FieldDeclaration Modifier private static ReferenceType UMLClassOperationListModel VariableDeclarator operationListModel ClassCreator ReferenceType UMLClassOperationListModel ConstructorDeclaration Modifier public Annotation Deprecated /**
     * Construct a property panel for UML DataType elements.
     * 
     * @param title title string for the property panel
     * @param icon icon
     * @param orientation horizontal or vertical orientation
     * @deprecated for 0.25.4 by tfmorris. Use
     *             {@link #PropPanelModelDataType(String, ImageIcon)} and
     *             setOrientation() after instantiation.
     */ PropPanelDataType FormalParameter ReferenceType String title FormalParameter ReferenceType ImageIcon icon FormalParameter ReferenceType Orientation orientation StatementExpression ExplicitConstructorInvocation MemberReference title MemberReference icon StatementExpression MethodInvocation MemberReference orientation setOrientation ConstructorDeclaration Modifier public /**
     * Construct a property panel for UML DataType elements.
     * 
     * @param title title string for the property panel
     * @param icon icon
     */ PropPanelDataType FormalParameter ReferenceType String title FormalParameter ReferenceType ImageIcon icon StatementExpression SuperConstructorInvocation MemberReference title MemberReference icon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MethodInvocation getModifiersPanel add StatementExpression MethodInvocation MethodInvocation getNamespaceVisibilityPanel add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.client-dependencies"" localize MethodInvocation getClientDependencyScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.supplier-dependencies"" localize MethodInvocation getSupplierDependencyScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.generalizations"" localize MethodInvocation getGeneralizationScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.specializations"" localize MethodInvocation getSpecializationScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.operations"" localize MethodInvocation getOperationScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddDataType addAction StatementExpression MethodInvocation addEnumerationButtons StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddQueryOperation addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration /**
     * Override this to add more buttons.
     */ Modifier protected addEnumerationButtons StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddEnumeration addAction ConstructorDeclaration Modifier public /**
     * The constructor.
     */ PropPanelDataType StatementExpression ExplicitConstructorInvocation Literal ""label.data-type"" MethodInvocation Literal ""DataType"" lookupIcon ClassDeclaration Modifier private static ActionAddQueryOperation ConstructorDeclaration Modifier public /**
         * The constructor.
         */ ActionAddQueryOperation StatementExpression SuperConstructorInvocation Literal ""button.new-operation"" StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-operation"" localize putValue MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator newOper MethodInvocation Model MethodInvocation MemberReference target MemberReference returnType buildOperation getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference newOper Literal true setQuery getCoreHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newOper setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed End FieldDeclaration /**
         * The UID.
         */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 3393730108010236394L ReferenceType AbstractActionNewModelElement MethodDeclaration /**
     * Returns the operationScroll.
     *
     * @return JScrollPane
     */ Modifier public Annotation Override ReferenceType JScrollPane getOperationScroll IfStatement BinaryOperation == MemberReference operationScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType UMLLinkedList MemberReference operationListModel StatementExpression Assignment MemberReference operationScroll ClassCreator ReferenceType JScrollPane MemberReference list = End ReturnStatement MemberReference operationScroll FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8752986130386737802L ReferenceType PropPanelClassifier",1
871,871,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.BorderLayout Import java.awt.event.ComponentEvent Import java.awt.event.ComponentListener Import javax.swing.Action Import javax.swing.JPanel Import javax.swing.JToolBar Import javax.swing.SwingConstants Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.configuration.Configuration Import org.argouml.ui.AbstractArgoJPanel Import org.argouml.ui.TabToDoTarget Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetManager Import org.tigris.swidgets.BorderSplitPane Import org.tigris.swidgets.Horizontal Import org.tigris.swidgets.Vertical Import org.tigris.toolbar.ToolBarFactory ClassDeclaration Modifier public /**
 * The ToDo Tab.
 *
 */ TabToDo FieldDeclaration Modifier private static BasicType int VariableDeclarator numHushes FieldDeclaration Modifier private final static ReferenceType Action VariableDeclarator actionNewToDoItem ClassCreator ReferenceType ActionNewToDoItem FieldDeclaration Modifier private final static ReferenceType ToDoItemAction VariableDeclarator actionResolve ClassCreator ReferenceType ActionResolve FieldDeclaration Modifier private final static ReferenceType ToDoItemAction VariableDeclarator actionSnooze ClassCreator ReferenceType ActionSnooze FieldDeclaration Modifier private ReferenceType WizDescription VariableDeclarator description ClassCreator ReferenceType WizDescription FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator lastPanel FieldDeclaration Modifier private ReferenceType BorderSplitPane VariableDeclarator splitPane FieldDeclaration Modifier private ReferenceType Object VariableDeclarator target MethodDeclaration /**
     * Increment the number of times we've been ""snoozed"" (or hushed).
     */ Modifier public static incrementNumHushes StatementExpression MemberReference ++ numHushes ConstructorDeclaration Modifier public /**
     * Construct a ToDo tab for the property panel.
     */ TabToDo StatementExpression SuperConstructorInvocation Literal ""tab.todo-item"" LocalVariableDeclaration ReferenceType String VariableDeclarator position MethodInvocation Configuration MethodInvocation Configuration Literal ""layout"" Literal ""tabtodo"" makeKey getString StatementExpression MethodInvocation TernaryExpression BinaryOperation || MethodInvocation position Literal ""West"" equals MethodInvocation position Literal ""East"" equals MethodInvocation Vertical getInstance MethodInvocation Horizontal getInstance setOrientation StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MemberReference actionNewToDoItem MemberReference actionResolve MemberReference actionSnooze LocalVariableDeclaration ReferenceType ToolBarFactory VariableDeclarator factory ClassCreator ReferenceType ToolBarFactory MemberReference actions StatementExpression MethodInvocation factory Literal true setRollover StatementExpression MethodInvocation factory Literal false setFloatable StatementExpression MethodInvocation factory MemberReference SwingConstants VERTICAL setOrientation LocalVariableDeclaration ReferenceType JToolBar VariableDeclarator toolBar MethodInvocation factory createToolBar StatementExpression MethodInvocation toolBar MethodInvocation getTitle setName StatementExpression MethodInvocation MemberReference toolBar MemberReference BorderLayout WEST add StatementExpression Assignment MemberReference splitPane ClassCreator ReferenceType BorderSplitPane = StatementExpression MethodInvocation MemberReference splitPane MemberReference BorderLayout CENTER add StatementExpression MethodInvocation Literal null setTarget StatementExpression MethodInvocation This addComponentListener MethodDeclaration /**
     * Show the description of a todo item.
     */ Modifier public showDescription IfStatement BinaryOperation != MemberReference lastPanel Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference lastPanel remove End StatementExpression MethodInvocation splitPane MemberReference description MemberReference BorderSplitPane CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference description = StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint MethodDeclaration /**
     * @param tdp the todo pane
     */ Modifier public setTree FormalParameter ReferenceType ToDoPane tdp IfStatement MethodInvocation MethodInvocation MethodInvocation Horizontal getInstance equals getOrientation BlockStatement StatementExpression MethodInvocation splitPane MemberReference tdp MemberReference BorderSplitPane WEST add BlockStatement StatementExpression MethodInvocation splitPane MemberReference tdp MemberReference BorderSplitPane NORTH add End MethodDeclaration /**
     * @param ws the panel to be shown
     */ Modifier public showStep FormalParameter ReferenceType JPanel ws IfStatement BinaryOperation != MemberReference lastPanel Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference lastPanel remove End IfStatement BinaryOperation != MemberReference ws Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference ws MemberReference BorderSplitPane CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference ws = BlockStatement StatementExpression MethodInvocation splitPane MemberReference description MemberReference BorderSplitPane CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference description = End StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint MethodDeclaration /**
     * Sets the target of the TabToDo.
     *
     * @param item the new target
     */ Modifier public setTarget FormalParameter ReferenceType Object item StatementExpression Assignment MemberReference target MemberReference item = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference item setTargetInternal End MethodDeclaration Modifier private setTargetInternal FormalParameter ReferenceType Object item StatementExpression MethodInvocation description MemberReference item setTarget LocalVariableDeclaration ReferenceType Wizard VariableDeclarator w Literal null IfStatement BinaryOperation instanceof MemberReference item ReferenceType ToDoItem BlockStatement StatementExpression Assignment MemberReference w Cast ReferenceType ToDoItem MemberReference item = End IfStatement BinaryOperation != MemberReference w Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation w getCurrentPanel showStep BlockStatement StatementExpression MethodInvocation showDescription End StatementExpression MethodInvocation MemberReference item updateActionsEnabled MethodDeclaration /**
    * Returns the target of the TabToDo.
    *
    * @return The current target of the TabToDo
    */ Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target MethodDeclaration /**
     * Set the target again to what it was before.
     */ Modifier public refresh StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance setTarget MethodDeclaration /**
     * Update the ""enabled"" state of the resolve and snooze actions.
     * 
     * @param item  the target of the TabToDo class
     */ Modifier protected static updateActionsEnabled FormalParameter ReferenceType Object item StatementExpression MethodInvocation actionResolve MethodInvocation actionResolve isEnabled setEnabled StatementExpression MethodInvocation actionResolve MemberReference item updateEnabled StatementExpression MethodInvocation actionSnooze MethodInvocation actionSnooze isEnabled setEnabled StatementExpression MethodInvocation actionSnooze MemberReference item updateEnabled MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 4819730646847978729L MethodDeclaration Modifier public componentShown FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference target setTargetInternal MethodDeclaration Modifier public componentHidden FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation Literal null setTargetInternal MethodDeclaration Modifier public componentMoved FormalParameter ReferenceType ComponentEvent e MethodDeclaration Modifier public componentResized FormalParameter ReferenceType ComponentEvent e ReferenceType AbstractArgoJPanel ReferenceType TabToDoTarget ReferenceType ComponentListener",1
978,978,,0
731,731,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.use_case.ui Import java.beans.PropertyVetoException Import javax.swing.Action Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.CmdCreateNode Import org.argouml.uml.diagram.ui.ActionAddExtensionPoint Import org.argouml.uml.diagram.ui.ActionSetAddAssociationMode Import org.argouml.uml.diagram.ui.ActionSetMode Import org.argouml.uml.diagram.ui.RadioAction Import org.argouml.uml.diagram.ui.UMLDiagram Import org.argouml.uml.diagram.use_case.UseCaseDiagramGraphModel Import org.argouml.util.ToolBarUtility Import org.tigris.gef.base.LayerPerspective Import org.tigris.gef.base.LayerPerspectiveMutable Import org.tigris.gef.base.ModeCreatePolyEdge Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * The base class of the use case diagram.<p>
 *
 * Defines the toolbar, provides for its initialization and provides
 * constructors for a top level diagram and one within a defined
 * namespace.<p>
 */ UMLUseCaseDiagram FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType UMLUseCaseDiagram getLogger FieldDeclaration /**
     * Tool to add an actor node.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionActor FieldDeclaration /**
     * Tool to add a use case node.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionUseCase FieldDeclaration /**
     * Tool to create an association between UML artifacts using a
     * polyedge.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionAssociation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionAggregation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionComposition FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionUniAssociation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionUniAggregation FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionUniComposition FieldDeclaration /**
     * Tool to create a generalization between UML artifacts using a
     * polyedge.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionGeneralize FieldDeclaration /**
     * Tool to create an extend relationship between UML use cases
     * using a polyedge.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionExtend FieldDeclaration /**
     * Tool to create an include relationship between UML use cases
     * using a polyedge.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionInclude FieldDeclaration /**
     * Tool to create a dependency between UML artifacts using a
     * polyedge.<p>
     */ Modifier private ReferenceType Action VariableDeclarator actionDependency FieldDeclaration Modifier private ReferenceType Action VariableDeclarator actionExtensionPoint ConstructorDeclaration Modifier public /**
     * Construct a new use case diagram with no defined namespace.<p>
     *
     * Note we must never call this directly, since defining the
     * namespace is what makes everything work. However GEF will call
     * it directly when loading a new diagram, so it must remain
     * public.<p>
     *
     * A unique name is constructed by using the serial index.
     * We allow for the possibility
     * that setting this may fail, in which case no name is set.<p>
     */ UMLUseCaseDiagram TryStatement StatementExpression MethodInvocation MethodInvocation getNewDiagramName setName CatchClause CatchClauseParameter PropertyVetoException pve StatementExpression MethodInvocation MethodInvocation createGraphModel setGraphModel ConstructorDeclaration Modifier public /**
     * Construct a new use case diagram with in a defined namespace.<p>
     *
     * Invokes the generic constructor {@link #UMLUseCaseDiagram()},
     * then intialises the namespace (which initializes all the
     * graphics).<p>
     *
     * This is the constructor which should always be used.<p>
     *
     * @param m  the desired namespace for this diagram.
     */ UMLUseCaseDiagram FormalParameter ReferenceType Object m StatementExpression ExplicitConstructorInvocation IfStatement MethodInvocation ! Model MethodInvocation MemberReference m isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End StatementExpression MethodInvocation MemberReference m setNamespace ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param name the name for the diagram
     * @param namespace the namespace for the diagram
     */ UMLUseCaseDiagram FormalParameter ReferenceType String name FormalParameter ReferenceType Object namespace StatementExpression ExplicitConstructorInvocation MemberReference namespace IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException End TryStatement StatementExpression MethodInvocation MemberReference name setName CatchClause CatchClauseParameter PropertyVetoException v MethodDeclaration /**
     * Perform a number of important initializations of a <em>Use Case
     * Diagram</em>.<p>
     *
     * Creates a new graph model for the diagram, settings its
     * namespace to that supplied.<p>
     *
     * Changed <em>lay</em> from <em>LayerPerspective</em> to
     * <em>LayerPerspectiveMutable</em>. This class is a child of
     * <em>LayerPerspective</em> and was implemented to correct some
     * difficulties in changing the model. <em>lay</em> is used mainly
     * in <em>LayerManager</em>(GEF) to control the adding, changing
     * and deleting of items in a layer of the diagram.<p>
     *
     * Set a renderer suitable for the use case diagram.<p>
     *
     * <em>Note</em>. This is declared as public. Not clear that other
     * classes should be allowed to invoke this method.<p>
     *
     * @param handle Namespace to be used for this diagram.
     *
     * @author   psager@tigris.org  Jan 24, 2002
     */ Modifier public setNamespace FormalParameter ReferenceType Object handle IfStatement MethodInvocation ! Model MethodInvocation MemberReference handle isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Illegal argument. Object "" MemberReference handle Literal "" is not a namespace"" error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal ""Illegal argument. Object "" MemberReference handle Literal "" is not a namespace"" End LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference handle StatementExpression SuperMethodInvocation MemberReference m setNamespace LocalVariableDeclaration ReferenceType UseCaseDiagramGraphModel VariableDeclarator gm MethodInvocation createGraphModel StatementExpression MethodInvocation gm MemberReference m setHomeModel LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference m getName getFacade MemberReference gm LocalVariableDeclaration ReferenceType UseCaseDiagramRenderer VariableDeclarator rend ClassCreator ReferenceType UseCaseDiagramRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer MethodDeclaration Modifier private ReferenceType UseCaseDiagramGraphModel createGraphModel IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType UseCaseDiagramGraphModel BlockStatement ReturnStatement Cast ReferenceType UseCaseDiagramGraphModel MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType UseCaseDiagramGraphModel End MethodDeclaration Modifier protected ReferenceType Object getUmlActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation getActionActor MethodInvocation getActionUseCase Literal null MethodInvocation getAssociationActions MethodInvocation getActionDependency MethodInvocation getActionGeneralize MethodInvocation getActionExtend MethodInvocation getActionInclude Literal null MethodInvocation getActionExtensionPoint ReturnStatement MemberReference actions MethodDeclaration Modifier private ReferenceType Object getAssociationActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer ArrayInitializer MethodInvocation getActionAssociation MethodInvocation getActionUniAssociation ArrayInitializer MethodInvocation getActionAggregation MethodInvocation getActionUniAggregation ArrayInitializer MethodInvocation getActionComposition MethodInvocation getActionUniComposition StatementExpression MethodInvocation ToolBarUtility MemberReference actions Literal ""diagram.usecase.association"" manageDefault ReturnStatement MemberReference actions MethodDeclaration Modifier public ReferenceType String getLabelName ReturnStatement MethodInvocation Translator Literal ""label.usecase-diagram"" localize MethodDeclaration /**
     * @return Returns the actionActor.
     */ Modifier protected ReferenceType Action getActionActor IfStatement BinaryOperation == MemberReference actionActor Literal null BlockStatement StatementExpression Assignment MemberReference actionActor ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getActor getMetaTypes Literal ""button.new-actor"" = End ReturnStatement MemberReference actionActor MethodDeclaration /**
     * @return Returns the actionAggregation.
     */ Modifier protected ReferenceType Action getActionAggregation IfStatement BinaryOperation == MemberReference actionAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal false Literal ""button.new-aggregation"" = End ReturnStatement MemberReference actionAggregation MethodDeclaration /**
     * @return Returns the actionAssociation.
     */ Modifier protected ReferenceType Action getActionAssociation IfStatement BinaryOperation == MemberReference actionAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getNone getAggregationKind Literal false Literal ""button.new-association"" = End ReturnStatement MemberReference actionAssociation MethodDeclaration /**
     * @return Returns the actionComposition.
     */ Modifier protected ReferenceType Action getActionComposition IfStatement BinaryOperation == MemberReference actionComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal false Literal ""button.new-composition"" = End ReturnStatement MemberReference actionComposition MethodDeclaration /**
     * @return Returns the actionDependency.
     */ Modifier protected ReferenceType Action getActionDependency IfStatement BinaryOperation == MemberReference actionDependency Literal null BlockStatement StatementExpression Assignment MemberReference actionDependency ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getDependency getMetaTypes Literal ""button.new-dependency"" = End ReturnStatement MemberReference actionDependency MethodDeclaration /**
     * @return Returns the actionExtend.
     */ Modifier protected ReferenceType Action getActionExtend IfStatement BinaryOperation == MemberReference actionExtend Literal null BlockStatement StatementExpression Assignment MemberReference actionExtend ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getExtend getMetaTypes Literal ""button.new-extend"" = End ReturnStatement MemberReference actionExtend MethodDeclaration /**
     * @return Returns the actionGeneralize.
     */ Modifier protected ReferenceType Action getActionGeneralize IfStatement BinaryOperation == MemberReference actionGeneralize Literal null BlockStatement StatementExpression Assignment MemberReference actionGeneralize ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getGeneralization getMetaTypes Literal ""button.new-generalization"" = End ReturnStatement MemberReference actionGeneralize MethodDeclaration /**
     * @return Returns the actionInclude.
     */ Modifier protected ReferenceType Action getActionInclude IfStatement BinaryOperation == MemberReference actionInclude Literal null BlockStatement StatementExpression Assignment MemberReference actionInclude ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal ""edgeClass"" MethodInvocation Model MethodInvocation getInclude getMetaTypes Literal ""button.new-include"" = End ReturnStatement MemberReference actionInclude MethodDeclaration /**
     * @return Returns the actionUniAggregation.
     */ Modifier protected ReferenceType Action getActionUniAggregation IfStatement BinaryOperation == MemberReference actionUniAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionUniAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal true Literal ""button.new-uniaggregation"" = End ReturnStatement MemberReference actionUniAggregation MethodDeclaration /**
     * @return Returns the actionUniAssociation.
     */ Modifier protected ReferenceType Action getActionUniAssociation IfStatement BinaryOperation == MemberReference actionUniAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionUniAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getNone getAggregationKind Literal true Literal ""button.new-uniassociation"" = End ReturnStatement MemberReference actionUniAssociation MethodDeclaration /**
     * @return Returns the actionUniComposition.
     */ Modifier protected ReferenceType Action getActionUniComposition IfStatement BinaryOperation == MemberReference actionUniComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionUniComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal true Literal ""button.new-unicomposition"" = End ReturnStatement MemberReference actionUniComposition MethodDeclaration /**
     * @return Returns the actionUseCase.
     */ Modifier protected ReferenceType Action getActionUseCase IfStatement BinaryOperation == MemberReference actionUseCase Literal null BlockStatement StatementExpression Assignment MemberReference actionUseCase ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getUseCase getMetaTypes Literal ""button.new-usecase"" = End ReturnStatement MemberReference actionUseCase MethodDeclaration /**
     * @return the action to create an extension point
     */ Modifier protected ReferenceType Action getActionExtensionPoint IfStatement BinaryOperation == MemberReference actionExtensionPoint Literal null BlockStatement StatementExpression Assignment MemberReference actionExtensionPoint MethodInvocation ActionAddExtensionPoint singleton = End ReturnStatement MemberReference actionExtensionPoint MethodDeclaration Modifier public BasicType boolean isRelocationAllowed FormalParameter ReferenceType Object base ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference base isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference base isAClassifier getFacade MethodDeclaration Modifier public BasicType boolean relocate FormalParameter ReferenceType Object base StatementExpression MethodInvocation MemberReference base setNamespace StatementExpression MethodInvocation damage ReturnStatement Literal true MethodDeclaration Modifier public encloserChanged FormalParameter ReferenceType FigNode enclosed FormalParameter ReferenceType FigNode oldEncloser FormalParameter ReferenceType FigNode newEncloser ReferenceType UMLDiagram",0
253,253,"CompilationUnit PackageDeclaration org.argouml.notation Import java.util.Collections Import java.util.List Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.application.api.InitSubsystem ClassDeclaration Modifier public /**
 * Initialise this subsystem.
 *
 * @author Michiel
 */ InitNotation MethodDeclaration Modifier public init StatementExpression MethodInvocation NotationProviderFactory2 getInstance MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getSettingsTabs ReturnStatement MethodInvocation Collections emptyList ReferenceType InitSubsystem",0
1482,1482,,0
1325,1325,,0
1131,1131,,0
801,801,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import java.awt.Font Import java.awt.Graphics Import java.awt.Point Import java.awt.Rectangle Import java.awt.event.KeyEvent Import java.awt.event.KeyListener Import java.awt.event.MouseEvent Import java.awt.event.MouseListener Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.beans.VetoableChangeListener Import java.util.ArrayList Import java.util.Collection Import java.util.HashMap Import java.util.Iterator Import java.util.List Import java.util.Vector Import javax.swing.Action Import javax.swing.Icon Import javax.swing.JSeparator Import javax.swing.SwingUtilities Import org.apache.log4j.Logger Import org.argouml.application.events.ArgoDiagramAppearanceEvent Import org.argouml.application.events.ArgoDiagramAppearanceEventListener Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.application.events.ArgoNotationEvent Import org.argouml.application.events.ArgoNotationEventListener Import org.argouml.cognitive.Designer Import org.argouml.cognitive.Highlightable Import org.argouml.cognitive.ItemUID Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ToDoList Import org.argouml.cognitive.ui.ActionGoToCritique Import org.argouml.i18n.Translator Import org.argouml.kernel.DelayedChangeNotify Import org.argouml.kernel.DelayedVChangeListener Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.AddAssociationEvent Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.DeleteInstanceEvent Import org.argouml.model.DiElement Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.notation.NotationProvider Import org.argouml.notation.NotationProviderFactory2 Import org.argouml.ui.ArgoJMenu Import org.argouml.ui.Clarifier Import org.argouml.ui.ProjectActions Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.StereotypeUtility Import org.argouml.uml.diagram.IItemUID Import org.argouml.uml.diagram.UMLMutableGraphSupport Import org.argouml.uml.ui.ActionDeleteModelElements Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Layer Import org.tigris.gef.base.LayerPerspective Import org.tigris.gef.base.PathConvPercent Import org.tigris.gef.base.Selection Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigEdgePoly Import org.tigris.gef.presentation.FigGroup Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.FigPoly Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public abstract /**
 * Abstract class to display diagram lines (edges) for UML ModelElements that
 * look like lines.
 * This Fig is prepared to show a (possibly editable) name,
 * and/or multiple stereotypes.
 */ FigEdgeModelElement FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType FigEdgeModelElement getLogger FieldDeclaration Modifier private ReferenceType DiElement VariableDeclarator diElement Literal null FieldDeclaration /**
     * Set the removeFromDiagram to false if this edge may not
     * be removed from the diagram.
     */ Modifier private BasicType boolean VariableDeclarator removeFromDiagram Literal true FieldDeclaration /**
     * Offset from the end of the set of popup actions at which new items
     * should be inserted by concrete figures.
    **/ Modifier private static BasicType int VariableDeclarator popupAddOffset FieldDeclaration Modifier private ReferenceType NotationProvider VariableDeclarator notationProviderName FieldDeclaration Modifier private ReferenceType HashMap VariableDeclarator npArguments ClassCreator ReferenceType HashMap FieldDeclaration /**
     * The Fig that displays the name of this model element.
     * Use getNameFig(), no setter should be required.
     */ Modifier private ReferenceType FigText VariableDeclarator nameFig FieldDeclaration /**
     * Use getStereotypeFig(), no setter should be required.
     */ Modifier private ReferenceType Fig VariableDeclarator stereotypeFig FieldDeclaration Modifier private ReferenceType FigEdgePort VariableDeclarator edgePort FieldDeclaration Modifier private ReferenceType ItemUID VariableDeclarator itemUid FieldDeclaration Modifier private ReferenceType Collection VariableDeclarator listeners ClassCreator ReferenceType ArrayList ConstructorDeclaration Modifier public /** 
     * Partially construct a new FigEdge.  This method creates the
     * name element that holds the name of the model element and adds
     * itself as a listener. Also a stereotype is constructed. 
     */ FigEdgeModelElement StatementExpression Assignment MemberReference nameFig ClassCreator ReferenceType FigNameWithAbstract Literal 10 Literal 30 Literal 90 Literal 20 Literal false = StatementExpression MethodInvocation nameFig Literal false setTextFilled StatementExpression Assignment MemberReference stereotypeFig ClassCreator ReferenceType FigStereotypesCompartment Literal 10 Literal 10 Literal 90 Literal 15 = StatementExpression MethodInvocation Literal true setBetweenNearestPoints StatementExpression MethodInvocation ArgoEventPump MemberReference ArgoEventTypes ANY_NOTATION_EVENT This addListener StatementExpression MethodInvocation ArgoEventPump MemberReference ArgoEventTypes ANY_DIAGRAM_APPEARANCE_EVENT This addListener ConstructorDeclaration Modifier public /**
     * The constructor that hooks the Fig into the UML model element.
     *
     * @param edge the UML element
     */ FigEdgeModelElement FormalParameter ReferenceType Object edge StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference edge setOwner MethodDeclaration /**
     * Create a FigCommentPort if needed
     */ Modifier public makeEdgePort IfStatement BinaryOperation == MemberReference edgePort Literal null BlockStatement StatementExpression Assignment MemberReference edgePort ClassCreator ReferenceType FigEdgePort = IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation edgePort MethodInvocation getOwner setOwner End StatementExpression MethodInvocation edgePort Literal false setVisible StatementExpression MethodInvocation MemberReference edgePort ClassCreator ReferenceType PathConvPercent This Literal 50 Literal 0 addPathItem End MethodDeclaration /**
     * @return the FigCommentPort
     */ Modifier public ReferenceType FigEdgePort getEdgePort ReturnStatement MemberReference edgePort MethodDeclaration /**
     * Setter for the UID
     * @param newId the new UID
     */ Modifier public setItemUID FormalParameter ReferenceType ItemUID newId StatementExpression Assignment MemberReference itemUid MemberReference newId = MethodDeclaration /**
     * Getter for the UID
     * @return the UID
     */ Modifier public ReferenceType ItemUID getItemUID ReturnStatement MemberReference itemUid MethodDeclaration Modifier public Annotation Override ReferenceType String getTipString FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier LocalVariableDeclaration ReferenceType String VariableDeclarator tip Literal """" IfStatement BinaryOperation && BinaryOperation != MemberReference item Literal null MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation This containsFig curEditor BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation item getHeadline = IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference tip MethodInvocation Model MethodInvocation MethodInvocation getOwner getTipString getFacade = CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal ""A deleted element still exists on the diagram"" warn ReturnStatement MethodInvocation Translator Literal ""misc.name.deleted"" localize BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation toString = End End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference tip Literal null BinaryOperation > MethodInvocation tip length Literal 0 MethodInvocation ! tip Literal "" "" endsWith BlockStatement StatementExpression Assignment MemberReference tip Literal "" "" += End ReturnStatement MemberReference tip MethodDeclaration /**
     * This method shall return a Vector of one of these 4 types:
     * AbstractAction, JMenu, JMenuItem, JSeparator.
     */ Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType JSeparator add StatementExpression Assignment MemberReference popupAddOffset Literal 1 = IfStatement MemberReference removeFromDiagram BlockStatement StatementExpression MethodInvocation popUpActions MethodInvocation ProjectActions MethodInvocation getRemoveFromDiagramAction getInstance add StatementExpression MemberReference ++ popupAddOffset End StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType ActionDeleteModelElements add StatementExpression MemberReference ++ popupAddOffset LocalVariableDeclaration BasicType boolean VariableDeclarator ms BinaryOperation > MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 IfStatement MemberReference ! ms BlockStatement LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items Cast ReferenceType List TypeArgument ReferenceType ToDoItem MethodInvocation list MethodInvocation clone MethodInvocation getOwner elementsForOffender IfStatement BinaryOperation && BinaryOperation != MemberReference items Literal null BinaryOperation > MethodInvocation items size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator critiques ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.critiques"" LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator itemUnderMouse MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier IfStatement BinaryOperation != MemberReference itemUnderMouse Literal null BlockStatement StatementExpression MethodInvocation critiques ClassCreator ReferenceType ActionGoToCritique MemberReference itemUnderMouse add StatementExpression MethodInvocation critiques addSeparator End ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation == MemberReference item MemberReference itemUnderMouse BlockStatement ContinueStatement End StatementExpression MethodInvocation critiques ClassCreator ReferenceType ActionGoToCritique MemberReference item add End StatementExpression MethodInvocation popUpActions Literal 0 ClassCreator ReferenceType JSeparator add StatementExpression MethodInvocation popUpActions Literal 0 MemberReference critiques add End End LocalVariableDeclaration ReferenceType Action VariableDeclarator stereoActions MethodInvocation getApplyStereotypeActions IfStatement BinaryOperation && BinaryOperation != MemberReference stereoActions Literal null BinaryOperation > MemberReference stereoActions length Literal 0 BlockStatement StatementExpression MethodInvocation popUpActions Literal 0 ClassCreator ReferenceType JSeparator add LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator stereotypes ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.apply-stereotypes"" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference stereoActions length MemberReference ++ i BlockStatement StatementExpression MethodInvocation stereotypes MemberReference ArraySelector MemberReference i stereoActions addCheckItem End StatementExpression MethodInvocation popUpActions Literal 0 MemberReference stereotypes add End ReturnStatement MemberReference popUpActions MethodDeclaration /**
     * Get the set of Actions which valid for adding/removing
     * Stereotypes on the ModelElement of this Fig's owner.
     *  
     * @return array of Actions 
     */ Modifier protected ReferenceType Action getApplyStereotypeActions ReturnStatement MethodInvocation StereotypeUtility MethodInvocation getOwner getApplyStereotypeActions MethodDeclaration /**
     * distance formula: (x-h)^2 + (y-k)^2 = distance^2
     *
     * @param p1 point
     * @param p2 point
     * @return the square of the distance
     */ Modifier protected BasicType int getSquaredDistance FormalParameter ReferenceType Point p1 FormalParameter ReferenceType Point p2 LocalVariableDeclaration BasicType int VariableDeclarator xSquared BinaryOperation - MemberReference p2 x MemberReference p1 x StatementExpression Assignment MemberReference xSquared MemberReference xSquared *= LocalVariableDeclaration BasicType int VariableDeclarator ySquared BinaryOperation - MemberReference p2 y MemberReference p1 y StatementExpression Assignment MemberReference ySquared MemberReference ySquared *= ReturnStatement BinaryOperation + MemberReference xSquared MemberReference ySquared MethodDeclaration /**
     * @param g the <code>Graphics</code> object
     */ Modifier protected paintClarifiers FormalParameter ReferenceType Graphics g LocalVariableDeclaration BasicType int VariableDeclarator iconPos Literal 25 VariableDeclarator gap Literal 1 VariableDeclarator xOff Literal - 4 VariableDeclarator yOff Literal - 4 LocalVariableDeclaration ReferenceType Point VariableDeclarator p ClassCreator ReferenceType Point LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation list MethodInvocation getOwner elementsForOffender ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon End IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference iconPos MemberReference p stuffPointAlongPerimeter StatementExpression MethodInvocation icon Literal null MemberReference g BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation + MemberReference p y MemberReference yOff paintIcon StatementExpression Assignment MemberReference iconPos BinaryOperation + MethodInvocation icon getIconWidth MemberReference gap += End End StatementExpression Assignment MemberReference items MethodInvocation list This elementsForOffender = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon End IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference iconPos MemberReference p stuffPointAlongPerimeter StatementExpression MethodInvocation icon Literal null MemberReference g BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation + MemberReference p y MemberReference yOff paintIcon StatementExpression Assignment MemberReference iconPos BinaryOperation + MethodInvocation icon getIconWidth MemberReference gap += End End MethodDeclaration /**
     * @param f the fig to indicate the bounds of
     * @param g the graphics
     */ Modifier protected indicateBounds FormalParameter ReferenceType FigText f FormalParameter ReferenceType Graphics g IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation f getText IfStatement BinaryOperation || BinaryOperation == MemberReference text Literal null BinaryOperation == MethodInvocation text length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation f getBounds LocalVariableDeclaration ReferenceType Color VariableDeclarator c MethodInvocation g getColor StatementExpression MethodInvocation g MethodInvocation Globals MethodInvocation MemberReference f handleColorFor getPrefs setColor StatementExpression MethodInvocation g MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height drawRect StatementExpression MethodInvocation g MemberReference c setColor End MethodDeclaration /**
     * The user clicked on the clarifier.
     *
     * @param x the x of the point clicked
     * @param y the y of the point clicked
     * @return the todo item clicked
     */ Modifier public ReferenceType ToDoItem hitClarifier FormalParameter BasicType int x FormalParameter BasicType int y LocalVariableDeclaration BasicType int VariableDeclarator iconPos Literal 25 VariableDeclarator xOff Literal - 4 VariableDeclarator yOff Literal - 4 LocalVariableDeclaration ReferenceType Point VariableDeclarator p ClassCreator ReferenceType Point LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation list MethodInvocation getOwner elementsForOffender ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier StatementExpression MethodInvocation MemberReference iconPos MemberReference p stuffPointAlongPerimeter LocalVariableDeclaration BasicType int VariableDeclarator width MethodInvocation icon getIconWidth LocalVariableDeclaration BasicType int VariableDeclarator height MethodInvocation icon getIconHeight IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation >= MemberReference y BinaryOperation + MemberReference p y MemberReference yOff BinaryOperation <= MemberReference y BinaryOperation + BinaryOperation + MemberReference p y MemberReference height MemberReference yOff BinaryOperation >= MemberReference x BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation <= MemberReference x BinaryOperation + BinaryOperation + MemberReference p x MemberReference width MemberReference xOff ReturnStatement MemberReference item End StatementExpression Assignment MemberReference iconPos MemberReference width += End ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement Cast ReferenceType Clarifier MemberReference icon ReturnStatement MemberReference item End End End StatementExpression Assignment MemberReference items MethodInvocation list This elementsForOffender = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier StatementExpression MethodInvocation MemberReference iconPos MemberReference p stuffPointAlongPerimeter LocalVariableDeclaration BasicType int VariableDeclarator width MethodInvocation icon getIconWidth LocalVariableDeclaration BasicType int VariableDeclarator height MethodInvocation icon getIconHeight IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation >= MemberReference y BinaryOperation + MemberReference p y MemberReference yOff BinaryOperation <= MemberReference y BinaryOperation + BinaryOperation + MemberReference p y MemberReference height MemberReference yOff BinaryOperation >= MemberReference x BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation <= MemberReference x BinaryOperation + BinaryOperation + MemberReference p x MemberReference width MemberReference xOff ReturnStatement MemberReference item End StatementExpression Assignment MemberReference iconPos MemberReference width += End ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement Cast ReferenceType Clarifier MemberReference icon ReturnStatement MemberReference item End End End ReturnStatement Literal null MethodDeclaration /**
     * Return a {@link SelectionRerouteEdge} object that manages selection
     * and rerouting of the edge.
     *
     * @see org.tigris.gef.presentation.Fig#makeSelection()
     */ Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionRerouteEdge This MethodDeclaration /**
     * Getter for name, the name Fig
     * @return the nameFig
     */ Modifier protected ReferenceType FigText getNameFig ReturnStatement MemberReference nameFig MethodDeclaration /**
     * Get the Rectangle in which the model elements name is displayed
     *
     * @return the bounds of the namefig
     */ Modifier public ReferenceType Rectangle getNameBounds ReturnStatement MethodInvocation nameFig getBounds MethodDeclaration /**
     * @return the text of the namefig
     */ Modifier public ReferenceType String getName ReturnStatement MethodInvocation nameFig getText MethodDeclaration /**
     * Getter for stereo, the stereotype Fig
     * @return the stereo Fig
     */ Modifier protected ReferenceType Fig getStereotypeFig ReturnStatement MemberReference stereotypeFig MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation pce getSource IfStatement BinaryOperation == MemberReference src MethodInvocation getOwner BlockStatement LocalVariableDeclaration ReferenceType DelayedChangeNotify VariableDeclarator delayedNotify ClassCreator ReferenceType DelayedChangeNotify This MemberReference pce StatementExpression MethodInvocation SwingUtilities MemberReference delayedNotify invokeLater End MethodDeclaration Modifier public delayedVetoableChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation renderingChanged LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds StatementExpression MethodInvocation endTrans MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pve LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation pve getSource LocalVariableDeclaration ReferenceType String VariableDeclarator pName MethodInvocation pve getPropertyName IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pve ReferenceType DeleteInstanceEvent BinaryOperation == MemberReference src MethodInvocation getOwner BlockStatement StatementExpression MethodInvocation removeFromDiagram ReturnStatement End IfStatement BinaryOperation && MethodInvocation pName Literal ""editing"" equals MethodInvocation Boolean.FALSE MethodInvocation pve getNewValue equals BlockStatement StatementExpression MethodInvocation LOG Literal ""finished editing"" debug StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src textEdited StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation endTrans IfStatement BinaryOperation && MethodInvocation pName Literal ""editing"" equals MethodInvocation Boolean.TRUE MethodInvocation pve getNewValue equals BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src textEditStarted BlockStatement StatementExpression SuperMethodInvocation MemberReference pve propertyChange End End IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference src isAUMLElement getFacade BinaryOperation != MethodInvocation getOwner Literal null MethodInvocation ! Model MethodInvocation MethodInvocation getOwner isRemoved getUmlFactory BlockStatement StatementExpression MethodInvocation MemberReference pve modelChanged End MethodDeclaration /**
     * Called whenever we receive an AttributeChangeEvent.
     * 
     * @param ace the event
     */ Modifier protected modelAttributeChanged FormalParameter ReferenceType AttributeChangeEvent ace MethodDeclaration /**
     * Called whenever we receive an AddAssociationEvent.
     * 
     * @param aae the event
     */ Modifier protected modelAssociationAdded FormalParameter ReferenceType AddAssociationEvent aae MethodDeclaration /**
     * Called whenever we receive an RemoveAssociationEvent.
     * 
     * @param rae the event
     */ Modifier protected modelAssociationRemoved FormalParameter ReferenceType RemoveAssociationEvent rae MethodDeclaration /**
     * This method is called when the user doubleclicked on the text field,
     * and starts editing. Subclasses should override this method to e.g.
     * supply help to the user about the used format. <p>
     *
     * It is also possible to alter the text to be edited
     * already here, e.g. by adding the stereotype in front of the name,
     * but that seems not user-friendly.
     *
     * @param ft the FigText that will be edited and contains the start-text
     */ Modifier protected textEditStarted FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation MethodInvocation notationProviderName getParsingHelp showHelp StatementExpression MethodInvocation ft MethodInvocation notationProviderName MethodInvocation getOwner MemberReference npArguments toString setText End MethodDeclaration /**
     * TODO: Remove this - nobody should need this - Michiel.
     * @deprecated by MVW in V0.25.4. Not used.
     * @return a i18 key that represents a help string
     *         giving an explanation to the user of the syntax
     */ Modifier protected ReferenceType String getParsingHelp ReturnStatement MethodInvocation notationProviderName getParsingHelp MethodDeclaration /**
     * Utility function to localize the given string with help text,
     * and show it in the status bar of the ArgoUML window.
     * This function is used in favour of the inline call
     * to enable later improvements; e.g. it would be possible to
     * show a help-balloon. TODO: Work this out.
     * One matter to possibly improve: show multiple lines.
     *
     * @param s the given string to be localized and shown
     */ Modifier protected showHelp FormalParameter ReferenceType String s StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference s localize fireEvent MethodDeclaration /**
     * This method is called after the user finishes editing a text
     * field that is in the FigEdgeModelElement.  Determine which field
     * and update the model.  This class handles the name, subclasses
     * should override to handle other text elements.
     *
     * @param ft the text Fig that has been edited
     */ Modifier protected textEdited FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MemberReference nameFig BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null ReturnStatement End StatementExpression MethodInvocation notationProviderName MethodInvocation getOwner MethodInvocation ft getText parse StatementExpression MethodInvocation ft MethodInvocation notationProviderName MethodInvocation getOwner MemberReference npArguments toString setText End MethodDeclaration /**
     * @param f the Fig
     * @return true if editable
     */ Modifier protected BasicType boolean canEdit FormalParameter ReferenceType Fig f ReturnStatement Literal true MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseReleased FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseEntered FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseExited FormalParameter ReferenceType MouseEvent me MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed ReturnStatement End IfStatement BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation ClassCreator ReferenceType Rectangle BinaryOperation - MethodInvocation me getX Literal 2 BinaryOperation - MethodInvocation me getY Literal 2 Literal 4 Literal 4 hitFig IfStatement BinaryOperation && BinaryOperation instanceof MemberReference f ReferenceType MouseListener MethodInvocation MemberReference f canEdit StatementExpression Cast ReferenceType MouseListener MemberReference f End End StatementExpression MethodInvocation me consume MethodDeclaration Modifier public keyPressed FormalParameter ReferenceType KeyEvent ke MethodDeclaration Modifier public keyReleased FormalParameter ReferenceType KeyEvent ke MethodDeclaration Modifier public keyTyped FormalParameter ReferenceType KeyEvent ke IfStatement MethodInvocation ke isConsumed ReturnStatement End IfStatement BinaryOperation && BinaryOperation != MemberReference nameFig Literal null MethodInvocation MemberReference nameFig canEdit StatementExpression MethodInvocation nameFig MemberReference ke keyTyped End MethodDeclaration /**
     * Rerenders the attached elements of the fig. <p>
     * 
     * Warning: The purpose of this function is NOT 
     * to redraw the whole Fig everytime
     * something changes. That would be inefficient.<p>
     * 
     * Instead, this function should only be called
     * for major changes that require a complete redraw, 
     * such as change of owner, 
     * and change of notation language. <p>
     * 
     * Overrule this function for subclasses that add extra
     * or remove graphical parts.
     */ Modifier protected renderingChanged StatementExpression MethodInvocation updateNameText StatementExpression MethodInvocation updateStereotypeText StatementExpression MethodInvocation damage MethodDeclaration /**
     * This is called after any part of the UML ModelElement has
     * changed. This method automatically updates the name FigText.
     * Subclasses should override and update other parts.
     *
     * @param e the event
     */ Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType DeleteInstanceEvent BlockStatement ReturnStatement End IfStatement BinaryOperation || BinaryOperation instanceof MemberReference e ReferenceType AssociationChangeEvent BinaryOperation instanceof MemberReference e ReferenceType AttributeChangeEvent BlockStatement IfStatement BinaryOperation != MemberReference notationProviderName Literal null BlockStatement StatementExpression MethodInvocation notationProviderName This MethodInvocation getOwner MemberReference e updateListener StatementExpression MethodInvocation updateNameText End StatementExpression MethodInvocation MethodInvocation getOwner MethodInvocation getOwner updateListeners End StatementExpression MethodInvocation determineFigNodes MethodDeclaration /**
     * generate the notation for the modelelement and stuff it into the text Fig
     */ Modifier protected updateNameText IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement End IfStatement BinaryOperation != MemberReference notationProviderName Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MethodInvocation notationProviderName MethodInvocation getOwner MemberReference npArguments toString StatementExpression MethodInvocation nameFig MemberReference nameStr setText LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation updateFont End StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds End MethodDeclaration /**
     * generate the notation for the stereotype and stuff it into the text Fig
     */ Modifier protected updateStereotypeText IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner StatementExpression MethodInvocation stereotypeFig MemberReference modelElement setOwner MethodDeclaration /**
     * This method should only be called once for any one Fig instance that
     * represents a model element (ie not for a FigEdgeNote). It is called
     * either by the constructor that takes an model element as an argument or
     * it is called by PGMLStackParser after it has created the Fig by use of
     * the empty constructor.
     * <p>
     * The assigned model element (owner) must not change during the lifetime of
     * the Fig.
     * 
     * @param owner the model element that this Fig represents.
     * @throws IllegalArgumentException if the owner given is not a model
     *                 element
     * @see org.tigris.gef.presentation.Fig#setOwner(java.lang.Object)
     */ Modifier public Annotation Override setOwner FormalParameter ReferenceType Object owner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""An owner must be supplied"" End IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""The owner cannot be changed once set"" End IfStatement MethodInvocation ! Model MethodInvocation MemberReference owner isAUMLElement getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The owner must be a model element - got a "" MethodInvocation owner MethodInvocation getName getClass End StatementExpression SuperMethodInvocation MemberReference owner setOwner StatementExpression MethodInvocation nameFig MemberReference owner setOwner IfStatement BinaryOperation != MemberReference edgePort Literal null BlockStatement StatementExpression MethodInvocation edgePort MethodInvocation getOwner setOwner End StatementExpression MethodInvocation MemberReference owner initNotationProviders StatementExpression MethodInvocation Literal null MemberReference owner updateListeners StatementExpression MethodInvocation renderingChanged MethodDeclaration /**
     * Create the NotationProviders.
     * 
     * @param own the current owner
     */ Modifier protected initNotationProviders FormalParameter ReferenceType Object own IfStatement BinaryOperation != MemberReference notationProviderName Literal null BlockStatement StatementExpression MethodInvocation notationProviderName This MemberReference own cleanListener End IfStatement MethodInvocation Model MethodInvocation MemberReference own isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference notationProviderName MethodInvocation NotationProviderFactory2 MethodInvocation MethodInvocation getNotationProviderType MemberReference own This getNotationProvider getInstance = End MethodDeclaration /**
     * Overrule this for subclasses 
     * that need a different NotationProvider.
     * 
     * @return the type of the notation provider
     */ Modifier protected BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2 TYPE_NAME MethodDeclaration /**
     * Implementations of this method should register/unregister the fig for all
     * (model)events that may cause a repaint to be necessary.
     * In the simplest case, the fig should register itself
     * as listening to (all) events fired by (only) the owner. <p>
     *  
     * But for, for example, for a
     * FigLink the fig must also register for events fired by the
     * association of the owner - because the name of 
     * the association is shown, not the name of the Link.<p>
     * 
     * In other cases, there is no need to register for any event, 
     * e.g. when a notationProvider is used. <p>
     * 
     * This function is called in 2 places: at creation (load) time of this Fig,
     * i.e. when the owner changes, 
     * and in some cases by the modelChanged() function, 
     * i.e. when the model changes. <p>
     * 
     * This function shall always register for the ""remove"" event of the owner!
     * Otherwise the Fig will not be deleted when the owner gets deleted.<p>
     * 
     *  IF this method is called with both the oldOwner and the 
     *  newOwner equal and not null, 
     *  AND we listen only to the owner itself,
     *  THEN we can safely ignore the call, but 
     *  ELSE we need to update the listeners of the related elements, 
     *  since the related elements may have been replaced.
     * 
     * @param newOwner the new owner for the listeners, 
     *          or null if all listeners have to be removed
     * @param oldOwner the previous owner, 
     *          or null if there was none, and all listeners have to be set
     */ Modifier protected updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation == MemberReference oldOwner MemberReference newOwner BlockStatement StatementExpression MethodInvocation LOG Literal ""Listeners being added and removed from the same owner"" warn End IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner removeElementListener End IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner Literal ""remove"" addElementListener End MethodDeclaration Modifier public Annotation Override setLayer FormalParameter ReferenceType Layer lay StatementExpression SuperMethodInvocation MemberReference lay setLayer StatementExpression MethodInvocation MethodInvocation MemberReference lay setLayer getFig MethodDeclaration Modifier public Annotation Override deleteFromModel LocalVariableDeclaration ReferenceType Object VariableDeclarator own MethodInvocation getOwner IfStatement BinaryOperation != MemberReference own Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference own moveToTrash getProject End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getPathItemFigs WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Fig MethodInvocation it next End StatementExpression SuperMethodInvocation deleteFromModel MethodDeclaration Modifier public notationChanged FormalParameter ReferenceType ArgoNotationEvent event IfStatement BinaryOperation == MethodInvocation getOwner Literal null ReturnStatement End StatementExpression MethodInvocation MethodInvocation getOwner initNotationProviders StatementExpression MethodInvocation renderingChanged MethodDeclaration Modifier public notationAdded FormalParameter ReferenceType ArgoNotationEvent event MethodDeclaration Modifier public notationRemoved FormalParameter ReferenceType ArgoNotationEvent event MethodDeclaration Modifier public notationProviderAdded FormalParameter ReferenceType ArgoNotationEvent event MethodDeclaration Modifier public notationProviderRemoved FormalParameter ReferenceType ArgoNotationEvent event MethodDeclaration Modifier public Annotation Override BasicType boolean hit FormalParameter ReferenceType Rectangle r LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getPathItemFigs WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MethodInvocation it next IfStatement MethodInvocation f MemberReference r hit ReturnStatement Literal true End End ReturnStatement SuperMethodInvocation MemberReference r hit MethodDeclaration Modifier public final removeFromDiagram LocalVariableDeclaration ReferenceType Fig VariableDeclarator delegate MethodInvocation getRemoveDelegate IfStatement BinaryOperation instanceof MemberReference delegate ReferenceType FigNodeModelElement BlockStatement StatementExpression Cast ReferenceType FigNodeModelElement MemberReference delegate IfStatement BinaryOperation instanceof MemberReference delegate ReferenceType FigEdgeModelElement BlockStatement StatementExpression Cast ReferenceType FigEdgeModelElement MemberReference delegate IfStatement BinaryOperation != MemberReference delegate Literal null BlockStatement StatementExpression MethodInvocation removeFromDiagramImpl End End End MethodDeclaration /**
     * Subclasses should override this to redirect a remove request from
     * one Fig to another.
     * e.g. FigEdgeAssociationClass uses this to delegate the remove to
     * its attached FigAssociationClass.
     * @return the fig handling the remove
     */ Modifier protected ReferenceType Fig getRemoveDelegate ReturnStatement This MethodDeclaration Modifier protected removeFromDiagramImpl LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation getOwner IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation MemberReference o removeElementListener End StatementExpression MethodInvocation ArgoEventPump This removeListener IfStatement BinaryOperation != MemberReference notationProviderName Literal null BlockStatement StatementExpression MethodInvocation notationProviderName This MethodInvocation getOwner cleanListener End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getPathItemFigs WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation it next StatementExpression MethodInvocation fig removeFromDiagram End StatementExpression SuperMethodInvocation removeFromDiagram StatementExpression MethodInvocation damage MethodDeclaration Modifier protected superRemoveFromDiagram StatementExpression SuperMethodInvocation removeFromDiagram MethodDeclaration Modifier public Annotation Override damage StatementExpression SuperMethodInvocation damage StatementExpression MethodInvocation MethodInvocation damage getFig MethodDeclaration /**
     * <p>Determines if the FigEdge is currently connected to the correct
     * FigNodes, if not the edges is the correct FigNodes set and the edge
     * rerouted.
     * <p>Typically this is used when a user has amended from the property
     * panel a relationship from one model element to another and the graph
     * needs to react to that change.
     * <p>e.g. if the participant of an association end is changed.
     * <p>Calls a helper method (layoutThisToSelf) to avoid this edge
     * disappearing if the new source and dest are the same node.
     *
     * @return boolean whether or not the update was sucessful
     */ Modifier protected BasicType boolean determineFigNodes LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation || BinaryOperation == MemberReference owner Literal null BinaryOperation == MethodInvocation getLayer Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""The FigEdge has no owner or its layer is null"" error ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator newSource MethodInvocation getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator newDest MethodInvocation getDestination LocalVariableDeclaration ReferenceType Fig VariableDeclarator currentSourceFig MethodInvocation getSourceFigNode LocalVariableDeclaration ReferenceType Fig VariableDeclarator currentDestFig MethodInvocation getDestFigNode LocalVariableDeclaration ReferenceType Object VariableDeclarator currentSource Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator currentDestination Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference currentSourceFig Literal null BinaryOperation != MemberReference currentDestFig Literal null BlockStatement StatementExpression Assignment MemberReference currentSource MethodInvocation currentSourceFig getOwner = StatementExpression Assignment MemberReference currentDestination MethodInvocation currentDestFig getOwner = End IfStatement BinaryOperation || BinaryOperation != MemberReference newSource MemberReference currentSource BinaryOperation != MemberReference newDest MemberReference currentDestination BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator newSourceFig MethodInvocation MemberReference newSource getNoEdgePresentationFor LocalVariableDeclaration ReferenceType Fig VariableDeclarator newDestFig MethodInvocation MemberReference newDest getNoEdgePresentationFor IfStatement BinaryOperation != MemberReference newSourceFig MemberReference currentSourceFig BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference newSourceFig setSourceFigNode StatementExpression MethodInvocation MemberReference newSourceFig setSourcePortFig End IfStatement BinaryOperation != MemberReference newDestFig MemberReference currentDestFig BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference newDestFig setDestFigNode StatementExpression MethodInvocation MemberReference newDestFig setDestPortFig End StatementExpression Cast ReferenceType FigNode MemberReference newSourceFig StatementExpression Cast ReferenceType FigNode MemberReference newDestFig StatementExpression MethodInvocation calcBounds IfStatement BinaryOperation == MemberReference newSourceFig MemberReference newDestFig BlockStatement StatementExpression MethodInvocation layoutThisToSelf End End ReturnStatement Literal true MethodDeclaration /**
     * A version of GEF's presentationFor() method which 
     * @param element ModelElement to return presentation for
     * @return the Fig representing the presentation
     */ Modifier private ReferenceType Fig getNoEdgePresentationFor FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference element Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Can't search for a null owner"" End LocalVariableDeclaration ReferenceType List VariableDeclarator contents MethodInvocation MethodInvocation getContentsNoEdges getLayer LocalVariableDeclaration BasicType int VariableDeclarator figCount MethodInvocation contents size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator figIndex Literal 0 BinaryOperation < MemberReference figIndex MemberReference figCount MemberReference ++ figIndex BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation contents MemberReference figIndex get IfStatement BinaryOperation == MethodInvocation fig getOwner MemberReference element BlockStatement ReturnStatement MemberReference fig End End ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal ""Can't find a FigNode representing "" MethodInvocation Model MethodInvocation MemberReference element getName getFacade MethodDeclaration /**
     * helper method for updateClassifiers() in order to automatically
     * layout an edge that is now from and to the same node type.
     * <p>adapted from SelectionWButtons from line 280
     */ Modifier private layoutThisToSelf LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator edgeShape ClassCreator ReferenceType FigPoly LocalVariableDeclaration ReferenceType Point VariableDeclarator fcCenter ClassCreator ReferenceType Point BinaryOperation / MethodInvocation MethodInvocation getX getSourceFigNode Literal 2 BinaryOperation / MethodInvocation MethodInvocation getY getSourceFigNode Literal 2 LocalVariableDeclaration ReferenceType Point VariableDeclarator centerRight ClassCreator ReferenceType Point Cast BasicType int BinaryOperation + MemberReference fcCenter x BinaryOperation / MethodInvocation MethodInvocation getSize MethodInvocation getWidth getSourceFigNode Literal 2 MemberReference fcCenter y LocalVariableDeclaration BasicType int VariableDeclarator yoffset Cast BasicType int BinaryOperation / MethodInvocation MethodInvocation getSize MethodInvocation getHeight getSourceFigNode Literal 2 StatementExpression MethodInvocation edgeShape MemberReference fcCenter x MemberReference fcCenter y addPoint StatementExpression MethodInvocation edgeShape MemberReference centerRight x MemberReference centerRight y addPoint StatementExpression MethodInvocation edgeShape BinaryOperation + MemberReference centerRight x Literal 30 MemberReference centerRight y addPoint StatementExpression MethodInvocation edgeShape BinaryOperation + MemberReference centerRight x Literal 30 BinaryOperation + MemberReference centerRight y MemberReference yoffset addPoint StatementExpression MethodInvocation edgeShape MemberReference centerRight x BinaryOperation + MemberReference centerRight y MemberReference yoffset addPoint StatementExpression This MethodInvocation Literal true setBetweenNearestPoints StatementExpression MethodInvocation edgeShape MemberReference Color black setLineColor StatementExpression MethodInvocation edgeShape Literal false setFilled StatementExpression MethodInvocation edgeShape Literal true setComplete StatementExpression This MethodInvocation MemberReference edgeShape setFig MethodDeclaration /**
     * Returns the source of the edge. The source is the owner of the
     * node the edge travels from in a binary relationship. For
     * instance: for a classifierrole, this is the sender.
     * @return a model element
     */ Modifier protected ReferenceType Object getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference owner getSource getCoreHelper End ReturnStatement Literal null MethodDeclaration /**
     * Returns the destination of the edge. The destination is the
     * owner of the node the edge travels to in a binary
     * relationship. For instance: for a classifierrole, this is the
     * receiver.
     * @return a model element
     */ Modifier protected ReferenceType Object getDestination LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference owner getDestination getCoreHelper End ReturnStatement Literal null MethodDeclaration Modifier public Annotation Override postLoad StatementExpression MethodInvocation ArgoEventPump This removeListener StatementExpression MethodInvocation ArgoEventPump This addListener MethodDeclaration /**
     * @deprecated
     * @return Returns the plain font.
     */ Modifier public ReferenceType Font getLabelFont ReturnStatement MethodInvocation MethodInvocation getProjectSettings MethodInvocation getFontPlain getProject MethodDeclaration /**
     * @deprecated
     * @return Returns the italic font.
     */ Modifier public ReferenceType Font getItalicLabelFont ReturnStatement MethodInvocation MethodInvocation getProjectSettings MethodInvocation getFontItalic getProject MethodDeclaration /**
     * @param allowed true if the function RemoveFromDiagram is allowed
     */ Modifier protected allowRemoveFromDiagram FormalParameter BasicType boolean allowed StatementExpression Assignment This MemberReference removeFromDiagram MemberReference allowed = MethodDeclaration /**
     * Set the associated Diagram Interchange element.
     * 
     * @param element the element to be associated with this Fig
     */ Modifier public setDiElement FormalParameter ReferenceType DiElement element StatementExpression Assignment This MemberReference diElement MemberReference element = MethodDeclaration /**
     * @return the Diagram Interchange element associated with this Fig
     */ Modifier public ReferenceType DiElement getDiElement ReturnStatement MemberReference diElement MethodDeclaration /**
     * @return Returns the popupAddOffset.
     */ Modifier protected static BasicType int getPopupAddOffset ReturnStatement MemberReference popupAddOffset MethodDeclaration /**
     * Add an element listener and remember the registration.
     * 
     * @param element
     *            element to listen for changes on
     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
     */ Modifier protected addElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null add StatementExpression MethodInvocation Model MethodInvocation This MemberReference element addModelEventListener getPump MethodDeclaration /**
     * Add a listener and remember the registration.
     * 
     * @param element
     *            element to listen for changes on
     * @param property
     *            name of property to listen for changes of
     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
     */ Modifier protected addElementListener FormalParameter ReferenceType Object element FormalParameter ReferenceType String property StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element MemberReference property add StatementExpression MethodInvocation Model MethodInvocation This MemberReference element MemberReference property addModelEventListener getPump MethodDeclaration /**
     * Add a listener and remember the registration.
     * 
     * @param element
     *            element to listen for changes on
     * @param property
     *            array of property names (Strings) to listen for changes of
     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
     */ Modifier protected addElementListener FormalParameter ReferenceType Object element FormalParameter ReferenceType String property StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element MemberReference property add StatementExpression MethodInvocation Model MethodInvocation This MemberReference element MemberReference property addModelEventListener getPump MethodDeclaration /**
     * Add an element listener and remember the registration.
     * 
     * @param element
     *            element to listen for changes on
     * @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
     */ Modifier protected removeElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null remove StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump MethodDeclaration /**
     * Unregister all listeners registered through addElementListener
     * @see #addElementListener(Object, String)
     */ Modifier protected removeAllElementListeners ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation listeners iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator l Cast ReferenceType Object MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator property MemberReference ArraySelector Literal 1 l IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 l removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 l Cast ReferenceType String MemberReference property removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 l Cast ReferenceType String MemberReference property removeModelEventListener getPump BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal ""Internal error in removeAllElementListeners"" End End End End StatementExpression MethodInvocation listeners clear MethodDeclaration /**
     * This optional method is not implemented.  It will throw an
     * {@link UnsupportedOperationException} if used. Figs are 
     * added to a GraphModel which is, in turn, owned by a project.
     */ Modifier public setProject FormalParameter ReferenceType Project project ThrowStatement ClassCreator ReferenceType UnsupportedOperationException MethodDeclaration Modifier public ReferenceType Project getProject LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator layer Cast ReferenceType LayerPerspective MethodInvocation getLayer IfStatement BinaryOperation == MemberReference layer Literal null BlockStatement LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor IfStatement BinaryOperation == MemberReference editor Literal null BlockStatement ReturnStatement MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager End LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager IfStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective BlockStatement StatementExpression Assignment MemberReference layer Cast ReferenceType LayerPerspective MemberReference lay = End End LocalVariableDeclaration ReferenceType UMLMutableGraphSupport VariableDeclarator gm Cast ReferenceType UMLMutableGraphSupport MethodInvocation layer getGraphModel ReturnStatement MethodInvocation gm getProject MethodDeclaration /**
     * Handles diagram font changing.
     * @param e the event
     * @see org.argouml.application.events.ArgoDiagramAppearanceEventListener#diagramFontChanged(org.argouml.application.events.ArgoDiagramAppearanceEvent)
     */ Modifier public diagramFontChanged FormalParameter ReferenceType ArgoDiagramAppearanceEvent e StatementExpression MethodInvocation updateFont StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation redraw MethodDeclaration /**
     * This function should, for all FigTexts, 
     * recalculate the font-style (plain, bold, italic, bold/italic),
     * and apply it by calling FigText.setFont().
     */ Modifier protected updateFont LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator style MethodInvocation getNameFigFontStyle LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation p MethodInvocation MemberReference style getFont getProjectSettings StatementExpression MethodInvocation nameFig MemberReference f setFont StatementExpression MethodInvocation This deepUpdateFont MethodDeclaration /**
     * Determines the font style based on the UML model. 
     * Overrule this in Figs that have to show bold or italic based on the 
     * UML model they represent. 
     * E.g. abstract classes show their name in italic.
     * 
     * @return the font style for the nameFig.
     */ Modifier protected BasicType int getNameFigFontStyle ReturnStatement MemberReference Font PLAIN MethodDeclaration Modifier private deepUpdateFont FormalParameter ReferenceType FigEdge fe LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation MethodInvocation getProjectSettings MethodInvocation MemberReference Font PLAIN getFont getProject ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator pathFig MethodInvocation fe getPathItemFigs BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference pathFig deepUpdateFontRecursive End StatementExpression MethodInvocation fe calcBounds MethodDeclaration /**
     * Changes the font for all Figs contained in the given FigGroup. <p>
     * 
     *  TODO: In fact, there is a design error in this method:
     *  E.g. for a class, if the name is Italic since the class is abstract,
     *  then the classes features should be in Plain font.
     *  This problem can be fixed by implementing 
     *  the updateFont() method in all subclasses.
     *  
     * @param fg the FigGroup to change the font of.
     */ Modifier private deepUpdateFontRecursive FormalParameter ReferenceType Font f FormalParameter ReferenceType Object pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType ArgoFigText BlockStatement StatementExpression Cast ReferenceType ArgoFigText MemberReference pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType FigText BlockStatement StatementExpression Cast ReferenceType FigText MemberReference pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType FigGroup BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fge Cast ReferenceType FigGroup MemberReference pathFig BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference fge deepUpdateFontRecursive End End End End ReferenceType FigEdgePoly ReferenceType VetoableChangeListener ReferenceType DelayedVChangeListener ReferenceType MouseListener ReferenceType KeyListener ReferenceType PropertyChangeListener ReferenceType ArgoNotationEventListener ReferenceType ArgoDiagramAppearanceEventListener ReferenceType Highlightable ReferenceType IItemUID ReferenceType ArgoFig",0
57,57,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.text.ParseException Import java.util.Map Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.notation.providers.ObjectFlowStateTypeNotation ClassDeclaration Modifier public /**
 * @author Michiel
 */ ObjectFlowStateTypeNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param objectflowstate the ObjectFlowState represented by this notation
     */ ObjectFlowStateTypeNotationUml FormalParameter ReferenceType Object objectflowstate StatementExpression SuperConstructorInvocation MemberReference objectflowstate MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseObjectFlowState1 CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.objectflowstate"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration /**
     * Do the actual parsing. <p>
     * 
     * This method does create a Class 
     * if a Classifier with the given name is not encountered. 
     * See for explanation issue 4382.
     *
     * @param objectFlowState the given element to be altered
     * @param s the new string
     * @return the altered ObjectFlowState
     * @throws ParseException when the given text was rejected
     */ Modifier protected ReferenceType Object parseObjectFlowState1 FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType String s ParseException LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference objectFlowState MemberReference s findClassifierByName getActivityGraphsHelper IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference objectFlowState MemberReference c setType getCoreHelper ReturnStatement MemberReference objectFlowState End IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator topState MethodInvocation Model MethodInvocation MemberReference objectFlowState getContainer getFacade IfStatement BinaryOperation != MemberReference topState Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MemberReference topState getStateMachine getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference machine getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation Model MethodInvocation MemberReference s MemberReference ns buildClass getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference objectFlowState MemberReference clazz setType getCoreHelper ReturnStatement MemberReference objectFlowState End End End End LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""parsing.error.object-flow-type.classifier-not-found"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference s ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference args localize Literal 0 MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-objectflowstate1"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifierInState getFacade BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation Model MethodInvocation MemberReference classifier getType getFacade = End IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement Literal """" End LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal """" = End ReturnStatement MemberReference name ReferenceType ObjectFlowStateTypeNotation",1
135,135,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics ClassDeclaration Modifier public abstract /**
 *
 * @author mkl
 *
 */ AbstractCrUnconventionalName MethodDeclaration /**
     * Based on the input of a model element name this method
     * should compute a suggestion for the wizard to present
     * to the user. Please write tests against this method for
     * concrete implementations.
     *
     * @param name The unconventional name.
     * @return a wizard suggestion
     */ Modifier public abstract ReferenceType String computeSuggestion FormalParameter ReferenceType String name ReferenceType CrUML",0
103,103,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.BorderLayout Import java.util.Enumeration Import java.util.Hashtable Import javax.swing.JPanel Import javax.swing.event.EventListenerList Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.ui.AbstractArgoJPanel Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.activity.ui.UMLActivityDiagram Import org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram Import org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram Import org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram Import org.argouml.uml.diagram.state.ui.UMLStateDiagram Import org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram Import org.argouml.uml.diagram.ui.PropPanelString Import org.argouml.uml.diagram.ui.PropPanelUMLActivityDiagram Import org.argouml.uml.diagram.ui.PropPanelUMLClassDiagram Import org.argouml.uml.diagram.ui.PropPanelUMLCollaborationDiagram Import org.argouml.uml.diagram.ui.PropPanelUMLDeploymentDiagram Import org.argouml.uml.diagram.ui.PropPanelUMLSequenceDiagram Import org.argouml.uml.diagram.ui.PropPanelUMLStateDiagram Import org.argouml.uml.diagram.ui.PropPanelUMLUseCaseDiagram Import org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelActionState Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelActivityGraph Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelCallState Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelClassifierInState Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelObjectFlowState Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelPartition Import org.argouml.uml.ui.behavior.activity_graphs.PropPanelSubactivityState Import org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationEndRole Import org.argouml.uml.ui.behavior.collaborations.PropPanelAssociationRole Import org.argouml.uml.ui.behavior.collaborations.PropPanelClassifierRole Import org.argouml.uml.ui.behavior.collaborations.PropPanelCollaboration Import org.argouml.uml.ui.behavior.collaborations.PropPanelInteraction Import org.argouml.uml.ui.behavior.collaborations.PropPanelMessage Import org.argouml.uml.ui.behavior.common_behavior.PropPanelActionSequence Import org.argouml.uml.ui.behavior.common_behavior.PropPanelArgument Import org.argouml.uml.ui.behavior.common_behavior.PropPanelCallAction Import org.argouml.uml.ui.behavior.common_behavior.PropPanelComponentInstance Import org.argouml.uml.ui.behavior.common_behavior.PropPanelCreateAction Import org.argouml.uml.ui.behavior.common_behavior.PropPanelDestroyAction Import org.argouml.uml.ui.behavior.common_behavior.PropPanelException Import org.argouml.uml.ui.behavior.common_behavior.PropPanelLink Import org.argouml.uml.ui.behavior.common_behavior.PropPanelLinkEnd Import org.argouml.uml.ui.behavior.common_behavior.PropPanelNodeInstance Import org.argouml.uml.ui.behavior.common_behavior.PropPanelObject Import org.argouml.uml.ui.behavior.common_behavior.PropPanelReception Import org.argouml.uml.ui.behavior.common_behavior.PropPanelReturnAction Import org.argouml.uml.ui.behavior.common_behavior.PropPanelSendAction Import org.argouml.uml.ui.behavior.common_behavior.PropPanelSignal Import org.argouml.uml.ui.behavior.common_behavior.PropPanelStimulus Import org.argouml.uml.ui.behavior.common_behavior.PropPanelTerminateAction Import org.argouml.uml.ui.behavior.common_behavior.PropPanelUninterpretedAction Import org.argouml.uml.ui.behavior.state_machines.PropPanelCallEvent Import org.argouml.uml.ui.behavior.state_machines.PropPanelChangeEvent Import org.argouml.uml.ui.behavior.state_machines.PropPanelCompositeState Import org.argouml.uml.ui.behavior.state_machines.PropPanelFinalState Import org.argouml.uml.ui.behavior.state_machines.PropPanelGuard Import org.argouml.uml.ui.behavior.state_machines.PropPanelPseudostate Import org.argouml.uml.ui.behavior.state_machines.PropPanelSignalEvent Import org.argouml.uml.ui.behavior.state_machines.PropPanelSimpleState Import org.argouml.uml.ui.behavior.state_machines.PropPanelStateMachine Import org.argouml.uml.ui.behavior.state_machines.PropPanelStubState Import org.argouml.uml.ui.behavior.state_machines.PropPanelSubmachineState Import org.argouml.uml.ui.behavior.state_machines.PropPanelSynchState Import org.argouml.uml.ui.behavior.state_machines.PropPanelTimeEvent Import org.argouml.uml.ui.behavior.state_machines.PropPanelTransition Import org.argouml.uml.ui.behavior.use_cases.PropPanelActor Import org.argouml.uml.ui.behavior.use_cases.PropPanelExtend Import org.argouml.uml.ui.behavior.use_cases.PropPanelExtensionPoint Import org.argouml.uml.ui.behavior.use_cases.PropPanelInclude Import org.argouml.uml.ui.behavior.use_cases.PropPanelUseCase Import org.argouml.uml.ui.foundation.core.PropPanelAbstraction Import org.argouml.uml.ui.foundation.core.PropPanelAssociation Import org.argouml.uml.ui.foundation.core.PropPanelAssociationClass Import org.argouml.uml.ui.foundation.core.PropPanelAssociationEnd Import org.argouml.uml.ui.foundation.core.PropPanelAttribute Import org.argouml.uml.ui.foundation.core.PropPanelClass Import org.argouml.uml.ui.foundation.core.PropPanelComment Import org.argouml.uml.ui.foundation.core.PropPanelComponent Import org.argouml.uml.ui.foundation.core.PropPanelConstraint Import org.argouml.uml.ui.foundation.core.PropPanelDataType Import org.argouml.uml.ui.foundation.core.PropPanelDependency Import org.argouml.uml.ui.foundation.core.PropPanelElementResidence Import org.argouml.uml.ui.foundation.core.PropPanelEnumeration Import org.argouml.uml.ui.foundation.core.PropPanelEnumerationLiteral Import org.argouml.uml.ui.foundation.core.PropPanelFlow Import org.argouml.uml.ui.foundation.core.PropPanelGeneralization Import org.argouml.uml.ui.foundation.core.PropPanelInterface Import org.argouml.uml.ui.foundation.core.PropPanelMethod Import org.argouml.uml.ui.foundation.core.PropPanelNode Import org.argouml.uml.ui.foundation.core.PropPanelOperation Import org.argouml.uml.ui.foundation.core.PropPanelParameter Import org.argouml.uml.ui.foundation.core.PropPanelPermission Import org.argouml.uml.ui.foundation.core.PropPanelUsage Import org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelStereotype Import org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelTagDefinition Import org.argouml.uml.ui.foundation.extension_mechanisms.PropPanelTaggedValue Import org.argouml.uml.ui.model_management.PropPanelElementImport Import org.argouml.uml.ui.model_management.PropPanelModel Import org.argouml.uml.ui.model_management.PropPanelPackage Import org.argouml.uml.ui.model_management.PropPanelSubsystem Import org.tigris.gef.base.Diagram Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigText Import org.tigris.swidgets.Horizontal Import org.tigris.swidgets.Orientable Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public /**
 * This is the tab on the details panel (DetailsPane) that holds the property
 * panel. On change of target, the property panel in TabProps is changed.
 * <p>
 * With the introduction of the TargetManager, this class holds its original
 * power of controlling its target. The property panels (subclasses of
 * PropPanel) for which this class is the container are being registered as
 * TargetListeners in the setTarget method of this class. They are not
 * registered with TargetManager but with this class to prevent race-conditions
 * while firing TargetEvents from TargetManager.
 */ TabProps FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType TabProps getLogger FieldDeclaration Modifier private BasicType boolean VariableDeclarator shouldBeEnabled Literal false FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator blankPanel ClassCreator ReferenceType JPanel FieldDeclaration Modifier private ReferenceType Hashtable TypeArgument ReferenceType Class TypeArgument ReferenceType TabModelTarget VariableDeclarator panels ClassCreator ReferenceType Hashtable TypeArgument ReferenceType Class TypeArgument ReferenceType TabModelTarget FieldDeclaration Modifier private ReferenceType JPanel VariableDeclarator lastPanel FieldDeclaration Modifier private ReferenceType String VariableDeclarator panelClassBaseName Literal """" FieldDeclaration Modifier private ReferenceType Object VariableDeclarator target FieldDeclaration /**
     * The list with targetlisteners, these are the property panels
     * managed by TabProps.
     * It should only contain one listener at a time.
     */ Modifier private ReferenceType EventListenerList VariableDeclarator listenerList ClassCreator ReferenceType EventListenerList ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ TabProps StatementExpression ExplicitConstructorInvocation Literal ""tab.properties"" Literal ""ui.PropPanel"" ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param tabName the name of the tab
     * @param panelClassBase the panel class base
     */ TabProps FormalParameter ReferenceType String tabName FormalParameter ReferenceType String panelClassBase StatementExpression SuperConstructorInvocation MemberReference tabName StatementExpression MethodInvocation TargetManager MethodInvocation This addTargetListener getInstance StatementExpression MethodInvocation MethodInvocation Horizontal getInstance setOrientation StatementExpression Assignment MemberReference panelClassBaseName MemberReference panelClassBase = StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout MethodDeclaration /**
     * Set the orientation of the property panel.
     *
     * @param orientation the new orientation for this property panel
     *
     * @see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
     */ Modifier public Annotation Override setOrientation FormalParameter ReferenceType Orientation orientation StatementExpression SuperMethodInvocation MemberReference orientation setOrientation LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator pps MethodInvocation panels elements WhileStatement MethodInvocation pps hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation pps nextElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Orientable BlockStatement LocalVariableDeclaration ReferenceType Orientable VariableDeclarator orientable Cast ReferenceType Orientable MemberReference o StatementExpression MethodInvocation orientable MemberReference orientation setOrientation End End MethodDeclaration /**
     * Adds a property panel to the internal list. This allows a plugin to
     * add / register a new property panel at run-time.
     * This property panel will then
     * be displayed in the detatils pane whenever an element
     * of the given metaclass is selected.
     *
     * @param c the metaclass whose details show be displayed
     *          in the property panel p
     * @param p an instance of the property panel for the metaclass m
     *
     */ Modifier public addPanel FormalParameter ReferenceType Class c FormalParameter ReferenceType PropPanel p StatementExpression MethodInvocation panels MemberReference c MemberReference p put MethodDeclaration /**
     * Sets the target of the property panel. The given target t
     * may either be a Diagram or a modelelement. If the target
     * given is a Fig, a check is made if the fig has an owning
     * modelelement and occurs on the current diagram.
     * If so, that modelelement is the target.
     *
     * @deprecated As of ArgoUml version 0.13.5,
     *         the visibility of this method will change in the future,
     *         replaced by {@link org.argouml.ui.targetmanager.TargetManager}.
     *
     * @param t the new target
     * @see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
     */ Modifier public setTarget FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference t TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t = IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference t Literal null MethodInvocation Model MethodInvocation MemberReference t isAUMLElement getFacade BinaryOperation instanceof MemberReference t ReferenceType ArgoDiagram BlockStatement ReturnStatement End IfStatement BinaryOperation != MemberReference lastPanel Literal null BlockStatement StatementExpression MethodInvocation MemberReference lastPanel remove IfStatement BinaryOperation instanceof MemberReference lastPanel ReferenceType TargetListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference lastPanel removeTargetListener End End StatementExpression Assignment MemberReference target MemberReference t = IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression MethodInvocation MemberReference blankPanel MemberReference BorderLayout CENTER add StatementExpression Assignment MemberReference shouldBeEnabled Literal false = StatementExpression Assignment MemberReference lastPanel MemberReference blankPanel = BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal true = LocalVariableDeclaration ReferenceType TabModelTarget VariableDeclarator newPanel Literal null StatementExpression Assignment MemberReference newPanel MethodInvocation MemberReference t findPanelFor = IfStatement BinaryOperation != MemberReference newPanel Literal null BlockStatement StatementExpression MethodInvocation MemberReference newPanel addTargetListener End IfStatement BinaryOperation instanceof MemberReference newPanel ReferenceType JPanel BlockStatement StatementExpression MethodInvocation Cast ReferenceType JPanel MemberReference newPanel MemberReference BorderLayout CENTER add StatementExpression Assignment MemberReference shouldBeEnabled Literal true = StatementExpression Assignment MemberReference lastPanel Cast ReferenceType JPanel MemberReference newPanel = BlockStatement StatementExpression MethodInvocation MemberReference blankPanel MemberReference BorderLayout CENTER add StatementExpression Assignment MemberReference shouldBeEnabled Literal false = StatementExpression Assignment MemberReference lastPanel MemberReference blankPanel = End End MethodDeclaration Modifier public refresh StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance setTarget MethodDeclaration /**
     * Find the correct properties panel for the target.
     *
     * @param trgt the target class
     * @return the tab panel
     */ Modifier private ReferenceType TabModelTarget findPanelFor FormalParameter ReferenceType Object trgt LocalVariableDeclaration ReferenceType TabModelTarget VariableDeclarator p MethodInvocation panels MethodInvocation trgt getClass get IfStatement BinaryOperation != MemberReference p Literal null BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Getting prop panel for: "" MethodInvocation trgt MethodInvocation getName getClass Literal "", "" Literal ""found (in cache?) "" MemberReference p debug End ReturnStatement MemberReference p End StatementExpression Assignment MemberReference p MethodInvocation MemberReference trgt createPropPanel = IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Factory created "" MethodInvocation p MethodInvocation getName getClass Literal "" for "" MethodInvocation trgt MethodInvocation getName getClass debug StatementExpression MethodInvocation panels MethodInvocation trgt getClass MemberReference p put IfStatement BinaryOperation instanceof MemberReference p ReferenceType PropPanel BlockStatement StatementExpression Cast ReferenceType PropPanel MemberReference p End ReturnStatement MemberReference p End StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Failed to create a prop panel for : "" MemberReference trgt error ReturnStatement Literal null MethodDeclaration /**
     * A factory method to create a PropPanel for a particular model
     * element.
     *
     * @param modelElement The model element
     * @return A new prop panel to display any model element of the given type
     */ Modifier private ReferenceType TabModelTarget createPropPanel FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType TabModelTarget VariableDeclarator propPanel Literal null IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLActivityDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLActivityDiagram = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLClassDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLClassDiagram = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLCollaborationDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLCollaborationDiagram = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLDeploymentDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLDeploymentDiagram = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLSequenceDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLSequenceDiagram = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLStateDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLStateDiagram = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UMLUseCaseDiagram BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUMLUseCaseDiagram = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASubmachineState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSubmachineState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASubactivityState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSubactivityState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAbstraction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAbstraction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isACallState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelCallState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActionSequence getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelActionSequence = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActionState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelActionState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActivityGraph getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelActivityGraph = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActor getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelActor = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAArgument getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelArgument = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationClass getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAssociationClass = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationRole getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAssociationRole = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAssociation = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationEndRole getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAssociationEndRole = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAssociationEnd = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelAttribute = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isACallAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelCallAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClassifierInState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelClassifierInState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelClass = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClassifierRole getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelClassifierRole = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isACollaboration getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelCollaboration = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelComment = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComponent getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelComponent = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComponentInstance getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelComponentInstance = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isACompositeState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelCompositeState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAConstraint getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelConstraint = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isACreateAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelCreateAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAEnumeration getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelEnumeration = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADataType getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelDataType = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADestroyAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelDestroyAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAEnumerationLiteral getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelEnumerationLiteral = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAElementImport getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelElementImport = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAElementResidence getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelElementResidence = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAExtend getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelExtend = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAException getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelException = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAExtensionPoint getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelExtensionPoint = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelFinalState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAFlow getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelFlow = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelGeneralization = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAGuard getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelGuard = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAInclude getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelInclude = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAInteraction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelInteraction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelInterface = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isALink getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelLink = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isALinkEnd getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelLinkEnd = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAMessage getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelMessage = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAMethod getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelMethod = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAModel getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelModel = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isANode getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelNode = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isANodeInstance getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelNodeInstance = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAObject getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelObject = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAObjectFlowState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelObjectFlowState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAOperation getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelOperation = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelPackage = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAParameter getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelParameter = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPartition getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelPartition = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPackageImport getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelPermission = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPseudostate getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelPseudostate = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAReception getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelReception = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAReturnAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelReturnAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASendAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSendAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASignal getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSignal = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASimpleState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSimpleState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAStateMachine getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelStateMachine = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAStereotype getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelStereotype = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAStimulus getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelStimulus = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAStubState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelStubState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASubsystem getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSubsystem = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASynchState getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSynchState = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isATaggedValue getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelTaggedValue = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isATagDefinition getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelTagDefinition = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isATerminateAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelTerminateAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isATransition getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelTransition = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUninterpretedAction getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUninterpretedAction = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUsage getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUsage = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUseCase getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelUseCase = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isACallEvent getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelCallEvent = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAChangeEvent getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelChangeEvent = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASignalEvent getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelSignalEvent = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isATimeEvent getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelTimeEvent = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADependency getFacade BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelDependency = IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType FigText BlockStatement StatementExpression Assignment MemberReference propPanel ClassCreator ReferenceType PropPanelString = End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End End IfStatement BinaryOperation instanceof MemberReference propPanel ReferenceType Orientable BlockStatement StatementExpression Cast ReferenceType Orientable MemberReference propPanel End IfStatement BinaryOperation instanceof MemberReference propPanel ReferenceType PropPanel BlockStatement StatementExpression Cast ReferenceType PropPanel MemberReference propPanel StatementExpression Cast ReferenceType PropPanel MemberReference propPanel End ReturnStatement MemberReference propPanel MethodDeclaration /**
     * @return the name
     */ Modifier protected ReferenceType String getClassBaseName ReturnStatement MemberReference panelClassBaseName MethodDeclaration /**
     * Returns the current target.
     * @deprecated As of ArgoUml version 0.13.5,
     * the visibility of this method will change in the future, replaced by
     * {@link org.argouml.ui.targetmanager.TargetManager#getTarget()
     * TargetManager.getInstance().getTarget()}.
     *
     * @return the target
     * @see org.argouml.ui.TabTarget#getTarget()
     */ Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target MethodDeclaration /**
     * Determines if the property panel should be enabled.
     * The property panel should always be enabled if the
     * target is an instance of a modelelement or an argodiagram.
     * If the target given is a Fig, a check is made if the fig
     * has an owning modelelement and occurs on
     * the current diagram. If so, that modelelement is the target.
     * @param t the target
     * @return true if property panel should be enabled
     * @see org.argouml.ui.TabTarget#shouldBeEnabled(Object)
     */ Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference t TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t = IfStatement BinaryOperation && BinaryOperation || BinaryOperation instanceof MemberReference t ReferenceType Diagram MethodInvocation Model MethodInvocation MemberReference t isAUMLElement getFacade BinaryOperation != MethodInvocation MemberReference t findPanelFor Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal true = BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = End ReturnStatement MemberReference shouldBeEnabled MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getSingleTarget getInstance setTarget StatementExpression MethodInvocation MemberReference e fireTargetAdded IfStatement BinaryOperation > MethodInvocation listenerList getListenerCount Literal 0 BlockStatement StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint End MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getSingleTarget getInstance setTarget StatementExpression MethodInvocation MemberReference e fireTargetRemoved StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getSingleTarget getInstance setTarget StatementExpression MethodInvocation MemberReference e fireTargetSet StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint MethodDeclaration /**
     * Adds a listener.
     * @param listener the listener to add
     */ Modifier private addTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener add MethodDeclaration /**
     * Removes a target listener.
     * @param listener the listener to remove
     */ Modifier private removeTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener remove MethodDeclaration Modifier private fireTargetSet FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End MethodDeclaration Modifier private fireTargetAdded FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End MethodDeclaration Modifier private fireTargetRemoved FormalParameter ReferenceType TargetEvent targetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners End End ReferenceType AbstractArgoJPanel ReferenceType TabModelTarget",1
1255,1255,,1
21,21,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.UMLToDoItem Import org.argouml.uml.diagram.deployment.ui.FigMNode Import org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram ClassDeclaration Modifier public /**
 * A critic to detect when there are nodes that
 * are inside another element
 *
 * @author 5eichler
 */ CrNodeInsideElement ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ CrNodeInsideElement StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision PATTERNS addSupportedDecision MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType UMLDeploymentDiagram BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res MethodDeclaration /**
     * If there are nodes that have an enclosing Fig
     * the returned ListSet is not null. Then in the ListSet
     * are the UMLDeploymentDiagram and all FigMNodes with an
     * enclosing Fig
     *
     * @param dd the diagram to check
     * @return the set of offenders
     */ Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigMNode ContinueStatement End LocalVariableDeclaration ReferenceType FigMNode VariableDeclarator fn Cast ReferenceType FigMNode MemberReference obj IfStatement BinaryOperation != MethodInvocation fn getEnclosingFig Literal null BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add End StatementExpression MethodInvocation offs MemberReference fn add End End ReturnStatement MemberReference offs ReferenceType CrUML",0
1350,1350,,0
1542,1542,,0
894,894,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Summary->OutgoingDependency.
 * This class is a Go Rule for the ""Class - centric"" Navigation perspective.
 *
 * @author  alexb, d00mst
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ GoSummaryToOutgoingDependency MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.summary.outgoing-dependency"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType OutgoingDependencyNode BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation Cast ReferenceType OutgoingDependencyNode MemberReference parent getClientDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation ! Model MethodInvocation MemberReference next isAAbstraction getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add End End ReturnStatement MemberReference list End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType OutgoingDependencyNode BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set Cast ReferenceType OutgoingDependencyNode MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",1
1295,1295,,0
1519,1519,,0
1266,1266,,0
1384,1384,,0
973,973,,0
1057,1057,,1
15,15,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import javax.swing.Action Import javax.swing.JRadioButton Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLRadioButtonPanel Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * An action to set the direction of a parameter.
 *
 * @author mkl
 *
 */ ActionSetParameterDirectionKind FieldDeclaration Modifier private final static ReferenceType ActionSetParameterDirectionKind VariableDeclarator SINGLETON ClassCreator ReferenceType ActionSetParameterDirectionKind FieldDeclaration /**
     * IN_COMMAND determines the kind of direction.
     */ Modifier public final static ReferenceType String VariableDeclarator IN_COMMAND Literal ""in"" FieldDeclaration /**
     * OUT_COMMAND determines the kind of direction.
     */ Modifier public final static ReferenceType String VariableDeclarator OUT_COMMAND Literal ""out"" FieldDeclaration /**
     * INOUT_COMMAND determines the kind of direction.
     */ Modifier public final static ReferenceType String VariableDeclarator INOUT_COMMAND Literal ""inout"" FieldDeclaration /**
     * RETURN_COMMAND determines the kind of direction.
     */ Modifier public final static ReferenceType String VariableDeclarator RETURN_COMMAND Literal ""return"" ConstructorDeclaration Modifier protected /**
     * Constructor for ActionSetElementOwnershipSpecification.
     */ ActionSetParameterDirectionKind StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""Set"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""Set"" localize putValue MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType JRadioButton BlockStatement LocalVariableDeclaration ReferenceType JRadioButton VariableDeclarator source Cast ReferenceType JRadioButton MethodInvocation e getSource LocalVariableDeclaration ReferenceType String VariableDeclarator actionCommand MethodInvocation source getActionCommand LocalVariableDeclaration ReferenceType Object VariableDeclarator target Cast ReferenceType UMLRadioButtonPanel MethodInvocation source getParent IfStatement MethodInvocation Model MethodInvocation MemberReference target isAParameter getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind Literal null IfStatement BinaryOperation == MemberReference actionCommand Literal null BlockStatement StatementExpression Assignment MemberReference kind Literal null = IfStatement MethodInvocation actionCommand MemberReference IN_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getInParameter getDirectionKind = IfStatement MethodInvocation actionCommand MemberReference OUT_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getOutParameter getDirectionKind = IfStatement MethodInvocation actionCommand MemberReference INOUT_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getInOutParameter getDirectionKind = IfStatement MethodInvocation actionCommand MemberReference RETURN_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getReturnParameter getDirectionKind = End End End End End StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference kind setKind getCoreHelper End End MethodDeclaration /**
     * @return Returns the sINGLETON.
     */ Modifier public static ReferenceType ActionSetParameterDirectionKind getInstance ReturnStatement MemberReference SINGLETON ReferenceType UndoableAction",0
244,244,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Iterator Import java.util.List Import java.util.Set Import javax.jmi.model.MofClass Import javax.jmi.model.Reference Import javax.jmi.reflect.InvalidObjectException Import javax.jmi.reflect.RefBaseObject Import javax.jmi.reflect.RefFeatured Import javax.jmi.reflect.RefObject Import org.apache.log4j.Logger Import org.argouml.model.CoreFactory Import org.argouml.model.Facade Import org.argouml.model.InvalidElementException Import org.omg.uml.behavioralelements.activitygraphs.ActionState Import org.omg.uml.behavioralelements.activitygraphs.ActivityGraph Import org.omg.uml.behavioralelements.activitygraphs.CallState Import org.omg.uml.behavioralelements.activitygraphs.ClassifierInState Import org.omg.uml.behavioralelements.activitygraphs.ObjectFlowState Import org.omg.uml.behavioralelements.activitygraphs.Partition Import org.omg.uml.behavioralelements.activitygraphs.SubactivityState Import org.omg.uml.behavioralelements.collaborations.AssociationEndRole Import org.omg.uml.behavioralelements.collaborations.AssociationRole Import org.omg.uml.behavioralelements.collaborations.ClassifierRole Import org.omg.uml.behavioralelements.collaborations.Collaboration Import org.omg.uml.behavioralelements.collaborations.CollaborationInstanceSet Import org.omg.uml.behavioralelements.collaborations.Interaction Import org.omg.uml.behavioralelements.collaborations.InteractionInstanceSet Import org.omg.uml.behavioralelements.collaborations.Message Import org.omg.uml.behavioralelements.commonbehavior.Action Import org.omg.uml.behavioralelements.commonbehavior.ActionSequence Import org.omg.uml.behavioralelements.commonbehavior.Argument Import org.omg.uml.behavioralelements.commonbehavior.AttributeLink Import org.omg.uml.behavioralelements.commonbehavior.CallAction Import org.omg.uml.behavioralelements.commonbehavior.ComponentInstance Import org.omg.uml.behavioralelements.commonbehavior.CreateAction Import org.omg.uml.behavioralelements.commonbehavior.DataValue Import org.omg.uml.behavioralelements.commonbehavior.DestroyAction Import org.omg.uml.behavioralelements.commonbehavior.Instance Import org.omg.uml.behavioralelements.commonbehavior.Link Import org.omg.uml.behavioralelements.commonbehavior.LinkEnd Import org.omg.uml.behavioralelements.commonbehavior.LinkObject Import org.omg.uml.behavioralelements.commonbehavior.NodeInstance Import org.omg.uml.behavioralelements.commonbehavior.Reception Import org.omg.uml.behavioralelements.commonbehavior.ReturnAction Import org.omg.uml.behavioralelements.commonbehavior.SendAction Import org.omg.uml.behavioralelements.commonbehavior.Signal Import org.omg.uml.behavioralelements.commonbehavior.Stimulus Import org.omg.uml.behavioralelements.commonbehavior.SubsystemInstance Import org.omg.uml.behavioralelements.commonbehavior.TerminateAction Import org.omg.uml.behavioralelements.commonbehavior.UmlException Import org.omg.uml.behavioralelements.commonbehavior.UninterpretedAction Import org.omg.uml.behavioralelements.statemachines.CallEvent Import org.omg.uml.behavioralelements.statemachines.ChangeEvent Import org.omg.uml.behavioralelements.statemachines.CompositeState Import org.omg.uml.behavioralelements.statemachines.Event Import org.omg.uml.behavioralelements.statemachines.FinalState Import org.omg.uml.behavioralelements.statemachines.Guard Import org.omg.uml.behavioralelements.statemachines.Pseudostate Import org.omg.uml.behavioralelements.statemachines.SignalEvent Import org.omg.uml.behavioralelements.statemachines.SimpleState Import org.omg.uml.behavioralelements.statemachines.State Import org.omg.uml.behavioralelements.statemachines.StateMachine Import org.omg.uml.behavioralelements.statemachines.StateVertex Import org.omg.uml.behavioralelements.statemachines.StubState Import org.omg.uml.behavioralelements.statemachines.SubmachineState Import org.omg.uml.behavioralelements.statemachines.SynchState Import org.omg.uml.behavioralelements.statemachines.TimeEvent Import org.omg.uml.behavioralelements.statemachines.Transition Import org.omg.uml.behavioralelements.usecases.Actor Import org.omg.uml.behavioralelements.usecases.Extend Import org.omg.uml.behavioralelements.usecases.ExtensionPoint Import org.omg.uml.behavioralelements.usecases.Include Import org.omg.uml.behavioralelements.usecases.UseCase Import org.omg.uml.behavioralelements.usecases.UseCaseInstance Import org.omg.uml.foundation.core.Abstraction Import org.omg.uml.foundation.core.Artifact Import org.omg.uml.foundation.core.AssociationClass Import org.omg.uml.foundation.core.AssociationEnd Import org.omg.uml.foundation.core.Attribute Import org.omg.uml.foundation.core.BehavioralFeature Import org.omg.uml.foundation.core.Binding Import org.omg.uml.foundation.core.Classifier Import org.omg.uml.foundation.core.Comment Import org.omg.uml.foundation.core.Component Import org.omg.uml.foundation.core.Constraint Import org.omg.uml.foundation.core.DataType Import org.omg.uml.foundation.core.Dependency Import org.omg.uml.foundation.core.Element Import org.omg.uml.foundation.core.ElementResidence Import org.omg.uml.foundation.core.Enumeration Import org.omg.uml.foundation.core.EnumerationLiteral Import org.omg.uml.foundation.core.Feature Import org.omg.uml.foundation.core.Flow Import org.omg.uml.foundation.core.GeneralizableElement Import org.omg.uml.foundation.core.Generalization Import org.omg.uml.foundation.core.Interface Import org.omg.uml.foundation.core.Method Import org.omg.uml.foundation.core.ModelElement Import org.omg.uml.foundation.core.Namespace Import org.omg.uml.foundation.core.Node Import org.omg.uml.foundation.core.Operation Import org.omg.uml.foundation.core.Parameter Import org.omg.uml.foundation.core.Permission Import org.omg.uml.foundation.core.Primitive Import org.omg.uml.foundation.core.ProgrammingLanguageDataType Import org.omg.uml.foundation.core.Relationship Import org.omg.uml.foundation.core.Stereotype Import org.omg.uml.foundation.core.StructuralFeature Import org.omg.uml.foundation.core.TagDefinition Import org.omg.uml.foundation.core.TaggedValue Import org.omg.uml.foundation.core.TemplateArgument Import org.omg.uml.foundation.core.TemplateParameter Import org.omg.uml.foundation.core.UmlAssociation Import org.omg.uml.foundation.core.UmlClass Import org.omg.uml.foundation.core.Usage Import org.omg.uml.foundation.datatypes.ActionExpression Import org.omg.uml.foundation.datatypes.AggregationKind Import org.omg.uml.foundation.datatypes.AggregationKindEnum Import org.omg.uml.foundation.datatypes.ArgListsExpression Import org.omg.uml.foundation.datatypes.BooleanExpression Import org.omg.uml.foundation.datatypes.CallConcurrencyKind Import org.omg.uml.foundation.datatypes.CallConcurrencyKindEnum Import org.omg.uml.foundation.datatypes.ChangeableKind Import org.omg.uml.foundation.datatypes.ChangeableKindEnum Import org.omg.uml.foundation.datatypes.Expression Import org.omg.uml.foundation.datatypes.IterationExpression Import org.omg.uml.foundation.datatypes.MappingExpression Import org.omg.uml.foundation.datatypes.Multiplicity Import org.omg.uml.foundation.datatypes.MultiplicityRange Import org.omg.uml.foundation.datatypes.ObjectSetExpression Import org.omg.uml.foundation.datatypes.OrderingKind Import org.omg.uml.foundation.datatypes.OrderingKindEnum Import org.omg.uml.foundation.datatypes.ParameterDirectionKind Import org.omg.uml.foundation.datatypes.ParameterDirectionKindEnum Import org.omg.uml.foundation.datatypes.ProcedureExpression Import org.omg.uml.foundation.datatypes.PseudostateKind Import org.omg.uml.foundation.datatypes.ScopeKind Import org.omg.uml.foundation.datatypes.ScopeKindEnum Import org.omg.uml.foundation.datatypes.TimeExpression Import org.omg.uml.foundation.datatypes.TypeExpression Import org.omg.uml.foundation.datatypes.VisibilityKind Import org.omg.uml.foundation.datatypes.VisibilityKindEnum Import org.omg.uml.modelmanagement.ElementImport Import org.omg.uml.modelmanagement.Model Import org.omg.uml.modelmanagement.Subsystem Import org.omg.uml.modelmanagement.UmlPackage ClassDeclaration /**
 * Model Facade implementation.
 *
 * This class provides read-only access to model data in the repository.
 * Factories and setters are in separate UML package specific classes.
 * <p>
 * Most methods in this class can throw the run-time exception
 * {@link org.argouml.model.InvalidElementException}.
 * <p>
 * Unless otherwise noted by the Javadoc, all methods in this class implement
 * methods from the interface {@link Facade}.
 */ FacadeMDRImpl FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType FacadeMDRImpl getLogger FieldDeclaration Modifier private ReferenceType MDRModelImplementation VariableDeclarator modelImpl FieldDeclaration Modifier final static ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType AggregationKindEnum VariableDeclarator MOF_COMPOSITE MemberReference javax.jmi.model.AggregationKindEnum COMPOSITE ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param impl
     *            The model implementation
     */ FacadeMDRImpl FormalParameter ReferenceType MDRModelImplementation impl StatementExpression Assignment MemberReference modelImpl MemberReference impl = MethodDeclaration Modifier public ReferenceType String getUmlVersion ReturnStatement Literal ""1.4"" MethodDeclaration Modifier public BasicType boolean isAAbstraction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Abstraction MethodDeclaration Modifier public BasicType boolean isAAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Action MethodDeclaration Modifier public BasicType boolean isAActionExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ActionExpression MethodDeclaration Modifier public BasicType boolean isAActionSequence FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence MethodDeclaration Modifier public BasicType boolean isAActionState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ActionState MethodDeclaration Modifier public BasicType boolean isACallState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CallState MethodDeclaration Modifier public BasicType boolean isAObjectFlowState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState MethodDeclaration Modifier public BasicType boolean isASubactivityState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SubactivityState MethodDeclaration Modifier public BasicType boolean isAActor FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Actor MethodDeclaration Modifier public BasicType boolean isAAggregationKind FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AggregationKind MethodDeclaration Modifier public BasicType boolean isAArgument FormalParameter ReferenceType Object modelElement ReturnStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Argument MethodDeclaration Modifier public BasicType boolean isAArtifact FormalParameter ReferenceType Object modelElement ReturnStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Artifact MethodDeclaration Modifier public BasicType boolean isAAssociation FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation MethodDeclaration Modifier public BasicType boolean isAAssociationEnd FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd MethodDeclaration Modifier public BasicType boolean isAAssociationRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole MethodDeclaration Modifier public BasicType boolean isAAssociationEndRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole MethodDeclaration Modifier public BasicType boolean isAAttribute FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Attribute MethodDeclaration Modifier public BasicType boolean isAAttributeLink FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink MethodDeclaration Modifier public BasicType boolean isAsynchronous FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement TryStatement ReturnStatement Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isAbstract FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement Cast ReferenceType UmlAssociation MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean End MethodDeclaration Modifier public BasicType boolean isAActivityGraph FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ActivityGraph MethodDeclaration Modifier public BasicType boolean isABehavioralFeature FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature MethodDeclaration Modifier public BasicType boolean isABinding FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Binding MethodDeclaration Modifier public BasicType boolean isACallAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction MethodDeclaration Modifier public BasicType boolean isACallEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CallEvent MethodDeclaration Modifier public BasicType boolean isAChangeEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ChangeEvent MethodDeclaration Modifier public BasicType boolean isAClass FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlClass MethodDeclaration Modifier public BasicType boolean isAAssociationClass FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationClass MethodDeclaration Modifier public BasicType boolean isAClassifier FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier MethodDeclaration Modifier public BasicType boolean isAClassifierInState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierInState MethodDeclaration Modifier public BasicType boolean isAClassifierRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole MethodDeclaration Modifier public BasicType boolean isAComment FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Comment MethodDeclaration Modifier public BasicType boolean isACollaboration FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration MethodDeclaration Modifier public BasicType boolean isACollaborationInstanceSet FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CollaborationInstanceSet MethodDeclaration Modifier public BasicType boolean isAComponent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Component MethodDeclaration Modifier public BasicType boolean isAComponentInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ComponentInstance MethodDeclaration Modifier public BasicType boolean isAConstraint FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Constraint MethodDeclaration Modifier public BasicType boolean isACreateAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CreateAction MethodDeclaration Modifier public BasicType boolean isADataType FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType DataType MethodDeclaration Modifier public BasicType boolean isADataValue FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType DataValue MethodDeclaration Modifier public BasicType boolean isADependency FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Dependency MethodDeclaration Modifier public BasicType boolean isADestroyAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType DestroyAction MethodDeclaration Modifier public BasicType boolean isACompositeState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CompositeState MethodDeclaration Modifier public BasicType boolean isAElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Element MethodDeclaration Modifier public BasicType boolean isAElementImport FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport MethodDeclaration Modifier public BasicType boolean isAElementResidence FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence MethodDeclaration Modifier public BasicType boolean isAEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Event MethodDeclaration Modifier public BasicType boolean isAException FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlException MethodDeclaration Modifier public BasicType boolean isAExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Expression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAArgListsExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ArgListsExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isABooleanExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType BooleanExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAIterationExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType IterationExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAMappingExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType MappingExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAObjectSetExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectSetExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAProcedureExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ProcedureExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isATimeExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeExpression MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isATypeExpression FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TypeExpression MethodDeclaration Modifier public BasicType boolean isAExtend FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend MethodDeclaration Modifier public BasicType boolean isAExtensionPoint FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ExtensionPoint MethodDeclaration Modifier public BasicType boolean isAFeature FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature MethodDeclaration Modifier public BasicType boolean isAFinalState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType FinalState MethodDeclaration Modifier public BasicType boolean isAFlow FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Flow MethodDeclaration Modifier public BasicType boolean isAGuard FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Guard MethodDeclaration Modifier public BasicType boolean isAGeneralizableElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement MethodDeclaration Modifier public BasicType boolean isAGeneralization FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization MethodDeclaration Modifier public BasicType boolean isAInclude FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Include MethodDeclaration Modifier public BasicType boolean isAInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance MethodDeclaration Modifier public BasicType boolean isAInteraction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Interaction MethodDeclaration Modifier public BasicType boolean isAInteractionInstanceSet FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType InteractionInstanceSet MethodDeclaration Modifier public BasicType boolean isAInterface FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Interface MethodDeclaration Modifier public BasicType boolean isALink FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Link MethodDeclaration Modifier public BasicType boolean isALinkEnd FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkEnd MethodDeclaration Modifier public BasicType boolean isALinkObject FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkObject MethodDeclaration Modifier public BasicType boolean isAMessage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Message MethodDeclaration Modifier public BasicType boolean isAMethod FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Method MethodDeclaration Modifier public BasicType boolean isAModel FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Model MethodDeclaration Modifier public BasicType boolean isAModelElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement MethodDeclaration Modifier public BasicType boolean isAMultiplicity FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity MethodDeclaration Modifier public BasicType boolean isAMultiplicityRange FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType MultiplicityRange MethodDeclaration Modifier public BasicType boolean isANamedElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement MethodDeclaration Modifier public BasicType boolean isANamespace FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace MethodDeclaration Modifier public BasicType boolean isANaryAssociation FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement BinaryOperation > MethodInvocation MethodInvocation size MemberReference handle getConnections Literal 2 End ReturnStatement Literal false MethodDeclaration Modifier public BasicType boolean isANode FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Node MethodDeclaration Modifier public BasicType boolean isANodeInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType NodeInstance MethodDeclaration Modifier public BasicType boolean isAOperation FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation MethodDeclaration Modifier public BasicType boolean isAObject FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object MethodDeclaration Modifier public BasicType boolean isAParameter FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter MethodDeclaration Modifier public BasicType boolean isAPartition FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Partition MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAPermission FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Permission MethodDeclaration Modifier public BasicType boolean isAPackageImport FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Permission MethodDeclaration Modifier public BasicType boolean isAPackage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlPackage MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAPrimitive FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Primitive MethodDeclaration Modifier public BasicType boolean isAPrimitiveType FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Primitive MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAProgrammingLanguageDataType FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ProgrammingLanguageDataType MethodDeclaration Modifier public BasicType boolean isAPseudostate FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Pseudostate MethodDeclaration Modifier public BasicType boolean isAPseudostateKind FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType PseudostateKind MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getPseudostateKind FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Pseudostate BlockStatement TryStatement ReturnStatement Cast ReferenceType Pseudostate MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getKind FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Pseudostate BlockStatement ReturnStatement Cast ReferenceType Pseudostate MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getReceiver FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BlockStatement ReturnStatement Cast ReferenceType Stimulus MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getLink FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkEnd BlockStatement ReturnStatement Cast ReferenceType LinkEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public BasicType boolean equalsPseudostateKind FormalParameter ReferenceType Object ps1 FormalParameter ReferenceType Object ps2 TryStatement IfStatement MethodInvocation MemberReference ps1 isAPseudostateKind BlockStatement ReturnStatement Cast ReferenceType PseudostateKind MemberReference ps1 End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference ps1 illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isAReception FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception MethodDeclaration Modifier public BasicType boolean isAReturnAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ReturnAction MethodDeclaration Modifier public BasicType boolean isARelationship FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Relationship MethodDeclaration Modifier public BasicType boolean isASendAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SendAction MethodDeclaration Modifier public BasicType boolean isASignal FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal MethodDeclaration Modifier public BasicType boolean isASignalEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SignalEvent MethodDeclaration Modifier public BasicType boolean isASimpleState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SimpleState MethodDeclaration Modifier public BasicType boolean isAStateMachine FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType StateMachine MethodDeclaration Modifier public BasicType boolean isAStimulus FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Stimulus MethodDeclaration Modifier public BasicType boolean isAStateVertex FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType StateVertex MethodDeclaration Modifier public BasicType boolean isAStereotype FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype MethodDeclaration Modifier public BasicType boolean isAStructuralFeature FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature MethodDeclaration Modifier public BasicType boolean isAState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType State MethodDeclaration Modifier public BasicType boolean isAStubState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType StubState MethodDeclaration Modifier public BasicType boolean isASubmachineState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SubmachineState MethodDeclaration Modifier public BasicType boolean isASubsystem FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Subsystem MethodDeclaration Modifier public BasicType boolean isASubsystemInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SubsystemInstance MethodDeclaration Modifier public BasicType boolean isASynchState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SynchState MethodDeclaration Modifier public BasicType boolean isATaggedValue FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue MethodDeclaration Modifier public BasicType boolean isATemplateArgument FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateArgument MethodDeclaration Modifier public BasicType boolean isATemplateParameter FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter MethodDeclaration Modifier public BasicType boolean isATransition FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition MethodDeclaration Modifier public BasicType boolean isATimeEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeEvent MethodDeclaration Modifier public BasicType boolean isAUMLElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType Element BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BinaryOperation instanceof MemberReference handle ReferenceType Expression BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity BinaryOperation instanceof MemberReference handle ReferenceType MultiplicityRange BinaryOperation instanceof MemberReference handle ReferenceType TemplateArgument BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter MethodDeclaration Modifier public BasicType boolean isAUninterpretedAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UninterpretedAction MethodDeclaration Modifier public BasicType boolean isAUsage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Usage MethodDeclaration Modifier public BasicType boolean isAUseCase FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isAUseCaseInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCaseInstance MethodDeclaration Modifier public BasicType boolean isAVisibilityKind FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType VisibilityKind MethodDeclaration Modifier public BasicType boolean isActive FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlClass BlockStatement ReturnStatement Cast ReferenceType UmlClass MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isChangeable FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement LocalVariableDeclaration ReferenceType ChangeableKind VariableDeclarator changeability Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement MethodInvocation ChangeableKindEnum.CK_CHANGEABLE MemberReference changeability equals End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType ChangeableKind VariableDeclarator changeability Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement MethodInvocation ChangeableKindEnum.CK_CHANGEABLE MemberReference changeability equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isClassifierScope FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Attribute BlockStatement LocalVariableDeclaration ReferenceType Attribute VariableDeclarator a Cast ReferenceType Attribute MemberReference handle ReturnStatement MethodInvocation ScopeKindEnum.SK_CLASSIFIER MethodInvocation a getOwnerScope equals End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement LocalVariableDeclaration ReferenceType Feature VariableDeclarator f Cast ReferenceType Feature MemberReference handle ReturnStatement MethodInvocation ScopeKindEnum.SK_CLASSIFIER MethodInvocation f getOwnerScope equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isConcurrent FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CompositeState BlockStatement ReturnStatement Cast ReferenceType CompositeState MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isAConcurrentRegion FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType CompositeState BinaryOperation != MethodInvocation MemberReference handle getContainer Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getContainer isConcurrent End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal false MethodDeclaration Modifier public BasicType boolean isConstructor FormalParameter ReferenceType Object handle TryStatement LocalVariableDeclaration ReferenceType Operation VariableDeclarator operation Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Method BlockStatement StatementExpression Assignment MemberReference operation Cast ReferenceType Method MemberReference handle = IfStatement BinaryOperation == MemberReference operation Literal null BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression Assignment MemberReference operation Cast ReferenceType Operation MemberReference handle = BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean End End LocalVariableDeclaration ReferenceType Object VariableDeclarator stereo Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation MethodInvocation iterator MemberReference operation getStereotypes WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference stereo MethodInvocation iter next = IfStatement MethodInvocation modelImpl MethodInvocation MemberReference stereo Literal ""create"" Literal ""BehavioralFeature"" isStereotypeInh getExtensionMechanismsHelper BlockStatement ReturnStatement Literal true End End ReturnStatement Literal false CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isFrozen FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ChangeableKind BlockStatement LocalVariableDeclaration ReferenceType ChangeableKind VariableDeclarator ck Cast ReferenceType ChangeableKind MemberReference handle ReturnStatement MethodInvocation ChangeableKindEnum.CK_FROZEN MemberReference ck equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isComposite FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation AggregationKindEnum.AK_COMPOSITE Cast ReferenceType AssociationEnd MemberReference handle equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isAggregate FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation AggregationKindEnum.AK_AGGREGATE Cast ReferenceType AssociationEnd MemberReference handle equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isInitialized FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Attribute BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator init Cast ReferenceType Attribute MemberReference handle IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference init Literal null BinaryOperation != MethodInvocation init getBody Literal null BinaryOperation > MethodInvocation init MethodInvocation trim MethodInvocation length getBody Literal 0 BlockStatement ReturnStatement Literal true End ReturnStatement Literal false End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" BasicType boolean isInstanceScope FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement LocalVariableDeclaration ReferenceType Feature VariableDeclarator a Cast ReferenceType Feature MemberReference handle ReturnStatement MethodInvocation ScopeKindEnum.SK_INSTANCE MethodInvocation a getOwnerScope equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isInternal FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation MemberReference handle getState LocalVariableDeclaration ReferenceType Object VariableDeclarator end0 MethodInvocation MemberReference handle getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator end1 MethodInvocation MemberReference handle getTarget IfStatement BinaryOperation != MemberReference end0 Literal null BlockStatement ReturnStatement BinaryOperation && BinaryOperation == MemberReference state MemberReference end0 BinaryOperation == MemberReference state MemberReference end1 End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean End MethodDeclaration Modifier public BasicType boolean isRoot FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean End MethodDeclaration Modifier public BasicType boolean isSpecification FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement ReturnStatement Cast ReferenceType ElementImport MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isNavigable FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isPrimaryObject FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c Cast ReferenceType ModelElement MemberReference handle ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MethodInvocation i next IfStatement MethodInvocation GENERATED_TAG MethodInvocation tv MethodInvocation getTagType getType equals BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isPackage FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator element Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation VisibilityKindEnum.VK_PACKAGE MethodInvocation element getVisibility equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public BasicType boolean isPrivate FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation VisibilityKindEnum.VK_PRIVATE MethodInvocation elem getVisibility equals End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isPublic FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation VisibilityKindEnum.VK_PUBLIC MethodInvocation elem getVisibility equals End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isQuery FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isProtected FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation VisibilityKindEnum.VK_PROTECTED MethodInvocation elem getVisibility equals End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isRealize FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle MemberReference CoreFactory REALIZE_STEREOTYPE isStereotype MethodDeclaration Modifier public BasicType boolean isReturn FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle hasReturnParameterDirectionKind MethodDeclaration Modifier public BasicType boolean isSingleton FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal ""singleton"" isStereotype MethodDeclaration Modifier public BasicType boolean isStereotype FormalParameter ReferenceType Object handle FormalParameter ReferenceType String stereotypeName TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes Cast ReferenceType ModelElement MemberReference handle LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation stereotypes iterator LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference stereotype Cast ReferenceType Stereotype MethodInvocation it next = IfStatement MethodInvocation stereotypeName MethodInvocation stereotype getName equals BlockStatement ReturnStatement Literal true End End ReturnStatement Literal false End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isATerminateAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TerminateAction MethodDeclaration Modifier public BasicType boolean isTop FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isACompositeState BlockStatement ReturnStatement BinaryOperation != Cast ReferenceType CompositeState MemberReference handle Literal null End ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isType FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal ""type"" isStereotype MethodDeclaration Modifier public BasicType boolean isUtility FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal ""utility"" isStereotype MethodDeclaration Modifier public ReferenceType Object getAssociation FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Link BlockStatement ReturnStatement Cast ReferenceType Link MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getAssociationEnd FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object assoc TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference handle LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference classifier getAssociationEnds WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MethodInvocation it next IfStatement Cast ReferenceType UmlAssociation MemberReference assoc BlockStatement ReturnStatement MemberReference end End End ReturnStatement Literal null End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""handle: "" MemberReference handle Literal "",assoc: "" MemberReference assoc CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getAssociationEnds FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getAParticipantAssociation MethodInvocation Cast ReferenceType Classifier MemberReference handle getAssociation getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getAssociationRoles FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getABaseAssociationRole MethodInvocation Cast ReferenceType UmlAssociation MemberReference handle getAssociationRole getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType List getAttributes FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation MemberReference handle getStructuralFeatures End ReturnStatement MethodInvocation MemberReference handle illegalArgumentList CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getBaseClasses FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAStereotype BlockStatement ReturnStatement Cast ReferenceType Stereotype MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getBase FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole BlockStatement ReturnStatement Cast ReferenceType AssociationEndRole MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole BlockStatement ReturnStatement Cast ReferenceType AssociationRole MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Include BlockStatement ReturnStatement Cast ReferenceType Include MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement Cast ReferenceType ClassifierRole MemberReference handle End End End End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getBases FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement Cast ReferenceType ClassifierRole MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getBehaviors FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getABehaviorContext MethodInvocation Cast ReferenceType ModelElement MemberReference handle getBehavior getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getBehavioralFeature FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getBody FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Comment BlockStatement ReturnStatement Cast ReferenceType Comment MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Constraint BlockStatement ReturnStatement Cast ReferenceType Constraint MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Expression BlockStatement ReturnStatement Cast ReferenceType Expression MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Method BlockStatement ReturnStatement Cast ReferenceType Method MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType int getBound FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SynchState BlockStatement ReturnStatement Cast ReferenceType SynchState MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentInt CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getChangeability FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement ReturnStatement Cast ReferenceType StructuralFeature MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isReadOnly FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType ChangeableKind VariableDeclarator ck TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Assignment MemberReference ck Cast ReferenceType StructuralFeature MemberReference handle = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Assignment MemberReference ck Cast ReferenceType AssociationEnd MemberReference handle = BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean End End ReturnStatement MethodInvocation ChangeableKindEnum.CK_FROZEN MemberReference ck equals CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getChild FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle getSpecific MethodDeclaration Modifier public ReferenceType Object getSpecific FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ReturnStatement Cast ReferenceType Generalization MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object handle TryStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getChildren getCoreHelper CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getClassifierRoles FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAClassifierRoleAvailableFeature MethodInvocation Cast ReferenceType Feature MemberReference handle getClassifierRole getUmlPackage End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAClassifierRoleBase MethodInvocation Cast ReferenceType Classifier MemberReference handle getClassifierRole getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getClassifier FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getClassifiers FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance BlockStatement ReturnStatement Cast ReferenceType Instance MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getClassifiersInState FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getActivityGraphs MethodInvocation getATypeClassifierInState MethodInvocation Cast ReferenceType Classifier MemberReference handle getClassifierInState getUmlPackage End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getActivityGraphs MethodInvocation getAClassifierInStateInState MethodInvocation Cast ReferenceType State MemberReference handle getClassifierInState getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getClients FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isADependency BlockStatement ReturnStatement Cast ReferenceType Dependency MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getClientDependencies FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getAClientClientDependency MethodInvocation Cast ReferenceType ModelElement MemberReference handle getClientDependency getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Expected a ModelElement. Got a "" MethodInvocation handle MethodInvocation getName getClass MethodDeclaration Modifier public ReferenceType Object getCondition FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getConcurrency FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getConnections FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement Cast ReferenceType UmlAssociation MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Link BlockStatement ReturnStatement Cast ReferenceType Link MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getEffect FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getElementResidences FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getAResidentElementResidence MethodInvocation Cast ReferenceType ModelElement MemberReference handle getElementResidence getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getElementImports2 FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getModelManagement MethodInvocation getAImportedElementElementImport MethodInvocation Cast ReferenceType ModelElement MemberReference handle getElementImport getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getElementImports FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlPackage BlockStatement ReturnStatement Cast ReferenceType UmlPackage MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getEntry FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement TryStatement ReturnStatement Cast ReferenceType State MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getEnumeration FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType EnumerationLiteral BlockStatement ReturnStatement Cast ReferenceType EnumerationLiteral MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getExit FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement ReturnStatement Cast ReferenceType State MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getExpression FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Guard BlockStatement ReturnStatement Cast ReferenceType Guard MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ChangeEvent BlockStatement ReturnStatement Cast ReferenceType ChangeEvent MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeEvent BlockStatement ReturnStatement Cast ReferenceType TimeEvent MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Argument BlockStatement ReturnStatement Cast ReferenceType Argument MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getExtendedElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection End ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getAStereotypeExtendedElement MethodInvocation Cast ReferenceType Stereotype MemberReference handle getExtendedElement getUmlPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getExtends FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement ReturnStatement Cast ReferenceType UseCase MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ExtensionPoint BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getUseCases MethodInvocation getAExtensionPointExtend MethodInvocation Cast ReferenceType ExtensionPoint MemberReference handle getExtend getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getExtenders FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getUseCases MethodInvocation getABaseExtender MethodInvocation Cast ReferenceType UseCase MemberReference handle getExtender getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getExtension FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getExtensionPoint FormalParameter ReferenceType Object handle FormalParameter BasicType int index TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getExtensionPoints FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement ReturnStatement Cast ReferenceType UseCase MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Feature getFeatures FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement Cast ReferenceType Classifier MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public ReferenceType Object getGeneralization FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference parent ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference handle getGeneralizations WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MethodInvocation it next IfStatement BinaryOperation == MethodInvocation gen getParent MemberReference parent BlockStatement ReturnStatement MemberReference gen End End ReturnStatement Literal null End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getGeneralizations FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getGuard FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getIcon FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement ReturnStatement Cast ReferenceType Stereotype MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement getImportedElements FormalParameter ReferenceType Object pack IfStatement BinaryOperation instanceof MemberReference pack ReferenceType UmlPackage BlockStatement ReturnStatement MethodInvocation MemberReference pack illegalArgumentCollection End LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ElementImport VariableDeclarator imports Cast ReferenceType UmlPackage MemberReference pack ForStatement EnhancedForControl VariableDeclaration ReferenceType ElementImport VariableDeclarator ei MemberReference imports BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator element MethodInvocation ei getImportedElement StatementExpression MethodInvocation results MemberReference element add End ReturnStatement MemberReference results CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getImportedElement FormalParameter ReferenceType Object elementImport IfStatement BinaryOperation instanceof MemberReference elementImport ReferenceType ElementImport BlockStatement ReturnStatement MethodInvocation BinaryOperation + Literal ""This is not an ElementImport: "" MemberReference elementImport illegalArgumentCollection End TryStatement ReturnStatement Cast ReferenceType ElementImport MemberReference elementImport CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getIncludes FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement ReturnStatement Cast ReferenceType UseCase MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getIncluders FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getUseCases MethodInvocation getAIncluderAddition MethodInvocation Cast ReferenceType UseCase MemberReference handle getIncluder getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getIncomings FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation || MethodInvocation MemberReference handle isAGuard MethodInvocation MemberReference handle isAAction BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getTransition getIncomings End IfStatement MethodInvocation MemberReference handle isAEvent BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator trans MethodInvocation MethodInvocation iterator MemberReference handle getTransitions LocalVariableDeclaration ReferenceType Collection VariableDeclarator incomings ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation trans hasNext BlockStatement StatementExpression MethodInvocation incomings MethodInvocation MethodInvocation trans next getIncomings addAll End ReturnStatement MemberReference incomings End IfStatement MethodInvocation MemberReference handle isAStateVertex BlockStatement ReturnStatement Cast ReferenceType StateVertex MemberReference handle End IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getInitialValue FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Attribute BlockStatement ReturnStatement Cast ReferenceType Attribute MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getInstance FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink BlockStatement ReturnStatement Cast ReferenceType AttributeLink MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkEnd BlockStatement ReturnStatement Cast ReferenceType LinkEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getInstances FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAInstanceClassifier MethodInvocation Cast ReferenceType Classifier MemberReference handle getInstance getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getInStates FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierInState BlockStatement ReturnStatement Cast ReferenceType ClassifierInState MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getInteraction FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getInteractions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getInternalTransitions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement ReturnStatement Cast ReferenceType State MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getMessages FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAInteraction BlockStatement ReturnStatement Cast ReferenceType Interaction MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole BlockStatement ReturnStatement Cast ReferenceType AssociationRole MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAActionMessage MethodInvocation Cast ReferenceType Action MemberReference handle getMessage getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getSuccessors FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAPredecessorSuccessor MethodInvocation Cast ReferenceType Message MemberReference handle getSuccessor getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getActivatedMessages FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAMessageActivator MethodInvocation Cast ReferenceType Message MemberReference handle getMessage getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getReceivedMessages FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAReceiverMessage MethodInvocation Cast ReferenceType ClassifierRole MemberReference handle getMessage getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getSentMessages FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAMessageSender MethodInvocation Cast ReferenceType ClassifierRole MemberReference handle getMessage getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getModel FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAModel BlockStatement ReturnStatement MemberReference handle End IfStatement MethodInvocation ! MemberReference handle isAUMLElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject End IfStatement BinaryOperation == MethodInvocation MemberReference handle getModelElementContainer Literal null BlockStatement ReturnStatement MemberReference handle BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getModelElementContainer getModel End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getRootElements LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage VariableDeclarator pkg MethodInvocation modelImpl getUmlPackage ForStatement EnhancedForControl VariableDeclaration ReferenceType RefObject VariableDeclarator obj Cast ReferenceType Collection TypeArgument ReferenceType RefObject MethodInvocation pkg MethodInvocation getElement MethodInvocation refAllOfType getCore BlockStatement IfStatement BinaryOperation == MethodInvocation obj refImmediateComposite Literal null BlockStatement StatementExpression MethodInvocation elements MemberReference obj add End End ReturnStatement MemberReference elements MethodDeclaration Modifier public ReferenceType Object getModelElement FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement ReturnStatement Cast ReferenceType ElementImport MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement Cast ReferenceType TaggedValue MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateArgument BlockStatement ReturnStatement Cast ReferenceType TemplateArgument MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getMultiplicity FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement LocalVariableDeclaration ReferenceType StructuralFeature VariableDeclarator sf Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement MethodInvocation sf getMultiplicity End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition BlockStatement LocalVariableDeclaration ReferenceType TagDefinition VariableDeclarator td Cast ReferenceType TagDefinition MemberReference handle ReturnStatement MethodInvocation td getMultiplicity End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator cr Cast ReferenceType ClassifierRole MemberReference handle ReturnStatement MethodInvocation cr getMultiplicity End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement MethodInvocation ae getMultiplicity End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Iterator getRanges FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c Cast ReferenceType Multiplicity MemberReference handle ReturnStatement MethodInvocation c iterator End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle MethodDeclaration Modifier public ReferenceType Collection getComments FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getAnnotatedElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Comment BlockStatement ReturnStatement Cast ReferenceType Comment MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getCommunicationConnection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getCommunicationLink FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BlockStatement ReturnStatement Cast ReferenceType Stimulus MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getCollaborations FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getARepresentedOperationCollaboration MethodInvocation Cast ReferenceType Operation MemberReference handle getCollaboration getUmlPackage End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getARepresentedClassifierCollaboration MethodInvocation Cast ReferenceType Classifier MemberReference handle getCollaboration getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getComponentInstance FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance BlockStatement ReturnStatement Cast ReferenceType Instance MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getConstrainingElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType List getConstrainedElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Constraint BlockStatement ReturnStatement Cast ReferenceType Constraint MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public ReferenceType Collection getConstraints FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getModelElementContainer FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType RefObject BlockStatement ReturnStatement Cast ReferenceType RefObject MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType List getModelElementContents FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType List VariableDeclarator results MethodInvocation MemberReference handle Literal true getModelElementAssociated ReturnStatement MemberReference results MethodDeclaration Modifier public ReferenceType List getModelElementAssociated FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal false getModelElementAssociated MethodDeclaration /**
     * Return all model elements associated with the given model element,
     * optionally excluding associations which are not composite.<p>
     *
     * NOTE: The current implementation only follows associations which
     * are navigable FROM the model element, so it's possible that there
     * are additional associated elements which would be too resource
     * intensive to search for.<p>
     *
     * Implementation queries the metamodel to find all attributes/references
     * for the metatype of the given object and uses that set of names
     * to query the object using the JMI reflective interface.
     *
     * @return A List with {@link RefBaseObject}s.
     */ Modifier private ReferenceType List getModelElementAssociated FormalParameter ReferenceType Object handle FormalParameter BasicType boolean contentsOnly LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType RefBaseObject VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType RefBaseObject IfStatement BinaryOperation instanceof MemberReference handle ReferenceType RefFeatured BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Element doesn't appear to be a MOF element :"" MemberReference handle End TryStatement LocalVariableDeclaration ReferenceType RefFeatured VariableDeclarator rf Cast ReferenceType RefFeatured MemberReference handle LocalVariableDeclaration ReferenceType RefObject VariableDeclarator metaobject MethodInvocation rf refMetaObject IfStatement BinaryOperation instanceof MemberReference metaobject ReferenceType MofClass BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Element doesn't appear to be a MOF element :"" MemberReference handle End LocalVariableDeclaration ReferenceType MofClass VariableDeclarator metaclass Cast ReferenceType MofClass MemberReference metaobject LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MofClass VariableDeclarator types ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MofClass MethodInvocation metaclass allSupertypes StatementExpression MethodInvocation types MemberReference metaclass add ForStatement EnhancedForControl VariableDeclaration ReferenceType MofClass VariableDeclarator s MemberReference types BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator contentElement MethodInvocation s getContents BlockStatement StatementExpression MethodInvocation Cast ReferenceType RefFeatured MemberReference handle MemberReference contentElement MemberReference results MemberReference contentsOnly getReferenceOrAttribute End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference results MethodDeclaration /**
     * Helper function to add the value(s) of an Attribute or Reference to the
     * given collection.
     *
     * @param returns A Collection that {@link RefBaseObject}s are added to.
     */ Modifier private getReferenceOrAttribute FormalParameter ReferenceType RefFeatured parent FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType RefBaseObject returns FormalParameter BasicType boolean contentsOnly TryStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference element ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType Attribute BinaryOperation instanceof MemberReference element ReferenceType Reference BlockStatement ReturnStatement End IfStatement BinaryOperation instanceof MemberReference element ReferenceType Reference BlockStatement LocalVariableDeclaration ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType AggregationKind VariableDeclarator ak Cast ReferenceType Reference MemberReference element IfStatement BinaryOperation && MemberReference contentsOnly BinaryOperation != MemberReference ak MemberReference MOF_COMPOSITE BlockStatement ReturnStatement End End LocalVariableDeclaration ReferenceType String VariableDeclarator valueName Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType ModelElement MemberReference element LocalVariableDeclaration ReferenceType Object VariableDeclarator refends MethodInvocation parent MemberReference valueName refGetValue IfStatement BinaryOperation == MemberReference refends Literal null BlockStatement ReturnStatement End IfStatement BinaryOperation instanceof MemberReference refends ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c Cast ReferenceType Collection MemberReference refends IfStatement MethodInvocation ! c isEmpty BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation c iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType RefBaseObject BlockStatement StatementExpression MethodInvocation returns Cast ReferenceType RefBaseObject MemberReference o add End End End BlockStatement IfStatement BinaryOperation instanceof MemberReference refends ReferenceType RefBaseObject BlockStatement StatementExpression MethodInvocation returns Cast ReferenceType RefBaseObject MemberReference refends add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getContainer FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation || MethodInvocation MemberReference handle isAGuard MethodInvocation MemberReference handle isAAction BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getTransition getContainer End IfStatement MethodInvocation MemberReference handle isAEvent BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator container LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference handle getTransitions WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference container MethodInvocation MethodInvocation it next getContainer = IfStatement BinaryOperation != MemberReference container Literal null BlockStatement ReturnStatement MemberReference container End End End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StateVertex BlockStatement ReturnStatement Cast ReferenceType StateVertex MemberReference handle End IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BlockStatement ReturnStatement Cast ReferenceType ElementResidence MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getContents FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Partition BlockStatement ReturnStatement Cast ReferenceType Partition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getContext FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAStateMachine BlockStatement ReturnStatement Cast ReferenceType StateMachine MemberReference handle End IfStatement MethodInvocation MemberReference handle isAInteraction BlockStatement ReturnStatement Cast ReferenceType Interaction MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getContexts FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAContextRaisedSignal MethodInvocation Cast ReferenceType Signal MemberReference handle getContext getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getCreateActions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getACreateActionInstantiation MethodInvocation Cast ReferenceType Classifier MemberReference handle getCreateAction getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getDefaultValue FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getDeferrableEvents FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement ReturnStatement Cast ReferenceType State MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getDeploymentLocations FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Component BlockStatement ReturnStatement Cast ReferenceType Component MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getDeployedComponents FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Node BlockStatement ReturnStatement Cast ReferenceType Node MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getDiscriminator FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ReturnStatement Cast ReferenceType Generalization MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Expected a Generalization. Got a "" MethodInvocation handle MethodInvocation getName getClass MethodDeclaration Modifier public ReferenceType Object getDispatchAction FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BlockStatement ReturnStatement Cast ReferenceType Stimulus MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getDoActivity FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement ReturnStatement Cast ReferenceType State MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getLinks FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAAssociationLink MethodInvocation Cast ReferenceType UmlAssociation MemberReference handle getLink getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getLinkEnds FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAAssociationEndLinkEnd MethodInvocation Cast ReferenceType AssociationEnd MemberReference handle getLinkEnd getUmlPackage End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance BlockStatement ReturnStatement Cast ReferenceType Instance MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType String getLocation FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ExtensionPoint BlockStatement ReturnStatement Cast ReferenceType ExtensionPoint MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentString MethodDeclaration Modifier public ReferenceType Collection getMethods FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getASpecificationMethod MethodInvocation Cast ReferenceType Operation MemberReference handle getMethod getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getNamespace FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject End TryStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getNodeInstance FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ComponentInstance BlockStatement ReturnStatement Cast ReferenceType ComponentInstance MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getObjectFlowStates FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getActivityGraphs MethodInvocation getATypeObjectFlowState MethodInvocation Cast ReferenceType Classifier MemberReference handle getObjectFlowState getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getOperation FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction BlockStatement ReturnStatement Cast ReferenceType CallAction MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallEvent BlockStatement ReturnStatement Cast ReferenceType CallEvent MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getOccurrences FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getAOccurrenceOperation MethodInvocation Cast ReferenceType Operation MemberReference handle getOccurrence getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Operation getOperations FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentList End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operation VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operation TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature MethodInvocation MemberReference handle getFeatures BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Operation BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Operation MemberReference feature add End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Feature getOperationsAndReceptions FormalParameter ReferenceType Object classifier LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator opsAndReceps ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator f MethodInvocation MemberReference classifier getFeatures BlockStatement IfStatement BinaryOperation || MethodInvocation MemberReference f isAOperation MethodInvocation MemberReference f isAReception BlockStatement StatementExpression MethodInvocation opsAndReceps MemberReference f add End End ReturnStatement MemberReference opsAndReceps MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getOppositeEnd FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle getNextEnd MethodDeclaration Modifier public ReferenceType Object getNextEnd FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator assocEnds Cast ReferenceType AssociationEnd MemberReference handle LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation assocEnds MemberReference handle indexOf IfStatement BinaryOperation || BinaryOperation == MemberReference index Literal - 1 BinaryOperation < MethodInvocation assocEnds size Literal 2 BlockStatement ReturnStatement Literal null End IfStatement BinaryOperation == MemberReference index BinaryOperation - MethodInvocation assocEnds size Literal 1 BlockStatement ReturnStatement MethodInvocation assocEnds Literal 0 get BlockStatement ReturnStatement MethodInvocation assocEnds BinaryOperation + MemberReference index Literal 1 get End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getOrdering FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getOutgoings FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation || MethodInvocation MemberReference handle isAGuard MethodInvocation MemberReference handle isAAction BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getTransition getOutgoings End IfStatement MethodInvocation MemberReference handle isAEvent BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator trans MethodInvocation MethodInvocation iterator MemberReference handle getTransitions LocalVariableDeclaration ReferenceType Collection VariableDeclarator outgoings ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation trans hasNext BlockStatement StatementExpression MethodInvocation outgoings MethodInvocation MethodInvocation trans next getOutgoings addAll End ReturnStatement MemberReference outgoings End IfStatement MethodInvocation MemberReference handle isAStateVertex BlockStatement ReturnStatement Cast ReferenceType StateVertex MemberReference handle End IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getOtherAssociationEnds FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator a Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation == MemberReference a Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End LocalVariableDeclaration ReferenceType Collection VariableDeclarator allEnds MethodInvocation a getConnection IfStatement BinaryOperation == MemberReference allEnds Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End StatementExpression Assignment MemberReference allEnds ClassCreator ReferenceType ArrayList MemberReference allEnds = StatementExpression MethodInvocation allEnds MemberReference handle remove ReturnStatement MemberReference allEnds End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getOtherLinkEnds FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkEnd BlockStatement LocalVariableDeclaration ReferenceType Link VariableDeclarator link Cast ReferenceType LinkEnd MemberReference handle IfStatement BinaryOperation == MemberReference link Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End LocalVariableDeclaration ReferenceType Collection VariableDeclarator allEnds MethodInvocation link getConnection IfStatement BinaryOperation == MemberReference allEnds Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST End StatementExpression Assignment MemberReference allEnds ClassCreator ReferenceType ArrayList MemberReference allEnds = StatementExpression MethodInvocation allEnds MemberReference handle remove ReturnStatement MemberReference allEnds End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getOwnedElements FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection End TryStatement ReturnStatement Cast ReferenceType Namespace MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getOwnerScope FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement Cast ReferenceType Feature MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public BasicType boolean isStatic FormalParameter ReferenceType Object handle TryStatement ReturnStatement MethodInvocation ScopeKindEnum.SK_CLASSIFIER Cast ReferenceType Feature MemberReference handle equals CatchClause CatchClauseParameter ClassCastException e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MemberReference e CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getPowertype FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ReturnStatement Cast ReferenceType Generalization MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getPowertypeRanges FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement Cast ReferenceType Classifier MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getPredecessors FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType List getQualifiers FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public BasicType boolean hasReturnParameterDirectionKind FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator parameter Cast ReferenceType Parameter MemberReference handle ReturnStatement MethodInvocation ParameterDirectionKindEnum.PDK_RETURN MethodInvocation parameter getKind equals End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean MethodDeclaration Modifier public ReferenceType Object getPackage FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement ReturnStatement Cast ReferenceType ElementImport MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int n LocalVariableDeclaration ReferenceType Collection VariableDeclarator collection MethodInvocation MemberReference handle getParameters IfStatement BinaryOperation instanceof MemberReference collection ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference collection End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getParameter FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter BlockStatement ReturnStatement Cast ReferenceType TemplateParameter MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getParameters FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement ReturnStatement MethodInvocation MemberReference handle getParametersList End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BlockStatement ReturnStatement Cast ReferenceType ObjectFlowState MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getATypedParameterType MethodInvocation Cast ReferenceType Classifier MemberReference handle getTypedParameter getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType List getParametersList FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement ReturnStatement Cast ReferenceType Event MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getParent FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle getGeneral MethodDeclaration Modifier public ReferenceType Object getGeneral FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ReturnStatement Cast ReferenceType Generalization MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getRaisedSignals FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAContextRaisedSignal MethodInvocation Cast ReferenceType BehavioralFeature MemberReference handle getRaisedSignal getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getReceptions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getASignalReception MethodInvocation Cast ReferenceType Signal MemberReference handle getReception getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getRecurrence FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement Cast ReferenceType Action MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getRepresentedClassifier FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getRepresentedOperation FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getScript FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement Cast ReferenceType Action MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getSender FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stimulus BlockStatement ReturnStatement Cast ReferenceType Stimulus MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getSignal FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SendAction BlockStatement ReturnStatement Cast ReferenceType SendAction MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SignalEvent BlockStatement ReturnStatement Cast ReferenceType SignalEvent MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getResident FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BlockStatement ReturnStatement Cast ReferenceType ElementResidence MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getResidentElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Component BlockStatement ReturnStatement Cast ReferenceType Component MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getResidents FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isANodeInstance BlockStatement ReturnStatement Cast ReferenceType NodeInstance MemberReference handle End IfStatement MethodInvocation MemberReference handle isAComponentInstance BlockStatement ReturnStatement Cast ReferenceType ComponentInstance MemberReference handle End IfStatement MethodInvocation MemberReference handle isAComponent BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator residents ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Component MemberReference handle MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation residents Cast ReferenceType ElementResidence MethodInvocation it next add End ReturnStatement MemberReference residents End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getSources FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Flow BlockStatement ReturnStatement Cast ReferenceType Flow MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getSourceFlows FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getSpecializations FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection End TryStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getAParentSpecialization MethodInvocation Cast ReferenceType GeneralizableElement MemberReference handle getSpecialization getUmlPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getStateMachine FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement ReturnStatement Cast ReferenceType State MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getState FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getAStateInternalTransition MethodInvocation Cast ReferenceType Transition MemberReference handle getState getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getStates FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getAStateDeferrableEvent MethodInvocation Cast ReferenceType Event MemberReference handle getState getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getStereotypes FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection End TryStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getStimuli FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isALink BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAStimulusCommunicationLink MethodInvocation Cast ReferenceType Link MemberReference handle getStimulus getUmlPackage End IfStatement MethodInvocation MemberReference handle isAAction BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getADispatchActionStimulus MethodInvocation Cast ReferenceType Action MemberReference handle getStimulus getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getReceivedStimuli FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAReceiverStimulus MethodInvocation Cast ReferenceType Instance MemberReference handle getStimulus getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getSentStimuli FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Instance BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCommonBehavior MethodInvocation getAStimulusSender MethodInvocation Cast ReferenceType Instance MemberReference handle getStimulus getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getSubvertices FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isACompositeState BlockStatement ReturnStatement Cast ReferenceType CompositeState MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getSubmachine FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SubmachineState BlockStatement ReturnStatement Cast ReferenceType SubmachineState MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getSubmachineStates FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StateMachine BlockStatement ReturnStatement Cast ReferenceType StateMachine MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getSupplierDependencies FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getASupplierSupplierDependency MethodInvocation Cast ReferenceType ModelElement MemberReference handle getSupplierDependency getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getTop FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StateMachine BlockStatement ReturnStatement Cast ReferenceType StateMachine MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getTransition FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Guard BlockStatement ReturnStatement Cast ReferenceType Guard MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getATransitionEffect MethodInvocation Cast ReferenceType Action MemberReference handle getTransition getUmlPackage End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getTrigger FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement ReturnStatement Cast ReferenceType StructuralFeature MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BlockStatement ReturnStatement Cast ReferenceType ObjectFlowState MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition BlockStatement ReturnStatement Cast ReferenceType TagDefinition MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierInState BlockStatement ReturnStatement Cast ReferenceType ClassifierInState MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement Cast ReferenceType TaggedValue MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getTypedValues FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getATypeTypedValue MethodInvocation Cast ReferenceType TagDefinition MemberReference handle getTypedValue getUmlPackage End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getTarget FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getTargetScope FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement ReturnStatement Cast ReferenceType StructuralFeature MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getTargetFlows FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType int getUpper FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper Literal 0 LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation != MethodInvocation end getMultiplicity Literal null BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation MethodInvocation end getMultiplicity getUpper = End ReturnStatement MemberReference upper End IfStatement MethodInvocation MemberReference handle isAMultiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator up Cast ReferenceType Multiplicity MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator ranges ClassCreator ReferenceType ArrayList MethodInvocation up getRange ReturnStatement MethodInvocation MethodInvocation ranges BinaryOperation - MethodInvocation ranges size Literal 1 get getUpper End IfStatement MethodInvocation MemberReference handle isAMultiplicityRange BlockStatement LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator up Cast ReferenceType MultiplicityRange MemberReference handle ReturnStatement MethodInvocation up getUpper End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e StatementExpression MethodInvocation MemberReference handle illegalArgument ReturnStatement Literal 0 MethodDeclaration Modifier public ReferenceType Object getUseCase FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ExtensionPoint BlockStatement ReturnStatement Cast ReferenceType ExtensionPoint MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public BasicType int getLower FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lower Literal 0 LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation != MethodInvocation end getMultiplicity Literal null BlockStatement StatementExpression Assignment MemberReference lower MethodInvocation MethodInvocation end getMultiplicity getLower = End ReturnStatement MemberReference lower End IfStatement MethodInvocation MemberReference handle isAMultiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator low Cast ReferenceType Multiplicity MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator ranges ClassCreator ReferenceType ArrayList MethodInvocation low getRange ReturnStatement MethodInvocation MethodInvocation ranges Literal 0 get getLower End IfStatement MethodInvocation MemberReference handle isAMultiplicityRange BlockStatement LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator low Cast ReferenceType MultiplicityRange MemberReference handle ReturnStatement MethodInvocation low getLower End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e StatementExpression MethodInvocation MemberReference handle illegalArgument ReturnStatement Literal 0 MethodDeclaration Modifier public ReferenceType Collection getTransitions FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAStateMachine BlockStatement ReturnStatement Cast ReferenceType StateMachine MemberReference handle IfStatement MethodInvocation MemberReference handle isACompositeState BlockStatement ReturnStatement Cast ReferenceType CompositeState MemberReference handle IfStatement MethodInvocation MemberReference handle isAEvent BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getStateMachines MethodInvocation getATransitionTrigger MethodInvocation Cast ReferenceType Event MemberReference handle getTransition getUmlPackage End End End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType List getStructuralFeatures FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentList End LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Classifier VariableDeclarator mclassifier Cast ReferenceType Classifier MemberReference handle TryStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator features MethodInvocation mclassifier MethodInvocation iterator getFeature WhileStatement MethodInvocation features hasNext BlockStatement LocalVariableDeclaration ReferenceType Feature VariableDeclarator feature Cast ReferenceType Feature MethodInvocation features next IfStatement MethodInvocation MemberReference feature isAStructuralFeature BlockStatement StatementExpression MethodInvocation result MemberReference feature add End End ReturnStatement MemberReference result CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType String getSpecification FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentString MethodDeclaration Modifier public ReferenceType Collection getSpecifications FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getRealizedInterfaces getCoreHelper End ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Collection getSuppliers FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Dependency BlockStatement ReturnStatement Cast ReferenceType Dependency MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration /**
     * @see org.argouml.model.Facade#getAction(java.lang.Object)
     */ Modifier public ReferenceType Object getAction FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getCollaborations MethodInvocation getAActionMessage MethodInvocation Cast ReferenceType Message MemberReference handle getAction getUmlPackage End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Argument BlockStatement ReturnStatement Cast ReferenceType Argument MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType List getActions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BlockStatement ReturnStatement Cast ReferenceType ActionSequence MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public ReferenceType Object getActionSequence FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement Cast ReferenceType Action MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public ReferenceType Object getActivator FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getActivityGraph FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Partition BlockStatement ReturnStatement Cast ReferenceType Partition MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType List getActualArguments FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement Cast ReferenceType Action MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentList CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType Object getAddition FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Include BlockStatement ReturnStatement Cast ReferenceType Include MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getAggregation FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType String getAlias FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement ReturnStatement Cast ReferenceType ElementImport MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Must have an MDR element supplied. Received a "" MethodInvocation handle MethodInvocation getName getClass MethodDeclaration Modifier public ReferenceType Collection getAssociatedClasses FormalParameter ReferenceType Object handle TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference handle LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation MemberReference classifier getAssociationEnds LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation ends iterator LocalVariableDeclaration ReferenceType Set VariableDeclarator associations ClassCreator ReferenceType HashSet WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae Cast ReferenceType AssociationEnd MethodInvocation it next StatementExpression MethodInvocation associations MethodInvocation ae getAssociation add End LocalVariableDeclaration ReferenceType Collection VariableDeclarator otherEnds ClassCreator ReferenceType ArrayList StatementExpression Assignment MemberReference it MethodInvocation associations iterator = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation otherEnds Cast ReferenceType UmlAssociation MethodInvocation it next addAll End StatementExpression MethodInvocation otherEnds MemberReference ends removeAll StatementExpression Assignment MemberReference it MethodInvocation otherEnds iterator = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation col Cast ReferenceType AssociationEnd MethodInvocation it next add End ReturnStatement MemberReference col End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType OrderingKindEnum BlockStatement ReturnStatement MethodInvocation handle MethodInvocation Literal ""ok_"" Literal """" replaceAll toString End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallConcurrencyKindEnum BlockStatement ReturnStatement MethodInvocation handle MethodInvocation Literal ""cck_"" Literal """" replaceAll toString End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ChangeableKindEnum BlockStatement ReturnStatement MethodInvocation handle MethodInvocation Literal ""ck_"" Literal """" replaceAll toString End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType VisibilityKindEnum BlockStatement ReturnStatement MethodInvocation handle MethodInvocation Literal ""vk_"" Literal """" replaceAll toString End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AggregationKindEnum BlockStatement ReturnStatement MethodInvocation handle MethodInvocation Literal ""ak_"" Literal """" replaceAll toString End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ParameterDirectionKindEnum BlockStatement ReturnStatement MethodInvocation handle MethodInvocation Literal ""pdk_"" Literal """" replaceAll toString End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation me getName End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle multiplicityToString getDataTypesHelper End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Expression BlockStatement ReturnStatement Cast ReferenceType Expression MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BlockStatement ReturnStatement Literal """" End CatchClause CatchClauseParameter InvalidObjectException e LocalVariableDeclaration ReferenceType String VariableDeclarator uuid MethodInvocation MemberReference handle getUUID IfStatement BinaryOperation != MemberReference uuid Literal null BlockStatement ThrowStatement ClassCreator ReferenceType InvalidElementException BinaryOperation + Literal ""UUID: "" MemberReference uuid MemberReference e BlockStatement ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e End ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Must have an MDR element supplied. Received a "" MethodInvocation handle MethodInvocation getName getClass MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Attribute BinaryOperation != Cast ReferenceType Attribute MemberReference handle Literal null BlockStatement ReturnStatement Cast ReferenceType Attribute MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement Cast ReferenceType Feature MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition BlockStatement ReturnStatement Cast ReferenceType TagDefinition MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter BlockStatement ReturnStatement Cast ReferenceType TemplateParameter MemberReference handle End ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType String getTag FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement LocalVariableDeclaration ReferenceType TagDefinition VariableDeclarator td Cast ReferenceType TaggedValue MemberReference handle IfStatement BinaryOperation != MemberReference td Literal null BlockStatement ReturnStatement MethodInvocation td getName End ReturnStatement Literal null End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentString MethodDeclaration Modifier public ReferenceType Iterator getTaggedValues FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MethodInvocation iterator MemberReference handle getTaggedValuesCollection End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Expected a ModelElement. Got a "" MethodInvocation handle MethodInvocation getName getClass MethodDeclaration Modifier public ReferenceType Collection getTaggedValuesCollection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference handle LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation me MethodInvocation iterator getTaggedValue WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MethodInvocation i next IfStatement BinaryOperation && BinaryOperation != MethodInvocation tv getType Literal null MethodInvocation name MethodInvocation tv MethodInvocation getName getType equals BlockStatement ReturnStatement MemberReference tv End End ReturnStatement Literal null End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType String getTaggedValueValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator taggedValue MethodInvocation MemberReference handle MemberReference name getTaggedValue IfStatement BinaryOperation == MemberReference taggedValue Literal null BlockStatement ReturnStatement Literal """" End ReturnStatement MethodInvocation MemberReference taggedValue getValueOfTag CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public ReferenceType String getTagOfTag FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle getTag MethodDeclaration Modifier public ReferenceType Object getTagDefinition FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement Cast ReferenceType TaggedValue MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getTagDefinitions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement ReturnStatement Cast ReferenceType Stereotype MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Object getValue FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement MethodInvocation MemberReference handle getValueOfTag End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Argument BlockStatement ReturnStatement Cast ReferenceType Argument MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AttributeLink BlockStatement ReturnStatement Cast ReferenceType AttributeLink MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AggregationKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType AggregationKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType OrderingKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType OrderingKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ParameterDirectionKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType ParameterDirectionKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType VisibilityKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType VisibilityKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ScopeKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType ScopeKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ChangeableKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType ChangeableKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType PseudostateKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType PseudostateKind MemberReference handle valueOf End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallConcurrencyKind BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType CallConcurrencyKind MemberReference handle valueOf End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType String getValueOfTag FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MemberReference handle LocalVariableDeclaration ReferenceType Collection VariableDeclarator refValues MethodInvocation tv getReferenceValue LocalVariableDeclaration ReferenceType Collection VariableDeclarator values MethodInvocation tv getDataValue IfStatement BinaryOperation && MethodInvocation values isEmpty MethodInvocation refValues isEmpty BlockStatement ReturnStatement Literal """" End IfStatement BinaryOperation > BinaryOperation + MethodInvocation values size MethodInvocation refValues size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Don't know how to manage multiple values "" Literal ""for a TaggedValue, returning first value"" warn End LocalVariableDeclaration ReferenceType Object VariableDeclarator value IfStatement BinaryOperation > MethodInvocation refValues size Literal 0 BlockStatement StatementExpression Assignment MemberReference value MethodInvocation refValues MethodInvocation next iterator = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation values MethodInvocation next iterator = End IfStatement BinaryOperation instanceof MemberReference value ReferenceType String BlockStatement ReturnStatement Cast ReferenceType String MemberReference value IfStatement BinaryOperation instanceof MemberReference value ReferenceType EnumerationLiteral BlockStatement ReturnStatement Cast ReferenceType EnumerationLiteral MemberReference value BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Can't handled TaggedValue.dataValues which "" Literal "" aren't Strings.  Converting to String"" warn ReturnStatement MethodInvocation value toString End End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentString MethodDeclaration Modifier public ReferenceType Collection getReferenceValue FormalParameter ReferenceType Object taggedValue TryStatement IfStatement BinaryOperation instanceof MemberReference taggedValue ReferenceType TaggedValue BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MemberReference taggedValue ReturnStatement MethodInvocation tv getReferenceValue End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference taggedValue illegalArgumentCollection MethodDeclaration Modifier public ReferenceType Collection getDataValue FormalParameter ReferenceType Object taggedValue TryStatement IfStatement BinaryOperation instanceof MemberReference taggedValue ReferenceType TaggedValue BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MemberReference taggedValue ReturnStatement MethodInvocation tv getDataValue End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference taggedValue illegalArgumentCollection MethodDeclaration Modifier public ReferenceType String getUUID FormalParameter ReferenceType Object base TryStatement IfStatement BinaryOperation instanceof MemberReference base ReferenceType RefBaseObject BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mofId Cast ReferenceType RefBaseObject MemberReference base LocalVariableDeclaration ReferenceType XmiReference VariableDeclarator ref Cast ReferenceType XmiReference MethodInvocation modelImpl MethodInvocation MemberReference mofId get getObjectToId IfStatement BinaryOperation == MemberReference ref Literal null BlockStatement ReturnStatement MemberReference mofId BlockStatement ReturnStatement MethodInvocation ref getXmiId End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference base illegalArgumentString MethodDeclaration Modifier public ReferenceType Object getVisibility FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BlockStatement ReturnStatement Cast ReferenceType ElementResidence MemberReference handle End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement ReturnStatement Cast ReferenceType ElementImport MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getWhen FormalParameter ReferenceType Object target TryStatement IfStatement MethodInvocation MemberReference target isATimeEvent BlockStatement ReturnStatement Cast ReferenceType TimeEvent MemberReference target End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference target illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getChangeExpression FormalParameter ReferenceType Object target TryStatement IfStatement MethodInvocation MemberReference target isAChangeEvent BlockStatement ReturnStatement Cast ReferenceType ChangeEvent MemberReference target End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference target illegalArgumentObject MethodDeclaration Modifier public ReferenceType Collection getPartitions FormalParameter ReferenceType Object container TryStatement IfStatement BinaryOperation instanceof MemberReference container ReferenceType ActivityGraph BlockStatement ReturnStatement Cast ReferenceType ActivityGraph MemberReference container End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference container illegalArgumentCollection MethodDeclaration Modifier public ReferenceType String getReferenceState FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType StubState BlockStatement ReturnStatement Cast ReferenceType StubState MemberReference o End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference o illegalArgumentString MethodDeclaration Modifier public ReferenceType Object lookupIn FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Model BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Model MemberReference handle MemberReference name lookup End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Namespace MemberReference handle MemberReference name lookup End IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Classifier MemberReference handle MemberReference name lookup End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier private ReferenceType ModelElement lookup FormalParameter ReferenceType Namespace ns FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation name Literal ""::"" indexOf IfStatement BinaryOperation != MemberReference idx Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nm StatementExpression Assignment MemberReference nm MethodInvocation name Literal 0 MemberReference idx substring = LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator e MethodInvocation MemberReference ns MemberReference nm lookup IfStatement BinaryOperation || BinaryOperation == MemberReference e Literal null BinaryOperation instanceof MemberReference e ReferenceType Namespace BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType Namespace VariableDeclarator n Cast ReferenceType Namespace MemberReference e StatementExpression Assignment MemberReference nm MethodInvocation name BinaryOperation + MemberReference idx Literal 2 substring = ReturnStatement MethodInvocation MemberReference n MemberReference nm lookup End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation ns MethodInvocation iterator getOwnedElement WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator e Cast ReferenceType ModelElement MethodInvocation i next IfStatement MethodInvocation name MethodInvocation e getName equals BlockStatement ReturnStatement MemberReference e End End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement TryStatement IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Multiplicity BlockStatement ReturnStatement MethodInvocation org.argouml.model.Model MethodInvocation MemberReference modelElement multiplicityToString getDataTypesHelper IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MemberReference modelElement getUMLClassName Literal "": "" MethodInvocation MemberReference modelElement getName End End IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement ReturnStatement Literal """" End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation modelElement toString MethodDeclaration Modifier public ReferenceType String getUMLClassName FormalParameter ReferenceType Object handle IfStatement MethodInvocation ! MemberReference handle isAUMLElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentString End TryStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getName getMetaTypes CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.<p>
     *
     * @param arg
     *            is the incorrect argument.
     * @return Object for use in the return statement.
     */ Modifier private ReferenceType Object illegalArgumentObject FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal null MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.<p>
     *
     * @param arg
     *            is the incorrect argument.
     * @return String for use in the return statement.
     */ Modifier private ReferenceType String illegalArgumentString FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal null MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.
     *
     * @param arg
     *            is the incorrect argument.
     */ Modifier private illegalArgument FormalParameter ReferenceType Object arg ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Unrecognized object "" MethodInvocation MemberReference arg getClassNull MethodDeclaration /**
     * @param handle
     *            the Class or null
     * @return String
     */ Modifier protected ReferenceType String getClassNull FormalParameter ReferenceType Object handle IfStatement BinaryOperation == MemberReference handle Literal null BlockStatement ReturnStatement Literal ""[null]"" End ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""["" MemberReference handle Literal ""/"" MethodInvocation handle getClass Literal ""]"" MethodDeclaration Modifier public ReferenceType String getTipString FormalParameter ReferenceType Object modelElement ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MemberReference modelElement getUMLClassName Literal "": "" MethodInvocation MemberReference modelElement getName MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.<p>
     *
     * @param arg
     *            is the incorrect argument.
     * @return Collection for use in the return statement.
     */ Modifier private ReferenceType Collection illegalArgumentCollection FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal null MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.<p>
     *
     * @param arg
     *            is the incorrect argument.
     * @return Collection for use in the return statement.
     */ Modifier private ReferenceType List illegalArgumentList FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal null MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.<p>
     *
     * @param arg
     *            is the incorrect argument.
     * @return a boolean for use in the return statement.
     */ Modifier private BasicType boolean illegalArgumentBoolean FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal false MethodDeclaration /**
     * Method that throws an error when a method is called with an incorrect
     * argument.<p>
     *
     * @param arg
     *            is the incorrect argument.
     * @return Int for use in the return statement.
     */ Modifier private BasicType int illegalArgumentInt FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal 0 MethodDeclaration Modifier public BasicType boolean isATagDefinition FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TagDefinition MethodDeclaration Modifier public ReferenceType List getEnumerationLiterals FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation ! MemberReference handle isAEnumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""handle: "" MemberReference handle End ReturnStatement Cast ReferenceType Enumeration MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e MethodDeclaration Modifier public BasicType boolean isAEnumeration FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Enumeration MethodDeclaration Modifier public BasicType boolean isAEnumerationLiteral FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType EnumerationLiteral MethodDeclaration Modifier public ReferenceType List getArguments FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Binding BlockStatement ReturnStatement Cast ReferenceType Binding MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public ReferenceType Object getBinding FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateArgument BlockStatement ReturnStatement Cast ReferenceType TemplateArgument MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getDefaultElement FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter BlockStatement ReturnStatement Cast ReferenceType TemplateParameter MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType Object getTemplate FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter BlockStatement ReturnStatement Cast ReferenceType TemplateParameter MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject MethodDeclaration Modifier public ReferenceType List getTemplateParameters FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle End CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList MethodDeclaration Modifier public BasicType boolean isSynch FormalParameter ReferenceType Object handle TryStatement ReturnStatement Cast ReferenceType ObjectFlowState MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e CatchClause CatchClauseParameter ClassCastException e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MemberReference e ReferenceType Facade",0
986,986,,0
58,58,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.BorderLayout Import java.text.MessageFormat Import javax.swing.JScrollPane Import javax.swing.JTextArea Import org.apache.log4j.Logger Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Decision Import org.argouml.cognitive.Goal Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * This class represents the first step of the wizard.
 * It contains the description of the
 * wizard in case the selected target is a todo item.
 * An appropriate message is shown in case nothing is selected, or
 * in case the user selected one of the branches (folders) in the
 * tree in the todo panel.
 */ WizDescription FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType WizDescription getLogger FieldDeclaration Modifier private ReferenceType JTextArea VariableDeclarator description ClassCreator ReferenceType JTextArea ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ WizDescription StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation LOG Literal ""making WizDescription"" info StatementExpression MethodInvocation description Literal true setLineWrap StatementExpression MethodInvocation description Literal true setWrapStyleWord StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType BorderLayout setLayout getMainPanel StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference description MemberReference BorderLayout CENTER add getMainPanel MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator message Literal """" StatementExpression SuperMethodInvocation MemberReference item setTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator target MemberReference item IfStatement BinaryOperation == MemberReference target Literal null BlockStatement StatementExpression MethodInvocation description Literal false setEditable StatementExpression MethodInvocation description MethodInvocation Translator Literal ""message.item.no-item-selected"" localize setText IfStatement BinaryOperation instanceof MemberReference target ReferenceType ToDoItem BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator tdi Cast ReferenceType ToDoItem MemberReference target StatementExpression MethodInvocation description Literal false setEditable StatementExpression MethodInvocation description Literal true setEnabled StatementExpression MethodInvocation description MethodInvocation tdi getDescription setText StatementExpression MethodInvocation description Literal 0 setCaretPosition IfStatement BinaryOperation instanceof MemberReference target ReferenceType PriorityNode BlockStatement StatementExpression Assignment MemberReference message MethodInvocation MessageFormat MethodInvocation Translator Literal ""message.item.branch-priority"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation target toString format = StatementExpression MethodInvocation description Literal false setEditable StatementExpression MethodInvocation description MemberReference message setText ReturnStatement IfStatement BinaryOperation instanceof MemberReference target ReferenceType Critic BlockStatement StatementExpression Assignment MemberReference message MethodInvocation MessageFormat MethodInvocation Translator Literal ""message.item.branch-critic"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation target toString format = StatementExpression MethodInvocation description Literal false setEditable StatementExpression MethodInvocation description MemberReference message setText ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference message MethodInvocation MessageFormat MethodInvocation Translator Literal ""message.item.branch-model"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference target toString getFacade format = StatementExpression MethodInvocation description Literal false setEditable StatementExpression MethodInvocation description MemberReference message setText ReturnStatement IfStatement BinaryOperation instanceof MemberReference target ReferenceType Decision BlockStatement StatementExpression Assignment MemberReference message MethodInvocation MessageFormat MethodInvocation Translator Literal ""message.item.branch-decision"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference target toString getFacade format = StatementExpression MethodInvocation description MemberReference message setText ReturnStatement IfStatement BinaryOperation instanceof MemberReference target ReferenceType Goal BlockStatement StatementExpression Assignment MemberReference message MethodInvocation MessageFormat MethodInvocation Translator Literal ""message.item.branch-goal"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference target toString getFacade format = StatementExpression MethodInvocation description MemberReference message setText ReturnStatement IfStatement BinaryOperation instanceof MemberReference target ReferenceType KnowledgeTypeNode BlockStatement StatementExpression Assignment MemberReference message MethodInvocation MessageFormat MethodInvocation Translator Literal ""message.item.branch-knowledge"" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference target toString getFacade format = StatementExpression MethodInvocation description MemberReference message setText ReturnStatement BlockStatement StatementExpression MethodInvocation description Literal """" setText ReturnStatement End End End End End End End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2545592446694112088L ReferenceType WizStep",0
1572,1572,,0
408,408,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.tigris.gef.base.Globals Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
* ActionAddExistingEdge enables pasting of an existing edge into a Diagram.
*/ ActionAddExistingEdge FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 736094733140639882L FieldDeclaration Modifier private ReferenceType Object VariableDeclarator edge Literal null ConstructorDeclaration Modifier public /**
     * Constructor for ActionAddExistingEdge.
     *
     * @param name       the name of the action
     * @param edgeObject    the edge (the UML ModelElement!)
     */ ActionAddExistingEdge FormalParameter ReferenceType String name FormalParameter ReferenceType Object edgeObject StatementExpression SuperConstructorInvocation MemberReference name StatementExpression Assignment MemberReference edge MemberReference edgeObject = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 StatementExpression SuperMethodInvocation MemberReference arg0 actionPerformed IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator gm Cast ReferenceType MutableGraphModel MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram MethodInvocation getGraphModel getManager IfStatement MethodInvocation gm MemberReference edge canAddEdge BlockStatement StatementExpression MethodInvocation gm MemberReference edge addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationClass getFacade BlockStatement StatementExpression MethodInvocation ModeCreateAssociationClass MethodInvocation Globals curEditor MemberReference edge buildInActiveLayer End End MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator dia MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getActiveDiagram getManager IfStatement BinaryOperation == MemberReference dia Literal null BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator gm Cast ReferenceType MutableGraphModel MethodInvocation dia getGraphModel ReturnStatement MethodInvocation gm MemberReference target canAddEdge ReferenceType UndoableAction",1
1357,1357,,0
583,583,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Dec 6, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLStateMachineTransitionListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateMachineTransitionListModel.
     */ UMLStateMachineTransitionListModel StatementExpression SuperConstructorInvocation Literal ""transition"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getTransitions getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getTransitions MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",0
942,942,"CompilationUnit PackageDeclaration org.argouml.uml.reveng.java Import antlr  ClassDeclaration Modifier public /**
 * This is a special token class for Argo that store its preceding whitespaces.
 */ ArgoToken FieldDeclaration Modifier private ReferenceType String VariableDeclarator ws MethodDeclaration /**
     * Set the whitespaces for this token.
     *
     * @param whiteSpaces The whitespaces for the buffer.
     */ Modifier public setWhitespace FormalParameter ReferenceType String whiteSpaces StatementExpression Assignment This MemberReference ws MemberReference whiteSpaces = MethodDeclaration /**
     * Get the whitespace of this token.
     *
     * @return The whitespaces of this token.
     */ Modifier public ReferenceType String getWhitespace ReturnStatement This MemberReference ws ReferenceType CommonToken",0
456,456,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * Add a new package at the top level, i.e. a model.<p>
 *
 * TODO: ArgoUML currently only supports one model.
 */ ActionAddTopLevelPackage ConstructorDeclaration Modifier public /**
     *  The constructor.
     */ ActionAddTopLevelPackage StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.add-top-level-package"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.add-top-level-package"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration BasicType int VariableDeclarator numPacks MethodInvocation p MethodInvocation size getUserDefinedModelList LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr BinaryOperation + Literal ""package_"" BinaryOperation + MemberReference numPacks Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation Model MethodInvocation createModel getModelManagementFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference model MemberReference nameStr setName getCoreHelper StatementExpression MethodInvocation p MemberReference model addMember StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression ClassCreator MethodInvocation MemberReference ae actionPerformed ReferenceType ActionClassDiagram ReferenceType UndoableAction",0
698,698,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import org.argouml.ui.explorer.WeakExplorerNode ClassDeclaration Modifier public /**
 * This class is a support class for The Navigation panel Go Rules.
 * Don't confuse it with anything to do with GEF nodes or the like.
 *
 * @author  alexb
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ AssociationsNode FieldDeclaration /**
     * The parent.
     */ Modifier private ReferenceType Object VariableDeclarator parent ConstructorDeclaration Modifier public /**
     * Creates a new instance of AssociationsNode.
     *
     * @param theParent the parent object
     */ AssociationsNode FormalParameter ReferenceType Object theParent StatementExpression Assignment This MemberReference parent MemberReference theParent = MethodDeclaration /**
     * @return the parent
     */ Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal ""Associations"" MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType AssociationsNode ReferenceType WeakExplorerNode",1
224,224,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.argouml.model.MetaTypes Import org.argouml.model.NotImplementedException Import org.eclipse.uml2.uml.Abstraction Import org.eclipse.uml2.uml.Action Import org.eclipse.uml2.uml.ActivityPartition Import org.eclipse.uml2.uml.Actor Import org.eclipse.uml2.uml.AggregationKind Import org.eclipse.uml2.uml.Artifact Import org.eclipse.uml2.uml.Association Import org.eclipse.uml2.uml.AssociationClass Import org.eclipse.uml2.uml.BehavioralFeature Import org.eclipse.uml2.uml.CallAction Import org.eclipse.uml2.uml.CallConcurrencyKind Import org.eclipse.uml2.uml.Classifier Import org.eclipse.uml2.uml.Collaboration Import org.eclipse.uml2.uml.Comment Import org.eclipse.uml2.uml.Component Import org.eclipse.uml2.uml.Constraint Import org.eclipse.uml2.uml.DataType Import org.eclipse.uml2.uml.Dependency Import org.eclipse.uml2.uml.Element Import org.eclipse.uml2.uml.ElementImport Import org.eclipse.uml2.uml.Enumeration Import org.eclipse.uml2.uml.EnumerationLiteral Import org.eclipse.uml2.uml.Extend Import org.eclipse.uml2.uml.ExtensionPoint Import org.eclipse.uml2.uml.FinalState Import org.eclipse.uml2.uml.Generalization Import org.eclipse.uml2.uml.Include Import org.eclipse.uml2.uml.InstanceSpecification Import org.eclipse.uml2.uml.Interaction Import org.eclipse.uml2.uml.Interface Import org.eclipse.uml2.uml.Model Import org.eclipse.uml2.uml.MultiplicityElement Import org.eclipse.uml2.uml.Namespace Import org.eclipse.uml2.uml.Node Import org.eclipse.uml2.uml.ObjectNode Import org.eclipse.uml2.uml.Operation Import org.eclipse.uml2.uml.PackageImport Import org.eclipse.uml2.uml.Parameter Import org.eclipse.uml2.uml.ParameterDirectionKind Import org.eclipse.uml2.uml.Property Import org.eclipse.uml2.uml.Pseudostate Import org.eclipse.uml2.uml.PseudostateKind Import org.eclipse.uml2.uml.Reception Import org.eclipse.uml2.uml.Signal Import org.eclipse.uml2.uml.State Import org.eclipse.uml2.uml.StateMachine Import org.eclipse.uml2.uml.Stereotype Import org.eclipse.uml2.uml.Transition Import org.eclipse.uml2.uml.Usage Import org.eclipse.uml2.uml.UseCase Import org.eclipse.uml2.uml.VisibilityKind ClassDeclaration Modifier final /**
 * The implementation of the MetaTypes for EUML2.
 */ MetaTypesEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param implementation
     *            The ModelImplementation.
     */ MetaTypesEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Object getAbstraction ReturnStatement ClassReference ReferenceType Abstraction MethodDeclaration Modifier public ReferenceType Object getAction ReturnStatement ClassReference ReferenceType Action MethodDeclaration Modifier public ReferenceType Object getActionExpression ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getActionState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getActor ReturnStatement ClassReference ReferenceType Actor MethodDeclaration Modifier public ReferenceType Object getAggregationKind ReturnStatement ClassReference ReferenceType AggregationKind MethodDeclaration Modifier public ReferenceType Object getArtifact ReturnStatement ClassReference ReferenceType Artifact MethodDeclaration Modifier public ReferenceType Object getAssociation ReturnStatement ClassReference ReferenceType Association MethodDeclaration Modifier public ReferenceType Object getAssociationClass ReturnStatement ClassReference ReferenceType AssociationClass MethodDeclaration Modifier public ReferenceType Object getAssociationEnd ReturnStatement ClassReference ReferenceType Property MethodDeclaration Modifier public ReferenceType Object getAssociationEndRole ReturnStatement ClassReference ReferenceType Classifier MethodDeclaration Modifier public ReferenceType Object getAssociationRole ReturnStatement ClassReference ReferenceType Classifier MethodDeclaration Modifier public ReferenceType Object getAttribute ReturnStatement ClassReference ReferenceType Property MethodDeclaration Modifier public ReferenceType Object getBehavioralFeature ReturnStatement ClassReference ReferenceType BehavioralFeature MethodDeclaration Modifier public ReferenceType Object getBooleanExpression ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getCallAction ReturnStatement ClassReference ReferenceType CallAction MethodDeclaration Modifier public ReferenceType Object getCallConcurrencyKind ReturnStatement ClassReference ReferenceType CallConcurrencyKind MethodDeclaration Modifier public ReferenceType Object getCallState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getClassifier ReturnStatement ClassReference ReferenceType Classifier MethodDeclaration Modifier public ReferenceType Object getClassifierRole ReturnStatement ClassReference ReferenceType Classifier MethodDeclaration Modifier public ReferenceType Object getCollaboration ReturnStatement ClassReference ReferenceType Collaboration MethodDeclaration Modifier public ReferenceType Object getComment ReturnStatement ClassReference ReferenceType Comment MethodDeclaration Modifier public ReferenceType Object getComponent ReturnStatement ClassReference ReferenceType Component MethodDeclaration Modifier public ReferenceType Object getComponentInstance ReturnStatement ClassReference ReferenceType InstanceSpecification MethodDeclaration Modifier public ReferenceType Object getCompositeState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getConstraint ReturnStatement ClassReference ReferenceType Constraint MethodDeclaration Modifier public ReferenceType Object getCreateAction ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getDataType ReturnStatement ClassReference ReferenceType DataType MethodDeclaration Modifier public ReferenceType Object getDependency ReturnStatement ClassReference ReferenceType Dependency MethodDeclaration Modifier public ReferenceType Object getDestroyAction ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getElementImport ReturnStatement ClassReference ReferenceType ElementImport MethodDeclaration Modifier public ReferenceType Object getEnumeration ReturnStatement ClassReference ReferenceType Enumeration MethodDeclaration Modifier public ReferenceType Object getEnumerationLiteral ReturnStatement ClassReference ReferenceType EnumerationLiteral MethodDeclaration Modifier public ReferenceType Object getEvent ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getException ReturnStatement ClassReference ReferenceType Signal MethodDeclaration Modifier public ReferenceType Object getExtend ReturnStatement ClassReference ReferenceType Extend MethodDeclaration Modifier public ReferenceType Object getExtensionPoint ReturnStatement ClassReference ReferenceType ExtensionPoint MethodDeclaration Modifier public ReferenceType Object getFinalState ReturnStatement ClassReference ReferenceType FinalState MethodDeclaration Modifier public ReferenceType Object getGeneralizableElement ReturnStatement ClassReference ReferenceType Classifier MethodDeclaration Modifier public ReferenceType Object getGeneralization ReturnStatement ClassReference ReferenceType Generalization MethodDeclaration Modifier public ReferenceType Object getGuard ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getInclude ReturnStatement ClassReference ReferenceType Include MethodDeclaration Modifier public ReferenceType Object getInstance ReturnStatement ClassReference ReferenceType InstanceSpecification MethodDeclaration Modifier public ReferenceType Object getInteraction ReturnStatement ClassReference ReferenceType Interaction MethodDeclaration Modifier public ReferenceType Object getInterface ReturnStatement ClassReference ReferenceType Interface MethodDeclaration Modifier public ReferenceType Object getLink ReturnStatement ClassReference ReferenceType InstanceSpecification MethodDeclaration Modifier public ReferenceType Object getMessage ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getModel ReturnStatement ClassReference ReferenceType Model MethodDeclaration Modifier public ReferenceType Object getModelElement ReturnStatement ClassReference ReferenceType Element MethodDeclaration Modifier public ReferenceType Object getMultiplicity ReturnStatement ClassReference ReferenceType MultiplicityElement MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz IfStatement BinaryOperation instanceof MemberReference element ReferenceType Class BlockStatement StatementExpression Assignment MemberReference clazz Cast ReferenceType Class MemberReference element = BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation element getClass = End LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation clazz getName LocalVariableDeclaration BasicType int VariableDeclarator startName BinaryOperation + MethodInvocation name Literal '.' lastIndexOf Literal 1 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator suffix Literal ""Impl"" LocalVariableDeclaration BasicType int VariableDeclarator endName MethodInvocation name length IfStatement MethodInvocation name MemberReference suffix endsWith BlockStatement StatementExpression Assignment MemberReference endName MethodInvocation suffix length -= End ReturnStatement MethodInvocation name MemberReference startName MemberReference endName substring MethodDeclaration Modifier public ReferenceType Object getNamespace ReturnStatement ClassReference ReferenceType Namespace MethodDeclaration Modifier public ReferenceType Object getNode ReturnStatement ClassReference ReferenceType Node MethodDeclaration Modifier public ReferenceType Object getNodeInstance ReturnStatement ClassReference ReferenceType InstanceSpecification MethodDeclaration Modifier public ReferenceType Object getObject ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object getObjectFlowState ReturnStatement ClassReference ReferenceType ObjectNode MethodDeclaration Modifier public ReferenceType Object getOperation ReturnStatement ClassReference ReferenceType Operation MethodDeclaration Modifier public ReferenceType Object getPackage ReturnStatement ClassReference org.eclipse.uml2.uml ReferenceType Package MethodDeclaration Modifier public ReferenceType Object getParameter ReturnStatement ClassReference ReferenceType Parameter MethodDeclaration Modifier public ReferenceType Object getParameterDirectionKind ReturnStatement ClassReference ReferenceType ParameterDirectionKind MethodDeclaration Modifier public ReferenceType Object getPartition ReturnStatement ClassReference ReferenceType ActivityPartition MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object getPermission ReturnStatement ClassReference ReferenceType PackageImport MethodDeclaration Modifier public ReferenceType Object getPackageImport ReturnStatement ClassReference ReferenceType PackageImport MethodDeclaration Modifier public ReferenceType Object getPseudostate ReturnStatement ClassReference ReferenceType Pseudostate MethodDeclaration Modifier public ReferenceType Object getPseudostateKind ReturnStatement ClassReference ReferenceType PseudostateKind MethodDeclaration Modifier public ReferenceType Object getReception ReturnStatement ClassReference ReferenceType Reception MethodDeclaration Modifier public ReferenceType Object getReturnAction ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getScopeKind ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object getSendAction ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getSignal ReturnStatement ClassReference ReferenceType Signal MethodDeclaration Modifier public ReferenceType Object getSimpleState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getStateMachine ReturnStatement ClassReference ReferenceType StateMachine MethodDeclaration Modifier public ReferenceType Object getStateVertex ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getStereotype ReturnStatement ClassReference ReferenceType Stereotype MethodDeclaration Modifier public ReferenceType Object getStimulus ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getStubState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getSubactivityState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getSubmachineState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getSubsystem ReturnStatement ClassReference ReferenceType Component MethodDeclaration Modifier public ReferenceType Object getSynchState ReturnStatement ClassReference ReferenceType State MethodDeclaration Modifier public ReferenceType Object getTagDefinition ReturnStatement ClassReference ReferenceType Property MethodDeclaration Modifier public ReferenceType Object getTaggedValue ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getTerminateAction ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object getTransition ReturnStatement ClassReference ReferenceType Transition MethodDeclaration Modifier public ReferenceType Object getUMLClass ReturnStatement ClassReference org.eclipse.uml2.uml ReferenceType Class MethodDeclaration Modifier public ReferenceType Object getUsage ReturnStatement ClassReference ReferenceType Usage MethodDeclaration Modifier public ReferenceType Object getUseCase ReturnStatement ClassReference ReferenceType UseCase MethodDeclaration Modifier public ReferenceType Object getVisibilityKind ReturnStatement ClassReference ReferenceType VisibilityKind ReferenceType MetaTypes",1
502,502,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Iterator Import java.util.List Import javax.swing.JPanel Import org.apache.log4j.Logger Import org.argouml.cognitive.ui.WizStepChoice Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * A non-modal wizard to assist the user in changing aggregation of an
 * association.
 * <p>
 * 
 * Earlier version always imposed composite aggregation. This version allows the
 * user to choose.
 * <p>
 * 
 * <em>Note</em>. This only applies to binary associations. A separate wizard
 * is needed for 3-way (or more) associations.
 * <p>
 * 
 * @see ""ArgoUML User Manual: Two Aggregate ends (roles) in binary Association""
 * @author jrobbins@ics.uci.edu
 */ WizAssocComposite FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType WizAssocComposite getLogger FieldDeclaration /**
     * The initial instructions on the Step 1 screen. May be set to a different
     * string through {@link #setInstructions(String)}.
     * <p>
     */ Modifier private ReferenceType String VariableDeclarator instructions MethodInvocation Translator Literal ""critics.WizAssocComposite-ins"" localize FieldDeclaration /**
     * Contains the {@link WizStepChoice} that is used to get the user's desired
     * options. Not created until we get to that step.
     * <p>
     */ Modifier private ReferenceType WizStepChoice VariableDeclarator step1Choice Literal null FieldDeclaration /**
     * The Association {@link WizStepChoice} that triggered the critic. Null
     * until set when it is first needed.
     * <p>
     */ Modifier private ReferenceType Object VariableDeclarator triggerAssociation Literal null ConstructorDeclaration Modifier public /**
     * Constructor for the wizard. Currently does nothing.
     * <p>
     */ WizAssocComposite MethodDeclaration /**
     * Tries to identify the Association that triggered the critic.
     * <p>
     * 
     * The first time it is called, it will initialise the trigger from the
     * ToDoItem. If there, it is assumed to be the first trigger of the ToDoItem
     * and to be an association. If found, the value is stored in the private
     * field {@link #triggerAssociation}.
     * <p>
     * 
     * On all subsequent calls, if a non-null value is found in {@link
     * #triggerAssociation} that is returned.
     * <p>
     * 
     * @return the Association that triggered the critic, or <code>null</code>
     *         if there was none.
     */ Modifier private ReferenceType Object getTriggerAssociation IfStatement BinaryOperation && BinaryOperation == MemberReference triggerAssociation Literal null BinaryOperation != MethodInvocation getToDoItem Literal null BlockStatement StatementExpression Assignment MemberReference triggerAssociation MethodInvocation getModelElement = End ReturnStatement MemberReference triggerAssociation MethodDeclaration /**
     * Returns a list of options to be used in creating a {@link
     * WizStepChoice} that will exercise the options.
     * <p>
     * 
     * We provide five options, shared aggregation in each direction, composite
     * aggregation in each direction and no aggregation at all.
     * <p>
     * 
     * It is possible that a very malicious user could delete the triggering
     * association just before we get to this point. For now we don't bother to
     * trap this. It will raise an exception, and then everything will carry on
     * happily.
     * <p>
     * 
     * @return A {@link List} of the options or <code>null</code> if the
     *         association that triggered the critic is no longer there.
     */ Modifier private ReferenceType List TypeArgument ReferenceType String buildOptions LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation getTriggerAssociation IfStatement BinaryOperation == MemberReference asc Literal null BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference asc getConnections MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator cls0 MethodInvocation Model MethodInvocation MemberReference ae0 getType getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator cls1 MethodInvocation Model MethodInvocation MemberReference ae1 getType getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator start MethodInvocation Translator Literal ""misc.name.anon"" localize LocalVariableDeclaration ReferenceType String VariableDeclarator end MethodInvocation Translator Literal ""misc.name.anon"" localize IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cls0 Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference start MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade = End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cls1 Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference end MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade = End StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference start MethodInvocation Translator Literal ""critics.WizAssocComposite-option1"" localize MemberReference end add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference start MethodInvocation Translator Literal ""critics.WizAssocComposite-option2"" localize MemberReference end add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference end MethodInvocation Translator Literal ""critics.WizAssocComposite-option1"" localize MemberReference start add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference end MethodInvocation Translator Literal ""critics.WizAssocComposite-option2"" localize MemberReference start add StatementExpression MethodInvocation result MethodInvocation Translator Literal ""critics.WizAssocComposite-option3"" localize add ReturnStatement MemberReference result MethodDeclaration /**
     * Set the initial instruction string for the choice. May be called by the
     * creator of the wizard to override the default.
     * <p>
     * 
     * @param s
     *            The new instructions.
     */ Modifier public setInstructions FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s = MethodDeclaration /**
     * Create a {@link JPanel} for the given step.
     * <p>
     * We use a {@link WizStepChoice} to handle the choice selection for the
     * user. We only create the panel once, saving it in a private field 
     * (<code>_step1Choice</code>) for subsequent use.
     * <p>
     * <em>Note</em>. If the association has been deleted, then we may not be
     * able to create a list of options. Under these circumstances we also
     * return null.
     * <p>
     * 
     * @param newStep The index of the step for which a panel is needed.
     * @return The created {@link JPanel} or <code>null</code> if no options
     *         were available.
     * @see org.argouml.cognitive.critics.Wizard
     */ Modifier public ReferenceType JPanel makePanel FormalParameter BasicType int newStep SwitchStatement MemberReference newStep SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1Choice Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator opts MethodInvocation buildOptions IfStatement BinaryOperation != MemberReference opts Literal null BlockStatement StatementExpression Assignment MemberReference step1Choice ClassCreator ReferenceType WizStepChoice This MemberReference instructions MemberReference opts = StatementExpression MethodInvocation step1Choice MethodInvocation getToDoItem setTarget End End ReturnStatement MemberReference step1Choice SwitchStatementCase End ReturnStatement Literal null MethodDeclaration /**
     * Take action at the completion of a step.
     * <p>
     * 
     * The guideline for ArgoUML non-modal wizards is to act immediately, not
     * wait for the finish. This method may also be invoked when finish is
     * triggered for any steps whose panels didn't get created.
     * <p>
     * 
     * The observation is that this seems to be trigged when there is any change
     * on the panel (e.g choosing an option), not just when ""next"" is pressed.
     * Coded accordingly
     * <p>
     * 
     * We allow for the association that caused the problem having by now been
     * deleted, and hence an exception may be raised. We catch this politely.
     * <p>
     * 
     * @param oldStep
     *            The index of the step just completed (0 for the first
     *            information panel)
     * 
     * @see org.argouml.cognitive.critics.Wizard
     */ Modifier public doAction FormalParameter BasicType int oldStep SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 IfStatement BinaryOperation != MemberReference step1Choice Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1Choice getSelectedIndex = End IfStatement BinaryOperation == MemberReference choice Literal - 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""WizAssocComposite: nothing selected, "" Literal ""should not get here"" warn ReturnStatement End TryStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MethodInvocation getTriggerAssociation getConnections MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 MethodInvocation iter next SwitchStatement MemberReference choice SwitchStatementCase Literal 0 StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation getComposite getAggregationKind setAggregation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation getAggregate getAggregationKind setAggregation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation getComposite getAggregationKind setAggregation getCoreHelper BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation getAggregate getAggregationKind setAggregation getCoreHelper BreakStatement SwitchStatementCase Literal 4 StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation getNone getAggregationKind setAggregation getCoreHelper BreakStatement SwitchStatementCase End CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG BinaryOperation + Literal ""WizAssocComposite: could not set "" Literal ""aggregation."" MemberReference pve error SwitchStatementCase End MethodDeclaration /**
     * Determine if we have sufficient information to finish.
     * <p>
     * We can't finish if our parent
     * {@link org.argouml.cognitive.critics.Wizard} can't finish.
     * <p>
     * We can finish if we're on step 0.
     * <p>
     * We can finish if we're on step 1 and have made a choice.
     * <p>
     * 
     * @return <code>true</code> if we can finish, otherwise
     *         <code>false</code>.
     * @see org.argouml.cognitive.critics.Wizard
     */ Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false End IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true End IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1Choice Literal null BinaryOperation != MethodInvocation step1Choice getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true End ReturnStatement Literal false ReferenceType UMLWizard",1
1430,1430,,0
417,417,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.InputEvent Import java.awt.event.KeyEvent Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import javax.swing.Action Import javax.swing.ButtonGroup Import javax.swing.JMenu Import javax.swing.JMenuBar Import javax.swing.JMenuItem Import javax.swing.JRadioButtonMenuItem Import javax.swing.JToolBar Import javax.swing.KeyStroke Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.CommandStack Import org.argouml.model.Model Import org.argouml.ui.ActionExportXMI Import org.argouml.ui.ActionImportXMI Import org.argouml.ui.ActionProjectSettings Import org.argouml.ui.ActionSettings Import org.argouml.ui.ArgoJMenu Import org.argouml.ui.ArgoToolbarManager Import org.argouml.ui.ProjectActions Import org.argouml.ui.ProjectBrowser Import org.argouml.ui.ZoomSliderButton Import org.argouml.ui.explorer.ActionPerspectiveConfig Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.ActionActivityDiagram Import org.argouml.uml.ui.ActionClassDiagram Import org.argouml.uml.ui.ActionCollaborationDiagram Import org.argouml.uml.ui.ActionDeleteModelElements Import org.argouml.uml.ui.ActionDeploymentDiagram Import org.argouml.uml.ui.ActionGenerateAll Import org.argouml.uml.ui.ActionGenerateOne Import org.argouml.uml.ui.ActionGenerateProjectCode Import org.argouml.uml.ui.ActionGenerationSettings Import org.argouml.uml.ui.ActionImportFromSources Import org.argouml.uml.ui.ActionLayout Import org.argouml.uml.ui.ActionOpenProject Import org.argouml.uml.ui.ActionRevertToSaved Import org.argouml.uml.ui.ActionSaveAllGraphics Import org.argouml.uml.ui.ActionSaveGraphics Import org.argouml.uml.ui.ActionSaveProjectAs Import org.argouml.uml.ui.ActionSequenceDiagram Import org.argouml.uml.ui.ActionStateDiagram Import org.argouml.uml.ui.ActionUseCaseDiagram Import org.tigris.gef.base.AdjustPageBreaksAction Import org.tigris.gef.base.AlignAction Import org.tigris.gef.base.DistributeAction Import org.tigris.gef.base.ReorderAction Import org.tigris.gef.base.SelectAllAction Import org.tigris.gef.base.SelectInvertAction Import org.tigris.gef.base.ZoomAction Import org.tigris.toolbar.ToolBarFactory ClassDeclaration Modifier public /**
 * GenericArgoMenuBar defines the menu bar for all operating systems which do 
 * not explicitly ask for a different kind of menu bar, such as Mac OS X.
 * <p>
 * 
 * Menu's and the mnemonics of menu's and the menuitems are separated in the
 * PropertyResourceBundle <em>menu.properties</em>.
 * <p>
 * 
 * menu items are separated in the PropertyResourceBundle
 * <em>action.properties</em>.
 * <p>
 * 
 * The key's in menu.properties have the following structure:
 * 
 * <pre>
 *   menu:                    [file].[name of menu]
 *    e.g:                    menu.file
 * 
 *   mnemonics of menu's:     [file].[name of menu].mnemonic
 *    e.g:                    menu.file.mnemonic
 * 
 *   mnemonics of menuitems:  [file].[flag for item].[name of menuitem].mnemonic
 *    e.g:                    menu.item.new.mnemonic
 * </pre>
 * 
 * TODO: Add registration for new menu items.
 */ GenericArgoMenuBar FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType JMenu VariableDeclarator moduleMenus ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JMenu FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType Action VariableDeclarator moduleCreateDiagramActions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action FieldDeclaration /**
     * The zoom factor - defaults to 90%/110%
     */ Modifier public final static BasicType double VariableDeclarator ZOOM_FACTOR Literal 0.9 FieldDeclaration /**
     * Name and prepareKey-Strings of/for the i18n menu.properties. Prefix for
     * menu-keys.
     */ Modifier private final static ReferenceType String VariableDeclarator MENU Literal ""menu."" FieldDeclaration /**
     * Prefix for menuitem-keys.
     */ Modifier private final static ReferenceType String VariableDeclarator MENUITEM Literal ""menu.item."" FieldDeclaration /**
     * The toolbars.
     */ Modifier private ReferenceType JToolBar VariableDeclarator fileToolbar FieldDeclaration Modifier private ReferenceType JToolBar VariableDeclarator editToolbar FieldDeclaration Modifier private ReferenceType JToolBar VariableDeclarator viewToolbar FieldDeclaration Modifier private ReferenceType JToolBar VariableDeclarator createDiagramToolbar FieldDeclaration /**
     * Most recently used project list.
     */ Modifier private ReferenceType LastRecentlyUsedMenuList VariableDeclarator mruList FieldDeclaration /**
     * Edit menu.
     */ Modifier private ReferenceType JMenu VariableDeclarator edit FieldDeclaration /**
     * The Select menu is a submenu of Edit.
     */ Modifier private ReferenceType JMenu VariableDeclarator select FieldDeclaration /**
     * View under which is the Goto Diagram, Find, Zoom, Adjust grid etc.
     */ Modifier private ReferenceType ArgoJMenu VariableDeclarator view FieldDeclaration /**
     * Toolbar:create diagram.
     */ Modifier private ReferenceType JMenu VariableDeclarator createDiagramMenu FieldDeclaration /**
     * Currently not used by core ArgoUML.
     */ Modifier private ReferenceType JMenu VariableDeclarator tools FieldDeclaration /**
     * Supports java generation, modules for php and html/javadocs are planned
     * feel free to contribute here!
     */ Modifier private ReferenceType JMenu VariableDeclarator generate FieldDeclaration /**
     * This should be invoked automatically when importing sources.
     */ Modifier private ReferenceType ArgoJMenu VariableDeclarator arrange FieldDeclaration /**
     * The critique menu.
     */ Modifier private ReferenceType ArgoJMenu VariableDeclarator critique FieldDeclaration /**
     * It needs it. Currently there is only system information and an about
     * text. Hyperlinking to online docs at argouml.org is considered to be a
     * basic improvement.
     */ Modifier private ReferenceType JMenu VariableDeclarator help FieldDeclaration Modifier private ReferenceType Action VariableDeclarator navigateTargetForwardAction FieldDeclaration Modifier private ReferenceType Action VariableDeclarator navigateTargetBackAction ConstructorDeclaration Modifier public /**
     * The constructor.
     */ GenericArgoMenuBar StatementExpression MethodInvocation initActions StatementExpression MethodInvocation initMenus StatementExpression MethodInvocation initModulesUI MethodDeclaration Modifier private initActions StatementExpression Assignment MemberReference navigateTargetForwardAction ClassCreator ReferenceType NavigateTargetForwardAction = StatementExpression Assignment MemberReference navigateTargetBackAction ClassCreator ReferenceType NavigateTargetBackAction = StatementExpression MethodInvocation TargetManager MethodInvocation This addTargetListener getInstance MethodDeclaration /**
     * This should be a user specified option. New laws for handicapped people
     * who cannot use the mouse require software developers in US to make all
     * components of User interface accessible through keyboard
     * 
     * @param item
     *            is the JMenuItem to do this for.
     * @param key
     *            is the key that we do this for.
     */ Modifier final protected static setMnemonic FormalParameter ReferenceType JMenuItem item FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType String VariableDeclarator propertykey Literal """" IfStatement BinaryOperation instanceof MemberReference item ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference propertykey BinaryOperation + BinaryOperation + MemberReference MENU MethodInvocation MemberReference key prepareKey Literal "".mnemonic"" = BlockStatement StatementExpression Assignment MemberReference propertykey BinaryOperation + BinaryOperation + MemberReference MENUITEM MethodInvocation MemberReference key prepareKey Literal "".mnemonic"" = End LocalVariableDeclaration ReferenceType String VariableDeclarator localMnemonic MethodInvocation Translator MemberReference propertykey localize LocalVariableDeclaration BasicType char VariableDeclarator mnemonic Literal ' ' IfStatement BinaryOperation && BinaryOperation != MemberReference localMnemonic Literal null BinaryOperation == MethodInvocation localMnemonic length Literal 1 BlockStatement StatementExpression Assignment MemberReference mnemonic MethodInvocation localMnemonic Literal 0 charAt = End StatementExpression MethodInvocation item MemberReference mnemonic setMnemonic MethodDeclaration /**
     * @param key
     *            the key to localize
     * @return the localized string
     */ Modifier final protected static ReferenceType String menuLocalize FormalParameter ReferenceType String key ReturnStatement MethodInvocation Translator BinaryOperation + MemberReference MENU MethodInvocation MemberReference key prepareKey localize MethodDeclaration /**
     * @param key the key to localize
     * @return the localized string
     */ Modifier final static ReferenceType String menuItemLocalize FormalParameter ReferenceType String key ReturnStatement MethodInvocation Translator BinaryOperation + MemberReference MENUITEM MethodInvocation MemberReference key prepareKey localize MethodDeclaration /**
     * Construct the ordinary all purpose Argo Menu Bar.
     */ Modifier protected initMenus StatementExpression MethodInvocation initMenuFile StatementExpression MethodInvocation initMenuEdit StatementExpression MethodInvocation initMenuView StatementExpression MethodInvocation initMenuCreate StatementExpression MethodInvocation initMenuArrange StatementExpression MethodInvocation initMenuGeneration StatementExpression MethodInvocation initMenuCritique StatementExpression MethodInvocation initMenuTools StatementExpression MethodInvocation initMenuHelp MethodDeclaration Modifier private initModulesUI StatementExpression MethodInvocation initModulesMenus StatementExpression MethodInvocation initModulesActions MethodDeclaration /**
     * Build the menu ""File"".
     */ Modifier private initMenuFile LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Action VariableDeclarator toolbarTools ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action LocalVariableDeclaration ReferenceType JMenu VariableDeclarator file ClassCreator ReferenceType JMenu MethodInvocation Literal ""File"" menuLocalize StatementExpression MethodInvocation MemberReference file add StatementExpression MethodInvocation MemberReference file Literal ""File"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator newItem MethodInvocation file ClassCreator ReferenceType ActionNew add StatementExpression MethodInvocation MemberReference newItem Literal ""New"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference newItem MemberReference ShortcutMgr ACTION_NEW_PROJECT assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionNew add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator openProjectItem MethodInvocation file ClassCreator ReferenceType ActionOpenProject add StatementExpression MethodInvocation MemberReference openProjectItem Literal ""Open"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference openProjectItem MemberReference ShortcutMgr ACTION_OPEN_PROJECT assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionOpenProject add StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator saveProjectItem MethodInvocation file MethodInvocation ProjectBrowser MethodInvocation getSaveAction getInstance add StatementExpression MethodInvocation MemberReference saveProjectItem Literal ""Save"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference saveProjectItem MemberReference ShortcutMgr ACTION_SAVE_PROJECT assignAccelerator StatementExpression MethodInvocation toolbarTools MethodInvocation ProjectBrowser getInstance add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator saveProjectAsItem MethodInvocation file ClassCreator ReferenceType ActionSaveProjectAs add StatementExpression MethodInvocation MemberReference saveProjectAsItem Literal ""SaveAs"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference saveProjectAsItem MemberReference ShortcutMgr ACTION_SAVE_PROJECT_AS assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator revertToSavedItem MethodInvocation file ClassCreator ReferenceType ActionRevertToSaved add StatementExpression MethodInvocation MemberReference revertToSavedItem Literal ""Revert To Saved"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference revertToSavedItem MemberReference ShortcutMgr ACTION_REVERT_TO_SAVED assignAccelerator StatementExpression MethodInvocation file addSeparator StatementExpression MethodInvocation ShortcutMgr MethodInvocation file ClassCreator ReferenceType ActionImportXMI add MemberReference ShortcutMgr ACTION_IMPORT_XMI assignAccelerator StatementExpression MethodInvocation ShortcutMgr MethodInvocation file ClassCreator ReferenceType ActionExportXMI add MemberReference ShortcutMgr ACTION_EXPORT_XMI assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator importFromSources MethodInvocation file MethodInvocation ActionImportFromSources getInstance add StatementExpression MethodInvocation MemberReference importFromSources Literal ""Import"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference importFromSources MemberReference ShortcutMgr ACTION_IMPORT_FROM_SOURCES assignAccelerator StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType Action VariableDeclarator a ClassCreator ReferenceType ActionProjectSettings StatementExpression MethodInvocation toolbarTools MemberReference a add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator pageSetupItem MethodInvocation file ClassCreator ReferenceType ActionPageSetup add StatementExpression MethodInvocation MemberReference pageSetupItem Literal ""PageSetup"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference pageSetupItem MemberReference ShortcutMgr ACTION_PAGE_SETUP assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator printItem MethodInvocation file ClassCreator ReferenceType ActionPrint add StatementExpression MethodInvocation MemberReference printItem Literal ""Print"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference printItem MemberReference ShortcutMgr ACTION_PRINT assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionPrint add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator saveGraphicsItem MethodInvocation file ClassCreator ReferenceType ActionSaveGraphics add StatementExpression MethodInvocation MemberReference saveGraphicsItem Literal ""SaveGraphics"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference saveGraphicsItem MemberReference ShortcutMgr ACTION_SAVE_GRAPHICS assignAccelerator StatementExpression MethodInvocation ShortcutMgr MethodInvocation file ClassCreator ReferenceType ActionSaveAllGraphics add MemberReference ShortcutMgr ACTION_SAVE_ALL_GRAPHICS assignAccelerator StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType JMenu VariableDeclarator notation Cast ReferenceType JMenu MethodInvocation file ClassCreator MethodInvocation getMenu ReferenceType ActionNotation add StatementExpression MethodInvocation MemberReference notation Literal ""Notation"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator propertiesItem MethodInvocation file ClassCreator ReferenceType ActionProjectSettings add StatementExpression MethodInvocation MemberReference propertiesItem Literal ""Properties"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference propertiesItem MemberReference ShortcutMgr ACTION_PROJECT_SETTINGS assignAccelerator StatementExpression MethodInvocation file addSeparator StatementExpression Assignment MemberReference mruList ClassCreator ReferenceType LastRecentlyUsedMenuList MemberReference file = StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator exitItem MethodInvocation file ClassCreator ReferenceType ActionExit add StatementExpression MethodInvocation MemberReference exitItem Literal ""Exit"" setMnemonic StatementExpression MethodInvocation exitItem MethodInvocation KeyStroke MemberReference KeyEvent VK_F4 MemberReference InputEvent ALT_MASK getKeyStroke setAccelerator StatementExpression Assignment MemberReference fileToolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference toolbarTools = StatementExpression MethodInvocation fileToolbar MethodInvocation Translator Literal ""misc.toolbar.file"" localize setName StatementExpression MethodInvocation fileToolbar Literal true setFloatable MethodDeclaration /**
     * Build the menu ""Edit"".
     */ Modifier private initMenuEdit StatementExpression Assignment MemberReference edit MethodInvocation ClassCreator ReferenceType JMenu MethodInvocation Literal ""Edit"" menuLocalize add = StatementExpression MethodInvocation MemberReference edit Literal ""Edit"" setMnemonic StatementExpression MethodInvocation MemberReference edit initCommandStackItems LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator undoItem MethodInvocation edit MethodInvocation ProjectActions MethodInvocation getUndoAction getInstance add StatementExpression MethodInvocation MemberReference undoItem Literal ""Undo"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference undoItem MemberReference ShortcutMgr ACTION_UNDO assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator redoItem MethodInvocation edit MethodInvocation ProjectActions MethodInvocation getRedoAction getInstance add StatementExpression MethodInvocation MemberReference redoItem Literal ""Redo"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference redoItem MemberReference ShortcutMgr ACTION_REDO assignAccelerator StatementExpression MethodInvocation edit addSeparator StatementExpression Assignment MemberReference select ClassCreator ReferenceType JMenu MethodInvocation Literal ""Select"" menuLocalize = StatementExpression MethodInvocation MemberReference select Literal ""Select"" setMnemonic StatementExpression MethodInvocation edit MemberReference select add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator selectAllItem MethodInvocation select ClassCreator ReferenceType SelectAllAction MethodInvocation Literal ""Select All"" menuItemLocalize add StatementExpression MethodInvocation MemberReference selectAllItem Literal ""Select All"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference selectAllItem MemberReference ShortcutMgr ACTION_SELECT_ALL assignAccelerator StatementExpression MethodInvocation select addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator backItem MethodInvocation select MemberReference navigateTargetBackAction add StatementExpression MethodInvocation MemberReference backItem Literal ""Navigate Back"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference backItem MemberReference ShortcutMgr ACTION_NAVIGATE_BACK assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator forwardItem MethodInvocation select MemberReference navigateTargetForwardAction add StatementExpression MethodInvocation MemberReference forwardItem Literal ""Navigate Forward"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference forwardItem MemberReference ShortcutMgr ACTION_NAVIGATE_FORWARD assignAccelerator StatementExpression MethodInvocation select addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator selectInvert MethodInvocation select ClassCreator ReferenceType SelectInvertAction MethodInvocation Literal ""Invert Selection"" menuItemLocalize add StatementExpression MethodInvocation MemberReference selectInvert Literal ""Invert Selection"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference selectInvert MemberReference ShortcutMgr ACTION_SELECT_INVERT assignAccelerator StatementExpression MethodInvocation edit addSeparator LocalVariableDeclaration ReferenceType Action VariableDeclarator removeFromDiagram MethodInvocation ProjectActions MethodInvocation getRemoveFromDiagramAction getInstance LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator removeItem MethodInvocation edit MemberReference removeFromDiagram add StatementExpression MethodInvocation MemberReference removeItem Literal ""Remove from Diagram"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference removeItem MemberReference ShortcutMgr ACTION_REMOVE_FROM_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator deleteItem MethodInvocation edit MethodInvocation ActionDeleteModelElements getTargetFollower add StatementExpression MethodInvocation MemberReference deleteItem Literal ""Delete from Model"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference deleteItem MemberReference ShortcutMgr ACTION_DELETE_MODEL_ELEMENTS assignAccelerator StatementExpression MethodInvocation edit addSeparator StatementExpression MethodInvocation ShortcutMgr MethodInvocation edit ClassCreator ReferenceType ActionPerspectiveConfig add MemberReference ShortcutMgr ACTION_PERSPECTIVE_CONFIG assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator settingsItem MethodInvocation edit ClassCreator ReferenceType ActionSettings add StatementExpression MethodInvocation MemberReference settingsItem Literal ""Settings"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference settingsItem MemberReference ShortcutMgr ACTION_SETTINGS assignAccelerator MethodDeclaration Modifier private initCommandStackItems FormalParameter ReferenceType JMenu menu IfStatement MethodInvocation ! Model MethodInvocation isCommandStackCapabilityAvailable getCommandStack BlockStatement ReturnStatement End LocalVariableDeclaration Modifier final ReferenceType JMenuItem VariableDeclarator undo ClassCreator ReferenceType JMenuItem Literal ""Undo"" StatementExpression MethodInvocation undo Literal false setEnabled StatementExpression MethodInvocation menu MemberReference undo add StatementExpression MethodInvocation undo ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Model MethodInvocation undo getCommandStack addActionListener LocalVariableDeclaration Modifier final ReferenceType JMenuItem VariableDeclarator redo ClassCreator ReferenceType JMenuItem Literal ""Redo"" StatementExpression MethodInvocation redo Literal false setEnabled StatementExpression MethodInvocation menu MemberReference redo add StatementExpression MethodInvocation redo ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Model MethodInvocation redo getCommandStack addActionListener LocalVariableDeclaration ReferenceType PropertyChangeListener VariableDeclarator listener ClassCreator ReferenceType PropertyChangeListener MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation MemberReference undo MemberReference redo updateUndoRedo StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MethodInvocation Model MethodInvocation getModelElement getMetaTypes Cast ReferenceType String Literal null addClassModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference CommandStack COMMAND_STACK_UPDATE_EVENT Cast ReferenceType String Literal null addModelEventListener getPump StatementExpression MethodInvocation menu addSeparator MethodDeclaration Modifier private updateUndoRedo FormalParameter ReferenceType JMenuItem undo FormalParameter ReferenceType JMenuItem redo IfStatement MethodInvocation ! Model MethodInvocation canUndo getCommandStack BlockStatement StatementExpression MethodInvocation undo Literal ""Undo"" setText StatementExpression MethodInvocation undo Literal false setEnabled BlockStatement StatementExpression MethodInvocation undo BinaryOperation + Literal ""Undo: "" MethodInvocation Model MethodInvocation getUndoLabel getCommandStack setText StatementExpression MethodInvocation undo Literal true setEnabled End IfStatement MethodInvocation ! Model MethodInvocation canRedo getCommandStack BlockStatement StatementExpression MethodInvocation redo Literal ""Redo"" setText StatementExpression MethodInvocation redo Literal false setEnabled BlockStatement StatementExpression MethodInvocation redo BinaryOperation + Literal ""Redo: "" MethodInvocation Model MethodInvocation getRedoLabel getCommandStack setText StatementExpression MethodInvocation redo Literal true setEnabled End MethodDeclaration /**
     * Build the menu ""View"".
     */ Modifier private initMenuView StatementExpression Assignment MemberReference view Cast ReferenceType ArgoJMenu MethodInvocation ClassCreator ReferenceType ArgoJMenu BinaryOperation + MemberReference MENU MethodInvocation Literal ""View"" prepareKey add = StatementExpression MethodInvocation MemberReference view Literal ""View"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator gotoDiagram MethodInvocation view ClassCreator ReferenceType ActionGotoDiagram add StatementExpression MethodInvocation MemberReference gotoDiagram Literal ""Goto-Diagram"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference gotoDiagram MemberReference ShortcutMgr ACTION_GO_TO_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator findItem MethodInvocation view ClassCreator ReferenceType ActionFind add StatementExpression MethodInvocation MemberReference findItem Literal ""Find"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference findItem MemberReference ShortcutMgr ACTION_FIND assignAccelerator StatementExpression MethodInvocation view addSeparator LocalVariableDeclaration ReferenceType JMenu VariableDeclarator zoom Cast ReferenceType JMenu MethodInvocation view ClassCreator ReferenceType JMenu MethodInvocation Literal ""Zoom"" menuLocalize add StatementExpression MethodInvocation MemberReference zoom Literal ""Zoom"" setMnemonic LocalVariableDeclaration ReferenceType ZoomAction VariableDeclarator zoomOutAction ClassCreator ReferenceType ZoomAction MemberReference ZOOM_FACTOR LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator zoomOut MethodInvocation zoom MemberReference zoomOutAction add StatementExpression MethodInvocation MemberReference zoomOut Literal ""Zoom Out"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference zoomOut MemberReference ShortcutMgr ACTION_ZOOM_OUT assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator zoomReset MethodInvocation zoom ClassCreator ReferenceType ZoomAction Literal 0.0 add StatementExpression MethodInvocation MemberReference zoomReset Literal ""Zoom Reset"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference zoomReset MemberReference ShortcutMgr ACTION_ZOOM_RESET assignAccelerator LocalVariableDeclaration ReferenceType ZoomAction VariableDeclarator zoomInAction ClassCreator ReferenceType ZoomAction BinaryOperation / Literal 1.0 MemberReference ZOOM_FACTOR LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator zoomIn MethodInvocation zoom MemberReference zoomInAction add StatementExpression MethodInvocation MemberReference zoomIn Literal ""Zoom In"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference zoomIn MemberReference ShortcutMgr ACTION_ZOOM_IN assignAccelerator StatementExpression MethodInvocation view addSeparator LocalVariableDeclaration ReferenceType JMenu VariableDeclarator grid Cast ReferenceType JMenu MethodInvocation view ClassCreator ReferenceType JMenu MethodInvocation Literal ""Adjust Grid"" menuLocalize add StatementExpression MethodInvocation MemberReference grid Literal ""Grid"" setMnemonic LocalVariableDeclaration ReferenceType List VariableDeclarator gridActions MethodInvocation ActionAdjustGrid Literal false createAdjustGridActions LocalVariableDeclaration ReferenceType ButtonGroup VariableDeclarator groupGrid ClassCreator ReferenceType ButtonGroup StatementExpression MethodInvocation ActionAdjustGrid MemberReference groupGrid setGroup LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation gridActions iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator cmdAG Cast ReferenceType Action MethodInvocation i next LocalVariableDeclaration ReferenceType JRadioButtonMenuItem VariableDeclarator mi ClassCreator ReferenceType JRadioButtonMenuItem MemberReference cmdAG StatementExpression MethodInvocation groupGrid MemberReference mi add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator adjustGrid MethodInvocation grid MemberReference mi add StatementExpression MethodInvocation MemberReference adjustGrid Cast ReferenceType String MethodInvocation cmdAG MemberReference Action NAME getValue setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference adjustGrid BinaryOperation + MemberReference ShortcutMgr ACTION_ADJUST_GRID MethodInvocation cmdAG Literal ""ID"" getValue assignAccelerator End LocalVariableDeclaration ReferenceType JMenu VariableDeclarator snap Cast ReferenceType JMenu MethodInvocation view ClassCreator ReferenceType JMenu MethodInvocation Literal ""Adjust Snap"" menuLocalize add StatementExpression MethodInvocation MemberReference snap Literal ""Snap"" setMnemonic LocalVariableDeclaration ReferenceType List VariableDeclarator snapActions MethodInvocation ActionAdjustSnap createAdjustSnapActions LocalVariableDeclaration ReferenceType ButtonGroup VariableDeclarator groupSnap ClassCreator ReferenceType ButtonGroup StatementExpression MethodInvocation ActionAdjustSnap MemberReference groupSnap setGroup StatementExpression Assignment MemberReference i MethodInvocation snapActions iterator = WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator cmdAS Cast ReferenceType Action MethodInvocation i next LocalVariableDeclaration ReferenceType JRadioButtonMenuItem VariableDeclarator mi ClassCreator ReferenceType JRadioButtonMenuItem MemberReference cmdAS StatementExpression MethodInvocation groupSnap MemberReference mi add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator adjustSnap MethodInvocation snap MemberReference mi add StatementExpression MethodInvocation MemberReference adjustSnap Cast ReferenceType String MethodInvocation cmdAS MemberReference Action NAME getValue setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference adjustSnap BinaryOperation + MemberReference ShortcutMgr ACTION_ADJUST_GUIDE MethodInvocation cmdAS Literal ""ID"" getValue assignAccelerator End LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator adjustPageBreaks MethodInvocation view ClassCreator ReferenceType AdjustPageBreaksAction add StatementExpression MethodInvocation MemberReference adjustPageBreaks Literal ""Adjust Pagebreaks"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference adjustPageBreaks MemberReference ShortcutMgr ACTION_ADJUST_PAGE_BREAKS assignAccelerator StatementExpression MethodInvocation view addSeparator LocalVariableDeclaration ReferenceType JMenu VariableDeclarator menuToolbars MethodInvocation ArgoToolbarManager MethodInvocation getMenu getInstance StatementExpression MethodInvocation menuToolbars MethodInvocation Literal ""toolbars"" menuLocalize setText StatementExpression MethodInvocation MemberReference menuToolbars Literal ""toolbars"" setMnemonic StatementExpression MethodInvocation view MemberReference menuToolbars add StatementExpression MethodInvocation view addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator showSaved MethodInvocation view ClassCreator ReferenceType ActionShowXMLDump add StatementExpression MethodInvocation MemberReference showSaved Literal ""Show Saved"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference showSaved MemberReference ShortcutMgr ACTION_SHOW_XML_DUMP assignAccelerator MethodDeclaration /**
     * Build the menu ""Create"" and the toolbar for diagram creation. These are
     * build together to guarantee that the same items are present in both, and
     * in the same sequence.
     * <p>
     * 
     * The sequence of these items was determined by issue 1821.
     */ Modifier private initMenuCreate LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Action VariableDeclarator toolbarTools ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action StatementExpression Assignment MemberReference createDiagramMenu MethodInvocation ClassCreator ReferenceType JMenu MethodInvocation Literal ""Create Diagram"" menuLocalize add = StatementExpression MethodInvocation MemberReference createDiagramMenu Literal ""Create Diagram"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator usecaseDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionUseCaseDiagram add StatementExpression MethodInvocation MemberReference usecaseDiagram Literal ""Usecase Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionUseCaseDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference usecaseDiagram MemberReference ShortcutMgr ACTION_USE_CASE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator classDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionClassDiagram add StatementExpression MethodInvocation MemberReference classDiagram Literal ""Class Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionClassDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference classDiagram MemberReference ShortcutMgr ACTION_CLASS_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator sequenzDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionSequenceDiagram add StatementExpression MethodInvocation MemberReference sequenzDiagram Literal ""Sequenz Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionSequenceDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference sequenzDiagram MemberReference ShortcutMgr ACTION_SEQUENCE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator collaborationDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionCollaborationDiagram add StatementExpression MethodInvocation MemberReference collaborationDiagram Literal ""Collaboration Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionCollaborationDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference collaborationDiagram MemberReference ShortcutMgr ACTION_COLLABORATION_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator stateDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionStateDiagram add StatementExpression MethodInvocation MemberReference stateDiagram Literal ""Statechart Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionStateDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference stateDiagram MemberReference ShortcutMgr ACTION_STATE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator activityDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionActivityDiagram add StatementExpression MethodInvocation MemberReference activityDiagram Literal ""Activity Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionActivityDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference activityDiagram MemberReference ShortcutMgr ACTION_ACTIVITY_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator deploymentDiagram MethodInvocation createDiagramMenu ClassCreator ReferenceType ActionDeploymentDiagram add StatementExpression MethodInvocation MemberReference deploymentDiagram Literal ""Deployment Diagram"" setMnemonic StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionDeploymentDiagram add StatementExpression MethodInvocation ShortcutMgr MemberReference deploymentDiagram MemberReference ShortcutMgr ACTION_DEPLOYMENT_DIAGRAM assignAccelerator StatementExpression Assignment MemberReference createDiagramToolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference toolbarTools = StatementExpression MethodInvocation createDiagramToolbar MethodInvocation Translator Literal ""misc.toolbar.create-diagram"" localize setName StatementExpression MethodInvocation createDiagramToolbar Literal true setFloatable MethodDeclaration /**
     * Build the menu ""Arrange"".
     */ Modifier private initMenuArrange StatementExpression Assignment MemberReference arrange Cast ReferenceType ArgoJMenu MethodInvocation ClassCreator ReferenceType ArgoJMenu BinaryOperation + MemberReference MENU MethodInvocation Literal ""Arrange"" prepareKey add = StatementExpression MethodInvocation MemberReference arrange Literal ""Arrange"" setMnemonic LocalVariableDeclaration ReferenceType JMenu VariableDeclarator align Cast ReferenceType JMenu MethodInvocation arrange ClassCreator ReferenceType JMenu MethodInvocation Literal ""Align"" menuLocalize add StatementExpression MethodInvocation MemberReference align Literal ""Align"" setMnemonic LocalVariableDeclaration ReferenceType JMenu VariableDeclarator distribute Cast ReferenceType JMenu MethodInvocation arrange ClassCreator ReferenceType JMenu MethodInvocation Literal ""Distribute"" menuLocalize add StatementExpression MethodInvocation MemberReference distribute Literal ""Distribute"" setMnemonic LocalVariableDeclaration ReferenceType JMenu VariableDeclarator reorder Cast ReferenceType JMenu MethodInvocation arrange ClassCreator ReferenceType JMenu MethodInvocation Literal ""Reorder"" menuLocalize add StatementExpression MethodInvocation MemberReference reorder Literal ""Reorder"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator preferredSize MethodInvocation arrange ClassCreator ReferenceType CmdSetPreferredSize add StatementExpression MethodInvocation MemberReference preferredSize Literal ""Preferred Size"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference preferredSize MemberReference ShortcutMgr ACTION_PREFERRED_SIZE assignAccelerator StatementExpression MethodInvocation arrange ClassCreator ReferenceType ActionLayout add StatementExpression MethodInvocation MemberReference align initAlignMenu StatementExpression MethodInvocation MemberReference distribute initDistributeMenu StatementExpression MethodInvocation MemberReference reorder initReorderMenu MethodDeclaration /**
     * Initialize submenus of the Align menu.
     * 
     * @param align
     *            the Align menu
     */ Modifier private static initAlignMenu FormalParameter ReferenceType JMenu align LocalVariableDeclaration ReferenceType AlignAction VariableDeclarator a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_TOPS StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignTops"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignTops MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignTops Literal ""align tops"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignTops MemberReference ShortcutMgr ACTION_ALIGN_TOPS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_BOTTOMS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignBottoms"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignBottoms MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignBottoms Literal ""align bottoms"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignBottoms MemberReference ShortcutMgr ACTION_ALIGN_BOTTOMS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_RIGHTS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignRights"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignRights MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignRights Literal ""align rights"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignRights MemberReference ShortcutMgr ACTION_ALIGN_RIGHTS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_LEFTS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignLefts"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignLefts MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignLefts Literal ""align lefts"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignLefts MemberReference ShortcutMgr ACTION_ALIGN_LEFTS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_H_CENTERS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignHorizontalCenters"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignHCenters MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignHCenters Literal ""align horizontal centers"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignHCenters MemberReference ShortcutMgr ACTION_ALIGN_H_CENTERS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_V_CENTERS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignVerticalCenters"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignVCenters MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignVCenters Literal ""align vertical centers"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignVCenters MemberReference ShortcutMgr ACTION_ALIGN_V_CENTERS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType AlignAction MemberReference AlignAction ALIGN_TO_GRID = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""AlignToGrid"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator alignToGrid MethodInvocation align MemberReference a add StatementExpression MethodInvocation MemberReference alignToGrid Literal ""align to grid"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference alignToGrid MemberReference ShortcutMgr ACTION_ALIGN_TO_GRID assignAccelerator MethodDeclaration /**
     * Initialize submenus of the Distribute menu.
     * 
     * @param distribute
     *            the Distribute menu
     */ Modifier private static initDistributeMenu FormalParameter ReferenceType JMenu distribute LocalVariableDeclaration ReferenceType DistributeAction VariableDeclarator a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction H_SPACING StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""DistributeHorizontalSpacing"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator distributeHSpacing MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference distributeHSpacing Literal ""distribute horizontal spacing"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference distributeHSpacing MemberReference ShortcutMgr ACTION_DISTRIBUTE_H_SPACING assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction H_CENTERS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""DistributeHorizontalCenters"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator distributeHCenters MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference distributeHCenters Literal ""distribute horizontal centers"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference distributeHCenters MemberReference ShortcutMgr ACTION_DISTRIBUTE_H_CENTERS assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction V_SPACING = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""DistributeVerticalSpacing"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator distributeVSpacing MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference distributeVSpacing Literal ""distribute vertical spacing"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference distributeVSpacing MemberReference ShortcutMgr ACTION_DISTRIBUTE_V_SPACING assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction V_CENTERS = StatementExpression MethodInvocation a MemberReference Action SMALL_ICON MethodInvocation ResourceLoaderWrapper Literal ""DistributeVerticalCenters"" lookupIcon putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator distributeVCenters MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference distributeVCenters Literal ""distribute vertical centers"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference distributeVCenters MemberReference ShortcutMgr ACTION_DISTRIBUTE_V_CENTERS assignAccelerator MethodDeclaration /**
     * Initialize the submenus for the Reorder menu.
     * 
     * @param reorder
     *            the main Reorder menu
     */ Modifier private static initReorderMenu FormalParameter ReferenceType JMenu reorder LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator reorderBringForward MethodInvocation reorder ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal ""action.bring-forward"" localize MethodInvocation ResourceLoaderWrapper Literal ""Forward"" lookupIcon MemberReference ReorderAction BRING_FORWARD add StatementExpression MethodInvocation MemberReference reorderBringForward Literal ""reorder bring forward"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference reorderBringForward MemberReference ShortcutMgr ACTION_REORDER_FORWARD assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator reorderSendBackward MethodInvocation reorder ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal ""action.send-backward"" localize MethodInvocation ResourceLoaderWrapper Literal ""Backward"" lookupIcon MemberReference ReorderAction SEND_BACKWARD add StatementExpression MethodInvocation MemberReference reorderSendBackward Literal ""reorder send backward"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference reorderSendBackward MemberReference ShortcutMgr ACTION_REORDER_BACKWARD assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator reorderBringToFront MethodInvocation reorder ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal ""action.bring-to-front"" localize MethodInvocation ResourceLoaderWrapper Literal ""ToFront"" lookupIcon MemberReference ReorderAction BRING_TO_FRONT add StatementExpression MethodInvocation MemberReference reorderBringToFront Literal ""reorder bring to front"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference reorderBringToFront MemberReference ShortcutMgr ACTION_REORDER_TO_FRONT assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator reorderSendToBack MethodInvocation reorder ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal ""action.send-to-back"" localize MethodInvocation ResourceLoaderWrapper Literal ""ToBack"" lookupIcon MemberReference ReorderAction SEND_TO_BACK add StatementExpression MethodInvocation MemberReference reorderSendToBack Literal ""reorder send to back"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference reorderSendToBack MemberReference ShortcutMgr ACTION_REORDER_TO_BACK assignAccelerator MethodDeclaration /**
     * Build the menu ""Generation"".
     */ Modifier private initMenuGeneration StatementExpression Assignment MemberReference generate MethodInvocation ClassCreator ReferenceType JMenu MethodInvocation Literal ""Generation"" menuLocalize add = StatementExpression MethodInvocation MemberReference generate Literal ""Generation"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator genOne MethodInvocation generate ClassCreator ReferenceType ActionGenerateOne add StatementExpression MethodInvocation MemberReference genOne Literal ""Generate Selected Classes"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference genOne MemberReference ShortcutMgr ACTION_GENERATE_ONE assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator genAllItem MethodInvocation generate ClassCreator ReferenceType ActionGenerateAll add StatementExpression MethodInvocation MemberReference genAllItem Literal ""Generate all classes"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference genAllItem MemberReference ShortcutMgr ACTION_GENERATE_ALL_CLASSES assignAccelerator StatementExpression MethodInvocation generate addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator genProject MethodInvocation generate ClassCreator ReferenceType ActionGenerateProjectCode add StatementExpression MethodInvocation MemberReference genProject Literal ""Generate code for project"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference genProject MemberReference ShortcutMgr ACTION_GENERATE_PROJECT_CODE assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator generationSettings MethodInvocation generate ClassCreator ReferenceType ActionGenerationSettings add StatementExpression MethodInvocation MemberReference generationSettings Literal ""Settings for project code generation"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference generationSettings MemberReference ShortcutMgr ACTION_GENERATION_SETTINGS assignAccelerator MethodDeclaration /**
     * Build the menu ""Critique"".
     */ Modifier private initMenuCritique StatementExpression Assignment MemberReference critique Cast ReferenceType ArgoJMenu MethodInvocation ClassCreator ReferenceType ArgoJMenu BinaryOperation + MemberReference MENU MethodInvocation Literal ""Critique"" prepareKey add = StatementExpression MethodInvocation MemberReference critique Literal ""Critique"" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator toggleAutoCritique MethodInvocation critique ClassCreator ReferenceType ActionAutoCritique addCheckItem StatementExpression MethodInvocation MemberReference toggleAutoCritique Literal ""Toggle Auto Critique"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference toggleAutoCritique MemberReference ShortcutMgr ACTION_AUTO_CRITIQUE assignAccelerator StatementExpression MethodInvocation critique addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator designIssues MethodInvocation critique ClassCreator ReferenceType ActionOpenDecisions add StatementExpression MethodInvocation MemberReference designIssues Literal ""Design Issues"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference designIssues MemberReference ShortcutMgr ACTION_OPEN_DECISIONS assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator designGoals MethodInvocation critique ClassCreator ReferenceType ActionOpenGoals add StatementExpression MethodInvocation MemberReference designGoals Literal ""Design Goals"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference designGoals MemberReference ShortcutMgr ACTION_OPEN_GOALS assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator browseCritics MethodInvocation critique ClassCreator ReferenceType ActionOpenCritics add StatementExpression MethodInvocation MemberReference browseCritics Literal ""Browse Critics"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference designIssues MemberReference ShortcutMgr ACTION_OPEN_CRITICS assignAccelerator MethodDeclaration /**
     * Build the menu ""Tools"".
     */ Modifier private initMenuTools StatementExpression Assignment MemberReference tools ClassCreator ReferenceType JMenu MethodInvocation Literal ""Tools"" menuLocalize = StatementExpression MethodInvocation MemberReference tools Literal ""Tools"" setMnemonic StatementExpression MethodInvocation MemberReference tools add MethodDeclaration /**
     * Build the menu ""Help"".
     */ Modifier private initMenuHelp StatementExpression Assignment MemberReference help ClassCreator ReferenceType JMenu MethodInvocation Literal ""Help"" menuLocalize = StatementExpression MethodInvocation MemberReference help Literal ""Help"" setMnemonic IfStatement BinaryOperation > MethodInvocation help getItemCount Literal 0 BlockStatement StatementExpression MethodInvocation help Literal 0 insertSeparator End LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator systemInfo MethodInvocation help ClassCreator ReferenceType ActionSystemInfo add StatementExpression MethodInvocation MemberReference systemInfo Literal ""System Information"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference systemInfo MemberReference ShortcutMgr ACTION_SYSTEM_INFORMATION assignAccelerator StatementExpression MethodInvocation help addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator aboutArgoUML MethodInvocation help ClassCreator ReferenceType ActionAboutArgoUML add StatementExpression MethodInvocation MemberReference aboutArgoUML Literal ""About ArgoUML"" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference aboutArgoUML MemberReference ShortcutMgr ACTION_ABOUT_ARGOUML assignAccelerator StatementExpression MethodInvocation MemberReference help add MethodDeclaration Modifier private initModulesMenus ForStatement EnhancedForControl VariableDeclaration ReferenceType JMenu VariableDeclarator menu MemberReference moduleMenus BlockStatement StatementExpression MethodInvocation MemberReference menu add End MethodDeclaration Modifier private initModulesActions ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MemberReference moduleCreateDiagramActions BlockStatement StatementExpression MethodInvocation createDiagramToolbar MemberReference action add End MethodDeclaration /**
     * Get the create diagram toolbar.
     * 
     * @return Value of property _createDiagramToolbar.
     */ Modifier public ReferenceType JToolBar getCreateDiagramToolbar ReturnStatement MemberReference createDiagramToolbar MethodDeclaration /**
     * Get the create diagram menu. Provided to allow plugins
     * to appeand their own actions to this menu.
     * 
     * @return Value of property createDiagramMenu
     */ Modifier public ReferenceType JMenu getCreateDiagramMenu ReturnStatement MemberReference createDiagramMenu MethodDeclaration /**
     * Get the edit toolbar.
     * 
     * @return the edit toolbar.
     */ Modifier public ReferenceType JToolBar getEditToolbar IfStatement BinaryOperation == MemberReference editToolbar Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Action VariableDeclarator c ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator mi MethodInvocation edit getMenuComponents BlockStatement IfStatement BinaryOperation instanceof MemberReference mi ReferenceType JMenuItem BlockStatement IfStatement BinaryOperation != Cast ReferenceType JMenuItem MemberReference mi Literal null BlockStatement StatementExpression MethodInvocation c Cast ReferenceType JMenuItem MemberReference mi add End End End StatementExpression Assignment MemberReference editToolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference c = StatementExpression MethodInvocation editToolbar MethodInvocation Translator Literal ""misc.toolbar.edit"" localize setName StatementExpression MethodInvocation editToolbar Literal true setFloatable End ReturnStatement MemberReference editToolbar MethodDeclaration /**
     * Getter for the file toolbar.
     * 
     * @return the file toolbar.
     * 
     */ Modifier public ReferenceType JToolBar getFileToolbar ReturnStatement MemberReference fileToolbar MethodDeclaration /**
     * Getter for the view toolbar.
     * 
     * @return the view toolbar.
     */ Modifier public ReferenceType JToolBar getViewToolbar IfStatement BinaryOperation == MemberReference viewToolbar Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator c ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object StatementExpression MethodInvocation c ClassCreator ReferenceType ActionFind add StatementExpression MethodInvocation c ClassCreator ReferenceType ZoomSliderButton add StatementExpression Assignment MemberReference viewToolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference c = StatementExpression MethodInvocation viewToolbar MethodInvocation Translator Literal ""misc.toolbar.view"" localize setName StatementExpression MethodInvocation viewToolbar Literal true setFloatable End ReturnStatement MemberReference viewToolbar MethodDeclaration /**
     * Prepares one part of the key for menu- or/and menuitem-mnemonics used in
     * menu.properties.
     * 
     * The method changes the parameter str to lower cases. Spaces in the
     * parameter str are changed to hyphens.
     * 
     * @param str
     * @return the prepared str
     */ Modifier private static ReferenceType String prepareKey FormalParameter ReferenceType String str ReturnStatement MethodInvocation str MethodInvocation Literal ' ' Literal '-' replace toLowerCase MethodDeclaration /**
     * Adds the entry to the mru list.
     * 
     * @param filename
     *            of the project
     *            
     * TODO: This should listen for file save events rather than being called 
     * directly - tfm.
     */ Modifier public addFileSaved FormalParameter ReferenceType String filename StatementExpression MethodInvocation mruList MemberReference filename addEntry MethodDeclaration /**
     * Getter for the Tools menu.
     * 
     * @return The Tools menu.
     */ Modifier public ReferenceType JMenu getTools ReturnStatement MemberReference tools FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2904074534530273119L MethodDeclaration /**
     * Target changed - update the actions that depend on the target.
     */ Modifier private setTarget StatementExpression MethodInvocation navigateTargetForwardAction MethodInvocation navigateTargetForwardAction isEnabled setEnabled StatementExpression MethodInvocation navigateTargetBackAction MethodInvocation navigateTargetBackAction isEnabled setEnabled MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public static registerMenuItem FormalParameter ReferenceType JMenu menu StatementExpression MethodInvocation moduleMenus MemberReference menu add MethodDeclaration Modifier public static registerCreateDiagramAction FormalParameter ReferenceType Action action StatementExpression MethodInvocation moduleCreateDiagramActions MemberReference action add ReferenceType JMenuBar ReferenceType TargetListener",1
964,964,"CompilationUnit PackageDeclaration org.argouml.model Import java.util.Collection ClassDeclaration Modifier public abstract /**
 * An abstract Decorator for the {@link UseCasesHelper}.
 *
 * @author Bob Tarling
 */ AbstractUseCasesHelperDecorator FieldDeclaration /**
     * The component.
     */ Modifier private ReferenceType UseCasesHelper VariableDeclarator impl ConstructorDeclaration Modifier protected /**
     * @param component The component to decorate.
     */ AbstractUseCasesHelperDecorator FormalParameter ReferenceType UseCasesHelper component StatementExpression Assignment MemberReference impl MemberReference component = MethodDeclaration /**
     * The component we are decorating.
     *
     * @return Returns the component.
     */ Modifier protected ReferenceType UseCasesHelper getComponent ReturnStatement MemberReference impl MethodDeclaration Modifier public ReferenceType Collection getExtensionPoints FormalParameter ReferenceType Object useCase ReturnStatement MethodInvocation Model MethodInvocation MemberReference useCase getExtensionPoints getFacade MethodDeclaration Modifier public ReferenceType Collection getAllUseCases FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns getAllUseCases MethodDeclaration Modifier public ReferenceType Collection getAllActors FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns getAllActors MethodDeclaration Modifier public ReferenceType Collection getExtendedUseCases FormalParameter ReferenceType Object ausecase ReturnStatement MethodInvocation impl MemberReference ausecase getExtendedUseCases MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Collection getExtendingUseCases FormalParameter ReferenceType Object usecase ReturnStatement MethodInvocation impl MemberReference usecase getExtendingUseCases MethodDeclaration Modifier public ReferenceType Object getExtends FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object anextension ReturnStatement MethodInvocation impl MemberReference abase MemberReference anextension getExtends MethodDeclaration Modifier public ReferenceType Collection getIncludedUseCases FormalParameter ReferenceType Object ausecase ReturnStatement MethodInvocation impl MemberReference ausecase getIncludedUseCases MethodDeclaration Modifier public ReferenceType Object getIncludes FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object aninclusion ReturnStatement MethodInvocation impl MemberReference abase MemberReference aninclusion getIncludes MethodDeclaration Modifier public ReferenceType Collection getSpecificationPath FormalParameter ReferenceType Object ausecase ReturnStatement MethodInvocation impl MemberReference ausecase getSpecificationPath MethodDeclaration Modifier public setBase FormalParameter ReferenceType Object extend FormalParameter ReferenceType Object base StatementExpression MethodInvocation impl MemberReference extend MemberReference base setBase MethodDeclaration Modifier public removeExtend FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend StatementExpression MethodInvocation impl MemberReference elem MemberReference extend removeExtend MethodDeclaration Modifier public removeExtensionPoint FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object ep StatementExpression MethodInvocation impl MemberReference elem MemberReference ep removeExtensionPoint MethodDeclaration Modifier public removeInclude FormalParameter ReferenceType Object usecase FormalParameter ReferenceType Object include StatementExpression MethodInvocation impl MemberReference usecase MemberReference include removeInclude MethodDeclaration Modifier public addExtend FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend StatementExpression MethodInvocation impl MemberReference elem MemberReference extend addExtend MethodDeclaration Modifier public addExtensionPoint FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object extensionPoint StatementExpression MethodInvocation impl MemberReference handle MemberReference extensionPoint addExtensionPoint MethodDeclaration Modifier public addExtensionPoint FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object extensionPoint StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference extensionPoint addExtensionPoint MethodDeclaration Modifier public addInclude FormalParameter ReferenceType Object usecase FormalParameter ReferenceType Object include StatementExpression MethodInvocation impl MemberReference usecase MemberReference include addInclude MethodDeclaration Modifier public setAddition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object useCase StatementExpression MethodInvocation impl MemberReference handle MemberReference useCase setAddition MethodDeclaration Modifier public setCondition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object booleanExpression StatementExpression MethodInvocation impl MemberReference handle MemberReference booleanExpression setCondition MethodDeclaration Modifier public setExtension FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ext StatementExpression MethodInvocation impl MemberReference handle MemberReference ext setExtension MethodDeclaration Modifier public setExtensionPoints FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection extensionPoints StatementExpression MethodInvocation impl MemberReference handle MemberReference extensionPoints setExtensionPoints MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection includes StatementExpression MethodInvocation impl MemberReference handle MemberReference includes setIncludes MethodDeclaration Modifier public setLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType String loc StatementExpression MethodInvocation impl MemberReference handle MemberReference loc setLocation MethodDeclaration Modifier public setUseCase FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object usecase StatementExpression MethodInvocation impl MemberReference elem MemberReference usecase setUseCase ReferenceType UseCasesHelper",1
856,856,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.ui.TabTarget InterfaceDeclaration Modifier public /**
 * Empty interface used to tag Tabbed panels that accept a Model Element Target.
 */ TabModelTarget ReferenceType TabTarget",0
249,249,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.UMLToDoItem Import org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram Import org.argouml.uml.diagram.static_structure.ui.FigInterface Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * A critic to detect when a interface in a deployment-diagram
 * is not inside a component.
 *
 * @author 5eichler@informatik.uni-hamburg.de
 */ CrInterfaceWithoutComponent ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrInterfaceWithoutComponent StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision PATTERNS addSupportedDecision MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType UMLDeploymentDiagram ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND MethodDeclaration Modifier public ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr MethodDeclaration Modifier public BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive ReturnStatement Literal false End LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res MethodDeclaration /**
     * If there are interfaces that are not inside a component
     * the returned ListSet is not null. Then in the ListSet
     * are the UMLDeploymentDiagram and all FigInterfaces with no
     * enclosing FigComponent
     *
     * @param dd the diagram to check
     * @return the set of offenders
     */ Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator figIter MethodInvocation figs iterator WhileStatement MethodInvocation figIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation figIter next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigInterface ContinueStatement End LocalVariableDeclaration ReferenceType FigInterface VariableDeclarator fi Cast ReferenceType FigInterface MemberReference obj LocalVariableDeclaration ReferenceType Fig VariableDeclarator enclosing MethodInvocation fi getEnclosingFig IfStatement BinaryOperation || BinaryOperation == MemberReference enclosing Literal null MethodInvocation Model getFacade BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add End StatementExpression MethodInvocation offs MemberReference fi add End End ReturnStatement MemberReference offs ReferenceType CrUML",1
808,808,"CompilationUnit PackageDeclaration org.argouml.application.events ClassDeclaration Modifier public /**
 * ArgoGeneratorEvent is used to notify interested parties
 * that a CodeGenerator has been added, removed, modified.
 */ ArgoGeneratorEvent ConstructorDeclaration Modifier public /**
     * @param eventType reported by this event.
     * @param src object that caused the event.
     */ ArgoGeneratorEvent FormalParameter BasicType int eventType FormalParameter ReferenceType Object src StatementExpression SuperConstructorInvocation MemberReference eventType MemberReference src MethodDeclaration /**
     * Indicates the start of the 100-digit range for generator events.
     *
     * @return the first id reserved for events.
     */ Modifier public BasicType int getEventStartRange ReturnStatement MemberReference ANY_GENERATOR_EVENT ReferenceType ArgoEvent",0
1582,1582,,0
415,415,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import java.awt.Point Import java.awt.event.MouseEvent Import java.awt.event.MouseListener Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.uml.diagram.static_structure.ui.FigEdgeNote Import org.tigris.gef.base.Layer Import org.tigris.gef.base.ModeCreatePolyEdge Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.FigPoly ClassDeclaration Modifier public abstract /**
 * A Mode to interpret user input while creating an edge.
 * The edge can connect any two model element prooviding isConnectionValid
 * return true.
 */ ModeCreateGraphEdge FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ModeCreateGraphEdge getLogger FieldDeclaration /**
     * The Fig from which drawing starts, either a FigNode or a FigEdge
     */ Modifier private ReferenceType Fig VariableDeclarator sourceFig MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Fig VariableDeclarator underMouse MethodInvocation editor MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference underMouse Literal null BlockStatement StatementExpression Assignment MemberReference underMouse MethodInvocation editor BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = End IfStatement BinaryOperation && BinaryOperation == MemberReference underMouse Literal null BinaryOperation == MemberReference _npoints Literal 0 BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End IfStatement BinaryOperation > MemberReference _npoints Literal 0 BlockStatement StatementExpression MethodInvocation me consume ReturnStatement End StatementExpression Assignment MemberReference sourceFig MemberReference underMouse = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference underMouse ReferenceType FigEdgeModelElement BinaryOperation instanceof MemberReference underMouse ReferenceType FigEdgeNote BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator sourceEdge Cast ReferenceType FigEdgeModelElement MemberReference underMouse StatementExpression MethodInvocation sourceEdge makeEdgePort LocalVariableDeclaration ReferenceType FigEdgePort VariableDeclarator edgePort MethodInvocation sourceEdge getEdgePort StatementExpression MethodInvocation sourceEdge computeRoute StatementExpression Assignment MemberReference underMouse MemberReference edgePort = StatementExpression MethodInvocation MemberReference edgePort setSourceFigNode StatementExpression MethodInvocation MethodInvocation sourceFig getOwner setStartPort StatementExpression MethodInvocation MemberReference edgePort setStartPortFig IfStatement BinaryOperation instanceof MemberReference underMouse ReferenceType FigNodeModelElement BlockStatement IfStatement BinaryOperation == MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference underMouse setSourceFigNode StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference x MemberReference y deepHitPort getSourceFigNode setStartPort End IfStatement BinaryOperation == MethodInvocation getStartPort Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation getStartPort getPortFig getSourceFigNode setStartPortFig BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End End StatementExpression MethodInvocation MemberReference me createFig StatementExpression MethodInvocation me consume MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement End IfStatement BinaryOperation == MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation editor MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference destFig Literal null BlockStatement StatementExpression Assignment MemberReference destFig MethodInvocation editor BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = End LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator graphModel Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel IfStatement MethodInvocation ! MemberReference sourceFig MemberReference destFig isConnectionValid BlockStatement StatementExpression Assignment MemberReference destFig Literal null = BlockStatement StatementExpression MethodInvocation LOG Literal ""Connection valid"" info End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeModelElement BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeNote BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator destEdge Cast ReferenceType FigEdgeModelElement MemberReference destFig StatementExpression MethodInvocation destEdge makeEdgePort StatementExpression Assignment MemberReference destFig MethodInvocation destEdge getEdgePort = StatementExpression MethodInvocation destEdge computeRoute End IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigNodeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFigNode Cast ReferenceType FigNode MemberReference destFig LocalVariableDeclaration ReferenceType Object VariableDeclarator foundPort MethodInvocation destFigNode getOwner IfStatement BinaryOperation && BinaryOperation == MemberReference foundPort MethodInvocation getStartPort BinaryOperation < MemberReference _npoints Literal 4 BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End IfStatement BinaryOperation != MemberReference foundPort Literal null BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator destPortFig MethodInvocation destFigNode MemberReference foundPort getPortFig LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator p Cast ReferenceType FigPoly MemberReference _newItem IfStatement BinaryOperation && BinaryOperation == MemberReference foundPort MethodInvocation getStartPort BinaryOperation >= MemberReference _npoints Literal 4 BlockStatement StatementExpression MethodInvocation p Literal true setSelfLoop End StatementExpression MethodInvocation editor damageAll StatementExpression MethodInvocation p Literal true setComplete StatementExpression MethodInvocation LOG Literal ""Connecting"" info LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation graphModel MethodInvocation getStartPort MemberReference foundPort MethodInvocation getMetaType connect StatementExpression MethodInvocation MemberReference modelElement setNewEdge IfStatement BinaryOperation != MethodInvocation getNewEdge Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation damage getSourceFigNode StatementExpression MethodInvocation destFigNode damage LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdge MethodInvocation lay MethodInvocation getNewEdge presentationFor StatementExpression MethodInvocation _newItem MemberReference Color black setLineColor StatementExpression MethodInvocation fe MemberReference _newItem setFig StatementExpression MethodInvocation fe MethodInvocation getStartPortFig setSourcePortFig StatementExpression MethodInvocation fe MethodInvocation getSourceFigNode setSourceFigNode StatementExpression MethodInvocation fe MemberReference destPortFig setDestPortFig StatementExpression MethodInvocation fe MemberReference destFigNode setDestFigNode IfStatement BinaryOperation != MemberReference fe Literal null BlockStatement StatementExpression MethodInvocation editor MethodInvocation MemberReference fe select getSelectionManager End StatementExpression MethodInvocation editor damageAll IfStatement BinaryOperation instanceof MemberReference fe ReferenceType MouseListener BlockStatement StatementExpression Cast ReferenceType MouseListener MemberReference fe End IfStatement BinaryOperation != MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation updateEdges getSourceFigNode End IfStatement BinaryOperation != MemberReference destFigNode Literal null BlockStatement StatementExpression MethodInvocation destFigNode updateEdges End StatementExpression MethodInvocation MemberReference fe endAttached End StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement End End IfStatement MethodInvocation ! MemberReference x MemberReference y nearLast BlockStatement StatementExpression MethodInvocation editor damageAll LocalVariableDeclaration ReferenceType Point VariableDeclarator snapPt ClassCreator ReferenceType Point MemberReference x MemberReference y StatementExpression MethodInvocation editor MemberReference snapPt snap StatementExpression Cast ReferenceType FigPoly MemberReference _newItem StatementExpression MemberReference ++ _npoints StatementExpression MethodInvocation editor damageAll End StatementExpression Assignment MemberReference _lastX MemberReference x = StatementExpression Assignment MemberReference _lastY MemberReference y = StatementExpression MethodInvocation me consume MethodDeclaration /**
     * Return the meta type of the element that this mode is designed to
     * create. In the case the dependency metatype.
     * @return the dependency meta type.
     */ Modifier protected abstract ReferenceType Object getMetaType MethodDeclaration /**
     * Called after the edge has been drawn from a source and dropped to a
     * destination. Return true if this drop is valid.
     * The default is true, subclasses should override this with their own
     * logic.
     * @param source the source fig
     * @param dest the dest fig
     * @return true if drop on an edge is valid.
     */ Modifier protected BasicType boolean isConnectionValid FormalParameter ReferenceType Fig source FormalParameter ReferenceType Fig dest ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getMetaType MethodInvocation source getOwner MethodInvocation dest getOwner Literal true isConnectionValid getUmlFactory ReferenceType ModeCreatePolyEdge",1
1445,1445,,0
266,266,"CompilationUnit PackageDeclaration org.argouml.language.java.generator Import java.util.ArrayList Import java.util.Iterator Import java.util.List ClassDeclaration /**
   This piece of code is a composition of several adjacent pieces of
   code. The code piece can have holes.
*/ CompositeCodePiece FieldDeclaration /** The code pieces this code piece consists of. */ Modifier private ReferenceType List TypeArgument ReferenceType CodePiece VariableDeclarator codePieces ConstructorDeclaration Modifier public /**
     * Create a composite piece of code.
     * 
     * @param codePiece
     *            A starter code piece.
     */ CompositeCodePiece FormalParameter ReferenceType CodePiece codePiece StatementExpression Assignment MemberReference codePieces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType CodePiece = IfStatement BinaryOperation != MemberReference codePiece Literal null BlockStatement StatementExpression MethodInvocation codePieces MemberReference codePiece add End MethodDeclaration /**
     * Append a code piece to the end.
     *
     * @param codePiece the given codepiece
     */ Modifier public add FormalParameter ReferenceType CodePiece codePiece IfStatement BinaryOperation != MemberReference codePiece Literal null BlockStatement StatementExpression MethodInvocation codePieces MemberReference codePiece add End MethodDeclaration Modifier public ReferenceType StringBuffer getText LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType CodePiece VariableDeclarator i MethodInvocation codePieces iterator LocalVariableDeclaration ReferenceType CodePiece VariableDeclarator cp MethodInvocation i next LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator text MethodInvocation cp getText LocalVariableDeclaration BasicType int VariableDeclarator prevEnd MethodInvocation cp getEndPosition LocalVariableDeclaration BasicType int VariableDeclarator prevLine MethodInvocation cp getEndLine WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference cp MethodInvocation i next = LocalVariableDeclaration BasicType int VariableDeclarator spaces BinaryOperation - MethodInvocation cp getStartPosition MemberReference prevEnd IfStatement BinaryOperation != MemberReference prevLine MethodInvocation cp getStartLine BlockStatement StatementExpression MethodInvocation text Literal '\n' append StatementExpression MemberReference -- spaces End ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference spaces MemberReference ++ j BlockStatement StatementExpression MethodInvocation text Literal ' ' append End StatementExpression MethodInvocation text MethodInvocation cp MethodInvocation toString getText append StatementExpression Assignment MemberReference prevEnd MethodInvocation cp getEndPosition = StatementExpression Assignment MemberReference prevLine MethodInvocation cp getEndLine = End ReturnStatement MemberReference text MethodDeclaration Modifier public BasicType int getStartPosition IfStatement BinaryOperation > MethodInvocation codePieces size Literal 0 BlockStatement ReturnStatement MethodInvocation codePieces MethodInvocation getStartPosition Literal 0 get End ReturnStatement Literal 0 MethodDeclaration Modifier public BasicType int getEndPosition IfStatement BinaryOperation > MethodInvocation codePieces size Literal 0 BlockStatement ReturnStatement MethodInvocation codePieces MethodInvocation getEndPosition BinaryOperation - MethodInvocation codePieces size Literal 1 get End ReturnStatement Literal 0 MethodDeclaration Modifier public BasicType int getStartLine IfStatement BinaryOperation > MethodInvocation codePieces size Literal 0 BlockStatement ReturnStatement MethodInvocation codePieces MethodInvocation getStartLine Literal 0 get End ReturnStatement Literal 0 MethodDeclaration Modifier public BasicType int getEndLine IfStatement BinaryOperation > MethodInvocation codePieces size Literal 0 BlockStatement ReturnStatement MethodInvocation codePieces MethodInvocation getEndLine BinaryOperation - MethodInvocation codePieces size Literal 1 get End ReturnStatement Literal 0 ReferenceType CodePiece",0
1030,1030,,1
1261,1261,,1
1587,1587,,0
459,459,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 *
 * @author MarkusK
 *
 */ UMLIncludeBaseListModel ConstructorDeclaration Modifier public UMLIncludeBaseListModel StatementExpression SuperConstructorInvocation Literal ""base"" StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal ""ownedElement"" addClassModelEventListener getPump MethodDeclaration Modifier protected buildModelList IfStatement MethodInvocation ! isEmpty StatementExpression MethodInvocation removeAllElements End StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBase getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAUseCase getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference element getNamespace getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getNamespace getFacade ReferenceType UMLModelElementListModel2",1
788,788,"CompilationUnit PackageDeclaration org.argouml.ui Import javax.swing.Action Import javax.swing.Icon Import javax.swing.JCheckBoxMenuItem Import javax.swing.JMenu Import javax.swing.JMenuItem Import javax.swing.JRadioButtonMenuItem Import javax.swing.SwingConstants Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * An extension of the standard swing JMenu class which provides
 * additional Argo support.
 *
 */ ArgoJMenu ConstructorDeclaration Modifier public /**
     * Constructs a new ArgoJMenu with the key to localize.
     *
     * @param key The key to localize.
     */ ArgoJMenu FormalParameter ReferenceType String key StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation This MemberReference key localize MethodDeclaration /**
     * Sets a menu item's text and mnemonic values using the specified resource
     * key.
     *
     * @param   menuItem    the menu or menu item to localize
     * @param   key         the resource string to find
     */ Modifier public final static localize FormalParameter ReferenceType JMenuItem menuItem FormalParameter ReferenceType String key StatementExpression MethodInvocation menuItem MethodInvocation Translator MemberReference key localize setText LocalVariableDeclaration ReferenceType String VariableDeclarator localMnemonic MethodInvocation Translator BinaryOperation + MemberReference key Literal "".mnemonic"" localize IfStatement BinaryOperation && BinaryOperation != MemberReference localMnemonic Literal null BinaryOperation == MethodInvocation localMnemonic length Literal 1 BlockStatement StatementExpression MethodInvocation menuItem MethodInvocation localMnemonic Literal 0 charAt setMnemonic End MethodDeclaration /**
     * Creates a new checkbox menu item attached to the specified
     * action object and appends it to the end of this menu.
     *
     * @param     a     the Action for the checkbox menu item to be added
     * @return          the new checkbox menu item
     */ Modifier public ReferenceType JCheckBoxMenuItem addCheckItem FormalParameter ReferenceType Action a LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation a MemberReference Action NAME getValue LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon Cast ReferenceType Icon MethodInvocation a MemberReference Action SMALL_ICON getValue LocalVariableDeclaration ReferenceType Boolean VariableDeclarator selected Cast ReferenceType Boolean MethodInvocation a Literal ""SELECTED"" getValue LocalVariableDeclaration ReferenceType JCheckBoxMenuItem VariableDeclarator mi ClassCreator ReferenceType JCheckBoxMenuItem MemberReference name MemberReference icon BinaryOperation || BinaryOperation == MemberReference selected Literal null MethodInvocation selected booleanValue StatementExpression MethodInvocation mi MemberReference SwingConstants RIGHT setHorizontalTextPosition StatementExpression MethodInvocation mi MemberReference SwingConstants CENTER setVerticalTextPosition StatementExpression MethodInvocation mi MethodInvocation a isEnabled setEnabled StatementExpression MethodInvocation mi MemberReference a addActionListener StatementExpression MethodInvocation MemberReference mi add StatementExpression MethodInvocation a MethodInvocation MemberReference mi createActionChangeListener addPropertyChangeListener ReturnStatement MemberReference mi MethodDeclaration /**
     * Creates a new radiobutton menu item attached to the specified
     * action object and appends it to the end of this menu.
     *
     * @param     a     the Action for the radiobutton menu item to be added
     * @return          the new radiobutton menu item
     */ Modifier public ReferenceType JRadioButtonMenuItem addRadioItem FormalParameter ReferenceType Action a LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation a MemberReference Action NAME getValue LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon Cast ReferenceType Icon MethodInvocation a MemberReference Action SMALL_ICON getValue LocalVariableDeclaration ReferenceType Boolean VariableDeclarator selected Cast ReferenceType Boolean MethodInvocation a Literal ""SELECTED"" getValue LocalVariableDeclaration ReferenceType JRadioButtonMenuItem VariableDeclarator mi ClassCreator ReferenceType JRadioButtonMenuItem MemberReference name MemberReference icon BinaryOperation || BinaryOperation == MemberReference selected Literal null MethodInvocation selected booleanValue StatementExpression MethodInvocation mi MemberReference SwingConstants RIGHT setHorizontalTextPosition StatementExpression MethodInvocation mi MemberReference SwingConstants CENTER setVerticalTextPosition StatementExpression MethodInvocation mi MethodInvocation a isEnabled setEnabled StatementExpression MethodInvocation mi MemberReference a addActionListener StatementExpression MethodInvocation MemberReference mi add StatementExpression MethodInvocation a MethodInvocation MemberReference mi createActionChangeListener addPropertyChangeListener ReturnStatement MemberReference mi FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 8318663502924796474L ReferenceType JMenu",0
813,813,"CompilationUnit PackageDeclaration org.argouml.kernel Import java.beans.PropertyChangeEvent InterfaceDeclaration Modifier public /**
 * This appears to be a gui specific class, therefore it does not belong in
 * the Kernel.
 */ DelayedVChangeListener MethodDeclaration /**
     * @param pce the event
     */ Modifier public delayedVetoableChange FormalParameter ReferenceType PropertyChangeEvent pce",0
657,657,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.beans.PropertyVetoException Import javax.swing.JTextField Import javax.swing.event.DocumentEvent Import javax.swing.event.DocumentListener Import javax.swing.text.BadLocationException Import org.apache.log4j.Logger Import org.argouml.ui.targetmanager.TargetEvent Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram ClassDeclaration /**
 * This is the model for the diagram name text box (JTextField)
 * shown on the property panel of a Diagram. <p>
 *
 * It handles changes by the user in the text-entry field,
 * by updating the name of the diagram.
 * And it handles target changes (i.e. when the user selects another diagram)
 * by updating the name shown in the namefield.
 *
 * @author Michiel
 */ DiagramNameDocument FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType DiagramNameDocument getLogger FieldDeclaration Modifier private ReferenceType JTextField VariableDeclarator field FieldDeclaration Modifier private BasicType boolean VariableDeclarator stopEvents Literal false ConstructorDeclaration Modifier public /**
     * The constructor.
     */ DiagramNameDocument FormalParameter ReferenceType JTextField theField StatementExpression Assignment MemberReference field MemberReference theField = LocalVariableDeclaration ReferenceType TargetManager VariableDeclarator tm MethodInvocation TargetManager getInstance StatementExpression MethodInvocation tm This addTargetListener StatementExpression MethodInvocation MethodInvocation tm getTarget setTarget MethodDeclaration /**
     * If the currently selected object is a diagram,
     * then update the name-field. <p>
     *
     * MVW: I added the stopEvents mechanism, because otherwise
     * updating the field causes the UML model to be adapted!
     *
     * @param t the currently selected object
     */ Modifier private setTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference stopEvents Literal true = StatementExpression MethodInvocation field Cast ReferenceType ArgoDiagram MemberReference t setText StatementExpression Assignment MemberReference stopEvents Literal false = End MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget MethodDeclaration Modifier public insertUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation MemberReference e update MethodDeclaration Modifier public removeUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation MemberReference e update MethodDeclaration Modifier public changedUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation MemberReference e update MethodDeclaration /**
     * If a new name has been typed by the user, then
     * let's update the name of the diagram.
     *
     * @param e the documentevent from the Documentlistener interface
     */ Modifier private update FormalParameter ReferenceType DocumentEvent e IfStatement MemberReference ! stopEvents BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d Cast ReferenceType ArgoDiagram MemberReference target TryStatement LocalVariableDeclaration BasicType int VariableDeclarator documentLength MethodInvocation e MethodInvocation getLength getDocument LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation e MethodInvocation Literal 0 MemberReference documentLength getText getDocument LocalVariableDeclaration ReferenceType String VariableDeclarator oldName MethodInvocation d getName IfStatement MethodInvocation ! oldName MemberReference newName equals BlockStatement StatementExpression MethodInvocation d MemberReference newName setName End CatchClause CatchClauseParameter PropertyVetoException pe StatementExpression MethodInvocation LOG MemberReference pe debug CatchClause CatchClauseParameter BadLocationException ble StatementExpression MethodInvocation LOG MemberReference ble debug End End ReferenceType DocumentListener ReferenceType TargetListener",0
1230,1230,,0
609,609,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.cognitive.ui.GoalsDialog Import org.argouml.i18n.Translator Import org.tigris.gef.undo.UndoableAction ClassDeclaration /**
 * Action to open the Goals dialog.
 */ ActionOpenGoals ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionOpenGoals StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.design-goals"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.design-goals"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType GoalsDialog VariableDeclarator d ClassCreator ReferenceType GoalsDialog StatementExpression MethodInvocation d Literal true setVisible ReferenceType UndoableAction",0
1157,1157,,0
311,311,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.event.ActionEvent Import java.io.File Import javax.swing.AbstractAction Import javax.swing.JFileChooser Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.persistence.PersistenceManager Import org.argouml.persistence.ProjectFileView Import org.argouml.util.ArgoFrame ClassDeclaration Modifier public final /**
 * Exports the xmi of a project to a file choosen by the user.
 * @author jaap.branderhorst@xs4all.nl
 * Jun 7, 2003
 */ ActionExportXMI ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionExportXMI StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.export-project-as-xmi"" localize MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType PersistenceManager VariableDeclarator pm MethodInvocation PersistenceManager getInstance LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation chooser MethodInvocation Translator Literal ""action.export-project-as-xmi"" localize setDialogTitle StatementExpression MethodInvocation chooser MethodInvocation ProjectFileView getInstance setFileView StatementExpression MethodInvocation chooser MethodInvocation Translator Literal ""filechooser.export"" localize setApproveButtonText StatementExpression MethodInvocation chooser Literal true setAcceptAllFileFilterUsed StatementExpression MethodInvocation pm MemberReference chooser setXmiFileChooserFilter LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation Configuration MemberReference PersistenceManager KEY_PROJECT_NAME_PATH getString IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression Assignment MemberReference fn MethodInvocation PersistenceManager MethodInvocation MemberReference fn getBaseName getInstance = StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile End LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation chooser MethodInvocation ArgoFrame getInstance showSaveDialog IfStatement BinaryOperation == MemberReference result MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile IfStatement BinaryOperation != MemberReference theFile Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation theFile getName StatementExpression MethodInvocation Configuration MemberReference PersistenceManager KEY_PROJECT_NAME_PATH MethodInvocation PersistenceManager MethodInvocation MethodInvocation theFile getPath getBaseName getInstance setString StatementExpression Assignment MemberReference name MethodInvocation pm MemberReference name fixXmiExtension = StatementExpression Assignment MemberReference theFile ClassCreator ReferenceType File MethodInvocation theFile getParent MemberReference name = StatementExpression MethodInvocation ProjectBrowser MethodInvocation Literal false MemberReference theFile trySaveWithProgressMonitor getInstance End End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 3445739054369264482L ReferenceType AbstractAction",0
1327,1327,,0
326,326,"CompilationUnit PackageDeclaration org.argouml.ui Import javax.swing.JLabel Import javax.swing.JTextField Import javax.swing.event.DocumentEvent Import javax.swing.text.Document Import org.argouml.i18n.Translator Import org.tigris.gef.presentation.FigRRect ClassDeclaration Modifier public /**
 * Provide a stylepanel for rounded rectancles in order to set the rounding edge
 * level.
 *
 */ StylePanelFigRRect FieldDeclaration Modifier private ReferenceType JLabel VariableDeclarator roundingLabel ClassCreator ReferenceType JLabel BinaryOperation + MethodInvocation Translator Literal ""label.stylepane.rounding"" localize Literal "": "" FieldDeclaration Modifier private ReferenceType JTextField VariableDeclarator roundingField ClassCreator ReferenceType JTextField ConstructorDeclaration Modifier public /**
     * construct a default panel for rounded rectancular elements.
     *
     */ StylePanelFigRRect StatementExpression SuperConstructorInvocation LocalVariableDeclaration ReferenceType Document VariableDeclarator roundingDoc MethodInvocation roundingField getDocument StatementExpression MethodInvocation roundingDoc This addDocumentListener StatementExpression MethodInvocation roundingLabel MemberReference roundingField setLabelFor StatementExpression MethodInvocation MemberReference roundingLabel add StatementExpression MethodInvocation MemberReference roundingField add MethodDeclaration Modifier public refresh StatementExpression SuperMethodInvocation refresh LocalVariableDeclaration ReferenceType String VariableDeclarator roundingStr BinaryOperation + Cast ReferenceType FigRRect MethodInvocation getPanelTarget Literal """" StatementExpression MethodInvocation roundingField MemberReference roundingStr setText MethodDeclaration /**
     * Set the corner rounding.
     */ Modifier protected setTargetRounding IfStatement BinaryOperation == MethodInvocation getPanelTarget Literal null ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator roundingStr MethodInvocation roundingField getText IfStatement BinaryOperation == MethodInvocation roundingStr length Literal 0 ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator r MethodInvocation Integer MemberReference roundingStr parseInt StatementExpression Cast ReferenceType FigRRect MethodInvocation getPanelTarget StatementExpression MethodInvocation MethodInvocation endTrans getPanelTarget MethodDeclaration /**
     * react to changes in the rounding field text box.
     *
     * {@inheritDoc}
     */ Modifier public insertUpdate FormalParameter ReferenceType DocumentEvent e LocalVariableDeclaration ReferenceType Document VariableDeclarator roundingDoc MethodInvocation roundingField getDocument IfStatement BinaryOperation == MethodInvocation e getDocument MemberReference roundingDoc StatementExpression MethodInvocation setTargetRounding End StatementExpression SuperMethodInvocation MemberReference e insertUpdate ReferenceType StylePanelFig",0
779,779,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Navigate to the owner.
 * @author mkl
 *
 */ ActionNavigateOwner MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getOwner getFacade ReferenceType AbstractActionNavigate",0
1170,1170,,1
1279,1279,,0
1364,1364,,0
1074,1074,,1
1565,1565,,0
877,877,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager ClassDeclaration Modifier public /**
 * Action to delete modelelements from the model without navigating
 * to/from them.  Used in UMLMutableList for deletion of modelelements
 * from the list.
 * @see org.argouml.uml.ui.ActionDeleteModelElements
 * @since Oct 2, 2002
 * @author jaap.branderhorst@xs4all.nl
 * @stereotype singleton
 */ ActionRemoveModelElement FieldDeclaration /**
     * The singleton.
     */ Modifier public final static ReferenceType ActionRemoveModelElement VariableDeclarator SINGLETON ClassCreator ReferenceType ActionRemoveModelElement ConstructorDeclaration Modifier protected /**
     * Constructor for ActionRemoveModelElement.
     */ ActionRemoveModelElement StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MethodInvocation getObjectToRemove Literal null MethodInvocation ActionDeleteModelElements MethodInvocation getObjectToRemove sureRemove StatementExpression MethodInvocation p MethodInvocation getObjectToRemove moveToTrash End StatementExpression MethodInvocation Literal null setObjectToRemove MethodDeclaration Modifier public BasicType boolean isEnabled ReturnStatement BinaryOperation != MethodInvocation getObjectToRemove Literal null ReferenceType AbstractActionRemoveElement",0
89,89,"CompilationUnit PackageDeclaration org.argouml.language.java.generator Import java.io.BufferedReader Import java.io.BufferedWriter Import java.io.IOException Import java.util.List Import java.util.Stack Import org.argouml.model.Model ClassDeclaration /**
 * This code piece represents the end of a class or an interface.
 *
 * JavaRE - Code generation and reverse engineering for UML and Java
 *
 * @author Marcus Andersson andersson@users.sourceforge.net
 */ ClassifierEndCodePiece FieldDeclaration /**
     * The curly bracket at the end.
     */ Modifier private ReferenceType CodePiece VariableDeclarator bracket ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param br The curly bracket at the end.
     */ ClassifierEndCodePiece FormalParameter ReferenceType CodePiece br StatementExpression Assignment MemberReference bracket MemberReference br = MethodDeclaration Modifier public ReferenceType StringBuffer getText ReturnStatement MethodInvocation bracket getText MethodDeclaration Modifier public BasicType int getStartPosition ReturnStatement MethodInvocation bracket getStartPosition MethodDeclaration Modifier public BasicType int getEndPosition ReturnStatement MethodInvocation bracket getEndPosition MethodDeclaration Modifier public BasicType int getStartLine ReturnStatement MethodInvocation bracket getStartLine MethodDeclaration Modifier public BasicType int getEndLine ReturnStatement MethodInvocation bracket getEndLine MethodDeclaration Modifier public write FormalParameter ReferenceType BufferedReader reader FormalParameter ReferenceType BufferedWriter writer FormalParameter ReferenceType Stack TypeArgument ReferenceType ParseState parseStateStack IOException LocalVariableDeclaration ReferenceType ParseState VariableDeclarator parseState MethodInvocation parseStateStack pop LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier MethodInvocation parseState getClassifier LocalVariableDeclaration ReferenceType List VariableDeclarator newFeatures MethodInvocation parseState getNewFeaturesList LocalVariableDeclaration ReferenceType List VariableDeclarator newInnerClasses MethodInvocation parseState getNewInnerClassesList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator mFeature MemberReference newFeatures BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference mFeature isAOperation getFacade BlockStatement StatementExpression MethodInvocation CodeGenerator MemberReference mFeature MemberReference mClassifier MemberReference reader MemberReference writer generateOperation IfStatement MethodInvocation Model MethodInvocation MemberReference mFeature isAAttribute getFacade BlockStatement StatementExpression MethodInvocation CodeGenerator MemberReference mFeature MemberReference mClassifier MemberReference reader MemberReference writer generateAttribute End End End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference newInnerClasses BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade BlockStatement StatementExpression MethodInvocation CodeGenerator MemberReference element MemberReference reader MemberReference writer generateClass IfStatement MethodInvocation Model MethodInvocation MemberReference element isAInterface getFacade BlockStatement StatementExpression MethodInvocation CodeGenerator MemberReference element MemberReference reader MemberReference writer generateInterface End End End LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb MethodInvocation GeneratorJava MethodInvocation ClassCreator ReferenceType StringBuffer Literal 2 MemberReference mClassifier appendClassifierEnd getInstance StatementExpression MethodInvocation writer MethodInvocation sb toString write StatementExpression MethodInvocation MemberReference reader Literal null ffCodePiece ReferenceType NamedCodePiece",0
227,227,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * Well-formedness rule [2] for MAssociationEnd. See page 2-45 of UML
 * chapter 2: Semantics. OMG document UML V1.3 June 1999.
 *
 * @author jrobbins
 */ CrMultiComposite ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMultiComposite StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision CONTAINMENT addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SEMANTICS setKnowledgeTypes StatementExpression MethodInvocation Literal ""aggregation"" addTrigger StatementExpression MethodInvocation Literal ""multiplicity"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration BasicType boolean VariableDeclarator problem MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAAssociationEnd getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dm isComposite getFacade BlockStatement IfStatement BinaryOperation > MethodInvocation Model MethodInvocation MemberReference dm getUpper getFacade Literal 1 BlockStatement StatementExpression Assignment MemberReference problem MemberReference PROBLEM_FOUND = End End End ReturnStatement MemberReference problem MethodDeclaration Modifier public ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizAssocComposite ReferenceType CrUML",0
1369,1369,,0
1575,1575,,0
29,29,"CompilationUnit PackageDeclaration org.argouml.ui.targetmanager InterfaceDeclaration Modifier public /**
 * Marker interface to indicate that some Swing view element (such as a
 * JList or a JComboBox) has a Model that implements TargetListener. <p>
 *
 * UMLLinkedList is such an implementor. Via this interface it is
 * easy to collect all targetlisteners on a property panel as is done in the
 * setTarget() method of the class PropPanel
 * (see registrateTargetListeners method).<p>
 *
 * @author jaap.branderhorst@xs4all.nl
 */ TargettableModelView MethodDeclaration /**
     * Returns the Swing model that implements targetlistener.
     * @return the Swing model
     */ Modifier public ReferenceType TargetListener getTargettableModel",0
846,846,"CompilationUnit PackageDeclaration org.argouml.notation Import java.beans.PropertyChangeListener Import java.lang.reflect.Constructor Import java.lang.reflect.InvocationTargetException Import java.lang.reflect.Method Import java.util.HashMap Import java.util.Map Import org.apache.log4j.Logger ClassDeclaration Modifier public final /**
 *  The NotationProviderFactory2 is a singleton, 
 *  since it is the accesspoint for all Figs 
 *  to access the textual representation of modelobjects, 
 *  and since plugin modules can add extra languages.
 *  
 * @author mvw@tigris.org
 */ NotationProviderFactory2 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType NotationProviderFactory2 getLogger FieldDeclaration Modifier private static ReferenceType String VariableDeclarator currentLanguage FieldDeclaration /**
     * TYPE_NAME the name of the modelelement, e.g. class, package, state
     */ Modifier public final static BasicType int VariableDeclarator TYPE_NAME Literal 1 FieldDeclaration /**
     * TYPE_TRANSITION the main text shown above the transition.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_TRANSITION Literal 2 FieldDeclaration /**
     * TYPE_STATEBODY the multiline text shown inside the state body.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_STATEBODY Literal 3 FieldDeclaration /**
     * TYPE_ACTIONSTATE the text shown in an actionstate.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_ACTIONSTATE Literal 4 FieldDeclaration /**
     * TYPE_ATTRIBUTE the text shown in a attribute compartment (1 attrib only).
     */ Modifier public final static BasicType int VariableDeclarator TYPE_ATTRIBUTE Literal 5 FieldDeclaration /**
     * TYPE_OPERATION the text shown in a operation compartment (1 oper only).
     */ Modifier public final static BasicType int VariableDeclarator TYPE_OPERATION Literal 6 FieldDeclaration /**
     * TYPE_OBJECT the text shown on an object.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_OBJECT Literal 7 FieldDeclaration /**
     * TYPE_COMPONENTINSTANCE the text shown on a componentInstance.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_COMPONENTINSTANCE Literal 8 FieldDeclaration /**
     * TYPE_NODEINSTANCE the text shown on a componentInstance.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_NODEINSTANCE Literal 9 FieldDeclaration /**
     * TYPE_TYPE_OBJECTFLOWSTATE_TYPE the text shown on a 
     * objectflowstate's type, i.e. its classifier name.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_OBJECTFLOWSTATE_TYPE Literal 10 FieldDeclaration /**
     * TYPE_OBJECTFLOWSTATE_STATE the text shown on a 
     * objectflowstate's state.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_OBJECTFLOWSTATE_STATE Literal 11 FieldDeclaration /**
     * TYPE_CALLSTATE the text shown on a 
     * callstate's state.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_CALLSTATE Literal 12 FieldDeclaration /**
     * TYPE_CLASSIFIERROLE the text shown on a 
     * classifierrole.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_CLASSIFIERROLE Literal 13 FieldDeclaration /**
     * TYPE_MESSAGE the text shown on a Message 
     * in a Collaborations diagram.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_MESSAGE Literal 14 FieldDeclaration /**
     * TYPE_EXTENSION_POINT the text shown on a usecase
     * representing the extensionpoint.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_EXTENSION_POINT Literal 15 FieldDeclaration /**
     * The text shown at the association end that represents the role.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_ASSOCIATION_END_NAME Literal 16 FieldDeclaration /**
     * The text shown for the association role name.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_ASSOCIATION_ROLE Literal 17 FieldDeclaration /**
     * The text shown for the association role name.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_ASSOCIATION_NAME Literal 18 FieldDeclaration /**
     * The text shown for a multiplicity.
     */ Modifier public final static BasicType int VariableDeclarator TYPE_MULTIPLICITY Literal 19 FieldDeclaration /**
     * defaultLanguage the Notation language used by default, i.e. UML
     */ Modifier private ReferenceType NotationName VariableDeclarator defaultLanguage FieldDeclaration /**
     * allLanguages is a HashMap with as key the notationName,
     * and as value a second HashMap. This latter HashMap has as key the ""type""
     * converted to Integer, and as value the provider (NotationProvider).
     */ Modifier private ReferenceType Map TypeArgument ReferenceType NotationName TypeArgument ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Class VariableDeclarator allLanguages FieldDeclaration /**
     * The instance is the singleton.
     */ Modifier private static ReferenceType NotationProviderFactory2 VariableDeclarator instance ConstructorDeclaration Modifier private /**
     * The constructor.
     */ NotationProviderFactory2 StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference allLanguages ClassCreator ReferenceType HashMap TypeArgument ReferenceType NotationName TypeArgument ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Class = MethodDeclaration /**
     * @return returns the singleton instance
     */ Modifier public static ReferenceType NotationProviderFactory2 getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType NotationProviderFactory2 = End ReturnStatement MemberReference instance MethodDeclaration /**
     * Get a NotationProvider for the given language.
     * 
     * @param type the provider type
     * @return the provider
     * @param object the constructor parameter
     */ Modifier public ReferenceType NotationProvider getNotationProvider FormalParameter BasicType int type FormalParameter ReferenceType Object object LocalVariableDeclaration ReferenceType NotationName VariableDeclarator name MethodInvocation Notation MemberReference currentLanguage findNotation ReturnStatement MethodInvocation MemberReference type MemberReference object MemberReference name getNotationProvider MethodDeclaration /**
     * Get a NotationProvider for the current project.
     * 
     * @param type the provider type
     * @param object the constructor parameter
     * @param name the name of the notation language to use
     * @return the provider
     */ Modifier private ReferenceType NotationProvider getNotationProvider FormalParameter BasicType int type FormalParameter ReferenceType Object object FormalParameter ReferenceType NotationName name LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation MemberReference type MemberReference name getNotationProviderClass IfStatement BinaryOperation != MemberReference clazz Literal null BlockStatement TryStatement TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator mp ArrayInitializer LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation clazz Literal ""getInstance"" MemberReference mp getMethod ReturnStatement Cast ReferenceType NotationProvider MethodInvocation m Literal null Cast ReferenceType Object MemberReference mp invoke CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType Class VariableDeclarator cp ArrayInitializer ClassReference ReferenceType Object LocalVariableDeclaration ReferenceType Constructor VariableDeclarator constructor MethodInvocation clazz MemberReference cp getConstructor LocalVariableDeclaration ReferenceType Object VariableDeclarator params ArrayInitializer MemberReference object ReturnStatement Cast ReferenceType NotationProvider MethodInvocation constructor MemberReference params newInstance CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation LOG Literal ""Exception caught"" MemberReference e error CatchClause CatchClauseParameter NoSuchMethodException e StatementExpression MethodInvocation LOG Literal ""Exception caught"" MemberReference e error CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression MethodInvocation LOG Literal ""Exception caught"" MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG Literal ""Exception caught"" MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG Literal ""Exception caught"" MemberReference e error CatchClause CatchClauseParameter InvocationTargetException e StatementExpression MethodInvocation LOG Literal ""Exception caught"" MemberReference e error End ReturnStatement Literal null MethodDeclaration /**
     * Create a new NotationProvider.
     * 
     * @param type the provider type
     * @return the provider
     * @param object the constructor parameter
     * @param listener the fig
     * that refreshes after the NotationProvider has changed
     */ Modifier public ReferenceType NotationProvider getNotationProvider FormalParameter BasicType int type FormalParameter ReferenceType Object object FormalParameter ReferenceType PropertyChangeListener listener LocalVariableDeclaration ReferenceType NotationName VariableDeclarator name MethodInvocation Notation MemberReference currentLanguage findNotation ReturnStatement MethodInvocation MemberReference type MemberReference object MemberReference listener MemberReference name getNotationProvider MethodDeclaration /**
     * Get a NotationProvider for the current project.
     * 
     * @param type the provider type
     * @param object the constructor parameter
     * @param listener the fig
     * that refreshes after the NotationProvider has changed
     * @param name the name of the notation language to use
     * @return the provider
     */ Modifier private ReferenceType NotationProvider getNotationProvider FormalParameter BasicType int type FormalParameter ReferenceType Object object FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType NotationName name LocalVariableDeclaration ReferenceType NotationProvider VariableDeclarator p MethodInvocation MemberReference type MemberReference object MemberReference name getNotationProvider StatementExpression MethodInvocation p MemberReference listener MemberReference object initialiseListener ReturnStatement MemberReference p MethodDeclaration /**
     * This function looks for the requested notation provider type.
     * It is guaranteed to deliver:<ul>
     * <li>the requested type of the requested notation language,
     * <li>the requested type of the default notation, or
     * <li><code>null</code>.
     * </ul>
     *
     * @param type the provider type
     * @param name the context (i.e. the notation name)
     * @return the provider
     */ Modifier private ReferenceType Class getNotationProviderClass FormalParameter BasicType int type FormalParameter ReferenceType NotationName name IfStatement MethodInvocation allLanguages MemberReference name containsKey BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Class VariableDeclarator t MethodInvocation allLanguages MemberReference name get IfStatement MethodInvocation t MethodInvocation Integer MemberReference type valueOf containsKey BlockStatement ReturnStatement MethodInvocation t MethodInvocation Integer MemberReference type valueOf get End End LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Class VariableDeclarator t MethodInvocation allLanguages MemberReference defaultLanguage get IfStatement BinaryOperation && BinaryOperation != MemberReference t Literal null MethodInvocation t MethodInvocation Integer MemberReference type valueOf containsKey BlockStatement ReturnStatement MethodInvocation t MethodInvocation Integer MemberReference type valueOf get End ReturnStatement Literal null MethodDeclaration /**
     * @param type the provider type
     * @param notationName the name of the notation (language)
     * @param provider the provider
     */ Modifier public addNotationProvider FormalParameter BasicType int type FormalParameter ReferenceType NotationName notationName FormalParameter ReferenceType Class provider IfStatement MethodInvocation allLanguages MemberReference notationName containsKey BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Class VariableDeclarator t MethodInvocation allLanguages MemberReference notationName get StatementExpression MethodInvocation t MethodInvocation Integer MemberReference type valueOf MemberReference provider put BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Integer TypeArgument ReferenceType Class VariableDeclarator t ClassCreator ReferenceType HashMap TypeArgument ReferenceType Integer TypeArgument ReferenceType Class StatementExpression MethodInvocation t MethodInvocation Integer MemberReference type valueOf MemberReference provider put StatementExpression MethodInvocation allLanguages MemberReference notationName MemberReference t put End MethodDeclaration /**
     * @param notationName the UML notation that is to be used as default
     *                     if no other is found
     */ Modifier public setDefaultNotation FormalParameter ReferenceType NotationName notationName IfStatement MethodInvocation allLanguages MemberReference notationName containsKey BlockStatement StatementExpression Assignment MemberReference defaultLanguage MemberReference notationName = End MethodDeclaration /**
     * We need this to remove modules.
     *
     * @param notationName the notation to be removed
     * @return true if the notation was removed
     */ Modifier public BasicType boolean removeNotation FormalParameter ReferenceType NotationName notationName IfStatement BinaryOperation == MemberReference defaultLanguage MemberReference notationName BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation allLanguages MemberReference notationName containsKey BlockStatement ReturnStatement BinaryOperation && BinaryOperation != MethodInvocation allLanguages MemberReference notationName remove Literal null MethodInvocation Notation MemberReference notationName removeNotation End ReturnStatement Literal false MethodDeclaration /**
     * Set the notation language currently used in the Project.
     * 
     * @param theCurrentLanguage the currentLanguage to set
     */ Modifier public static setCurrentLanguage FormalParameter ReferenceType String theCurrentLanguage StatementExpression Assignment MemberReference NotationProviderFactory2 currentLanguage MemberReference theCurrentLanguage =",0
375,375,"CompilationUnit PackageDeclaration org.argouml.model.euml Import java.util.List Import org.argouml.model.AbstractModelFactory Import org.argouml.model.CoreFactory Import org.argouml.model.NotImplementedException Import org.eclipse.emf.edit.domain.EditingDomain Import org.eclipse.uml2.uml.Abstraction Import org.eclipse.uml2.uml.AggregationKind Import org.eclipse.uml2.uml.Artifact Import org.eclipse.uml2.uml.Association Import org.eclipse.uml2.uml.AssociationClass Import org.eclipse.uml2.uml.BehavioralFeature Import org.eclipse.uml2.uml.BehavioredClassifier Import org.eclipse.uml2.uml.Classifier Import org.eclipse.uml2.uml.Comment Import org.eclipse.uml2.uml.Component Import org.eclipse.uml2.uml.Constraint Import org.eclipse.uml2.uml.DataType Import org.eclipse.uml2.uml.Dependency Import org.eclipse.uml2.uml.Element Import org.eclipse.uml2.uml.Enumeration Import org.eclipse.uml2.uml.EnumerationLiteral Import org.eclipse.uml2.uml.Generalization Import org.eclipse.uml2.uml.Interface Import org.eclipse.uml2.uml.InterfaceRealization Import org.eclipse.uml2.uml.MultiplicityElement Import org.eclipse.uml2.uml.NamedElement Import org.eclipse.uml2.uml.Namespace Import org.eclipse.uml2.uml.Node Import org.eclipse.uml2.uml.Operation Import org.eclipse.uml2.uml.PackageImport Import org.eclipse.uml2.uml.Parameter Import org.eclipse.uml2.uml.PrimitiveType Import org.eclipse.uml2.uml.Property Import org.eclipse.uml2.uml.Stereotype Import org.eclipse.uml2.uml.TemplateBinding Import org.eclipse.uml2.uml.TemplateParameter Import org.eclipse.uml2.uml.TemplateParameterSubstitution Import org.eclipse.uml2.uml.TemplateSignature Import org.eclipse.uml2.uml.TemplateableElement Import org.eclipse.uml2.uml.Type Import org.eclipse.uml2.uml.UMLFactory Import org.eclipse.uml2.uml.Usage Import org.eclipse.uml2.uml.ValueSpecification Import org.eclipse.uml2.uml.VisibilityKind ClassDeclaration /**
 * The implementation of the CoreFactory for EUML2.
 */ CoreFactoryEUMLImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private final ReferenceType EUMLModelImplementation VariableDeclarator modelImpl FieldDeclaration Modifier private final ReferenceType EditingDomain VariableDeclarator editingDomain ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param implementation
     *                The ModelImplementation.
     */ CoreFactoryEUMLImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = StatementExpression Assignment MemberReference editingDomain MethodInvocation implementation getEditingDomain = MethodDeclaration Modifier public ReferenceType Abstraction buildAbstraction FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object supplier FormalParameter Modifier final ReferenceType Object client IfStatement BinaryOperation || BinaryOperation instanceof MemberReference client ReferenceType NamedElement BinaryOperation instanceof MemberReference supplier ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The client and the supplier "" Literal ""must be NamedElements."" End IfStatement BinaryOperation == Cast ReferenceType NamedElement MemberReference client Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal ""The containing package of the client "" Literal ""must be non-null."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Abstraction VariableDeclarator abstraction MethodInvocation createAbstraction IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation abstraction MemberReference name setName End StatementExpression MethodInvocation abstraction MethodInvocation Cast ReferenceType NamedElement MemberReference supplier add getSuppliers StatementExpression MethodInvocation abstraction MethodInvocation Cast ReferenceType NamedElement MemberReference client add getClients StatementExpression Cast ReferenceType NamedElement MemberReference client StatementExpression MethodInvocation MethodInvocation MemberReference abstraction add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal ""Create the abstraction # between "" Literal ""the client # and the supplier #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference client MemberReference supplier setObjects ReturnStatement Cast ReferenceType Abstraction MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier private ReferenceType Association buildAssociation FormalParameter Modifier final ReferenceType Object type1 FormalParameter Modifier final ReferenceType Boolean navigability1 FormalParameter Modifier final ReferenceType Object aggregationKind1 FormalParameter Modifier final ReferenceType Object type2 FormalParameter Modifier final ReferenceType Boolean navigability2 FormalParameter Modifier final ReferenceType Object aggregationKind2 FormalParameter Modifier final ReferenceType String associationName IfStatement BinaryOperation || BinaryOperation instanceof MemberReference type1 ReferenceType Type BinaryOperation instanceof MemberReference type2 ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The types must be instances of Type."" End IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference aggregationKind1 Literal null BinaryOperation instanceof MemberReference aggregationKind1 ReferenceType AggregationKind BinaryOperation && BinaryOperation != MemberReference aggregationKind2 Literal null BinaryOperation instanceof MemberReference aggregationKind2 ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The aggregations of the association ends"" Literal "" must be instances of AggregationKind."" End IfStatement BinaryOperation == Cast ReferenceType Type MemberReference type1 Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal ""The containing package of the type1"" Literal "" must be non-null."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Association VariableDeclarator association MethodInvocation createAssociation LocalVariableDeclaration ReferenceType Property VariableDeclarator property1 MethodInvocation createAssociationEnd LocalVariableDeclaration ReferenceType Property VariableDeclarator property2 MethodInvocation createAssociationEnd StatementExpression MethodInvocation property1 Cast ReferenceType Type MemberReference type2 setType StatementExpression MethodInvocation property2 Cast ReferenceType Type MemberReference type1 setType StatementExpression MethodInvocation property1 MemberReference association setAssociation StatementExpression MethodInvocation property2 MemberReference association setAssociation IfStatement BinaryOperation != MemberReference aggregationKind1 Literal null BlockStatement StatementExpression MethodInvocation property1 Cast ReferenceType AggregationKind MemberReference aggregationKind1 setAggregation End IfStatement BinaryOperation != MemberReference aggregationKind2 Literal null BlockStatement StatementExpression MethodInvocation property2 Cast ReferenceType AggregationKind MemberReference aggregationKind2 setAggregation End IfStatement BinaryOperation != MemberReference associationName Literal null BlockStatement StatementExpression MethodInvocation association MemberReference associationName setName End IfStatement BinaryOperation == MethodInvocation UMLUtil Cast ReferenceType Type MemberReference type1 getOwnedAttributes Literal null BlockStatement StatementExpression MethodInvocation association MethodInvocation MemberReference property1 add getOwnedEnds BlockStatement StatementExpression MethodInvocation UMLUtil MethodInvocation MemberReference property1 add Cast ReferenceType Type MemberReference type1 getOwnedAttributes End IfStatement BinaryOperation == MethodInvocation UMLUtil Cast ReferenceType Type MemberReference type2 getOwnedAttributes Literal null BlockStatement StatementExpression MethodInvocation association MethodInvocation MemberReference property2 add getOwnedEnds BlockStatement StatementExpression MethodInvocation UMLUtil MethodInvocation MemberReference property2 add Cast ReferenceType Type MemberReference type2 getOwnedAttributes End IfStatement BinaryOperation != MemberReference navigability1 Literal null BlockStatement StatementExpression MethodInvocation property1 MemberReference navigability1 setIsNavigable End IfStatement BinaryOperation != MemberReference navigability2 Literal null BlockStatement StatementExpression MethodInvocation property2 MemberReference navigability2 setIsNavigable End StatementExpression Cast ReferenceType Type MemberReference type1 StatementExpression MethodInvocation MethodInvocation MemberReference association add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the association # between # and #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference type1 MemberReference type2 setObjects ReturnStatement Cast ReferenceType Association MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Association buildAssociation FormalParameter ReferenceType Object fromClassifier FormalParameter ReferenceType Object aggregationKind1 FormalParameter ReferenceType Object toClassifier FormalParameter ReferenceType Object aggregationKind2 FormalParameter ReferenceType Boolean unidirectional IfStatement BinaryOperation != MemberReference unidirectional Literal null BlockStatement ReturnStatement MethodInvocation MemberReference fromClassifier Literal true MemberReference aggregationKind1 MemberReference toClassifier MemberReference ! unidirectional MemberReference aggregationKind2 Literal null buildAssociation BlockStatement ReturnStatement MethodInvocation MemberReference fromClassifier Literal null MemberReference aggregationKind1 MemberReference toClassifier Literal null MemberReference aggregationKind2 Literal null buildAssociation End MethodDeclaration Modifier public ReferenceType Association buildAssociation FormalParameter ReferenceType Object classifier1 FormalParameter ReferenceType Object classifier2 ReturnStatement MethodInvocation MemberReference classifier1 Literal null Literal null MemberReference classifier2 Literal null Literal null Literal null buildAssociation MethodDeclaration Modifier public ReferenceType Association buildAssociation FormalParameter ReferenceType Object c1 FormalParameter BasicType boolean nav1 FormalParameter ReferenceType Object c2 FormalParameter BasicType boolean nav2 FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference c1 MemberReference nav1 Literal null MemberReference c2 MemberReference nav2 Literal null MemberReference name buildAssociation MethodDeclaration Modifier public ReferenceType AssociationClass buildAssociationClass FormalParameter Modifier final ReferenceType Object end1 FormalParameter Modifier final ReferenceType Object end2 IfStatement BinaryOperation || BinaryOperation instanceof MemberReference end1 ReferenceType Type BinaryOperation instanceof MemberReference end2 ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""end1 and end2 must be instances of Type"" End IfStatement BinaryOperation == Cast ReferenceType Type MemberReference end1 Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal ""The containing package of "" Literal ""the end1 must be non-null."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType AssociationClass VariableDeclarator associationClass MethodInvocation createAssociationClass LocalVariableDeclaration ReferenceType Property VariableDeclarator property1 MethodInvocation createAssociationEnd LocalVariableDeclaration ReferenceType Property VariableDeclarator property2 MethodInvocation createAssociationEnd StatementExpression MethodInvocation property1 Cast ReferenceType Type MemberReference end2 setType StatementExpression MethodInvocation property2 Cast ReferenceType Type MemberReference end1 setType StatementExpression MethodInvocation property1 MemberReference associationClass setAssociation StatementExpression MethodInvocation property2 MemberReference associationClass setAssociation StatementExpression Cast ReferenceType Type MemberReference end1 IfStatement BinaryOperation == MethodInvocation UMLUtil Cast ReferenceType Type MemberReference end1 getOwnedAttributes Literal null BlockStatement StatementExpression MethodInvocation associationClass MethodInvocation MemberReference property1 add getOwnedAttributes BlockStatement StatementExpression MethodInvocation UMLUtil MethodInvocation MemberReference property1 add Cast ReferenceType Type MemberReference end1 getOwnedAttributes End IfStatement BinaryOperation == MethodInvocation UMLUtil Cast ReferenceType Type MemberReference end2 getOwnedAttributes Literal null BlockStatement StatementExpression MethodInvocation associationClass MethodInvocation MemberReference property2 add getOwnedAttributes BlockStatement StatementExpression MethodInvocation UMLUtil MethodInvocation MemberReference property2 add Cast ReferenceType Type MemberReference end2 getOwnedAttributes End StatementExpression MethodInvocation MethodInvocation MemberReference associationClass add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the association class # between # and #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference end1 MemberReference end2 setObjects ReturnStatement Cast ReferenceType AssociationClass MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier private ReferenceType Property buildAssociationEnd FormalParameter Modifier final ReferenceType Object assoc FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object type FormalParameter Modifier final ReferenceType Object multi FormalParameter Modifier final ReferenceType Object stereo FormalParameter Modifier final ReferenceType Boolean navigable FormalParameter Modifier final ReferenceType Object order FormalParameter Modifier final ReferenceType Object aggregation FormalParameter Modifier final ReferenceType Object scope FormalParameter Modifier final ReferenceType Object changeable FormalParameter Modifier final ReferenceType Object visibility IfStatement BinaryOperation instanceof MemberReference assoc ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The assoc must be instance of Association."" End IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The type of the property "" Literal ""must be instance of Type."" End IfStatement BinaryOperation && BinaryOperation != MemberReference aggregation Literal null BinaryOperation instanceof MemberReference aggregation ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The aggregation of the property "" Literal ""must be instance of AggregationKind."" End IfStatement BinaryOperation && BinaryOperation != MemberReference visibility Literal null BinaryOperation instanceof MemberReference visibility ReferenceType VisibilityKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The visibility of the property must"" Literal "" be instance of VisibilityKind."" End IfStatement BinaryOperation && BinaryOperation != MemberReference multi Literal null BinaryOperation instanceof MemberReference multi ReferenceType MultiplicityElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The multilicity of the property must"" Literal "" be instance of MultiplicityElement."" End IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference order Literal null BinaryOperation instanceof MemberReference order ReferenceType Boolean BinaryOperation && BinaryOperation != MemberReference changeable Literal null BinaryOperation instanceof MemberReference changeable ReferenceType Boolean BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The isOrdered, isReadOnly attributes of "" Literal ""the property must be instances of Boolean."" End IfStatement BinaryOperation && BinaryOperation != MemberReference stereo Literal null BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""stereo must be instance of Stereotype."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Property VariableDeclarator property MethodInvocation createAssociationEnd StatementExpression MethodInvocation property Cast ReferenceType Type MemberReference type setType StatementExpression MethodInvocation property Cast ReferenceType Association MemberReference assoc setAssociation IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation property MemberReference name setName End IfStatement BinaryOperation != MemberReference navigable Literal null BlockStatement StatementExpression MethodInvocation property MemberReference navigable setIsNavigable IfStatement Cast ReferenceType Boolean MemberReference navigable BlockStatement StatementExpression Cast ReferenceType Association MemberReference assoc End End IfStatement BinaryOperation != MemberReference aggregation Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType AggregationKind MemberReference aggregation setAggregation End IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType VisibilityKind MemberReference visibility setVisibility End IfStatement BinaryOperation != MemberReference multi Literal null BlockStatement IfStatement BinaryOperation != Cast ReferenceType MultiplicityElement MemberReference multi Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType MultiplicityElement MemberReference multi setLowerValue End IfStatement BinaryOperation != Cast ReferenceType MultiplicityElement MemberReference multi Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType MultiplicityElement MemberReference multi setLowerValue End End IfStatement BinaryOperation != MemberReference order Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType Boolean MemberReference order setIsOrdered End IfStatement BinaryOperation != MemberReference changeable Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType Boolean MemberReference changeable setIsReadOnly End IfStatement BinaryOperation != MemberReference stereo Literal null BlockStatement IfStatement MethodInvocation property Cast ReferenceType Stereotype MemberReference stereo isStereotypeApplicable BlockStatement StatementExpression MethodInvocation property Cast ReferenceType Stereotype MemberReference stereo applyStereotype BlockStatement ReturnStatement End End StatementExpression MethodInvocation MethodInvocation MemberReference property add getParams StatementExpression MethodInvocation modelImpl MethodInvocation getRootContainer MethodInvocation Literal true setHoldEvents getModelEventPump LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the association end # of the association #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack IfStatement MethodInvocation run MethodInvocation isEmpty getParams BlockStatement StatementExpression MethodInvocation editingDomain MethodInvocation undo getCommandStack StatementExpression MethodInvocation editingDomain MethodInvocation flush getCommandStack StatementExpression MethodInvocation modelImpl MethodInvocation getRootContainer MethodInvocation clearHeldEvents getModelEventPump StatementExpression MethodInvocation modelImpl MethodInvocation getRootContainer MethodInvocation Literal false setHoldEvents getModelEventPump ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + Literal ""This stereotype cannot be applied "" Literal ""to the association end."" End StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference assoc setObjects StatementExpression MethodInvocation modelImpl MethodInvocation getRootContainer MethodInvocation Literal false setHoldEvents getModelEventPump ReturnStatement Cast ReferenceType Property MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Property buildAssociationEnd FormalParameter ReferenceType Object assoc FormalParameter ReferenceType String name FormalParameter ReferenceType Object type FormalParameter ReferenceType Object multi FormalParameter ReferenceType Object stereo FormalParameter BasicType boolean navigable FormalParameter ReferenceType Object order FormalParameter ReferenceType Object aggregation FormalParameter ReferenceType Object scope FormalParameter ReferenceType Object changeable FormalParameter ReferenceType Object visibility ReturnStatement MethodInvocation MemberReference assoc MemberReference name MemberReference type MemberReference multi MemberReference stereo MemberReference navigable MemberReference order MemberReference aggregation MemberReference scope MemberReference changeable MemberReference visibility buildAssociationEnd MethodDeclaration Modifier public ReferenceType Property buildAssociationEnd FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc ReturnStatement MethodInvocation MemberReference assoc Literal null MemberReference type Literal null Literal null Literal null Literal null Literal null Literal null Literal null Literal null buildAssociationEnd MethodDeclaration Modifier public ReferenceType Property buildAttribute FormalParameter ReferenceType Object model FormalParameter ReferenceType Object type ReturnStatement MethodInvocation MemberReference type buildAttribute2 MethodDeclaration Modifier public ReferenceType Property buildAttribute2 FormalParameter ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The type of the attribute must"" Literal "" be instance of Type."" End LocalVariableDeclaration ReferenceType Property VariableDeclarator property MethodInvocation createAttribute StatementExpression MethodInvocation property Cast ReferenceType Type MemberReference type setType ReturnStatement MemberReference property MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Property buildAttribute FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object model FormalParameter ReferenceType Object type ReturnStatement MethodInvocation MemberReference handle MemberReference type buildAttribute2 MethodDeclaration Modifier public ReferenceType Property buildAttribute2 FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object type IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType Type BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""handle and type must be instances of Type."" End IfStatement BinaryOperation == MethodInvocation UMLUtil Cast ReferenceType Type MemberReference handle getOwnedAttributes Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + BinaryOperation + Literal ""The type "" MethodInvocation handle getClass Literal "" does not support owning attributes."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Property VariableDeclarator property MethodInvocation createAttribute StatementExpression MethodInvocation UMLUtil MethodInvocation MemberReference property add Cast ReferenceType Type MemberReference handle getOwnedAttributes StatementExpression MethodInvocation property Cast ReferenceType Type MemberReference type setType StatementExpression MethodInvocation property Literal ""newAttr"" setName StatementExpression MethodInvocation MethodInvocation MemberReference property add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the attribute # of the type #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference handle setObjects ReturnStatement Cast ReferenceType Property MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration /**
     * Removed from UML2.x, use buildTemplateBinding instead.
     */ Modifier public Annotation Deprecated ReferenceType Object buildBinding FormalParameter ReferenceType Object client FormalParameter ReferenceType Object supplier FormalParameter ReferenceType List arguments ReturnStatement MethodInvocation MemberReference client MemberReference supplier MemberReference arguments buildTemplateBinding MethodDeclaration Modifier public ReferenceType TemplateBinding buildTemplateBinding FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object supplier FormalParameter Modifier final ReferenceType List arguments IfStatement BinaryOperation instanceof MemberReference client ReferenceType TemplateableElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The supplier must be instance of "" Literal ""TemplateableElement."" End IfStatement BinaryOperation instanceof MemberReference supplier ReferenceType TemplateSignature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The supplier must be instance of "" Literal ""TemplateSignature."" End IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType TemplateParameterSubstitution BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The list of arguments must be instances"" Literal "" of TemplateParameterSubstitutions."" End End End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType TemplateBinding VariableDeclarator templateBinding MethodInvocation createTemplateBinding StatementExpression MethodInvocation templateBinding Cast ReferenceType TemplateableElement MemberReference client setBoundElement StatementExpression MethodInvocation templateBinding Cast ReferenceType TemplateSignature MemberReference supplier setSignature IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement StatementExpression MethodInvocation templateBinding MethodInvocation Cast ReferenceType TemplateParameterSubstitution MemberReference o add getParameterSubstitutions End End StatementExpression MethodInvocation MethodInvocation MemberReference templateBinding add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal ""Create the template binding # between "" Literal ""the client # and the supplier #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference client MemberReference supplier setObjects ReturnStatement Cast ReferenceType TemplateBinding MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class buildClass ReturnStatement MethodInvocation createClass MethodDeclaration Modifier public ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class buildClass FormalParameter ReferenceType Object owner ReturnStatement MethodInvocation Literal null MemberReference owner buildClass MethodDeclaration Modifier public ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class buildClass FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class VariableDeclarator clazz MethodInvocation createClass IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation clazz MemberReference name setName End ReturnStatement MemberReference clazz MethodDeclaration Modifier public ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class buildClass FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object owner IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The owner must be instance of Package"" Literal "" or UML2 Class or Interface."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class VariableDeclarator clazz MethodInvocation createClass IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation clazz MemberReference name setName End IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BlockStatement StatementExpression MethodInvocation clazz Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement StatementExpression Cast ReferenceType Interface MemberReference owner End End End StatementExpression MethodInvocation MethodInvocation MemberReference clazz add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the class # of the owner #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference owner setObjects ReturnStatement Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Comment buildComment FormalParameter Modifier final ReferenceType Object element FormalParameter Modifier final ReferenceType Object model IfStatement BinaryOperation instanceof MemberReference model ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A namespace must be supplied."" End IfStatement BinaryOperation && BinaryOperation != MemberReference element Literal null BinaryOperation instanceof MemberReference element ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The annotated element must be instance of Element."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Comment VariableDeclarator comment MethodInvocation createComment IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation comment MethodInvocation Cast ReferenceType Element MemberReference element add getAnnotatedElements End StatementExpression Cast ReferenceType Namespace MemberReference model StatementExpression MethodInvocation MethodInvocation MemberReference comment add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd IfStatement BinaryOperation == MemberReference element Literal null BlockStatement StatementExpression Assignment MemberReference cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the comment #"" = BlockStatement StatementExpression Assignment MemberReference cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the comment # attached to the element #"" = End StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack IfStatement BinaryOperation == MemberReference element Literal null BlockStatement StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams setObjects BlockStatement StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference element setObjects End ReturnStatement Cast ReferenceType Comment MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Constraint buildConstraint FormalParameter Modifier final ReferenceType Object constrElement IfStatement BinaryOperation instanceof MemberReference constrElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The constrained element must be instance of Element."" End IfStatement BinaryOperation == Cast ReferenceType Element MemberReference constrElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal ""The containing package of the constrained"" Literal "" element must be non-null."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Constraint VariableDeclarator constraint MethodInvocation createConstraint StatementExpression MethodInvocation constraint MethodInvocation Cast ReferenceType Element MemberReference constrElement add getConstrainedElements StatementExpression MethodInvocation MethodInvocation MemberReference constraint add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the constraint # that constrains the element #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference constrElement setObjects ReturnStatement Cast ReferenceType Constraint MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Constraint buildConstraint FormalParameter ReferenceType String name FormalParameter ReferenceType Object bexpr IfStatement BinaryOperation instanceof MemberReference bexpr ReferenceType ValueSpecification BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The 'bexpr' value specification must be "" Literal ""instance of ValueSpecification"" End LocalVariableDeclaration ReferenceType Constraint VariableDeclarator constraint MethodInvocation createConstraint IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation constraint MemberReference name setName End StatementExpression MethodInvocation constraint Cast ReferenceType ValueSpecification MemberReference bexpr setSpecification ReturnStatement MemberReference constraint MethodDeclaration Modifier public ReferenceType DataType buildDataType FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object owner IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The owner must be instance of Package"" Literal "" or UML2 Class or Interface."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType DataType VariableDeclarator dataType MethodInvocation createDataType IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation dataType MemberReference name setName End IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BlockStatement StatementExpression MethodInvocation dataType Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement StatementExpression Cast ReferenceType Interface MemberReference owner End End End StatementExpression MethodInvocation MethodInvocation MemberReference dataType add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the data type # owned by #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference owner setObjects ReturnStatement Cast ReferenceType DataType MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Dependency buildDependency FormalParameter Modifier final ReferenceType Object clientObj FormalParameter Modifier final ReferenceType Object supplierObj IfStatement BinaryOperation || BinaryOperation instanceof MemberReference clientObj ReferenceType NamedElement BinaryOperation instanceof MemberReference supplierObj ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The client and the supplier must be"" Literal "" instances of NamedElement."" End IfStatement BinaryOperation == Cast ReferenceType NamedElement MemberReference clientObj Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal ""The containing package of the client must be non-null."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dependency MethodInvocation createDependency StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference clientObj add getClients StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference supplierObj add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference clientObj StatementExpression MethodInvocation MethodInvocation MemberReference dependency add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal ""Create the dependency # between the"" Literal "" client # and the supplier #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference clientObj MemberReference supplierObj setObjects ReturnStatement Cast ReferenceType Dependency MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Object buildElementResidence FormalParameter ReferenceType Object me FormalParameter ReferenceType Object component ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Enumeration buildEnumeration FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object owner IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The owner must be instance of Package or UML2 Class or Interface."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation createEnumeration IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation enumeration MemberReference name setName End IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BlockStatement StatementExpression MethodInvocation enumeration Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement StatementExpression Cast ReferenceType Interface MemberReference owner End End End StatementExpression MethodInvocation MethodInvocation MemberReference enumeration add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the enumeration # owned by #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference owner setObjects ReturnStatement Cast ReferenceType Enumeration MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType EnumerationLiteral buildEnumerationLiteral FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object enumeration IfStatement BinaryOperation instanceof MemberReference enumeration ReferenceType Enumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The enumeration must be instance of Enumeration."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType EnumerationLiteral VariableDeclarator enumerationLiteral MethodInvocation createEnumerationLiteral IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation enumerationLiteral MemberReference name setName End StatementExpression MethodInvocation enumerationLiteral Cast ReferenceType Enumeration MemberReference enumeration setEnumeration StatementExpression MethodInvocation MethodInvocation MemberReference enumerationLiteral add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the enumeration literal # owned by #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference enumeration setObjects ReturnStatement Cast ReferenceType EnumerationLiteral MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Generalization buildGeneralization FormalParameter ReferenceType Object child FormalParameter ReferenceType Object parent FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference parent MemberReference child buildGeneralization MethodDeclaration Modifier public ReferenceType Generalization buildGeneralization FormalParameter Modifier final ReferenceType Object child FormalParameter Modifier final ReferenceType Object parent IfStatement BinaryOperation || BinaryOperation instanceof MemberReference child ReferenceType Classifier BinaryOperation instanceof MemberReference parent ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The general (the parent) and the specific (the child) must be instances of Classifier."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Generalization VariableDeclarator generalization MethodInvocation createGeneralization StatementExpression MethodInvocation generalization Cast ReferenceType Classifier MemberReference parent setGeneral StatementExpression MethodInvocation generalization Cast ReferenceType Classifier MemberReference child setSpecific StatementExpression MethodInvocation MethodInvocation MemberReference generalization add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the generalization # between # (general) and # (specific)"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference parent MemberReference child setObjects ReturnStatement Cast ReferenceType Generalization MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Interface buildInterface ReturnStatement MethodInvocation createInterface MethodDeclaration Modifier public ReferenceType Interface buildInterface FormalParameter ReferenceType Object owner ReturnStatement MethodInvocation Literal null MemberReference owner buildInterface MethodDeclaration Modifier public ReferenceType Interface buildInterface FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Interface VariableDeclarator interfaze MethodInvocation createInterface IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation interfaze MemberReference name setName End ReturnStatement MemberReference interfaze MethodDeclaration Modifier public ReferenceType Interface buildInterface FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object owner IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""The owner must be instance of Package"" Literal "" or UML2 Class or Interface."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Interface VariableDeclarator interfaze MethodInvocation createInterface IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BlockStatement StatementExpression MethodInvocation interfaze Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Interface BlockStatement StatementExpression Cast ReferenceType Interface MemberReference owner End End End IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation interfaze MemberReference name setName End StatementExpression MethodInvocation MethodInvocation MemberReference interfaze add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the interface # owned by #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference owner setObjects ReturnStatement Cast ReferenceType Interface MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Object buildMethod FormalParameter ReferenceType String name ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Operation buildOperation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object model FormalParameter ReferenceType Object returnType ReturnStatement MethodInvocation MemberReference classifier MemberReference returnType Literal null buildOperation2 MethodDeclaration Modifier public ReferenceType Operation buildOperation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object returnType ReturnStatement MethodInvocation MemberReference classifier MemberReference returnType Literal null buildOperation2 MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Operation buildOperation FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object model FormalParameter ReferenceType Object returnType FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference cls MemberReference returnType MemberReference name buildOperation2 MethodDeclaration Modifier public ReferenceType Operation buildOperation2 FormalParameter Modifier final ReferenceType Object cls FormalParameter Modifier final ReferenceType Object returnType FormalParameter Modifier final ReferenceType String name IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference returnType Literal null BinaryOperation instanceof MemberReference returnType ReferenceType Type BinaryOperation instanceof MemberReference cls ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""cls and returnType must be instances of Type."" End IfStatement BinaryOperation == MethodInvocation UMLUtil Cast ReferenceType Type MemberReference cls getOwnedOperations Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + BinaryOperation + Literal ""The type "" MethodInvocation cls getClass Literal "" does not support owning operations."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Operation VariableDeclarator operation MethodInvocation createOperation StatementExpression MethodInvocation UMLUtil MethodInvocation MemberReference operation add Cast ReferenceType Type MemberReference cls getOwnedOperations StatementExpression MethodInvocation operation Literal null Cast ReferenceType Type MemberReference returnType createReturnResult IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation operation MemberReference name setName End StatementExpression MethodInvocation MethodInvocation MemberReference operation add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the operation # owned by #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference cls setObjects ReturnStatement Cast ReferenceType Operation MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Parameter buildParameter FormalParameter ReferenceType Object o FormalParameter ReferenceType Object model FormalParameter ReferenceType Object type ReturnStatement MethodInvocation MemberReference o MemberReference type buildParameter MethodDeclaration Modifier public ReferenceType Parameter buildParameter FormalParameter Modifier final ReferenceType Object o FormalParameter Modifier final ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference o ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The parameter must be attached to a BehavioralFeature."" End IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The type of the parameter must be instance of Type."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param MethodInvocation createParameter StatementExpression MethodInvocation param Cast ReferenceType Type MemberReference type setType StatementExpression Cast ReferenceType BehavioralFeature MemberReference o StatementExpression MethodInvocation MethodInvocation MemberReference param add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the parameter # owned by #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference o setObjects ReturnStatement Cast ReferenceType Parameter MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration /**
     * Removed from UML2.x, use buildPackageImport instead.
     */ Modifier public Annotation Deprecated ReferenceType PackageImport buildPermission FormalParameter ReferenceType Object client FormalParameter ReferenceType Object supplier ReturnStatement MethodInvocation MemberReference client MemberReference supplier buildPackageImport MethodDeclaration Modifier public ReferenceType PackageImport buildPackageAccess FormalParameter ReferenceType Object client FormalParameter ReferenceType Object supplier ReturnStatement MethodInvocation MemberReference client MemberReference supplier MemberReference VisibilityKind PRIVATE_LITERAL buildPackageImport MethodDeclaration Modifier public ReferenceType PackageImport buildPackageImport FormalParameter ReferenceType Object client FormalParameter ReferenceType Object supplier ReturnStatement MethodInvocation MemberReference client MemberReference supplier Literal null buildPackageImport MethodDeclaration Modifier private ReferenceType PackageImport buildPackageImport FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object supplier FormalParameter Modifier final ReferenceType VisibilityKind visibility IfStatement BinaryOperation instanceof MemberReference client ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The client must be instance of Namespace."" End IfStatement BinaryOperation instanceof MemberReference supplier ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The supplier must be instance of Package."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType PackageImport VariableDeclarator packageImport MethodInvocation createPackageImport StatementExpression MethodInvocation packageImport Cast ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Package MemberReference supplier setImportedPackage StatementExpression MethodInvocation packageImport Cast ReferenceType Namespace MemberReference client setImportingNamespace IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation packageImport MemberReference visibility setVisibility End StatementExpression MethodInvocation MethodInvocation MemberReference packageImport add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the package import # between the client # and the supplier #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference client MemberReference supplier setObjects ReturnStatement Cast ReferenceType PackageImport MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType InterfaceRealization buildRealization FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object supplier FormalParameter ReferenceType Object namespace IfStatement BinaryOperation instanceof MemberReference client ReferenceType BehavioredClassifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The client must be instance of BehavioredClassifier"" End IfStatement BinaryOperation instanceof MemberReference supplier ReferenceType Interface BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The supplier must be an Interface"" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType InterfaceRealization VariableDeclarator realization MethodInvocation UMLFactory.eINSTANCE createInterfaceRealization StatementExpression MethodInvocation realization Cast ReferenceType BehavioredClassifier MemberReference client setImplementingClassifier StatementExpression MethodInvocation realization Cast ReferenceType Interface MemberReference supplier setContract StatementExpression Cast ReferenceType BehavioredClassifier MemberReference client StatementExpression MethodInvocation MethodInvocation MemberReference realization add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal ""Create the interface realization # between"" Literal "" the client # and the supplier #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference client MemberReference supplier setObjects ReturnStatement Cast ReferenceType InterfaceRealization MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Object buildTemplateArgument FormalParameter ReferenceType Object element ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Usage buildUsage FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object supplier IfStatement BinaryOperation || BinaryOperation instanceof MemberReference client ReferenceType NamedElement BinaryOperation instanceof MemberReference supplier ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The client and the supplier must be NamedElements."" End IfStatement BinaryOperation == Cast ReferenceType NamedElement MemberReference client Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal ""The client is not contained in a package."" End LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Usage VariableDeclarator usage MethodInvocation createUsage StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType NamedElement MemberReference client add getClients StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType NamedElement MemberReference supplier add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference client StatementExpression MethodInvocation MethodInvocation MemberReference usage add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal ""Create the usage # between the client # and the supplier #"" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference client MemberReference supplier setObjects ReturnStatement Cast ReferenceType Usage MethodInvocation run MethodInvocation Literal 0 get getParams MethodDeclaration Modifier public ReferenceType Object copyClass FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference source MemberReference ns copy getCopyHelper MethodDeclaration Modifier public ReferenceType Object copyDataType FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference source MemberReference ns copy getCopyHelper MethodDeclaration Modifier public ReferenceType Object copyFeature FormalParameter ReferenceType Object source FormalParameter ReferenceType Object classifier ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference source MemberReference classifier copy getCopyHelper MethodDeclaration Modifier public ReferenceType Object copyInterface FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference source MemberReference ns copy getCopyHelper MethodDeclaration Modifier public ReferenceType Abstraction createAbstraction ReturnStatement MethodInvocation UMLFactory.eINSTANCE createAbstraction MethodDeclaration Modifier public ReferenceType Artifact createArtifact ReturnStatement MethodInvocation UMLFactory.eINSTANCE createArtifact MethodDeclaration Modifier public ReferenceType Association createAssociation ReturnStatement MethodInvocation UMLFactory.eINSTANCE createAssociation MethodDeclaration Modifier public ReferenceType AssociationClass createAssociationClass ReturnStatement MethodInvocation UMLFactory.eINSTANCE createAssociationClass MethodDeclaration Modifier public ReferenceType Property createAssociationEnd ReturnStatement MethodInvocation UMLFactory.eINSTANCE createProperty MethodDeclaration Modifier public ReferenceType Property createAttribute ReturnStatement MethodInvocation UMLFactory.eINSTANCE createProperty MethodDeclaration /**
     * Removed from UML2.x, use createTemplateBinding instead.
     */ Modifier public Annotation Deprecated ReferenceType TemplateBinding createBinding ReturnStatement MethodInvocation createTemplateBinding MethodDeclaration Modifier public ReferenceType TemplateBinding createTemplateBinding ReturnStatement MethodInvocation UMLFactory.eINSTANCE createTemplateBinding MethodDeclaration Modifier public ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType Class createClass ReturnStatement MethodInvocation UMLFactory.eINSTANCE createClass MethodDeclaration Modifier public ReferenceType Comment createComment ReturnStatement MethodInvocation UMLFactory.eINSTANCE createComment MethodDeclaration Modifier public ReferenceType Component createComponent ReturnStatement MethodInvocation UMLFactory.eINSTANCE createComponent MethodDeclaration Modifier public ReferenceType Constraint createConstraint ReturnStatement MethodInvocation UMLFactory.eINSTANCE createConstraint MethodDeclaration Modifier public ReferenceType DataType createDataType ReturnStatement MethodInvocation UMLFactory.eINSTANCE createDataType MethodDeclaration Modifier public ReferenceType Dependency createDependency ReturnStatement MethodInvocation UMLFactory.eINSTANCE createDependency MethodDeclaration Modifier public ReferenceType Object createElementResidence ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Enumeration createEnumeration ReturnStatement MethodInvocation UMLFactory.eINSTANCE createEnumeration MethodDeclaration Modifier public ReferenceType EnumerationLiteral createEnumerationLiteral ReturnStatement MethodInvocation UMLFactory.eINSTANCE createEnumerationLiteral MethodDeclaration Modifier public ReferenceType Object createFlow ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Generalization createGeneralization ReturnStatement MethodInvocation UMLFactory.eINSTANCE createGeneralization MethodDeclaration Modifier public ReferenceType Interface createInterface ReturnStatement MethodInvocation UMLFactory.eINSTANCE createInterface MethodDeclaration Modifier public ReferenceType Object createMethod ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Node createNode ReturnStatement MethodInvocation UMLFactory.eINSTANCE createNode MethodDeclaration Modifier public ReferenceType Operation createOperation ReturnStatement MethodInvocation UMLFactory.eINSTANCE createOperation MethodDeclaration Modifier public ReferenceType Parameter createParameter ReturnStatement MethodInvocation UMLFactory.eINSTANCE createParameter MethodDeclaration /**
     * Removed from UML2.x, use createPackageImport instead.
     */ Modifier public Annotation Deprecated ReferenceType PackageImport createPermission ReturnStatement MethodInvocation createPackageImport MethodDeclaration Modifier public ReferenceType PackageImport createPackageImport ReturnStatement MethodInvocation UMLFactory.eINSTANCE createPackageImport MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object createPrimitive ReturnStatement MethodInvocation createPrimitiveType MethodDeclaration Modifier public ReferenceType PrimitiveType createPrimitiveType ReturnStatement MethodInvocation UMLFactory.eINSTANCE createPrimitiveType MethodDeclaration Modifier public Annotation SuppressWarnings Literal ""deprecation"" ReferenceType Object createProgrammingLanguageDataType ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType Object createTemplateArgument ThrowStatement ClassCreator ReferenceType NotImplementedException MethodDeclaration Modifier public ReferenceType TemplateParameter createTemplateParameter ReturnStatement MethodInvocation UMLFactory.eINSTANCE createTemplateParameter MethodDeclaration Modifier public ReferenceType Usage createUsage ReturnStatement MethodInvocation UMLFactory.eINSTANCE createUsage ReferenceType CoreFactory ReferenceType AbstractModelFactory",0
1397,1397,,0
400,400,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.List Import javax.swing.AbstractAction Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.uml.CommentEdge Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.di.GraphElement Import org.tigris.gef.graph.MutableGraphSupport Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * Removes an modelelement from the diagram, but not from the model.
 */ ActionRemoveFromDiagram ConstructorDeclaration Modifier public /**
     * The constructor.
     * 
     * @param name the localised (!) name
     */ ActionRemoveFromDiagram FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name MethodInvocation ResourceLoaderWrapper Literal ""RemoveFromDiagram"" lookupIcon LocalVariableDeclaration ReferenceType String VariableDeclarator localMnemonic MethodInvocation Translator Literal ""action.remove-from-diagram.mnemonic"" localize IfStatement BinaryOperation && BinaryOperation != MemberReference localMnemonic Literal null BinaryOperation == MethodInvocation localMnemonic length Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference Action MNEMONIC_KEY MethodInvocation Integer MethodInvocation localMnemonic Literal 0 charAt valueOf putValue End StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MemberReference name putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType MutableGraphSupport VariableDeclarator graph Cast ReferenceType MutableGraphSupport MethodInvocation ce getGraphModel LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs MethodInvocation ce MethodInvocation getFigs getSelectionManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MethodInvocation f getOwner ReferenceType CommentEdge BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType GraphElement BlockStatement StatementExpression MethodInvocation f removeFromDiagram BlockStatement StatementExpression MethodInvocation graph MemberReference f removeFig End End End ReferenceType AbstractAction",0
1162,1162,,1
1015,1015,,1
951,951,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.Set Import org.argouml.i18n.Translator Import org.tigris.gef.base.Diagram ClassDeclaration Modifier public /**
 * Rule for Diagram->Node.
 *
 */ GoDiagramToNode MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.diagram.node"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Diagram BlockStatement ReturnStatement Cast ReferenceType Diagram MemberReference parent End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1317,1317,,0
543,543,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.event.ActionEvent Import java.io.File Import javax.swing.Action Import javax.swing.JFileChooser Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.reveng.ImportInterface Import org.argouml.util.ArgoFrame Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * Action to choose and set source path for model elements.
 */ ActionSetSourcePath ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionSetSourcePath StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.set-source-path"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.set-source-path"" localize putValue MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation getNewDirectory IfStatement BinaryOperation != MemberReference f Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference obj MemberReference ImportInterface SOURCE_PATH_TAG getTaggedValue getFacade IfStatement BinaryOperation == MemberReference tv Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference obj MethodInvocation Model MethodInvocation MemberReference ImportInterface SOURCE_PATH_TAG MethodInvocation f getPath buildTaggedValue getExtensionMechanismsFactory addTaggedValue getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference tv MethodInvocation f getPath setValueOfTag getExtensionMechanismsHelper End End End MethodDeclaration /**
     * @return the new source path directory
     */ Modifier protected ReferenceType File getNewDirectory LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation TargetManager MethodInvocation getTarget getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator type Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference obj getName getFacade = LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference obj MemberReference ImportInterface SOURCE_PATH_TAG getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement StatementExpression Assignment MemberReference path MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade = End IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference type Literal ""Package"" = IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAClass getFacade BlockStatement StatementExpression Assignment MemberReference type Literal ""Class"" = End End IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference type Literal ""Interface"" = End BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator f Literal null IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType File MemberReference path = End IfStatement BinaryOperation && BinaryOperation != MemberReference f Literal null BinaryOperation > MethodInvocation f MethodInvocation length getPath Literal 0 BlockStatement StatementExpression Assignment MemberReference chooser ClassCreator ReferenceType JFileChooser MethodInvocation f getPath = End IfStatement BinaryOperation == MemberReference chooser Literal null BlockStatement StatementExpression Assignment MemberReference chooser ClassCreator ReferenceType JFileChooser = End IfStatement BinaryOperation != MemberReference f Literal null BlockStatement StatementExpression MethodInvocation chooser MemberReference f setSelectedFile End LocalVariableDeclaration ReferenceType String VariableDeclarator sChooserTitle MethodInvocation Translator Literal ""action.set-source-path"" localize IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference sChooserTitle BinaryOperation + Literal ' ' MemberReference type += End IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference sChooserTitle BinaryOperation + Literal ' ' MemberReference name += End StatementExpression MethodInvocation chooser MemberReference sChooserTitle setDialogTitle StatementExpression MethodInvocation chooser MemberReference JFileChooser DIRECTORIES_ONLY setFileSelectionMode LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation chooser MethodInvocation ArgoFrame getInstance MethodInvocation Translator Literal ""dialog.button.ok"" localize showDialog IfStatement BinaryOperation == MemberReference retval MemberReference JFileChooser APPROVE_OPTION BlockStatement ReturnStatement MethodInvocation chooser getSelectedFile BlockStatement ReturnStatement Literal null End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 6455209886706784094L ReferenceType UndoableAction",0
1088,1088,,1
1004,1004,,1
1111,1111,,1
365,365,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementOrderedListModel2 ClassDeclaration Modifier public /**
 * @author pepargouml@yahoo.es
 */ UMLAssociationEndQualifiersListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationEndQualifiersListModel.
     */ UMLAssociationEndQualifiersListModel StatementExpression SuperConstructorInvocation Literal ""qualifier"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getQualifiers getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAAttribute getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getQualifiers MethodInvocation MemberReference o contains getFacade MethodDeclaration Modifier protected moveDown FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator assocEnd MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference assocEnd getQualifiers getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference assocEnd MemberReference mem removeQualifier getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference assocEnd BinaryOperation + MemberReference index Literal 1 MemberReference mem addQualifier getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToBottom(int)
     */ Modifier protected Annotation Override moveToBottom FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator assocEnd MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference assocEnd getQualifiers getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference assocEnd MemberReference mem removeQualifier getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference assocEnd BinaryOperation - MethodInvocation c size Literal 1 MemberReference mem addQualifier getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToTop(int)
     */ Modifier protected Annotation Override moveToTop FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getQualifiers getFacade IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem removeQualifier getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss Literal 0 MemberReference mem addQualifier getCoreHelper End ReferenceType UMLModelElementOrderedListModel2",0
1513,1513,,0
313,313,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.util.ArrayList Import java.util.Collection Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 ClassDeclaration /**
 * Provide a dialog which helps the user to select one event
 * out of an existing list,
 * which will be used as the trigger of the transition.
 *
 * @author MarkusK
 *
 */ ActionAddSignalsToSignalEvent FieldDeclaration /**
     * The one and only instance of this class.
     */ Modifier public final static ReferenceType ActionAddSignalsToSignalEvent VariableDeclarator SINGLETON ClassCreator ReferenceType ActionAddSignalsToSignalEvent ConstructorDeclaration Modifier protected /**
     * Constructor for ActionAddClassifierRoleBase.
     */ ActionAddSignalsToSignalEvent StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal false setMultiSelect MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getModel getFacade MethodInvocation Model MethodInvocation getSignal getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator signal MethodInvocation Model MethodInvocation MethodInvocation getTarget getSignal getFacade IfStatement BinaryOperation != MemberReference signal Literal null BlockStatement StatementExpression MethodInvocation vec MemberReference signal add End ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-signal"" localize MethodDeclaration Modifier protected Annotation Override doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation getTarget IfStatement BinaryOperation || BinaryOperation == MemberReference selected Literal null BinaryOperation == MethodInvocation selected size Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference event Literal null setSignal getCommonBehaviorHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference event MethodInvocation selected MethodInvocation next iterator setSignal getCommonBehaviorHelper End FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 6890869588365483936L ReferenceType AbstractActionAddModelElement2",1
386,386,"CompilationUnit PackageDeclaration org.argouml.uml.diagram InterfaceDeclaration Modifier public /**
 * An interface to be implemented by any Fig that contains
 * a Extensions Compartment.
 *
 * @author mvw@tigris.org
 */ ExtensionsCompartmentContainer MethodDeclaration /**
     * Determine if the operations compartment is visible.
     * @return true if the operations compartment is visible.
     */ BasicType boolean isExtensionPointVisible MethodDeclaration /**
     * Set the visibility of the operations compartment.
     * @param visible the new visibility status.
     */ setExtensionPointVisible FormalParameter BasicType boolean visible",1
1117,1117,,0
601,601,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.eclipse.emf.common.notify.impl.NotificationImpl ClassDeclaration Modifier public /**
 * A ChangeCommand that updates its label.
 * <p>
 * The label of this command can contain the character '#' that will be replaced
 * with information about an object when the label is returned.
 * 
 * @author Bogdan Pistol
 */ ChangeCommand FieldDeclaration Modifier private ReferenceType Object VariableDeclarator objects FieldDeclaration Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public ChangeCommand FormalParameter ReferenceType EUMLModelImplementation modelImplementation FormalParameter ReferenceType Runnable runnable FormalParameter ReferenceType String label StatementExpression SuperConstructorInvocation MethodInvocation modelImplementation getEditingDomain MemberReference runnable MemberReference label StatementExpression Assignment MemberReference modelImpl MemberReference modelImplementation = ConstructorDeclaration Modifier public ChangeCommand FormalParameter ReferenceType EUMLModelImplementation modelImplementation FormalParameter ReferenceType Runnable runnable FormalParameter ReferenceType String label FormalParameter ReferenceType Object objects  StatementExpression SuperConstructorInvocation MethodInvocation modelImplementation getEditingDomain MemberReference runnable MemberReference label IfStatement MethodInvocation ! MemberReference label MemberReference objects isValid BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The label is not compatible with the objects"" End StatementExpression Assignment This MemberReference objects MemberReference objects = StatementExpression Assignment MemberReference modelImpl MemberReference modelImplementation = MethodDeclaration Modifier public setObjects FormalParameter ReferenceType Object objects  IfStatement MethodInvocation ! MemberReference label MemberReference objects isValid BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""The label is not compatible with the objects"" End StatementExpression Assignment This MemberReference objects MemberReference objects = StatementExpression MethodInvocation modelImpl MethodInvocation ClassCreator ReferenceType NotificationImpl MemberReference ModelEventPumpEUMLImpl COMMAND_STACK_UPDATE Literal false Literal false notifyChanged getModelEventPump MethodDeclaration Modifier public Annotation Override ReferenceType String getLabel IfStatement BinaryOperation == MemberReference objects Literal null BlockStatement ReturnStatement MemberReference label End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation label length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation label MemberReference i charAt Literal '#' BlockStatement StatementExpression MethodInvocation sb MethodInvocation UMLUtil MemberReference ArraySelector MemberReference j objects toString append StatementExpression MemberReference ++ j BlockStatement StatementExpression MethodInvocation sb MethodInvocation label MemberReference i charAt append End End ReturnStatement MethodInvocation sb toString MethodDeclaration Modifier private BasicType boolean isValid FormalParameter ReferenceType String label FormalParameter ReferenceType Object objects IfStatement BinaryOperation == MemberReference objects Literal null BlockStatement ReturnStatement Literal true End LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MethodInvocation label length MemberReference ++ j BlockStatement IfStatement BinaryOperation == MethodInvocation label MemberReference j charAt Literal '#' BlockStatement StatementExpression MemberReference ++ i End End ReturnStatement BinaryOperation == MemberReference i MemberReference objects length ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType common ReferenceType edit ReferenceType command ReferenceType ChangeCommand",0
348,348,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import java.util.Map Import java.util.StringTokenizer Import org.argouml.model.Model Import org.argouml.notation.providers.NodeInstanceNotation ClassDeclaration Modifier public /**
 * @author Michiel
 */ NodeInstanceNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param nodeInstance the UML nodeInstance
     */ NodeInstanceNotationUml FormalParameter ReferenceType Object nodeInstance StatementExpression SuperConstructorInvocation MemberReference nodeInstance MethodDeclaration /**
     * Parse a line of the form: ""name : base-node"".
     *
     * {@inheritDoc}
     */ Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation text trim IfStatement BinaryOperation == MethodInvocation s length Literal 0 BlockStatement ReturnStatement End IfStatement BinaryOperation == MethodInvocation s BinaryOperation - MethodInvocation s length Literal 1 charAt Literal ';' BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 2 substring = End LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal """" LocalVariableDeclaration ReferenceType String VariableDeclarator bases Literal """" LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer Literal null IfStatement BinaryOperation > MethodInvocation s Literal "":"" Literal 0 indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference name MethodInvocation s MethodInvocation trim Literal 0 MethodInvocation s Literal "":"" indexOf substring = StatementExpression Assignment MemberReference bases MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal "":"" indexOf Literal 1 substring = BlockStatement StatementExpression Assignment MemberReference name MemberReference s = End StatementExpression Assignment MemberReference tokenizer ClassCreator ReferenceType StringTokenizer MemberReference bases Literal "","" = LocalVariableDeclaration ReferenceType List VariableDeclarator classifiers ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement WhileStatement MethodInvocation tokenizer hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newBase MethodInvocation tokenizer nextToken LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation newBase trim lookupIn getFacade IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement StatementExpression MethodInvocation classifiers MemberReference cls add End End End StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference classifiers setClassifiers getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference name setName getCoreHelper MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-nodeinstance"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr Literal """" IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade Literal null BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade = End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator baseStr ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference modelElement getClassifiers getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference col Literal null BinaryOperation > MethodInvocation col size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator StatementExpression MethodInvocation baseStr MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade append WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation baseStr BinaryOperation + Literal "", "" MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade append End End IfStatement BinaryOperation && BinaryOperation == MethodInvocation nameStr length Literal 0 BinaryOperation == MethodInvocation baseStr length Literal 0 BlockStatement ReturnStatement Literal """" End LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation baseStr MethodInvocation trim toString IfStatement BinaryOperation < MethodInvocation base length Literal 1 BlockStatement ReturnStatement MethodInvocation nameStr trim End ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation nameStr trim Literal "" : "" MemberReference base ReferenceType NodeInstanceNotation",0
193,193,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.event.ActionEvent Import org.argouml.cognitive.Poster Import org.argouml.cognitive.ToDoItem ClassDeclaration Modifier public /**
 * The action to snooze the critics, i.e. temporarily disable them.
 *
 */ ActionSnooze ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionSnooze StatementExpression SuperConstructorInvocation Literal ""action.snooze-critic"" Literal true MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed IfStatement BinaryOperation instanceof MethodInvocation getRememberedTarget ReferenceType ToDoItem ReturnStatement End LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation getRememberedTarget LocalVariableDeclaration ReferenceType Poster VariableDeclarator p MethodInvocation item getPoster StatementExpression MethodInvocation p snooze StatementExpression MethodInvocation TabToDo incrementNumHushes ReferenceType ToDoItemAction",0
1570,1570,,1
324,324,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.use_case.ui Import java.awt.Color Import java.awt.Graphics Import java.beans.PropertyChangeEvent Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.kernel.ProjectSettings Import org.argouml.model.Model Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.tigris.gef.base.PathConvPercent Import org.tigris.gef.presentation.ArrowHeadGreater Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigGroup Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * A fig for use with extend relationships on use case diagrams.<p>
 *
 * Realised as a dotted line with an open arrow head and the label
 * &laquo;extend&raquo; together with any condition alongside.<p>
 *
 * @author mail@jeremybennett.com
 */ FigExtend FieldDeclaration /**
     * Serialization ID - generated by Eclipse for rev. 1.22
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8026008987096598742L FieldDeclaration /**
     * The &laquo;extend&raquo; label.<p>
     */ Modifier private ReferenceType FigText VariableDeclarator label FieldDeclaration /**
     * The condition expression.<p>
     */ Modifier private ReferenceType FigText VariableDeclarator condition FieldDeclaration /**
     * The group of label and condition.<p>
     */ Modifier private ReferenceType FigGroup VariableDeclarator fg FieldDeclaration Modifier private ReferenceType ArrowHeadGreater VariableDeclarator endArrow ClassCreator ReferenceType ArrowHeadGreater ConstructorDeclaration Modifier public /**
     * The default constructor, but should never be called directly
     * (use {@link #FigExtend(Object)}, since that sets the
     * owner. However we can't mark it as private, since GEF expects
     * to be able to call this when creating the diagram.<p>
     */ FigExtend LocalVariableDeclaration BasicType int VariableDeclarator y Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator h Literal 20 StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y Literal 30 = StatementExpression Assignment MemberReference label ClassCreator ReferenceType FigText Literal 10 MemberReference y Literal 90 MemberReference h = StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y MemberReference h = StatementExpression MethodInvocation label MemberReference Color black setTextColor StatementExpression MethodInvocation label Literal false setTextFilled StatementExpression MethodInvocation label Literal false setFilled StatementExpression MethodInvocation label Literal 0 setLineWidth StatementExpression MethodInvocation label Literal false setEditable LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation project getProjectSettings StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + MethodInvocation ps getLeftGuillemot Literal ""extend"" MethodInvocation ps getRightGuillemot setText StatementExpression MethodInvocation label calcBounds StatementExpression Assignment MemberReference condition ClassCreator ReferenceType FigText Literal 10 MemberReference y Literal 90 MemberReference h = StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y MemberReference h = StatementExpression MethodInvocation condition MemberReference Color black setTextColor StatementExpression MethodInvocation condition Literal false setTextFilled StatementExpression MethodInvocation condition Literal false setFilled StatementExpression MethodInvocation condition Literal 0 setLineWidth StatementExpression MethodInvocation condition Literal false setExpandOnly StatementExpression Assignment MemberReference fg ClassCreator ReferenceType FigGroup = StatementExpression MethodInvocation fg MemberReference label addFig StatementExpression MethodInvocation fg MemberReference condition addFig StatementExpression MethodInvocation fg calcBounds StatementExpression MethodInvocation MemberReference fg ClassCreator ReferenceType PathConvPercent This Literal 50 Literal 10 addPathItem StatementExpression MethodInvocation Literal true setDashed StatementExpression MethodInvocation MemberReference endArrow setDestArrowHead StatementExpression MethodInvocation Literal true setBetweenNearestPoints ConstructorDeclaration Modifier public /**
     * The main constructor. Builds the FigEdge required and makes the
     * given edge object its owner.<p>
     *
     * @param edge  The edge that will own the fig
     */ FigExtend FormalParameter ReferenceType Object edge StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference edge setOwner MethodDeclaration /**
     * Set a new fig to represent this edge.<p>
     *
     * We invoke the superclass accessor. Then change aspects of the
     * new fig that are not as we want. In this case to use dashed
     * lines.<p>
     *
     * @param f  The fig to use.
     */ Modifier public setFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation Literal true setDashed MethodDeclaration /**
     * Define whether the given fig can be edited (it can't).<p>
     *
     * @param f  The fig about which the enquiry is being made. Ignored in this
     *           implementation.
     *
     * @return   <code>false</code> under all circumstances.
     */ Modifier protected BasicType boolean canEdit FormalParameter ReferenceType Fig f ReturnStatement Literal false MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression MethodInvocation endArrow MethodInvocation getLineColor setLineColor StatementExpression SuperMethodInvocation MemberReference g paint MethodDeclaration Modifier protected updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression MethodInvocation removeAllElementListeners IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal ""condition"" Literal ""remove"" addElementListener End MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator extend MethodInvocation getOwner IfStatement BinaryOperation == MemberReference extend Literal null BlockStatement ReturnStatement End StatementExpression SuperMethodInvocation MemberReference e modelChanged IfStatement Literal MethodInvocation MethodInvocation e getPropertyName equals ""condition"" BlockStatement StatementExpression MethodInvocation renderingChanged End MethodDeclaration Modifier protected renderingChanged IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation updateConditionText StatementExpression MethodInvocation updateLabel End StatementExpression SuperMethodInvocation renderingChanged MethodDeclaration /**
     * Now sort out the condition text. Use the null string if there is
     * no condition set. The condition is a BooleanExpression,
     * so we show the ""body"" of it, and ignore the ""language"".
     */ Modifier protected updateConditionText IfStatement BinaryOperation == MethodInvocation getOwner Literal null ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MethodInvocation getOwner getCondition getFacade IfStatement BinaryOperation == MemberReference c Literal null BlockStatement StatementExpression MethodInvocation condition Literal """" setText BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expr MethodInvocation Model MethodInvocation MemberReference c getBody getFacade IfStatement BinaryOperation == MemberReference expr Literal null BlockStatement StatementExpression MethodInvocation condition Literal """" setText BlockStatement StatementExpression MethodInvocation condition Cast ReferenceType String MemberReference expr setText End End StatementExpression MethodInvocation fg calcBounds StatementExpression MethodInvocation endTrans MethodDeclaration Modifier protected updateLabel LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation project getProjectSettings StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + MethodInvocation ps getLeftGuillemot Literal ""extend"" MethodInvocation ps getRightGuillemot setText ReferenceType FigEdgeModelElement",0
880,880,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect whether the Compositestate attached to a
 * Statemachine has no initial state.
 *
 * @author jrobbins
 */ CrNoInitialState ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ CrNoInitialState StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""substate"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MemberReference dm IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference cs getStateMachine getFacade Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator peers MethodInvocation Model MethodInvocation MemberReference cs getSubvertices getFacade LocalVariableDeclaration BasicType int VariableDeclarator initialStateCount Literal 0 IfStatement BinaryOperation == MemberReference peers Literal null BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation peers iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MethodInvocation iter next IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model getFacade BlockStatement StatementExpression MemberReference ++ initialStateCount End End IfStatement BinaryOperation == MemberReference initialStateCount Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",0
1184,1184,,1
321,321,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.argouml.model.ConcurrencyKind Import org.eclipse.uml2.uml.CallConcurrencyKind ClassDeclaration /**
 * The Eclipse UML2 implementation for Concurrency Kind.
 * @author Tom Morris
 */ ConcurrencyKindEUMLImpl MethodDeclaration Modifier public ReferenceType Object getConcurrent ReturnStatement MemberReference CallConcurrencyKind CONCURRENT_LITERAL MethodDeclaration Modifier public ReferenceType Object getGuarded ReturnStatement MemberReference CallConcurrencyKind GUARDED_LITERAL MethodDeclaration Modifier public ReferenceType Object getSequential ReturnStatement MemberReference CallConcurrencyKind SEQUENTIAL_LITERAL ReferenceType ConcurrencyKind",0
32,32,"CompilationUnit PackageDeclaration jdepend.framework Import java.io  Import java.util  ClassDeclaration Modifier public abstract /**
 * The <code>AbstractParser</code> class is the base class 
 * for classes capable of parsing files to create a 
 * <code>JavaClass</code> instance.
 * 
 * @author <b>Mike Clark</b>
 * @author Clarkware Consulting, Inc.
 */ AbstractParser FieldDeclaration Modifier private ReferenceType ArrayList VariableDeclarator parseListeners FieldDeclaration Modifier private ReferenceType PackageFilter VariableDeclarator filter FieldDeclaration Modifier public static BasicType boolean VariableDeclarator DEBUG Literal false ConstructorDeclaration Modifier public AbstractParser StatementExpression ExplicitConstructorInvocation ClassCreator ReferenceType PackageFilter ConstructorDeclaration Modifier public AbstractParser FormalParameter ReferenceType PackageFilter filter StatementExpression MethodInvocation MemberReference filter setFilter StatementExpression Assignment MemberReference parseListeners ClassCreator ReferenceType ArrayList = MethodDeclaration Modifier public addParseListener FormalParameter ReferenceType ParserListener listener StatementExpression MethodInvocation parseListeners MemberReference listener add MethodDeclaration /**
     * Registered parser listeners are informed that the resulting
     * <code>JavaClass</code> was parsed.
     */ Modifier public abstract ReferenceType JavaClass parse FormalParameter ReferenceType InputStream is IOException MethodDeclaration /**
     * Informs registered parser listeners that the specified
     * <code>JavaClass</code> was parsed.
     * 
     * @param jClass Parsed Java class.
     */ Modifier protected onParsedJavaClass FormalParameter ReferenceType JavaClass jClass ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation parseListeners iterator MethodInvocation i hasNext BlockStatement StatementExpression Cast ReferenceType ParserListener MethodInvocation i next End MethodDeclaration Modifier protected ReferenceType PackageFilter getFilter IfStatement BinaryOperation == MemberReference filter Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType PackageFilter setFilter End ReturnStatement MemberReference filter MethodDeclaration Modifier protected setFilter FormalParameter ReferenceType PackageFilter filter StatementExpression Assignment This MemberReference filter MemberReference filter = MethodDeclaration Modifier protected debug FormalParameter ReferenceType String message IfStatement MemberReference DEBUG BlockStatement StatementExpression MethodInvocation System.err MemberReference message println End",0
395,395,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * The different OrderingKinds.
 */ OrderingKind MethodDeclaration /**
     * @return Returns the Ordered OrderingKind.
     */ ReferenceType Object getOrdered MethodDeclaration /**
     * @return Returns the Unordered OrderingKind.
     */ ReferenceType Object getUnordered",0
638,638,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.sequence.ui Import org.tigris.gef.presentation.ArrowHeadGreater ClassDeclaration Modifier public /**
 * @author Jaap
 *
 * To change the template for this generated type comment go to
 * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments
 *
 * @author jaap.branderhorst
 */ FigDestroyActionMessage FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 8246653379767368449L ConstructorDeclaration Modifier public /**
     * @param owner the owner object
     */ FigDestroyActionMessage FormalParameter ReferenceType Object owner StatementExpression SuperConstructorInvocation MemberReference owner StatementExpression MethodInvocation ClassCreator ReferenceType ArrowHeadGreater setDestArrowHead StatementExpression MethodInvocation Literal false setDashed ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ FigDestroyActionMessage StatementExpression ExplicitConstructorInvocation Literal null ReferenceType FigMessage",0
363,363,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.use_case.ui Import java.awt.event.ItemEvent Import javax.swing.JCheckBox Import org.argouml.ui.StylePanelFigNodeModelElement Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * A class to provide a style panel for use cases.<p>
 *
 * This adds a check box to control the display of he extension point
 * compartment.
 *
 * @author Jeremy Bennett
 */ StylePanelFigUseCase FieldDeclaration /**
     * The check box for toggling the visibility of extension points.
     */ Modifier private ReferenceType JCheckBox VariableDeclarator epCheckBox ClassCreator ReferenceType JCheckBox MethodInvocation Translator Literal ""checkbox.extension-points"" localize FieldDeclaration /**
     * Flag to indicate that a refresh is going on.
     */ Modifier private BasicType boolean VariableDeclarator refreshTransaction Literal false ConstructorDeclaration Modifier public /**
     * Build a style panel. Just layout the relevant boxes.
     */ StylePanelFigUseCase StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference epCheckBox addToDisplayPane StatementExpression MethodInvocation epCheckBox Literal false setSelected StatementExpression MethodInvocation epCheckBox This addItemListener MethodDeclaration /**
     * Refresh the display. This means setting the check box from the target use
     * case fig.
     *
     * @see org.argouml.ui.TabTarget#refresh()
     */ Modifier public refresh StatementExpression Assignment MemberReference refreshTransaction Literal true = StatementExpression SuperMethodInvocation refresh LocalVariableDeclaration ReferenceType FigUseCase VariableDeclarator target Cast ReferenceType FigUseCase MethodInvocation getTarget StatementExpression MethodInvocation epCheckBox MethodInvocation target isExtensionPointVisible setSelected StatementExpression Assignment MemberReference refreshTransaction Literal false = MethodDeclaration /**
     * Something has changed, check if its the check box.<p>
     *
     * @param e The event that triggered us.
     *
     * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
     */ Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement MemberReference ! refreshTransaction BlockStatement IfStatement BinaryOperation == MethodInvocation e getSource MemberReference epCheckBox BlockStatement LocalVariableDeclaration ReferenceType FigUseCase VariableDeclarator target Cast ReferenceType FigUseCase MethodInvocation getTarget StatementExpression MethodInvocation target MethodInvocation epCheckBox isSelected setExtensionPointVisible BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged End End ReferenceType StylePanelFigNodeModelElement",0
37,37,"CompilationUnit PackageDeclaration org.argouml.notation.ui Import java.awt.BorderLayout Import java.awt.FlowLayout Import java.awt.GridBagConstraints Import java.awt.GridBagLayout Import java.awt.Insets Import javax.swing.JCheckBox Import javax.swing.JComboBox Import javax.swing.JLabel Import javax.swing.JPanel Import org.argouml.application.api.Argo Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.configuration.Configuration Import org.argouml.configuration.ConfigurationKey Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.kernel.ProjectSettings Import org.argouml.notation.Notation Import org.argouml.notation.NotationName Import org.argouml.ui.ShadowComboBox ClassDeclaration Modifier public /**
 * Settings tab panel for handling Notation settings. <p>
 * 
 * It supports different scopes: application and project.
 * The former is stored in the properties file in the user-directory, 
 * the latter in the project file (.zargo,...). <p>
 * 
 * This class is written in a way that supports 
 * adding more scopes easily.
 *
 * @author Thierry Lach
 * @since  0.9.4
 */ SettingsTabNotation FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator notationLanguage FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showBoldNames FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator useGuillemots FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showVisibility FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showMultiplicity FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showInitialValue FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showProperties FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showTypes FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showStereotypes FieldDeclaration Modifier private ReferenceType JCheckBox VariableDeclarator showSingularMultiplicities FieldDeclaration Modifier private ReferenceType ShadowComboBox VariableDeclarator defaultShadowWidth FieldDeclaration Modifier private BasicType int VariableDeclarator scope ConstructorDeclaration Modifier public /**
     * The constructor.
     * We currently support 2 scopes, but this class is written 
     * in a way to easily extend that.
     *
     * @param settingsScope the scope of the settings
     */ SettingsTabNotation FormalParameter BasicType int settingsScope StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference scope MemberReference settingsScope = StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout LocalVariableDeclaration ReferenceType JPanel VariableDeclarator top ClassCreator ReferenceType JPanel StatementExpression MethodInvocation top ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator constraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference constraints anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference constraints fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference constraints gridy Literal 0 = StatementExpression Assignment MemberReference constraints gridx Literal 0 = StatementExpression Assignment MemberReference constraints gridwidth Literal 1 = StatementExpression Assignment MemberReference constraints gridheight Literal 1 = StatementExpression Assignment MemberReference constraints weightx Literal 1.0 = StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 0 Literal 30 Literal 0 Literal 4 = StatementExpression Assignment MemberReference constraints gridy MemberReference GridBagConstraints RELATIVE = LocalVariableDeclaration ReferenceType JPanel VariableDeclarator notationLanguagePanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType FlowLayout MemberReference FlowLayout LEFT Literal 5 Literal 0 LocalVariableDeclaration ReferenceType JLabel VariableDeclarator notationLanguageLabel MethodInvocation Literal ""label.notation-language"" createLabel StatementExpression Assignment MemberReference notationLanguage ClassCreator ReferenceType NotationComboBox = StatementExpression MethodInvocation notationLanguageLabel MemberReference notationLanguage setLabelFor StatementExpression MethodInvocation notationLanguagePanel MemberReference notationLanguageLabel add StatementExpression MethodInvocation notationLanguagePanel MemberReference notationLanguage add StatementExpression MethodInvocation top MemberReference notationLanguagePanel MemberReference constraints add StatementExpression Assignment MemberReference showBoldNames MethodInvocation Literal ""label.show-bold-names"" createCheckBox = StatementExpression MethodInvocation top MemberReference showBoldNames MemberReference constraints add StatementExpression Assignment MemberReference useGuillemots MethodInvocation Literal ""label.use-guillemots"" createCheckBox = StatementExpression MethodInvocation top MemberReference useGuillemots MemberReference constraints add StatementExpression Assignment MemberReference showVisibility MethodInvocation Literal ""label.show-visibility"" createCheckBox = StatementExpression MethodInvocation top MemberReference showVisibility MemberReference constraints add StatementExpression Assignment MemberReference showMultiplicity MethodInvocation Literal ""label.show-multiplicity"" createCheckBox = StatementExpression MethodInvocation top MemberReference showMultiplicity MemberReference constraints add StatementExpression Assignment MemberReference showInitialValue MethodInvocation Literal ""label.show-initialvalue"" createCheckBox = StatementExpression MethodInvocation top MemberReference showInitialValue MemberReference constraints add StatementExpression Assignment MemberReference showProperties MethodInvocation Literal ""label.show-properties"" createCheckBox = StatementExpression MethodInvocation top MemberReference showProperties MemberReference constraints add StatementExpression Assignment MemberReference showTypes MethodInvocation Literal ""label.show-types"" createCheckBox = StatementExpression MethodInvocation top MemberReference showTypes MemberReference constraints add StatementExpression Assignment MemberReference showStereotypes MethodInvocation Literal ""label.show-stereotypes"" createCheckBox = StatementExpression MethodInvocation top MemberReference showStereotypes MemberReference constraints add StatementExpression Assignment MemberReference showSingularMultiplicities MethodInvocation Literal ""label.show-singular-multiplicities"" createCheckBox = StatementExpression MethodInvocation top MemberReference showSingularMultiplicities MemberReference constraints add StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 5 Literal 30 Literal 0 Literal 4 = LocalVariableDeclaration ReferenceType JPanel VariableDeclarator defaultShadowWidthPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType FlowLayout MemberReference FlowLayout LEFT Literal 5 Literal 0 LocalVariableDeclaration ReferenceType JLabel VariableDeclarator defaultShadowWidthLabel MethodInvocation Literal ""label.default-shadow-width"" createLabel StatementExpression Assignment MemberReference defaultShadowWidth ClassCreator ReferenceType ShadowComboBox = StatementExpression MethodInvocation defaultShadowWidthLabel MemberReference defaultShadowWidth setLabelFor StatementExpression MethodInvocation defaultShadowWidthPanel MemberReference defaultShadowWidthLabel add StatementExpression MethodInvocation defaultShadowWidthPanel MemberReference defaultShadowWidth add StatementExpression MethodInvocation top MemberReference defaultShadowWidthPanel MemberReference constraints add StatementExpression MethodInvocation MemberReference top MemberReference BorderLayout NORTH add MethodDeclaration Modifier public handleSettingsTabRefresh IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_APPLICATION BlockStatement StatementExpression MethodInvocation showBoldNames MethodInvocation MemberReference Notation KEY_SHOW_BOLD_NAMES getBoolean setSelected StatementExpression MethodInvocation useGuillemots MethodInvocation MemberReference Notation KEY_USE_GUILLEMOTS getBoolean setSelected StatementExpression MethodInvocation notationLanguage MethodInvocation Notation getConfiguredNotation setSelectedItem StatementExpression MethodInvocation showVisibility MethodInvocation MemberReference Notation KEY_SHOW_VISIBILITY getBoolean setSelected StatementExpression MethodInvocation showInitialValue MethodInvocation MemberReference Notation KEY_SHOW_INITIAL_VALUE getBoolean setSelected StatementExpression MethodInvocation showProperties MethodInvocation MemberReference Notation KEY_SHOW_PROPERTIES getBoolean setSelected StatementExpression MethodInvocation showTypes MethodInvocation Configuration MemberReference Notation KEY_SHOW_TYPES Literal true getBoolean setSelected StatementExpression MethodInvocation showMultiplicity MethodInvocation MemberReference Notation KEY_SHOW_MULTIPLICITY getBoolean setSelected StatementExpression MethodInvocation showStereotypes MethodInvocation MemberReference Notation KEY_SHOW_STEREOTYPES getBoolean setSelected StatementExpression MethodInvocation showSingularMultiplicities MethodInvocation Configuration MemberReference Notation KEY_SHOW_SINGULAR_MULTIPLICITIES Literal true getBoolean setSelected StatementExpression MethodInvocation defaultShadowWidth MethodInvocation Configuration MemberReference Notation KEY_DEFAULT_SHADOW_WIDTH Literal 1 getInteger setSelectedIndex End IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_PROJECT BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings StatementExpression MethodInvocation notationLanguage MethodInvocation Notation MethodInvocation ps getNotationLanguage findNotation setSelectedItem StatementExpression MethodInvocation showBoldNames MethodInvocation ps getShowBoldNamesValue setSelected StatementExpression MethodInvocation useGuillemots MethodInvocation ps getUseGuillemotsValue setSelected StatementExpression MethodInvocation showVisibility MethodInvocation ps getShowVisibilityValue setSelected StatementExpression MethodInvocation showMultiplicity MethodInvocation ps getShowMultiplicityValue setSelected StatementExpression MethodInvocation showInitialValue MethodInvocation ps getShowInitialValueValue setSelected StatementExpression MethodInvocation showProperties MethodInvocation ps getShowPropertiesValue setSelected StatementExpression MethodInvocation showTypes MethodInvocation ps getShowTypesValue setSelected StatementExpression MethodInvocation showStereotypes MethodInvocation ps getShowStereotypesValue setSelected StatementExpression MethodInvocation showSingularMultiplicities MethodInvocation ps getShowSingularMultiplicitiesValue setSelected StatementExpression MethodInvocation defaultShadowWidth MethodInvocation ps getDefaultShadowWidthValue setSelectedIndex End MethodDeclaration /**
     * Get a boolean from the configuration.
     *
     * @param key a notation key.
     * @return a boolean
     */ Modifier protected static BasicType boolean getBoolean FormalParameter ReferenceType ConfigurationKey key ReturnStatement MethodInvocation Configuration MemberReference key Literal false getBoolean MethodDeclaration Modifier public handleSettingsTabSave IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_APPLICATION BlockStatement StatementExpression MethodInvocation Notation Cast ReferenceType NotationName MethodInvocation notationLanguage getSelectedItem setDefaultNotation StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_BOLD_NAMES MethodInvocation showBoldNames isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_USE_GUILLEMOTS MethodInvocation useGuillemots isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_VISIBILITY MethodInvocation showVisibility isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_MULTIPLICITY MethodInvocation showMultiplicity isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_INITIAL_VALUE MethodInvocation showInitialValue isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_PROPERTIES MethodInvocation showProperties isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_TYPES MethodInvocation showTypes isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_STEREOTYPES MethodInvocation showStereotypes isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_SHOW_SINGULAR_MULTIPLICITIES MethodInvocation showSingularMultiplicities isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation KEY_DEFAULT_SHADOW_WIDTH MethodInvocation defaultShadowWidth getSelectedIndex setInteger End IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_PROJECT BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings LocalVariableDeclaration ReferenceType NotationName VariableDeclarator nn Cast ReferenceType NotationName MethodInvocation notationLanguage getSelectedItem IfStatement BinaryOperation != MemberReference nn Literal null StatementExpression MethodInvocation ps MethodInvocation nn getConfigurationValue setNotationLanguage End StatementExpression MethodInvocation ps MethodInvocation showBoldNames isSelected setShowBoldNames StatementExpression MethodInvocation ps MethodInvocation useGuillemots isSelected setUseGuillemots StatementExpression MethodInvocation ps MethodInvocation showVisibility isSelected setShowVisibility StatementExpression MethodInvocation ps MethodInvocation showMultiplicity isSelected setShowMultiplicity StatementExpression MethodInvocation ps MethodInvocation showInitialValue isSelected setShowInitialValue StatementExpression MethodInvocation ps MethodInvocation showProperties isSelected setShowProperties StatementExpression MethodInvocation ps MethodInvocation showTypes isSelected setShowTypes StatementExpression MethodInvocation ps MethodInvocation showStereotypes isSelected setShowStereotypes StatementExpression MethodInvocation ps MethodInvocation showSingularMultiplicities isSelected setShowSingularMultiplicities StatementExpression MethodInvocation ps MethodInvocation defaultShadowWidth getSelectedIndex setDefaultShadowWidth End MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation handleSettingsTabRefresh MethodDeclaration Modifier public handleResetToDefault IfStatement BinaryOperation == MemberReference scope MemberReference Argo SCOPE_PROJECT BlockStatement StatementExpression MethodInvocation notationLanguage MethodInvocation Notation getConfiguredNotation setSelectedItem StatementExpression MethodInvocation showBoldNames MethodInvocation MemberReference Notation KEY_SHOW_BOLD_NAMES getBoolean setSelected StatementExpression MethodInvocation useGuillemots MethodInvocation MemberReference Notation KEY_USE_GUILLEMOTS getBoolean setSelected StatementExpression MethodInvocation showVisibility MethodInvocation MemberReference Notation KEY_SHOW_VISIBILITY getBoolean setSelected StatementExpression MethodInvocation showMultiplicity MethodInvocation MemberReference Notation KEY_SHOW_MULTIPLICITY getBoolean setSelected StatementExpression MethodInvocation showInitialValue MethodInvocation MemberReference Notation KEY_SHOW_INITIAL_VALUE getBoolean setSelected StatementExpression MethodInvocation showProperties MethodInvocation Configuration MemberReference Notation KEY_SHOW_PROPERTIES getBoolean setSelected StatementExpression MethodInvocation showTypes MethodInvocation Configuration MemberReference Notation KEY_SHOW_TYPES Literal true getBoolean setSelected StatementExpression MethodInvocation showStereotypes MethodInvocation Configuration MemberReference Notation KEY_SHOW_STEREOTYPES getBoolean setSelected StatementExpression MethodInvocation showSingularMultiplicities MethodInvocation Configuration MemberReference Notation KEY_SHOW_SINGULAR_MULTIPLICITIES getBoolean setSelected StatementExpression MethodInvocation defaultShadowWidth MethodInvocation Configuration MemberReference Notation KEY_DEFAULT_SHADOW_WIDTH Literal 1 getInteger setSelectedIndex End MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal ""tab.notation"" MethodDeclaration Modifier public ReferenceType JPanel getTabPanel ReturnStatement This MethodDeclaration /**
     * Create a localized JCheckBox.
     *
     * @param key the key for the string to be localized
     * @return a new checkbox with localized text
     */ Modifier protected ReferenceType JCheckBox createCheckBox FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j ClassCreator ReferenceType JCheckBox MethodInvocation Translator MemberReference key localize ReturnStatement MemberReference j MethodDeclaration /**
     * Create a localized JLabel.
     *
     * @param key the key of the text for the label
     * @return a new label with a localized text for the given key
     */ Modifier protected ReferenceType JLabel createLabel FormalParameter ReferenceType String key ReturnStatement ClassCreator ReferenceType JLabel MethodInvocation Translator MemberReference key localize MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean arg0 StatementExpression SuperMethodInvocation MemberReference arg0 setVisible IfStatement MemberReference arg0 StatementExpression MethodInvocation handleSettingsTabRefresh End ReferenceType JPanel ReferenceType GUISettingsTabInterface",0
900,900,"CompilationUnit PackageDeclaration org.argouml.model.mdr Import org.argouml.model.AbstractUmlHelperDecorator Import org.argouml.model.UmlHelper ClassDeclaration Modifier public /**
 * This Decorator is responsible for generating commands for any
 * mutable methods.
 *
 * @author Linus Tolke
 */ UndoUmlHelperDecorator ConstructorDeclaration /**
     * Constructor.
     *
     * @param component The component we are decorating.
     */ UndoUmlHelperDecorator FormalParameter ReferenceType UmlHelper component StatementExpression SuperConstructorInvocation MemberReference component ReferenceType AbstractUmlHelperDecorator",0
1359,1359,,0
315,315,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 26, 2003
 */ UMLClassifierAssociationEndListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierAssociationEndListModel.
     */ UMLClassifierAssociationEndListModel StatementExpression SuperConstructorInvocation Literal ""association"" MethodInvocation Model MethodInvocation getAssociation getMetaTypes MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getAssociationEnds getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getAssociationEnds MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",0
1459,1459,,0
1178,1178,,0
263,263,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 4, 2003
 */ UMLAssociationEndNavigableCheckBox ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationEndNavigableCheckBox.
     */ UMLAssociationEndNavigableCheckBox StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""label.navigable"" localize MethodInvocation ActionSetAssociationEndNavigable getInstance Literal ""isNavigable"" MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget isNavigable getFacade setSelected End ReferenceType UMLCheckBox2",0
653,653,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.Color Import java.awt.Polygon Import java.awt.Rectangle Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigPoly ClassDeclaration Modifier public /** Class to display graphics for a UML subsystem in a class diagram. */ FigSubsystem FieldDeclaration Modifier private ReferenceType FigPoly VariableDeclarator figPoly ClassCreator ReferenceType FigPoly MemberReference Color black MemberReference Color black ConstructorDeclaration Modifier public /**
     * Constructor.
     * 
     * @param modelElement
     *                Subsystem model element for which Fig is to be created.
     * @param x
     *                initial X coordinate
     * @param y
     *                initial Y coordinate
     */ FigSubsystem FormalParameter ReferenceType Object modelElement FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression SuperConstructorInvocation MemberReference modelElement MemberReference x MemberReference y LocalVariableDeclaration BasicType int VariableDeclarator xpoints ArrayInitializer Literal 125 Literal 125 Literal 130 Literal 130 Literal 130 Literal 135 Literal 135 LocalVariableDeclaration BasicType int VariableDeclarator ypoints ArrayInitializer Literal 45 Literal 40 Literal 40 Literal 35 Literal 40 Literal 40 Literal 45 LocalVariableDeclaration ReferenceType Polygon VariableDeclarator polygon ClassCreator ReferenceType Polygon MemberReference xpoints MemberReference ypoints Literal 7 StatementExpression MethodInvocation figPoly MemberReference polygon setPolygon StatementExpression MethodInvocation figPoly Literal false setFilled StatementExpression MethodInvocation MemberReference figPoly addFig LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds StatementExpression MethodInvocation updateEdges ConstructorDeclaration Modifier public /**
     * Constructor that hooks the Fig to a UML element
     * @param gm ignored
     * @param node the UML element
     */ FigSubsystem FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation MemberReference node Literal 0 Literal 0 MethodDeclaration Modifier protected Annotation Override setStandardBounds FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation != MemberReference figPoly Literal null BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation figPoly BinaryOperation + BinaryOperation - MemberReference x MemberReference oldBounds x BinaryOperation - MemberReference w MemberReference oldBounds width BinaryOperation - MemberReference y MemberReference oldBounds y translate End StatementExpression SuperMethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setStandardBounds ReferenceType FigPackage",0
270,270,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import java.util.Iterator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * List model for messages on the interaction proppanel.
 *
 * @author jaap.branderhorst@xs4all.nl
 */ UMLInteractionMessagesListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLInteractionMessagesListModel.
     */ UMLInteractionMessagesListModel StatementExpression SuperConstructorInvocation Literal ""message"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MethodInvocation getTarget getMessages MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation it next addElement End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem isAMessage getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference elem getInteraction getFacade MethodInvocation getTarget ReferenceType UMLModelElementListModel2",0
624,624,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 27, 2003
 */ UMLGeneralizableElementAbstractCheckBox ConstructorDeclaration Modifier public /**
     * Constructor for UMLGeneralizableElementRootCheckBox.
     */ UMLGeneralizableElementAbstractCheckBox StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""checkbox.abstract-lc"" localize MethodInvocation ActionSetGeneralizableElementAbstract getInstance Literal ""isAbstract"" MethodDeclaration Modifier public buildModel LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference target isAbstract getFacade setSelected BlockStatement StatementExpression MethodInvocation Literal false setSelected End ReferenceType UMLCheckBox2",0
1293,1293,,0
1134,1134,,0
1047,1047,,0
1205,1205,,0
764,764,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * An interface to act as an enumerated type for a di class diagram.
 *
 * @author Bob Tarling
 */ ClassDiagram ReferenceType DiDiagram",0
565,565,"CompilationUnit PackageDeclaration org.argouml.uml.ui.model_management Import java.util.ArrayList Import java.util.Collection Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 ClassDeclaration /**
 * Add an import to a package.
 * 
 * @author Michiel
 */ ActionAddPackageImport ConstructorDeclaration /**
     * Constructor for ActionAddPackageImport.
     */ ActionAddPackageImport StatementExpression SuperConstructorInvocation MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation getTarget getAllPossibleImports getModelManagementHelper addAll ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation getTarget getImportedElements getFacade addAll ReturnStatement MemberReference vec MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-imported-elements"" localize MethodDeclaration Modifier protected Annotation Override doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator pack MethodInvocation getTarget StatementExpression MethodInvocation Model MethodInvocation MemberReference pack MemberReference selected setImportedElements getModelManagementHelper ReferenceType AbstractActionAddModelElement2",1
735,735,"CompilationUnit PackageDeclaration org.argouml.cognitive ClassDeclaration Modifier public /**
 * Thrown to indicate a failure to resolve a critic.
 */ UnresolvableException ConstructorDeclaration Modifier public /**
     * Creates a new UnresolvableException with message msg.
     *
     * @param	msg	A message describing what caused the exception.
     */ UnresolvableException FormalParameter ReferenceType String msg StatementExpression SuperConstructorInvocation MemberReference msg ReferenceType Exception",0
250,250,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.extension_mechanisms Import java.util.Collection Import java.util.Collections Import java.util.LinkedList Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * A model for selecting a UML metaclass. Originally designed for use in
 * selecting the base class of stereotypes in UML 1.3, but now used to select
 * the type of a TagDefinition.
 * 
 * @author mkl
 */ UMLMetaClassComboBoxModel FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String VariableDeclarator metaClasses ConstructorDeclaration Modifier public /**
     * Construct a default combo box model.
     */ UMLMetaClassComboBoxModel StatementExpression SuperConstructorInvocation Literal ""tagType"" Literal true LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator tmpMetaClasses MethodInvocation Model MethodInvocation getAllMetatypeNames getCoreHelper IfStatement BinaryOperation instanceof MemberReference tmpMetaClasses ReferenceType List BlockStatement StatementExpression Assignment MemberReference metaClasses Cast ReferenceType List TypeArgument ReferenceType String MemberReference tmpMetaClasses = BlockStatement StatementExpression Assignment MemberReference metaClasses ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String MemberReference tmpMetaClasses = End TryStatement StatementExpression MethodInvocation Collections MemberReference metaClasses sort CatchClause CatchClauseParameter UnsupportedOperationException e StatementExpression Assignment MemberReference metaClasses ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String MemberReference tmpMetaClasses = StatementExpression MethodInvocation Collections MemberReference metaClasses sort MethodDeclaration Modifier protected Annotation Override ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade End ReturnStatement Literal null MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MemberReference metaClasses setElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation metaClasses MemberReference element contains ReferenceType UMLComboBoxModel2",1
1137,1137,,0
367,367,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.Font Import java.beans.PropertyChangeEvent Import java.beans.PropertyVetoException Import org.argouml.model.AssociationChangeEvent Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.Model Import org.argouml.notation.NotationProvider Import org.argouml.notation.NotationProviderFactory2 Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigRRect Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public abstract /**
 * The fig hierarchy should comply as much as possible to the hierarchy of the
 * UML metamodel. Reason for this is to make sure that events from the model are
 * not missed by the figs. The hierarchy of the states was not compliant to
 * this. This resulted in a number of issues (issue 1430 for example). Therefore
 * introduced an abstract FigState and made FigCompositeState and FigSimpleState
 * subclasses of this state.
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Dec 30, 2002
 */ FigState FieldDeclaration Modifier final protected static BasicType int VariableDeclarator SPACE_TOP Literal 0 FieldDeclaration Modifier final protected static BasicType int VariableDeclarator SPACE_MIDDLE Literal 0 FieldDeclaration Modifier final protected static BasicType int VariableDeclarator DIVIDER_Y Literal 0 FieldDeclaration Modifier final protected static BasicType int VariableDeclarator SPACE_BOTTOM Literal 6 FieldDeclaration Modifier final protected static BasicType int VariableDeclarator MARGIN Literal 2 FieldDeclaration Modifier protected ReferenceType NotationProvider VariableDeclarator notationProviderBody FieldDeclaration /**
     * The text inside the state.
     */ Modifier private ReferenceType FigText VariableDeclarator internal ConstructorDeclaration Modifier public /**
     * Constructor for FigState.
     */ FigState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation ClassCreator ReferenceType FigRRect BinaryOperation + MethodInvocation getInitialX Literal 1 BinaryOperation + MethodInvocation getInitialY Literal 1 BinaryOperation - MethodInvocation getInitialWidth Literal 2 BinaryOperation - MethodInvocation getInitialHeight Literal 2 MemberReference Color cyan MemberReference Color cyan setBigPort StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MethodInvocation getInitialX Literal 2 BinaryOperation + MethodInvocation getInitialY Literal 2 BinaryOperation - MethodInvocation getInitialWidth Literal 4 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig setBounds getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference internal ClassCreator ReferenceType FigText BinaryOperation + MethodInvocation getInitialX Literal 2 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 Literal 21 Literal 4 BinaryOperation - MethodInvocation getInitialWidth Literal 4 BinaryOperation - MethodInvocation getInitialHeight BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 Literal 21 Literal 4 = StatementExpression MethodInvocation internal MemberReference Color black setTextColor StatementExpression MethodInvocation internal Literal 0 setLineWidth StatementExpression MethodInvocation internal Literal false setFilled StatementExpression MethodInvocation internal Literal true setExpandOnly StatementExpression MethodInvocation internal MemberReference FigText INSERT setReturnAction StatementExpression MethodInvocation internal MemberReference FigText JUSTIFY_LEFT setJustification ConstructorDeclaration Modifier public /**
     * Constructor for FigState, used when an UML elm already exists.
     *
     * @param gm ignored
     * @param node the UML element
     */ FigState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public Annotation Override setOwner FormalParameter ReferenceType Object newOwner StatementExpression SuperMethodInvocation MemberReference newOwner setOwner StatementExpression MethodInvocation renderingChanged MethodDeclaration Modifier protected Annotation Override initNotationProviders FormalParameter ReferenceType Object own IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation notationProviderBody This MemberReference own cleanListener End StatementExpression SuperMethodInvocation MemberReference own initNotationProviders IfStatement MethodInvocation Model MethodInvocation MemberReference own isAState getFacade BlockStatement StatementExpression Assignment MemberReference notationProviderBody MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 TYPE_STATEBODY MemberReference own This getNotationProvider getInstance = End MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mee ReferenceType AssociationChangeEvent BinaryOperation instanceof MemberReference mee ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation renderingChanged StatementExpression MethodInvocation notationProviderBody This MethodInvocation getOwner MemberReference mee updateListener StatementExpression MethodInvocation damage End MethodDeclaration Modifier public Annotation Override removeFromDiagramImpl StatementExpression MethodInvocation notationProviderBody This MethodInvocation getOwner cleanListener StatementExpression SuperMethodInvocation removeFromDiagramImpl MethodDeclaration Modifier public Annotation Override renderingChanged LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getOwner IfStatement BinaryOperation == MemberReference state Literal null BlockStatement ReturnStatement End IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation internal MethodInvocation notationProviderBody MethodInvocation getOwner Literal null toString setText End StatementExpression SuperMethodInvocation renderingChanged StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds MethodDeclaration /**
     * @return the initial X
     */ Modifier protected abstract BasicType int getInitialX MethodDeclaration /**
     * @return the initial Y
     */ Modifier protected abstract BasicType int getInitialY MethodDeclaration /**
     * @return the initial width
     */ Modifier protected abstract BasicType int getInitialWidth MethodDeclaration /**
     * @return the initial height
     */ Modifier protected abstract BasicType int getInitialHeight MethodDeclaration /**
     * @param theInternal The internal to set.
     */ Modifier protected setInternal FormalParameter ReferenceType FigText theInternal StatementExpression Assignment This MemberReference internal MemberReference theInternal = MethodDeclaration /**
     * @return Returns the internal.
     */ Modifier protected ReferenceType FigText getInternal ReturnStatement MemberReference internal MethodDeclaration Modifier protected Annotation Override textEditStarted FormalParameter ReferenceType FigText ft StatementExpression SuperMethodInvocation MemberReference ft textEditStarted IfStatement BinaryOperation == MemberReference ft MemberReference internal BlockStatement StatementExpression MethodInvocation MethodInvocation notationProviderBody getParsingHelp showHelp End MethodDeclaration Modifier public Annotation Override textEdited FormalParameter ReferenceType FigText ft PropertyVetoException StatementExpression SuperMethodInvocation MemberReference ft textEdited IfStatement BinaryOperation == MemberReference ft MethodInvocation getInternal BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation getOwner IfStatement BinaryOperation == MemberReference st Literal null BlockStatement ReturnStatement End StatementExpression MethodInvocation notationProviderBody MethodInvocation getOwner MethodInvocation ft getText parse StatementExpression MethodInvocation ft MethodInvocation notationProviderBody MethodInvocation getOwner Literal null toString setText End MethodDeclaration /**
     * 
     * @see org.argouml.uml.diagram.ui.FigNodeModelElement#updateFont()
     */ Modifier protected Annotation Override updateFont StatementExpression SuperMethodInvocation updateFont LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation MethodInvocation getProjectSettings MethodInvocation MemberReference Font PLAIN getFont getProject StatementExpression MethodInvocation internal MemberReference f setFont ReferenceType FigStateVertex",0
476,476,"CompilationUnit PackageDeclaration org.argouml.model.euml Import java.util.Collection Import org.argouml.model.AbstractModelFactory Import org.argouml.model.ActivityGraphsFactory ClassDeclaration /**
 * The implementation of the ActivityGraphsFactory for EUML2.
 */ ActivityGraphsFactoryEUMLlImpl FieldDeclaration /**
     * The model implementation.
     */ Modifier private ReferenceType EUMLModelImplementation VariableDeclarator modelImpl ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param implementation The ModelImplementation.
     */ ActivityGraphsFactoryEUMLlImpl FormalParameter ReferenceType EUMLModelImplementation implementation StatementExpression Assignment MemberReference modelImpl MemberReference implementation = MethodDeclaration Modifier public ReferenceType Object buildActivityGraph FormalParameter ReferenceType Object theContext ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object buildClassifierInState FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Collection state ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object buildObjectFlowState FormalParameter ReferenceType Object compositeState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createActionState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createActivityGraph ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createCallState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createClassifierInState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createObjectFlowState ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createPartition ThrowStatement ClassCreator ReferenceType NotYetImplementedException MethodDeclaration Modifier public ReferenceType Object createSubactivityState ThrowStatement ClassCreator ReferenceType NotYetImplementedException ReferenceType ActivityGraphsFactory ReferenceType AbstractModelFactory",0
1377,1377,,0
1058,1058,,0
952,952,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.Insets Import java.awt.event.ActionEvent Import javax.swing.AbstractAction Import javax.swing.JDialog Import javax.swing.JScrollPane Import javax.swing.JTextArea Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.persistence.PersistenceManager Import org.argouml.util.ArgoFrame Import org.argouml.util.UIUtils ClassDeclaration Modifier public /**
 * Action that shows an XML dump of the current project contents.
 */ ActionShowXMLDump FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7942597779499060380L FieldDeclaration /**
     * Insets in pixels.
     */ Modifier private final static BasicType int VariableDeclarator INSET_PX Literal 3 ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionShowXMLDump StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.show-saved"" localize MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType String VariableDeclarator data MethodInvocation PersistenceManager MethodInvocation MemberReference project getQuickViewDump getInstance LocalVariableDeclaration ReferenceType JDialog VariableDeclarator pw ClassCreator ReferenceType JDialog MethodInvocation ArgoFrame getInstance MethodInvocation Translator Literal ""action.show-saved"" localize Literal false LocalVariableDeclaration ReferenceType JTextArea VariableDeclarator a ClassCreator ReferenceType JTextArea MemberReference data Literal 50 Literal 80 StatementExpression MethodInvocation a Literal false setEditable StatementExpression MethodInvocation a Literal true setLineWrap StatementExpression MethodInvocation a Literal true setWrapStyleWord StatementExpression MethodInvocation a ClassCreator ReferenceType Insets MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX setMargin StatementExpression MethodInvocation a Literal 0 setCaretPosition StatementExpression MethodInvocation pw MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference a add getContentPane StatementExpression MethodInvocation pw Literal 400 Literal 500 setSize StatementExpression MethodInvocation pw MethodInvocation ArgoFrame getInstance setLocationRelativeTo StatementExpression MethodInvocation MemberReference pw init StatementExpression MethodInvocation pw Literal true setVisible MethodDeclaration Modifier private init FormalParameter ReferenceType JDialog pw StatementExpression MethodInvocation UIUtils MemberReference pw loadCommonKeyMap ReferenceType AbstractAction",0
560,560,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.event.MouseEvent Import javax.swing.Icon Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.model.Model Import org.argouml.uml.diagram.deployment.DeploymentDiagramGraphModel Import org.argouml.uml.diagram.ui.SelectionNodeClarifiers2 Import org.tigris.gef.base.Globals Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * @author jrobbins@ics.uci.edu
 */ SelectionClass FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator inherit MethodInvocation ResourceLoaderWrapper Literal ""Generalization"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator assoc MethodInvocation ResourceLoaderWrapper Literal ""Association"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator compos MethodInvocation ResourceLoaderWrapper Literal ""CompositeAggregation"" lookupIconResource FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator selfassoc MethodInvocation ResourceLoaderWrapper Literal ""SelfAssociation"" lookupIconResource FieldDeclaration Modifier private BasicType boolean VariableDeclarator useComposite FieldDeclaration Modifier private static ReferenceType Icon VariableDeclarator icons ArrayInitializer MemberReference inherit MemberReference inherit MemberReference assoc MemberReference assoc MemberReference selfassoc FieldDeclaration Modifier private static ReferenceType String VariableDeclarator instructions ArrayInitializer Literal ""Add a superclass"" Literal ""Add a subclass"" Literal ""Add an associated class"" Literal ""Add an associated class"" Literal ""Add a self association"" Literal ""Move object(s)"" FieldDeclaration Modifier private static ReferenceType Object VariableDeclarator edgeType ArrayInitializer MethodInvocation Model MethodInvocation getGeneralization getMetaTypes MethodInvocation Model MethodInvocation getGeneralization getMetaTypes MethodInvocation Model MethodInvocation getAssociation getMetaTypes MethodInvocation Model MethodInvocation getAssociation getMetaTypes MethodInvocation Model MethodInvocation getAssociation getMetaTypes ConstructorDeclaration Modifier public /**
     * Construct a new SelectionClass for the given Fig.
     *
     * @param f The given Fig.
     */ SelectionClass FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons LocalVariableDeclaration ReferenceType Icon VariableDeclarator workingIcons ArrayCreator ReferenceType Icon MemberReference icons length StatementExpression MethodInvocation System MemberReference icons Literal 0 MemberReference workingIcons Literal 0 MemberReference icons length arraycopy IfStatement BinaryOperation instanceof MethodInvocation Globals MethodInvocation getGraphModel curEditor ReferenceType DeploymentDiagramGraphModel BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference TOP MemberReference BASE workingIcons Literal null = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference BOTTOM MemberReference BASE workingIcons Literal null = End IfStatement MemberReference useComposite BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference RIGHT MemberReference BASE workingIcons MemberReference compos = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference RIGHT MemberReference BASE workingIcons MemberReference compos = End ReturnStatement MemberReference workingIcons MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int i ReturnStatement MethodInvocation Model MethodInvocation getUMLClass getMetaTypes MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewEdgeType FormalParameter BasicType int i IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference i MethodInvocation getButton = End ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference i Literal 10 edgeType MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int i IfStatement BinaryOperation || BinaryOperation == MemberReference i MemberReference BOTTOM BinaryOperation == MemberReference i MemberReference LEFT BlockStatement ReturnStatement Literal true End ReturnStatement Literal false MethodDeclaration Modifier protected Annotation Override BasicType boolean isDraggableHandle FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference LOWER_LEFT BlockStatement ReturnStatement Literal false End ReturnStatement Literal true MethodDeclaration Modifier protected Annotation Override BasicType boolean isEdgePostProcessRequested ReturnStatement MemberReference useComposite MethodDeclaration Modifier public Annotation Override mouseEntered FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseEntered StatementExpression Assignment MemberReference useComposite MethodInvocation me isShiftDown = MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation buildClass getCoreFactory ReferenceType SelectionNodeClarifiers2",0
1554,1554,,0
882,882,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a namespace has too many classes.
 */ CrTooManyClasses FieldDeclaration /**
     * The initial threshold.
     */ Modifier private final static BasicType int VariableDeclarator CLASS_THRESHOLD Literal 20 ConstructorDeclaration Modifier public /**
     * The constructor.
      */ CrTooManyClasses StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision CLASS_SELECTION addSupportedDecision StatementExpression MethodInvocation MemberReference CLASS_THRESHOLD setThreshold StatementExpression MethodInvocation Literal ""ownedElement"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator subs MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator classes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator me MemberReference subs BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isAClass getFacade BlockStatement StatementExpression MethodInvocation classes MemberReference me add End End IfStatement BinaryOperation <= MethodInvocation classes size MethodInvocation getThreshold BlockStatement ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 3270186791825482658L ReferenceType AbstractCrTooMany",0
192,192,"CompilationUnit PackageDeclaration jdepend.framework Import java.io  Import java.util  ClassDeclaration Modifier public /**
 * The <code>ClassFileParser</code> class is responsible for 
 * parsing a Java class file to create a <code>JavaClass</code> 
 * instance.
 * 
 * @author <b>Mike Clark</b>
 * @author Clarkware Consulting, Inc.
 */ ClassFileParser FieldDeclaration Modifier public final static BasicType int VariableDeclarator JAVA_MAGIC Literal 0xCAFEBABE FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_UTF8 Literal 1 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_UNICODE Literal 2 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_INTEGER Literal 3 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_FLOAT Literal 4 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_LONG Literal 5 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_DOUBLE Literal 6 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_CLASS Literal 7 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_STRING Literal 8 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_FIELD Literal 9 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_METHOD Literal 10 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_INTERFACEMETHOD Literal 11 FieldDeclaration Modifier public final static BasicType int VariableDeclarator CONSTANT_NAMEANDTYPE Literal 12 FieldDeclaration Modifier public final static BasicType char VariableDeclarator CLASS_DESCRIPTOR Literal 'L' FieldDeclaration Modifier public final static BasicType int VariableDeclarator ACC_INTERFACE Literal 0x200 FieldDeclaration Modifier public final static BasicType int VariableDeclarator ACC_ABSTRACT Literal 0x400 FieldDeclaration Modifier private ReferenceType String VariableDeclarator fileName FieldDeclaration Modifier private ReferenceType String VariableDeclarator className FieldDeclaration Modifier private ReferenceType String VariableDeclarator superClassName FieldDeclaration Modifier private ReferenceType String VariableDeclarator interfaceNames FieldDeclaration Modifier private BasicType boolean VariableDeclarator isAbstract FieldDeclaration Modifier private ReferenceType JavaClass VariableDeclarator jClass FieldDeclaration Modifier private ReferenceType Constant VariableDeclarator constantPool FieldDeclaration Modifier private ReferenceType FieldOrMethodInfo VariableDeclarator fields FieldDeclaration Modifier private ReferenceType FieldOrMethodInfo VariableDeclarator methods FieldDeclaration Modifier private ReferenceType AttributeInfo VariableDeclarator attributes FieldDeclaration Modifier private ReferenceType DataInputStream VariableDeclarator in ConstructorDeclaration Modifier public ClassFileParser StatementExpression ExplicitConstructorInvocation ClassCreator ReferenceType PackageFilter ConstructorDeclaration Modifier public ClassFileParser FormalParameter ReferenceType PackageFilter filter StatementExpression SuperConstructorInvocation MemberReference filter StatementExpression MethodInvocation reset MethodDeclaration Modifier private reset StatementExpression Assignment MemberReference className Literal null = StatementExpression Assignment MemberReference superClassName Literal null = StatementExpression Assignment MemberReference interfaceNames ArrayCreator ReferenceType String Literal 0 = StatementExpression Assignment MemberReference isAbstract Literal false = StatementExpression Assignment MemberReference jClass Literal null = StatementExpression Assignment MemberReference constantPool ArrayCreator ReferenceType Constant Literal 1 = StatementExpression Assignment MemberReference fields ArrayCreator ReferenceType FieldOrMethodInfo Literal 0 = StatementExpression Assignment MemberReference methods ArrayCreator ReferenceType FieldOrMethodInfo Literal 0 = StatementExpression Assignment MemberReference attributes ArrayCreator ReferenceType AttributeInfo Literal 0 = MethodDeclaration /**
     * Registered parser listeners are informed that the resulting
     * <code>JavaClass</code> was parsed.
     */ Modifier public ReferenceType JavaClass parse FormalParameter ReferenceType File classFile IOException StatementExpression Assignment This MemberReference fileName MethodInvocation classFile getCanonicalPath = StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal ""\nParsing "" MemberReference fileName Literal ""..."" debug LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in Literal null TryStatement StatementExpression Assignment MemberReference in ClassCreator ReferenceType FileInputStream MemberReference classFile = ReturnStatement MethodInvocation MemberReference in parse IfStatement BinaryOperation != MemberReference in Literal null BlockStatement TryStatement StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation ioe printStackTrace End MethodDeclaration Modifier public ReferenceType JavaClass parse FormalParameter ReferenceType InputStream is IOException StatementExpression MethodInvocation reset StatementExpression Assignment MemberReference jClass ClassCreator ReferenceType JavaClass Literal ""Unknown"" = StatementExpression Assignment MemberReference in ClassCreator ReferenceType DataInputStream MemberReference is = LocalVariableDeclaration BasicType int VariableDeclarator magic MethodInvocation parseMagic LocalVariableDeclaration BasicType int VariableDeclarator minorVersion MethodInvocation parseMinorVersion LocalVariableDeclaration BasicType int VariableDeclarator majorVersion MethodInvocation parseMajorVersion StatementExpression Assignment MemberReference constantPool MethodInvocation parseConstantPool = StatementExpression MethodInvocation parseAccessFlags StatementExpression Assignment MemberReference className MethodInvocation parseClassName = StatementExpression Assignment MemberReference superClassName MethodInvocation parseSuperClassName = StatementExpression Assignment MemberReference interfaceNames MethodInvocation parseInterfaces = StatementExpression Assignment MemberReference fields MethodInvocation parseFields = StatementExpression Assignment MemberReference methods MethodInvocation parseMethods = StatementExpression MethodInvocation parseAttributes StatementExpression MethodInvocation addClassConstantReferences StatementExpression MethodInvocation MemberReference jClass onParsedJavaClass ReturnStatement MemberReference jClass MethodDeclaration Modifier private BasicType int parseMagic IOException LocalVariableDeclaration BasicType int VariableDeclarator magic MethodInvocation in readInt IfStatement BinaryOperation != MemberReference magic MemberReference JAVA_MAGIC BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Invalid class file: "" MemberReference fileName End ReturnStatement MemberReference magic MethodDeclaration Modifier private BasicType int parseMinorVersion IOException ReturnStatement MethodInvocation in readUnsignedShort MethodDeclaration Modifier private BasicType int parseMajorVersion IOException ReturnStatement MethodInvocation in readUnsignedShort MethodDeclaration Modifier private ReferenceType Constant parseConstantPool IOException LocalVariableDeclaration BasicType int VariableDeclarator constantPoolSize MethodInvocation in readUnsignedShort LocalVariableDeclaration ReferenceType Constant VariableDeclarator pool ArrayCreator ReferenceType Constant MemberReference constantPoolSize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference constantPoolSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Constant VariableDeclarator constant MethodInvocation parseNextConstant StatementExpression Assignment MemberReference ArraySelector MemberReference i pool MemberReference constant = IfStatement BinaryOperation || BinaryOperation == MethodInvocation constant getTag MemberReference CONSTANT_DOUBLE BinaryOperation == MethodInvocation constant getTag MemberReference CONSTANT_LONG BlockStatement StatementExpression MemberReference ++ i End End ReturnStatement MemberReference pool MethodDeclaration Modifier private parseAccessFlags IOException LocalVariableDeclaration BasicType int VariableDeclarator accessFlags MethodInvocation in readUnsignedShort LocalVariableDeclaration BasicType boolean VariableDeclarator isAbstract BinaryOperation != BinaryOperation & MemberReference accessFlags MemberReference ACC_ABSTRACT Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator isInterface BinaryOperation != BinaryOperation & MemberReference accessFlags MemberReference ACC_INTERFACE Literal 0 StatementExpression Assignment This MemberReference isAbstract BinaryOperation || MemberReference isAbstract MemberReference isInterface = StatementExpression MethodInvocation jClass This MemberReference isAbstract isAbstract StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: abstract = "" This MemberReference isAbstract debug MethodDeclaration Modifier private ReferenceType String parseClassName IOException LocalVariableDeclaration BasicType int VariableDeclarator entryIndex MethodInvocation in readUnsignedShort LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation MemberReference entryIndex getClassConstantName StatementExpression MethodInvocation jClass MemberReference className setName StatementExpression MethodInvocation jClass MethodInvocation MemberReference className getPackageName setPackageName StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: class name = "" MemberReference className debug StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: package name = "" MethodInvocation MemberReference className getPackageName debug ReturnStatement MemberReference className MethodDeclaration Modifier private ReferenceType String parseSuperClassName IOException LocalVariableDeclaration BasicType int VariableDeclarator entryIndex MethodInvocation in readUnsignedShort LocalVariableDeclaration ReferenceType String VariableDeclarator superClassName MethodInvocation MemberReference entryIndex getClassConstantName StatementExpression MethodInvocation MethodInvocation MemberReference superClassName getPackageName addImport StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: super class name = "" MemberReference superClassName debug ReturnStatement MemberReference superClassName MethodDeclaration Modifier private ReferenceType String parseInterfaces IOException LocalVariableDeclaration BasicType int VariableDeclarator interfacesCount MethodInvocation in readUnsignedShort LocalVariableDeclaration ReferenceType String VariableDeclarator interfaceNames ArrayCreator ReferenceType String MemberReference interfacesCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference interfacesCount MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator entryIndex MethodInvocation in readUnsignedShort StatementExpression Assignment MemberReference ArraySelector MemberReference i interfaceNames MethodInvocation MemberReference entryIndex getClassConstantName = StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference i interfaceNames getPackageName addImport StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: interface = "" MemberReference ArraySelector MemberReference i interfaceNames debug End ReturnStatement MemberReference interfaceNames MethodDeclaration Modifier private ReferenceType FieldOrMethodInfo parseFields IOException LocalVariableDeclaration BasicType int VariableDeclarator fieldsCount MethodInvocation in readUnsignedShort LocalVariableDeclaration ReferenceType FieldOrMethodInfo VariableDeclarator fields ArrayCreator ReferenceType FieldOrMethodInfo MemberReference fieldsCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fieldsCount MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i fields MethodInvocation parseFieldOrMethodInfo = LocalVariableDeclaration ReferenceType String VariableDeclarator descriptor MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getDescriptorIndex fields toUTF8 StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: field descriptor = "" MemberReference descriptor debug LocalVariableDeclaration ReferenceType String VariableDeclarator types MethodInvocation MemberReference descriptor descriptorToTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference types length MemberReference ++ t BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference t types getPackageName addImport StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: field type = "" MemberReference ArraySelector MemberReference t types debug End End ReturnStatement MemberReference fields MethodDeclaration Modifier private ReferenceType FieldOrMethodInfo parseMethods IOException LocalVariableDeclaration BasicType int VariableDeclarator methodsCount MethodInvocation in readUnsignedShort LocalVariableDeclaration ReferenceType FieldOrMethodInfo VariableDeclarator methods ArrayCreator ReferenceType FieldOrMethodInfo MemberReference methodsCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methodsCount MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i methods MethodInvocation parseFieldOrMethodInfo = LocalVariableDeclaration ReferenceType String VariableDeclarator descriptor MethodInvocation MemberReference ArraySelector MemberReference i MethodInvocation getDescriptorIndex methods toUTF8 StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: method descriptor = "" MemberReference descriptor debug LocalVariableDeclaration ReferenceType String VariableDeclarator types MethodInvocation MemberReference descriptor descriptorToTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference types length MemberReference ++ t BlockStatement IfStatement BinaryOperation > MemberReference ArraySelector MemberReference t MethodInvocation length types Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector MemberReference t types getPackageName addImport StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: method type = "" MemberReference ArraySelector MemberReference t types debug End End End ReturnStatement MemberReference methods MethodDeclaration Modifier private ReferenceType Constant parseNextConstant IOException LocalVariableDeclaration ReferenceType Constant VariableDeclarator result LocalVariableDeclaration BasicType byte VariableDeclarator tag MethodInvocation in readByte SwitchStatement MemberReference tag SwitchStatementCase MemberReference ClassFileParser CONSTANT_CLASS MemberReference ClassFileParser CONSTANT_STRING StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag MethodInvocation in readUnsignedShort = BreakStatement SwitchStatementCase MemberReference ClassFileParser CONSTANT_FIELD MemberReference ClassFileParser CONSTANT_METHOD MemberReference ClassFileParser CONSTANT_INTERFACEMETHOD MemberReference ClassFileParser CONSTANT_NAMEANDTYPE StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag MethodInvocation in readUnsignedShort MethodInvocation in readUnsignedShort = BreakStatement SwitchStatementCase MemberReference ClassFileParser CONSTANT_INTEGER StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag ClassCreator ReferenceType Integer MethodInvocation in readInt = BreakStatement SwitchStatementCase MemberReference ClassFileParser CONSTANT_FLOAT StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag ClassCreator ReferenceType Float MethodInvocation in readFloat = BreakStatement SwitchStatementCase MemberReference ClassFileParser CONSTANT_LONG StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag ClassCreator ReferenceType Long MethodInvocation in readLong = BreakStatement SwitchStatementCase MemberReference ClassFileParser CONSTANT_DOUBLE StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag ClassCreator ReferenceType Double MethodInvocation in readDouble = BreakStatement SwitchStatementCase MemberReference ClassFileParser CONSTANT_UTF8 StatementExpression Assignment MemberReference result ClassCreator ReferenceType Constant MemberReference tag MethodInvocation in readUTF = BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Unknown constant: "" MemberReference tag End ReturnStatement MemberReference result MethodDeclaration Modifier private ReferenceType FieldOrMethodInfo parseFieldOrMethodInfo IOException LocalVariableDeclaration ReferenceType FieldOrMethodInfo VariableDeclarator result ClassCreator ReferenceType FieldOrMethodInfo MethodInvocation in readUnsignedShort MethodInvocation in readUnsignedShort MethodInvocation in readUnsignedShort LocalVariableDeclaration BasicType int VariableDeclarator attributesCount MethodInvocation in readUnsignedShort ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator a Literal 0 BinaryOperation < MemberReference a MemberReference attributesCount MemberReference ++ a BlockStatement StatementExpression MethodInvocation parseAttribute End ReturnStatement MemberReference result MethodDeclaration Modifier private parseAttributes IOException LocalVariableDeclaration BasicType int VariableDeclarator attributesCount MethodInvocation in readUnsignedShort StatementExpression Assignment MemberReference attributes ArrayCreator ReferenceType AttributeInfo MemberReference attributesCount = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference attributesCount MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i attributes MethodInvocation parseAttribute = IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i MethodInvocation getName attributes Literal null BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation getName MethodInvocation Literal ""SourceFile"" equals attributes BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator b MemberReference ArraySelector MemberReference i MethodInvocation getValue attributes LocalVariableDeclaration BasicType int VariableDeclarator b0 TernaryExpression BinaryOperation < MemberReference ArraySelector Literal 0 b Literal 0 BinaryOperation + MemberReference ArraySelector Literal 0 b Literal 256 MemberReference ArraySelector Literal 0 b LocalVariableDeclaration BasicType int VariableDeclarator b1 TernaryExpression BinaryOperation < MemberReference ArraySelector Literal 1 b Literal 0 BinaryOperation + MemberReference ArraySelector Literal 1 b Literal 256 MemberReference ArraySelector Literal 1 b LocalVariableDeclaration BasicType int VariableDeclarator pe BinaryOperation + BinaryOperation * MemberReference b0 Literal 256 MemberReference b1 LocalVariableDeclaration ReferenceType String VariableDeclarator descriptor MethodInvocation MemberReference pe toUTF8 StatementExpression MethodInvocation jClass MemberReference descriptor setSourceFile End End End MethodDeclaration Modifier private ReferenceType AttributeInfo parseAttribute IOException LocalVariableDeclaration ReferenceType AttributeInfo VariableDeclarator result ClassCreator ReferenceType AttributeInfo LocalVariableDeclaration BasicType int VariableDeclarator nameIndex MethodInvocation in readUnsignedShort IfStatement BinaryOperation != MemberReference nameIndex Literal - 1 BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference nameIndex toUTF8 setName End LocalVariableDeclaration BasicType int VariableDeclarator attributeLength MethodInvocation in readInt LocalVariableDeclaration BasicType byte VariableDeclarator value ArrayCreator BasicType byte MemberReference attributeLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator b Literal 0 BinaryOperation < MemberReference b MemberReference attributeLength MemberReference ++ b BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference b value MethodInvocation in readByte = End StatementExpression MethodInvocation result MemberReference value setValue ReturnStatement MemberReference result MethodDeclaration Modifier private ReferenceType Constant getConstantPoolEntry FormalParameter BasicType int entryIndex IOException IfStatement BinaryOperation || BinaryOperation < MemberReference entryIndex Literal 0 BinaryOperation >= MemberReference entryIndex MemberReference constantPool length BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Illegal constant pool index : "" MemberReference entryIndex End ReturnStatement MemberReference ArraySelector MemberReference entryIndex constantPool MethodDeclaration Modifier private addClassConstantReferences IOException ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 1 BinaryOperation < MemberReference j MemberReference constantPool length MemberReference ++ j BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference j MethodInvocation getTag constantPool MemberReference CONSTANT_CLASS BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MemberReference ArraySelector MemberReference j MethodInvocation getNameIndex constantPool toUTF8 StatementExpression MethodInvocation MethodInvocation MemberReference name getPackageName addImport StatementExpression MethodInvocation BinaryOperation + Literal ""Parser: class type = "" MethodInvocation MemberReference name slashesToDots debug End IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference j MethodInvocation getTag constantPool MemberReference CONSTANT_DOUBLE BinaryOperation == MemberReference ArraySelector MemberReference j MethodInvocation getTag constantPool MemberReference CONSTANT_LONG BlockStatement StatementExpression MemberReference ++ j End End MethodDeclaration Modifier private ReferenceType String getClassConstantName FormalParameter BasicType int entryIndex IOException LocalVariableDeclaration ReferenceType Constant VariableDeclarator entry MethodInvocation MemberReference entryIndex getConstantPoolEntry IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement ReturnStatement Literal """" End ReturnStatement MethodInvocation MethodInvocation MethodInvocation entry getNameIndex toUTF8 slashesToDots MethodDeclaration Modifier private ReferenceType String toUTF8 FormalParameter BasicType int entryIndex IOException LocalVariableDeclaration ReferenceType Constant VariableDeclarator entry MethodInvocation MemberReference entryIndex getConstantPoolEntry IfStatement BinaryOperation == MethodInvocation entry getTag MemberReference CONSTANT_UTF8 BlockStatement ReturnStatement Cast ReferenceType String MethodInvocation entry getValue End ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal ""Constant pool entry is not a UTF8 type: "" MemberReference entryIndex MethodDeclaration Modifier private addImport FormalParameter ReferenceType String importPackage IfStatement BinaryOperation && BinaryOperation != MemberReference importPackage Literal null MethodInvocation getFilter BlockStatement StatementExpression MethodInvocation jClass ClassCreator ReferenceType JavaPackage MemberReference importPackage addImportedPackage End MethodDeclaration Modifier private ReferenceType String slashesToDots FormalParameter ReferenceType String s ReturnStatement MethodInvocation s Literal '/' Literal '.' replace MethodDeclaration Modifier private ReferenceType String getPackageName FormalParameter ReferenceType String s IfStatement BinaryOperation && BinaryOperation > MethodInvocation s length Literal 0 BinaryOperation == MethodInvocation s Literal 0 charAt Literal '[' BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator types MethodInvocation MemberReference s descriptorToTypes IfStatement BinaryOperation == MemberReference types length Literal 0 BlockStatement ReturnStatement Literal null End StatementExpression Assignment MemberReference s MemberReference ArraySelector Literal 0 types = End StatementExpression Assignment MemberReference s MethodInvocation MemberReference s slashesToDots = LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation s Literal ""."" lastIndexOf IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement ReturnStatement MethodInvocation s Literal 0 MemberReference index substring End ReturnStatement Literal ""Default"" MethodDeclaration Modifier private ReferenceType String descriptorToTypes FormalParameter ReferenceType String descriptor LocalVariableDeclaration BasicType int VariableDeclarator typesCount Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator index Literal 0 BinaryOperation < MemberReference index MethodInvocation descriptor length MemberReference ++ index BlockStatement IfStatement BinaryOperation == MethodInvocation descriptor MemberReference index charAt Literal ';' BlockStatement StatementExpression MemberReference ++ typesCount End End LocalVariableDeclaration ReferenceType String VariableDeclarator types ArrayCreator ReferenceType String MemberReference typesCount LocalVariableDeclaration BasicType int VariableDeclarator typeIndex Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator index Literal 0 BinaryOperation < MemberReference index MethodInvocation descriptor length MemberReference ++ index BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator startIndex MethodInvocation descriptor MemberReference CLASS_DESCRIPTOR MemberReference index indexOf IfStatement BinaryOperation < MemberReference startIndex Literal 0 BlockStatement BreakStatement End StatementExpression Assignment MemberReference index MethodInvocation descriptor Literal ';' BinaryOperation + MemberReference startIndex Literal 1 indexOf = StatementExpression Assignment MemberReference ArraySelector MemberReference ++ typeIndex types MethodInvocation descriptor BinaryOperation + MemberReference startIndex Literal 1 MemberReference index substring = End ReturnStatement MemberReference types ClassDeclaration Constant FieldDeclaration Modifier private BasicType byte VariableDeclarator _tag FieldDeclaration Modifier private BasicType int VariableDeclarator _nameIndex FieldDeclaration Modifier private BasicType int VariableDeclarator _typeIndex FieldDeclaration Modifier private ReferenceType Object VariableDeclarator _value ConstructorDeclaration Constant FormalParameter BasicType byte tag FormalParameter BasicType int nameIndex StatementExpression ExplicitConstructorInvocation MemberReference tag MemberReference nameIndex Literal - 1 ConstructorDeclaration Constant FormalParameter BasicType byte tag FormalParameter ReferenceType Object value StatementExpression ExplicitConstructorInvocation MemberReference tag Literal - 1 Literal - 1 StatementExpression Assignment MemberReference _value MemberReference value = ConstructorDeclaration Constant FormalParameter BasicType byte tag FormalParameter BasicType int nameIndex FormalParameter BasicType int typeIndex StatementExpression Assignment MemberReference _tag MemberReference tag = StatementExpression Assignment MemberReference _nameIndex MemberReference nameIndex = StatementExpression Assignment MemberReference _typeIndex MemberReference typeIndex = StatementExpression Assignment MemberReference _value Literal null = MethodDeclaration BasicType byte getTag ReturnStatement MemberReference _tag MethodDeclaration BasicType int getNameIndex ReturnStatement MemberReference _nameIndex MethodDeclaration BasicType int getTypeIndex ReturnStatement MemberReference _typeIndex MethodDeclaration ReferenceType Object getValue ReturnStatement MemberReference _value MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer Literal """" StatementExpression MethodInvocation s BinaryOperation + Literal ""tag: "" MethodInvocation getTag append IfStatement BinaryOperation > MethodInvocation getNameIndex Literal - 1 BlockStatement StatementExpression MethodInvocation s BinaryOperation + Literal "" nameIndex: "" MethodInvocation getNameIndex append End IfStatement BinaryOperation > MethodInvocation getTypeIndex Literal - 1 BlockStatement StatementExpression MethodInvocation s BinaryOperation + Literal "" typeIndex: "" MethodInvocation getTypeIndex append End IfStatement BinaryOperation != MethodInvocation getValue Literal null BlockStatement StatementExpression MethodInvocation s BinaryOperation + Literal "" value: "" MethodInvocation getValue append End ReturnStatement MethodInvocation s toString ClassDeclaration FieldOrMethodInfo FieldDeclaration Modifier private BasicType int VariableDeclarator _accessFlags FieldDeclaration Modifier private BasicType int VariableDeclarator _nameIndex FieldDeclaration Modifier private BasicType int VariableDeclarator _descriptorIndex ConstructorDeclaration FieldOrMethodInfo FormalParameter BasicType int accessFlags FormalParameter BasicType int nameIndex FormalParameter BasicType int descriptorIndex StatementExpression Assignment MemberReference _accessFlags MemberReference accessFlags = StatementExpression Assignment MemberReference _nameIndex MemberReference nameIndex = StatementExpression Assignment MemberReference _descriptorIndex MemberReference descriptorIndex = MethodDeclaration BasicType int accessFlags ReturnStatement MemberReference _accessFlags MethodDeclaration BasicType int getNameIndex ReturnStatement MemberReference _nameIndex MethodDeclaration BasicType int getDescriptorIndex ReturnStatement MemberReference _descriptorIndex MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer Literal """" TryStatement StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + BinaryOperation + Literal ""\n    name (#"" MethodInvocation getNameIndex Literal "") = "" MethodInvocation MethodInvocation getNameIndex toUTF8 append StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + BinaryOperation + Literal ""\n    signature (#"" MethodInvocation getDescriptorIndex Literal "") = "" MethodInvocation MethodInvocation getDescriptorIndex toUTF8 append LocalVariableDeclaration ReferenceType String VariableDeclarator types MethodInvocation MethodInvocation MethodInvocation getDescriptorIndex toUTF8 descriptorToTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator t Literal 0 BinaryOperation < MemberReference t MemberReference types length MemberReference ++ t BlockStatement StatementExpression MethodInvocation s BinaryOperation + Literal ""\n        type = "" MemberReference ArraySelector MemberReference t types append End CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ReturnStatement MethodInvocation s toString ClassDeclaration AttributeInfo FieldDeclaration Modifier private ReferenceType String VariableDeclarator name FieldDeclaration Modifier private BasicType byte VariableDeclarator value MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name = MethodDeclaration Modifier public ReferenceType String getName ReturnStatement This MemberReference name MethodDeclaration Modifier public setValue FormalParameter BasicType byte value StatementExpression Assignment This MemberReference value MemberReference value = MethodDeclaration Modifier public BasicType byte getValue ReturnStatement This MemberReference value MethodDeclaration /**
     * Returns a string representation of this object.
     * 
     * @return String representation.
     */ Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer TryStatement StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""\n"" MemberReference className Literal "":\n"" append StatementExpression MethodInvocation s Literal ""\nConstants:\n"" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference constantPool length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Constant VariableDeclarator entry MethodInvocation MemberReference i getConstantPoolEntry StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""    "" MemberReference i Literal "". "" MethodInvocation entry toString Literal ""\n"" append IfStatement BinaryOperation || BinaryOperation == MethodInvocation entry getTag MemberReference CONSTANT_DOUBLE BinaryOperation == MethodInvocation entry getTag MemberReference CONSTANT_LONG BlockStatement StatementExpression MemberReference ++ i End End StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""\nClass Name: "" MemberReference className Literal ""\n"" append StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""Super Name: "" MemberReference superClassName Literal ""\n\n"" append StatementExpression MethodInvocation s BinaryOperation + MemberReference interfaceNames length Literal "" interfaces\n"" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference interfaceNames length MemberReference ++ i BlockStatement StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""    "" MemberReference ArraySelector MemberReference i interfaceNames Literal ""\n"" append End StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""\n"" MemberReference fields length Literal "" fields\n"" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fields length MemberReference ++ i BlockStatement StatementExpression MethodInvocation s BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation toString fields Literal ""\n"" append End StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""\n"" MemberReference methods length Literal "" methods\n"" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference methods length MemberReference ++ i BlockStatement StatementExpression MethodInvocation s BinaryOperation + MemberReference ArraySelector MemberReference i MethodInvocation toString methods Literal ""\n"" append End StatementExpression MethodInvocation s Literal ""\nDependencies:\n"" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator imports MethodInvocation jClass MethodInvocation iterator getImportedPackages WhileStatement MethodInvocation imports hasNext BlockStatement LocalVariableDeclaration ReferenceType JavaPackage VariableDeclarator jPackage Cast ReferenceType JavaPackage MethodInvocation imports next StatementExpression MethodInvocation s BinaryOperation + BinaryOperation + Literal ""    "" MethodInvocation jPackage getName Literal ""\n"" append End CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ReturnStatement MethodInvocation s toString MethodDeclaration /**
     * Test main.
     */ Modifier public static main FormalParameter ReferenceType String args TryStatement StatementExpression Assignment MemberReference ClassFileParser DEBUG Literal true = IfStatement BinaryOperation <= MemberReference args length Literal 0 BlockStatement StatementExpression MethodInvocation System.err Literal ""usage: ClassFileParser <class-file>"" println StatementExpression MethodInvocation System Literal 0 exit End LocalVariableDeclaration ReferenceType ClassFileParser VariableDeclarator parser ClassCreator ReferenceType ClassFileParser StatementExpression MethodInvocation parser ClassCreator ReferenceType File MemberReference ArraySelector Literal 0 args parse StatementExpression MethodInvocation System.err MethodInvocation parser toString println CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation System.err MethodInvocation e getMessage println ReferenceType AbstractParser",0
512,512,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import org.argouml.model.Model Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the text shown in the Fig that represents a componentInstance.
 * Subclass this for all languages.
 *
 * @author mvw@tigris.org
 */ ComponentInstanceNotation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param componentInstance the componentInstance of which
     *                          we handle the text
     */ ComponentInstanceNotation FormalParameter ReferenceType Object componentInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference componentInstance isAComponentInstance getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not a ComponentInstance."" End ReferenceType NotationProvider",1
700,700,"CompilationUnit PackageDeclaration org.argouml.profile.internal Import java.util.Collection Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Helper utility methods for searching the model.
 *
 * @author maurelio1234
 */ ModelUtils MethodDeclaration /**
     * Finds a type in a model by name
     * 
     * @param s the type name
     * @param model the model
     * @return the type or <code>null</code> if the type has not been found.
     */ Modifier public static ReferenceType Object findTypeInModel FormalParameter ReferenceType String s FormalParameter ReferenceType Object model IfStatement MethodInvocation ! Model MethodInvocation MemberReference model isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Looking for the classifier "" MemberReference s Literal "" in a non-namespace object of "" MemberReference model Literal "". A namespace was expected."" End LocalVariableDeclaration ReferenceType Collection VariableDeclarator allClassifiers MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference allClassifiers BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade Literal null MethodInvocation Model MethodInvocation MemberReference classifier getName MethodInvocation MemberReference s equals getFacade BlockStatement ReturnStatement MemberReference classifier End End ReturnStatement Literal null",0
470,470,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.beans.PropertyChangeListener Import java.text.ParseException Import java.util.Collection Import java.util.Map Import java.util.Iterator Import java.util.StringTokenizer Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.model.StateMachinesFactory Import org.argouml.notation.providers.TransitionNotation ClassDeclaration Modifier public /**
 * UML Notation for the text shown next to a Transition.
 *  
 * @author mvw@tigris.org
 */ TransitionNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param transition the transition represented by this notation
     */ TransitionNotationUml FormalParameter ReferenceType Object transition StatementExpression SuperConstructorInvocation MemberReference transition MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseTransition CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.transition"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration /**
     * Parse a transition description line of the form:<pre>
     *    ""event-signature [guard-condition] / action-expression"".
     * </pre>
     *
     * If the last character of this line
     * is a "";"", then it is ignored.<p>
     *
     * The ""event-signature"" may be one of the 4
     * formats:<ul>
     * <li> ChangeEvent: ""when(condition)""
     * <li> TimeEvent: ""after(duration)""
     * <li> CallEvent: ""a(parameter-list)"".
     * <li> SignalEvent: any string without ().
     * </ul>
     *
     * Remark: The UML standard does not make a distinction between
     * the syntax of a CallEvent and SignalEvent:
     * both may have parameters between ().
     * For simplicity and user-friendlyness, we chose for this distinction.
     * If a user wants parameters for a SignalEvent,
     * then he may add them in the properties panels, but not on the diagram.<p>
     *
     * An alternative solution would be to create a CallEvent by default,
     * and when editing an existing event, do not change the type.<p>
     *
     * TODO: This function fails when the event-signature contains a ""[""
     * or a ""/"".
     *
     * @param trans the transition object to which this string applies
     * @param s     the string to be parsed
     * @return      the transition object
     * @throws ParseException when no matching [] are found
     */ Modifier protected ReferenceType Object parseTransition FormalParameter ReferenceType Object trans FormalParameter ReferenceType String s ParseException StatementExpression Assignment MemberReference s MethodInvocation s trim = LocalVariableDeclaration BasicType int VariableDeclarator a MethodInvocation s Literal ""["" indexOf LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation s Literal ""]"" indexOf LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation s Literal ""/"" indexOf IfStatement BinaryOperation || BinaryOperation || BinaryOperation && BinaryOperation < MemberReference a Literal 0 BinaryOperation >= MemberReference b Literal 0 BinaryOperation && BinaryOperation < MemberReference b Literal 0 BinaryOperation >= MemberReference a Literal 0 BinaryOperation < MemberReference b MemberReference a BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""parsing.error.transition.no-matching-square-brackets"" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 End IfStatement BinaryOperation && BinaryOperation >= MemberReference c Literal 0 BinaryOperation < MemberReference c MemberReference b BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""parsing.error.transition.found-bracket-instead-slash"" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 End LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference s Literal ""[/"" LocalVariableDeclaration ReferenceType String VariableDeclarator eventSignature Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator guardCondition Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator actionExpression Literal null WhileStatement MethodInvocation tokenizer hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nextToken MethodInvocation tokenizer MethodInvocation trim nextToken IfStatement MethodInvocation nextToken Literal ""]"" endsWith BlockStatement StatementExpression Assignment MemberReference guardCondition MethodInvocation nextToken Literal 0 BinaryOperation - MethodInvocation nextToken length Literal 1 substring = BlockStatement IfStatement MethodInvocation s MemberReference nextToken startsWith BlockStatement StatementExpression Assignment MemberReference eventSignature MemberReference nextToken = BlockStatement IfStatement MethodInvocation s MemberReference nextToken endsWith BlockStatement StatementExpression Assignment MemberReference actionExpression MemberReference nextToken = End End End End IfStatement BinaryOperation != MemberReference eventSignature Literal null BlockStatement StatementExpression MethodInvocation MemberReference trans MemberReference eventSignature parseTrigger End IfStatement BinaryOperation != MemberReference guardCondition Literal null BlockStatement StatementExpression MethodInvocation MemberReference trans MethodInvocation guardCondition BinaryOperation + MethodInvocation guardCondition Literal '[' indexOf Literal 1 substring parseGuard End IfStatement BinaryOperation != MemberReference actionExpression Literal null BlockStatement StatementExpression MethodInvocation MemberReference trans MethodInvocation actionExpression trim parseEffect End ReturnStatement MemberReference trans MethodDeclaration /**
     * Parse the Event that is the trigger of the given transition.
     *
     * @param trans the transition which is triggered by the given event
     * @param trigger the given trigger
     * @throws ParseException
     */ Modifier private parseTrigger FormalParameter ReferenceType Object trans FormalParameter ReferenceType String trigger ParseException LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal """" LocalVariableDeclaration BasicType boolean VariableDeclarator timeEvent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator changeEvent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator callEvent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator signalEvent Literal false StatementExpression Assignment MemberReference trigger MethodInvocation trigger trim = LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference trigger Literal ""()"" LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation tokenizer MethodInvocation trim nextToken IfStatement MethodInvocation name Literal ""after"" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference timeEvent Literal true = IfStatement MethodInvocation name Literal ""when"" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference changeEvent Literal true = BlockStatement IfStatement BinaryOperation || BinaryOperation || MethodInvocation tokenizer hasMoreTokens BinaryOperation > MethodInvocation trigger Literal ""("" indexOf Literal 0 BinaryOperation > MethodInvocation trigger Literal "")"" indexOf Literal 1 BlockStatement StatementExpression Assignment MemberReference callEvent Literal true = IfStatement BinaryOperation || MethodInvocation ! trigger Literal "")"" endsWith BinaryOperation > MethodInvocation trigger Literal ""("" indexOf Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""parsing.error.transition.no-matching-brackets"" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 End BlockStatement StatementExpression Assignment MemberReference signalEvent Literal true = End End End IfStatement BinaryOperation || BinaryOperation || MemberReference timeEvent MemberReference changeEvent MemberReference callEvent BlockStatement IfStatement MethodInvocation tokenizer hasMoreTokens BlockStatement StatementExpression Assignment MemberReference s MethodInvocation tokenizer MethodInvocation trim nextToken = End End LocalVariableDeclaration ReferenceType Object VariableDeclarator evt MethodInvocation Model MethodInvocation MemberReference trans getTrigger getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference trans MemberReference model findNamespaceForEvent getStateMachinesHelper LocalVariableDeclaration ReferenceType StateMachinesFactory VariableDeclarator sMFactory MethodInvocation Model getStateMachinesFactory LocalVariableDeclaration BasicType boolean VariableDeclarator createdEvent Literal false IfStatement BinaryOperation > MethodInvocation trigger length Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference evt Literal null BlockStatement IfStatement MemberReference timeEvent BlockStatement StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference s MemberReference ns buildTimeEvent = End IfStatement MemberReference changeEvent BlockStatement StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference s MemberReference ns buildChangeEvent = End IfStatement MemberReference callEvent BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator triggerName TernaryExpression BinaryOperation > MethodInvocation trigger Literal ""("" indexOf Literal 0 MethodInvocation trigger MethodInvocation trim Literal 0 MethodInvocation trigger Literal ""("" indexOf substring MemberReference trigger StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference trans MemberReference triggerName MemberReference ns buildCallEvent = StatementExpression MethodInvocation NotationUtilityUml MemberReference evt MemberReference s Literal 0 parseParamList End IfStatement MemberReference signalEvent BlockStatement StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference trigger MemberReference ns buildSignalEvent = End StatementExpression Assignment MemberReference createdEvent Literal true = BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference evt getName MethodInvocation MemberReference trigger equals getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference evt MemberReference trigger setName getCoreHelper IfStatement BinaryOperation && MemberReference timeEvent MethodInvocation ! Model MethodInvocation MemberReference evt isATimeEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference evt delete StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference s MemberReference ns buildTimeEvent = StatementExpression Assignment MemberReference createdEvent Literal true = End IfStatement BinaryOperation && MemberReference changeEvent MethodInvocation ! Model MethodInvocation MemberReference evt isAChangeEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference evt delete StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference s MemberReference ns buildChangeEvent = StatementExpression Assignment MemberReference createdEvent Literal true = End IfStatement BinaryOperation && MemberReference callEvent MethodInvocation ! Model MethodInvocation MemberReference evt isACallEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference evt delete StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference trans MemberReference trigger MemberReference ns buildCallEvent = StatementExpression MethodInvocation NotationUtilityUml MemberReference evt MemberReference s Literal 0 parseParamList StatementExpression Assignment MemberReference createdEvent Literal true = End IfStatement BinaryOperation && MemberReference signalEvent MethodInvocation ! Model MethodInvocation MemberReference evt isASignalEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference evt delete StatementExpression Assignment MemberReference evt MethodInvocation sMFactory MemberReference trigger MemberReference ns buildSignalEvent = StatementExpression Assignment MemberReference createdEvent Literal true = End End End IfStatement BinaryOperation && MemberReference createdEvent BinaryOperation != MemberReference evt Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference trans MemberReference evt setEventAsTrigger getStateMachinesHelper End BlockStatement IfStatement BinaryOperation == MemberReference evt Literal null BlockStatement BlockStatement StatementExpression MethodInvocation MemberReference evt delete End End MethodDeclaration /**
     * Handle the Guard of a Transition.<p>
     *
     * We can distinct between 4 cases:<ol>
     * <li>A guard is given. None exists yet.
     * <li>The expression of the guard was present, but is altered.
     * <li>A guard is not given. None exists yet.
     * <li>The expression of the guard was present, but is removed.
     * </ol>
     *
     * The reaction in these cases should be:<ol>
     * <li>Create a new guard, set its name, language & expression,
     *     and hook it to the transition.
     * <li>Change the guard's expression. Leave the name & language
     *     untouched. See also issue 2742.
     * <li>Nop.
     * <li>Unhook and erase the existing guard.
     * </ol>
     *
     * @param trans the UML element transition
     * @param guard the string that represents the guard expression
     */ Modifier private parseGuard FormalParameter ReferenceType Object trans FormalParameter ReferenceType String guard LocalVariableDeclaration ReferenceType Object VariableDeclarator g MethodInvocation Model MethodInvocation MemberReference trans getGuard getFacade IfStatement BinaryOperation > MethodInvocation guard length Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference g Literal null BlockStatement StatementExpression Assignment MemberReference g MethodInvocation Model MethodInvocation createGuard getStateMachinesFactory = IfStatement BinaryOperation != MemberReference g Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference g MethodInvocation Model MethodInvocation Literal """" MemberReference guard createBooleanExpression getDataTypesFactory setExpression getStateMachinesHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference g Literal ""anon"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference g MemberReference trans setTransition getCommonBehaviorHelper End BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expr MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator language Literal """" IfStatement BinaryOperation != MemberReference expr Literal null BlockStatement StatementExpression Assignment MemberReference language MethodInvocation Model MethodInvocation MemberReference expr getLanguage getDataTypesHelper = End StatementExpression MethodInvocation Model MethodInvocation MemberReference g MethodInvocation Model MethodInvocation MemberReference language MemberReference guard createBooleanExpression getDataTypesFactory setExpression getStateMachinesHelper End BlockStatement IfStatement BinaryOperation == MemberReference g Literal null BlockStatement BlockStatement StatementExpression MethodInvocation MemberReference g delete End End MethodDeclaration /**
     * Handle the Effect (Action) of a Transition.<p>
     *
     * We can distinct between 4 cases:<ul>
     * <li>1. An effect is given. None exists yet.
     * <li>2. The expression of the effect was present, but is altered.
     * <li>3. An effect is not given. None exists yet.
     * <li>4. The expression of the effect was present, but is removed.
     * </ul>
     *
     * The reaction in these cases should be:<ul>
     * <li>1. Create a new CallAction, set its name, language &
     * expression, and hook it to the transition.
     * <li>2. Change the effect's expression. Leave the actiontype, name
     * & language untouched.
     * <li>3. Nop.
     * <li>4. Unhook and erase the existing effect.
     * </ul>
     *
     * @param actions the string to be parsed
     * @param trans the transition that causes the effect (actions)
     */ Modifier private parseEffect FormalParameter ReferenceType Object trans FormalParameter ReferenceType String actions LocalVariableDeclaration ReferenceType Object VariableDeclarator effect MethodInvocation Model MethodInvocation MemberReference trans getEffect getFacade IfStatement BinaryOperation > MethodInvocation actions length Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference effect Literal null BlockStatement StatementExpression Assignment MemberReference effect MethodInvocation Model MethodInvocation createCallAction getCommonBehaviorFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference effect MethodInvocation Model MethodInvocation Literal """" MemberReference actions createActionExpression getDataTypesFactory setScript getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference effect Literal ""anon"" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference trans MemberReference effect setEffect getStateMachinesHelper BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator script MethodInvocation Model MethodInvocation MemberReference effect getScript getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator language TernaryExpression BinaryOperation == MemberReference script Literal null Literal null MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference effect getScript getFacade getLanguage getDataTypesHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference effect MethodInvocation Model MethodInvocation MemberReference language MemberReference actions createActionExpression getDataTypesFactory setScript getCommonBehaviorHelper End BlockStatement IfStatement BinaryOperation == MemberReference effect Literal null BlockStatement BlockStatement StatementExpression MethodInvocation MemberReference effect delete End End MethodDeclaration /**
     * This deletes modelelements, and swallows null without barking.
     *
     * @author mvw@tigris.org
     * @param obj
     *            the modelelement to be deleted
     */ Modifier private delete FormalParameter ReferenceType Object obj IfStatement BinaryOperation != MemberReference obj Literal null BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference obj moveToTrash getManager End MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-transition"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType Object VariableDeclarator trigger MethodInvocation Model MethodInvocation MemberReference modelElement getTrigger getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator guard MethodInvocation Model MethodInvocation MemberReference modelElement getGuard getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator effect MethodInvocation Model MethodInvocation MemberReference modelElement getEffect getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MemberReference trigger generateEvent LocalVariableDeclaration ReferenceType String VariableDeclarator g MethodInvocation MemberReference guard generateGuard LocalVariableDeclaration ReferenceType String VariableDeclarator e MethodInvocation NotationUtilityUml MemberReference effect generateActionSequence IfStatement BinaryOperation > MethodInvocation g length Literal 0 BlockStatement StatementExpression Assignment MemberReference t BinaryOperation + BinaryOperation + Literal "" ["" MemberReference g Literal ""]"" += End IfStatement BinaryOperation > MethodInvocation e length Literal 0 BlockStatement StatementExpression Assignment MemberReference t BinaryOperation + Literal "" / "" MemberReference e += End ReturnStatement MemberReference t MethodDeclaration /**
     * Generates the text for a (trigger) event.
     *
     * @param m Object of any MEvent kind
     * @return the string representing the event
     */ Modifier private ReferenceType String generateEvent FormalParameter ReferenceType Object m IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ReturnStatement Literal """" End LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator event ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation Model MethodInvocation MemberReference m isAChangeEvent getFacade BlockStatement StatementExpression MethodInvocation event Literal ""when("" append StatementExpression MethodInvocation event MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression append StatementExpression MethodInvocation event Literal "")"" append IfStatement MethodInvocation Model MethodInvocation MemberReference m isATimeEvent getFacade BlockStatement StatementExpression MethodInvocation event Literal ""after("" append StatementExpression MethodInvocation event MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression append StatementExpression MethodInvocation event Literal "")"" append IfStatement MethodInvocation Model MethodInvocation MemberReference m isASignalEvent getFacade BlockStatement StatementExpression MethodInvocation event MethodInvocation Model MethodInvocation MemberReference m getName getFacade append IfStatement MethodInvocation Model MethodInvocation MemberReference m isACallEvent getFacade BlockStatement StatementExpression MethodInvocation event MethodInvocation Model MethodInvocation MemberReference m getName getFacade append StatementExpression MethodInvocation event MethodInvocation MemberReference m generateParameterList append End End End End ReturnStatement MethodInvocation event toString MethodDeclaration Modifier private ReferenceType String generateGuard FormalParameter ReferenceType Object m IfStatement BinaryOperation != MemberReference m Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression End End ReturnStatement Literal """" MethodDeclaration /**
     * Generates a list of parameters. The parameters belong to the
     * given object.  The returned string will have the following
     * syntax:<p>
     *
     * (param1, param2, param3, ..., paramN)<p>
     *
     * If there are no parameters, then ""()"" is returned.
     *
     * @param parameterListOwner the 'owner' of the parameters
     * @return the generated parameter list
     */ Modifier private ReferenceType String generateParameterList FormalParameter ReferenceType Object parameterListOwner LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference parameterListOwner getParameters MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator list ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation list Literal ""("" append IfStatement MethodInvocation it hasNext BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator param MethodInvocation it next StatementExpression MethodInvocation list MethodInvocation MemberReference param generateParameter append IfStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation list Literal "", "" append End End End StatementExpression MethodInvocation list Literal "")"" append ReturnStatement MethodInvocation list toString MethodDeclaration Modifier private ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr isAExpression getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator body MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade IfStatement BinaryOperation != MemberReference body Literal null BlockStatement ReturnStatement Cast ReferenceType String MemberReference body End End ReturnStatement Literal """" MethodDeclaration /**
     * Generates the representation of a parameter on the display
     * (diagram). The string to be returned will have the following
     * syntax:<p>
     *
     * kind name : type-expression = default-value
     *
     * @param parameter the parameter
     * @return the generated text
     */ Modifier public ReferenceType String generateParameter FormalParameter ReferenceType Object parameter LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation s MethodInvocation MethodInvocation Model MethodInvocation MemberReference parameter getKind getFacade generateKind append IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal "" "" append End StatementExpression MethodInvocation s MethodInvocation Model MethodInvocation MemberReference parameter getName getFacade append LocalVariableDeclaration ReferenceType String VariableDeclarator classRef MethodInvocation MethodInvocation Model MethodInvocation MemberReference parameter getType getFacade generateClassifierRef IfStatement BinaryOperation > MethodInvocation classRef length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal "" : "" append StatementExpression MethodInvocation s MemberReference classRef append End LocalVariableDeclaration ReferenceType String VariableDeclarator defaultValue MethodInvocation MethodInvocation Model MethodInvocation MemberReference parameter getDefaultValue getFacade generateExpression IfStatement BinaryOperation > MethodInvocation defaultValue length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal "" = "" append StatementExpression MethodInvocation s MemberReference defaultValue append End ReturnStatement MethodInvocation s toString MethodDeclaration Modifier private ReferenceType String generateKind FormalParameter ReferenceType Object kind LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference kind Literal null BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getInParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal """" append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getInOutParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal ""inout"" append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getReturnParameter getDirectionKind BlockStatement IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getOutParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal ""out"" append End End End End ReturnStatement MethodInvocation s toString MethodDeclaration /**
     * Generate the type of a parameter, i.e. a reference to a classifier.
     * 
     * @param cls the classifier
     * @return the generated text
     */ Modifier private ReferenceType String generateClassifierRef FormalParameter ReferenceType Object cls IfStatement BinaryOperation == MemberReference cls Literal null BlockStatement ReturnStatement Literal """" End ReturnStatement MethodInvocation Model MethodInvocation MemberReference cls getName getFacade MethodDeclaration Modifier public initialiseListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference listener MemberReference modelElement addListenersForTransition MethodDeclaration Modifier private addListenersForAction FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object action IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference action ArrayCreator ReferenceType String ArrayInitializer Literal ""script"" Literal ""actualArgument"" Literal ""action"" addElementListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator args MethodInvocation Model MethodInvocation MemberReference action getActualArguments getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation args iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator argument MethodInvocation i next StatementExpression MethodInvocation MemberReference listener MemberReference argument Literal ""value"" addElementListener End IfStatement MethodInvocation Model MethodInvocation MemberReference action isAActionSequence getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator subactions MethodInvocation Model MethodInvocation MemberReference action getActions getFacade StatementExpression Assignment MemberReference i MethodInvocation subactions iterator = WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator a MethodInvocation i next StatementExpression MethodInvocation MemberReference listener MemberReference a addListenersForAction End End End MethodDeclaration Modifier private addListenersForEvent FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object event IfStatement BinaryOperation != MemberReference event Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference event isAEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference event ArrayCreator ReferenceType String ArrayInitializer Literal ""parameter"" Literal ""name"" addElementListener End IfStatement MethodInvocation Model MethodInvocation MemberReference event isATimeEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference event ArrayCreator ReferenceType String ArrayInitializer Literal ""when"" addElementListener End IfStatement MethodInvocation Model MethodInvocation MemberReference event isAChangeEvent getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference event ArrayCreator ReferenceType String ArrayInitializer Literal ""changeExpression"" addElementListener End LocalVariableDeclaration ReferenceType Collection VariableDeclarator prms MethodInvocation Model MethodInvocation MemberReference event getParameters getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation prms iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation i next StatementExpression MethodInvocation MemberReference listener MemberReference parameter addElementListener End End MethodDeclaration Modifier private addListenersForTransition FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object transition StatementExpression MethodInvocation MemberReference listener MemberReference transition ArrayCreator ReferenceType String ArrayInitializer Literal ""guard"" Literal ""trigger"" Literal ""effect"" addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator guard MethodInvocation Model MethodInvocation MemberReference transition getGuard getFacade IfStatement BinaryOperation != MemberReference guard Literal null BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference guard Literal ""expression"" addElementListener End LocalVariableDeclaration ReferenceType Object VariableDeclarator trigger MethodInvocation Model MethodInvocation MemberReference transition getTrigger getFacade StatementExpression MethodInvocation MemberReference listener MemberReference trigger addListenersForEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator effect MethodInvocation Model MethodInvocation MemberReference transition getEffect getFacade StatementExpression MethodInvocation MemberReference listener MemberReference effect addListenersForAction ReferenceType TransitionNotation",0
604,604,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.awt.Color Import java.awt.Dimension Import java.awt.Rectangle Import java.beans.PropertyVetoException Import org.apache.log4j.Logger Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.ui.CompartmentFigText Import org.argouml.uml.diagram.ui.FigStereotypesCompartment Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * Class to display graphics for a UML DataType in a diagram.
 * (cloned from FigInterface - perhaps they should both specialize
 * a common supertype)
 */ FigDataType FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType FigDataType getLogger ConstructorDeclaration Modifier public /**
     * Main constructor for a {@link FigDataType}.
     *
     * Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement}
     * will have created the main box {@link #getBigPort()} and
     * its name {@link #getNameFig()} and stereotype
     * (@link #getStereotypeFig()}. This constructor
     * creates a box for the operations.<p>
     *
     * The properties of all these graphic elements are adjusted
     * appropriately. The main boxes are all filled and have outlines.<p>
     * 
     * <em>Warning</em>. Much of the graphics positioning is hard coded. The
     * overall figure is placed at location (10,10). The name compartment (in
     * the parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement}
     * is 21 pixels high. The stereotype compartment is created 15 pixels high
     * in the parent, but we change it to 19 pixels, 1 more than
     * ({@link #STEREOHEIGHT} here. The operations box is created at 19 pixels,
     * 2 more than {@link #ROWHEIGHT}.<p>
     *
     * CAUTION: This constructor (with no arguments) is the only one
     * that does enableSizeChecking(false), all others must set it true.
     * This is because this constructor is the only one called when loading
     * a project. In this case, the parsed size must be maintained.<p>
     */ FigDataType LocalVariableDeclaration ReferenceType FigStereotypesCompartment VariableDeclarator fsc Cast ReferenceType FigStereotypesCompartment MethodInvocation getStereotypeFig StatementExpression MethodInvocation fsc Literal ""datatype"" setKeyword StatementExpression MethodInvocation Literal false enableSizeChecking StatementExpression MethodInvocation Literal true setSuppressCalcBounds StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getStereotypeFig addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation getOperationsFig addFig StatementExpression MethodInvocation MemberReference borderFig addFig StatementExpression MethodInvocation Literal false setSuppressCalcBounds StatementExpression MethodInvocation Literal true enableSizeChecking StatementExpression MethodInvocation Literal 10 Literal 10 Literal 60 BinaryOperation + Literal 21 MemberReference ROWHEIGHT setBounds ConstructorDeclaration Modifier public /**
     * Constructor for use if this figure is created for an
     * existing interface node in the metamodel.
     *
     * @param gm   Not actually used in the current implementation
     *
     * @param node The UML object being placed.
     */ FigDataType FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner StatementExpression MethodInvocation Literal true enableSizeChecking ConstructorDeclaration Modifier public /**
     * Constructor that allows specification of keyword to be used for figure.
     * 
     * @param gm unused
     * @param node node to be placed
     * @param keyword string to be placed in guillemots at top of figure
     */ FigDataType FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node FormalParameter ReferenceType String keyword StatementExpression ExplicitConstructorInvocation MemberReference gm MemberReference node StatementExpression Cast ReferenceType FigStereotypesCompartment MethodInvocation getStereotypeFig MethodDeclaration Modifier public ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionDataType This MethodDeclaration /**
     * Gets the minimum size permitted for a datatype on the diagram.<p>
     *
     * Parts of this are hardcoded, notably the fact that the name
     * compartment has a minimum height of 21 pixels.<p>
     *
     * @return  the size of the minimum bounding box.
     */ Modifier public ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize MethodInvocation MethodInvocation getMinimumSize getNameFig StatementExpression Assignment MemberReference aSize height Literal 4 += IfStatement BinaryOperation < MemberReference aSize height Literal 21 BlockStatement StatementExpression Assignment MemberReference aSize height Literal 21 = End IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoMin MethodInvocation MethodInvocation getMinimumSize getStereotypeFig StatementExpression Assignment MemberReference aSize width MethodInvocation Math MemberReference aSize width MemberReference stereoMin width max = StatementExpression Assignment MemberReference aSize height MemberReference stereoMin height += End IfStatement MethodInvocation MethodInvocation isVisible getOperationsFig BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator operMin MethodInvocation MethodInvocation getMinimumSize getOperationsFig StatementExpression Assignment MemberReference aSize width MethodInvocation Math MemberReference aSize width MemberReference operMin width max = StatementExpression Assignment MemberReference aSize height MemberReference operMin height += End StatementExpression Assignment MemberReference aSize width MethodInvocation Math Literal 40 MemberReference aSize width max = ReturnStatement MemberReference aSize MethodDeclaration Modifier public setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation borderFig MemberReference w setLineWidth MethodDeclaration Modifier public BasicType int getLineWidth ReturnStatement MethodInvocation borderFig getLineWidth MethodDeclaration Modifier public translate FormalParameter BasicType int dx FormalParameter BasicType int dy StatementExpression SuperMethodInvocation MemberReference dx MemberReference dy translate LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This findSelectionFor getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType SelectionClass BlockStatement StatementExpression Cast ReferenceType SelectionClass MemberReference sel End MethodDeclaration Modifier public setEnclosingFig FormalParameter ReferenceType Fig encloser LocalVariableDeclaration ReferenceType Fig VariableDeclarator oldEncloser MethodInvocation getEnclosingFig IfStatement BinaryOperation || BinaryOperation == MemberReference encloser Literal null BinaryOperation && BinaryOperation != MemberReference encloser Literal null MethodInvocation ! Model MethodInvocation MethodInvocation encloser getOwner isAInstance getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig End IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement End IfStatement MethodInvocation ! isVisible BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getOwner LocalVariableDeclaration ReferenceType Object VariableDeclarator m Literal null TryStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference encloser Literal null BinaryOperation != MemberReference oldEncloser MemberReference encloser MethodInvocation Model MethodInvocation MethodInvocation encloser getOwner isAPackage getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference me MethodInvocation encloser getOwner setNamespace getCoreHelper End IfStatement BinaryOperation && BinaryOperation == MethodInvocation Model MethodInvocation MemberReference me getNamespace getFacade Literal null BinaryOperation instanceof MethodInvocation TargetManager MethodInvocation getTarget getInstance ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference m Cast ReferenceType ArgoDiagram MethodInvocation TargetManager MethodInvocation getTarget getInstance = StatementExpression MethodInvocation Model MethodInvocation MemberReference me MemberReference m setNamespace getCoreHelper End CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""could not set package due to:"" MemberReference e Literal ""' at "" MemberReference encloser MemberReference e error MethodDeclaration Modifier protected textEdited FormalParameter ReferenceType FigText ft PropertyVetoException StatementExpression SuperMethodInvocation MemberReference ft textEdited LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation getOwner IfStatement BinaryOperation == MemberReference cls Literal null BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation MethodInvocation getFigs MethodInvocation MemberReference ft indexOf getOperationsFig IfStatement BinaryOperation != MemberReference i Literal - 1 BlockStatement StatementExpression Assignment MemberReference highlightedFigText Cast ReferenceType CompartmentFigText MemberReference ft = StatementExpression MethodInvocation highlightedFigText Literal true setHighlighted StatementExpression MethodInvocation highlightedFigText MethodInvocation MethodInvocation highlightedFigText getOwner MethodInvocation ft getText parse getNotationProvider StatementExpression MethodInvocation ft MethodInvocation highlightedFigText MethodInvocation MethodInvocation highlightedFigText getOwner Literal null toString getNotationProvider setText End MethodDeclaration Modifier protected textEditStarted FormalParameter ReferenceType FigText ft StatementExpression SuperMethodInvocation MemberReference ft textEditStarted IfStatement MethodInvocation MethodInvocation getFigs MethodInvocation MemberReference ft contains getOperationsFig BlockStatement StatementExpression MethodInvocation Cast ReferenceType CompartmentFigText MemberReference ft showHelp End MethodDeclaration /**
     * USED BY PGML.tee.
     * @return the class name and bounds together with compartment
     * visibility.
     */ Modifier public ReferenceType String classNameAndBounds ReturnStatement BinaryOperation + BinaryOperation + SuperMethodInvocation classNameAndBounds Literal ""operationsVisible="" MethodInvocation isOperationsVisible MethodDeclaration /**
     * Sets the bounds, but the size will be at least the one returned by
     * {@link #getMinimumSize()}, unless checking of size is disabled.<p>
     *
     * If the required height is bigger, then the additional height is
     * equally distributed among all figs (i.e. compartments), such that the
     * cumulated height of all visible figs equals the demanded height<p>.
     *
     * Some of this has ""magic numbers"" hardcoded in. In particular there is
     * a knowledge that the minimum height of a name compartment is 21
     * pixels.<p>
     *
     * @param x  Desired X coordinate of upper left corner
     *
     * @param y  Desired Y coordinate of upper left corner
     *
     * @param w  Desired width of the figure
     *
     * @param h  Desired height of the figure
     * @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
     */ Modifier protected setStandardBounds FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation borderFig MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference Color red setLineColor getNameFig LocalVariableDeclaration BasicType int VariableDeclarator currentHeight Literal 0 IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator stereotypeHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getStereotypeFig StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference stereotypeHeight setBounds getStereotypeFig StatementExpression Assignment MemberReference currentHeight MemberReference stereotypeHeight = End LocalVariableDeclaration BasicType int VariableDeclarator nameHeight MethodInvocation MethodInvocation getMinimumSize MemberReference height getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference x BinaryOperation + MemberReference y MemberReference currentHeight MemberReference w MemberReference nameHeight setBounds getNameFig StatementExpression Assignment MemberReference currentHeight MemberReference nameHeight += IfStatement MethodInvocation MethodInvocation isVisible getOperationsFig BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator operationsY BinaryOperation + MemberReference y MemberReference currentHeight LocalVariableDeclaration BasicType int VariableDeclarator operationsHeight BinaryOperation - BinaryOperation - BinaryOperation + MemberReference h MemberReference y MemberReference operationsY Literal 1 StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference operationsY MemberReference w MemberReference operationsHeight setBounds getOperationsFig End StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 390783219580351197L ReferenceType FigClassifierBox",0
1333,1333,,0
1014,1014,,1
154,154,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for State->Incoming Transitions.
 *
 */ GoStateToIncomingTrans MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state.incoming-transitions"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getIncomings getFacade End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",1
1212,1212,,0
426,426,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.Rectangle Import java.awt.event.MouseEvent Import java.util.Iterator Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigRect ClassDeclaration Modifier public /**
 * Class to display graphics for a UML Join State in a diagram.
 *
 * @author jrobbins
 */ FigJoinState FieldDeclaration Modifier private final static BasicType int VariableDeclarator X Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator Y Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator WIDTH Literal 80 FieldDeclaration Modifier private final static BasicType int VariableDeclarator HEIGHT Literal 7 FieldDeclaration Modifier private ReferenceType FigRect VariableDeclarator head ConstructorDeclaration Modifier public /**
     * The main constructor.
     */ FigJoinState StatementExpression MethodInvocation Literal false setEditable StatementExpression MethodInvocation ClassCreator ReferenceType FigRect MemberReference X MemberReference Y MemberReference WIDTH MemberReference HEIGHT MemberReference Color cyan MemberReference Color cyan setBigPort StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigRect MemberReference X MemberReference Y MemberReference WIDTH MemberReference HEIGHT MemberReference Color black MemberReference Color black = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false setBlinkPorts ConstructorDeclaration Modifier public /**
     * The constructor which links the Fig into the existing UML element.
     *
     * @param gm ignored
     * @param node the UML element
     */ FigJoinState FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference node setOwner MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigJoinState VariableDeclarator figClone Cast ReferenceType FigJoinState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigRect MethodInvocation it next = ReturnStatement MemberReference figClone MethodDeclaration Modifier protected setStandardBounds FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds IfStatement BinaryOperation > MemberReference w MemberReference h BlockStatement StatementExpression Assignment MemberReference h MemberReference HEIGHT = BlockStatement StatementExpression Assignment MemberReference w MemberReference HEIGHT = End StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation head MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation updateEdges StatementExpression MethodInvocation Literal ""bounds"" MemberReference oldBounds MethodInvocation getBounds firePropChange MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setLineColor MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor MethodDeclaration /**
     * Ignored - figure has fixed rendering
     * @param f ignored
     */ Modifier public setFilled FormalParameter BasicType boolean f MethodDeclaration Modifier public BasicType boolean getFilled ReturnStatement Literal true MethodDeclaration Modifier public setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth MethodDeclaration Modifier public BasicType int getLineWidth ReturnStatement MethodInvocation head getLineWidth MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me FieldDeclaration /**
     * The UID.
     */ Modifier final static BasicType long VariableDeclarator serialVersionUID Literal 2075803883819230367L ReferenceType FigStateVertex",0
626,626,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * Listmodel to show the sender belonging to some message.
 * @since Oct 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLStimulusSenderListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLMessageSenderListModel.
     */ UMLStimulusSenderListModel StatementExpression SuperConstructorInvocation Literal ""sender"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getSender getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getSender getFacade MemberReference elem ReferenceType UMLModelElementListModel2",0
1032,1032,,0
590,590,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import org.argouml.notation.NotationProvider Import org.argouml.uml.diagram.ui.CompartmentFigText Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * Fig to show one EnumerationLiteral in a compartment.
 *
 * @author Michiel
 */ FigEnumerationLiteral ConstructorDeclaration Modifier public FigEnumerationLiteral FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter ReferenceType Fig aFig FormalParameter ReferenceType NotationProvider np StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h MemberReference aFig MemberReference np ReferenceType CompartmentFigText",0
191,191,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.uml.ui.ActionNavigateNamespace Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * The properties panel for a Class.
 */ PropPanelClass FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8288739384387629966L ConstructorDeclaration Modifier public /**
     * Construct a property panel for UML Class elements.
     */ PropPanelClass StatementExpression SuperConstructorInvocation Literal ""label.class"" MethodInvocation Literal ""Class"" lookupIcon StatementExpression MethodInvocation Literal ""label.name"" MethodInvocation getNameTextField addField StatementExpression MethodInvocation Literal ""label.namespace"" MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType UMLClassActiveCheckBox add getModifiersPanel StatementExpression MethodInvocation MethodInvocation getModifiersPanel add StatementExpression MethodInvocation MethodInvocation getNamespaceVisibilityPanel add StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""label.client-dependencies"" MethodInvocation getClientDependencyScroll addField StatementExpression MethodInvocation Literal ""label.supplier-dependencies"" MethodInvocation getSupplierDependencyScroll addField StatementExpression MethodInvocation Literal ""label.generalizations"" MethodInvocation getGeneralizationScroll addField StatementExpression MethodInvocation Literal ""label.specializations"" MethodInvocation getSpecializationScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation Literal ""label.attributes"" MethodInvocation getAttributeScroll addField StatementExpression MethodInvocation Literal ""label.association-ends"" MethodInvocation getAssociationEndScroll addField StatementExpression MethodInvocation Literal ""label.operations"" MethodInvocation getOperationScroll addField StatementExpression MethodInvocation Literal ""label.owned-elements"" MethodInvocation getOwnedElementsScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateNamespace addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddAttribute addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddOperation addAction StatementExpression MethodInvocation MethodInvocation getActionNewReception addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewInnerClass addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewClass addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelClassifier",0
1242,1242,,0
763,763,"CompilationUnit PackageDeclaration org.argouml.language.java.generator Import java.io.BufferedReader Import java.io.BufferedWriter Import java.io.File Import java.io.FileInputStream Import java.io.FileOutputStream Import java.io.IOException Import java.io.InputStreamReader Import java.io.OutputStreamWriter Import java.util.ArrayList Import java.util.List Import java.util.Stack Import org.argouml.application.api.Argo Import org.argouml.configuration.Configuration ClassDeclaration /**
 * This class collects pieces of code when a source file is parsed,
 * and then updates the file with new code from the model.
 *
 * taken from:
 *
 * JavaRE - Code generation and reverse engineering for UML and Java.
 *
 * @author Marcus Andersson andersson@users.sourceforge.net
 */ CodePieceCollector FieldDeclaration /** Code pieces the parser found. */ Modifier private ReferenceType List TypeArgument ReferenceType NamedCodePiece VariableDeclarator codePieces ConstructorDeclaration Modifier public /**
       Constructor.
    */ CodePieceCollector StatementExpression Assignment MemberReference codePieces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType NamedCodePiece = MethodDeclaration /**
       The parser adds a code piece here. The code pieces will be
       inserted in sorted order in the codePieces list.

       @param codePiece A named code piece found in the code.
    */ Modifier public add FormalParameter ReferenceType NamedCodePiece codePiece LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType NamedCodePiece VariableDeclarator cp MemberReference codePieces BlockStatement StatementExpression MemberReference ++ index IfStatement BinaryOperation || BinaryOperation > MethodInvocation cp getStartLine MethodInvocation codePiece getStartLine BinaryOperation && BinaryOperation == MethodInvocation cp getStartLine MethodInvocation codePiece getStartLine BinaryOperation > MethodInvocation cp getStartPosition MethodInvocation codePiece getStartPosition BlockStatement BreakStatement End End StatementExpression MethodInvocation codePieces MemberReference index MemberReference codePiece add MethodDeclaration /**
     * Replace all the code pieces in a source file with new code from
     * the model, or maintain them if nothing is found in the model.
     *
     * @param source The source file.
     * @param destination The destination file.
     * @param mNamespace The package the source belongs to.
     * @throws IOException if we cannot write or read from the files.
     */ Modifier public filter FormalParameter ReferenceType File source FormalParameter ReferenceType File destination FormalParameter ReferenceType Object mNamespace IOException LocalVariableDeclaration ReferenceType String VariableDeclarator encoding Literal null IfStatement BinaryOperation || BinaryOperation == MethodInvocation Configuration MemberReference Argo KEY_INPUT_SOURCE_ENCODING getString Literal null MethodInvocation Configuration MethodInvocation trim MethodInvocation Literal """" equals MemberReference Argo KEY_INPUT_SOURCE_ENCODING getString BlockStatement StatementExpression Assignment MemberReference encoding MethodInvocation System Literal ""file.encoding"" getProperty = BlockStatement StatementExpression Assignment MemberReference encoding MethodInvocation Configuration MemberReference Argo KEY_INPUT_SOURCE_ENCODING getString = End LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in ClassCreator ReferenceType FileInputStream MemberReference source LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator out ClassCreator ReferenceType FileOutputStream MemberReference destination LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference in MemberReference encoding LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator writer ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference out MemberReference encoding LocalVariableDeclaration BasicType int VariableDeclarator line Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator column Literal 0 LocalVariableDeclaration ReferenceType Stack TypeArgument ReferenceType ParseState VariableDeclarator parseStateStack ClassCreator ReferenceType Stack TypeArgument ReferenceType ParseState StatementExpression MethodInvocation parseStateStack ClassCreator ReferenceType ParseState MemberReference mNamespace push ForStatement EnhancedForControl VariableDeclaration ReferenceType NamedCodePiece VariableDeclarator cp MemberReference codePieces BlockStatement WhileStatement BinaryOperation < MemberReference line MethodInvocation cp getStartLine BlockStatement StatementExpression MemberReference ++ line StatementExpression Assignment MemberReference column Literal 0 = StatementExpression MethodInvocation writer MethodInvocation reader readLine write StatementExpression MethodInvocation writer newLine End WhileStatement BinaryOperation < MemberReference column MethodInvocation cp getStartPosition BlockStatement StatementExpression MethodInvocation writer MethodInvocation reader read write StatementExpression MemberReference ++ column End StatementExpression MethodInvocation cp MemberReference reader MemberReference writer MemberReference parseStateStack write StatementExpression Assignment MemberReference line MethodInvocation cp getEndLine = StatementExpression Assignment MemberReference column MethodInvocation cp getEndPosition = End LocalVariableDeclaration ReferenceType String VariableDeclarator data WhileStatement BinaryOperation != Assignment MemberReference data MethodInvocation reader readLine = Literal null BlockStatement StatementExpression MethodInvocation writer MemberReference data write StatementExpression MethodInvocation writer newLine End StatementExpression MethodInvocation reader close StatementExpression MethodInvocation writer close",0
1538,1538,,0
454,454,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.text.ParseException Import java.util.Map Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.notation.providers.MultiplicityNotation ClassDeclaration Modifier public /**
 * The UML notation for a Multiplicity. <p>
 * 
 * This NotationProvider is a bit special, in that it does not 
 * generate for the given UML element, but for its multiplicity.
 *
 * @author Michiel
 */ MultiplicityNotationUml ConstructorDeclaration Modifier public /**
     * @param multiplicityOwner the UML element to represent the multiplicity of
     */ MultiplicityNotationUml FormalParameter ReferenceType Object multiplicityOwner StatementExpression SuperConstructorInvocation MemberReference multiplicityOwner MethodDeclaration Modifier public Annotation Override ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-multiplicity"" MethodDeclaration Modifier public Annotation Override parse FormalParameter Modifier final ReferenceType Object multiplicityOwner FormalParameter Modifier final ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference multiplicityOwner MemberReference text parseMultiplicity CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.multiplicity"" LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration Modifier protected ReferenceType Object parseMultiplicity FormalParameter Modifier final ReferenceType Object multiplicityOwner FormalParameter Modifier final ReferenceType String s1 ParseException LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation s1 trim LocalVariableDeclaration ReferenceType Object VariableDeclarator multi Literal null TryStatement StatementExpression Assignment MemberReference multi MethodInvocation Model MethodInvocation MemberReference s createMultiplicity getDataTypesFactory = CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation iae getLocalizedMessage Literal 0 StatementExpression MethodInvocation Model MethodInvocation MemberReference multiplicityOwner MemberReference multi setMultiplicity getCoreHelper ReturnStatement MemberReference multi MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object multiplicityOwner FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType Object VariableDeclarator mulitiplicity MethodInvocation Model MethodInvocation MemberReference multiplicityOwner getMultiplicity getFacade ReturnStatement MethodInvocation NotationUtilityUml MemberReference mulitiplicity generateMultiplicity ReferenceType MultiplicityNotation",1
300,300,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import org.apache.log4j.Logger Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ListSet Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.ocl.CriticOclEvaluator Import org.argouml.uml.cognitive.UMLToDoItem Import org.tigris.gef.ocl.ExpansionException ClassDeclaration Modifier public /**
 * ""Abstract"" Critic subclass that captures commonalities among all
 * critics in the UML domain.  This class also defines and registers
 * the categories of design decisions that the critics can
 * address. IT also deals with particular UMLToDoItems.
 *
 * @see org.argouml.cognitive.Designer
 * @see org.argouml.cognitive.DecisionModel
 *
 * @author jrobbins
 */ CrUML FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType CrUML getLogger ConstructorDeclaration Modifier public /**
     * The constructor for this class.
     */ CrUML MethodDeclaration /**
     * Set the resources for this critic based on the class name.
     *
     * @param key is the class name.
     */ Modifier public setResource FormalParameter ReferenceType String key StatementExpression SuperMethodInvocation MethodInvocation MemberReference key Literal ""-head"" getLocalizedString setHeadline StatementExpression SuperMethodInvocation MethodInvocation MemberReference key Literal ""-desc"" getLocalizedString setDescription MethodDeclaration /**
     * Returns a localized string for the current critic class.
     * 
     * @param suffix the suffix of the key
     * @return the localized string
     */ Modifier protected ReferenceType String getLocalizedString FormalParameter ReferenceType String suffix ReturnStatement MethodInvocation MethodInvocation getClassSimpleName MemberReference suffix getLocalizedString MethodDeclaration /**
     * Returns a localized string for the given key and suffix.
     * 
     * @param key the main key
     * @param suffix the suffix of the key
     * @return the localized string
     */ Modifier protected ReferenceType String getLocalizedString FormalParameter ReferenceType String key FormalParameter ReferenceType String suffix ReturnStatement MethodInvocation Translator BinaryOperation + BinaryOperation + Literal ""critics."" MemberReference key MemberReference suffix localize MethodDeclaration /**
     * Loads the localized wizard's instruction.
     * 
     * @return the instructions
     */ Modifier protected ReferenceType String getInstructions ReturnStatement MethodInvocation Literal ""-ins"" getLocalizedString MethodDeclaration /**
     * Loads the localized wizard's default suggestion.
     * 
     * @return the default suggestion
     */ Modifier protected ReferenceType String getDefaultSuggestion ReturnStatement MethodInvocation Literal ""-sug"" getLocalizedString MethodDeclaration /**
     * @see org.argouml.cognitive.Critic#setHeadline(java.lang.String)
     * 
     * Set up the locale specific text for the critic headline 
     * (the one liner that appears in the to-do pane)
     * and the critic description (the detailed explanation that
     * appears in the to-do tab of the details pane).
     * 
     * MVW: Maybe we can make it part of the constructor CrUML()?
     */ Modifier public final Annotation Override setHeadline FormalParameter ReferenceType String s StatementExpression MethodInvocation setupHeadAndDesc MethodDeclaration /**
     * Set up the locale specific text for the critic headline
     * (the one liner that appears in the to-do pane)
     * and the critic description (the detailed explanation that
     * appears in the to-do tab of the details pane).
     */ Modifier public final setupHeadAndDesc StatementExpression MethodInvocation MethodInvocation getClassSimpleName setResource MethodDeclaration Modifier public Annotation Override BasicType boolean predicate FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation || MethodInvocation p MemberReference dm isInTrash BinaryOperation && MethodInvocation Model MethodInvocation MemberReference dm isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference dm isRemoved getUmlFactory BlockStatement ReturnStatement MemberReference NO_PROBLEM BlockStatement ReturnStatement MethodInvocation MemberReference dm MemberReference dsgr predicate2 End MethodDeclaration /**
     * This is the decision routine for the critic.
     *
     * @param dm is the UML entity that is being checked.
     * @param dsgr is for future development and can be ignored.
     *
     * @return boolean problem found
     */ Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement SuperMethodInvocation MemberReference dm MemberReference dsgr predicate FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator OCL_START Literal ""<ocl>"" FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator OCL_END Literal ""</ocl>"" MethodDeclaration /**
     * Expand text with ocl brackets in it.
     * No recursive expansion.
     *
     * @return the expanded text
     * @param res is the text to expand.
     * @param offs is the elements to replace
     */ Modifier public ReferenceType String expand FormalParameter ReferenceType String res FormalParameter ReferenceType ListSet offs IfStatement BinaryOperation == MethodInvocation offs size Literal 0 BlockStatement ReturnStatement MemberReference res End LocalVariableDeclaration ReferenceType Object VariableDeclarator off1 MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator beginning ClassCreator ReferenceType StringBuffer Literal """" LocalVariableDeclaration BasicType int VariableDeclarator matchPos MethodInvocation res MemberReference OCL_START indexOf WhileStatement BinaryOperation != MemberReference matchPos Literal - 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endExpr MethodInvocation res MemberReference OCL_END BinaryOperation + MemberReference matchPos Literal 1 indexOf IfStatement BinaryOperation == MemberReference endExpr Literal - 1 BlockStatement BreakStatement End IfStatement BinaryOperation > MemberReference matchPos Literal 0 BlockStatement StatementExpression MethodInvocation beginning MethodInvocation res Literal 0 MemberReference matchPos substring append End LocalVariableDeclaration ReferenceType String VariableDeclarator expr MethodInvocation res BinaryOperation + MemberReference matchPos MethodInvocation OCL_START length MemberReference endExpr substring LocalVariableDeclaration ReferenceType String VariableDeclarator evalStr Literal null TryStatement StatementExpression Assignment MemberReference evalStr MethodInvocation CriticOclEvaluator MethodInvocation MemberReference off1 MemberReference expr evalToString getInstance = CatchClause CatchClauseParameter ExpansionException e StatementExpression MethodInvocation LOG Literal ""Failed to evaluate critic expression"" MemberReference e error IfStatement BinaryOperation && MethodInvocation expr Literal """" endsWith MethodInvocation evalStr Literal """" equals BlockStatement StatementExpression Assignment MemberReference evalStr MethodInvocation Translator Literal ""misc.name.anon"" localize = End StatementExpression MethodInvocation beginning MemberReference evalStr append StatementExpression Assignment MemberReference res MethodInvocation res BinaryOperation + MemberReference endExpr MethodInvocation OCL_END length substring = StatementExpression Assignment MemberReference matchPos MethodInvocation res MemberReference OCL_START indexOf = End IfStatement BinaryOperation == MethodInvocation beginning length Literal 0 BlockStatement ReturnStatement MemberReference res BlockStatement ReturnStatement MethodInvocation beginning MethodInvocation toString MemberReference res append End MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference dm MemberReference dsgr MethodDeclaration /**
     * Get the name of the current class.
     * 
     * @return the name of the current class without any leading packages
     */ Modifier private final ReferenceType String getClassSimpleName LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation MethodInvocation getName getClass ReturnStatement MethodInvocation className BinaryOperation + MethodInvocation className Literal '.' lastIndexOf Literal 1 substring FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1785043010468681602L ReferenceType Critic",0
410,410,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import java.util.Collection Import java.util.Iterator Import org.argouml.model.AddAssociationEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the text shown next to the end of an association.
 * Subclass this for all languages.
 * 
 * @author michiel
 */ AssociationEndNameNotation ConstructorDeclaration Modifier protected /**
     * The constructor. 
     */ AssociationEndNameNotation MethodDeclaration Modifier public initialiseListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference listener MemberReference modelElement ArrayCreator ReferenceType String ArrayInitializer Literal ""name"" Literal ""visibility"" Literal ""stereotype"" addElementListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation stereotypes iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation iter next StatementExpression MethodInvocation MemberReference listener MemberReference o ArrayCreator ReferenceType String ArrayInitializer Literal ""name"" Literal ""remove"" addElementListener End MethodDeclaration Modifier public updateListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation pce getSource IfStatement BinaryOperation && BinaryOperation == MemberReference obj MemberReference modelElement Literal MethodInvocation MethodInvocation pce getPropertyName equals ""stereotype"" BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getNewValue isAStereotype getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MethodInvocation pce getNewValue ArrayCreator ReferenceType String ArrayInitializer Literal ""name"" Literal ""remove"" addElementListener End IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getOldValue isAStereotype getFacade BlockStatement StatementExpression MethodInvocation MemberReference listener MethodInvocation pce getOldValue removeElementListener End End ReferenceType NotationProvider",0
1124,1124,,0
1160,1160,,0
1140,1140,,0
1399,1399,,0
1257,1257,,0
929,929,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.ArrayList Import java.util.Collection Import java.util.HashSet Import java.util.Iterator Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for ModelElement -> Contained Lost Elements. <p>
 *
 * The Contained elements are all the elements which,
 * if the owner is deleted, will be deleted, too.
 * Lost: the context is not set, i.e. a statemachine that is
 * not attached properly.
 *
 * @author michiel
 */ GoModelElementToContainedLostElements MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.model-element.contained-lost-elements"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Collection VariableDeclarator ret ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference parent MethodInvocation Model MethodInvocation getStateMachine getMetaTypes getAllModelElementsOfKind getModelManagementHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation it next IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference machine getNamespace getFacade MemberReference parent BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator context MethodInvocation Model MethodInvocation MemberReference machine getContext getFacade IfStatement BinaryOperation == MemberReference context Literal null BlockStatement StatementExpression MethodInvocation ret MemberReference machine add End End End End ReturnStatement MemberReference ret MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add End ReturnStatement MemberReference set ReferenceType AbstractPerspectiveRule",1
1221,1221,,0
1505,1505,,0
264,264,"CompilationUnit PackageDeclaration org.argouml.uml.reveng ClassDeclaration Modifier public /**
 * Common class that all settings types inherit from.  It provides
 * a label to be associated with the setting in the user interface.
 */ Setting FieldDeclaration /**
     * The message of the Label.
     */ Modifier private ReferenceType String VariableDeclarator label ConstructorDeclaration Modifier public Setting FormalParameter ReferenceType String labelText StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference label MemberReference labelText = MethodDeclaration Modifier public final ReferenceType String getLabel ReturnStatement MemberReference label ClassDeclaration Modifier public static /**
     * Setting which specifies a boolean value.  Typical user presentation
     * would be labelled checkbox.
     */ BooleanSelection FieldDeclaration Modifier private BasicType boolean VariableDeclarator defaultValue FieldDeclaration Modifier private BasicType boolean VariableDeclarator value ConstructorDeclaration Modifier public /**
         * Construct a new setting object which specifies a boolean selection.
         *
         * @param labelText the string to use for the user visible label
         * @param initialValue the default value (true or false)
         */ BooleanSelection FormalParameter ReferenceType String labelText FormalParameter BasicType boolean initialValue StatementExpression SuperConstructorInvocation MemberReference labelText StatementExpression Assignment This MemberReference defaultValue MemberReference initialValue = StatementExpression Assignment MemberReference value MemberReference initialValue = MethodDeclaration Modifier public final BasicType boolean isSelected ReturnStatement MemberReference value MethodDeclaration Modifier public final BasicType boolean getDefaultValue ReturnStatement MemberReference defaultValue ReferenceType Setting ReferenceType SettingsTypes ReferenceType BooleanSelection ReferenceType SettingsTypes ReferenceType Setting",1
339,339,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.util.Map Import java.util.StringTokenizer Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.notation.providers.ExtensionPointNotation ClassDeclaration Modifier public /**
 * The notation for an extension point for UML.
 * 
 * @author michiel
 */ ExtensionPointNotationUml ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param ep the represented Extension Point
     */ ExtensionPointNotationUml FormalParameter ReferenceType Object ep StatementExpression SuperConstructorInvocation MemberReference ep MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseExtensionPointFig MethodDeclaration /**
     * Parse an extension point.<p>
     *
     * The syntax is ""name: location"", ""name:"", ""location"" or """". The fields of
     * the extension point are updated appropriately.
     *
     * @param ep      The extension point concerned
     * @param text    The text to parse
     */ Modifier public parseExtensionPointFig FormalParameter ReferenceType Object ep FormalParameter ReferenceType String text IfStatement BinaryOperation == MemberReference ep Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator useCase MethodInvocation Model MethodInvocation MemberReference ep getUseCase getFacade IfStatement BinaryOperation == MemberReference useCase Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator newEp MethodInvocation MemberReference text parseExtensionPoint IfStatement BinaryOperation == MemberReference newEp Literal null BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference ep moveToTrash getManager BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ep MethodInvocation Model MethodInvocation MemberReference newEp getName getFacade setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ep MethodInvocation Model MethodInvocation MemberReference newEp getLocation getFacade setLocation getUseCasesHelper End MethodDeclaration /**
     * Parse a string representing an extension point and return a new extension
     * point.<p>
     *
     * The syntax is ""name: location"", ""name:"", ""location"" or """".
     * <em>Note:</em> If either field is blank, it will be set to null
     * in the extension point.
     *
     * We break up the string into tokens at the "":"". We must keep the "":"" as a
     * token, so we can distinguish between ""name:"" and ""location"". The number
     * of tokens will distinguish our four cases.<p>
     *
     * @param text The string to parse
     *
     * @return A new extension point, with fields set appropriately, or
     *         <code>null</code> if we are given <code>null</code> or a
     *         blank string. <em>Note</em>. The string "":"" can be used to set
     *         both name and location to null.
     */ Modifier private ReferenceType Object parseExtensionPoint FormalParameter ReferenceType String text IfStatement BinaryOperation == MemberReference text Literal null BlockStatement ReturnStatement Literal null End LocalVariableDeclaration ReferenceType Object VariableDeclarator ep MethodInvocation Model MethodInvocation createExtensionPoint getUseCasesFactory LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MethodInvocation text trim Literal "":"" Literal true LocalVariableDeclaration BasicType int VariableDeclarator numTokens MethodInvocation st countTokens LocalVariableDeclaration ReferenceType String VariableDeclarator epLocation LocalVariableDeclaration ReferenceType String VariableDeclarator epName SwitchStatement MemberReference numTokens SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference ep Literal null = BreakStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference epLocation MethodInvocation st MethodInvocation trim nextToken = IfStatement MethodInvocation epLocation Literal "":"" equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ep Literal null setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ep Literal null setLocation getUseCasesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ep Literal null setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ep MemberReference epLocation setLocation getUseCasesHelper End BreakStatement SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference epName MethodInvocation st MethodInvocation trim nextToken = StatementExpression MethodInvocation Model MethodInvocation MemberReference ep MemberReference epName setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ep Literal null setLocation getUseCasesHelper BreakStatement SwitchStatementCase Literal 3 StatementExpression Assignment MemberReference epName MethodInvocation st MethodInvocation trim nextToken = StatementExpression MethodInvocation st nextToken StatementExpression Assignment MemberReference epLocation MethodInvocation st MethodInvocation trim nextToken = StatementExpression MethodInvocation Model MethodInvocation MemberReference ep MemberReference epName setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ep MemberReference epLocation setLocation getUseCasesHelper BreakStatement End ReturnStatement MemberReference ep MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.fig-extensionpoint"" MethodDeclaration /**
     * Generate the display for an extension point.<p>
     *
     * The representation is ""name: location"". 
     * The ""name: "" is omitted if there
     * is no name given.
     *
     * {@inheritDoc}
     */ Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement ReturnStatement Literal """" End LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal """" LocalVariableDeclaration ReferenceType String VariableDeclarator epName MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator epLocation MethodInvocation Model MethodInvocation MemberReference modelElement getLocation getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference epName Literal null BinaryOperation > MethodInvocation epName length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference epName Literal "": "" += End IfStatement BinaryOperation && BinaryOperation != MemberReference epLocation Literal null BinaryOperation > MethodInvocation epLocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference s MemberReference epLocation += End ReturnStatement MemberReference s ReferenceType ExtensionPointNotation",0
1515,1515,,0
52,52,"CompilationUnit PackageDeclaration org.argouml.notation.providers Import java.beans.PropertyChangeListener Import java.util.Collection Import java.util.Iterator Import org.argouml.model.Model Import org.argouml.notation.NotationProvider ClassDeclaration Modifier public abstract /**
 * This abstract class forms the basis of all Notation providers
 * for the text shown in the Fig that represents the ActionState.
 * Subclass this for all languages.
 *
 * @author mvw@tigris.org
 */ ActionStateNotation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param actionState the uml element
     */ ActionStateNotation FormalParameter ReferenceType Object actionState IfStatement MethodInvocation ! Model MethodInvocation MemberReference actionState isAActionState getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""This is not an ActionState."" End MethodDeclaration Modifier public initialiseListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference listener MemberReference modelElement ArrayCreator ReferenceType String ArrayInitializer Literal ""entry"" Literal ""remove"" Literal ""stereotype"" addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator entry MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement StatementExpression MethodInvocation MemberReference listener MemberReference entry Literal ""script"" addElementListener End LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation i next StatementExpression MethodInvocation MemberReference listener MemberReference st Literal ""name"" addElementListener End ReferenceType NotationProvider",0
1480,1480,,0
1475,1475,,0
482,482,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.ui Import java.util.Collection Import java.util.Iterator Import java.util.Map Import org.apache.log4j.Logger Import org.argouml.model.CoreFactory Import org.argouml.model.Model Import org.argouml.uml.CommentEdge Import org.argouml.uml.diagram.GraphChangeAdapter Import org.argouml.uml.diagram.UmlDiagramRenderer Import org.argouml.uml.diagram.deployment.ui.FigComponent Import org.argouml.uml.diagram.deployment.ui.FigComponentInstance Import org.argouml.uml.diagram.deployment.ui.FigMNode Import org.argouml.uml.diagram.deployment.ui.FigNodeInstance Import org.argouml.uml.diagram.deployment.ui.FigObject Import org.argouml.uml.diagram.ui.FigAssociation Import org.argouml.uml.diagram.ui.FigAssociationClass Import org.argouml.uml.diagram.ui.FigAssociationEnd Import org.argouml.uml.diagram.ui.FigDependency Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.argouml.uml.diagram.ui.FigGeneralization Import org.argouml.uml.diagram.ui.FigNodeAssociation Import org.argouml.uml.diagram.ui.FigNodeModelElement Import org.argouml.uml.diagram.ui.FigPermission Import org.argouml.uml.diagram.ui.FigRealization Import org.argouml.uml.diagram.ui.FigUsage Import org.argouml.uml.diagram.use_case.ui.FigActor Import org.argouml.uml.diagram.use_case.ui.FigUseCase Import org.tigris.gef.base.Layer Import org.tigris.gef.graph.GraphModel Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * This class defines a renderer object for UML Class Diagrams. In a
 * Class Diagram the following UML objects are displayed with the
 * following Figs: <p>
 *
 * <pre>
 *  UML Object       ---  Fig
 *  ---------------------------------------
 *  Class            ---  FigClass
 *  Interface        ---  FigInterface
 *  Instance         ---  FigInstance
 *  Model            ---  FigModel
 *  Subsystem        ---  FigSubsystem
 *  Package          ---  FigPackage
 *  Comment          ---  FigComment
 *  (CommentEdge)    ---  FigEdgeNote
 *  Generalization   ---  FigGeneralization
 *  Realization      ---  FigRealization
 *  Permission       ---  FigPermission
 *  Usage            ---  FigUsage
 *  Dependency       ---  FigDependency
 *  Association      ---  FigAssociation
 *  AssociationClass ---  FigAssociationClass
 *  Dependency       ---  FigDependency
 *  Link             ---  FigLink
 *  DataType         ---  FigDataType
 *  Stereotype       ---  FigStereotypeDeclaration
 * </pre>
 *
 * @author jrobbins
 */ ClassDiagramRenderer FieldDeclaration /**
     * The UID.
     */ Modifier final static BasicType long VariableDeclarator serialVersionUID Literal 675407719309039112L FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ClassDiagramRenderer getLogger MethodDeclaration Modifier public ReferenceType FigNode getFigNodeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object node FormalParameter ReferenceType Map styleAttributes LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A node must be supplied"" End IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClass getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigClass MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInterface MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAModel getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigModel MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isASubsystem getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSubsystem MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigPackage MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigNodeAssociation MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAEnumeration getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigEnumeration MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isADataType getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigDataType MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAStereotype getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigStereotypeDeclaration MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAException getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigException MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isASignal getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSignal MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAActor getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigActor MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAUseCase getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigUseCase MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAObject getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigObject MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isANodeInstance getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigNodeInstance MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComponentInstance getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComponentInstance MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isANode getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigMNode MemberReference gm MemberReference node = IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComponent getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComponent MemberReference gm MemberReference node = BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""TODO: ClassDiagramRenderer getFigNodeFor "" MemberReference node error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Node is not a recognised type. Received "" MethodInvocation node MethodInvocation getName getClass End End End End End End End End End End End End End End End End End End End StatementExpression MethodInvocation lay MemberReference figNode add StatementExpression MethodInvocation figNode MethodInvocation GraphChangeAdapter MethodInvocation MemberReference gm MemberReference node createElement getInstance setDiElement ReturnStatement MemberReference figNode MethodDeclaration /**
     * Return a Fig that can be used to represent the given edge.
     * Throws IllegalArgumentException if the edge is not of an expected type.
     * Throws IllegalStateException if the edge generated has no source
     *                               or dest port.
     * {@inheritDoc}
     */ Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttribute IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""making figedge for "" MemberReference edge debug End IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A model edge must be supplied"" End LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator newEdge Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationClass getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigAssociationClass MemberReference edge MemberReference lay = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationEnd getFacade BlockStatement LocalVariableDeclaration ReferenceType FigAssociationEnd VariableDeclarator asend ClassCreator ReferenceType FigAssociationEnd MemberReference edge MemberReference lay StatementExpression MethodInvocation Model MethodInvocation MemberReference edge getAssociation getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator associationFN Cast ReferenceType FigNode MethodInvocation lay MethodInvocation Model MethodInvocation MemberReference edge getAssociation getFacade presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator classifierFN Cast ReferenceType FigNode MethodInvocation lay MethodInvocation Model MethodInvocation MemberReference edge getType getFacade presentationFor StatementExpression MethodInvocation asend MemberReference associationFN setSourcePortFig StatementExpression MethodInvocation asend MemberReference associationFN setSourceFigNode StatementExpression MethodInvocation asend MemberReference classifierFN setDestPortFig StatementExpression MethodInvocation asend MemberReference classifierFN setDestFigNode StatementExpression Assignment MemberReference newEdge MemberReference asend = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigAssociation MemberReference edge MemberReference lay = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isALink getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator lnk MemberReference edge LocalVariableDeclaration ReferenceType FigLink VariableDeclarator lnkFig ClassCreator ReferenceType FigLink MemberReference lnk LocalVariableDeclaration ReferenceType Collection VariableDeclarator linkEndsColn MethodInvocation Model MethodInvocation MemberReference lnk getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator linkEnds MethodInvocation linkEndsColn toArray LocalVariableDeclaration ReferenceType Object VariableDeclarator fromInst MethodInvocation Model MethodInvocation MemberReference ArraySelector Literal 0 linkEnds getInstance getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator toInst MethodInvocation Model MethodInvocation MemberReference ArraySelector Literal 1 linkEnds getInstance getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator fromFN Cast ReferenceType FigNode MethodInvocation lay MemberReference fromInst presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator toFN Cast ReferenceType FigNode MethodInvocation lay MemberReference toInst presentationFor StatementExpression MethodInvocation lnkFig MemberReference fromFN setSourcePortFig StatementExpression MethodInvocation lnkFig MemberReference fromFN setSourceFigNode StatementExpression MethodInvocation lnkFig MemberReference toFN setDestPortFig StatementExpression MethodInvocation lnkFig MemberReference toFN setDestFigNode StatementExpression MethodInvocation lnkFig MethodInvocation MemberReference lay setLayer getFig StatementExpression Assignment MemberReference newEdge MemberReference lnkFig = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigGeneralization MemberReference edge MemberReference lay = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAPermission getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigPermission MemberReference edge MemberReference lay = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAUsage getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigUsage MemberReference edge MemberReference lay = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAbstraction getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigRealization MemberReference edge = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference edge getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal """" WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference o getName getFacade = IfStatement MethodInvocation CoreFactory.REALIZE_STEREOTYPE MemberReference name equals BlockStatement BreakStatement End End IfStatement MethodInvocation CoreFactory.REALIZE_STEREOTYPE MemberReference name equals BlockStatement LocalVariableDeclaration ReferenceType FigRealization VariableDeclarator realFig ClassCreator ReferenceType FigRealization MemberReference edge LocalVariableDeclaration ReferenceType Object VariableDeclarator supplier MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator client MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator supFN Cast ReferenceType FigNode MethodInvocation lay MemberReference supplier presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator cliFN Cast ReferenceType FigNode MethodInvocation lay MemberReference client presentationFor StatementExpression MethodInvocation realFig MemberReference cliFN setSourcePortFig StatementExpression MethodInvocation realFig MemberReference cliFN setSourceFigNode StatementExpression MethodInvocation realFig MemberReference supFN setDestPortFig StatementExpression MethodInvocation realFig MemberReference supFN setDestFigNode StatementExpression MethodInvocation realFig MethodInvocation MemberReference lay setLayer getFig StatementExpression Assignment MemberReference newEdge MemberReference realFig = BlockStatement LocalVariableDeclaration ReferenceType FigDependency VariableDeclarator depFig ClassCreator ReferenceType FigDependency MemberReference edge MemberReference lay StatementExpression Assignment MemberReference newEdge MemberReference depFig = End IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference lay = End End End End End End End End End End IfStatement BinaryOperation == MemberReference newEdge Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal ""Don't know how to create FigEdge for model type "" MethodInvocation edge MethodInvocation getName getClass End StatementExpression MethodInvocation MemberReference lay MemberReference newEdge setPorts AssertStatement BinaryOperation != MemberReference newEdge Literal null Literal ""There has been no FigEdge created"" StatementExpression MethodInvocation newEdge MethodInvocation GraphChangeAdapter MethodInvocation MemberReference gm MemberReference edge createElement getInstance setDiElement AssertStatement BinaryOperation != MemberReference newEdge Literal null Literal ""There has been no FigEdge created"" AssertStatement BinaryOperation != MethodInvocation newEdge getDestFigNode Literal null Literal ""The FigEdge has no dest node"" AssertStatement BinaryOperation != MethodInvocation newEdge getDestPortFig Literal null Literal ""The FigEdge has no dest port"" AssertStatement BinaryOperation != MethodInvocation newEdge getSourceFigNode Literal null Literal ""The FigEdge has no source node"" AssertStatement BinaryOperation != MethodInvocation newEdge getSourcePortFig Literal null Literal ""The FigEdge has no source port"" StatementExpression MethodInvocation lay MemberReference newEdge add ReturnStatement MemberReference newEdge ReferenceType UmlDiagramRenderer",1
711,711,"CompilationUnit PackageDeclaration org.argouml.persistence Import java.awt.Rectangle Import java.io.InputStream Import java.util.ArrayList Import java.util.HashMap Import java.util.Iterator Import java.util.LinkedHashMap Import java.util.List Import java.util.Map Import java.util.StringTokenizer Import org.apache.log4j.Logger Import org.argouml.uml.diagram.AttributesCompartmentContainer Import org.argouml.uml.diagram.ExtensionsCompartmentContainer Import org.argouml.uml.diagram.OperationsCompartmentContainer Import org.argouml.uml.diagram.PathContainer Import org.argouml.uml.diagram.StereotypeContainer Import org.argouml.uml.diagram.VisibilityContainer Import org.argouml.uml.diagram.activity.ui.FigPool Import org.argouml.uml.diagram.deployment.ui.FigMNodeInstance Import org.argouml.uml.diagram.deployment.ui.FigNodeInstance Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.argouml.uml.diagram.ui.FigEdgePort Import org.tigris.gef.base.Diagram Import org.tigris.gef.persistence.pgml.Container Import org.tigris.gef.persistence.pgml.FigEdgeHandler Import org.tigris.gef.persistence.pgml.FigGroupHandler Import org.tigris.gef.persistence.pgml.HandlerStack Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigGroup Import org.tigris.gef.presentation.FigNode Import org.xml.sax.Attributes Import org.xml.sax.SAXException Import org.xml.sax.helpers.DefaultHandler ClassDeclaration /**
 * The PGML Parser.
 */ PGMLStackParser FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType PGMLStackParser getLogger FieldDeclaration Modifier private ReferenceType List VariableDeclarator figEdges ClassCreator ReferenceType ArrayList Literal 50 FieldDeclaration Modifier private ReferenceType LinkedHashMap VariableDeclarator modelElementsByFigEdge ClassCreator ReferenceType LinkedHashMap Literal 50 ConstructorDeclaration Modifier public /**
     * Constructor.
     * @param modelElementsByUuid a map of model elements indexed
     *                            by a unique string identifier.
     */ PGMLStackParser FormalParameter ReferenceType Map modelElementsByUuid StatementExpression SuperConstructorInvocation MemberReference modelElementsByUuid StatementExpression MethodInvocation Literal ""org.argouml.uml.diagram.ui.FigNote"" Literal ""org.argouml.uml.diagram.static_structure.ui.FigComment"" addTranslation StatementExpression MethodInvocation Literal ""org.argouml.uml.diagram.static_structure.ui.FigNote"" Literal ""org.argouml.uml.diagram.static_structure.ui.FigComment"" addTranslation StatementExpression MethodInvocation Literal ""org.argouml.uml.diagram.state.ui.FigState"" Literal ""org.argouml.uml.diagram.state.ui.FigSimpleState"" addTranslation StatementExpression MethodInvocation Literal ""org.argouml.uml.diagram.ui.FigCommentPort"" Literal ""org.argouml.uml.diagram.ui.FigEdgePort"" addTranslation StatementExpression MethodInvocation ClassReference MethodInvocation getName ReferenceType FigMNodeInstance ClassReference MethodInvocation getName ReferenceType FigNodeInstance addTranslation MethodDeclaration Modifier public ReferenceType DefaultHandler getHandler FormalParameter ReferenceType HandlerStack stack FormalParameter ReferenceType Object container FormalParameter ReferenceType String uri FormalParameter ReferenceType String localname FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attributes SAXException LocalVariableDeclaration ReferenceType String VariableDeclarator href MethodInvocation attributes Literal ""href"" getValue LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null IfStatement BinaryOperation != MemberReference href Literal null BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation MemberReference href findOwner = IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Found href of "" MemberReference href Literal "" with no matching element in model"" warn ReturnStatement Literal null End End IfStatement BinaryOperation instanceof MemberReference container ReferenceType FigGroupHandler BlockStatement LocalVariableDeclaration ReferenceType FigGroup VariableDeclarator group Cast ReferenceType FigGroupHandler MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference group ReferenceType FigNode MethodInvocation ! qname Literal ""private"" equals BlockStatement ReturnStatement Literal null End End IfStatement BinaryOperation && MethodInvocation qname Literal ""private"" equals BinaryOperation instanceof MemberReference container ReferenceType Container BlockStatement ReturnStatement ClassCreator ReferenceType PrivateHandler This Cast ReferenceType Container MemberReference container End LocalVariableDeclaration ReferenceType DefaultHandler VariableDeclarator handler SuperMethodInvocation MemberReference stack MemberReference container MemberReference uri MemberReference localname MemberReference qname MemberReference attributes getHandler IfStatement BinaryOperation instanceof MemberReference handler ReferenceType FigEdgeHandler BlockStatement ReturnStatement ClassCreator ReferenceType org ReferenceType argouml ReferenceType persistence ReferenceType FigEdgeHandler This Cast ReferenceType FigEdgeHandler MemberReference handler End ReturnStatement MemberReference handler MethodDeclaration Modifier final protected setAttrs FormalParameter ReferenceType Fig f FormalParameter ReferenceType Attributes attrList SAXException IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigGroup BlockStatement LocalVariableDeclaration ReferenceType FigGroup VariableDeclarator group Cast ReferenceType FigGroup MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator clsNameBounds MethodInvocation attrList Literal ""description"" getValue IfStatement BinaryOperation != MemberReference clsNameBounds Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference clsNameBounds Literal "",;[] "" IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken End IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken End LocalVariableDeclaration ReferenceType Map VariableDeclarator attributeMap MethodInvocation MemberReference st interpretStyle StatementExpression MethodInvocation MemberReference group MemberReference attributeMap setStyleAttributes End End LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation attrList Literal ""name"" getValue IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation ! name Literal """" equals BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference name registerFig End StatementExpression MethodInvocation MemberReference f MemberReference attrList setCommonAttrs LocalVariableDeclaration ReferenceType String VariableDeclarator href MethodInvocation attrList Literal ""href"" getValue IfStatement BinaryOperation && BinaryOperation != MemberReference href Literal null MethodInvocation ! href Literal """" equals BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation MemberReference href findOwner IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""Can't find href of "" MemberReference href error ThrowStatement ClassCreator ReferenceType SAXException BinaryOperation + BinaryOperation + Literal ""Found href of "" MemberReference href Literal "" with no matching element in model"" End IfStatement BinaryOperation != MethodInvocation f getOwner MemberReference modelElement BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigEdge BlockStatement StatementExpression MethodInvocation modelElementsByFigEdge MemberReference f MemberReference modelElement put BlockStatement StatementExpression MethodInvocation f MemberReference modelElement setOwner End BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""Ignoring href on "" MethodInvocation f MethodInvocation getName getClass Literal "" as it's already set"" debug End End MethodDeclaration /**
     * The StringTokenizer is expected to be positioned at the start of a string
     * of style identifiers in the format name=value;name=value;name=value....
     * Each name value pair is interpreted and the Fig configured accordingly.
     * The value is optional and will default to a value applicable for its
     * name.
     * The current applicable names are operationsVisible and attributesVisible
     * and are used to show or hide the compartments within Class and Interface.
     * The default values are true.
     * @param st The StrinkTokenizer positioned at the first style identifier
     * @return a map of attributes
     */ Modifier private ReferenceType Map interpretStyle FormalParameter ReferenceType StringTokenizer st LocalVariableDeclaration ReferenceType Map VariableDeclarator map ClassCreator ReferenceType HashMap LocalVariableDeclaration ReferenceType String VariableDeclarator name LocalVariableDeclaration ReferenceType String VariableDeclarator value WhileStatement MethodInvocation st hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator namevaluepair MethodInvocation st nextToken LocalVariableDeclaration BasicType int VariableDeclarator equalsPos MethodInvocation namevaluepair Literal '=' indexOf IfStatement BinaryOperation < MemberReference equalsPos Literal 0 BlockStatement StatementExpression Assignment MemberReference name MemberReference namevaluepair = StatementExpression Assignment MemberReference value Literal ""true"" = BlockStatement StatementExpression Assignment MemberReference name MethodInvocation namevaluepair Literal 0 MemberReference equalsPos substring = StatementExpression Assignment MemberReference value MethodInvocation namevaluepair BinaryOperation + MemberReference equalsPos Literal 1 substring = End StatementExpression MethodInvocation map MemberReference name MemberReference value put End ReturnStatement MemberReference map MethodDeclaration /**
     * Set the fig style attributes. This should move into
     * the render factories as described in issue 859.
     * @param fig the fig to style.
     * @param attributeMap a map of name value pairs
     */ Modifier private setStyleAttributes FormalParameter ReferenceType Fig fig FormalParameter ReferenceType Map attributeMap LocalVariableDeclaration ReferenceType String VariableDeclarator name LocalVariableDeclaration ReferenceType String VariableDeclarator value LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation attributeMap MethodInvocation iterator entrySet WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation it next StatementExpression Assignment MemberReference name Cast ReferenceType String MethodInvocation entry getKey = StatementExpression Assignment MemberReference value Cast ReferenceType String MethodInvocation entry getValue = IfStatement Literal MethodInvocation MemberReference name equals ""operationsVisible"" BlockStatement StatementExpression Cast ReferenceType OperationsCompartmentContainer MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals ""attributesVisible"" BlockStatement StatementExpression Cast ReferenceType AttributesCompartmentContainer MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals ""stereotypeVisible"" BlockStatement StatementExpression Cast ReferenceType StereotypeContainer MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals ""visibilityVisible"" BlockStatement StatementExpression Cast ReferenceType VisibilityContainer MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals ""pathVisible"" BlockStatement StatementExpression Cast ReferenceType PathContainer MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals ""extensionPointVisible"" BlockStatement StatementExpression Cast ReferenceType ExtensionsCompartmentContainer MemberReference fig End End End End End End End MethodDeclaration Modifier public ReferenceType Diagram readDiagram FormalParameter ReferenceType InputStream is FormalParameter BasicType boolean closeStream SAXException LocalVariableDeclaration ReferenceType Diagram VariableDeclarator d SuperMethodInvocation MemberReference is MemberReference closeStream readDiagram StatementExpression MethodInvocation MemberReference d attachEdges ReturnStatement MemberReference d MethodDeclaration /**
     * This is called when all nodes and edges have been read and placed on
     * the diagram. This method then attaches the edges to the correct node,
     * including the nodes contained within edges allowing edge to edge
     * connections for comment edges, association classes and dependencies.
     * @param d the Diagram
     */ Modifier private attachEdges FormalParameter ReferenceType Diagram d ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figEdges iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType EdgeData VariableDeclarator edgeData Cast ReferenceType EdgeData MethodInvocation it next LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator edge MethodInvocation edgeData getFigEdge LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation modelElementsByFigEdge MemberReference edge get IfStatement BinaryOperation != MemberReference modelElement Literal null BlockStatement StatementExpression MethodInvocation edge MemberReference modelElement setOwner End End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figEdges iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType EdgeData VariableDeclarator edgeData Cast ReferenceType EdgeData MethodInvocation it next LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator edge MethodInvocation edgeData getFigEdge LocalVariableDeclaration ReferenceType Fig VariableDeclarator sourcePortFig Literal null LocalVariableDeclaration ReferenceType Fig VariableDeclarator destPortFig Literal null LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFigNode Literal null LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFigNode Literal null StatementExpression Assignment MemberReference sourcePortFig MethodInvocation MethodInvocation edgeData getSourcePortFig findFig = StatementExpression Assignment MemberReference destPortFig MethodInvocation MethodInvocation edgeData getDestPortFig findFig = StatementExpression Assignment MemberReference sourceFigNode MethodInvocation MethodInvocation edgeData getSourceFigNode getFigNode = StatementExpression Assignment MemberReference destFigNode MethodInvocation MethodInvocation edgeData getDestFigNode getFigNode = IfStatement BinaryOperation && BinaryOperation == MemberReference sourcePortFig Literal null BinaryOperation != MemberReference sourceFigNode Literal null BlockStatement StatementExpression Assignment MemberReference sourcePortFig MethodInvocation MemberReference sourceFigNode getPortFig = End IfStatement BinaryOperation && BinaryOperation == MemberReference destPortFig Literal null BinaryOperation != MemberReference destFigNode Literal null BlockStatement StatementExpression Assignment MemberReference destPortFig MethodInvocation MemberReference destFigNode getPortFig = End IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference sourcePortFig Literal null BinaryOperation == MemberReference destPortFig Literal null BinaryOperation == MemberReference sourceFigNode Literal null BinaryOperation == MemberReference destFigNode Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Can't find nodes for FigEdge: "" MethodInvocation edge getId Literal "":"" MethodInvocation edge toString error StatementExpression MethodInvocation edge removeFromDiagram BlockStatement StatementExpression MethodInvocation edge MemberReference sourcePortFig setSourcePortFig StatementExpression MethodInvocation edge MemberReference destPortFig setDestPortFig StatementExpression MethodInvocation edge MemberReference sourceFigNode setSourceFigNode StatementExpression MethodInvocation edge MemberReference destFigNode setDestFigNode End End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation d MethodInvocation getContentsEdgesOnly MethodInvocation iterator getLayer MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType FigEdge MethodInvocation it next End MethodDeclaration Modifier public addFigEdge FormalParameter ReferenceType FigEdge figEdge FormalParameter ReferenceType String sourcePortFig FormalParameter ReferenceType String destPortFig FormalParameter ReferenceType String sourceFigNode FormalParameter ReferenceType String destFigNode StatementExpression MethodInvocation figEdges ClassCreator ReferenceType EdgeData MemberReference figEdge MemberReference sourcePortFig MemberReference destPortFig MemberReference sourceFigNode MemberReference destFigNode add MethodDeclaration /**
     * Get the FigNode that the fig id represents.
     *
     * @param figId (In the form Figx.y.z)
     * @return the FigNode with the given id
     * @throws IllegalStateException
     *              if the figId supplied is not of a FigNode
     */ Modifier private ReferenceType FigNode getFigNode FormalParameter ReferenceType String figId IllegalStateException IfStatement BinaryOperation < MethodInvocation figId Literal '.' indexOf Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation MemberReference figId findFig IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNode BlockStatement ReturnStatement Cast ReferenceType FigNode MemberReference f BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal ""FigID "" MemberReference figId Literal "" is not a node, edge ignored"" error ReturnStatement Literal null End End StatementExpression Assignment MemberReference figId MethodInvocation figId Literal 0 MethodInvocation figId Literal '.' indexOf substring = LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator edge Cast ReferenceType FigEdgeModelElement MethodInvocation MemberReference figId findFig IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal ""Can't find a FigNode with id "" MemberReference figId End StatementExpression MethodInvocation edge makeEdgePort ReturnStatement MethodInvocation edge getEdgePort MethodDeclaration /**
     * Get the Fig from the FigNode that is the port.
     *
     * @param figNode the FigNode
     * @return the Fig that is the port on the given FigNode
     */ Modifier private ReferenceType Fig getPortFig FormalParameter ReferenceType FigNode figNode IfStatement BinaryOperation instanceof MemberReference figNode ReferenceType FigEdgePort BlockStatement ReturnStatement MemberReference figNode BlockStatement ReturnStatement Cast ReferenceType Fig MethodInvocation figNode MethodInvocation Literal 0 get getPortFigs End ClassDeclaration Modifier private EdgeData FieldDeclaration Modifier private ReferenceType FigEdge VariableDeclarator figEdge FieldDeclaration Modifier private ReferenceType String VariableDeclarator sourcePortFig FieldDeclaration Modifier private ReferenceType String VariableDeclarator destPortFig FieldDeclaration Modifier private ReferenceType String VariableDeclarator sourceFigNode FieldDeclaration Modifier private ReferenceType String VariableDeclarator destFigNode ConstructorDeclaration Modifier public EdgeData FormalParameter ReferenceType FigEdge edge FormalParameter ReferenceType String sourcePort FormalParameter ReferenceType String destPort FormalParameter ReferenceType String sourceNode FormalParameter ReferenceType String destNode StatementExpression Assignment This MemberReference figEdge MemberReference edge = StatementExpression Assignment This MemberReference sourcePortFig MemberReference sourcePort = StatementExpression Assignment This MemberReference destPortFig MemberReference destPort = StatementExpression Assignment This MemberReference sourceFigNode MemberReference sourceNode = StatementExpression Assignment This MemberReference destFigNode MemberReference destNode = MethodDeclaration Modifier public ReferenceType String getDestFigNode ReturnStatement MemberReference destFigNode MethodDeclaration Modifier public ReferenceType String getDestPortFig ReturnStatement MemberReference destPortFig MethodDeclaration Modifier public ReferenceType FigEdge getFigEdge ReturnStatement MemberReference figEdge MethodDeclaration Modifier public ReferenceType String getSourceFigNode ReturnStatement MemberReference sourceFigNode MethodDeclaration Modifier public ReferenceType String getSourcePortFig ReturnStatement MemberReference sourcePortFig MethodDeclaration Modifier protected Annotation Override ReferenceType Fig constructFig FormalParameter ReferenceType String className FormalParameter ReferenceType String href FormalParameter ReferenceType Rectangle bounds SAXException LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Literal null IfStatement MethodInvocation className ClassReference MethodInvocation getName ReferenceType FigPool equals BlockStatement StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigPool MemberReference bounds = BlockStatement StatementExpression Assignment MemberReference f SuperMethodInvocation MemberReference className MemberReference href MemberReference bounds constructFig = End ReturnStatement MemberReference f ReferenceType org ReferenceType tigris ReferenceType gef ReferenceType persistence ReferenceType pgml ReferenceType PGMLStackParser",0
45,45,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.use_cases Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * A model that shows the extend relationships for some usecase.
 *
 * @since Oct 7, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLUseCaseExtendListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLUseCaseExtendListModel.
     */ UMLUseCaseExtendListModel StatementExpression SuperConstructorInvocation Literal ""extend"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getExtends getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getExtends MethodInvocation MemberReference o contains getFacade ReferenceType UMLModelElementListModel2",0
40,40,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * @since Dec 14, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewPseudoState FieldDeclaration Modifier private ReferenceType Object VariableDeclarator kind ConstructorDeclaration Modifier public /**
     * Constructor for ActionNewPseudoState.
     */ ActionNewPseudoState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-pseudostate"" localize putValue ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param k the pseudostate kind
     * @param n the to be localized name for the pseudostate kind
     */ ActionNewPseudoState FormalParameter ReferenceType Object k FormalParameter ReferenceType String n StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference kind MemberReference k = StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator MemberReference n localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator ps MethodInvocation Model MethodInvocation MemberReference target buildPseudoState getStateMachinesFactory IfStatement BinaryOperation != MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ps MemberReference kind setKind getCoreHelper End ReferenceType AbstractActionNewModelElement",0
887,887,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * Shows the bases belonging to some classifierrole.
 * @since Oct 3, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLClassifierRoleBaseListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierRoleBaseListModel.
     */ UMLClassifierRoleBaseListModel StatementExpression SuperConstructorInvocation Literal ""base"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases getFacade setAllElements MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem isAClassifier getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases MethodInvocation MemberReference elem contains getFacade ReferenceType UMLModelElementListModel2",0
817,817,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.Toolkit Import java.awt.datatransfer.DataFlavor Import java.awt.datatransfer.UnsupportedFlavorException Import java.awt.event.ActionEvent Import java.awt.event.FocusEvent Import java.awt.event.FocusListener Import java.io.IOException Import javax.swing.AbstractAction Import javax.swing.Action Import javax.swing.Icon Import javax.swing.event.CaretEvent Import javax.swing.event.CaretListener Import javax.swing.text.JTextComponent Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.tigris.gef.base.Globals ClassDeclaration Modifier public /**
 * Action to paste the content of either the GEF clipboard or the
 * system clipboard.  The action is enabled if there is content on
 * either clipboard AND either the mouse hovers over the JGraph (the
 * diagram) or the caret in a UMLTextField2 or UMLTextArea2 is
 * enabled.
 */ ActionPaste FieldDeclaration /**
     * The singelton.
     */ Modifier private static ReferenceType ActionPaste VariableDeclarator instance ClassCreator ReferenceType ActionPaste FieldDeclaration /**
     * The key.
     */ Modifier private final static ReferenceType String VariableDeclarator LOCALIZE_KEY Literal ""action.paste"" ConstructorDeclaration Modifier public /**
     * Default constructor for action. We cannot use UMLChangeAction
     * as a parent for this class since it works with shouldBeEnabled
     * etc. which doesn't give enough control about enabling/disabling
     * this action.
     *
     */ ActionPaste StatementExpression SuperConstructorInvocation MethodInvocation Translator MemberReference LOCALIZE_KEY localize LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation ResourceLoaderWrapper MemberReference LOCALIZE_KEY lookupIcon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference Action SMALL_ICON MemberReference icon putValue End StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION BinaryOperation + MethodInvocation Translator MemberReference LOCALIZE_KEY localize Literal "" "" putValue StatementExpression MethodInvocation Literal false setEnabled MethodDeclaration /**
     * Singleton implementation.
     * @return The singleton
     */ Modifier public static ReferenceType ActionPaste getInstance ReturnStatement MemberReference instance FieldDeclaration /**
     * The source textcomponent where the caret is positioned.
     */ Modifier private ReferenceType JTextComponent VariableDeclarator textSource MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae IfStatement BinaryOperation && BinaryOperation != MemberReference Globals clipBoard Literal null MethodInvocation ! Globals.clipBoard isEmpty BlockStatement BlockStatement IfStatement BinaryOperation && MethodInvocation ! isSystemClipBoardEmpty BinaryOperation != MemberReference textSource Literal null BlockStatement StatementExpression MethodInvocation textSource paste End End MethodDeclaration /**
     * Check if there is a selection on the clipboard.
     *
     * @return <code>true</code> if there is.
     */ Modifier private BasicType boolean isSystemClipBoardEmpty TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator text MethodInvocation Toolkit MethodInvocation getSystemClipboard MethodInvocation Literal null getContents MethodInvocation MemberReference DataFlavor stringFlavor getTransferData getDefaultToolkit ReturnStatement BinaryOperation == MemberReference text Literal null CatchClause CatchClauseParameter IOException ignorable CatchClause CatchClauseParameter UnsupportedFlavorException ignorable ReturnStatement Literal true MethodDeclaration Modifier public focusLost FormalParameter ReferenceType FocusEvent e IfStatement BinaryOperation == MethodInvocation e getSource MemberReference textSource BlockStatement StatementExpression Assignment MemberReference textSource Literal null = End MethodDeclaration Modifier public caretUpdate FormalParameter ReferenceType CaretEvent e StatementExpression Assignment MemberReference textSource Cast ReferenceType JTextComponent MethodInvocation e getSource = MethodDeclaration Modifier public focusGained FormalParameter ReferenceType FocusEvent e StatementExpression Assignment MemberReference textSource Cast ReferenceType JTextComponent MethodInvocation e getSource = ReferenceType AbstractAction ReferenceType CaretListener ReferenceType FocusListener",0
780,780,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 3, 2003
 */ PropPanelUMLClassDiagram ConstructorDeclaration Modifier public /**
     * Constructor for PropPanelUMLClassDiagram.
     */ PropPanelUMLClassDiagram StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""label.class-diagram"" localize MethodInvocation Literal ""ClassDiagram"" lookupIcon ReferenceType PropPanelDiagram",0
690,690,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Graphics Import java.awt.Rectangle Import javax.swing.Icon Import org.apache.log4j.Logger Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.ModeCreateEdgeAndNode Import org.tigris.gef.base.ModeManager Import org.tigris.gef.base.ModeModify Import org.tigris.gef.base.SelectionButtons Import org.tigris.gef.base.SelectionManager Import org.tigris.gef.graph.MutableGraphModel Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.Handle ClassDeclaration Modifier public abstract /**
 * Enhanced version of SelectionNodeClarifiers with the new methods
 * necessary for the enhanced support marked as abstract so that implementors
 * are forced to implement them.  SelectionNodeClarifiers is simple
 * extension of this which implements null versions of the required 
 * methods for backward compatibility with the previous implementation.
 * <p>
 * To upgrade subtypes of SelectionNodeClarifiers, change them to 
 * extend this class instead and implement the required abstract methods.
 * The methods paintButtons, dragHandle, hitHandle, and createEdge* can
 * all usually be removed.
 *
 * @author jrobbins
 * @author Tom Morris
 */ SelectionNodeClarifiers2 FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType SelectionNodeClarifiers2 getLogger FieldDeclaration /** Base index of array */ Modifier final protected static BasicType int VariableDeclarator BASE Literal 10 FieldDeclaration /** Top Handle */ Modifier final protected static BasicType int VariableDeclarator TOP Literal 10 FieldDeclaration /** Bottom Handle */ Modifier final protected static BasicType int VariableDeclarator BOTTOM Literal 11 FieldDeclaration /** Left Handle */ Modifier final protected static BasicType int VariableDeclarator LEFT Literal 12 FieldDeclaration /** Right Handle */ Modifier final protected static BasicType int VariableDeclarator RIGHT Literal 13 FieldDeclaration /** Lower left corner Handle */ Modifier final protected static BasicType int VariableDeclarator LOWER_LEFT Literal 14 FieldDeclaration Modifier private final static BasicType int VariableDeclarator OFFSET Literal 2 FieldDeclaration Modifier private BasicType int VariableDeclarator button ConstructorDeclaration Modifier public /**
     * Construct a new SelectionNodeClarifiers for the given Fig
     * 
     * @param f
     *            the given Fig
     */ SelectionNodeClarifiers2 FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier public Annotation Override paint FormalParameter ReferenceType Graphics g StatementExpression Cast ReferenceType Clarifiable MethodInvocation getContent StatementExpression SuperMethodInvocation MemberReference g paint MethodDeclaration Modifier public paintButtons FormalParameter ReferenceType Graphics g LocalVariableDeclaration ReferenceType Icon VariableDeclarator icons MethodInvocation getIcons IfStatement BinaryOperation == MemberReference icons Literal null BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getX getContent LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation getY getContent LocalVariableDeclaration BasicType int VariableDeclarator cw MethodInvocation MethodInvocation getWidth getContent LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation MethodInvocation getHeight getContent IfStatement BinaryOperation != MemberReference ArraySelector Literal 0 icons Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 icons MemberReference g BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 BinaryOperation - MemberReference cy MemberReference OFFSET MemberReference TOP paintButtonAbove End IfStatement BinaryOperation != MemberReference ArraySelector Literal 1 icons Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 1 icons MemberReference g BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 BinaryOperation + BinaryOperation + MemberReference cy MemberReference ch MemberReference OFFSET MemberReference BOTTOM paintButtonBelow End IfStatement BinaryOperation != MemberReference ArraySelector Literal 2 icons Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 2 icons MemberReference g BinaryOperation - MemberReference cx MemberReference OFFSET BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 MemberReference LEFT paintButtonLeft End IfStatement BinaryOperation != MemberReference ArraySelector Literal 3 icons Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 3 icons MemberReference g BinaryOperation + BinaryOperation + MemberReference cx MemberReference cw MemberReference OFFSET BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 MemberReference RIGHT paintButtonRight End IfStatement BinaryOperation != MemberReference ArraySelector Literal 4 icons Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 4 icons MemberReference g BinaryOperation - MemberReference cx MemberReference OFFSET BinaryOperation + MemberReference cy MemberReference ch MemberReference LOWER_LEFT paintButtonLeft End MethodDeclaration Modifier protected ReferenceType Object getNewNode FormalParameter BasicType int arg0 ReturnStatement Literal null MethodDeclaration /**
     * Compute handle selection, if any, from cursor location.
     * 
     * @param cursor
     *            cursor point represented by a 0-size rectangle
     * @param h
     *            handle in which to return selected Handle information (output
     *            parameter). A handle index of -1 indicates that the cursor is
     *            not over any handle.
     * 
     * If GEF had any API documentation you could see the following:
     * @see org.tigris.gef.base.SelectionResize#hitHandle(java.awt.Rectangle,
     *      org.tigris.gef.presentation.Handle)
     */ Modifier public hitHandle FormalParameter ReferenceType Rectangle cursor FormalParameter ReferenceType Handle h StatementExpression SuperMethodInvocation MemberReference cursor MemberReference h hitHandle IfStatement BinaryOperation != MemberReference h index Literal - 1 BlockStatement ReturnStatement End IfStatement MethodInvocation ! isPaintButtons BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Icon VariableDeclarator icons MethodInvocation getIcons IfStatement BinaryOperation == MemberReference icons Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType SelectionManager VariableDeclarator sm MethodInvocation ce getSelectionManager IfStatement BinaryOperation != MethodInvocation sm size Literal 1 BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType ModeManager VariableDeclarator mm MethodInvocation ce getModeManager IfStatement BinaryOperation && MethodInvocation mm ClassReference ReferenceType ModeModify includes BinaryOperation == MethodInvocation getPressedButton Literal - 1 BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getX getContent LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation getY getContent LocalVariableDeclaration BasicType int VariableDeclarator cw MethodInvocation MethodInvocation getWidth getContent LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation MethodInvocation getHeight getContent IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector Literal 0 icons Literal null MethodInvocation BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 MemberReference cy MemberReference ArraySelector Literal 0 MethodInvocation getIconWidth icons MemberReference ArraySelector Literal 0 MethodInvocation getIconHeight icons MemberReference cursor hitAbove BlockStatement StatementExpression Assignment MemberReference h index MemberReference TOP = IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector Literal 1 icons Literal null MethodInvocation BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 BinaryOperation + MemberReference cy MemberReference ch MemberReference ArraySelector Literal 1 MethodInvocation getIconWidth icons MemberReference ArraySelector Literal 1 MethodInvocation getIconHeight icons MemberReference cursor hitBelow BlockStatement StatementExpression Assignment MemberReference h index MemberReference BOTTOM = IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector Literal 2 icons Literal null MethodInvocation MemberReference cx BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 MemberReference ArraySelector Literal 2 MethodInvocation getIconWidth icons MemberReference ArraySelector Literal 2 MethodInvocation getIconHeight icons MemberReference cursor hitLeft BlockStatement StatementExpression Assignment MemberReference h index MemberReference LEFT = IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector Literal 3 icons Literal null MethodInvocation BinaryOperation + MemberReference cx MemberReference cw BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 MemberReference ArraySelector Literal 3 MethodInvocation getIconWidth icons MemberReference ArraySelector Literal 3 MethodInvocation getIconHeight icons MemberReference cursor hitRight BlockStatement StatementExpression Assignment MemberReference h index MemberReference RIGHT = IfStatement BinaryOperation && BinaryOperation != MemberReference ArraySelector Literal 4 icons Literal null MethodInvocation MemberReference cx BinaryOperation + MemberReference cy MemberReference ch MemberReference ArraySelector Literal 4 MethodInvocation getIconWidth icons MemberReference ArraySelector Literal 4 MethodInvocation getIconHeight icons MemberReference cursor hitLeft BlockStatement StatementExpression Assignment MemberReference h index MemberReference LOWER_LEFT = BlockStatement StatementExpression Assignment MemberReference h index Literal - 1 = End End End End End IfStatement BinaryOperation == MemberReference h index Literal - 1 BlockStatement StatementExpression Assignment MemberReference h instructions MethodInvocation Literal 15 getInstructions = BlockStatement StatementExpression Assignment MemberReference h instructions MethodInvocation MemberReference h index getInstructions = End MethodDeclaration Modifier public dragHandle FormalParameter BasicType int mX FormalParameter BasicType int mY FormalParameter BasicType int anX FormalParameter BasicType int anY FormalParameter ReferenceType Handle hand IfStatement BinaryOperation < MemberReference hand index Literal 10 BlockStatement StatementExpression MethodInvocation Literal false setPaintButtons StatementExpression SuperMethodInvocation MemberReference mX MemberReference mY MemberReference anX MemberReference anY MemberReference hand dragHandle ReturnStatement End IfStatement MethodInvocation ! MemberReference hand index isDraggableHandle BlockStatement ReturnStatement End LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getX getContent VariableDeclarator cy MethodInvocation MethodInvocation getY getContent LocalVariableDeclaration BasicType int VariableDeclarator cw MethodInvocation MethodInvocation getWidth getContent VariableDeclarator ch MethodInvocation MethodInvocation getHeight getContent LocalVariableDeclaration BasicType int VariableDeclarator bx MemberReference mX VariableDeclarator by MemberReference mY StatementExpression Assignment MemberReference button MemberReference hand index = SwitchStatement MemberReference hand index SwitchStatementCase TOP StatementExpression Assignment MemberReference by MemberReference cy = StatementExpression Assignment MemberReference bx BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 = BreakStatement SwitchStatementCase BOTTOM StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy MemberReference ch = StatementExpression Assignment MemberReference bx BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 = BreakStatement SwitchStatementCase LEFT StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 = StatementExpression Assignment MemberReference bx MemberReference cx = BreakStatement SwitchStatementCase RIGHT StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 = StatementExpression Assignment MemberReference bx BinaryOperation + MemberReference cx MemberReference cw = BreakStatement SwitchStatementCase LOWER_LEFT StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy MemberReference ch = StatementExpression Assignment MemberReference bx MemberReference cx = BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG Literal ""invalid handle number"" warn BreakStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator nodeType MethodInvocation MemberReference hand index getNewNodeType LocalVariableDeclaration ReferenceType Object VariableDeclarator edgeType MethodInvocation MemberReference hand index getNewEdgeType LocalVariableDeclaration BasicType boolean VariableDeclarator reverse MethodInvocation MemberReference hand index isReverseEdge IfStatement BinaryOperation && BinaryOperation != MemberReference edgeType Literal null BinaryOperation != MemberReference nodeType Literal null BlockStatement LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType ModeCreateEdgeAndNode VariableDeclarator m ClassCreator ReferenceType ModeCreateEdgeAndNode MemberReference ce MemberReference edgeType MethodInvocation isEdgePostProcessRequested This StatementExpression MethodInvocation m Cast ReferenceType FigNode MethodInvocation getContent MethodInvocation MethodInvocation getOwner getContent MemberReference bx MemberReference by MemberReference reverse setup StatementExpression MethodInvocation ce MemberReference m pushMode End MethodDeclaration Modifier public Annotation Override buttonClicked FormalParameter BasicType int buttonCode StatementExpression SuperMethodInvocation MemberReference buttonCode buttonClicked MethodDeclaration Modifier protected ReferenceType Object createEdgeAbove FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference TOP createEdge MethodDeclaration Modifier protected ReferenceType Object createEdgeUnder FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference BOTTOM createEdge MethodDeclaration Modifier protected ReferenceType Object createEdgeLeft FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference LEFT createEdge MethodDeclaration Modifier protected ReferenceType Object createEdgeRight FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference RIGHT createEdge MethodDeclaration Modifier private ReferenceType Object createEdge FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator edge IfStatement MethodInvocation MemberReference index isReverseEdge BlockStatement StatementExpression Assignment MemberReference edge MethodInvocation gm MemberReference newNode MethodInvocation MethodInvocation getOwner getContent MethodInvocation MemberReference index getNewEdgeType connect = BlockStatement StatementExpression Assignment MemberReference edge MethodInvocation gm MethodInvocation MethodInvocation getOwner getContent MemberReference newNode MethodInvocation MemberReference index getNewEdgeType connect = End ReturnStatement MemberReference edge MethodDeclaration Modifier protected ReferenceType Object createEdgeToSelf FormalParameter ReferenceType MutableGraphModel gm LocalVariableDeclaration ReferenceType Object VariableDeclarator edge MethodInvocation gm MethodInvocation MethodInvocation getOwner getContent MethodInvocation MethodInvocation getOwner getContent MethodInvocation MemberReference LOWER_LEFT getNewEdgeType connect ReturnStatement MemberReference edge MethodDeclaration /**
     * Get array of icons to use when drawing handles.
     * @return icon or null
     */ Modifier protected abstract ReferenceType Icon getIcons MethodDeclaration /**
     * Get the ""instructions"" string to pass to GEF for the given handle number.
     * 
     * @param index
     *            handle number that is being dragged from
     * @return string or null
     */ Modifier protected abstract ReferenceType String getInstructions FormalParameter BasicType int index MethodDeclaration /**
     * Get the node type to create when dragging from the given handle number.
     * 
     * @param index
     *            handle number that is being dragged from
     * @return metatype for model element. Null to disallow drag.
     */ Modifier protected abstract ReferenceType Object getNewNodeType FormalParameter BasicType int index MethodDeclaration /**
     * Get the edge type to create when dragging from the given handle number.
     * 
     * @param index
     *            handle number that is being dragged from
     * @return metatype for model element. Null to disallow drag.
     */ Modifier protected abstract ReferenceType Object getNewEdgeType FormalParameter BasicType int index MethodDeclaration /**
     * Get the node type to create when dragging from the given handle number.
     * 
     * @param index
     *            handle number that is being dragged from
     * @return true to reverse direction of assocation from direction of drag.
     *         eg. specialization instead of generalization.  Default
     *         implementation always returns false.
     */ Modifier protected BasicType boolean isReverseEdge FormalParameter BasicType int index ReturnStatement Literal false MethodDeclaration /**
     * Get the draggability of a particular handle. Default implementation
     * always returns true. Override to return false for handles which shouldn't
     * be draggable (i.e. they only support clicks, not drags).
     * 
     * @param index
     *            handle index to check draggability for
     * @return true if this handle is draggable, false otherwise
     */ Modifier protected BasicType boolean isDraggableHandle FormalParameter BasicType int index ReturnStatement Literal true MethodDeclaration /**
     * Request post processing of edge by GEF after it is created using
     * {@link ModeCreateEdgeAndNode#ModeCreateEdgeAndNode(Editor, Object, Object, boolean)}
     * 
     * @return true if postprocessing requested
     */ Modifier protected BasicType boolean isEdgePostProcessRequested ReturnStatement Literal false MethodDeclaration /**
     * @return index of last button/handle that was clicked
     */ Modifier protected BasicType int getButton ReturnStatement MemberReference button ReferenceType SelectionButtons",0
578,578,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Point Import java.awt.Rectangle Import javax.swing.JDialog Import javax.swing.JPanel Import javax.swing.JTabbedPane Import javax.swing.SwingUtilities Import org.apache.log4j.Logger Import org.argouml.i18n.Translator Import org.argouml.util.ArgoFrame Import org.tigris.swidgets.Orientable Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public abstract /**
 * A subclass of JPanel that can act as a tab in the DetailsPane or
 * MultiEditorPane. Added functionality:<p>
 *
 * Spawning: When the tab is double-clicked, this JPanel will generate a
 * separate window of the same size and with the same contents. This is almost
 * like ""tearing off"" a tab.<p>
 *
 * TODO: Spawning of windows disabled in spawn()<p>
 *
 * Title: This JPanel keeps track of its own title.<p>
 *
 * Orientation: This JPanel is Orientable.<p>
 *
 * Cloning: This JPanel may be cloned.<p>
 *
 * This class used to be named TabSpawnable.
 * Renamed since it is not a Tab, but a Panel, and being spawnable is
 * not any more its main purpose.
 */ AbstractArgoJPanel FieldDeclaration /**
     * Logger.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType AbstractArgoJPanel getLogger FieldDeclaration Modifier private final static BasicType int VariableDeclarator OVERLAPP Literal 30 FieldDeclaration Modifier private ReferenceType String VariableDeclarator title Literal ""untitled"" FieldDeclaration /**
     * if true, remove tab from parent JTabbedPane.
     */ Modifier private BasicType boolean VariableDeclarator tear Literal false FieldDeclaration Modifier private ReferenceType Orientation VariableDeclarator orientation MethodDeclaration /**
     * @return the orientation
     */ Modifier public ReferenceType Orientation getOrientation ReturnStatement MemberReference orientation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ AbstractArgoJPanel StatementExpression ExplicitConstructorInvocation MethodInvocation Translator Literal ""tab.untitled"" localize Literal false ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param title The name as a localized string.
     */ AbstractArgoJPanel FormalParameter ReferenceType String title StatementExpression ExplicitConstructorInvocation MemberReference title Literal false ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param title The name (a localized string).
     * @param t if true, remove tab from parent JTabbedPane
     */ AbstractArgoJPanel FormalParameter ReferenceType String title FormalParameter BasicType boolean t StatementExpression MethodInvocation MemberReference title setTitle StatementExpression Assignment MemberReference tear MemberReference t = MethodDeclaration /**
     * This is not a real clone since it doesn't copy anything from the object
     * it is cloning. The {@link #spawn} method copies the title and in
     * some cases also the Target.
     *
     * @return the new object or null if not possible.
     */ Modifier public ReferenceType Object clone TryStatement ReturnStatement This MethodInvocation getClass MethodInvocation newInstance CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal ""exception in clone()"" MemberReference ex error ReturnStatement Literal null MethodDeclaration Modifier public setOrientation FormalParameter ReferenceType Orientation o StatementExpression Assignment This MemberReference orientation MemberReference o = MethodDeclaration /**
     * @return The title of the panel, a localized string.
     */ Modifier public ReferenceType String getTitle ReturnStatement MemberReference title MethodDeclaration /**
     * @param t The title, a localized string.
     */ Modifier public setTitle FormalParameter ReferenceType String t StatementExpression Assignment MemberReference title MemberReference t = MethodDeclaration /**
     * This should take its inspiration from
     * {@link org.tigris.gef.base.CmdSpawn}.<p>
     *
     * The spawned/cloned tab will be a JFrame. Currently this feature is
     * disabled for ArgoUML, except for the find dialog.
     * Code should behave though as if spawning might work at a
     * later stage.
     *
     * @return a copy of the frame or null if not clone-able.
     */ Modifier public ReferenceType AbstractArgoJPanel spawn LocalVariableDeclaration ReferenceType JDialog VariableDeclarator f ClassCreator ReferenceType JDialog MethodInvocation ArgoFrame getInstance StatementExpression MethodInvocation f MethodInvocation ClassCreator ReferenceType BorderLayout setLayout getContentPane StatementExpression MethodInvocation f MethodInvocation Translator MemberReference title localize setTitle LocalVariableDeclaration ReferenceType AbstractArgoJPanel VariableDeclarator newPanel Cast ReferenceType AbstractArgoJPanel MethodInvocation clone IfStatement BinaryOperation == MemberReference newPanel Literal null BlockStatement ReturnStatement Literal null End StatementExpression MethodInvocation newPanel MethodInvocation Translator MemberReference title localize setTitle StatementExpression MethodInvocation f MethodInvocation MemberReference newPanel MemberReference BorderLayout CENTER add getContentPane LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bounds MethodInvocation getBounds StatementExpression Assignment MemberReference bounds height BinaryOperation * MemberReference OVERLAPP Literal 2 += StatementExpression MethodInvocation f MemberReference bounds setBounds LocalVariableDeclaration ReferenceType Point VariableDeclarator loc ClassCreator ReferenceType Point Literal 0 Literal 0 StatementExpression MethodInvocation SwingUtilities MemberReference loc This convertPointToScreen StatementExpression Assignment MemberReference loc y MemberReference OVERLAPP -= StatementExpression MethodInvocation f MemberReference loc setLocation StatementExpression MethodInvocation f Literal true setVisible IfStatement BinaryOperation && MemberReference tear BinaryOperation instanceof MethodInvocation getParent ReferenceType JTabbedPane BlockStatement StatementExpression Cast ReferenceType JTabbedPane MethodInvocation getParent End ReturnStatement MemberReference newPanel ReferenceType JPanel ReferenceType Cloneable ReferenceType Orientable",0
1545,1545,,0
687,687,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import java.util.ArrayList Import java.util.Collection Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 ClassDeclaration Modifier public /**
 * This action adds a context to a signal.
 *
 * @author mvw@tigris.org
 */ ActionAddContextSignal ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionAddContextSignal StatementExpression SuperConstructorInvocation MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model getAllBehavioralFeatures getModelManagementHelper addAll End ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MethodInvocation getTarget getContexts getFacade addAll ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-contexts"" localize MethodDeclaration Modifier protected doIt FormalParameter ReferenceType Collection selected StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference selected setContexts getCommonBehaviorHelper ReferenceType AbstractActionAddModelElement2",1
1608,1608,,0
1167,1167,,1
851,851,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for State->Outgoing States.
 *
 */ GoStateToDownstream MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.state.outgoing-states"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getOutgoingStates getStateMachinesHelper End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
493,493,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import java.beans.PropertyChangeEvent Import java.util.Collection Import java.util.Enumeration Import java.util.Iterator Import org.argouml.model.AddAssociationEvent Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * List model which implements allAvailableFeatures operation for a
 * ClassifierRole as described in the well formedness rules.
 * 
 * @since Oct 4, 2002
 * @author jaap.branderhorst@xs4all.nl
 * 
 */ UMLClassifierRoleAvailableFeaturesListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierRoleAvailableFeaturesListModel.
     */ UMLClassifierRoleAvailableFeaturesListModel StatementExpression SuperConstructorInvocation MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget allAvailableFeatures getCollaborationsHelper setAllElements MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AddAssociationEvent BlockStatement IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""base"" equals getPropertyName BinaryOperation == MethodInvocation e getSource MethodInvocation getTarget BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation MemberReference e getChangedElement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference clazz getFeatures getFacade addAll StatementExpression MethodInvocation Model MethodInvocation This MemberReference clazz Literal ""feature"" addModelEventListener getPump IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""feature"" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases MethodInvocation MethodInvocation e getSource contains getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference e getChangedElement addElement End End IfStatement BinaryOperation instanceof MemberReference e ReferenceType RemoveAssociationEvent BlockStatement IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""base"" equals getPropertyName BinaryOperation == MethodInvocation e getSource MethodInvocation getTarget BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation MemberReference e getChangedElement StatementExpression MethodInvocation Model MethodInvocation This MemberReference clazz Literal ""feature"" removeModelEventListener getPump IfStatement BinaryOperation && MethodInvocation e MethodInvocation Literal ""feature"" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases MethodInvocation MethodInvocation e getSource contains getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference e getChangedElement removeElement End End BlockStatement StatementExpression SuperMethodInvocation MemberReference e propertyChange End End MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object target IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation elements WhileStatement MethodInvocation enumeration hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation enumeration nextElement StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal ""feature"" removeModelEventListener getPump End StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getTarget Literal ""base"" removeModelEventListener getPump End StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target MemberReference target = IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isAModelElement getFacade ReturnStatement End StatementExpression MethodInvocation MemberReference target setListTarget IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation bases iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal ""feature"" addModelEventListener getPump End StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getTarget Literal ""base"" addModelEventListener getPump StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation Literal true setBuildingModel StatementExpression MethodInvocation buildModelList StatementExpression MethodInvocation Literal false setBuildingModel IfStatement BinaryOperation > MethodInvocation getSize Literal 0 BlockStatement StatementExpression MethodInvocation This Literal 0 BinaryOperation - MethodInvocation getSize Literal 1 fireIntervalAdded End End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement Literal false ReferenceType UMLModelElementListModel2",0
1109,1109,,1
1173,1173,,1
341,341,"CompilationUnit PackageDeclaration org.argouml.ui.explorer InterfaceDeclaration Modifier public /**
 * An interface to decouple Explorer event adaptors from interested models.
 *
 * @author  alexb
 * @since 0.15.2
 */ TreeModelUMLEventListener MethodDeclaration /**
     * @param element the modelelement that is changed
     */ modelElementChanged FormalParameter ReferenceType Object element MethodDeclaration /**
     * @param element the modelelement that is added
     */ modelElementAdded FormalParameter ReferenceType Object element MethodDeclaration /**
     * @param element the modelelement that is removed
     */ modelElementRemoved FormalParameter ReferenceType Object element MethodDeclaration /**
     * The structure of the model is changed in an undefined way
     * and needs to be rebuilt from scratch.
     */ structureChanged",1
1556,1556,,1
117,117,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Oct 5, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLAssociationEndRoleBaseListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationEndRoleBaseListModel.
     */ UMLAssociationEndRoleBaseListModel StatementExpression SuperConstructorInvocation Literal ""base"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null BinaryOperation != MethodInvocation Model MethodInvocation MethodInvocation getTarget getBase getFacade Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBase getFacade addElement End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object base IfStatement MethodInvocation ! Model MethodInvocation MemberReference base isAAssociationEnd getFacade BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator assocEndRole MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator assocRole MethodInvocation Model MethodInvocation MemberReference assocEndRole getAssociation getFacade ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference assocRole getBase getFacade getConnections MethodInvocation MemberReference base contains getFacade ReferenceType UMLModelElementListModel2",1
542,542,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import org.argouml.ui.explorer.WeakExplorerNode ClassDeclaration Modifier public /**
 * This class is a support class for The Navigation panel Go Rules.
 * Don't confuse it with anything to do with GEF nodes or the like.
 *
 * @author  alexb, d00mst
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ InheritanceNode FieldDeclaration /**
     * The parent.
     */ Modifier private ReferenceType Object VariableDeclarator parent ConstructorDeclaration Modifier public /**
     * Creates a new instance of AssociationsNode.
     *
     * @param p the parent
     */ InheritanceNode FormalParameter ReferenceType Object p StatementExpression Assignment MemberReference parent MemberReference p = MethodDeclaration /**
     * @return the parent node
     */ Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal ""Inheritance"" MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType InheritanceNode ReferenceType WeakExplorerNode",0
1368,1368,,0
642,642,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import javax.swing.tree.DefaultMutableTreeNode Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * Sorts by user object type,
 * diagrams first,
 * then packages,
 * then other types.
 *
 * sorts by name within type groups.
 *
 * @since 0.15.2, Created on 28 September 2003, 10:02
 *
 * @author  alexb
 */ TypeThenNameOrder ConstructorDeclaration Modifier public /** Creates a new instance of TypeThenNameOrder */ TypeThenNameOrder MethodDeclaration Modifier public Annotation Override BasicType int compare FormalParameter ReferenceType Object obj1 FormalParameter ReferenceType Object obj2 IfStatement BinaryOperation instanceof MemberReference obj1 ReferenceType DefaultMutableTreeNode BlockStatement LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Cast ReferenceType DefaultMutableTreeNode MemberReference obj1 StatementExpression Assignment MemberReference obj1 MethodInvocation node getUserObject = End IfStatement BinaryOperation instanceof MemberReference obj2 ReferenceType DefaultMutableTreeNode BlockStatement LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Cast ReferenceType DefaultMutableTreeNode MemberReference obj2 StatementExpression Assignment MemberReference obj2 MethodInvocation node getUserObject = End IfStatement BinaryOperation == MemberReference obj1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference obj2 Literal null ReturnStatement Literal 0 End ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference obj2 Literal null BlockStatement ReturnStatement Literal 1 End End LocalVariableDeclaration ReferenceType String VariableDeclarator typeName MethodInvocation obj1 MethodInvocation getName getClass LocalVariableDeclaration ReferenceType String VariableDeclarator typeName1 MethodInvocation obj2 MethodInvocation getName getClass LocalVariableDeclaration BasicType int VariableDeclarator typeNameOrder MethodInvocation typeName MemberReference typeName1 compareTo IfStatement BinaryOperation == MemberReference typeNameOrder Literal 0 ReturnStatement MethodInvocation MemberReference obj1 MemberReference obj2 compareUserObjects End IfStatement BinaryOperation && BinaryOperation == MethodInvocation typeName Literal ""Diagram"" indexOf Literal - 1 BinaryOperation != MethodInvocation typeName1 Literal ""Diagram"" indexOf Literal - 1 ReturnStatement Literal 1 End IfStatement BinaryOperation && BinaryOperation != MethodInvocation typeName Literal ""Diagram"" indexOf Literal - 1 BinaryOperation == MethodInvocation typeName1 Literal ""Diagram"" indexOf Literal - 1 ReturnStatement Literal - 1 End IfStatement BinaryOperation && BinaryOperation == MethodInvocation typeName Literal ""Package"" indexOf Literal - 1 BinaryOperation != MethodInvocation typeName1 Literal ""Package"" indexOf Literal - 1 ReturnStatement Literal 1 End IfStatement BinaryOperation && BinaryOperation != MethodInvocation typeName Literal ""Package"" indexOf Literal - 1 BinaryOperation == MethodInvocation typeName1 Literal ""Package"" indexOf Literal - 1 ReturnStatement Literal - 1 End ReturnStatement MemberReference typeNameOrder MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation Translator Literal ""combobox.order-by-type-name"" localize ReferenceType NameOrder",0
137,137,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.ArrayList Import java.util.List Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLRadioButtonPanel ClassDeclaration Modifier public /**
 * This panel contains radio buttons that represent the Changeability
 * of an asssociation-end.
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 4, 2003
 * 
 * TODO: For UML 2.x this needs to be changed to be just ReadOnly (frozen)
 * or not (changeable).
 */ UMLAssociationEndChangeabilityRadioButtonPanel FieldDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String VariableDeclarator labelTextsAndActionCommands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.changeability-addonly"" localize MemberReference ActionSetChangeability ADDONLY_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.changeability-changeable"" localize MemberReference ActionSetChangeability CHANGEABLE_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal ""label.changeability-frozen"" localize MemberReference ActionSetChangeability FROZEN_COMMAND add ConstructorDeclaration Modifier public /**
     * Constructor for UMLAssociationEndChangeabilityRadioButtonPanel.
     * @param title the title for the panel
     * @param horizontal determines the orientation
     */ UMLAssociationEndChangeabilityRadioButtonPanel FormalParameter ReferenceType String title FormalParameter BasicType boolean horizontal StatementExpression SuperConstructorInvocation MemberReference title MemberReference labelTextsAndActionCommands Literal ""changeability"" MethodInvocation ActionSetChangeability getInstance MemberReference horizontal MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getChangeability getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getChangeable getChangeableKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability CHANGEABLE_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getAddOnly getChangeableKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability ADDONLY_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getFrozen getChangeableKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability FROZEN_COMMAND setSelected BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability CHANGEABLE_COMMAND setSelected End End End End End ReferenceType UMLRadioButtonPanel",0
221,221,"CompilationUnit PackageDeclaration org.argouml.uml.reveng Import java.util.ArrayList Import java.util.List ClassDeclaration /**
 * Implementation of the {@link SettingsTypes.UniqueSelection}.
 * 
 * @see SettingsTypes.UniqueSelection
 * @author Bogdan Pistol
 */ SettingUniqueSelection FieldDeclaration /**
     * The list of String options
     */ Modifier private ReferenceType List VariableDeclarator options FieldDeclaration /**
     * Default selection is UNDEFINED
     */ Modifier private BasicType int VariableDeclarator defaultSelection MemberReference UNDEFINED_SELECTION FieldDeclaration /**
     * The selection is UNDEFINED
     */ Modifier private BasicType int VariableDeclarator selection MemberReference UNDEFINED_SELECTION ConstructorDeclaration /**
     * Constructor (package access)
     * 
     * @param label the user visible string to associate with this setting
     * @param variants
     *            the list of String options
     * @param defaultVariant
     *            the default selection or UNDEFINED_SELECTION
     */ SettingUniqueSelection FormalParameter ReferenceType String label FormalParameter ReferenceType List variants FormalParameter BasicType int defaultVariant StatementExpression SuperConstructorInvocation MemberReference label StatementExpression Assignment MemberReference options MemberReference variants = IfStatement MethodInvocation MemberReference defaultVariant isOption BlockStatement StatementExpression Assignment MemberReference defaultSelection MemberReference defaultVariant = End MethodDeclaration /**
     * Tests if this is a valid option.
     * 
     * @param opt
     *            the option to test
     * @return true if it's OK and false otherwise
     */ Modifier private BasicType boolean isOption FormalParameter BasicType int opt IfStatement BinaryOperation == MemberReference options Literal null BlockStatement ReturnStatement Literal false End ReturnStatement TernaryExpression BinaryOperation && BinaryOperation >= MemberReference opt Literal 0 BinaryOperation < MemberReference opt MethodInvocation options size Literal true Literal false MethodDeclaration Modifier public BasicType int getDefaultSelection ReturnStatement MemberReference defaultSelection MethodDeclaration /**
     * We return a new List with the options instead of the options themself
     * because we don't want the user to be able to change the options.
     * 
     * @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()
     */ Modifier public ReferenceType List getOptions ReturnStatement ClassCreator ReferenceType ArrayList MemberReference options MethodDeclaration Modifier public BasicType boolean setSelection FormalParameter BasicType int sel IfStatement MethodInvocation MemberReference sel isOption BlockStatement StatementExpression Assignment MemberReference selection MemberReference sel = ReturnStatement Literal true BlockStatement ReturnStatement Literal false End MethodDeclaration /**
     * This method (package access) determines the selected option.
     * 
     * @return the 0-based index of the selected option or the default option if
     *         no other option was selected
     */ BasicType int getSelection IfStatement BinaryOperation == MemberReference selection MemberReference UNDEFINED_SELECTION BlockStatement ReturnStatement MemberReference defaultSelection BlockStatement ReturnStatement MemberReference selection End ReferenceType Setting ReferenceType SettingsTypes ReferenceType UniqueSelection",1
1337,1337,,0
1174,1174,,1
1163,1163,,0
422,422,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.activity.ui Import org.argouml.model.Model Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * The Selection Buttons for a CallState. 
 * Almost the same as for an ActionState.
 * 
 * @author Michiel
 */ SelectionCallState ConstructorDeclaration Modifier public /**
     * @param f the fig that is selected
     */ SelectionCallState FormalParameter ReferenceType Fig f StatementExpression SuperConstructorInvocation MemberReference f MethodDeclaration Modifier protected ReferenceType Object getNewNodeType FormalParameter BasicType int buttonCode ReturnStatement MethodInvocation Model MethodInvocation getCallState getMetaTypes MethodDeclaration Modifier protected ReferenceType Object getNewNode FormalParameter BasicType int buttonCode ReturnStatement MethodInvocation Model MethodInvocation createCallState getActivityGraphsFactory ReferenceType SelectionActionState",0
567,567,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import java.awt.Graphics Import java.awt.Graphics2D Import java.awt.Image Import java.awt.Rectangle Import java.awt.Toolkit Import java.awt.datatransfer.Clipboard Import java.awt.datatransfer.ClipboardOwner Import java.awt.datatransfer.DataFlavor Import java.awt.datatransfer.Transferable Import java.awt.datatransfer.UnsupportedFlavorException Import java.awt.event.ActionEvent Import javax.swing.AbstractAction Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.uml.ui.SaveGraphicsManager Import org.tigris.gef.base.SaveGIFAction Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Layer ClassDeclaration Modifier public /**
 * This class copies a diagram to the system clipboard, this functionality will
 * only work with Java1.4, but it will compile with 1.3. It can be put into GEF
 * as it is rather generic.
 *
 * @see <a href=""http://java.sun.com/docs/books/tutorial/uiswing/misc/dnd.html"">
 *      Swing Drag and Drop </a>
 * @author alexb
 * @since argoUML version 0.15.2, Created on 19 October 2003, 08:36
 */ ActionSaveDiagramToClipboard ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionSaveDiagramToClipboard StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.copy-diagram-to-clip"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.copy"" lookupIcon MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent actionEvent LocalVariableDeclaration ReferenceType Image VariableDeclarator diagramGifImage MethodInvocation getImage IfStatement BinaryOperation == MemberReference diagramGifImage Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType Clipboard VariableDeclarator clipboard MethodInvocation Toolkit MethodInvocation getSystemClipboard getDefaultToolkit StatementExpression MethodInvocation clipboard ClassCreator ReferenceType ImageSelection MemberReference diagramGifImage This setContents MethodDeclaration /**
     * Get image from gef.
     *
     * @return An Image.
     */ Modifier private ReferenceType Image getImage LocalVariableDeclaration BasicType int VariableDeclarator scale MethodInvocation Configuration MemberReference SaveGraphicsManager KEY_GRAPHICS_RESOLUTION Literal 1 getInteger LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator drawingArea MethodInvocation ce MethodInvocation getActiveLayer MethodInvocation calcDrawingArea getLayerManager IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation < MemberReference drawingArea x Literal 0 BinaryOperation < MemberReference drawingArea y Literal 0 BinaryOperation <= MemberReference drawingArea width Literal 0 BinaryOperation <= MemberReference drawingArea height Literal 0 BlockStatement ReturnStatement Literal null End LocalVariableDeclaration BasicType boolean VariableDeclarator isGridHidden MethodInvocation ce getGridHidden StatementExpression MethodInvocation ce Literal true setGridHidden LocalVariableDeclaration ReferenceType Image VariableDeclarator diagramGifImage MethodInvocation ce BinaryOperation * MemberReference drawingArea width MemberReference scale BinaryOperation * MemberReference drawingArea height MemberReference scale createImage LocalVariableDeclaration ReferenceType Graphics VariableDeclarator g MethodInvocation diagramGifImage getGraphics IfStatement BinaryOperation instanceof MemberReference g ReferenceType Graphics2D BlockStatement StatementExpression Cast ReferenceType Graphics2D MemberReference g End StatementExpression MethodInvocation g ClassCreator ReferenceType Color MemberReference SaveGIFAction TRANSPARENT_BG_COLOR setColor StatementExpression MethodInvocation g Literal 0 Literal 0 BinaryOperation * MemberReference drawingArea width MemberReference scale BinaryOperation * MemberReference drawingArea height MemberReference scale fillRect StatementExpression MethodInvocation g MemberReference - drawingArea x MemberReference - drawingArea y translate StatementExpression MethodInvocation ce MemberReference g print StatementExpression MethodInvocation ce MemberReference isGridHidden setGridHidden ReturnStatement MemberReference diagramGifImage MethodDeclaration Modifier public lostOwnership FormalParameter ReferenceType Clipboard clipboard FormalParameter ReferenceType Transferable transferable MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference ce Literal null BinaryOperation == MethodInvocation ce getLayerManager Literal null BinaryOperation == MethodInvocation ce MethodInvocation getActiveLayer getLayerManager Literal null BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Layer VariableDeclarator layer MethodInvocation ce MethodInvocation getActiveLayer getLayerManager IfStatement BinaryOperation == MemberReference layer Literal null BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator drawingArea MethodInvocation layer calcDrawingArea IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation < MemberReference drawingArea x Literal 0 BinaryOperation < MemberReference drawingArea y Literal 0 BinaryOperation <= MemberReference drawingArea width Literal 0 BinaryOperation <= MemberReference drawingArea height Literal 0 BlockStatement ReturnStatement Literal false End ReturnStatement SuperMethodInvocation isEnabled FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 4916652432210626558L ReferenceType AbstractAction ReferenceType ClipboardOwner ClassDeclaration /**
 * Encapsulates an awt Image for Data Transfer to/from the clipboard.
 */ ImageSelection FieldDeclaration Modifier private ReferenceType DataFlavor VariableDeclarator supportedFlavors ArrayInitializer MemberReference DataFlavor imageFlavor FieldDeclaration Modifier private ReferenceType Image VariableDeclarator diagramImage ConstructorDeclaration Modifier public /**
     * Constructor.
     *
     * @param newDiagramImage The image.
     */ ImageSelection FormalParameter ReferenceType Image newDiagramImage StatementExpression Assignment MemberReference diagramImage MemberReference newDiagramImage = MethodDeclaration Modifier public synchronized ReferenceType DataFlavor getTransferDataFlavors ReturnStatement MemberReference supportedFlavors MethodDeclaration Modifier public BasicType boolean isDataFlavorSupported FormalParameter ReferenceType DataFlavor parFlavor ReturnStatement BinaryOperation && MethodInvocation parFlavor MethodInvocation MethodInvocation DataFlavor.imageFlavor getMimeType equals getMimeType MethodInvocation parFlavor MethodInvocation MethodInvocation DataFlavor.imageFlavor getHumanPresentableName equals getHumanPresentableName MethodDeclaration Modifier public synchronized ReferenceType Object getTransferData FormalParameter ReferenceType DataFlavor parFlavor UnsupportedFlavorException IfStatement MethodInvocation MemberReference parFlavor isDataFlavorSupported BlockStatement ReturnStatement MemberReference diagramImage End ThrowStatement ClassCreator ReferenceType UnsupportedFlavorException MemberReference DataFlavor imageFlavor ReferenceType Transferable",1
331,331,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.model.Model ClassDeclaration ActionVisibilityPackage FieldDeclaration /**
     * Serial version generated for rev 1.3
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 8048943592787710460L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param o the target
     */ ActionVisibilityPackage FormalParameter ReferenceType Object o StatementExpression SuperConstructorInvocation Literal ""checkbox.visibility.package-uc"" Literal false StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean MethodInvocation Model MethodInvocation getPackage MethodInvocation MethodInvocation MemberReference o valueOfTarget equals getVisibilityKind valueOf putValue MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation Model MethodInvocation getPackage getVisibilityKind setVisibility getCoreHelper MethodDeclaration /**
     * Make use of the default visibility, which is public...
     * TODO: centralise this knowledge.
     *
     * @see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#valueOfTarget(java.lang.Object)
     */ ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference t getVisibility getFacade ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null MethodInvocation Model MethodInvocation getPublic getVisibilityKind MemberReference v ReferenceType AbstractActionRadioMenuItem",0
1354,1354,,1
1348,1348,,0
889,889,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLTransitionStatemachineListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateVertexIncomingListModel.
     */ UMLTransitionStatemachineListModel StatementExpression SuperConstructorInvocation Literal ""statemachine"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getStateMachine getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getStateMachine getFacade MemberReference element ReferenceType UMLModelElementListModel2",0
320,320,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.Collection Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * The model for the list of raised signals of an operation.
 *
 * @author Michiel
 */ UMLOperationRaisedSignalsListModel ConstructorDeclaration Modifier public /**
     * The constructor.
     */ UMLOperationRaisedSignalsListModel StatementExpression SuperConstructorInvocation Literal ""signal"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator signals Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement StatementExpression Assignment MemberReference signals MethodInvocation Model MethodInvocation MemberReference target getRaisedSignals getFacade = End StatementExpression MethodInvocation MemberReference signals setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Collection VariableDeclarator signals Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement StatementExpression Assignment MemberReference signals MethodInvocation Model MethodInvocation MemberReference target getRaisedSignals getFacade = End ReturnStatement BinaryOperation && BinaryOperation != MemberReference signals Literal null MethodInvocation signals MemberReference element contains ReferenceType UMLModelElementListModel2",0
452,452,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLPlainTextDocument Import javax.swing.text.AttributeSet Import javax.swing.text.BadLocationException ClassDeclaration Modifier public /**
 * The Document/model for the bound of a synch state.
 *
 * @author pepargouml@yahoo.es
 */ UMLSynchStateBoundDocument FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1391739151659430935L ConstructorDeclaration Modifier public /**
     * Constructor for UMLSynchStateBoundDocument.
     */ UMLSynchStateBoundDocument StatementExpression SuperConstructorInvocation Literal ""bound"" MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement MethodInvocation text Literal """" equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal 0 setBound getStateMachinesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation Integer MethodInvocation intValue MemberReference text valueOf setBound getStateMachinesHelper End MethodDeclaration Modifier protected ReferenceType String getProperty LocalVariableDeclaration BasicType int VariableDeclarator bound MethodInvocation Model MethodInvocation MethodInvocation getTarget getBound getFacade IfStatement BinaryOperation <= MemberReference bound Literal 0 BlockStatement ReturnStatement Literal ""*"" BlockStatement ReturnStatement MethodInvocation String MemberReference bound valueOf End MethodDeclaration Modifier public insertString FormalParameter BasicType int offset FormalParameter ReferenceType String str FormalParameter ReferenceType AttributeSet a BadLocationException TryStatement StatementExpression MethodInvocation Integer MemberReference str parseInt StatementExpression SuperMethodInvocation MemberReference offset MemberReference str MemberReference a insertString CatchClause CatchClauseParameter NumberFormatException e ReferenceType UMLPlainTextDocument",1
1376,1376,,0
955,955,"CompilationUnit PackageDeclaration org.argouml.dev Import java.awt.BorderLayout Import java.awt.event.ActionEvent Import java.util.List Import javax.swing.AbstractAction Import javax.swing.JButton Import javax.swing.JPanel Import javax.swing.JScrollPane Import javax.swing.JTree Import javax.swing.tree.DefaultMutableTreeNode Import javax.swing.tree.TreeNode Import org.argouml.model.Model ClassDeclaration Modifier public final /**
 * The event pump inspector displays the contents of the event
 * pump. There is no event mechanism to refresh this panel. The
 * user must press the refresh button to see the latest state.
 * @author Bob Tarling
 */ EventPumpInspectorPanel FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7217414480003857977L FieldDeclaration /**
     * The instance.
     */ Modifier private final static ReferenceType EventPumpInspectorPanel VariableDeclarator INSTANCE ClassCreator ReferenceType EventPumpInspectorPanel MethodDeclaration /**
     * @return The instance.
     */ Modifier public static ReferenceType EventPumpInspectorPanel getInstance ReturnStatement MemberReference INSTANCE FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator scroller ConstructorDeclaration Modifier private /**
     * Constructor.
     */ EventPumpInspectorPanel StatementExpression MethodInvocation ClassCreator ReferenceType BorderLayout setLayout StatementExpression This MethodInvocation ClassCreator ReferenceType JButton ClassCreator ReferenceType RefreshAction MemberReference BorderLayout NORTH add ClassDeclaration Modifier private RefreshAction FieldDeclaration /**
         * UID
         */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 2527310696451597274L ConstructorDeclaration RefreshAction StatementExpression SuperConstructorInvocation Literal ""Refresh"" MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType JTree VariableDeclarator tree ClassCreator ReferenceType JTree MethodInvocation getTree StatementExpression MethodInvocation tree Literal 0 expandRow IfStatement BinaryOperation != MemberReference scroller Literal null BlockStatement StatementExpression MethodInvocation MemberReference scroller remove End StatementExpression Assignment MemberReference scroller ClassCreator ReferenceType JScrollPane MemberReference tree = StatementExpression MethodInvocation MemberReference scroller add StatementExpression MethodInvocation invalidate StatementExpression MethodInvocation validate ReferenceType AbstractAction MethodDeclaration /**
     * Getter provided for the dev module. This supplies a tree
     * model of registered listeners.
     * @return a root tree node
     */ ReferenceType TreeNode getTree LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator root ClassCreator ReferenceType DefaultMutableTreeNode Literal ""Event Pump Debug Info"" StatementExpression MethodInvocation MemberReference root MethodInvocation Model MethodInvocation getDebugInfo getPump addSubtree ReturnStatement MemberReference root MethodDeclaration Modifier private addSubtree FormalParameter ReferenceType DefaultMutableTreeNode root FormalParameter ReferenceType List list LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference list BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType String BlockStatement StatementExpression Assignment MemberReference node ClassCreator ReferenceType DefaultMutableTreeNode MemberReference o = StatementExpression MethodInvocation root MemberReference node add IfStatement BinaryOperation instanceof MemberReference o ReferenceType List BlockStatement IfStatement BinaryOperation == MemberReference node Literal null BlockStatement StatementExpression Assignment MemberReference node ClassCreator ReferenceType DefaultMutableTreeNode = End StatementExpression MethodInvocation MemberReference node Cast ReferenceType List MemberReference o addSubtree BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal ""Unexpected object"" End End End ReferenceType JPanel",0
559,559,"CompilationUnit PackageDeclaration org.argouml.swingext Import java.awt.Color Import java.awt.Component Import java.awt.Graphics Import java.awt.Polygon Import javax.swing.Icon ClassDeclaration Modifier public /**
 * Class defining a graphic that goes on the tab label.
 */ LeftArrowIcon MethodDeclaration Modifier public paintIcon FormalParameter ReferenceType Component c FormalParameter ReferenceType Graphics g FormalParameter BasicType int x FormalParameter BasicType int y LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation getIconWidth VariableDeclarator h MethodInvocation getIconHeight StatementExpression MethodInvocation g MemberReference Color black setColor LocalVariableDeclaration ReferenceType Polygon VariableDeclarator p ClassCreator ReferenceType Polygon StatementExpression MethodInvocation p BinaryOperation + MemberReference x Literal 1 BinaryOperation + BinaryOperation + MemberReference y BinaryOperation / MemberReference h Literal 2 Literal 1 addPoint StatementExpression MethodInvocation p BinaryOperation + MemberReference x MemberReference w MemberReference y addPoint StatementExpression MethodInvocation p BinaryOperation + MemberReference x MemberReference w BinaryOperation + MemberReference y MemberReference h addPoint StatementExpression MethodInvocation g MemberReference p fillPolygon MethodDeclaration Modifier public BasicType int getIconWidth ReturnStatement Literal 9 MethodDeclaration Modifier public BasicType int getIconHeight ReturnStatement Literal 9 ReferenceType Icon",0
749,749,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import org.tigris.gef.presentation.ArrowHeadTriangle ClassDeclaration Modifier public /**
 * Fig representing a UML Abstraction.
 * <p>
 * Implementation was copied here from FigRealization and parent type changed
 * from FigEdgeModelElement to FigDependency to align better with UML spec and
 * to allow reuse for other abstractions such as Derivation, Refinement, or
 * Trace. FigRealization is just a shell for backward compatibility.
 * <p>
 * Graphical representation is a dashed line and a triangle arrow-head.
 * 
 * @author agauthie
 */ FigAbstraction FieldDeclaration Modifier private ReferenceType ArrowHeadTriangle VariableDeclarator endArrow ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ FigAbstraction StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference endArrow ClassCreator ReferenceType ArrowHeadTriangle = StatementExpression MethodInvocation endArrow MemberReference Color white setFillColor StatementExpression MethodInvocation MemberReference endArrow setDestArrowHead ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param edge the owning UML element
     */ FigAbstraction FormalParameter ReferenceType Object edge StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference edge setOwner ReferenceType FigDependency",0
1589,1589,,0
572,572,"CompilationUnit PackageDeclaration org.argouml.model Import java.io.OutputStream Import java.io.Writer InterfaceDeclaration Modifier public /**
 * The interface that the ModelImplementation must implement. This is the
 * class finding all helpers and factories.
 */ ModelImplementation MethodDeclaration /**
     * Get the facade.
     *
     * @return The facade object.
     */ ReferenceType Facade getFacade MethodDeclaration /**
     * Get the diagram interchange model.
     *
     * @return the diagram interchange model.
     */ ReferenceType DiagramInterchangeModel getDiagramInterchangeModel MethodDeclaration /**
     * Get the event pump.
     *
     * @return the current ModelEventPump.
     */ ReferenceType ModelEventPump getModelEventPump MethodDeclaration /**
     * Getter for ActivityGraphsFactory.
     *
     * @return the factory
     */ ReferenceType ActivityGraphsFactory getActivityGraphsFactory MethodDeclaration /**
     * Getter for the ActivityGraphsHelper.
     *
     * @return the instance of the helper
     */ ReferenceType ActivityGraphsHelper getActivityGraphsHelper MethodDeclaration /**
     * Getter for CollaborationsFactory.
     *
     * @return the factory
     */ ReferenceType CollaborationsFactory getCollaborationsFactory MethodDeclaration /**
     * Getter for CollaborationsHelper.
     *
     * @return the helper
     */ ReferenceType CollaborationsHelper getCollaborationsHelper MethodDeclaration /**
     * Getter for CommonBehaviorFactory.
     *
     * @return the factory
     */ ReferenceType CommonBehaviorFactory getCommonBehaviorFactory MethodDeclaration /**
     * Getter for CommonBehaviorHelper.
     *
     * @return the helper
     */ ReferenceType CommonBehaviorHelper getCommonBehaviorHelper MethodDeclaration /**
     * Getter for CoreFactory.
     *
     * @return the factory
     */ ReferenceType CoreFactory getCoreFactory MethodDeclaration /**
     * Getter for CoreHelper.
     *
     * @return The helper.
     */ ReferenceType CoreHelper getCoreHelper MethodDeclaration /**
     * Getter for DataTypesFactory.
     *
     * @return the factory
     */ ReferenceType DataTypesFactory getDataTypesFactory MethodDeclaration /**
     * Getter for DataTypesHelper.
     *
     * @return the helper.
     */ ReferenceType DataTypesHelper getDataTypesHelper MethodDeclaration /**
     * Getter for ExtensionMechanismsFactory.
     *
     * @return the factory instance.
     */ ReferenceType ExtensionMechanismsFactory getExtensionMechanismsFactory MethodDeclaration /**
     * Getter for ExtensionMechanismsHelper.
     *
     * @return the helper
     */ ReferenceType ExtensionMechanismsHelper getExtensionMechanismsHelper MethodDeclaration /**
     * Getter for ModelManagementFactory.
     *
     * @return the factory
     */ ReferenceType ModelManagementFactory getModelManagementFactory MethodDeclaration /**
     * Getter for ModelManagementHelper.
     *
     * @return The model management helper.
     */ ReferenceType ModelManagementHelper getModelManagementHelper MethodDeclaration /**
     * Getter for StateMachinesFactory.
     *
     * @return the factory
     */ ReferenceType StateMachinesFactory getStateMachinesFactory MethodDeclaration /**
     * Getter for StateMachinesHelper.
     *
     * @return the helper
     */ ReferenceType StateMachinesHelper getStateMachinesHelper MethodDeclaration /**
     * Getter for UmlFactory.
     *
     * @return the factory
     */ ReferenceType UmlFactory getUmlFactory MethodDeclaration /**
     * Getter for UmlHelper.
     *
     * @return the helper
     */ ReferenceType UmlHelper getUmlHelper MethodDeclaration /**
     * Getter for UseCasesFactory.
     *
     * @return the factory
     */ ReferenceType UseCasesFactory getUseCasesFactory MethodDeclaration /**
     * Getter for UseCasesHelper.
     *
     * @return the helper
     */ ReferenceType UseCasesHelper getUseCasesHelper MethodDeclaration /**
     * Getter for the MetaTypes object.
     *
     * @return the MetaTypes object.
     */ ReferenceType MetaTypes getMetaTypes MethodDeclaration /**
     * Getter for the ChangeableKind object.
     *
     * @return The object implementing the interface.
     * @deprecated for 0.25.4 by tfmorris.  Use 
     * {@link Facade#isReadOnly(Object)}.
     */ Annotation Deprecated ReferenceType ChangeableKind getChangeableKind MethodDeclaration /**
     * Getter for the AggregationKind object.
     *
     * @return The object implementing the interface.
     */ ReferenceType AggregationKind getAggregationKind MethodDeclaration /**
     * Getter for the PseudostateKind object.
     *
     * @return The object implementing the interface.
     */ ReferenceType PseudostateKind getPseudostateKind MethodDeclaration /**
     * Getter for the ScopeKind object.
     * 
     * @return The object implementing the interface.
     * @deprecated for 0.25.4 by tfmorris. Use 
     * {@link Facade#isStatic(Object)}.
     */ Annotation Deprecated ReferenceType ScopeKind getScopeKind MethodDeclaration /**
     * Getter for the ConcurrencyKind object.
     *
     * @return The object implementing the interface.
     */ ReferenceType ConcurrencyKind getConcurrencyKind MethodDeclaration /**
     * Getter for the DirectionKind object.
     *
     * @return The object implementing the interface.
     */ ReferenceType DirectionKind getDirectionKind MethodDeclaration /**
     * Getter for the OrderingKind object.
     *
     * @return The object implementing the interface.
     */ ReferenceType OrderingKind getOrderingKind MethodDeclaration /**
     * Getter for the VisibilityKind object.
     *
     * @return The object implementing the interface.
     */ ReferenceType VisibilityKind getVisibilityKind MethodDeclaration /**
     * A factory method that creates a new instance of an XmiReader on each
     * call.
     *
     * @return the object implementing the XmiReader interface
     * @throws UmlException on any error while reading
     */ ReferenceType XmiReader getXmiReader UmlException MethodDeclaration /**
     * A factory method that creates a new instance of an XmiWriter on each
     * call.
     * 
     * @param model
     *            the project member model
     * @param writer
     *            the writer
     * @param version
     *            the version of ArgoUML
     * @return the object implementing the XmiWriter interface
     * @throws UmlException
     *             on any error while writing
     * @deprecated for 0.25.4 by tfmorris. Use
     *             {@link #getXmiWriter(Object, OutputStream, String)}
     */ Annotation Deprecated ReferenceType XmiWriter getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType Writer writer FormalParameter ReferenceType String version UmlException MethodDeclaration /**
     * A factory method that creates a new instance of an XmiWriter on each
     * call.
     * 
     * @param model
     *            the project member model
     * @param stream the output stream to write to
     * @param version
     *            the version of ArgoUML which may be written to the output
     *            to help identify who wrote it
     * @return the object implementing the XmiWriter interface
     * @throws UmlException
     *             on any error while writing
     */ ReferenceType XmiWriter getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType OutputStream stream FormalParameter ReferenceType String version UmlException MethodDeclaration /**
     * Get the copy helper.
     *
     * @return the CopyHelper
     */ ReferenceType CopyHelper getCopyHelper MethodDeclaration /**
     * Get the command stack.
     * 
     * @return the command stack
     * @deprecated - do not use. This will be replaced by a command stack
     *             managed by ArgoUML, not the Model subsystem.
     */ Annotation Deprecated ReferenceType CommandStack getCommandStack",0
256,256,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * UML 1.5 Well-formedness rule [5] for Transition.
 *
 * @author pepargouml@yahoo.es
 */ CrInvalidPseudoStateTrigger ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrInvalidPseudoStateTrigger StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""trigger"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator tr MemberReference dm LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference tr getTrigger getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MethodInvocation Model MethodInvocation MemberReference tr getSource getFacade IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getFork getPseudostateKind equalsPseudostateKind getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration BasicType boolean VariableDeclarator hasTrigger BinaryOperation && BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference t getName getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference t getName MethodInvocation length getFacade Literal 0 IfStatement MemberReference hasTrigger ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",1
614,614,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.extension_mechanisms Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * @since Oct 10, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLTagDefinitionOwnerComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLModelElementStereotypeComboBoxModel.
     */ UMLTagDefinitionOwnerComboBoxModel StatementExpression SuperConstructorInvocation Literal ""owner"" Literal true StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal ""ownedElement"" addClassModelEventListener getPump MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MemberReference o isAStereotype getFacade MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getStereotype getMetaTypes getAllModelElementsOfKindWithModel getModelManagementHelper setElements MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget isATagDefinition getFacade BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation Model MethodInvocation MethodInvocation getTarget getOwner getFacade = End ReturnStatement MemberReference owner ReferenceType UMLComboBoxModel2",0
1567,1567,,0
441,441,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.extension_mechanisms Import java.awt.AWTEvent Import java.awt.event.ActionEvent Import javax.swing.Box Import javax.swing.BoxLayout Import javax.swing.JComponent Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLComboBox2 Import org.argouml.uml.ui.UMLComboBoxModel2 Import org.argouml.uml.ui.UMLComboBoxNavigator Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.foundation.core.PropPanelModelElement Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * The properties panel for a TaggedValue. <p>
 *
 * TODO: Complete this panel.
 * See issue 2906.
 * And buttons for navigate up, new taggedValue, delete.
 *
 * @author michiel
 */ PropPanelTaggedValue FieldDeclaration Modifier private ReferenceType JComponent VariableDeclarator modelElementSelector FieldDeclaration Modifier private ReferenceType JComponent VariableDeclarator typeSelector FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator referenceValuesScroll FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator dataValuesScroll ConstructorDeclaration Modifier public /**
     * The constructor.
     */ PropPanelTaggedValue StatementExpression SuperConstructorInvocation Literal ""label.tagged-value"" MethodInvocation Literal ""TaggedValue"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.modelelement"" localize MethodInvocation getModelElementSelector addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.type"" localize MethodInvocation getTypeSelector addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.reference-values"" localize MethodInvocation getReferenceValuesScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.data-values"" localize MethodInvocation getDataValuesScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewTagDefinition addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration Modifier protected ReferenceType JScrollPane getReferenceValuesScroll IfStatement BinaryOperation == MemberReference referenceValuesScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLReferenceValueListModel StatementExpression Assignment MemberReference referenceValuesScroll ClassCreator ReferenceType JScrollPane MemberReference list = End ReturnStatement MemberReference referenceValuesScroll MethodDeclaration Modifier protected ReferenceType JScrollPane getDataValuesScroll IfStatement BinaryOperation == MemberReference dataValuesScroll Literal null BlockStatement LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLDataValueListModel StatementExpression Assignment MemberReference dataValuesScroll ClassCreator ReferenceType JScrollPane MemberReference list = End ReturnStatement MemberReference dataValuesScroll MethodDeclaration /**
     * Returns the modelelement selector.
     * This is a component which allows the
     * user to select a single item as the modelelement.
     *
     * @return the modelelement selecter
     */ Modifier protected ReferenceType JComponent getModelElementSelector IfStatement BinaryOperation == MemberReference modelElementSelector Literal null BlockStatement StatementExpression Assignment MemberReference modelElementSelector ClassCreator ReferenceType Box MemberReference BoxLayout X_AXIS = StatementExpression MethodInvocation modelElementSelector ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator Literal ""label.modelelement.navigate.tooltip"" localize ClassCreator ReferenceType UMLComboBox2 ClassCreator ReferenceType UMLTaggedValueModelElementComboBoxModel ClassCreator ReferenceType ActionSetTaggedValueModelElement add End ReturnStatement MemberReference modelElementSelector MethodDeclaration /**
     * Returns the type selector.
     * This is a component which allows the
     * user to select a single taggedValue as the type.
     *
     * @return the modelelement selecter
     */ Modifier protected ReferenceType JComponent getTypeSelector IfStatement BinaryOperation == MemberReference typeSelector Literal null BlockStatement StatementExpression Assignment MemberReference typeSelector ClassCreator ReferenceType Box MemberReference BoxLayout X_AXIS = StatementExpression MethodInvocation typeSelector ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator Literal ""label.type.navigate.tooltip"" localize ClassCreator ReferenceType UMLComboBox2 ClassCreator ReferenceType UMLTaggedValueTypeComboBoxModel ClassCreator ReferenceType ActionSetTaggedValueType add End ReturnStatement MemberReference typeSelector ClassDeclaration Modifier static ActionSetTaggedValueModelElement ConstructorDeclaration Modifier public /**
         * Construct this action.
         */ ActionSetTaggedValueModelElement StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BinaryOperation == MethodInvocation e getModifiers MemberReference AWTEvent MOUSE_EVENT_MASK BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator combo Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation combo getSelectedItem LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator taggedValue MethodInvocation combo getTarget IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference taggedValue isATaggedValue getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldME MethodInvocation Model MethodInvocation MemberReference taggedValue getModelElement getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference oldME MemberReference taggedValue removeTaggedValue getExtensionMechanismsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference o MemberReference taggedValue addTaggedValue getExtensionMechanismsHelper End End ReferenceType UndoableAction ClassDeclaration Modifier static UMLTaggedValueModelElementComboBoxModel ConstructorDeclaration Modifier public /**
         * Constructor.
         */ UMLTaggedValueModelElementComboBoxModel StatementExpression SuperConstructorInvocation Literal ""modelelement"" Literal true MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getModelElement getMetaTypes getAllModelElementsOfKindWithModel getModelManagementHelper setElements MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator me Literal null IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget isATaggedValue getFacade BlockStatement StatementExpression Assignment MemberReference me MethodInvocation Model MethodInvocation MethodInvocation getTarget getModelElement getFacade = End ReturnStatement MemberReference me MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade ReferenceType UMLComboBoxModel2 ClassDeclaration Modifier static ActionSetTaggedValueType ConstructorDeclaration Modifier public /**
         * Construct this action.
         */ ActionSetTaggedValueType StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BinaryOperation == MethodInvocation e getModifiers MemberReference AWTEvent MOUSE_EVENT_MASK BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator combo Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation combo getSelectedItem LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator taggedValue MethodInvocation combo getTarget IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference taggedValue isATaggedValue getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference taggedValue MemberReference o setType getExtensionMechanismsHelper End End ReferenceType UndoableAction ClassDeclaration Modifier static UMLTaggedValueTypeComboBoxModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLModelElementStereotypeComboBoxModel.
         */ UMLTaggedValueTypeComboBoxModel StatementExpression SuperConstructorInvocation Literal ""type"" Literal true MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getTagDefinition getMetaTypes getAllModelElementsOfKindWithModel getModelManagementHelper setElements MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator me Literal null IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget isATaggedValue getFacade BlockStatement StatementExpression Assignment MemberReference me MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade = End ReturnStatement MemberReference me MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isATagDefinition getFacade ReferenceType UMLComboBoxModel2 ClassDeclaration Modifier static UMLReferenceValueListModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLExtendedElementsListModel.
         */ UMLReferenceValueListModel StatementExpression SuperConstructorInvocation Literal ""referenceValue"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getReferenceValue getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getReferenceValue MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2 ClassDeclaration Modifier static UMLDataValueListModel ConstructorDeclaration Modifier public /**
         * Constructor for UMLExtendedElementsListModel.
         */ UMLDataValueListModel StatementExpression SuperConstructorInvocation Literal ""dataValue"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getDataValue getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getDataValue MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2 ReferenceType PropPanelModelElement",0
503,503,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl
 * @since Jan 3, 2003
 */ PropPanelUMLCollaborationDiagram ConstructorDeclaration Modifier public /**
     * Constructor for PropPanelUMLCollaborationDiagram.
     */ PropPanelUMLCollaborationDiagram StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""label.collaboration-diagram"" localize MethodInvocation Literal ""CollaborationDiagram"" lookupIcon ReferenceType PropPanelDiagram",1
276,276,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.util.Collection Import java.util.Collections Import java.util.Iterator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * This class provides a text field that can be used to display
 * the text of all Comments associated with an annotated ModelElement.
 *
 * TODO: This could use more work.  Currently it returns all
 * Comment.name or Comment.body attributes concatenated together
 * into a single read-only document.
 *
 * @since 1 Nov 2005
 * @author Tom Morris (tfmorris@gmail.com)
 */ UMLModelElementCommentDocument FieldDeclaration Modifier private BasicType boolean VariableDeclarator useBody ConstructorDeclaration Modifier public /**
     * Creates a UMLPlainTextDocument object that represents the text of a
     * Comment associated with a ModelElement
     *
     * @param useBody
     *            use the UML 1.4 body attribute instead of the UML 1.3 name
     *            attribute
     */ UMLModelElementCommentDocument FormalParameter BasicType boolean useBody StatementExpression SuperConstructorInvocation Literal ""comment"" StatementExpression Assignment This MemberReference useBody MemberReference useBody = MethodDeclaration /**
     * Add a Comment with the given string
     *
     * TODO: Currently a no-op, doc is read only
     *
     * @param text the property
     */ Modifier protected setProperty FormalParameter ReferenceType String text MethodDeclaration /**
     * Get the text of all comments annotating this Model Element
     *
     * @return the text of all comments
     */ Modifier protected ReferenceType String getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Collection VariableDeclarator comments MemberReference Collections EMPTY_LIST IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference comments MethodInvocation Model MethodInvocation MethodInvocation getTarget getComments getFacade = End ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation comments iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator s IfStatement MemberReference useBody BlockStatement StatementExpression Assignment MemberReference s Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference c getBody getFacade = BlockStatement StatementExpression Assignment MemberReference s MethodInvocation Model MethodInvocation MemberReference c getName getFacade = End IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s Literal """" = End StatementExpression MethodInvocation sb MemberReference s append StatementExpression MethodInvocation sb Literal "" // "" append End IfStatement BinaryOperation > MethodInvocation sb length Literal 4 BlockStatement ReturnStatement MethodInvocation sb MethodInvocation toString Literal 0 BinaryOperation - MethodInvocation sb length Literal 4 substring BlockStatement ReturnStatement Literal """" End ReferenceType UMLPlainTextDocument",0
1141,1141,,0
1011,1011,,1
710,710,"CompilationUnit PackageDeclaration org.argouml.util ClassDeclaration Modifier public /**
 * Utility class to store file extensions frequently used across ArgoUML. <p>
 * These extensions are only to be used to distinguish between parts
 * (i.e. the contents) of a project file,
 * and NOT for filnamens for loading and saving projects.
 * Filename extensions are handled by the Persisters themselves.
 * See AbstractFilePersister.
 *
 * @stereotype utility
 */ FileConstants FieldDeclaration /**
     * The extension for .zargo files is COMPRESSED_FILE_EXT.
     */ Modifier public final static ReferenceType String VariableDeclarator COMPRESSED_FILE_EXT Literal "".zargo"" FieldDeclaration /**
     * The extension for .argo files is UNCOMPRESSED_FILE_EXT.
     */ Modifier public final static ReferenceType String VariableDeclarator UNCOMPRESSED_FILE_EXT Literal "".argo"" FieldDeclaration /**
     * The extension for .argo files is PROJECT_FILE_EXT.
     */ Modifier public final static ReferenceType String VariableDeclarator PROJECT_FILE_EXT Literal "".argo""",0
754,754,"CompilationUnit PackageDeclaration org.argouml.notation.providers.uml Import java.text.ParseException Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import java.util.Map Import java.util.NoSuchElementException Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoHelpEvent Import org.argouml.i18n.Translator Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.kernel.ProjectSettings Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.argouml.notation.providers.OperationNotation Import org.argouml.uml.StereotypeUtility Import org.argouml.util.MyTokenizer ClassDeclaration Modifier public /**
 * The UML notation for an Operation or a Reception.
 * 
 * @author mvw@tigris.org
 */ OperationNotationUml FieldDeclaration Modifier private final static ReferenceType String VariableDeclarator RECEPTION_KEYWORD Literal ""signal"" ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param operation the operation that is represented
     */ OperationNotationUml FormalParameter ReferenceType Object operation StatementExpression SuperConstructorInvocation MemberReference operation MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getOwner getFacade MemberReference modelElement MemberReference text parseOperationFig CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""statusmsg.bar.error.parsing.operation"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args messageFormat fireEvent MethodDeclaration /**
     * Parse a string representing one ore more ';' separated operations. The
     * case that a String or char contains a ';' (e.g. in an initializer) is
     * handled, but not other occurences of ';'.
     *
     * @param classifier  Classifier The classifier the operation(s) belong to
     * @param operation   Operation The operation on which the editing happened
     * @param text The string to parse
     * @throws ParseException for invalid input
     */ Modifier public parseOperationFig FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object operation FormalParameter ReferenceType String text ParseException IfStatement BinaryOperation || BinaryOperation == MemberReference classifier Literal null BinaryOperation == MemberReference operation Literal null BlockStatement ReturnStatement End LocalVariableDeclaration ReferenceType ParseException VariableDeclarator pex Literal null LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation NotationUtilityUml MemberReference text MemberReference start indexOfNextCheckedSemicolon LocalVariableDeclaration ReferenceType Project VariableDeclarator currentProject MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MemberReference end Literal - 1 BlockStatement StatementExpression MethodInvocation currentProject MemberReference operation moveToTrash ReturnStatement End LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation text MethodInvocation trim MemberReference start MemberReference end substring IfStatement BinaryOperation == MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation currentProject MemberReference operation moveToTrash ReturnStatement End StatementExpression MethodInvocation MemberReference s MemberReference operation parseOperation LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference classifier getFeatures MethodInvocation MemberReference operation indexOf getFacade StatementExpression Assignment MemberReference start BinaryOperation + MemberReference end Literal 1 = StatementExpression Assignment MemberReference end MethodInvocation NotationUtilityUml MemberReference text MemberReference start indexOfNextCheckedSemicolon = WhileStatement BinaryOperation && BinaryOperation > MemberReference end MemberReference start BinaryOperation <= MemberReference end MethodInvocation text length BlockStatement StatementExpression Assignment MemberReference s MethodInvocation text MethodInvocation trim MemberReference start MemberReference end substring = IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation currentProject getDefaultReturnType LocalVariableDeclaration ReferenceType Object VariableDeclarator newOp MethodInvocation Model MethodInvocation MemberReference classifier MemberReference returnType buildOperation getCoreFactory IfStatement BinaryOperation != MemberReference newOp Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference s MemberReference newOp parseOperation IfStatement BinaryOperation != MemberReference i Literal - 1 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference classifier MemberReference ++ i MemberReference newOp addFeature getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference classifier MemberReference newOp addFeature getCoreHelper End CatchClause CatchClauseParameter ParseException ex IfStatement BinaryOperation == MemberReference pex Literal null BlockStatement StatementExpression Assignment MemberReference pex MemberReference ex = End End End StatementExpression Assignment MemberReference start BinaryOperation + MemberReference end Literal 1 = StatementExpression Assignment MemberReference end MethodInvocation NotationUtilityUml MemberReference text MemberReference start indexOfNextCheckedSemicolon = End IfStatement BinaryOperation != MemberReference pex Literal null BlockStatement ThrowStatement MemberReference pex End MethodDeclaration /**
     * Parse a line of text and aligns the Operation to the specification
     * given. The line should be on the following form:<ul>
     * <li> visibility name (parameter list) : return-type-expression
     * {property-string}
     * </ul>
     *
     * All elements are optional and, if left unspecified, will preserve their
     * old values.<p>
     *
     * <em>Stereotypes</em> can be given between any element in the line on the
     * form: &lt;&lt;stereotype1,stereotype2,stereotype3&gt;&gt;<p>
     *
     * The following properties are recognized to have special meaning:
     * abstract, concurrency, concurrent, guarded, leaf, query, root and
     * sequential.<p>
     *
     * This syntax is compatible with the UML 1.3 spec.<p>
     *
     * (formerly visibility name (parameter list) : return-type-expression
     * {property-string} ) (formerly 2nd: [visibility] [keywords] returntype
     * name(params)[;] )
     *
     * @param s   The String to parse.
     * @param op  The Operation to adjust to the specification in s.
     * @throws ParseException
     *             when it detects an error in the attribute string. See also
     *             ParseError.getErrorOffset().
     */ Modifier public parseOperation FormalParameter ReferenceType String s FormalParameter ReferenceType Object op ParseException LocalVariableDeclaration ReferenceType MyTokenizer VariableDeclarator st LocalVariableDeclaration BasicType boolean VariableDeclarator hasColon Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator parameterlist Literal null LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator stereotype Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator token LocalVariableDeclaration ReferenceType String VariableDeclarator type Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator visibility Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator properties Literal null LocalVariableDeclaration BasicType int VariableDeclarator paramOffset Literal 0 StatementExpression Assignment MemberReference s MethodInvocation s trim = IfStatement BinaryOperation && BinaryOperation > MethodInvocation s length Literal 0 BinaryOperation >= MethodInvocation NotationUtilityUml.VISIBILITYCHARS MethodInvocation s Literal 0 charAt indexOf Literal 0 BlockStatement StatementExpression Assignment MemberReference visibility MethodInvocation s Literal 0 Literal 1 substring = StatementExpression Assignment MemberReference s MethodInvocation s Literal 1 substring = End TryStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType MyTokenizer MemberReference s Literal "" ,\t,<<,«,»,>>,:,=,{,},\\,"" MemberReference NotationUtilityUml operationCustomSep = WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || BinaryOperation || Literal MethodInvocation MemberReference token equals "" "" Literal MethodInvocation MemberReference token equals ""\t"" Literal MethodInvocation MemberReference token equals "","" BlockStatement ContinueStatement IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals ""<<"" Literal MethodInvocation MemberReference token equals ""«"" BlockStatement IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement StatementExpression MethodInvocation Literal ""operation.stereotypes"" MethodInvocation st getTokenIndex parseError End StatementExpression Assignment MemberReference stereotype ClassCreator ReferenceType StringBuilder = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "">>"" Literal MethodInvocation MemberReference token equals ""»"" BlockStatement BreakStatement End StatementExpression MethodInvocation stereotype MemberReference token append End IfStatement Literal MethodInvocation MemberReference token equals ""{"" BlockStatement StatementExpression Assignment MemberReference properties MethodInvocation MemberReference st MemberReference properties tokenOpenBrace = IfStatement Literal MethodInvocation MemberReference token equals "":"" BlockStatement StatementExpression Assignment MemberReference hasColon Literal true = IfStatement Literal MethodInvocation MemberReference token equals ""="" BlockStatement StatementExpression MethodInvocation Literal ""operation.default-values"" MethodInvocation st getTokenIndex parseError IfStatement BinaryOperation && BinaryOperation == MethodInvocation token Literal 0 charAt Literal '(' MemberReference ! hasColon BlockStatement IfStatement BinaryOperation != MemberReference parameterlist Literal null BlockStatement StatementExpression MethodInvocation Literal ""operation.two-parameter-lists"" MethodInvocation st getTokenIndex parseError End StatementExpression Assignment MemberReference parameterlist MemberReference token = BlockStatement IfStatement MemberReference hasColon BlockStatement IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation Literal ""operation.two-types"" MethodInvocation st getTokenIndex parseError End IfStatement BinaryOperation && BinaryOperation > MethodInvocation token length Literal 0 BinaryOperation || BinaryOperation == MethodInvocation token Literal 0 charAt Literal '\""' BinaryOperation == MethodInvocation token Literal 0 charAt Literal '\'' BlockStatement StatementExpression MethodInvocation Literal ""operation.type-quoted"" MethodInvocation st getTokenIndex parseError End IfStatement BinaryOperation && BinaryOperation > MethodInvocation token length Literal 0 BinaryOperation == MethodInvocation token Literal 0 charAt Literal '(' BlockStatement StatementExpression MethodInvocation Literal ""operation.type-expr"" MethodInvocation st getTokenIndex parseError End StatementExpression Assignment MemberReference type MemberReference token = BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation Literal ""operation.extra-text"" MethodInvocation st getTokenIndex parseError End IfStatement BinaryOperation && BinaryOperation > MethodInvocation token length Literal 0 BinaryOperation || BinaryOperation == MethodInvocation token Literal 0 charAt Literal '\""' BinaryOperation == MethodInvocation token Literal 0 charAt Literal '\'' BlockStatement StatementExpression MethodInvocation Literal ""operation.name-quoted"" MethodInvocation st getTokenIndex parseError End IfStatement BinaryOperation && BinaryOperation > MethodInvocation token length Literal 0 BinaryOperation == MethodInvocation token Literal 0 charAt Literal '(' BlockStatement StatementExpression MethodInvocation Literal ""operation.name-expr"" MethodInvocation st getTokenIndex parseError End IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference name Literal null BinaryOperation == MemberReference visibility Literal null BinaryOperation > MethodInvocation token length Literal 1 BinaryOperation >= MethodInvocation NotationUtilityUml.VISIBILITYCHARS MethodInvocation token Literal 0 charAt indexOf Literal 0 BlockStatement StatementExpression Assignment MemberReference visibility MethodInvocation token Literal 0 Literal 1 substring = StatementExpression Assignment MemberReference token MethodInvocation token Literal 1 substring = End IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference visibility MemberReference name = StatementExpression Assignment MemberReference name MemberReference token = BlockStatement StatementExpression Assignment MemberReference name MemberReference token = End End End End End End End End End CatchClause CatchClauseParameter NoSuchElementException nsee StatementExpression MethodInvocation Literal ""operation.unexpected-end-operation"" MethodInvocation s length parseError CatchClause CatchClauseParameter ParseException pre ThrowStatement MemberReference pre IfStatement BinaryOperation != MemberReference parameterlist Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation parameterlist BinaryOperation - MethodInvocation parameterlist length Literal 1 charAt Literal ')' BlockStatement StatementExpression MethodInvocation Literal ""operation.parameter-list-incomplete"" BinaryOperation - BinaryOperation + MemberReference paramOffset MethodInvocation parameterlist length Literal 1 parseError End StatementExpression MemberReference ++ paramOffset StatementExpression Assignment MemberReference parameterlist MethodInvocation parameterlist Literal 1 BinaryOperation - MethodInvocation parameterlist length Literal 1 substring = StatementExpression MethodInvocation NotationUtilityUml MemberReference op MemberReference parameterlist MemberReference paramOffset parseParamList End IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference op MethodInvocation NotationUtilityUml MethodInvocation visibility trim getVisibility setVisibility getCoreHelper End IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference op MethodInvocation name trim setName getCoreHelper IfStatement BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MemberReference op getName getFacade Literal null Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference op getName getFacade equals """" BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference op Literal ""anonymous"" setName getCoreHelper End End IfStatement BinaryOperation != MemberReference type Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ow MethodInvocation Model MethodInvocation MemberReference op getOwner getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference ow Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference ow getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ow getNamespace getFacade = BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference op getModel getFacade = End LocalVariableDeclaration ReferenceType Object VariableDeclarator mtype MethodInvocation NotationUtilityUml MethodInvocation type trim MemberReference ns getType StatementExpression MethodInvocation MemberReference op MemberReference mtype setReturnParameter End IfStatement BinaryOperation != MemberReference properties Literal null BlockStatement StatementExpression MethodInvocation NotationUtilityUml MemberReference op MemberReference properties MemberReference NotationUtilityUml operationSpecialStrings setProperties End IfStatement BinaryOperation || MethodInvocation ! Model MethodInvocation MemberReference op isAReception getFacade MethodInvocation ! RECEPTION_KEYWORD MethodInvocation stereotype toString equals BlockStatement StatementExpression MethodInvocation StereotypeUtility MemberReference op MemberReference stereotype Literal true dealWithStereotypes End MethodDeclaration /**
     * Convenience method to signal a parser error.
     * 
     * @param message
     *            string containing error message literal. It will be appended
     *            to the base ""parser.error."" and localized.
     * @param offset
     *            offset to where error occurred
     * @throws ParseException
     */ Modifier private parseError FormalParameter ReferenceType String message FormalParameter BasicType int offset ParseException ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator BinaryOperation + Literal ""parsing.error."" MemberReference message localize MemberReference offset MethodDeclaration /**
     * Parse tokens following an open brace (properties).
     * 
     * @param st tokenizer being used
     * @param properties current properties list
     * @return updated list of properties
     * @throws ParseException
     */ Modifier private ReferenceType List TypeArgument ReferenceType String tokenOpenBrace FormalParameter ReferenceType MyTokenizer st FormalParameter ReferenceType List TypeArgument ReferenceType String properties ParseException LocalVariableDeclaration ReferenceType String VariableDeclarator token LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator propname ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType String VariableDeclarator propvalue Literal null IfStatement BinaryOperation == MemberReference properties Literal null BlockStatement StatementExpression Assignment MemberReference properties ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = End WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "","" Literal MethodInvocation MemberReference token equals ""}"" BlockStatement IfStatement BinaryOperation > MethodInvocation propname length Literal 0 BlockStatement StatementExpression MethodInvocation properties MethodInvocation propname toString add StatementExpression MethodInvocation properties MemberReference propvalue add End StatementExpression Assignment MemberReference propname ClassCreator ReferenceType StringBuilder = StatementExpression Assignment MemberReference propvalue Literal null = IfStatement Literal MethodInvocation MemberReference token equals ""}"" BlockStatement BreakStatement End IfStatement Literal MethodInvocation MemberReference token equals ""="" BlockStatement IfStatement BinaryOperation != MemberReference propvalue Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ""parsing.error.operation.prop-stereotypes"" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference propname ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference args localize MethodInvocation st getTokenIndex End StatementExpression Assignment MemberReference propvalue Literal """" = IfStatement BinaryOperation == MemberReference propvalue Literal null BlockStatement StatementExpression MethodInvocation propname MemberReference token append BlockStatement StatementExpression Assignment MemberReference propvalue MemberReference token += End End End End IfStatement BinaryOperation > MethodInvocation propname length Literal 0 BlockStatement StatementExpression MethodInvocation properties MethodInvocation propname toString add StatementExpression MethodInvocation properties MemberReference propvalue add End ReturnStatement MemberReference properties MethodDeclaration /**
     * Sets the return parameter of op to be of type type. If there is none, one
     * is created. If there are many, all but one are removed.
     *
     * @param op the operation
     * @param type the type of the return parameter
     */ Modifier private setReturnParameter FormalParameter ReferenceType Object op FormalParameter ReferenceType Object type LocalVariableDeclaration ReferenceType Object VariableDeclarator param Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference op getParameters MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator p MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference p isReturn getFacade BlockStatement StatementExpression Assignment MemberReference param MemberReference p = BreakStatement End End WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator p MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference p isReturn getFacade BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference p moveToTrash getManager End End IfStatement BinaryOperation == MemberReference param Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager StatementExpression Assignment MemberReference param MethodInvocation Model MethodInvocation MemberReference op MemberReference returnType buildParameter getCoreFactory = End StatementExpression MethodInvocation Model MethodInvocation MemberReference param MemberReference type setType getCoreHelper MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal ""parsing.help.operation"" MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Map args LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator stereoStr MethodInvocation NotationUtilityUml MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade generateStereotype LocalVariableDeclaration BasicType boolean VariableDeclarator isReception MethodInvocation Model MethodInvocation MemberReference modelElement isAReception getFacade IfStatement MemberReference isReception BlockStatement StatementExpression Assignment MemberReference stereoStr BinaryOperation + BinaryOperation + MethodInvocation NotationUtilityUml MemberReference RECEPTION_KEYWORD generateStereotype Literal "" "" MemberReference stereoStr = End LocalVariableDeclaration ReferenceType String VariableDeclarator visStr MethodInvocation NotationUtilityUml MemberReference modelElement generateVisibility LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator parameterListBuffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Collection VariableDeclarator coll MethodInvocation Model MethodInvocation MemberReference modelElement getParameters getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation coll iterator LocalVariableDeclaration BasicType int VariableDeclarator counter Literal 0 WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation it next IfStatement MethodInvocation ! Model MethodInvocation MemberReference parameter hasReturnParameterDirectionKind getFacade BlockStatement StatementExpression MemberReference ++ counter StatementExpression MethodInvocation parameterListBuffer MethodInvocation NotationUtilityUml MemberReference parameter generateParameter append StatementExpression MethodInvocation parameterListBuffer Literal "","" append End End IfStatement BinaryOperation > MemberReference counter Literal 0 BlockStatement StatementExpression MethodInvocation parameterListBuffer BinaryOperation - MethodInvocation parameterListBuffer length Literal 1 MethodInvocation parameterListBuffer length delete End LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator parameterStr ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation parameterStr MethodInvocation MemberReference parameterListBuffer append MethodInvocation Literal "")"" append Literal ""("" append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator returnParasSb ClassCreator ReferenceType StringBuffer IfStatement MemberReference ! isReception BlockStatement StatementExpression Assignment MemberReference coll MethodInvocation Model MethodInvocation MemberReference modelElement getReturnParameters getCoreHelper = IfStatement BinaryOperation && BinaryOperation != MemberReference coll Literal null BinaryOperation > MethodInvocation coll size Literal 0 BlockStatement StatementExpression MethodInvocation returnParasSb Literal "": "" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation coll iterator WhileStatement MethodInvocation it2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MethodInvocation it2 next getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation returnParasSb MethodInvocation Model MethodInvocation MemberReference type getName getFacade append End StatementExpression MethodInvocation returnParasSb Literal "","" append End IfStatement BinaryOperation == MethodInvocation returnParasSb length Literal 3 BlockStatement StatementExpression MethodInvocation returnParasSb Literal 0 MethodInvocation returnParasSb length delete BlockStatement StatementExpression MethodInvocation returnParasSb BinaryOperation - MethodInvocation returnParasSb length Literal 1 MethodInvocation returnParasSb length delete End End End LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator propertySb ClassCreator MethodInvocation Literal ""{"" append ReferenceType StringBuffer IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isQuery getFacade BlockStatement StatementExpression MethodInvocation propertySb Literal ""query,"" append End IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isRoot getFacade BlockStatement StatementExpression MethodInvocation propertySb Literal ""root,"" append End IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isLeaf getFacade BlockStatement StatementExpression MethodInvocation propertySb Literal ""leaf,"" append End IfStatement MemberReference ! isReception BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getConcurrency getFacade Literal null BlockStatement StatementExpression MethodInvocation propertySb MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getConcurrency getFacade getName getFacade append StatementExpression MethodInvocation propertySb Literal ',' append End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it3 MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator taggedValuesSb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation && BinaryOperation != MemberReference it3 Literal null MethodInvocation it3 hasNext BlockStatement WhileStatement MethodInvocation it3 hasNext BlockStatement StatementExpression MethodInvocation taggedValuesSb MethodInvocation NotationUtilityUml MethodInvocation it3 next generateTaggedValue append StatementExpression MethodInvocation taggedValuesSb Literal "","" append End StatementExpression MethodInvocation taggedValuesSb BinaryOperation - MethodInvocation taggedValuesSb length Literal 1 MethodInvocation taggedValuesSb length delete End IfStatement BinaryOperation > MethodInvocation propertySb length Literal 1 BlockStatement StatementExpression MethodInvocation propertySb BinaryOperation - MethodInvocation propertySb length Literal 1 MethodInvocation propertySb length delete StatementExpression MethodInvocation propertySb Literal ""}"" append BlockStatement StatementExpression Assignment MemberReference propertySb ClassCreator ReferenceType StringBuffer = End LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator genStr ClassCreator ReferenceType StringBuffer Literal 30 IfStatement BinaryOperation && BinaryOperation != MemberReference stereoStr Literal null BinaryOperation > MethodInvocation stereoStr length Literal 0 BlockStatement StatementExpression MethodInvocation genStr MethodInvocation Literal "" "" append MemberReference stereoStr append End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference visStr Literal null BinaryOperation > MethodInvocation visStr length Literal 0 MethodInvocation ps getShowVisibilityValue BlockStatement StatementExpression MethodInvocation genStr MemberReference visStr append End IfStatement BinaryOperation && BinaryOperation != MemberReference nameStr Literal null BinaryOperation > MethodInvocation nameStr length Literal 0 BlockStatement StatementExpression MethodInvocation genStr MemberReference nameStr append End IfStatement MethodInvocation ps getShowTypesValue BlockStatement StatementExpression MethodInvocation genStr MethodInvocation Literal "" "" append MemberReference parameterStr append IfStatement BinaryOperation && BinaryOperation != MemberReference returnParasSb Literal null BinaryOperation > MethodInvocation returnParasSb length Literal 0 BlockStatement StatementExpression MethodInvocation genStr MethodInvocation Literal "" "" append MemberReference returnParasSb append End BlockStatement StatementExpression MethodInvocation genStr Literal ""()"" append End IfStatement BinaryOperation && BinaryOperation > MethodInvocation propertySb length Literal 0 MethodInvocation ps getShowPropertiesValue BlockStatement StatementExpression MethodInvocation genStr MemberReference propertySb append End ReturnStatement MethodInvocation genStr MethodInvocation trim toString CatchClause CatchClauseParameter InvalidElementException e ReturnStatement Literal """" ReferenceType OperationNotation",0
1020,1020,,0
773,773,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.application.api.Argo ClassDeclaration Modifier public /**
 * Class to represent a checkbox for the deprecated checkbox in the
 * documentation tab.
 * @author mkl
 */ UMLDeprecatedCheckBox ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ UMLDeprecatedCheckBox StatementExpression SuperConstructorInvocation MemberReference Argo DEPRECATED_TAG ReferenceType UMLTaggedValueCheckBox",0
1070,1070,,1
644,644,"CompilationUnit PackageDeclaration org.argouml.application.security ClassDeclaration Modifier public final /**
 * Argo Awt Exception handler.
 *
 * This allows us to manage and hide exceptions which occur
 * in the AWT event queue.
 * Refer to {@link java.awt.EventDispatchThread} for details.
 *
 * @author Thierry Lach
 * @since 0.9.4
 */ ArgoAwtExceptionHandler ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ ArgoAwtExceptionHandler MethodDeclaration /**
     * Called from within {@link java.awt.EventDispatchThread}
     * when an unhandled exception occurs in the Awt event queue.
     *
     * @param t The uncaught exception.
     *
     * @throws Throwable to repost the exception if we do not want
     *                   to ""eat"" it.
     */ Modifier public handle FormalParameter ReferenceType Throwable t Throwable ThrowStatement MemberReference t",0
1347,1347,,0
549,549,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Navigate to the transition. Used for e.g. a Guard.
 *
 * @author Michiel
 */ ActionNavigateTransition MethodDeclaration Modifier protected ReferenceType Object navigateTo FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getTransition getFacade ReferenceType AbstractActionNavigate",0
1252,1252,,0
340,340,"CompilationUnit PackageDeclaration org.argouml.uml Import org.argouml.model.Model Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public final /**
 * @stereotype utility
 */ UUIDHelper ConstructorDeclaration Modifier private /**
     * Hide constructor for the UUIDManager. This is private to make sure that
     * we are a utility.
     */ UUIDHelper MethodDeclaration /**
     * Return the UUID of the element.
     *
     * @param base A model element or a Fig representing a model element
     * @return UUID
     */ Modifier public static ReferenceType String getUUID FormalParameter ReferenceType Object base IfStatement BinaryOperation instanceof MemberReference base ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference base Cast ReferenceType Fig MemberReference base = End IfStatement BinaryOperation == MemberReference base Literal null ReturnStatement Literal null End IfStatement BinaryOperation instanceof MemberReference base ReferenceType CommentEdge BlockStatement ReturnStatement Cast ReferenceType String Cast ReferenceType CommentEdge MemberReference base End ReturnStatement MethodInvocation Model MethodInvocation MemberReference base getUUID getFacade MethodDeclaration /**
     * @return a new UUID
     */ Modifier public static ReferenceType String getNewUUID ReturnStatement MethodInvocation org.argouml.model.UUIDManager MethodInvocation getNewUUID getInstance",1
1392,1392,,0
377,377,"CompilationUnit PackageDeclaration org.argouml.kernel Import java.awt.Font Import java.beans.PropertyChangeEvent Import org.argouml.application.api.Argo Import org.argouml.application.events.ArgoDiagramAppearanceEvent Import org.argouml.application.events.ArgoEventPump Import org.argouml.application.events.ArgoEventTypes Import org.argouml.application.events.ArgoNotationEvent Import org.argouml.configuration.Configuration Import org.argouml.configuration.ConfigurationKey Import org.argouml.notation.Notation Import org.argouml.notation.NotationName Import org.argouml.notation.NotationProviderFactory2 Import org.argouml.uml.diagram.ui.DiagramAppearance Import org.argouml.uml.diagram.ui.FigNodeModelElement Import org.tigris.gef.undo.Memento Import org.tigris.gef.undo.UndoManager ClassDeclaration Modifier public /**
 * A datastructure for settings for a Project. <p>
 * 
 * Most getters return a string, since they are used by ""argo.tee"".
 * This is also the reason all these attributes 
 * are not part of a Map or something. <p>
 *
 * TODO: The header comment is curently not used - this function
 * is not completely implemented yet. How do we store this in the project?
 * Where should the user enter his header comment? See issue 4813.
 *
 * @author michiel
 */ ProjectSettings FieldDeclaration Modifier private ReferenceType String VariableDeclarator notationLanguage FieldDeclaration Modifier private BasicType boolean VariableDeclarator showBoldNames FieldDeclaration Modifier private BasicType boolean VariableDeclarator useGuillemots FieldDeclaration Modifier private BasicType boolean VariableDeclarator showVisibility FieldDeclaration Modifier private BasicType boolean VariableDeclarator showMultiplicity FieldDeclaration Modifier private BasicType boolean VariableDeclarator showInitialValue FieldDeclaration Modifier private BasicType boolean VariableDeclarator showProperties FieldDeclaration Modifier private BasicType boolean VariableDeclarator showTypes FieldDeclaration Modifier private BasicType boolean VariableDeclarator showStereotypes FieldDeclaration Modifier private BasicType boolean VariableDeclarator showSingularMultiplicities FieldDeclaration Modifier private BasicType int VariableDeclarator defaultShadowWidth FieldDeclaration Modifier private BasicType int VariableDeclarator defaultStereotypeView FieldDeclaration Modifier private ReferenceType String VariableDeclarator fontName FieldDeclaration Modifier private BasicType int VariableDeclarator fontSize FieldDeclaration Modifier private ReferenceType Font VariableDeclarator fontPlain FieldDeclaration Modifier private ReferenceType Font VariableDeclarator fontItalic FieldDeclaration Modifier private ReferenceType Font VariableDeclarator fontBold FieldDeclaration Modifier private ReferenceType Font VariableDeclarator fontBoldItalic FieldDeclaration Modifier private ReferenceType String VariableDeclarator headerComment Literal ""Your copyright and other header comments"" FieldDeclaration Modifier private ReferenceType String VariableDeclarator generationOutputDir ConstructorDeclaration /**
     * Create a new set of project settings, 
     * based on the application defaults. <p>
     * 
     * The constructor is not public, since this 
     * class is only created from the Project..
     */ ProjectSettings StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference notationLanguage MethodInvocation Notation MethodInvocation getConfigurationValue getConfiguredNotation = StatementExpression MethodInvocation NotationProviderFactory2 MemberReference notationLanguage setCurrentLanguage StatementExpression Assignment MemberReference showBoldNames MethodInvocation Configuration MemberReference Notation KEY_SHOW_BOLD_NAMES getBoolean = StatementExpression Assignment MemberReference useGuillemots MethodInvocation Configuration MemberReference Notation KEY_USE_GUILLEMOTS Literal false getBoolean = StatementExpression Assignment MemberReference showVisibility MethodInvocation Configuration MemberReference Notation KEY_SHOW_VISIBILITY getBoolean = StatementExpression Assignment MemberReference showMultiplicity MethodInvocation Configuration MemberReference Notation KEY_SHOW_MULTIPLICITY getBoolean = StatementExpression Assignment MemberReference showInitialValue MethodInvocation Configuration MemberReference Notation KEY_SHOW_INITIAL_VALUE getBoolean = StatementExpression Assignment MemberReference showProperties MethodInvocation Configuration MemberReference Notation KEY_SHOW_PROPERTIES getBoolean = StatementExpression Assignment MemberReference showTypes MethodInvocation Configuration MemberReference Notation KEY_SHOW_TYPES Literal true getBoolean = StatementExpression Assignment MemberReference showStereotypes MethodInvocation Configuration MemberReference Notation KEY_SHOW_STEREOTYPES getBoolean = StatementExpression Assignment MemberReference showSingularMultiplicities MethodInvocation Configuration MemberReference Notation KEY_SHOW_SINGULAR_MULTIPLICITIES Literal true getBoolean = StatementExpression Assignment MemberReference defaultShadowWidth MethodInvocation Configuration MemberReference Notation KEY_DEFAULT_SHADOW_WIDTH Literal 1 getInteger = StatementExpression Assignment MemberReference defaultStereotypeView MethodInvocation Configuration MemberReference ProfileConfiguration KEY_DEFAULT_STEREOTYPE_VIEW MemberReference FigNodeModelElement STEREOTYPE_VIEW_TEXTUAL getInteger = StatementExpression Assignment MemberReference fontName MethodInvocation DiagramAppearance MethodInvocation getConfiguredFontName getInstance = StatementExpression Assignment MemberReference fontSize MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_SIZE getInteger = StatementExpression MethodInvocation initFonts IfStatement MethodInvocation System MethodInvocation Literal ""/"" equals Literal ""file.separator"" getProperty BlockStatement StatementExpression Assignment MemberReference generationOutputDir Literal ""/tmp"" = BlockStatement StatementExpression Assignment MemberReference generationOutputDir MethodInvocation System Literal ""java.io.tmpdir"" getProperty = End StatementExpression Assignment MemberReference generationOutputDir MethodInvocation Configuration MemberReference Argo KEY_MOST_RECENT_EXPORT_DIRECTORY MemberReference generationOutputDir getString = MethodDeclaration /**
     * Send all events...
     */ Modifier public init StatementExpression MethodInvocation MethodInvocation getNotationLanguage setNotationLanguage StatementExpression MethodInvocation MethodInvocation getShowBoldNamesValue setShowBoldNames StatementExpression MethodInvocation MethodInvocation getUseGuillemotsValue setUseGuillemots StatementExpression MethodInvocation MethodInvocation getShowVisibilityValue setShowVisibility StatementExpression MethodInvocation MethodInvocation getShowMultiplicityValue setShowMultiplicity StatementExpression MethodInvocation MethodInvocation getShowInitialValueValue setShowInitialValue StatementExpression MethodInvocation MethodInvocation getShowPropertiesValue setShowProperties StatementExpression MethodInvocation MethodInvocation getShowTypesValue setShowTypes StatementExpression MethodInvocation MethodInvocation getShowStereotypesValue setShowStereotypes StatementExpression MethodInvocation MethodInvocation getShowSingularMultiplicitiesValue setShowSingularMultiplicities StatementExpression MethodInvocation MethodInvocation getDefaultShadowWidthValue setDefaultShadowWidth StatementExpression MethodInvocation MethodInvocation getFontName setFontName StatementExpression MethodInvocation MethodInvocation getFontSize setFontSize MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns the notation language.
     */ Modifier public ReferenceType String getNotationLanguage ReturnStatement MemberReference notationLanguage MethodDeclaration /**
     * @return Returns the notation language.
     */ Modifier public ReferenceType NotationName getNotationName ReturnStatement MethodInvocation Notation MemberReference notationLanguage findNotation MethodDeclaration /**
     * @param newLanguage the notation language.
     * @return true if the notation is set - false if it does not exist
     */ Modifier public BasicType boolean setNotationLanguage FormalParameter Modifier final ReferenceType String newLanguage IfStatement MethodInvocation notationLanguage MemberReference newLanguage equals ReturnStatement Literal true End IfStatement BinaryOperation == MethodInvocation Notation MemberReference newLanguage findNotation Literal null BlockStatement ReturnStatement Literal false End LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator oldLanguage MemberReference notationLanguage LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_DEFAULT_NOTATION MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference notationLanguage MemberReference newLanguage = StatementExpression MethodInvocation NotationProviderFactory2 MemberReference newLanguage setCurrentLanguage StatementExpression MethodInvocation MemberReference key MemberReference oldLanguage MemberReference newLanguage fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference notationLanguage MemberReference oldLanguage = StatementExpression MethodInvocation NotationProviderFactory2 MemberReference oldLanguage setCurrentLanguage StatementExpression MethodInvocation MemberReference key MemberReference newLanguage MemberReference oldLanguage fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager ReturnStatement Literal true MethodDeclaration /**
     * @param nn the new notation language
     */ Modifier public setNotationLanguage FormalParameter ReferenceType NotationName nn StatementExpression MethodInvocation MethodInvocation nn getConfigurationValue setNotationLanguage MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show bold names.
     */ Modifier public ReferenceType String getShowBoldNames ReturnStatement MethodInvocation Boolean MemberReference showBoldNames toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show bold names.
     */ Modifier public BasicType boolean getShowBoldNamesValue ReturnStatement MemberReference showBoldNames MethodDeclaration /**
     * @param showbold <code>true</code> if names are to be shown in bold font.
     */ Modifier public setShowBoldNames FormalParameter ReferenceType String showbold StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showbold valueOf setShowBoldNames MethodDeclaration /**
     * @param showem <code>true</code> if names are to be shown in bold font.
     */ Modifier public setShowBoldNames FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showBoldNames MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_BOLD_NAMES MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showBoldNames MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showBoldNames MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show guillemots.
     */ Modifier public ReferenceType String getUseGuillemots ReturnStatement MethodInvocation Boolean MemberReference useGuillemots toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show guillemots.
     */ Modifier public BasicType boolean getUseGuillemotsValue ReturnStatement MemberReference useGuillemots MethodDeclaration /**
     * @param showem <code>true</code> if guillemots are to be shown.
     */ Modifier public setUseGuillemots FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setUseGuillemots MethodDeclaration /**
     * @param showem <code>true</code> if guillemots are to be shown.
     */ Modifier public setUseGuillemots FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference useGuillemots MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_USE_GUILLEMOTS MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference useGuillemots MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference useGuillemots MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * @return the left pointing guillemot, i.e. << or the one-character symbol
     */ Modifier public ReferenceType String getLeftGuillemot ReturnStatement TernaryExpression MemberReference useGuillemots Literal ""«"" Literal ""<<"" MethodDeclaration /**
     * @return the right pointing guillemot, i.e. >> or the one-character symbol
     */ Modifier public ReferenceType String getRightGuillemot ReturnStatement TernaryExpression MemberReference useGuillemots Literal ""»"" Literal "">>"" MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show visibilities.
     */ Modifier public ReferenceType String getShowVisibility ReturnStatement MethodInvocation Boolean MemberReference showVisibility toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show visibilities.
     */ Modifier public BasicType boolean getShowVisibilityValue ReturnStatement MemberReference showVisibility MethodDeclaration /**
     * @param showem <code>true</code> if visibilities are to be shown.
     */ Modifier public setShowVisibility FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowVisibility MethodDeclaration /**
     * @param showem <code>true</code> if visibilities are to be shown.
     */ Modifier public setShowVisibility FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showVisibility MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_VISIBILITY MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showVisibility MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showVisibility MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show multiplicities.
     */ Modifier public ReferenceType String getShowMultiplicity ReturnStatement MethodInvocation Boolean MemberReference showMultiplicity toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show multiplicities.
     */ Modifier public BasicType boolean getShowMultiplicityValue ReturnStatement MemberReference showMultiplicity MethodDeclaration /**
     * @param showem <code>true</code> if multiplicity is to be shown.
     */ Modifier public setShowMultiplicity FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowMultiplicity MethodDeclaration /**
     * @param showem <code>true</code> if the multiplicity is to be shown.
     */ Modifier public setShowMultiplicity FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showMultiplicity MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_MULTIPLICITY MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showMultiplicity MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showMultiplicity MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show initial values.
     */ Modifier public ReferenceType String getShowInitialValue ReturnStatement MethodInvocation Boolean MemberReference showInitialValue toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show initial values.
     */ Modifier public BasicType boolean getShowInitialValueValue ReturnStatement MemberReference showInitialValue MethodDeclaration /**
     * @param showem <code>true</code> if initial values are to be shown.
     */ Modifier public setShowInitialValue FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowInitialValue MethodDeclaration /**
     * @param showem <code>true</code> if initial values are to be shown.
     */ Modifier public setShowInitialValue FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showInitialValue MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_INITIAL_VALUE MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showInitialValue MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showInitialValue MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show properties.
     */ Modifier public ReferenceType String getShowProperties ReturnStatement MethodInvocation Boolean MemberReference showProperties toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show properties.
     */ Modifier public BasicType boolean getShowPropertiesValue ReturnStatement MemberReference showProperties MethodDeclaration /**
     * @param showem <code>true</code> if properties are to be shown.
     */ Modifier public setShowProperties FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowProperties MethodDeclaration /**
     * @param showem <code>true</code> if properties are to be shown.
     */ Modifier public setShowProperties FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showProperties MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_PROPERTIES MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showProperties MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showProperties MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show types.
     */ Modifier public ReferenceType String getShowTypes ReturnStatement MethodInvocation Boolean MemberReference showTypes toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show types.
     */ Modifier public BasicType boolean getShowTypesValue ReturnStatement MemberReference showTypes MethodDeclaration /**
     * @param showem <code>true</code> if types are to be shown.
     */ Modifier public setShowTypes FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowTypes MethodDeclaration /**
     * @param showem <code>true</code> if types are to be shown.
     */ Modifier public setShowTypes FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showTypes MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_TYPES MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showTypes MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showTypes MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show stereotypes.
     */ Modifier public ReferenceType String getShowStereotypes ReturnStatement MethodInvocation Boolean MemberReference showStereotypes toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show stereotypes.
     */ Modifier public BasicType boolean getShowStereotypesValue ReturnStatement MemberReference showStereotypes MethodDeclaration /**
     * @param showem <code>true</code> if stereotypes are to be shown.
     */ Modifier public setShowStereotypes FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowStereotypes MethodDeclaration /**
     * @param showem <code>true</code> if stereotypes are to be shown.
     */ Modifier public setShowStereotypes FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showStereotypes MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_STEREOTYPES MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showStereotypes MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showStereotypes MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns ""true"" if we show ""1"" Multiplicities.
     */ Modifier public ReferenceType String getShowSingularMultiplicities ReturnStatement MethodInvocation Boolean MemberReference showSingularMultiplicities toString MethodDeclaration /**
     * @return Returns <code>true</code> if we show  ""1"" Multiplicities.
     */ Modifier public BasicType boolean getShowSingularMultiplicitiesValue ReturnStatement MemberReference showSingularMultiplicities MethodDeclaration /**
     * @param showem <code>true</code> if ""1"" Multiplicities are to be shown.
     */ Modifier public setShowSingularMultiplicities FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowSingularMultiplicities MethodDeclaration /**
     * @param showem <code>true</code> if ""1"" Multiplicities are to be shown.
     */ Modifier public setShowSingularMultiplicities FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference showSingularMultiplicities MemberReference showem ReturnStatement End LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_SINGULAR_MULTIPLICITIES MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showSingularMultiplicities MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showSingularMultiplicities MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns the shadow width.
     */ Modifier public ReferenceType String getDefaultShadowWidth ReturnStatement MethodInvocation Integer MethodInvocation toString MemberReference defaultShadowWidth valueOf MethodDeclaration /**
     * @return Returns the shadow width.
     */ Modifier public BasicType int getDefaultShadowWidthValue ReturnStatement MemberReference defaultShadowWidth MethodDeclaration /**
     * @param newWidth The Shadow Width.
     */ Modifier public setDefaultShadowWidth FormalParameter Modifier final BasicType int newWidth IfStatement BinaryOperation == MemberReference defaultShadowWidth MemberReference newWidth ReturnStatement End LocalVariableDeclaration Modifier final BasicType int VariableDeclarator oldValue MemberReference defaultShadowWidth LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_DEFAULT_SHADOW_WIDTH MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference defaultShadowWidth MemberReference newWidth = StatementExpression MethodInvocation MemberReference key MemberReference oldValue MemberReference newWidth fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference defaultShadowWidth MemberReference oldValue = StatementExpression MethodInvocation MemberReference key MemberReference newWidth MemberReference oldValue fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * @param width The shadow width to set.
     */ Modifier public setDefaultShadowWidth FormalParameter ReferenceType String width StatementExpression MethodInvocation MethodInvocation Integer MemberReference width parseInt setDefaultShadowWidth MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return Returns the default stereotype view
     */ Modifier public ReferenceType String getDefaultStereotypeView ReturnStatement MethodInvocation Integer MethodInvocation toString MemberReference defaultStereotypeView valueOf MethodDeclaration /**
     * @return Returns the default stereotype view
     */ Modifier public BasicType int getDefaultStereotypeViewValue ReturnStatement MemberReference defaultStereotypeView MethodDeclaration /**
     * Used by ""argo.tee"".
     * 
     * @return the output directory name
     */ Modifier public ReferenceType String getGenerationOutputDir ReturnStatement MemberReference generationOutputDir MethodDeclaration /**
     * @param od the output directory name
     */ Modifier public setGenerationOutputDir FormalParameter ReferenceType String od StatementExpression Assignment MemberReference generationOutputDir MemberReference od = StatementExpression MethodInvocation Configuration MemberReference Argo KEY_MOST_RECENT_EXPORT_DIRECTORY MemberReference od setString MethodDeclaration /**
     * @return the header comment string
     */ Modifier public ReferenceType String getHeaderComment ReturnStatement MemberReference headerComment MethodDeclaration /**
     * @param newView the default stereotype view
     */ Modifier public setDefaultStereotypeView FormalParameter Modifier final BasicType int newView IfStatement BinaryOperation == MemberReference defaultStereotypeView MemberReference newView BlockStatement ReturnStatement End LocalVariableDeclaration Modifier final BasicType int VariableDeclarator oldValue MemberReference defaultStereotypeView LocalVariableDeclaration ReferenceType Memento VariableDeclarator memento ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference ProfileConfiguration KEY_DEFAULT_STEREOTYPE_VIEW MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference defaultStereotypeView MemberReference newView = StatementExpression MethodInvocation MemberReference key MemberReference oldValue MemberReference newView fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference defaultStereotypeView MemberReference oldValue = StatementExpression MethodInvocation MemberReference key MemberReference newView MemberReference oldValue fireNotationEvent IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference memento addMemento getInstance End StatementExpression MethodInvocation memento redo StatementExpression MethodInvocation ProjectManager MethodInvocation Literal true setSaveEnabled getManager MethodDeclaration /**
     * @param c the header comment string
     */ Modifier public setHeaderComment FormalParameter ReferenceType String c StatementExpression Assignment MemberReference headerComment MemberReference c = MethodDeclaration /**
     * Convenience methods to fire notation configuration change events.
     *
     * @param key the ConfigurationKey that is related to the change
     * @param oldValue the old value
     * @param newValue the new value
     */ Modifier private fireNotationEvent FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType int oldValue FormalParameter BasicType int newValue StatementExpression MethodInvocation MemberReference key MethodInvocation Integer MemberReference oldValue toString MethodInvocation Integer MemberReference newValue toString fireNotationEvent MethodDeclaration /**
     * Convenience methods to fire notation configuration change events.
     *
     * @param key the ConfigurationKey that is related to the change
     * @param oldValue the old value
     * @param newValue the new value
     */ Modifier private fireNotationEvent FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType boolean oldValue FormalParameter BasicType boolean newValue StatementExpression MethodInvocation MemberReference key MethodInvocation Boolean MemberReference oldValue toString MethodInvocation Boolean MemberReference newValue toString fireNotationEvent MethodDeclaration /**
     * Convenience methods to fire notation configuration change events.
     *
     * @param key the ConfigurationKey that is related to the change
     * @param oldValue the old value
     * @param newValue the new value
     */ Modifier private fireNotationEvent FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType String oldValue FormalParameter ReferenceType String newValue StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoNotationEvent MemberReference ArgoEventTypes NOTATION_CHANGED ClassCreator ReferenceType PropertyChangeEvent This MethodInvocation key getKey MemberReference oldValue MemberReference newValue fireEvent MethodDeclaration /**
     * Convenience methods to fire diagram appearance 
     * configuration change events.
     *
     * @param key the ConfigurationKey that is related to the change
     * @param oldValue the old value
     * @param newValue the new value
     */ Modifier private fireDiagramAppearanceEvent FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType int oldValue FormalParameter BasicType int newValue StatementExpression MethodInvocation MemberReference key MethodInvocation Integer MemberReference oldValue toString MethodInvocation Integer MemberReference newValue toString fireDiagramAppearanceEvent MethodDeclaration /**
     * Convenience methods to fire diagram appearance 
     * configuration change events.
     *
     * @param key the ConfigurationKey that is related to the change
     * @param oldValue the old value
     * @param newValue the new value
     */ Modifier private fireDiagramAppearanceEvent FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType String oldValue FormalParameter ReferenceType String newValue StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoDiagramAppearanceEvent MemberReference ArgoEventTypes DIAGRAM_FONT_CHANGED ClassCreator ReferenceType PropertyChangeEvent This MethodInvocation key getKey MemberReference oldValue MemberReference newValue fireEvent MethodDeclaration /**
     * Diagram font name. <p>
     * 
     * Used by ""argo.tee"".
     * 
     * @return diagram font name.
     */ Modifier public ReferenceType String getFontName ReturnStatement MemberReference fontName MethodDeclaration /**
     * Diagram font name.
     * @param newFontName diagram font name.
     */ Modifier public setFontName FormalParameter ReferenceType String newFontName LocalVariableDeclaration ReferenceType String VariableDeclarator old MemberReference fontName StatementExpression Assignment MemberReference fontName MemberReference newFontName = StatementExpression MethodInvocation initFonts StatementExpression MethodInvocation MemberReference DiagramAppearance KEY_FONT_NAME MemberReference old This MemberReference fontName fireDiagramAppearanceEvent MethodDeclaration /**
     * Diagram font size. <p>
     * 
     * Used by ""argo.tee"".
     * 
     * @return diagram font size.
     */ Modifier public BasicType int getFontSize ReturnStatement MemberReference fontSize MethodDeclaration /**
     * Diagram font size.
     * @param newFontSize diagram font size.
     */ Modifier public setFontSize FormalParameter BasicType int newFontSize LocalVariableDeclaration BasicType int VariableDeclarator old MemberReference fontSize StatementExpression Assignment MemberReference fontSize MemberReference newFontSize = StatementExpression MethodInvocation initFonts StatementExpression MethodInvocation MemberReference DiagramAppearance KEY_FONT_SIZE MemberReference old This MemberReference fontSize fireDiagramAppearanceEvent MethodDeclaration Modifier private initFonts StatementExpression Assignment MemberReference fontPlain ClassCreator ReferenceType Font MemberReference fontName MemberReference Font PLAIN MemberReference fontSize = StatementExpression Assignment MemberReference fontItalic ClassCreator ReferenceType Font MemberReference fontName MemberReference Font ITALIC BinaryOperation + MemberReference fontSize Literal 2 = StatementExpression Assignment MemberReference fontBold ClassCreator ReferenceType Font MemberReference fontName MemberReference Font BOLD BinaryOperation + MemberReference fontSize Literal 2 = StatementExpression Assignment MemberReference fontBoldItalic ClassCreator ReferenceType Font MemberReference fontName BinaryOperation | MemberReference Font BOLD MemberReference Font ITALIC BinaryOperation + MemberReference fontSize Literal 2 = MethodDeclaration /**
     * Returns the Plain diagram font which corresponds 
     * to selected parameters.
     * 
     * @return plain diagram font
     */ Modifier public ReferenceType Font getFontPlain ReturnStatement MemberReference fontPlain MethodDeclaration /**
     * Returns the Italic diagram font which corresponds 
     * to selected parameters.
     * 
     * @return italic diagram font
     */ Modifier public ReferenceType Font getFontItalic ReturnStatement MemberReference fontItalic MethodDeclaration /**
     * Returns the Bold diagram font which corresponds 
     * to selected parameters.
     * 
     * @return bold diagram font
     */ Modifier public ReferenceType Font getFontBold ReturnStatement MemberReference fontBold MethodDeclaration /**
     * Returns the Bold-Italic diagram font which corresponds 
     * to selected parameters.
     * 
     * @return bold-italic diagram font
     */ Modifier public ReferenceType Font getFontBoldItalic ReturnStatement MemberReference fontBoldItalic MethodDeclaration /**
     * Utility function to convert a font style integer into a Font.
     * 
     * @param fontStyle the style; see the predefined constants in Font
     * @return the Font that corresponds to the style
     */ Modifier public ReferenceType Font getFont FormalParameter BasicType int fontStyle IfStatement BinaryOperation != BinaryOperation & MemberReference fontStyle MemberReference Font ITALIC Literal 0 BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference fontStyle MemberReference Font BOLD Literal 0 BlockStatement ReturnStatement MemberReference fontBoldItalic BlockStatement ReturnStatement MemberReference fontItalic End BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference fontStyle MemberReference Font BOLD Literal 0 BlockStatement ReturnStatement MemberReference fontBold BlockStatement ReturnStatement MemberReference fontPlain End End",0
387,387,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.util.List Import org.apache.log4j.Logger Import org.argouml.cognitive.Designer Import org.argouml.cognitive.Poster Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.ToDoListEvent Import org.argouml.cognitive.ToDoListListener ClassDeclaration Modifier public /**
 * Represents a perspective for ToDo items: grouping by poster type.
 *
 */ ToDoByPoster FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ToDoByPoster getLogger ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ ToDoByPoster StatementExpression SuperConstructorInvocation Literal ""combobox.todo-perspective-poster"" StatementExpression MethodInvocation ClassCreator ReferenceType GoListToPosterToItem addSubTreeModel MethodDeclaration Modifier public toDoItemsChanged FormalParameter ReferenceType ToDoListEvent tde StatementExpression MethodInvocation LOG Literal ""toDoItemsChanged"" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tde getToDoItemList LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType Poster VariableDeclarator p MethodInvocation Designer MethodInvocation getToDoList MethodInvocation getPosters theDesigner BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference p = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Poster VariableDeclarator post MethodInvocation item getPoster IfStatement BinaryOperation != MemberReference post MemberReference p ContinueStatement End StatementExpression MemberReference ++ nMatchingItems End IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 ContinueStatement End LocalVariableDeclaration BasicType int VariableDeclarator childIndices ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Poster VariableDeclarator post MethodInvocation item getPoster IfStatement BinaryOperation != MemberReference post MemberReference p ContinueStatement End StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems childIndices MethodInvocation MemberReference p MemberReference item getIndexOfChild = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems End StatementExpression MethodInvocation This MemberReference path MemberReference childIndices MemberReference children fireTreeNodesChanged End MethodDeclaration Modifier public toDoItemsAdded FormalParameter ReferenceType ToDoListEvent tde StatementExpression MethodInvocation LOG Literal ""toDoItemAdded"" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tde getToDoItemList LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType Poster VariableDeclarator p MethodInvocation Designer MethodInvocation getToDoList MethodInvocation getPosters theDesigner BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference p = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Poster VariableDeclarator post MethodInvocation item getPoster IfStatement BinaryOperation != MemberReference post MemberReference p ContinueStatement End StatementExpression MemberReference ++ nMatchingItems End IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 ContinueStatement End LocalVariableDeclaration BasicType int VariableDeclarator childIndices ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Poster VariableDeclarator post MethodInvocation item getPoster IfStatement BinaryOperation != MemberReference post MemberReference p ContinueStatement End StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems childIndices MethodInvocation MemberReference p MemberReference item getIndexOfChild = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems End StatementExpression MethodInvocation This MemberReference path MemberReference childIndices MemberReference children fireTreeNodesInserted End MethodDeclaration Modifier public toDoItemsRemoved FormalParameter ReferenceType ToDoListEvent tde StatementExpression MethodInvocation LOG Literal ""toDoItemRemoved"" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tde getToDoItemList LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType Poster VariableDeclarator p MethodInvocation Designer MethodInvocation getToDoList MethodInvocation getPosters theDesigner BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator anyInPoster Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Poster VariableDeclarator post MethodInvocation item getPoster IfStatement BinaryOperation == MemberReference post MemberReference p BlockStatement StatementExpression Assignment MemberReference anyInPoster Literal true = BreakStatement End End IfStatement MemberReference ! anyInPoster BlockStatement ContinueStatement End StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference p = StatementExpression MethodInvocation MemberReference path fireTreeStructureChanged End MethodDeclaration Modifier public toDoListChanged FormalParameter ReferenceType ToDoListEvent tde ReferenceType ToDoPerspective ReferenceType ToDoListListener",1
352,352,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementOrderedListModel2 ClassDeclaration Modifier public /**
 *
 * @author jaap.branderhorst@xs4all.nl, alexb
 * @since Mar 22, 2003
 */ UMLClassAttributeListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLClassifierStructuralFeatureListModel.
     */ UMLClassAttributeListModel StatementExpression SuperConstructorInvocation Literal ""feature"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getAttributes getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model getFacade MethodDeclaration Modifier protected moveDown FormalParameter BasicType int index1 LocalVariableDeclaration BasicType int VariableDeclarator index2 BinaryOperation + MemberReference index1 Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getAttributes getFacade IfStatement BinaryOperation < MemberReference index1 BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index1 get LocalVariableDeclaration ReferenceType Object VariableDeclarator mem2 MethodInvocation c MemberReference index2 get LocalVariableDeclaration ReferenceType List VariableDeclarator f MethodInvocation Model MethodInvocation MemberReference clss getFeatures getFacade StatementExpression Assignment MemberReference index2 MethodInvocation f MemberReference mem2 indexOf = StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem1 removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference index2 MemberReference mem1 addFeature getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToBottom(int)
     */ Modifier protected Annotation Override moveToBottom FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getAttributes getFacade IfStatement BinaryOperation < MemberReference index BinaryOperation - MethodInvocation c size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem1 removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss BinaryOperation - MethodInvocation c size Literal 1 MemberReference mem1 addFeature getCoreHelper End MethodDeclaration /**
     * @see org.argouml.uml.ui.UMLModelElementOrderedListModel2#moveToTop(int)
     */ Modifier protected Annotation Override moveToTop FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator clss MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference clss getAttributes getFacade IfStatement BinaryOperation > MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mem1 MethodInvocation c MemberReference index get StatementExpression MethodInvocation Model MethodInvocation MemberReference clss MemberReference mem1 removeFeature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference clss Literal 0 MemberReference mem1 addFeature getCoreHelper End ReferenceType UMLModelElementOrderedListModel2",0
1405,1405,,0
656,656,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Cursor Import java.awt.Dimension Import java.awt.Graphics Import java.awt.GraphicsEnvironment Import java.awt.Point Import javax.swing.JPanel Import javax.swing.JWindow Import javax.swing.border.EtchedBorder Import org.tigris.gef.ui.IStatusBar ClassDeclaration Modifier public /**
 * The splash screen.
 */ SplashScreen FieldDeclaration Modifier private ReferenceType StatusBar VariableDeclarator statusBar ClassCreator ReferenceType StatusBar FieldDeclaration /**
     * Flag indicating that the splash screen has been painted.
     */ Modifier private BasicType boolean VariableDeclarator paintCalled Literal false ConstructorDeclaration Modifier public /**
     * The constructor.
     */ SplashScreen StatementExpression ExplicitConstructorInvocation Literal ""Loading ArgoUML..."" Literal ""Splash"" ConstructorDeclaration Modifier private /**
     * The constructor.
     *
     * @param title the title of the window
     * @param iconName the icon for the window
     */ SplashScreen FormalParameter ReferenceType String title FormalParameter ReferenceType String iconName StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MethodInvocation Cursor MemberReference Cursor WAIT_CURSOR getPredefinedCursor setCursor StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType BorderLayout Literal 0 Literal 0 setLayout getContentPane LocalVariableDeclaration ReferenceType SplashPanel VariableDeclarator panel ClassCreator ReferenceType SplashPanel MemberReference iconName IfStatement BinaryOperation != MethodInvocation panel getImage Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator imgWidth MethodInvocation panel MethodInvocation getIconWidth getImage LocalVariableDeclaration BasicType int VariableDeclarator imgHeight MethodInvocation panel MethodInvocation getIconHeight getImage LocalVariableDeclaration ReferenceType Point VariableDeclarator scrCenter MethodInvocation GraphicsEnvironment MethodInvocation getCenterPoint getLocalGraphicsEnvironment StatementExpression MethodInvocation BinaryOperation - MemberReference scrCenter x BinaryOperation / MemberReference imgWidth Literal 2 BinaryOperation - MemberReference scrCenter y BinaryOperation / MemberReference imgHeight Literal 2 setLocation End LocalVariableDeclaration ReferenceType JPanel VariableDeclarator splash ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout StatementExpression MethodInvocation splash ClassCreator ReferenceType EtchedBorder MemberReference EtchedBorder RAISED setBorder StatementExpression MethodInvocation splash MemberReference panel MemberReference BorderLayout CENTER add StatementExpression MethodInvocation splash MemberReference statusBar MemberReference BorderLayout SOUTH add StatementExpression MethodInvocation MethodInvocation MemberReference splash add getContentPane LocalVariableDeclaration ReferenceType Dimension VariableDeclarator contentPaneSize MethodInvocation MethodInvocation getPreferredSize getContentPane StatementExpression MethodInvocation MemberReference contentPaneSize width MemberReference contentPaneSize height setSize StatementExpression MethodInvocation pack MethodDeclaration /**
     * @return the status bar of this dialog
     */ Modifier public ReferenceType StatusBar getStatusBar ReturnStatement MemberReference statusBar MethodDeclaration Modifier public showStatus FormalParameter ReferenceType String s StatementExpression MethodInvocation statusBar MemberReference s showStatus MethodDeclaration Modifier public Annotation Override paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint IfStatement MemberReference ! paintCalled BlockStatement SynchronizedStatement This StatementExpression Assignment MemberReference paintCalled Literal true = StatementExpression MethodInvocation notifyAll End MethodDeclaration /**
     * @param called true if paint() is already called
     */ Modifier public setPaintCalled FormalParameter BasicType boolean called StatementExpression Assignment This MemberReference paintCalled MemberReference called = MethodDeclaration /**
     * @return true if paint() is already called
     */ Modifier public BasicType boolean isPaintCalled ReturnStatement MemberReference paintCalled ReferenceType JWindow ReferenceType IStatusBar",0
46,46,"CompilationUnit PackageDeclaration org.argouml.ui.explorer Import java.awt.event.ActionEvent Import javax.swing.AbstractAction Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator ClassDeclaration Modifier public /**
 * Action to invoke the Configure Perspectives dialog.
 *
 */ ActionPerspectiveConfig ConstructorDeclaration Modifier public /**
     * The constructor. Translate the name and set icon.
     */ ActionPerspectiveConfig StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.configure-perspectives"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.configure-perspectives"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.configure-perspectives"" localize putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType PerspectiveConfigurator VariableDeclarator ncd ClassCreator ReferenceType PerspectiveConfigurator StatementExpression MethodInvocation ncd Literal true setVisible FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 708783262437452872L ReferenceType AbstractAction",0
620,620,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Go rule to navigate from a classifier to the behavioral
 * features owned by that classifier.  <p>
 * Classifier->BehavioralFeature
 *
 * @since Jul 13, 2004
 * @author jaap.branderhorst@xs4all.nl
 */ GoClassifierToBehavioralFeature MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.classifier.behavioralfeature"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehavioralFeatures getCoreHelper End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1079,1079,,0
619,619,"CompilationUnit PackageDeclaration org.argouml.cognitive.critics Import java.util.ArrayList Import java.util.List Import javax.swing.JPanel ClassDeclaration Modifier public abstract /**
 * ""Abstract"" base class for non-modal wizards.  Each subclass should
 * define its own makeNextPanel methods. Because most
 * wizards will not be run to completion, the panels are constructed
 * only as needed. This implies that Wizards should not initialize
 * many instance variables in their constructors.<p>
 *
 * By convention step 0 is the problem description of the ToDoItem,
 * step 1 is the first panel displayed after the user presses
 * ""Next>"", and so on.  The problem description panel is not stored in
 * this wizard, only the panels that are specific to the wizard are
 * stored. If the user presses ""Back>"" enough times to get back to the
 * problem description, backPanel should return null.  A null panel
 * indicates that the problem description should be shown. <p>
 *
 * Several of the comments in this class refer to ""context"".  Context
 * is the data about this execution of this wizard, for example, values
 * that the user enters in step 1 is part of the context of later steps,
 * and the ToDoItem with its offenders Set is always context.  Most
 * context should be stored in instance variables of Wizard subclasses.
 *
 * @author jrobbins
 */ Wizard FieldDeclaration /** User interface panels displayed so far. */ Modifier private ReferenceType List TypeArgument ReferenceType JPanel VariableDeclarator panels ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JPanel FieldDeclaration /** The current step that the Wizard is on.  Zero indicates that the
     *  wizard has not yet begun. */ Modifier private BasicType int VariableDeclarator step Literal 0 FieldDeclaration /** True when the wizard has done everything it can. */ Modifier private BasicType boolean VariableDeclarator finished Literal false FieldDeclaration Modifier private BasicType boolean VariableDeclarator started Literal false FieldDeclaration Modifier private ReferenceType WizardItem VariableDeclarator item Literal null ConstructorDeclaration Modifier public /** Construct a new wizard to help the user repair a design flaw. */ Wizard MethodDeclaration /**
     * @param s the step number of the panel to be removed
     */ Modifier protected removePanel FormalParameter BasicType int s StatementExpression MethodInvocation panels MemberReference s remove MethodDeclaration /**
     * Setter for the todoitem.
     *
     * @param i the todoitem
     */ Modifier public setToDoItem FormalParameter ReferenceType WizardItem i StatementExpression Assignment MemberReference item MemberReference i = MethodDeclaration /**
     * @return the todoitem
     */ Modifier public ReferenceType WizardItem getToDoItem ReturnStatement MemberReference item MethodDeclaration /** An integer between 0 and 100, shows percent done. The current
     *  ArgoUML user interface shows different PostIt note icons for
     *  0, 1-25, 26-50. 51-75, and 76-100.
     *  @return the percentage done.
     */ Modifier public BasicType int getProgress ReturnStatement BinaryOperation / BinaryOperation * MemberReference step Literal 100 MethodInvocation getNumSteps MethodDeclaration /** Get the number of steps in this wizard.  Subclasses should
     *  override to return a constant, or compute based on context.
     *  @return the number of steps in this wizard.
     */ Modifier public abstract BasicType int getNumSteps MethodDeclaration /** Get the panel that should be displayed now.  Usually called
     *  after the user pressed ""Next&gt;"" and next() has returned, or after
     *  the user pressed ""&lt;Back"" and back() has returned.  Also called
     *  when the user turns away from the wizard to do something else and
     *  then returns his or her attention to the wizard.
     *  @return the panel that should be displayed now.
     */ Modifier public ReferenceType JPanel getCurrentPanel ReturnStatement MethodInvocation MemberReference step getPanel MethodDeclaration /** Get the exising panel at step s. Step 1 is the first wizard
     *  panel.
     * @param s the step
     * @return the panel for step s or null if none.
     */ Modifier public ReferenceType JPanel getPanel FormalParameter BasicType int s IfStatement BinaryOperation && BinaryOperation > MemberReference s Literal 0 BinaryOperation <= MemberReference s MethodInvocation panels size BlockStatement ReturnStatement MethodInvocation panels BinaryOperation - MemberReference s Literal 1 get End ReturnStatement Literal null MethodDeclaration /** Return true iff the ""Next&gt;"" button should be enabled.
     *  Subclasses should override to first check super.nextEnabled()
     *  and then check for legal context values.
     *  @return <code>true</code> iff the ""Next&gt;"" button should be enabled.
     */ Modifier public BasicType boolean canGoNext ReturnStatement BinaryOperation < MemberReference step MethodInvocation getNumSteps MethodDeclaration /**
     * The next step of the wizard.
     */ Modifier public next StatementExpression MethodInvocation MemberReference step doAction StatementExpression MemberReference ++ step LocalVariableDeclaration ReferenceType JPanel VariableDeclarator p MethodInvocation MemberReference step makePanel IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation panels MemberReference p add End StatementExpression Assignment MemberReference started Literal true = IfStatement BinaryOperation != MemberReference item Literal null BlockStatement StatementExpression MethodInvocation item changed End MethodDeclaration /**
     * @return true if we can step back
     */ Modifier public BasicType boolean canGoBack ReturnStatement BinaryOperation > MemberReference step Literal 0 MethodDeclaration /**
     * Step back.
     */ Modifier public back StatementExpression MemberReference -- step IfStatement BinaryOperation < MemberReference step Literal 0 StatementExpression Assignment MemberReference step Literal 0 = End StatementExpression MethodInvocation MemberReference step undoAction IfStatement BinaryOperation != MemberReference item Literal null StatementExpression MethodInvocation item changed End MethodDeclaration /**
     * @return true if we can finish (i.e. the finish button is not downlighted)
     */ Modifier public BasicType boolean canFinish ReturnStatement Literal true MethodDeclaration /**
     * @return true if the wizard is started
     */ Modifier public BasicType boolean isStarted ReturnStatement MemberReference started MethodDeclaration /**
     * @return true if the wizard is finished
     */ Modifier public BasicType boolean isFinished ReturnStatement MemberReference finished MethodDeclaration /**
     * Finish the wizard.
     */ Modifier public finish StatementExpression Assignment MemberReference started Literal true = LocalVariableDeclaration BasicType int VariableDeclarator numSteps MethodInvocation getNumSteps ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference step BinaryOperation <= MemberReference i MemberReference numSteps MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference i doAction IfStatement BinaryOperation != MemberReference item Literal null StatementExpression MethodInvocation item changed End End StatementExpression Assignment MemberReference finished Literal true = MethodDeclaration /** Create a new panel for the given step. For example, When the
     *  given step is 1, create the first step of the wizard. <p>
     *
     *  TODO: It might be convient to make a reusable
     *  subclass of Wizard that shows all textual steps to guide the
     *  user without any automation.  Such a Wizard could be easily
     *  authored, stored in an XML file, and efficiently presented by
     *  reusing a single panel with a single JTextArea.
     *
     *  @param newStep the number of the step to make a panel for.
     *  @return a new panel for the given step
     */ Modifier public abstract ReferenceType JPanel makePanel FormalParameter BasicType int newStep MethodDeclaration /** Take action at the completion of a step. For example, when the
     *  given step is 0, do nothing; and when the given step is 1, do
     *  the first action.  Argo non-modal wizards should take action as
     *  they do along, as soon as possible, they should not wait until
     *  the final step. Also, if the user pressed ""Finish"" doAction may
     *  be called for steps that never constructored or displayed their
     *  panels.
     *
     * @param oldStep the given step
     */ Modifier public abstract doAction FormalParameter BasicType int oldStep MethodDeclaration /**
     * Do the action of this wizard.
     */ Modifier public doAction StatementExpression MethodInvocation MemberReference step doAction MethodDeclaration /** Undo the action done after the given step. For example, when the
     *  given step is 0, nothing was done, so nothing can be undone; and
     *  when the given step is 1, undo the first action.  Undo allows
     *  users to work part way through fixing a problem, see the partial
     *  result, and explore a different alternative.
     *
     * @param oldStep the given step
     */ Modifier public undoAction FormalParameter BasicType int oldStep MethodDeclaration /**
     * Undo the action.
     */ Modifier public undoAction StatementExpression MethodInvocation MemberReference step undoAction MethodDeclaration /**
     * @return Returns the step.
     */ Modifier protected BasicType int getStep ReturnStatement MemberReference step ReferenceType java ReferenceType io ReferenceType Serializable",0
258,258,"CompilationUnit PackageDeclaration org.argouml.model ClassDeclaration Modifier public /**
 * An exception class to wrap any checked exceptions from the model subsystem.
 *
 * @author Bob Tarling
 */ UmlException ConstructorDeclaration Modifier public /**
     * Constructor the exception with a message.
     *
     * @param message the message
     */ UmlException FormalParameter ReferenceType String message StatementExpression SuperConstructorInvocation MemberReference message ConstructorDeclaration Modifier public /**
     * Constructor the exception with a message and a causing exception.
     *
     * @param message the message
     * @param c the cause of the exception
     */ UmlException FormalParameter ReferenceType String message FormalParameter ReferenceType Throwable c StatementExpression SuperConstructorInvocation MemberReference message MemberReference c ConstructorDeclaration Modifier public /**
     * Constructor the exception a causing exception.
     *
     * @param c the cause of the exception
     */ UmlException FormalParameter ReferenceType Throwable c StatementExpression SuperConstructorInvocation MemberReference c FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1029321716390822627L ReferenceType Exception",0
167,167,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.ui.targetmanager.TargetManager ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ ActionNewReturnAction FieldDeclaration Modifier private final static ReferenceType ActionNewReturnAction VariableDeclarator SINGLETON ClassCreator ReferenceType ActionNewReturnAction ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewReturnAction.
     */ ActionNewReturnAction StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MemberReference Action NAME MethodInvocation Translator Literal ""button.new-returnaction"" localize putValue MethodDeclaration Modifier protected ReferenceType Object createAction ReturnStatement MethodInvocation Model MethodInvocation createReturnAction getCommonBehaviorFactory MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionNewReturnAction getInstance ReturnStatement MemberReference SINGLETON MethodDeclaration Modifier public static ReferenceType ActionNewAction getButtonInstance LocalVariableDeclaration ReferenceType ActionNewAction VariableDeclarator a ClassCreator ReferenceType ActionNewReturnAction MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade ReturnStatement End StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation a MemberReference SHORT_DESCRIPTION MethodInvocation a MemberReference Action NAME getValue putValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation ResourceLoaderWrapper Literal ""ReturnAction"" lookupIconResource StatementExpression MethodInvocation a MemberReference SMALL_ICON MemberReference icon putValue StatementExpression MethodInvocation a MemberReference ROLE MemberReference Roles EFFECT putValue ReturnStatement MemberReference a ReferenceType ActionNewAction",0
704,704,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.awt.event.ActionEvent Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionNewModelElement ClassDeclaration Modifier public /**
 * @since Oct 12, 2002
 * @author jaap.branderhorst@xs4all.nl
 * @stereotype singleton
 */ ActionNewModelElementConstraint FieldDeclaration Modifier private final static ReferenceType ActionNewModelElementConstraint VariableDeclarator SINGLETON ClassCreator ReferenceType ActionNewModelElementConstraint ConstructorDeclaration Modifier protected /**
     * Constructor for ActionNewModelElementConstraint.
     */ ActionNewModelElementConstraint StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget buildConstraint getCoreFactory MethodDeclaration /**
     * @return Returns the SINGLETON.
     */ Modifier public static ReferenceType ActionNewModelElementConstraint getInstance ReturnStatement MemberReference SINGLETON ReferenceType AbstractActionNewModelElement",0
555,555,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import java.util.Iterator Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a classifier might require
 * associations. It checks for inherited associations as well and
 * keeps silent if it finds any.  For usecases it checks the
 * extend/include relationships as well.
 * If the classifier has dependencies defined, then the critic 
 * remains silent (see issue 1129).
 */ CrNoAssociations ConstructorDeclaration Modifier public /**
     * Constructor.
     */ CrNoAssociations StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision RELATIONSHIPS addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_COMPLETENESS setKnowledgeTypes StatementExpression MethodInvocation Literal ""associationEnd"" addTrigger MethodDeclaration /**
     * Decide whether the given design material causes a problem.
     *
     * @param dm the object to criticize
     * the designer who decides the design process
     * @param dsgr the designer
     * @return <CODE>PROBLEM_FOUND</CODE> if there is a problem,
     *         otherwise <CODE>NO_PROBLEM</CODE>
     */ Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End IfStatement BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MemberReference dm getName getFacade Literal null Literal """" BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference dm isAGeneralizableElement getFacade MethodInvocation Model MethodInvocation MemberReference dm isAbstract getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isType getFacade ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isUtility getFacade ReturnStatement MemberReference NO_PROBLEM End IfStatement BinaryOperation > MethodInvocation Model MethodInvocation MemberReference dm getClientDependencies MethodInvocation size getFacade Literal 0 ReturnStatement MemberReference NO_PROBLEM End IfStatement BinaryOperation > MethodInvocation Model MethodInvocation MemberReference dm getSupplierDependencies MethodInvocation size getFacade Literal 0 ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator usecase MemberReference dm LocalVariableDeclaration ReferenceType Collection VariableDeclarator includes MethodInvocation Model MethodInvocation MemberReference usecase getIncludes getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference includes Literal null BinaryOperation >= MethodInvocation includes size Literal 1 BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator extend MethodInvocation Model MethodInvocation MemberReference usecase getExtends getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference extend Literal null BinaryOperation >= MethodInvocation extend size Literal 1 BlockStatement ReturnStatement MemberReference NO_PROBLEM End End IfStatement MethodInvocation MemberReference dm Literal 0 findAssociation ReturnStatement MemberReference NO_PROBLEM End ReturnStatement MemberReference PROBLEM_FOUND MethodDeclaration /**
     * @param dm The classifier to examine.
     * @param depth Number of levels searched.
     * @return true if an association can be found in this classifier
     *		or in any of its generalizations.
     */ Modifier private BasicType boolean findAssociation FormalParameter ReferenceType Object dm FormalParameter BasicType int depth IfStatement MethodInvocation Model MethodInvocation MemberReference dm getAssociationEnds MethodInvocation iterator MethodInvocation hasNext getFacade ReturnStatement Literal true End IfStatement BinaryOperation > MemberReference depth Literal 50 ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference dm getGeneralizations MethodInvocation iterator getFacade WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation iter next getGeneral getFacade IfStatement BinaryOperation == MemberReference parent MemberReference dm ContinueStatement End IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade IfStatement MethodInvocation MemberReference parent BinaryOperation + MemberReference depth Literal 1 findAssociation ReturnStatement Literal true End End End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter2 MethodInvocation Model MethodInvocation MemberReference dm getExtends MethodInvocation iterator getFacade WhileStatement MethodInvocation iter2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation iter2 next getExtension getFacade IfStatement BinaryOperation == MemberReference parent MemberReference dm ContinueStatement End IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade IfStatement MethodInvocation MemberReference parent BinaryOperation + MemberReference depth Literal 1 findAssociation ReturnStatement Literal true End End End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter3 MethodInvocation Model MethodInvocation MemberReference dm getIncludes MethodInvocation iterator getFacade WhileStatement MethodInvocation iter3 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation iter3 next getBase getFacade IfStatement BinaryOperation == MemberReference parent MemberReference dm ContinueStatement End IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade IfStatement MethodInvocation MemberReference parent BinaryOperation + MemberReference depth Literal 1 findAssociation ReturnStatement Literal true End End End End ReturnStatement Literal false ReferenceType CrUML",0
724,724,"CompilationUnit PackageDeclaration org.argouml.language.java.cognitive.critics Import java.util.Collection Import org.argouml.cognitive.Designer Import org.argouml.cognitive.ToDoItem Import org.argouml.cognitive.critics.Wizard Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision Import org.argouml.uml.cognitive.critics.CrUML Import org.argouml.uml.cognitive.critics.WizCueCards ClassDeclaration Modifier public /**
 * Well-formedness rule [2] for MAssociationEnd. See page 28 of UML 1.1
 * Semantics. OMG document ad/97-08-04.
 */ CrMultipleInheritance ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrMultipleInheritance StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision INHERITANCE addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision CODE_GEN addSupportedDecision StatementExpression MethodInvocation Literal ""generalization"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object designMaterial FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference designMaterial LocalVariableDeclaration ReferenceType Collection VariableDeclarator gen MethodInvocation Model MethodInvocation MemberReference cls getGeneralizations getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference gen Literal null BinaryOperation > MethodInvocation gen size Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration Modifier public initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizCueCards BlockStatement LocalVariableDeclaration ReferenceType WizCueCards VariableDeclarator wcc Cast ReferenceType WizCueCards MemberReference w StatementExpression MethodInvocation wcc BinaryOperation + Literal ""Remove the generalization arrow to one of the base "" Literal ""classes of {name}."" addCue StatementExpression MethodInvocation wcc BinaryOperation + Literal ""Optionally, use the MInterface tool to create a new "" Literal ""MInterface for {name} to implement."" addCue StatementExpression MethodInvocation wcc BinaryOperation + Literal ""Use the Realization tool to add a dashed arrow from "" Literal ""{name} to the new MInterface."" addCue StatementExpression MethodInvocation wcc BinaryOperation + BinaryOperation + Literal ""Move method declarations from the unused base class "" Literal ""to the new MInterface and move method bodies down into "" Literal ""{name}."" addCue StatementExpression MethodInvocation wcc BinaryOperation + Literal ""If the unused base class is not used by anything else "" Literal ""then it can be removed."" addCue End MethodDeclaration Modifier public ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizCueCards ReferenceType CrUML",0
557,557,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import java.beans.PropertyChangeEvent Import java.util.Collection Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import org.argouml.model.RemoveAssociationEvent Import org.argouml.uml.ui.UMLComboBoxModel2 ClassDeclaration Modifier public /**
 * The model for the signal combobox on the reception proppanel.
 */ UMLReceptionSignalComboBoxModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLReceptionSignalComboBoxModel.
     */ UMLReceptionSignalComboBoxModel StatementExpression SuperConstructorInvocation Literal ""signal"" Literal false StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal ""ownedElement"" addClassModelEventListener getPump MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAReception getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator rec MemberReference target StatementExpression MethodInvocation removeAllElements LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getSignal getMetaTypes getAllModelElementsOfKindWithModel getModelManagementHelper setElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference rec getSignal getFacade setSelectedItem End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object m ReturnStatement MethodInvocation Model MethodInvocation MemberReference m isASignal getFacade MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getSignal getFacade End ReturnStatement Literal null MethodDeclaration /**
     * Override UMLComboBoxModel2's default handling of RemoveAssociation. We
     * get this from MDR for the previous signal when a different signal is
     * selected. Don't let that remove it from the combo box. Only remove it if
     * the signal was removed from the namespace.
     * <p>
     * @param evt the event describing the property change
     * @see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)
     */ Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation instanceof MemberReference evt ReferenceType RemoveAssociationEvent BlockStatement IfStatement Literal MethodInvocation MethodInvocation evt getPropertyName equals ""ownedElement"" BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement IfStatement MethodInvocation MemberReference o contains BlockStatement StatementExpression Assignment MemberReference buildingModel Literal true = IfStatement BinaryOperation instanceof MemberReference o ReferenceType Collection BlockStatement StatementExpression MethodInvocation Cast ReferenceType Collection MemberReference o removeAll BlockStatement StatementExpression MethodInvocation MemberReference o removeElement End StatementExpression Assignment MemberReference buildingModel Literal false = End End BlockStatement StatementExpression SuperMethodInvocation MemberReference evt propertyChange End ReferenceType UMLComboBoxModel2",0
233,233,"CompilationUnit PackageDeclaration org.argouml.uml.diagram Import java.util.ArrayList Import java.util.EnumMap Import java.util.HashMap Import java.util.List Import java.util.Map Import org.argouml.model.ActivityDiagram Import org.argouml.model.ClassDiagram Import org.argouml.model.CollaborationDiagram Import org.argouml.model.DeploymentDiagram Import org.argouml.model.DiDiagram Import org.argouml.model.Model Import org.argouml.model.SequenceDiagram Import org.argouml.model.StateDiagram Import org.argouml.model.UseCaseDiagram Import org.argouml.uml.diagram.activity.ui.UMLActivityDiagram Import org.argouml.uml.diagram.collaboration.ui.UMLCollaborationDiagram Import org.argouml.uml.diagram.deployment.ui.UMLDeploymentDiagram Import org.argouml.uml.diagram.sequence.ui.UMLSequenceDiagram Import org.argouml.uml.diagram.state.ui.UMLStateDiagram Import org.argouml.uml.diagram.static_structure.ui.UMLClassDiagram Import org.argouml.uml.diagram.use_case.ui.UMLUseCaseDiagram Import org.tigris.gef.base.Diagram Import org.tigris.gef.graph.GraphNodeRenderer ClassDeclaration Modifier public final /**
* Provide a factory method to create different UML diagrams.
* @author Bob Tarling
*/ DiagramFactory FieldDeclaration /**
     * Map from our public enum to our internal implementation classes.
     * This allows use to hide the implementation classes from users of
     * the factory.
     * NOTE: This needs to be initialized before the constructor is called
     * to initialize the singleton.
     */ Modifier private static ReferenceType Map TypeArgument ReferenceType DiagramType TypeArgument ReferenceType Class VariableDeclarator diagramClasses ClassCreator ReferenceType EnumMap TypeArgument ReferenceType DiagramType TypeArgument ReferenceType Class ClassReference ReferenceType DiagramType FieldDeclaration /**
     * The singleton instance.
     */ Modifier private static ReferenceType DiagramFactory VariableDeclarator diagramFactory ClassCreator ReferenceType DiagramFactory EnumDeclaration Modifier public /**
     * Enumeration containing all the different types of UML diagrams.
     */ DiagramType EnumBody EnumConstantDeclaration Class EnumConstantDeclaration UseCase EnumConstantDeclaration State EnumConstantDeclaration Deployment EnumConstantDeclaration Collaboration EnumConstantDeclaration Activity EnumConstantDeclaration Sequence FieldDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ArgoDiagram VariableDeclarator diagrams ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ArgoDiagram ConstructorDeclaration Modifier private DiagramFactory StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation diagramClasses MemberReference DiagramType Class ClassReference ReferenceType UMLClassDiagram put StatementExpression MethodInvocation diagramClasses MemberReference DiagramType UseCase ClassReference ReferenceType UMLUseCaseDiagram put StatementExpression MethodInvocation diagramClasses MemberReference DiagramType State ClassReference ReferenceType UMLStateDiagram put StatementExpression MethodInvocation diagramClasses MemberReference DiagramType Deployment ClassReference ReferenceType UMLDeploymentDiagram put StatementExpression MethodInvocation diagramClasses MemberReference DiagramType Collaboration ClassReference ReferenceType UMLCollaborationDiagram put StatementExpression MethodInvocation diagramClasses MemberReference DiagramType Activity ClassReference ReferenceType UMLActivityDiagram put StatementExpression MethodInvocation diagramClasses MemberReference DiagramType Sequence ClassReference ReferenceType UMLSequenceDiagram put MethodDeclaration /**
     * @return the singleton
     */ Modifier public static ReferenceType DiagramFactory getInstance ReturnStatement MemberReference diagramFactory MethodDeclaration /**
     * @return the list of diagrams
     */ Modifier public ReferenceType List TypeArgument ReferenceType ArgoDiagram getDiagram ReturnStatement MemberReference diagrams MethodDeclaration /**
     * Factory method to create a new default instance of an ArgoDiagram.
     * @param namespace The namespace that (in)directly 
     *                        owns the elements on the diagram
     * @return the newly instantiated class diagram
     */ Modifier public ReferenceType ArgoDiagram createDefaultDiagram FormalParameter ReferenceType Object namespace ReturnStatement MethodInvocation MemberReference DiagramType Class MemberReference namespace Literal null createDiagram MethodDeclaration /**
     * Factory method to create a new instance of an ArgoDiagram.
     *
     * @param type The class of rendering diagram to create
     * @param namespace The namespace that (in)directly 
     *                        owns the elements on the diagram
     * @param machine The StateMachine for the diagram
     *                         (only: statemachine - activitygraph)
     * @return the newly instantiated class diagram
     */ Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType DiagramType type FormalParameter ReferenceType Object namespace FormalParameter ReferenceType Object machine ReturnStatement MethodInvocation MethodInvocation diagramClasses MemberReference type get MemberReference namespace MemberReference machine createDiagram MethodDeclaration /**
     * Factory method to create a new instance of an ArgoDiagram.
     *
     * @param type The class of rendering diagram to create
     * @param namespace The namespace that (in)directly 
     *                        owns the elements on the diagram
     * @param machine The StateMachine for the diagram
     *                         (only: statemachine - activitygraph)
     * @return the newly instantiated class diagram
     * @deprecated for 0.25.4 by tfmorris.  Use 
     * {@link #createDiagram(DiagramType, Object, Object)}.
     */ Modifier public Annotation Deprecated ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Class type FormalParameter ReferenceType Object namespace FormalParameter ReferenceType Object machine LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator diType Literal null IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLClassDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLClassDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType ClassDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLUseCaseDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLUseCaseDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType UseCaseDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLStateDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLStateDiagram MemberReference namespace MemberReference machine = StatementExpression Assignment MemberReference diType ClassReference ReferenceType StateDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLDeploymentDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLDeploymentDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType DeploymentDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLCollaborationDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLCollaborationDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType CollaborationDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLActivityDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLActivityDiagram MemberReference namespace MemberReference machine = StatementExpression Assignment MemberReference diType ClassReference ReferenceType ActivityDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLSequenceDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLSequenceDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType SequenceDiagram = End End End End End End End IfStatement BinaryOperation == MemberReference diagram Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""Unknown diagram type"" End IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement StatementExpression MethodInvocation diagram MethodInvocation MethodInvocation GraphChangeAdapter getInstance addGraphEventListener getGraphModel LocalVariableDeclaration ReferenceType DiDiagram VariableDeclarator dd MethodInvocation GraphChangeAdapter MethodInvocation MemberReference diType MemberReference namespace createDiagram getInstance StatementExpression Cast ReferenceType UMLMutableGraphSupport MethodInvocation diagram getGraphModel End StatementExpression MethodInvocation diagrams MemberReference diagram add ReturnStatement MemberReference diagram MethodDeclaration /**
     * Factory method to create a new instance of a Class Diagram.
     *
     * @param diagram the diagram
     * @return the newly instantiated class diagram
     */ Modifier public ReferenceType ArgoDiagram removeDiagram FormalParameter ReferenceType ArgoDiagram diagram LocalVariableDeclaration ReferenceType DiDiagram VariableDeclarator dd Cast ReferenceType UMLMutableGraphSupport MethodInvocation diagram getGraphModel IfStatement BinaryOperation != MemberReference dd Literal null BlockStatement StatementExpression MethodInvocation GraphChangeAdapter MethodInvocation MemberReference dd removeDiagram getInstance End ReturnStatement MemberReference diagram FieldDeclaration Modifier private final ReferenceType Map VariableDeclarator noStyleProperties ClassCreator ReferenceType HashMap MethodDeclaration Modifier public ReferenceType Object createRenderingElement FormalParameter ReferenceType Object diagram FormalParameter ReferenceType Object model LocalVariableDeclaration ReferenceType GraphNodeRenderer VariableDeclarator rend Cast ReferenceType Diagram MemberReference diagram LocalVariableDeclaration ReferenceType Object VariableDeclarator renderingElement MethodInvocation rend MemberReference model Literal 0 Literal 0 MemberReference noStyleProperties getFigNodeFor ReturnStatement MemberReference renderingElement",0
1232,1232,,0
1059,1059,,1
654,654,"CompilationUnit PackageDeclaration org.argouml.gefext Import java.awt.event.MouseEvent Import org.argouml.i18n.Translator Import org.tigris.gef.base.ModeCreateFigInk Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigInk ClassDeclaration Modifier public /**
 * A Mode to interprete user input while creating a FigInk.
 *
 * @author Michiel
 */ ArgoModeCreateFigInk MethodDeclaration Modifier public ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal ""statusmsg.help.create.ink"" localize MethodDeclaration Modifier public ReferenceType Fig createNewItem FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int snapX FormalParameter BasicType int snapY LocalVariableDeclaration ReferenceType FigInk VariableDeclarator p ClassCreator ReferenceType ArgoFigInk MemberReference snapX MemberReference snapY StatementExpression Assignment MemberReference _lastX MemberReference snapX = StatementExpression Assignment MemberReference _lastY MemberReference snapY = ReturnStatement MemberReference p ReferenceType ModeCreateFigInk",0
1297,1297,,0
928,928,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.activity_graphs Import java.awt.event.ActionEvent Import java.beans.PropertyChangeEvent Import java.util.ArrayList Import java.util.Collection Import java.util.Collections Import java.util.List Import javax.swing.JComboBox Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.AttributeChangeEvent Import org.argouml.model.InvalidElementException Import org.argouml.model.Model Import org.argouml.uml.ui.AbstractActionAddModelElement2 Import org.argouml.uml.ui.AbstractActionRemoveElement Import org.argouml.uml.ui.ActionNavigateNamespace Import org.argouml.uml.ui.UMLComboBox2 Import org.argouml.uml.ui.UMLComboBoxModel2 Import org.argouml.uml.ui.UMLComboBoxNavigator Import org.argouml.uml.ui.UMLModelElementListModel2 Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.UMLSearchableComboBox Import org.argouml.uml.ui.foundation.core.PropPanelClassifier Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * The properties panel for a ClassifierInState.
 * 
 * @author Michiel
 */ PropPanelClassifierInState FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 609338855898756817L FieldDeclaration Modifier private ReferenceType JComboBox VariableDeclarator typeComboBox FieldDeclaration Modifier private ReferenceType JScrollPane VariableDeclarator statesScroll FieldDeclaration Modifier private ReferenceType UMLClassifierInStateTypeComboBoxModel VariableDeclarator typeComboBoxModel ClassCreator ReferenceType UMLClassifierInStateTypeComboBoxModel ConstructorDeclaration Modifier public /**
     * Construct a property panel for a ClassifierInState.
     */ PropPanelClassifierInState StatementExpression SuperConstructorInvocation Literal ""label.classifier-in-state"" MethodInvocation Literal ""ClassifierInState"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.type"" localize ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator Literal ""label.class.navigate.tooltip"" localize MethodInvocation getClassifierInStateTypeSelector addField LocalVariableDeclaration ReferenceType AbstractActionAddModelElement2 VariableDeclarator actionAdd ClassCreator ReferenceType ActionAddCISState LocalVariableDeclaration ReferenceType AbstractActionRemoveElement VariableDeclarator actionRemove ClassCreator ReferenceType ActionRemoveCISState LocalVariableDeclaration ReferenceType UMLMutableLinkedList VariableDeclarator list ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLCISStateListModel MemberReference actionAdd Literal null MemberReference actionRemove Literal true StatementExpression Assignment MemberReference statesScroll ClassCreator ReferenceType JScrollPane MemberReference list = StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.instate"" localize MemberReference statesScroll addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateNamespace addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration Modifier protected ReferenceType JComboBox getClassifierInStateTypeSelector IfStatement BinaryOperation == MemberReference typeComboBox Literal null BlockStatement StatementExpression Assignment MemberReference typeComboBox ClassCreator ReferenceType UMLSearchableComboBox MemberReference typeComboBoxModel ClassCreator ReferenceType ActionSetClassifierInStateType Literal true = End ReturnStatement MemberReference typeComboBox ReferenceType PropPanelClassifier ClassDeclaration ActionSetClassifierInStateType FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 7537482435346517599L ConstructorDeclaration /**
     * Construct an action to set the type of a ClassifierInState.
     */ ActionSetClassifierInStateType StatementExpression SuperConstructorInvocation MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator oldClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator newClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator cis Literal null IfStatement BinaryOperation instanceof MemberReference source ReferenceType UMLComboBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLComboBox2 VariableDeclarator box Cast ReferenceType UMLComboBox2 MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation box getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAClassifierInState getFacade BlockStatement TryStatement StatementExpression Assignment MemberReference oldClassifier MethodInvocation Model MethodInvocation MemberReference obj getType getFacade = CatchClause CatchClauseParameter InvalidElementException e1 ReturnStatement StatementExpression Assignment MemberReference cis MemberReference obj = End LocalVariableDeclaration ReferenceType Object VariableDeclarator cl MethodInvocation box getSelectedItem IfStatement MethodInvocation Model MethodInvocation MemberReference cl isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference newClassifier MemberReference cl = End End IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference newClassifier MemberReference oldClassifier BinaryOperation != MemberReference cis Literal null BinaryOperation != MemberReference newClassifier Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference cis MemberReference newClassifier setType getCoreHelper StatementExpression SuperMethodInvocation MemberReference e actionPerformed End ReferenceType UndoableAction ClassDeclaration UMLClassifierInStateTypeComboBoxModel FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 1705685511742198305L ConstructorDeclaration Modifier public /**
     * Construct a combobox model for a ClassifierInState's type.
     */ UMLClassifierInStateTypeComboBoxModel StatementExpression SuperConstructorInvocation Literal ""type"" Literal false MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade MethodInvocation ! Model MethodInvocation MemberReference o isAClassifierInState getFacade MethodDeclaration /**
     * Get all Classifiers that are not ClassifierInState.
     * 
     * @see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
     */ Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator classifiers ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference model getAllClassifiers getCoreHelper LocalVariableDeclaration ReferenceType Collection VariableDeclarator newList ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference classifiers BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference classifier isAClassifierInState getFacade BlockStatement StatementExpression MethodInvocation newList MemberReference classifier add End End IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAClassifierInState getFacade BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Model MethodInvocation MemberReference type getType getFacade = End IfStatement BinaryOperation != MemberReference type Literal null IfStatement MethodInvocation ! newList MemberReference type contains StatementExpression MethodInvocation newList MemberReference type add End End End StatementExpression MethodInvocation MemberReference newList setElements MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade ReturnStatement MemberReference type End ReturnStatement Literal null MethodDeclaration /**
     * The function in the parent removes items from the list 
     * when deselected. We do not need that here. 
     * 
     * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
     */ Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation instanceof MemberReference evt ReferenceType AttributeChangeEvent BlockStatement IfStatement MethodInvocation evt MethodInvocation Literal ""type"" equals getPropertyName BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation evt getSource MethodInvocation getTarget BinaryOperation != MethodInvocation MemberReference evt getChangedElement Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation MemberReference evt getChangedElement StatementExpression MethodInvocation MemberReference elem setSelectedItem End End End ReferenceType UMLComboBoxModel2 ClassDeclaration ActionAddCISState FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 3892619042821099432L FieldDeclaration Modifier private ReferenceType Object VariableDeclarator choiceClass MethodInvocation Model MethodInvocation getState getMetaTypes ConstructorDeclaration Modifier public /**
     * Construct an action to add a new ClassifierInState.
     */ ActionAddCISState StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal true setMultiSelect MethodDeclaration Modifier protected doIt FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference cis isAClassifierInState getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference cis MemberReference selected setInStates getActivityGraphsHelper End MethodDeclaration Modifier protected ReferenceType List getChoices LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference cis getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference classifier MemberReference choiceClass getAllModelElementsOfKindWithModel getModelManagementHelper addAll End ReturnStatement MemberReference ret MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal ""dialog.title.add-state"" localize MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference cis isAClassifierInState getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference cis getInStates getFacade End ReturnStatement MemberReference Collections EMPTY_LIST ReferenceType AbstractActionAddModelElement2 ClassDeclaration ActionRemoveCISState FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1431919084967610562L ConstructorDeclaration Modifier public /**
     * Construct an action to remove a ClassifierInState.
     */ ActionRemoveCISState StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""menu.popup.remove"" localize MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getObjectToRemove IfStatement BinaryOperation != MemberReference state Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference cis isAClassifierInState getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator states ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference cis getInStates getFacade StatementExpression MethodInvocation states MemberReference state remove StatementExpression MethodInvocation Model MethodInvocation MemberReference cis MemberReference states setInStates getActivityGraphsHelper End End ReferenceType AbstractActionRemoveElement ClassDeclaration UMLCISStateListModel FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 8786823179344335113L ConstructorDeclaration Modifier public /**
     * Construct a list model for ClassifierInState elements.
     */ UMLCISStateListModel StatementExpression SuperConstructorInvocation Literal ""inState"" MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference cis isAClassifierInState getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference cis getInStates getFacade StatementExpression MethodInvocation MemberReference c setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference cis isAClassifierInState getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference cis getInStates getFacade IfStatement MethodInvocation c MemberReference elem contains ReturnStatement Literal true End End ReturnStatement Literal false ReferenceType UMLModelElementListModel2",1
251,251,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.Color Import java.awt.Rectangle Import java.util.Iterator Import java.util.List Import org.argouml.uml.diagram.AttributesCompartmentContainer Import org.argouml.uml.diagram.OperationsCompartmentContainer Import org.argouml.uml.diagram.PathContainer Import org.tigris.gef.base.Layer Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigNode Import org.tigris.gef.presentation.FigPoly Import org.tigris.gef.presentation.FigText ClassDeclaration Modifier public /**
 * An Association Class is represented by 3 separate Figs:
 * <nl>
 * <li>FigAssociationClass is the association edge drawn between two
 * classifiers this displays that association properties of the association
 * class.</li>
 * <li>FigClassAssociationClass is the classifier box that displays the class
 * properties of the association class.</li>
 * </li>
 * FigEdgeAssociationClass is the dashed line that joins these two.</li>
 * </nl>
 *
 * Whenever the user attempts to remove or delete one of these parts then all
 * parts must go. Delete would be handled because the model element is deleted
 * and all parts are listening for such an event and will remove themselves.
 * However if the user attempts to just remove from diagram one of these parts
 * then there is no such event. Hence the removeFromDiagram method is overridden
 * to delegate removal from a single removeFromDiagram method on
 * FigAssociationClass.
 *
 * @author bob.tarling@gmail.com
 */ FigAssociationClass FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 3643715304027095083L ConstructorDeclaration Modifier public /**
     * Construct a new FigAssociationClass during load from PGML.
     */ FigAssociationClass StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation Literal true setBetweenNearestPoints StatementExpression Cast ReferenceType FigPoly MethodInvocation getFig StatementExpression MethodInvocation Literal false setDashed ConstructorDeclaration Modifier public /**
     * Construct a new FigAssociationClass from user interaction.
     *
     * @param ed
     *            the edge
     * @param lay
     *            the layer
     */ FigAssociationClass FormalParameter ReferenceType Object ed FormalParameter ReferenceType Layer lay StatementExpression ExplicitConstructorInvocation StatementExpression MethodInvocation MemberReference lay setLayer StatementExpression MethodInvocation MemberReference ed setOwner MethodDeclaration /**
     * Remove entire composite Fig from Diagram. Discover the attached
     * FigEdgeAssociationClass and the FigClassAssociationClass attached to
     * that. Remove them from the diagram before removing this.
     */ Modifier protected Annotation Override removeFromDiagramImpl LocalVariableDeclaration ReferenceType FigEdgeAssociationClass VariableDeclarator figEdgeLink Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator edges Literal null LocalVariableDeclaration ReferenceType FigEdgePort VariableDeclarator figEdgePort MethodInvocation getEdgePort IfStatement BinaryOperation != MemberReference figEdgePort Literal null BlockStatement StatementExpression Assignment MemberReference edges MethodInvocation figEdgePort getFigEdges = End IfStatement BinaryOperation != MemberReference edges Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator BinaryOperation && MethodInvocation it hasNext BinaryOperation == MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeAssociationClass BlockStatement StatementExpression Assignment MemberReference figEdgeLink Cast ReferenceType FigEdgeAssociationClass MemberReference o = End End End IfStatement BinaryOperation != MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figClassBox MethodInvocation figEdgeLink getDestFigNode IfStatement BinaryOperation instanceof MemberReference figClassBox ReferenceType FigClassAssociationClass BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink getSourceFigNode = End StatementExpression MethodInvocation figEdgeLink removeFromDiagramImpl StatementExpression Cast ReferenceType FigClassAssociationClass MemberReference figClassBox End StatementExpression SuperMethodInvocation removeFromDiagramImpl MethodDeclaration Modifier public Annotation Override setFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation MethodInvocation Literal false setDashed getFig MethodDeclaration Modifier protected Annotation Override ReferenceType FigText getNameFig ReturnStatement Literal null MethodDeclaration /**
     * @return the bounds of the operations compartment for the associated
     *         FigClassAssociationClass.
     * @see org.argouml.uml.diagram.AttributesCompartmentContainer#getAttributesBounds()
     */ Modifier public ReferenceType Rectangle getAttributesBounds IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null ReturnStatement MethodInvocation MethodInvocation getAttributesBounds getAssociationClass ReturnStatement ClassCreator ReferenceType Rectangle Literal 0 Literal 0 Literal 0 Literal 0 End MethodDeclaration /**
     * Overrided in order to implement AttributesCompartmentContainer.
     */ Modifier public BasicType boolean isAttributesVisible IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null ReturnStatement MethodInvocation MethodInvocation isAttributesVisible getAssociationClass ReturnStatement Literal true End MethodDeclaration /**
     * Overrided in order to implement AttributesCompartmentContainer.
     */ Modifier public setAttributesVisible FormalParameter BasicType boolean visible IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference visible setAttributesVisible getAssociationClass End MethodDeclaration /**
     * Overrided in order to implement PathCompartmentContainer.
     */ Modifier public BasicType boolean isPathVisible IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null ReturnStatement MethodInvocation MethodInvocation isPathVisible getAssociationClass ReturnStatement Literal false End MethodDeclaration /**
     * Overrided in order to implement PathCompartmentContainer.
     */ Modifier public setPathVisible FormalParameter BasicType boolean visible IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference visible setPathVisible getAssociationClass End MethodDeclaration /**
     * Overrided in order to implement OperationsCompartmentContainer.
     */ Modifier public ReferenceType Rectangle getOperationsBounds IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getOperationsBounds getAssociationClass BlockStatement ReturnStatement ClassCreator ReferenceType Rectangle Literal 0 Literal 0 Literal 0 Literal 0 End MethodDeclaration /**
     * Overrided in order to implement OperationsCompartmentContainer.
     */ Modifier public BasicType boolean isOperationsVisible IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation isOperationsVisible getAssociationClass BlockStatement ReturnStatement Literal true End MethodDeclaration /**
     * Overrided in order to implement OperationsCompartmentContainer.
     */ Modifier public setOperationsVisible FormalParameter BasicType boolean visible IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference visible setOperationsVisible getAssociationClass End MethodDeclaration /**
     * Overrided in order to set fill color of contained
     * FigClassAssociationClass.
     */ Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color color IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference color setFillColor getAssociationClass End MethodDeclaration /**
     * Overrided in order to get fill color of contained
     * FigClassAssociationClass.
     */ Modifier public Annotation Override ReferenceType Color getFillColor IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getFillColor getAssociationClass BlockStatement ReturnStatement MemberReference Color white End MethodDeclaration /**
     * Overrided in order to set line color of contained
     * FigClassAssociationClass.
     */ Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color arg0 StatementExpression SuperMethodInvocation MemberReference arg0 setLineColor IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference arg0 setLineColor getAssociationClass End IfStatement BinaryOperation != MethodInvocation getFigEdgeAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference arg0 setLineColor getFigEdgeAssociationClass End MethodDeclaration /**
     * Gets FigClassAssociationClass that is contained in this
     * FigAssociationClass.
     *
     * @return FigClassAssociationClass that is contained in this
     *         FigAssociationClass.
     */ Modifier public ReferenceType FigClassAssociationClass getAssociationClass LocalVariableDeclaration ReferenceType FigEdgeAssociationClass VariableDeclarator figEdgeLink Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator edges Literal null LocalVariableDeclaration ReferenceType FigEdgePort VariableDeclarator figEdgePort This MethodInvocation getEdgePort IfStatement BinaryOperation != MemberReference figEdgePort Literal null BlockStatement StatementExpression Assignment MemberReference edges MethodInvocation figEdgePort getFigEdges = End IfStatement BinaryOperation != MemberReference edges Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator BinaryOperation && MethodInvocation it hasNext BinaryOperation == MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeAssociationClass BlockStatement StatementExpression Assignment MemberReference figEdgeLink Cast ReferenceType FigEdgeAssociationClass MemberReference o = End End End LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figClassBox Literal null IfStatement BinaryOperation != MemberReference figEdgeLink Literal null BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink getDestFigNode = IfStatement BinaryOperation instanceof MemberReference figClassBox ReferenceType FigClassAssociationClass BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink getSourceFigNode = End End ReturnStatement Cast ReferenceType FigClassAssociationClass MemberReference figClassBox MethodDeclaration /**
     * Gets FigEdgeAssociationClass that is contained in this
     * FigAssociationClass.
     *
     * @return FigEdgeAssociationClass that is contained in this
     *         FigAssociationClass
     */ Modifier public ReferenceType FigEdgeAssociationClass getFigEdgeAssociationClass LocalVariableDeclaration ReferenceType FigEdgeAssociationClass VariableDeclarator figEdgeLink Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator edges Literal null LocalVariableDeclaration ReferenceType FigEdgePort VariableDeclarator figEdgePort This MethodInvocation getEdgePort IfStatement BinaryOperation != MemberReference figEdgePort Literal null BlockStatement StatementExpression Assignment MemberReference edges MethodInvocation figEdgePort getFigEdges = End IfStatement BinaryOperation != MemberReference edges Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator BinaryOperation && MethodInvocation it hasNext BinaryOperation == MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeAssociationClass BlockStatement StatementExpression Assignment MemberReference figEdgeLink Cast ReferenceType FigEdgeAssociationClass MemberReference o = End End End ReturnStatement MemberReference figEdgeLink ReferenceType FigAssociation ReferenceType AttributesCompartmentContainer ReferenceType PathContainer ReferenceType OperationsCompartmentContainer",1
734,734,"CompilationUnit PackageDeclaration org.argouml.model InterfaceDeclaration Modifier public /**
 * The different VisibilityKinds.
 */ VisibilityKind MethodDeclaration /**
     * @return Returns the Private VisibilityKind.
     */ ReferenceType Object getPrivate MethodDeclaration /**
     * @return Returns the Protected VisibilityKind.
     */ ReferenceType Object getProtected MethodDeclaration /**
     * @return Returns the Public VisibilityKind.
     */ ReferenceType Object getPublic MethodDeclaration /**
     * @return Returns the Package VisibilityKind.
     */ ReferenceType Object getPackage",0
1159,1159,,0
587,587,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * The model for the listbox showing the contexts of a signal.
 *
 * @author mvw@tigris.org
 */ UMLSignalContextListModel ConstructorDeclaration Modifier public /**
     * The constructor.
     */ UMLSignalContextListModel StatementExpression SuperConstructorInvocation Literal ""context"" MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getContexts getFacade setAllElements End MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isABehavioralFeature getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getContexts MethodInvocation MemberReference element contains getFacade ReferenceType UMLModelElementListModel2",0
1019,1019,,1
18,18,"CompilationUnit PackageDeclaration org.argouml.ui Import java.awt.BorderLayout Import java.awt.Component Import java.awt.Dimension Import java.awt.FlowLayout Import java.awt.Font Import java.awt.event.ActionEvent Import java.awt.event.ActionListener Import java.awt.event.FocusAdapter Import java.awt.event.FocusEvent Import java.util.Enumeration Import javax.swing.Icon Import javax.swing.JLabel Import javax.swing.JPanel Import javax.swing.JSlider Import javax.swing.JTextField Import javax.swing.event.ChangeEvent Import javax.swing.event.ChangeListener Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.tigris.swidgets.PopupButton Import org.tigris.gef.base.Editor Import org.tigris.gef.base.Globals ClassDeclaration Modifier public /**
 * A button that can be used to change the zoom magnification of the current
 * diagram. When the user presses the button, a popup is displayed which
 * contains a vertical slider representing the range of zoom magnifications.
 * Dragging the slider changes the zoom magnification for the current diagram.
 *
 * @author Jeremy Jones
 */ ZoomSliderButton FieldDeclaration /**
     * Used for loading the zoom icon from the Zoom Reset action.
     */ Modifier private final static ReferenceType String VariableDeclarator RESOURCE_NAME Literal ""Zoom Reset"" FieldDeclaration /**
     * Font used for the slider tick labels and for the current magnification
     * value label.
     */ Modifier private final static ReferenceType Font VariableDeclarator LABEL_FONT ClassCreator ReferenceType Font Literal ""Dialog"" MemberReference Font PLAIN Literal 10 FieldDeclaration /**
     * The minimum zoom magnification slider value.
     */ Modifier private final static BasicType int VariableDeclarator MINIMUM_ZOOM Literal 0 FieldDeclaration /**
     * The maximum zoom magnification slider value.
     */ Modifier private final static BasicType int VariableDeclarator MAXIMUM_ZOOM Literal 500 FieldDeclaration /**
     * The preferred height of the slider component.
     */ Modifier private final static BasicType int VariableDeclarator SLIDER_HEIGHT Literal 250 FieldDeclaration /**
     * The slider component.
     */ Modifier private ReferenceType JSlider VariableDeclarator slider Literal null FieldDeclaration /**
     * The text field which shows the current zoom magnification value.
     */ Modifier private ReferenceType JTextField VariableDeclarator currentValue Literal null ConstructorDeclaration Modifier public /**
     * Constructs a new ZoomSliderButton.
     */ ZoomSliderButton StatementExpression SuperConstructorInvocation LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation ResourceLoaderWrapper MemberReference RESOURCE_NAME lookupIcon StatementExpression MethodInvocation MemberReference icon setIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""button.zoom"" localize setToolTipText MethodDeclaration /**
     * Creates the slider popup component.
     */ Modifier private createPopupComponent StatementExpression Assignment MemberReference slider ClassCreator ReferenceType JSlider MemberReference JSlider VERTICAL MemberReference MINIMUM_ZOOM MemberReference MAXIMUM_ZOOM MemberReference MINIMUM_ZOOM = StatementExpression MethodInvocation slider Literal true setInverted StatementExpression MethodInvocation slider BinaryOperation / MemberReference MAXIMUM_ZOOM Literal 10 setMajorTickSpacing StatementExpression MethodInvocation slider BinaryOperation / MemberReference MAXIMUM_ZOOM Literal 20 setMinorTickSpacing StatementExpression MethodInvocation slider Literal true setPaintTicks StatementExpression MethodInvocation slider Literal true setPaintTrack LocalVariableDeclaration BasicType int VariableDeclarator sliderBaseWidth MethodInvocation slider MemberReference width getPreferredSize StatementExpression MethodInvocation slider Literal true setPaintLabels ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator components MethodInvocation slider MethodInvocation elements getLabelTable MethodInvocation components hasMoreElements BlockStatement StatementExpression Cast ReferenceType Component MethodInvocation components nextElement End StatementExpression MethodInvocation slider MethodInvocation Translator Literal ""button.zoom.slider-tooltip"" localize setToolTipText StatementExpression MethodInvocation slider ClassCreator ReferenceType ChangeListener MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType ChangeEvent e StatementExpression MethodInvocation handleSliderValueChange addChangeListener LocalVariableDeclaration BasicType int VariableDeclarator labelWidth BinaryOperation + MethodInvocation slider MethodInvocation MethodInvocation String MemberReference MAXIMUM_ZOOM valueOf stringWidth MemberReference LABEL_FONT getFontMetrics Literal 6 StatementExpression MethodInvocation slider ClassCreator ReferenceType Dimension BinaryOperation + MemberReference sliderBaseWidth MemberReference labelWidth MemberReference SLIDER_HEIGHT setPreferredSize StatementExpression Assignment MemberReference currentValue ClassCreator ReferenceType JTextField Literal 5 = StatementExpression MethodInvocation currentValue MemberReference JLabel CENTER setHorizontalAlignment StatementExpression MethodInvocation currentValue MemberReference LABEL_FONT setFont StatementExpression MethodInvocation currentValue MethodInvocation Translator Literal ""button.zoom.current-zoom-magnification"" localize setToolTipText StatementExpression MethodInvocation updateCurrentValueLabel StatementExpression MethodInvocation currentValue ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation handleTextEntry addActionListener StatementExpression MethodInvocation currentValue ClassCreator ReferenceType FocusAdapter MethodDeclaration Modifier public focusLost FormalParameter ReferenceType FocusEvent e StatementExpression MethodInvocation handleTextEntry addFocusListener LocalVariableDeclaration ReferenceType JPanel VariableDeclarator currentValuePanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType FlowLayout MemberReference FlowLayout CENTER Literal 0 Literal 0 StatementExpression MethodInvocation currentValuePanel MemberReference currentValue add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator zoomPanel ClassCreator ReferenceType JPanel ClassCreator ReferenceType BorderLayout Literal 0 Literal 0 StatementExpression MethodInvocation zoomPanel MemberReference slider MemberReference BorderLayout CENTER add StatementExpression MethodInvocation zoomPanel MemberReference currentValuePanel MemberReference BorderLayout NORTH add StatementExpression MethodInvocation MemberReference zoomPanel setPopupComponent MethodDeclaration /**
     * Update the slider value every time the popup is shown.
     */ Modifier protected showPopup IfStatement BinaryOperation == MemberReference slider Literal null BlockStatement StatementExpression MethodInvocation createPopupComponent End LocalVariableDeclaration ReferenceType Editor VariableDeclarator ed MethodInvocation Globals curEditor IfStatement BinaryOperation != MemberReference ed Literal null BlockStatement StatementExpression MethodInvocation slider Cast BasicType int BinaryOperation * MethodInvocation ed getScale Literal 100d setValue End StatementExpression SuperMethodInvocation showPopup StatementExpression MethodInvocation slider requestFocus MethodDeclaration /**
     * Called when the slider value changes.
     */ Modifier private handleSliderValueChange StatementExpression MethodInvocation updateCurrentValueLabel LocalVariableDeclaration BasicType double VariableDeclarator zoomPercentage BinaryOperation / MethodInvocation slider getValue Literal 100d LocalVariableDeclaration ReferenceType Editor VariableDeclarator ed MethodInvocation Globals curEditor IfStatement BinaryOperation || BinaryOperation == MemberReference ed Literal null BinaryOperation <= MemberReference zoomPercentage Literal 0.0 BlockStatement ReturnStatement End IfStatement BinaryOperation != MemberReference zoomPercentage MethodInvocation ed getScale BlockStatement StatementExpression MethodInvocation ed MemberReference zoomPercentage setScale StatementExpression MethodInvocation ed damageAll End MethodDeclaration /**
     * Called when the text field value changes.
     */ Modifier private handleTextEntry LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation currentValue getText IfStatement MethodInvocation value Literal ""%"" endsWith BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value Literal 0 BinaryOperation - MethodInvocation value length Literal 1 substring = End TryStatement LocalVariableDeclaration BasicType int VariableDeclarator newZoom MethodInvocation Integer MemberReference value parseInt IfStatement BinaryOperation || BinaryOperation < MemberReference newZoom MemberReference MINIMUM_ZOOM BinaryOperation > MemberReference newZoom MemberReference MAXIMUM_ZOOM BlockStatement ThrowStatement ClassCreator ReferenceType NumberFormatException End StatementExpression MethodInvocation slider MemberReference newZoom setValue CatchClause CatchClauseParameter NumberFormatException ex StatementExpression MethodInvocation updateCurrentValueLabel MethodDeclaration /**
     * Sets the current value label's text to the current slider value.
     */ Modifier private updateCurrentValueLabel StatementExpression MethodInvocation currentValue BinaryOperation + MethodInvocation String MethodInvocation slider getValue valueOf Literal '%' setText ReferenceType PopupButton",1
200,200,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import org.argouml.model.Model Import org.argouml.uml.ui.UMLModelElementListModel2 ClassDeclaration Modifier public /**
 * @since Dec 15, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLTransitionTargetListModel ConstructorDeclaration Modifier public /**
     * Constructor for UMLStateMachineTopListModel.
     */ UMLTransitionTargetListModel StatementExpression SuperConstructorInvocation Literal ""target"" MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getTarget getFacade addElement MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MemberReference element MethodInvocation Model MethodInvocation MethodInvocation getTarget getTarget getFacade ReferenceType UMLModelElementListModel2",0
1524,1524,,0
1138,1138,,1
743,743,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.awt.Color Import javax.swing.JScrollPane Import javax.swing.UIManager Import org.argouml.application.api.Argo Import org.argouml.configuration.Configuration Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.tigris.gef.presentation.Fig Import org.tigris.swidgets.Horizontal Import org.tigris.swidgets.LabelledLayout Import org.tigris.swidgets.Vertical ClassDeclaration Modifier public /**
 * This the tab in the details pane for documentation.<p>
 *
 * All data in this tab is stored as Tagged Values,
 * and saved and reloaded correctly.<p>
 *
 * Selecting the menu Edit>Settings... and setting the user name
 * does not affect the author field
 * in the documentation tab. <p>
 *
 * Enabling output from the documentation fields when generating code as
 * embedded in javadocs and for html/diagram creation is considered important
 * by users.<p>
 *
 * When importing sources, already saved javadoc statements are not
 * automatically added to the documenation Jtext window. When Adding notes to
 * classes the notes are not included in the documentation text window.<p>
 *
 * The ""Since"" field is not validated for real date. Change to DateField?<p>
 *
 * Note that all fields in the TabDocumentation are added automatically
 * to the tagged value tab view.<p>
 *
 * Refactored by: raphael-langerhorst@gmx.at; 5th April 03<p>
 * Changes: <ul>
 * <li>uses LabelledLayout instead of GridBagLayout
 * <li>uses the new event pump introduced late 2002 by Jaap</ul><p>
 *
 * UMLModelElementTaggedValueDocument is used to access the tagged values of an
 * MModelElement.
 */ TabDocumentation FieldDeclaration Modifier private static ReferenceType String VariableDeclarator orientation MethodInvocation Configuration MethodInvocation Configuration Literal ""layout"" Literal ""tabdocumentation"" makeKey getString ConstructorDeclaration Modifier public /**
     * Construct new documentation tab
     */ TabDocumentation StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""tab.documentation"" localize TernaryExpression BinaryOperation || MethodInvocation orientation Literal ""West"" equals MethodInvocation orientation Literal ""East"" equals MethodInvocation Vertical getInstance MethodInvocation Horizontal getInstance StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.author"" localize ClassCreator ReferenceType UMLTextField2 ClassCreator ReferenceType UMLModelElementTaggedValueDocument MemberReference Argo AUTHOR_TAG addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.version"" localize ClassCreator ReferenceType UMLTextField2 ClassCreator ReferenceType UMLModelElementTaggedValueDocument MemberReference Argo VERSION_TAG addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.since"" localize ClassCreator ReferenceType UMLTextField2 ClassCreator ReferenceType UMLModelElementTaggedValueDocument MemberReference Argo SINCE_TAG addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.deprecated"" localize ClassCreator ReferenceType UMLDeprecatedCheckBox addField LocalVariableDeclaration ReferenceType UMLTextArea2 VariableDeclarator see ClassCreator ReferenceType UMLTextArea2 ClassCreator ReferenceType UMLModelElementTaggedValueDocument MemberReference Argo SEE_TAG StatementExpression MethodInvocation see Literal 2 setRows StatementExpression MethodInvocation see Literal true setLineWrap StatementExpression MethodInvocation see Literal true setWrapStyleWord LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator spSee ClassCreator ReferenceType JScrollPane StatementExpression MethodInvocation spSee MethodInvocation MemberReference see add getViewport StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.see"" localize MemberReference spSee addField StatementExpression MethodInvocation MethodInvocation LabelledLayout getSeperator add LocalVariableDeclaration ReferenceType UMLTextArea2 VariableDeclarator doc ClassCreator ReferenceType UMLTextArea2 ClassCreator ReferenceType UMLModelElementTaggedValueDocument MemberReference Argo DOCUMENTATION_TAG StatementExpression MethodInvocation doc Literal 2 setRows StatementExpression MethodInvocation doc Literal true setLineWrap StatementExpression MethodInvocation doc Literal true setWrapStyleWord LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator spDocs ClassCreator ReferenceType JScrollPane StatementExpression MethodInvocation spDocs MethodInvocation MemberReference doc add getViewport StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.documentation"" localize MemberReference spDocs addField LocalVariableDeclaration ReferenceType UMLTextArea2 VariableDeclarator comment ClassCreator ReferenceType UMLTextArea2 ClassCreator ReferenceType UMLModelElementCommentDocument Literal false StatementExpression MethodInvocation comment Literal 2 setRows StatementExpression MethodInvocation comment Literal true setLineWrap StatementExpression MethodInvocation comment Literal true setWrapStyleWord StatementExpression MethodInvocation comment Literal false setEnabled StatementExpression MethodInvocation comment MethodInvocation comment getForeground setDisabledTextColor LocalVariableDeclaration ReferenceType Color VariableDeclarator c ClassCreator ReferenceType Color MethodInvocation UIManager MethodInvocation getRGB Literal ""TextField.inactiveBackground"" getColor StatementExpression MethodInvocation comment MemberReference c setBackground LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator spComment ClassCreator ReferenceType JScrollPane StatementExpression MethodInvocation spComment MethodInvocation MemberReference comment add getViewport StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.comment.name"" localize MemberReference spComment addField LocalVariableDeclaration ReferenceType UMLTextArea2 VariableDeclarator commentBody ClassCreator ReferenceType UMLTextArea2 ClassCreator ReferenceType UMLModelElementCommentDocument Literal true StatementExpression MethodInvocation commentBody Literal 2 setRows StatementExpression MethodInvocation commentBody Literal true setLineWrap StatementExpression MethodInvocation commentBody Literal true setWrapStyleWord StatementExpression MethodInvocation commentBody Literal false setEnabled StatementExpression MethodInvocation commentBody MethodInvocation comment getForeground setDisabledTextColor StatementExpression MethodInvocation commentBody MemberReference c setBackground LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator spCommentBody ClassCreator ReferenceType JScrollPane StatementExpression MethodInvocation spCommentBody MethodInvocation MemberReference commentBody add getViewport StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.comment.body"" localize MemberReference spCommentBody addField StatementExpression MethodInvocation Literal 18 setButtonPanelSize MethodDeclaration /**
     * Checks if the tab should be enabled. Returns true if the target
     * returned by getTarget is a modelelement or if that target shows up as Fig
     * on the active diagram and has a modelelement as owner.
     *
     * @return true if this tab should be enabled, otherwise false.
     */ Modifier public BasicType boolean shouldBeEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget ReturnStatement MethodInvocation MemberReference target shouldBeEnabled MethodDeclaration Modifier public Annotation Override BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target MemberReference target = ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade ReferenceType PropPanel",0
1590,1590,,0
1561,1561,,1
809,809,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.collaborations Import javax.swing.JList Import javax.swing.JPanel Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLMultiplicityPanel Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.foundation.core.PropPanelClassifier Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * TODO: this property panel needs refactoring to remove dependency on
 *       old gui components.
 */ PropPanelClassifierRole FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5407549104529347513L FieldDeclaration /**
     * The combobox for the multiplicity of this type.
     */ Modifier private ReferenceType UMLMultiplicityPanel VariableDeclarator multiplicityComboBox ConstructorDeclaration Modifier public /**
     * Construct a property panel for a ClassifierRole.
     */ PropPanelClassifierRole StatementExpression SuperConstructorInvocation Literal ""label.classifier-role"" MethodInvocation Literal ""ClassifierRole"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.namespace"" localize MethodInvocation getNamespaceSelector addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.multiplicity"" localize MethodInvocation getMultiplicityComboBox addField LocalVariableDeclaration ReferenceType JList VariableDeclarator baseList ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLClassifierRoleBaseListModel MemberReference ActionAddClassifierRoleBase SINGLETON Literal null MethodInvocation ActionRemoveClassifierRoleBase getInstance Literal true StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.base"" localize ClassCreator ReferenceType JScrollPane MemberReference baseList addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.generalizations"" localize MethodInvocation getGeneralizationScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.specializations"" localize MethodInvocation getSpecializationScroll addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.associationrole-ends"" localize MethodInvocation getAssociationEndScroll addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType JList VariableDeclarator availableContentsList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLClassifierRoleAvailableContentsListModel StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.available-contents"" localize ClassCreator ReferenceType JScrollPane MemberReference availableContentsList addField LocalVariableDeclaration ReferenceType JList VariableDeclarator availableFeaturesList ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLClassifierRoleAvailableFeaturesListModel StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.available-features"" localize ClassCreator ReferenceType JScrollPane MemberReference availableFeaturesList addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation MethodInvocation getActionNewReception addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration /**
     * Returns the multiplicityComboBox.
     * @return UMLMultiplicityComboBox2
     */ Modifier protected ReferenceType JPanel getMultiplicityComboBox IfStatement BinaryOperation == MemberReference multiplicityComboBox Literal null BlockStatement StatementExpression Assignment MemberReference multiplicityComboBox ClassCreator ReferenceType UMLMultiplicityPanel = End ReturnStatement MemberReference multiplicityComboBox ReferenceType PropPanelClassifier",0
1,1,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.static_structure.layout Import java.awt.Dimension Import java.awt.Point Import java.util.ArrayList Import java.util.Iterator Import java.util.List Import java.util.Vector Import org.argouml.uml.diagram.layout.LayoutedNode Import org.argouml.uml.diagram.static_structure.ui.FigComment Import org.argouml.uml.diagram.static_structure.ui.FigInterface Import org.argouml.uml.diagram.static_structure.ui.FigPackage Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigNode ClassDeclaration /**
 * This class represents a node in the classdiagram (a class, interface or
 * package).
 * <p>
 * 
 * Things a node has to know:
 * <ul>
 * <li>Up- and downlinks for positioning in the hierarchy
 * <li>Weight of this node. This weight has to be strongly influenced by the
 * parent-nodes, because otherwise the order of nodes in the current row will
 * not be compatible with the order of the nodes in the row above.
 * </ul>
 */ ClassdiagramNode FieldDeclaration /**
     * Constant to be used as an initializer when this node is not placed at an
     * column.
     */ Modifier public final static BasicType int VariableDeclarator NOCOLUMN Literal - 1 FieldDeclaration /**
     * Constant to be used as an initializer when this node has no rank assigned
     * yet.
     */ Modifier public final static BasicType int VariableDeclarator NORANK Literal - 1 FieldDeclaration /**
     * Constant to be used as an initializer when this node has no weight.
     */ Modifier public final static BasicType int VariableDeclarator NOWEIGHT Literal - 1 FieldDeclaration /**
     * Attribute column represents the current column of this node.
     */ Modifier private BasicType int VariableDeclarator column MemberReference NOCOLUMN FieldDeclaration /**
     * Attribute downlinks represents the nodes that contain the figures, which
     * are sources of edges with the figure of this node as destination.
     */ Modifier private ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator downlinks ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode FieldDeclaration /**
     * Offset used for edges, which have this node as the ""upper"" node.
     */ Modifier private BasicType int VariableDeclarator edgeOffset Literal 0 FieldDeclaration /**
     * Attribute figure represents the figure that this ClassdiagramNode
     * represents during the layout process.
     */ Modifier private ReferenceType FigNode VariableDeclarator figure Literal null FieldDeclaration /**
     * Attribute placementHint keeps information about preferred positioning.
     */ Modifier private BasicType int VariableDeclarator placementHint Literal - 1 FieldDeclaration /**
     * Attribute rank represents the current rank (i.e. row) of this node.
     */ Modifier private BasicType int VariableDeclarator rank MemberReference NORANK FieldDeclaration /**
     * Attribute uplinks represents the nodes that contain the figures, which
     * are destinations of edges with the figure of this node as source.
     */ Modifier private ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator uplinks ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode FieldDeclaration /**
     * This attribute stores the 'weight' of this node. This is a computed
     * attribute that is used during the horizontal placement process. It's
     * based on the position of the 'uplinked' objects. The actual purpose is to
     * minimize the number of link crossings in the diagram. Since we don't
     * compute the actual number of link crossings, we look where our uplinked
     * objects are, and then try to place our object in a way, that we can
     * expect to have a minimal number of crossings.
     */ Modifier private BasicType float VariableDeclarator weight MemberReference NOWEIGHT FieldDeclaration Modifier private final static BasicType float VariableDeclarator UPLINK_FACTOR Literal 5 ConstructorDeclaration Modifier public /**
     * Operation ClassdiagramNode creates a new ClassdiagramNode.
     * 
     * @param f
     *            represents the figure in the diagram, that peers this layout
     *            node.
     */ ClassdiagramNode FormalParameter ReferenceType FigNode f StatementExpression MethodInvocation MemberReference f setFigure MethodDeclaration /**
     * Operation setDownlinks changes the value of the attribute _downlinks.
     * 
     * @param newDownlink
     *            Represents the new value of _downlinks.
     */ Modifier public addDownlink FormalParameter ReferenceType ClassdiagramNode newDownlink StatementExpression MethodInvocation downlinks MemberReference newDownlink add MethodDeclaration /**
     * Add a constant to the rank of this node.
     * 
     * @param n
     *            The value to add.
     */ Modifier public addRank FormalParameter BasicType int n StatementExpression MethodInvocation BinaryOperation + MemberReference n MethodInvocation getRank setRank MethodDeclaration /**
     * Add an uplink to this node.
     * 
     * @param newUplink
     *            represents the new uplinks.
     */ Modifier public addUplink FormalParameter ReferenceType ClassdiagramNode newUplink StatementExpression MethodInvocation uplinks MemberReference newUplink add MethodDeclaration /**
     * Calculate the weight of this node. The function distinguishes between
     * note-nodes and standard-nodes, because a note should be positioned to the
     * right of its first related node, if it exists. Therefor the weight is a
     * function of the weight of the related node. For standard-nodes the weight
     * is a function of up-/downlinks, column and uplink factor.
     * 
     * @return The weight of this node.
     */ Modifier public BasicType float calculateWeight StatementExpression Assignment MemberReference weight Literal 0 = ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference uplinks BlockStatement StatementExpression Assignment MemberReference weight MethodInvocation Math MemberReference weight BinaryOperation * BinaryOperation * MethodInvocation node getWeight MemberReference UPLINK_FACTOR BinaryOperation + Literal 1 BinaryOperation / Literal 1 MethodInvocation Math Literal 1 BinaryOperation + MethodInvocation node getColumn MemberReference UPLINK_FACTOR max max = End StatementExpression Assignment MemberReference weight BinaryOperation + MethodInvocation getSubtreeWeight BinaryOperation / Literal 1 MethodInvocation Math Literal 1 BinaryOperation + MethodInvocation getColumn MemberReference UPLINK_FACTOR max += ReturnStatement MemberReference weight MethodDeclaration /**
     * The ""natural order"" for ClassdiagramNodes is defined by the following
     * order.
     * <ul>
     * <li>First standalone, then linked nodes
     * <li>First Packages, then Interfaces/Classes/Notes
     * <li>increasing rank (rownumber)
     * <li>decreasing weight
     * <li>name of model object
     * <li>increasing hashcode (for uniqueness)
     * </ul>
     * 
     * @see java.lang.Comparable#compareTo(java.lang.Object)
     */ Modifier public BasicType int compareTo FormalParameter ReferenceType Object arg0 LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node Cast ReferenceType ClassdiagramNode MemberReference arg0 LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 StatementExpression Assignment MemberReference result MethodInvocation Boolean MethodInvocation MethodInvocation Boolean MethodInvocation isStandalone valueOf compareTo MethodInvocation node isStandalone valueOf = IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement StatementExpression Assignment MemberReference result BinaryOperation - This MethodInvocation getTypeOrderNumer MethodInvocation node getTypeOrderNumer = End IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement StatementExpression Assignment MemberReference result BinaryOperation - This MethodInvocation getRank MethodInvocation node getRank = End IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement StatementExpression Assignment MemberReference result Cast BasicType int MethodInvocation Math BinaryOperation - MethodInvocation node getWeight This MethodInvocation getWeight signum = End IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement StatementExpression Assignment MemberReference result MethodInvocation String MethodInvocation MethodInvocation String MethodInvocation node MethodInvocation getOwner getFigure valueOf compareTo This MethodInvocation getFigure MethodInvocation getOwner valueOf = End IfStatement BinaryOperation == MemberReference result Literal 0 BlockStatement StatementExpression Assignment MemberReference result BinaryOperation - MethodInvocation node hashCode This MethodInvocation hashCode = End ReturnStatement MemberReference result MethodDeclaration /**
     * Operation getColumn returns the value of the attribute _column.
     * 
     * @return The value of the attribute _column.
     */ Modifier public BasicType int getColumn ReturnStatement MemberReference column MethodDeclaration /**
     * Get the downlinks of this node.
     * 
     * @return The downlinks of this node.
     * @deprecated for 0.25.4 by tfmorris - use {@link #getDownNodes()}
     */ Modifier public ReferenceType Vector TypeArgument ReferenceType ClassdiagramNode getDownlinks ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType ClassdiagramNode MemberReference downlinks MethodDeclaration /**
     * Get the downlinks of this node.
     * 
     * @return The downlinks of this node.
     */ Modifier public ReferenceType List TypeArgument ReferenceType ClassdiagramNode getDownNodes ReturnStatement MemberReference downlinks MethodDeclaration /**
     * Get the offset which shall be used for edges with this node as parent.
     * 
     * @return The offset
     */ Modifier public BasicType int getEdgeOffset ReturnStatement MemberReference edgeOffset MethodDeclaration /**
     * Get the underlying figure of this node.
     * 
     * @return The figure.
     */ Modifier public ReferenceType FigNode getFigure ReturnStatement MemberReference figure MethodDeclaration /**
     * Get the level in the inheritance hierarchy for this node.
     * 
     * @return The level.
     */ Modifier public BasicType int getLevel LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference uplinks BlockStatement StatementExpression Assignment MemberReference result TernaryExpression BinaryOperation == MemberReference node This MemberReference result MethodInvocation Math BinaryOperation + MethodInvocation node getLevel Literal 1 MemberReference result max = End ReturnStatement MemberReference result MethodDeclaration /**
     * Get the location of the underlying figure in the diagram.
     * 
     * @return The location.
     */ Modifier public ReferenceType Point getLocation ReturnStatement MethodInvocation MethodInvocation getLocation getFigure MethodDeclaration /**
     * Get the current placement hint.
     * 
     * @return The placementhint for this node.
     */ Modifier public BasicType int getPlacementHint ReturnStatement MemberReference placementHint MethodDeclaration /**
     * Get the rank of this node.
     * 
     * @return The rank for this node.
     */ Modifier public BasicType int getRank ReturnStatement TernaryExpression BinaryOperation == MemberReference rank MemberReference NORANK MethodInvocation getLevel MemberReference rank MethodDeclaration /**
     * Operation getSize returns the size of the figure associated with this
     * layout node.
     * 
     * @return The size of the associated figure.
     */ Modifier public ReferenceType Dimension getSize ReturnStatement MethodInvocation MethodInvocation getSize getFigure MethodDeclaration /**
     * Get the weight of the subtree defined by this node. Impact on weight is
     * decreasing with increasing hierarchical distance
     * 
     * @return The weight of the subtree.
     */ Modifier private BasicType float getSubtreeWeight LocalVariableDeclaration BasicType float VariableDeclarator w Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference downlinks BlockStatement StatementExpression Assignment MemberReference w BinaryOperation / MethodInvocation node getSubtreeWeight MemberReference UPLINK_FACTOR += End ReturnStatement MemberReference w MethodDeclaration /**
     * Get the type order number of this node. This number may be used to
     * influence the sort order of ClassdiagramNodes.
     * 
     * @return Type order number.
     */ Modifier public BasicType int getTypeOrderNumer LocalVariableDeclaration BasicType int VariableDeclarator result Literal 99 IfStatement BinaryOperation instanceof MethodInvocation getFigure ReferenceType FigPackage BlockStatement StatementExpression Assignment MemberReference result Literal 0 = IfStatement BinaryOperation instanceof MethodInvocation getFigure ReferenceType FigInterface BlockStatement StatementExpression Assignment MemberReference result Literal 1 = End End ReturnStatement MemberReference result MethodDeclaration /**
     * Get the uplinks of this node.
     * 
     * @return The uplinks of this node.
     * @deprecated for 0.25.4 by tfmorris - use {@link #getUpNodes()}
     */ Modifier public ReferenceType Vector TypeArgument ReferenceType ClassdiagramNode getUplinks ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType ClassdiagramNode MemberReference uplinks MethodDeclaration /**
     * Get the uplinks of this node.
     * 
     * @return The uplinks of this node.
     */ Modifier public ReferenceType List TypeArgument ReferenceType ClassdiagramNode getUpNodes ReturnStatement MemberReference uplinks MethodDeclaration /**
     * Return the weight of this node, which is used for positioning in a row.
     * 
     * @return The weight of this node.
     */ Modifier public BasicType float getWeight ReturnStatement MemberReference weight MethodDeclaration /**
     * Check if this node is associated with a note.
     * 
     * @return Result of test.
     */ Modifier public BasicType boolean isComment ReturnStatement BinaryOperation instanceof MethodInvocation getFigure ReferenceType FigComment MethodDeclaration /**
     * Check if this node is associated with a package.
     * 
     * @return Result of test.
     */ Modifier public BasicType boolean isPackage ReturnStatement BinaryOperation instanceof MethodInvocation getFigure ReferenceType FigPackage MethodDeclaration /**
     * Test whether this node has no connection to other nodes. Return
     * <code>true</code> if node has no connections, <code>false</code>
     * otherwise.
     * 
     * @return Result of test.
     */ Modifier public BasicType boolean isStandalone ReturnStatement BinaryOperation && MethodInvocation uplinks isEmpty MethodInvocation downlinks isEmpty MethodDeclaration /**
     * Set the column of this node. A re-calculation of the weight is performed,
     * because the column is an input parameter for the weight.
     * 
     * @param newColumn
     *            The new column.
     */ Modifier public setColumn FormalParameter BasicType int newColumn StatementExpression Assignment MemberReference column MemberReference newColumn = StatementExpression MethodInvocation calculateWeight MethodDeclaration /**
     * Set the offset for edges to this node.
     * 
     * @param newOffset
     *            Offset for edges with this node as one endpoint.
     */ Modifier public setEdgeOffset FormalParameter BasicType int newOffset StatementExpression Assignment MemberReference edgeOffset MemberReference newOffset = MethodDeclaration /**
     * Operation setFigure changes the value of the attribute _figure.
     * 
     * @param newFigure
     *            represents the new value of _figure.
     */ Modifier public setFigure FormalParameter ReferenceType FigNode newFigure StatementExpression Assignment MemberReference figure MemberReference newFigure = MethodDeclaration /**
     * Operation setLocation set the new location of the associated figure in
     * the diagram.
     * 
     * @param newLocation
     *            represents the new location for this figure.
     */ Modifier public setLocation FormalParameter ReferenceType Point newLocation LocalVariableDeclaration ReferenceType Point VariableDeclarator oldLocation MethodInvocation MethodInvocation getLocation getFigure StatementExpression MethodInvocation MethodInvocation MemberReference newLocation setLocation getFigure LocalVariableDeclaration BasicType int VariableDeclarator xTrans BinaryOperation - MemberReference newLocation x MemberReference oldLocation x LocalVariableDeclaration BasicType int VariableDeclarator yTrans BinaryOperation - MemberReference newLocation y MemberReference oldLocation y ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Fig VariableDeclarator iter MethodInvocation MethodInvocation getEnclosedFigs MethodInvocation iterator getFigure MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation iter MethodInvocation MemberReference xTrans MemberReference yTrans translate next End MethodDeclaration /**
     * A placementhint gives an indication where it might be feasible to place
     * this node. It is used by the layouter, and there is no guarantee that it
     * will be used.
     * 
     * @param hint
     *            x coordinate of the desired placement
     */ Modifier public setPlacementHint FormalParameter BasicType int hint StatementExpression Assignment MemberReference placementHint MemberReference hint = MethodDeclaration /**
     * Operation setRank changes the value of the attribute _rank.
     * 
     * @param newRank
     *            represents the new value of _rank.
     */ Modifier public setRank FormalParameter BasicType int newRank StatementExpression Assignment MemberReference rank MemberReference newRank = MethodDeclaration /**
     * Set the weight for this node.
     * 
     * @param w
     *            The new weight of this node.
     */ Modifier public setWeight FormalParameter BasicType float w StatementExpression Assignment MemberReference weight MemberReference w = ReferenceType LayoutedNode ReferenceType Comparable",1
1442,1442,,0
1296,1296,,0
1150,1150,,0
1223,1223,,0
612,612,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import java.beans.PropertyChangeEvent Import java.beans.PropertyChangeListener Import javax.swing.JTextField Import org.argouml.ui.LookAndFeelMgr Import org.argouml.ui.targetmanager.TargetListener Import org.argouml.ui.targetmanager.TargettableModelView ClassDeclaration Modifier public /**
 * @since Oct 6, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLTextField2 FieldDeclaration /**
     * Serial version generated for rev 1.15
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5740838103900828073L ConstructorDeclaration Modifier public /**
     * Constructor for UMLTextField2.
     *
     * @param doc the plain text document
     */ UMLTextField2 FormalParameter ReferenceType UMLDocument doc StatementExpression SuperConstructorInvocation MemberReference doc Literal null Literal 0 StatementExpression MethodInvocation MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont StatementExpression MethodInvocation MethodInvocation ActionCopy getInstance addCaretListener StatementExpression MethodInvocation MethodInvocation ActionCut getInstance addCaretListener StatementExpression MethodInvocation MethodInvocation ActionPaste getInstance addCaretListener StatementExpression MethodInvocation MethodInvocation ActionPaste getInstance addFocusListener MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression Cast ReferenceType UMLDocument MethodInvocation getDocument MethodDeclaration Modifier public ReferenceType TargetListener getTargettableModel ReturnStatement Cast ReferenceType UMLDocument MethodInvocation getDocument ReferenceType JTextField ReferenceType PropertyChangeListener ReferenceType TargettableModelView",0
239,239,"CompilationUnit PackageDeclaration org.argouml.model.euml Import org.eclipse.emf.common.command.Command Import org.eclipse.emf.common.command.StrictCompoundCommand Import org.eclipse.emf.common.util.EList Import org.eclipse.emf.common.util.URI Import org.eclipse.emf.ecore.resource.Resource Import org.eclipse.emf.edit.command.CopyToClipboardCommand Import org.eclipse.emf.edit.command.PasteFromClipboardCommand Import org.eclipse.uml2.uml.Association Import org.eclipse.uml2.uml.AssociationClass Import org.eclipse.uml2.uml.Element Import org.eclipse.uml2.uml.NamedElement Import org.eclipse.uml2.uml.Operation Import org.eclipse.uml2.uml.Property Import org.eclipse.uml2.uml.Type ClassDeclaration Modifier public /**
 * This class exposes protected methods from
 * {@link org.eclipse.uml2.uml.UMLUtil} and adds additional util methods
 * 
 * @author Bogdan Pistol
 */ UMLUtil FieldDeclaration /**
     * The default URI used for eUML
     */ Modifier public final static ReferenceType URI VariableDeclarator DEFAULT_URI MethodInvocation URI Literal ""http://argouml.tigris.org/euml/resource/default_uri.xmi"" createURI MethodDeclaration /**
     * Getter for the attributes of a Type
     * 
     * @param type
     *                The Type that owns the attributes
     * @return the attributes or null
     */ Modifier public static ReferenceType EList TypeArgument ReferenceType Property getOwnedAttributes FormalParameter ReferenceType Type type IfStatement BinaryOperation instanceof MemberReference type ReferenceType AssociationClass BlockStatement ReturnStatement Cast ReferenceType AssociationClass MemberReference type IfStatement BinaryOperation instanceof MemberReference type ReferenceType Association BlockStatement ReturnStatement Cast ReferenceType Association MemberReference type BlockStatement ReturnStatement MethodInvocation org.eclipse.uml2.uml.util.UMLUtil MemberReference type getOwnedAttributes End End MethodDeclaration /**
     * Getter for the operations of a Type
     * 
     * @param type
     *                The Type that owns the operations
     * @return the operations or null
     */ Modifier public static ReferenceType EList TypeArgument ReferenceType Operation getOwnedOperations FormalParameter ReferenceType Type type ReturnStatement MethodInvocation org.eclipse.uml2.uml.util.UMLUtil MemberReference type getOwnedOperations MethodDeclaration /**
     * Copy a tree of UML elements into a destination location
     * 
     * @param modelImplementation
     *                the eUML model implementation
     * @param source
     *                the tree of UML elements to be copied
     * @param destination
     *                the destination container
     * @return the root of the newly copied tree of UML elements or null
     */ Modifier public static ReferenceType Element copy FormalParameter ReferenceType EUMLModelImplementation modelImplementation FormalParameter ReferenceType Element source FormalParameter ReferenceType Element destination LocalVariableDeclaration ReferenceType Command VariableDeclarator copyToClipboard MethodInvocation CopyToClipboardCommand MethodInvocation modelImplementation getEditingDomain MemberReference source create LocalVariableDeclaration ReferenceType Command VariableDeclarator pasteFromClipboard MethodInvocation PasteFromClipboardCommand MethodInvocation modelImplementation getEditingDomain MemberReference destination Literal null create LocalVariableDeclaration ReferenceType StrictCompoundCommand VariableDeclarator copyCommand ClassCreator ReferenceType StrictCompoundCommand StatementExpression Assignment MemberReference isPessimistic Literal true = StatementExpression MethodInvocation copyCommand MemberReference copyToClipboard append StatementExpression MethodInvocation copyCommand MemberReference pasteFromClipboard append StatementExpression MethodInvocation copyCommand Literal ""Copy a tree of UML elements to a destination"" setLabel IfStatement MethodInvocation copyCommand canExecute BlockStatement StatementExpression MethodInvocation modelImplementation MethodInvocation getRootContainer MethodInvocation Literal true setHoldEvents getModelEventPump StatementExpression MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation MemberReference copyCommand execute getEditingDomain IfStatement BinaryOperation == MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation getMostRecentCommand MethodInvocation getAffectedObjects MethodInvocation size getEditingDomain Literal 1 BlockStatement StatementExpression MethodInvocation modelImplementation MethodInvocation getRootContainer MethodInvocation Literal false setHoldEvents getModelEventPump ReturnStatement Cast ReferenceType Element MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation getMostRecentCommand MethodInvocation getAffectedObjects MethodInvocation iterator MethodInvocation next getEditingDomain BlockStatement StatementExpression MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation undo getEditingDomain StatementExpression MethodInvocation modelImplementation MethodInvocation getRootContainer MethodInvocation clearHeldEvents getModelEventPump StatementExpression MethodInvocation modelImplementation MethodInvocation getRootContainer MethodInvocation Literal false setHoldEvents getModelEventPump End End ReturnStatement Literal null MethodDeclaration /**
     * Returns information about an Object.
     * <p>
     * If it's an Element it returns its metaclass name, and if it's a
     * NamedElement it appends its name.
     * 
     * @param o
     *                The object
     * @return the String description
     */ Modifier public static ReferenceType String toString FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal ""null"" End IfStatement BinaryOperation instanceof MemberReference o ReferenceType Element BlockStatement ReturnStatement MethodInvocation o toString End LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder Literal ""'"" LocalVariableDeclaration BasicType boolean VariableDeclarator named Literal false IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference o ReferenceType NamedElement BinaryOperation != Cast ReferenceType NamedElement MemberReference o Literal null Cast ReferenceType NamedElement MemberReference o BlockStatement StatementExpression Assignment MemberReference named Literal true = StatementExpression MethodInvocation sb BinaryOperation + Cast ReferenceType NamedElement MemberReference o Literal "" ["" append End StatementExpression MethodInvocation sb Cast ReferenceType Element MemberReference o append IfStatement MemberReference named BlockStatement StatementExpression MethodInvocation sb Literal ""]"" append End StatementExpression MethodInvocation sb Literal ""'"" append ReturnStatement MethodInvocation sb toString MethodDeclaration /**
     * Returns the Resource associated with an URI or creates the resource if it
     * does not exist
     * 
     * @param modelImplementation
     *                the eUML implementation
     * @param uri
     *                the URI which identifies the resource
     * @return the retrieved or created resource
     */ Modifier public static ReferenceType Resource getResource FormalParameter ReferenceType EUMLModelImplementation modelImplementation FormalParameter ReferenceType URI uri LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation modelImplementation MethodInvocation getResourceSet MethodInvocation MemberReference uri Literal false getResource getEditingDomain IfStatement BinaryOperation == MemberReference r Literal null BlockStatement StatementExpression Assignment MemberReference r MethodInvocation modelImplementation MethodInvocation getResourceSet MethodInvocation MemberReference uri createResource getEditingDomain = End ReturnStatement MemberReference r ReferenceType org ReferenceType eclipse ReferenceType uml2 ReferenceType uml ReferenceType util ReferenceType UMLUtil",0
1267,1267,,0
1025,1025,,0
9,9,"CompilationUnit PackageDeclaration org.argouml.language.java.cognitive.critics Import java.util.Collections Import java.util.List Import org.argouml.application.api.GUISettingsTabInterface Import org.argouml.application.api.InitSubsystem Import org.argouml.cognitive.Agency Import org.argouml.cognitive.Critic Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Initialise the Java related critics. <p>
 * 
 * TODO: Test and then enable the CrReservedNameJava.
 *
 * @author Michiel
 */ InitJavaCritics FieldDeclaration Modifier private static ReferenceType Critic VariableDeclarator crMultiInherit ClassCreator ReferenceType CrMultipleInheritance FieldDeclaration Modifier private static ReferenceType Critic VariableDeclarator crMultiRealization ClassCreator ReferenceType CrMultipleRealization MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getSettingsTabs ReturnStatement MethodInvocation Collections emptyList MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType Object VariableDeclarator classCls MethodInvocation Model MethodInvocation getUMLClass getMetaTypes LocalVariableDeclaration ReferenceType Object VariableDeclarator interfaceCls MethodInvocation Model MethodInvocation getInterface getMetaTypes StatementExpression MethodInvocation Agency MemberReference crMultiInherit MemberReference classCls register StatementExpression MethodInvocation Agency MemberReference crMultiRealization MemberReference interfaceCls register ReferenceType InitSubsystem",0
719,719,"CompilationUnit PackageDeclaration org.argouml.uml.diagram InterfaceDeclaration Modifier public /**
 * Interface which is used by the Explorer to determine if a diagram can
 * change its location to a new model element.
 *
 * @author MarkusK
 *
 */ Relocatable MethodDeclaration /**
     * This function should return true if it is allowed to relocate
     * this type of diagram to the given modelelement.
     *
     * @param base the given modelelement
     * @return true if adding a diagram here is allowed
     */ BasicType boolean isRelocationAllowed FormalParameter ReferenceType Object base MethodDeclaration /**
     * Relocate this diagram,
     * e.g. for a class diagram assign it a new namespace,
     * e.g. for a statechart move it together with the
     * statemachine to a new operation/classifier. <p>
     *
     * Precondition: isRelocationAllowed(base) is true.
     *
     * @param base the new location, i.e. base modelelement
     * @return true if successful
     */ BasicType boolean relocate FormalParameter ReferenceType Object base",0
432,432,"CompilationUnit PackageDeclaration org.argouml.ui.cmd Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.cognitive.Designer Import org.argouml.i18n.Translator Import org.argouml.ui.UndoableAction ClassDeclaration Modifier public /**
 * Stops critiquing and the TodoList validity checking thread in ToDoList.
 */ ActionAutoCritique ConstructorDeclaration Modifier public /**
     * The constructor.
     */ ActionAutoCritique StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.toggle-auto-critique"" localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.toggle-auto-critique"" localize putValue StatementExpression MethodInvocation Literal ""SELECTED"" MethodInvocation Boolean MethodInvocation Designer MethodInvocation getAutoCritique theDesigner valueOf putValue MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Designer VariableDeclarator d MethodInvocation Designer theDesigner LocalVariableDeclaration BasicType boolean VariableDeclarator b MethodInvocation d getAutoCritique StatementExpression MethodInvocation d MemberReference ! b setAutoCritique StatementExpression MethodInvocation Designer MethodInvocation getToDoList MethodInvocation MethodInvocation ! Designer MethodInvocation getToDoList MethodInvocation isPaused theDesigner setPaused theDesigner FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 9057306108717070004L ReferenceType UndoableAction",1
1069,1069,,1
128,128,"CompilationUnit PackageDeclaration org.argouml.uml Import java.util.Collection Import java.util.Collections Import java.util.Enumeration Import java.util.HashSet Import java.util.Set Import org.argouml.model.Model Import org.tigris.gef.util.ChildGenerator ClassDeclaration Modifier public /** Utility class to generate the base classes of a class. It
 *  recursively moves up the class hierarchy.  But it does that in a
 *  safe way that will not hang in case of cyclic inheritance.
 */ GenAncestorClasses MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType Set VariableDeclarator res ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference cls isAGeneralizableElement getFacade BlockStatement StatementExpression MethodInvocation MemberReference cls MemberReference res accumulateAncestors End ReturnStatement MethodInvocation Collections MemberReference res enumeration MethodDeclaration /**
     * @param cls the class (in fact any GeneralizableElement will do)
     * @param accum the accumulated list of generalizations
     */ Modifier public accumulateAncestors FormalParameter ReferenceType Object cls FormalParameter ReferenceType Collection accum LocalVariableDeclaration ReferenceType Collection VariableDeclarator gens MethodInvocation Model MethodInvocation MemberReference cls getGeneralizations getFacade IfStatement BinaryOperation == MemberReference gens Literal null BlockStatement ReturnStatement End ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator g MemberReference gens BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ge MethodInvocation Model MethodInvocation MemberReference g getGeneral getFacade IfStatement MethodInvocation ! accum MemberReference ge contains BlockStatement StatementExpression MethodInvocation accum MemberReference ge add StatementExpression MethodInvocation MemberReference cls MemberReference accum accumulateAncestors End End ReferenceType ChildGenerator",0
755,755,"CompilationUnit PackageDeclaration org.argouml.uml.ui Import org.argouml.uml.diagram.DiagramFactory Import org.argouml.uml.diagram.ArgoDiagram ClassDeclaration Modifier public /**
 * Action to trigger creation of new collaboration diagram.
 */ ActionCollaborationDiagram ConstructorDeclaration Modifier public /**
     * Constructor.
     */ ActionCollaborationDiagram StatementExpression SuperConstructorInvocation Literal ""action.collaboration-diagram"" MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramFactory.DiagramType Collaboration MethodInvocation MemberReference namespace createCollaboration Literal null createDiagram getInstance FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1089352213298998155L ReferenceType ActionNewDiagram",0
25,25,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import javax.swing.ImageIcon Import javax.swing.JCheckBox Import javax.swing.JComboBox Import javax.swing.JPanel Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.uml.ui.ActionNavigateAssociation Import org.argouml.uml.ui.ActionNavigateOppositeAssocEnd Import org.argouml.uml.ui.UMLComboBox2 Import org.argouml.uml.ui.UMLLinkedList Import org.argouml.uml.ui.UMLMultiplicityPanel Import org.argouml.uml.ui.UMLMutableLinkedList Import org.argouml.uml.ui.UMLSingleRowSelector Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype Import org.tigris.swidgets.Orientation ClassDeclaration Modifier public /**
 * The properties panel for an association end.
 */ PropPanelAssociationEnd FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 9119453587506578751L FieldDeclaration /**
     * The combobox that shows the type of this association end.
     */ Modifier private ReferenceType JComboBox VariableDeclarator typeCombobox FieldDeclaration /**
     * The scrollpane showing the association that owns this associationend
     */ Modifier private ReferenceType JPanel VariableDeclarator associationScroll FieldDeclaration /**
     * The combobox for the multiplicity of this type.
     */ Modifier private ReferenceType UMLMultiplicityPanel VariableDeclarator multiplicityComboBox FieldDeclaration /**
     * The checkbox that shows if this association end is navigable.
     */ Modifier private ReferenceType JCheckBox VariableDeclarator navigabilityCheckBox FieldDeclaration /**
     * The checkbox that shows the ordering of the associationend. It's selected
     * if it's an ordered associationend. Unselected if it's unordered. Sorted
     * is not supported atm.
     */ Modifier private ReferenceType JCheckBox VariableDeclarator orderingCheckBox FieldDeclaration /**
     * The checkbox that shows the scope of the associationend. Selected means
     * that the scope is the classifier. Unselected means that the scope is the
     * instance (the default).
     */ Modifier private ReferenceType JCheckBox VariableDeclarator targetScopeCheckBox FieldDeclaration /**
     * The panel with the radiobuttons the user can select to select the
     * aggregation of this associationend.
     */ Modifier private ReferenceType JPanel VariableDeclarator aggregationRadioButtonpanel FieldDeclaration /**
     * The panel with the radiobuttons the user can select to select the
     * changeability of this associationend.
     */ Modifier private ReferenceType JPanel VariableDeclarator changeabilityRadioButtonpanel FieldDeclaration /**
     * The panel with the radiobuttons to set the visibility (public, protected,
     * private) of this associationend.
     */ Modifier private ReferenceType JPanel VariableDeclarator visibilityRadioButtonPanel FieldDeclaration /**
     * The list of classifiers that specify the operations that must be
     * implemented by the classifier type. These operations can be used by this
     * association.
     */ Modifier private ReferenceType JScrollPane VariableDeclarator specificationScroll FieldDeclaration /**
     * The list of qualifiers that owns this association end
     */ Modifier private ReferenceType JScrollPane VariableDeclarator qualifiersScroll FieldDeclaration Modifier private ReferenceType String VariableDeclarator associationLabel ConstructorDeclaration Modifier protected Annotation Deprecated /**
     * Constructs the proppanel including initializing all scrollpanes, panels
     * etc. but excluding placing them on the proppanel itself.
     * @param name name/title of the property panel
     * @param orientation orientation of the panel
     * @see org.argouml.uml.ui.PropPanel#PropPanel(String, Orientation)
     * @deprecated for 0.25.4 by tfmorris.  Use setOrientation after
     * instantiation to select orientation.
     */ PropPanelAssociationEnd FormalParameter ReferenceType String name FormalParameter ReferenceType Orientation orientation StatementExpression SuperConstructorInvocation MemberReference name MemberReference orientation ConstructorDeclaration Modifier protected /**
     * Constructs the proppanel including initializing all scrollpanes, panels
     * etc. but excluding placing them on the proppanel itself.
     * 
     * @param name name/title of the property panel
     * @param icon the icon
     * @see org.argouml.uml.ui.PropPanel#PropPanel(String, ImageIcon)
     */ PropPanelAssociationEnd FormalParameter ReferenceType String name FormalParameter ReferenceType ImageIcon icon StatementExpression SuperConstructorInvocation MemberReference name MemberReference icon ConstructorDeclaration Modifier public /**
     * Constructs the proppanel and places all scrollpanes etc. on the canvas.
     *
     * @see java.lang.Object#Object()
     */ PropPanelAssociationEnd StatementExpression SuperConstructorInvocation Literal ""label.association-end"" MethodInvocation Literal ""AssociationEnd"" lookupIcon StatementExpression Assignment MemberReference associationLabel MethodInvocation Translator Literal ""label.association"" localize = StatementExpression MethodInvocation createControls StatementExpression MethodInvocation positionStandardControls StatementExpression MethodInvocation positionControls MethodDeclaration /**
     * Create the controls specific to an AssociationEnd
     */ Modifier protected createControls StatementExpression Assignment MemberReference typeCombobox ClassCreator ReferenceType UMLComboBox2 ClassCreator ReferenceType UMLAssociationEndTypeComboBoxModel MethodInvocation ActionSetAssociationEndType getInstance Literal true = StatementExpression Assignment MemberReference associationScroll ClassCreator ReferenceType UMLSingleRowSelector ClassCreator ReferenceType UMLAssociationEndAssociationListModel = StatementExpression Assignment MemberReference navigabilityCheckBox ClassCreator ReferenceType UMLAssociationEndNavigableCheckBox = StatementExpression Assignment MemberReference orderingCheckBox ClassCreator ReferenceType UMLAssociationEndOrderingCheckBox = StatementExpression Assignment MemberReference targetScopeCheckBox ClassCreator ReferenceType UMLAssociationEndTargetScopeCheckbox = StatementExpression Assignment MemberReference aggregationRadioButtonpanel ClassCreator ReferenceType UMLAssociationEndAggregationRadioButtonPanel Literal ""label.aggregation"" Literal true = StatementExpression Assignment MemberReference changeabilityRadioButtonpanel ClassCreator ReferenceType UMLAssociationEndChangeabilityRadioButtonPanel Literal ""label.changeability"" Literal true = StatementExpression Assignment MemberReference visibilityRadioButtonPanel ClassCreator ReferenceType UMLModelElementVisibilityRadioButtonPanel Literal ""label.visibility"" Literal true = StatementExpression Assignment MemberReference specificationScroll ClassCreator ReferenceType JScrollPane ClassCreator ReferenceType UMLMutableLinkedList ClassCreator ReferenceType UMLAssociationEndSpecificationListModel MethodInvocation ActionAddAssociationSpecification getInstance Literal null Literal null Literal true = StatementExpression Assignment MemberReference qualifiersScroll ClassCreator ReferenceType JScrollPane ClassCreator ReferenceType UMLLinkedList ClassCreator ReferenceType UMLAssociationEndQualifiersListModel = MethodDeclaration /**
     * Add the standard controls to the panel.
     */ Modifier protected positionStandardControls StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField MethodDeclaration /**
     * Add the specific controls for an associationend to the panel.
     */ Modifier protected positionControls StatementExpression MethodInvocation MemberReference associationLabel MemberReference associationScroll addField StatementExpression MethodInvocation Literal ""label.type"" MemberReference typeCombobox addField StatementExpression MethodInvocation Literal ""label.multiplicity"" MethodInvocation getMultiplicityComboBox addField StatementExpression MethodInvocation addSeparator LocalVariableDeclaration ReferenceType JPanel VariableDeclarator panel MethodInvocation Literal ""label.modifiers"" createBorderPanel StatementExpression MethodInvocation panel MemberReference navigabilityCheckBox add StatementExpression MethodInvocation panel MemberReference orderingCheckBox add StatementExpression MethodInvocation panel MemberReference targetScopeCheckBox add StatementExpression MethodInvocation panel Literal true setVisible StatementExpression MethodInvocation MemberReference panel add StatementExpression MethodInvocation Literal ""label.specification"" MemberReference specificationScroll addField StatementExpression MethodInvocation Literal ""label.qualifiers"" MemberReference qualifiersScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MemberReference aggregationRadioButtonpanel add StatementExpression MethodInvocation MemberReference changeabilityRadioButtonpanel add StatementExpression MethodInvocation MemberReference visibilityRadioButtonPanel add StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateAssociation addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateOppositeAssocEnd addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddAttribute MethodInvocation Translator Literal ""button.new-qualifier"" localize addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction MethodDeclaration /**
     * @param label the label
     */ Modifier protected setAssociationLabel FormalParameter ReferenceType String label StatementExpression Assignment MemberReference associationLabel MemberReference label = MethodDeclaration /**
     * Returns the multiplicityComboBox.
     *
     * @return UMLMultiplicityComboBox2
     */ Modifier protected ReferenceType JPanel getMultiplicityComboBox IfStatement BinaryOperation == MemberReference multiplicityComboBox Literal null BlockStatement StatementExpression Assignment MemberReference multiplicityComboBox ClassCreator ReferenceType UMLMultiplicityPanel = End ReturnStatement MemberReference multiplicityComboBox ReferenceType PropPanelModelElement",0
795,795,"CompilationUnit PackageDeclaration org.argouml.application.events Import org.argouml.application.api.ArgoEventListener InterfaceDeclaration Modifier public /** An interface that objects interested in GeneratorEvent
 *  notifications must extend.
 *
 *  @author Thierry Lach
 *  @since 0.9.4
 */ ArgoGeneratorEventListener MethodDeclaration /**
     * Invoked when any aspect of the generator has been changed.
     * @param e <code>ArgoGeneratorEvent</code> describing the change.
     */ Modifier public generatorChanged FormalParameter ReferenceType ArgoGeneratorEvent e MethodDeclaration /**
     * Invoked when a CodeGenerator has been added.
     * @param e <code>ArgoGeneratorEvent</code> describing the added notation.
     */ Modifier public generatorAdded FormalParameter ReferenceType ArgoGeneratorEvent e MethodDeclaration /**
     * Invoked when a CodeGenerator has been removed.
     * @param e <code>ArgoGeneratorEvent</code> describing the removed notation.
     */ Modifier public generatorRemoved FormalParameter ReferenceType ArgoGeneratorEvent e ReferenceType ArgoEventListener",0
1122,1122,,0
1096,1096,,0
1009,1009,,0
307,307,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.common_behavior ClassDeclaration Modifier public /**
 * The properties panel for a ReturnAction.
 * <p>
 * TODO: this property panel needs refactoring to remove dependency on
 *       old gui components.
 */ PropPanelReturnAction ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ PropPanelReturnAction StatementExpression SuperConstructorInvocation Literal ""label.return-action"" MethodInvocation Literal ""ReturnAction"" lookupIcon ReferenceType PropPanelAction",1
1238,1238,,1
1361,1361,,0
312,312,"CompilationUnit PackageDeclaration org.argouml.uml.ui.behavior.state_machines Import javax.swing.JList Import javax.swing.JScrollPane Import org.argouml.uml.ui.foundation.core.ActionNewParameter ClassDeclaration Modifier public /**
 * The properties panel for a SignalEvent.
 *
 * @author oliver.heyden
 */ PropPanelSignalEvent ConstructorDeclaration Modifier public /**
     * Construct a property panel for a Signal Event.
     */ PropPanelSignalEvent StatementExpression SuperConstructorInvocation Literal ""label.signal.event"" MethodInvocation Literal ""SignalEvent"" lookupIcon MethodDeclaration Modifier public Annotation Override initialize StatementExpression SuperMethodInvocation initialize LocalVariableDeclaration ReferenceType JList VariableDeclarator signalList ClassCreator ReferenceType UMLSignalEventSignalList ClassCreator ReferenceType UMLSignalEventSignalListModel StatementExpression MethodInvocation signalList Literal 2 setVisibleRowCount StatementExpression MethodInvocation Literal ""label.signal"" ClassCreator ReferenceType JScrollPane MemberReference signalList addField StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewParameter addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ReferenceType PropPanelEvent",0
551,551,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import java.util.Collection Import java.util.Collections Import java.util.HashSet Import java.util.Set Import org.argouml.i18n.Translator Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model ClassDeclaration Modifier public /**
 * Rule for Model->Diagram.
 * @author  alexb
 * @since 0.15.2, Created on 05 October 2003, 19:18
 */ GoModelToDiagrams MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal ""misc.model.diagram"" localize MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModel getFacade BlockStatement ReturnStatement MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDiagramList getManager End ReturnStatement MemberReference Collections EMPTY_SET MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModel getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set End ReturnStatement MemberReference Collections EMPTY_SET ReferenceType AbstractPerspectiveRule",0
1309,1309,,0
1147,1147,,0
602,602,"CompilationUnit PackageDeclaration org.argouml.ocl Import java.util.Collection Import java.util.Iterator Import org.apache.log4j.Logger Import org.argouml.kernel.Project Import org.argouml.kernel.ProjectManager Import org.argouml.model.Model Import tudresden.ocl.check.OclTypeException Import tudresden.ocl.check.types.Any Import tudresden.ocl.check.types.Basic Import tudresden.ocl.check.types.Type Import tudresden.ocl.check.types.Type2 ClassDeclaration Modifier public /**
 * Provides a facade of the ArgoUml uml model for the OCL compiler.<p>
 *
 * Note:
 * In this file we have two different Collections active:
 * java.util.Collection and tudresden.ocl.check.types.Collection. Be
 * sure to explicitly specify what you mean every time.
 * import java.util.Collection;
 * import tudresden.ocl.check.types.Collection;
 */ ArgoFacade FieldDeclaration /**
     * The target that this instance is connected to.
     */ Modifier private ReferenceType Object VariableDeclarator target ConstructorDeclaration Modifier public /**
     * Construtor.
     *
     * @param t The target to create this facade for.
     */ ArgoFacade FormalParameter ReferenceType Object t IfStatement MethodInvocation Model MethodInvocation MemberReference t isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference target MemberReference t = End MethodDeclaration Modifier public ReferenceType Any getClassifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target getName MethodInvocation MemberReference name equals getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArgoAny MemberReference target End LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation p MemberReference name MethodInvocation p getModel findTypeInModel IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation p MemberReference name Literal false findType = IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + Literal ""cannot find classifier: "" MemberReference name End End ReturnStatement ClassCreator ReferenceType ArgoAny MemberReference classifier ReferenceType tudresden ReferenceType ocl ReferenceType check ReferenceType types ReferenceType ModelFacade ClassDeclaration /**
 * A class that is the wrapper for any type.
 */ ArgoAny FieldDeclaration /**
     * Logger for the ArgoAny class.
     */ Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType ArgoAny getLogger FieldDeclaration Modifier private ReferenceType Object VariableDeclarator classifier ConstructorDeclaration /**
     * Constructor.
     *
     * @param cl The ArgoUML classifier.
     */ ArgoAny FormalParameter ReferenceType Object cl StatementExpression Assignment MemberReference classifier MemberReference cl = MethodDeclaration Modifier public ReferenceType Type navigateQualified FormalParameter ReferenceType String name FormalParameter ReferenceType Type qualifiers OclTypeException IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException Literal ""attempting to access features of Void"" End IfStatement BinaryOperation != MemberReference qualifiers Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + Literal ""qualified associations "" Literal ""not supported yet!"" End LocalVariableDeclaration ReferenceType Type VariableDeclarator type MethodInvocation Basic MemberReference name This MemberReference qualifiers navigateAnyQualified IfStatement BinaryOperation != MemberReference type Literal null BlockStatement ReturnStatement MemberReference type End LocalVariableDeclaration ReferenceType Object VariableDeclarator foundAssocType Literal null VariableDeclarator foundAttribType Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator isSet Literal false VariableDeclarator isSequence Literal false LocalVariableDeclaration ReferenceType Collection VariableDeclarator attributes MethodInvocation Model MethodInvocation MemberReference classifier getAttributesInh getCoreHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation attributes iterator WhileStatement BinaryOperation && MethodInvocation iter hasNext BinaryOperation == MemberReference foundAttribType Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation iter next IfStatement MethodInvocation Model MethodInvocation MemberReference attr getName MethodInvocation MemberReference name equals getFacade BlockStatement StatementExpression Assignment MemberReference foundAttribType MethodInvocation Model MethodInvocation MemberReference attr getType getFacade = End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference classifier getAssociateEndsInh getCoreHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator asciter MethodInvocation associationEnds iterator WhileStatement BinaryOperation && MethodInvocation asciter hasNext BinaryOperation == MemberReference foundAssocType Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation asciter next IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference ae getName getFacade Literal null MethodInvocation name MethodInvocation Model MethodInvocation MemberReference ae getName getFacade equals BlockStatement StatementExpression Assignment MemberReference foundAssocType MethodInvocation Model MethodInvocation MemberReference ae getType getFacade = IfStatement BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MemberReference ae getName getFacade Literal null MethodInvocation Model MethodInvocation MemberReference ae getName MethodInvocation Literal """" equals getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator oppositeName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getType getFacade getName getFacade IfStatement BinaryOperation != MemberReference oppositeName Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator lowerOppositeName MethodInvocation oppositeName MethodInvocation toLowerCase Literal 0 Literal 1 substring StatementExpression Assignment MemberReference lowerOppositeName MethodInvocation oppositeName Literal 1 substring += IfStatement MethodInvocation lowerOppositeName MemberReference name equals BlockStatement StatementExpression Assignment MemberReference foundAssocType MethodInvocation Model MethodInvocation MemberReference ae getType getFacade = End End End End IfStatement BinaryOperation != MemberReference foundAssocType Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator multiplicity MethodInvocation Model MethodInvocation MemberReference ae getMultiplicity getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference multiplicity Literal null BinaryOperation || BinaryOperation > MethodInvocation Model MethodInvocation MemberReference multiplicity getUpper getFacade Literal 1 BinaryOperation == MethodInvocation Model MethodInvocation MemberReference multiplicity getUpper getFacade Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference ae getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator LocalVariableDeclaration ReferenceType String VariableDeclarator stname Literal """" WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation i next StatementExpression Assignment MemberReference stname MethodInvocation Model MethodInvocation MemberReference o getName getFacade = IfStatement Literal MethodInvocation MemberReference stname equals ""ordered"" BlockStatement BreakStatement End End IfStatement Literal MethodInvocation MemberReference stname equals ""ordered"" BlockStatement StatementExpression Assignment MemberReference isSequence Literal true = BlockStatement StatementExpression Assignment MemberReference isSet Literal true = End End End End IfStatement BinaryOperation && BinaryOperation != MemberReference foundAssocType Literal null BinaryOperation != MemberReference foundAttribType Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""cannot access feature "" MemberReference name Literal "" of classifier "" MethodInvocation toString Literal "" because both an attribute and "" Literal ""an association end of this name "" Literal ""where found"" End LocalVariableDeclaration ReferenceType Object VariableDeclarator foundType IfStatement BinaryOperation == MemberReference foundAssocType Literal null BlockStatement StatementExpression Assignment MemberReference foundType MemberReference foundAttribType = BlockStatement StatementExpression Assignment MemberReference foundType MemberReference foundAssocType = End IfStatement BinaryOperation == MemberReference foundType Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""attribute "" MemberReference name Literal "" not found in classifier "" MethodInvocation toString End LocalVariableDeclaration ReferenceType Type VariableDeclarator result MethodInvocation MemberReference foundType getOclRepresentation IfStatement MemberReference isSet BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType tudresden ReferenceType ocl ReferenceType check ReferenceType types ReferenceType Collection MemberReference tudresden.ocl.check.types.Collection SET MemberReference result = End IfStatement MemberReference isSequence BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType tudresden ReferenceType ocl ReferenceType check ReferenceType types ReferenceType Collection MemberReference tudresden.ocl.check.types.Collection SEQUENCE MemberReference result = End ReturnStatement MemberReference result MethodDeclaration Modifier public ReferenceType Type navigateParameterizedQuery FormalParameter ReferenceType String name FormalParameter ReferenceType Type qualifiers OclTypeException ReturnStatement MethodInvocation MemberReference name MemberReference qualifiers Literal true internalNavigateParameterized MethodDeclaration Modifier public ReferenceType Type navigateParameterized FormalParameter ReferenceType String name FormalParameter ReferenceType Type qualifiers OclTypeException ReturnStatement MethodInvocation MemberReference name MemberReference qualifiers Literal false internalNavigateParameterized MethodDeclaration Modifier private ReferenceType Type internalNavigateParameterized FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Type params FormalParameter BasicType boolean fCheckIsQuery OclTypeException IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException Literal ""attempting to access features of Void"" End LocalVariableDeclaration ReferenceType Type VariableDeclarator type MethodInvocation Basic MemberReference name MemberReference params navigateAnyParameterized IfStatement BinaryOperation != MemberReference type Literal null BlockStatement ReturnStatement MemberReference type End LocalVariableDeclaration ReferenceType Object VariableDeclarator foundOp Literal null LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Collection VariableDeclarator operations MethodInvocation Model MethodInvocation MemberReference classifier getOperations getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation operations iterator WhileStatement BinaryOperation && MethodInvocation iter hasNext BinaryOperation == MemberReference foundOp Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation iter next IfStatement MethodInvocation MemberReference op MemberReference name MemberReference params operationMatchesCall BlockStatement StatementExpression Assignment MemberReference foundOp MemberReference op = End End IfStatement BinaryOperation == MemberReference foundOp Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""operation "" MemberReference name Literal "" not found in classifier "" MethodInvocation toString End IfStatement MemberReference fCheckIsQuery BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference foundOp isQuery getFacade BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal ""Non-query operations cannot "" Literal ""be used in OCL expressions. ("" MemberReference name Literal "")"" End End LocalVariableDeclaration ReferenceType Collection VariableDeclarator returnParams MethodInvocation Model MethodInvocation MemberReference foundOp getReturnParameters getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator rp IfStatement BinaryOperation == MethodInvocation returnParams size Literal 0 BlockStatement StatementExpression Assignment MemberReference rp Literal null = BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation returnParams MethodInvocation next iterator = End IfStatement BinaryOperation > MethodInvocation returnParams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ""OCL compiler only handles one return parameter"" Literal "" - Found "" MethodInvocation returnParams size Literal "" for "" MethodInvocation Model MethodInvocation MemberReference foundOp getName getFacade warn End IfStatement BinaryOperation || BinaryOperation == MemberReference rp Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference rp getType getFacade Literal null BlockStatement StatementExpression MethodInvocation LOG Literal ""WARNING: supposing return type void!"" warn ReturnStatement ClassCreator ReferenceType ArgoAny Literal null End LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation Model MethodInvocation MemberReference rp getType getFacade ReturnStatement MethodInvocation MemberReference returnType getOclRepresentation MethodDeclaration Modifier public BasicType boolean conformsTo FormalParameter ReferenceType Type type IfStatement BinaryOperation instanceof MemberReference type ReferenceType ArgoAny BlockStatement LocalVariableDeclaration ReferenceType ArgoAny VariableDeclarator other Cast ReferenceType ArgoAny MemberReference type ReturnStatement BinaryOperation || MethodInvocation MemberReference type equals MethodInvocation Model MethodInvocation MemberReference classifier getAllSupertypes MethodInvocation MemberReference other classifier contains getCoreHelper End ReturnStatement Literal false MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType ArgoAny VariableDeclarator any Literal null IfStatement BinaryOperation instanceof MemberReference o ReferenceType ArgoAny BlockStatement StatementExpression Assignment MemberReference any Cast ReferenceType ArgoAny MemberReference o = ReturnStatement BinaryOperation == MemberReference any classifier MemberReference classifier End ReturnStatement Literal false MethodDeclaration Modifier public BasicType int hashCode IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement Literal 0 End ReturnStatement MethodInvocation classifier hashCode MethodDeclaration Modifier public ReferenceType String toString IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement Literal ""Void"" End ReturnStatement MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade MethodDeclaration Modifier public BasicType boolean hasState FormalParameter ReferenceType String name StatementExpression MethodInvocation LOG BinaryOperation + Literal ""ArgoAny.hasState() has been called, but is "" Literal ""not implemented yet!"" warn ReturnStatement Literal false MethodDeclaration Modifier protected ReferenceType Type getOclRepresentation FormalParameter ReferenceType Object foundType LocalVariableDeclaration ReferenceType Type VariableDeclarator result Literal null IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""int"" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""Integer"" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic INTEGER = End IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""float"" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""double"" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic REAL = End IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""bool"" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""Boolean"" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""boolean"" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic BOOLEAN = End IfStatement MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal ""String"" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic STRING = End IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType ArgoAny MemberReference foundType = End ReturnStatement MemberReference result MethodDeclaration /**
     * @param operation The operation.
     * @param callName The name that we are trying to match.
     * @param callParams The parameters that we are trying to match.
     * @return <code>true</code> if the given Operation names and parameters
     *	       match the given name and parameters.
     */ Modifier protected BasicType boolean operationMatchesCall FormalParameter ReferenceType Object operation FormalParameter ReferenceType String callName FormalParameter ReferenceType Type callParams IfStatement MethodInvocation ! callName MethodInvocation Model MethodInvocation MemberReference operation getName getFacade equals BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Collection VariableDeclarator operationParameters MethodInvocation Model MethodInvocation MemberReference operation getParameters getFacade IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation operationParameters MethodInvocation next iterator isReturn getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal ""ArgoFacade$ArgoAny expects the first operation parameter "" Literal ""to be the return type; this isn't the case"" warn End IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MethodInvocation operationParameters MethodInvocation next iterator isReturn getFacade BinaryOperation == MethodInvocation operationParameters size BinaryOperation + MemberReference callParams length Literal 1 BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator paramIter MethodInvocation operationParameters iterator StatementExpression MethodInvocation paramIter next LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 WhileStatement MethodInvocation paramIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nextParam MethodInvocation paramIter next LocalVariableDeclaration ReferenceType Object VariableDeclarator paramType MethodInvocation Model MethodInvocation MemberReference nextParam getType getFacade LocalVariableDeclaration ReferenceType Type VariableDeclarator operationParam MethodInvocation MemberReference paramType getOclRepresentation IfStatement MemberReference ! ArraySelector MemberReference index MethodInvocation MemberReference operationParam conformsTo callParams BlockStatement ReturnStatement Literal false End StatementExpression MemberReference ++ index End ReturnStatement Literal true ReferenceType Any ReferenceType Type2",0
550,550,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import java.util.List Import javax.swing.JPanel Import javax.swing.JScrollPane Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.ActionNavigateContainerElement Import org.argouml.uml.ui.ActionNavigateUpNextDown Import org.argouml.uml.ui.ActionNavigateUpPreviousDown Import org.argouml.uml.ui.UMLComboBoxNavigator Import org.argouml.uml.ui.UMLExpressionBodyField Import org.argouml.uml.ui.UMLExpressionLanguageField Import org.argouml.uml.ui.UMLExpressionModel2 Import org.argouml.uml.ui.UMLUserInterfaceContainer Import org.argouml.uml.ui.foundation.extension_mechanisms.ActionNewStereotype ClassDeclaration Modifier public /**
 * The properties panel for an Attribute of a Classifier, 
 * and the Qualifier of an AssociationEnd.
 *
 * @author jrobbins
 * @author jaap.branderhorst
 */ PropPanelAttribute FieldDeclaration /**
     * The serial version.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 5596689167193050170L ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ PropPanelAttribute StatementExpression SuperConstructorInvocation Literal ""label.attribute"" MethodInvocation Literal ""Attribute"" lookupIcon StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.name"" localize MethodInvocation getNameTextField addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.type"" localize ClassCreator ReferenceType UMLComboBoxNavigator MethodInvocation Translator Literal ""label.class.navigate.tooltip"" localize MethodInvocation getTypeComboBox addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.multiplicity"" localize MethodInvocation getMultiplicityComboBox addField StatementExpression MethodInvocation MethodInvocation Translator Literal ""label.owner"" localize MethodInvocation getOwnerScroll addField StatementExpression MethodInvocation addSeparator StatementExpression MethodInvocation MethodInvocation getVisibilityPanel add StatementExpression MethodInvocation MethodInvocation getChangeabilityRadioButtonPanel add LocalVariableDeclaration ReferenceType JPanel VariableDeclarator modifiersPanel MethodInvocation MethodInvocation Translator Literal ""label.modifiers"" localize createBorderPanel StatementExpression MethodInvocation modifiersPanel MethodInvocation getOwnerScopeCheckbox add StatementExpression MethodInvocation MemberReference modifiersPanel add LocalVariableDeclaration ReferenceType UMLExpressionModel2 VariableDeclarator initialModel ClassCreator ReferenceType UMLInitialValueExpressionModel This Literal ""initialValue"" LocalVariableDeclaration ReferenceType JPanel VariableDeclarator initialPanel MethodInvocation MethodInvocation Translator Literal ""label.initial-value"" localize createBorderPanel StatementExpression MethodInvocation initialPanel ClassCreator ReferenceType JScrollPane ClassCreator ReferenceType UMLExpressionBodyField MemberReference initialModel Literal true add StatementExpression MethodInvocation initialPanel ClassCreator ReferenceType UMLExpressionLanguageField MemberReference initialModel Literal false add StatementExpression MethodInvocation MemberReference initialPanel add StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateContainerElement addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateUpPreviousDown MethodDeclaration Modifier public ReferenceType List getFamily FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAAssociationEnd getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getQualifiers getFacade End ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getAttributes getFacade MethodDeclaration Modifier public ReferenceType Object getParent FormalParameter ReferenceType Object child ReturnStatement MethodInvocation Model MethodInvocation MemberReference child getModelElementContainer getFacade addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNavigateUpNextDown MethodDeclaration Modifier public ReferenceType List getFamily FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAAssociationEnd getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getQualifiers getFacade End ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getAttributes getFacade MethodDeclaration Modifier public ReferenceType Object getParent FormalParameter ReferenceType Object child ReturnStatement MethodInvocation Model MethodInvocation MemberReference child getModelElementContainer getFacade addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddAttribute addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddDataType addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionAddEnumeration addAction StatementExpression MethodInvocation ClassCreator ReferenceType ActionNewStereotype addAction StatementExpression MethodInvocation MethodInvocation getDeleteAction addAction ClassDeclaration Modifier private UMLInitialValueExpressionModel ConstructorDeclaration Modifier public /**
         * The constructor.
         *
         * @param container the container of UML user interface components
         * @param propertyName the name of the property
         */ UMLInitialValueExpressionModel FormalParameter ReferenceType UMLUserInterfaceContainer container FormalParameter ReferenceType String propertyName StatementExpression SuperConstructorInvocation MemberReference container MemberReference propertyName MethodDeclaration Modifier public ReferenceType Object getExpression LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation Model MethodInvocation MemberReference target getInitialValue getFacade MethodDeclaration Modifier public setExpression FormalParameter ReferenceType Object expression LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal ""There is no target for "" MethodInvocation getContainer End StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference expression setInitialValue getCoreHelper MethodDeclaration Modifier public ReferenceType Object newExpression ReturnStatement MethodInvocation Model MethodInvocation Literal """" Literal """" createExpression getDataTypesFactory ReferenceType UMLExpressionModel2 ReferenceType PropPanelStructuralFeature",0
1036,1036,,1
661,661,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import org.tigris.gef.base.Layer ClassDeclaration Modifier public /**
 * This class represents a Fig for a Usage.
 *
 * @author Markus Klink
 */ FigUsage ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ FigUsage StatementExpression SuperConstructorInvocation ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param edge the owning UML element
     */ FigUsage FormalParameter ReferenceType Object edge StatementExpression SuperConstructorInvocation MemberReference edge ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param edge the owning UML element
     * @param lay the layer
     */ FigUsage FormalParameter ReferenceType Object edge FormalParameter ReferenceType Layer lay StatementExpression SuperConstructorInvocation MemberReference edge MemberReference lay FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 1805275467987372774L ReferenceType FigDependency",0
2,2,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.state.ui Import java.awt.Color Import java.awt.Graphics Import java.awt.event.MouseEvent Import java.util.Vector Import javax.swing.Action Import org.argouml.model.Model Import org.argouml.notation.NotationProviderFactory2 Import org.argouml.ui.ArgoJMenu Import org.argouml.ui.targetmanager.TargetManager Import org.argouml.uml.diagram.ui.FigEdgeModelElement Import org.argouml.uml.diagram.ui.PathConvPercent2 Import org.argouml.uml.ui.behavior.common_behavior.ActionNewActionSequence Import org.argouml.uml.ui.behavior.common_behavior.ActionNewCallAction Import org.argouml.uml.ui.behavior.common_behavior.ActionNewCreateAction Import org.argouml.uml.ui.behavior.common_behavior.ActionNewDestroyAction Import org.argouml.uml.ui.behavior.common_behavior.ActionNewReturnAction Import org.argouml.uml.ui.behavior.common_behavior.ActionNewSendAction Import org.argouml.uml.ui.behavior.common_behavior.ActionNewTerminateAction Import org.argouml.uml.ui.behavior.common_behavior.ActionNewUninterpretedAction Import org.argouml.uml.ui.behavior.state_machines.ButtonActionNewGuard Import org.tigris.gef.base.Layer Import org.tigris.gef.presentation.ArrowHeadGreater Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigNode ClassDeclaration Modifier public /**
 * This class represents the graphical representation of a transition
 * on a Statechart diagram and an Activity diagram.
 */ FigTransition FieldDeclaration Modifier private ReferenceType ArrowHeadGreater VariableDeclarator endArrow ClassCreator ReferenceType ArrowHeadGreater FieldDeclaration /**
     * If <code>dashed</code> is true, then the transition represents
     * ""object flow"".
     * If the line is solid, then it represents ""control flow"".
     */ Modifier private BasicType boolean VariableDeclarator dashed ConstructorDeclaration Modifier public /**
     * The main constructor.
     */ FigTransition StatementExpression SuperConstructorInvocation StatementExpression MethodInvocation MethodInvocation getNameFig ClassCreator ReferenceType PathConvPercent2 This MethodInvocation getNameFig Literal 50 Literal 10 addPathItem StatementExpression MethodInvocation MethodInvocation MemberReference Color black setLineColor getFig StatementExpression MethodInvocation MemberReference endArrow setDestArrowHead StatementExpression MethodInvocation Literal false allowRemoveFromDiagram ConstructorDeclaration Modifier public /**
     * The constructor that hooks the Fig into an existing UML element.
     *
     * It also adapts the line to be dashed if the source or destination
     * is an ObjectFlowState.
     *
     * @param edge the UML element
     * @param lay the layer
     */ FigTransition FormalParameter ReferenceType Object edge FormalParameter ReferenceType Layer lay StatementExpression ExplicitConstructorInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tr MemberReference edge LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceSV MethodInvocation Model MethodInvocation MemberReference tr getSource getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator destSV MethodInvocation Model MethodInvocation MemberReference tr getTarget getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFN Cast ReferenceType FigNode MethodInvocation lay MemberReference sourceSV presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFN Cast ReferenceType FigNode MethodInvocation lay MemberReference destSV presentationFor StatementExpression MethodInvocation MemberReference sourceFN setSourcePortFig StatementExpression MethodInvocation MemberReference sourceFN setSourceFigNode StatementExpression MethodInvocation MemberReference destFN setDestPortFig StatementExpression MethodInvocation MemberReference destFN setDestFigNode End StatementExpression MethodInvocation MemberReference lay setLayer StatementExpression MethodInvocation MemberReference edge setOwner MethodDeclaration Modifier protected BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2 TYPE_TRANSITION MethodDeclaration Modifier protected renderingChanged StatementExpression MethodInvocation updateDashed StatementExpression SuperMethodInvocation renderingChanged MethodDeclaration /**
     * The transition is dashed if connected to an 
     * ObjectFlowState (only for an Activity diagram).
     * This method updates the rendering of the transition on the diagram.
     */ Modifier private updateDashed IfStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner isATransition getFacade BlockStatement StatementExpression Assignment MemberReference dashed BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getOwner getSource getFacade isAObjectFlowState getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getOwner getTarget getFacade isAObjectFlowState getFacade = StatementExpression MethodInvocation MethodInvocation MemberReference dashed setDashed getFig End MethodDeclaration Modifier public ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions LocalVariableDeclaration BasicType boolean VariableDeclarator ms BinaryOperation > MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 IfStatement MemberReference ms BlockStatement ReturnStatement MemberReference popUpActions End LocalVariableDeclaration ReferenceType Action VariableDeclarator a LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator triggerMenu ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.trigger"" StatementExpression Assignment MemberReference a ClassCreator ReferenceType ButtonActionNewCallEvent = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation triggerMenu MemberReference a add StatementExpression Assignment MemberReference a ClassCreator ReferenceType ButtonActionNewChangeEvent = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation triggerMenu MemberReference a add StatementExpression Assignment MemberReference a ClassCreator ReferenceType ButtonActionNewSignalEvent = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation triggerMenu MemberReference a add StatementExpression Assignment MemberReference a ClassCreator ReferenceType ButtonActionNewTimeEvent = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation triggerMenu MemberReference a add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference triggerMenu add StatementExpression Assignment MemberReference a ClassCreator ReferenceType ButtonActionNewGuard = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference a add LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator effectMenu ClassCreator ReferenceType ArgoJMenu Literal ""menu.popup.effect"" StatementExpression Assignment MemberReference a MethodInvocation ActionNewCallAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewCreateAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewDestroyAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewReturnAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewSendAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewTerminateAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewUninterpretedAction getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression Assignment MemberReference a MethodInvocation ActionNewActionSequence getButtonInstance = StatementExpression MethodInvocation a MemberReference Action NAME MethodInvocation a MemberReference Action SHORT_DESCRIPTION getValue putValue StatementExpression MethodInvocation effectMenu MemberReference a add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference effectMenu add ReturnStatement MemberReference popUpActions MethodDeclaration Modifier public setFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation MethodInvocation MemberReference dashed setDashed getFig MethodDeclaration Modifier protected ReferenceType Object getDestination IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getDestination getStateMachinesHelper End ReturnStatement Literal null MethodDeclaration Modifier protected ReferenceType Object getSource IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getSource getStateMachinesHelper End ReturnStatement Literal null MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression MethodInvocation endArrow MethodInvocation getLineColor setLineColor StatementExpression SuperMethodInvocation MemberReference g paint MethodDeclaration Modifier public paintClarifiers FormalParameter ReferenceType Graphics g StatementExpression MethodInvocation MethodInvocation getNameFig MemberReference g indicateBounds StatementExpression SuperMethodInvocation MemberReference g paintClarifiers FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal 2938247797781036110L ReferenceType FigEdgeModelElement",0
1220,1220,,0
285,285,CompilationUnit PackageDeclaration org.argouml.uml.diagram.sequence.ui Import org.tigris.gef.presentation.FigRect ClassDeclaration Modifier public FigActivation FieldDeclaration Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 686782941711592971L ConstructorDeclaration FigActivation FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression SuperConstructorInvocation MemberReference x MemberReference y MemberReference w MemberReference h StatementExpression MethodInvocation Literal true setFilled ReferenceType FigRect,0
414,414,"CompilationUnit PackageDeclaration org.argouml.ui Import javax.swing.tree.TreeModel Import javax.swing.tree.TreePath Import org.apache.log4j.Logger ClassDeclaration Modifier public /**
 * This class is the TreeModel for the navigator and todo list panels.<p>
 *
 * It is called <strong>Composite</strong> because there are a set of rules
 * that determine how to link parents to children in the tree. Those
 * rules can now be found in PerspectiveSupport.<p>
 */ TreeModelComposite FieldDeclaration Modifier private final static ReferenceType Logger VariableDeclarator LOG MethodInvocation Logger ClassReference ReferenceType TreeModelComposite getLogger FieldDeclaration /** The root of the model. */ Modifier private ReferenceType Object VariableDeclarator root ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     * @param name the name that will be localized
     */ TreeModelComposite FormalParameter ReferenceType String name StatementExpression SuperConstructorInvocation MemberReference name MethodDeclaration Modifier public ReferenceType Object getRoot ReturnStatement MemberReference root MethodDeclaration Modifier public ReferenceType Object getChild FormalParameter ReferenceType Object parent FormalParameter BasicType int index ForStatement EnhancedForControl VariableDeclaration ReferenceType TreeModel VariableDeclarator tm MethodInvocation getGoRuleList BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator childCount MethodInvocation tm MemberReference parent getChildCount IfStatement BinaryOperation < MemberReference index MemberReference childCount BlockStatement ReturnStatement MethodInvocation tm MemberReference parent MemberReference index getChild End StatementExpression Assignment MemberReference index MemberReference childCount -= End ReturnStatement Literal null MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent LocalVariableDeclaration BasicType int VariableDeclarator childCount Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType TreeModel VariableDeclarator tm MethodInvocation getGoRuleList BlockStatement StatementExpression Assignment MemberReference childCount MethodInvocation tm MemberReference parent getChildCount += End ReturnStatement MemberReference childCount MethodDeclaration Modifier public BasicType int getIndexOfChild FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child LocalVariableDeclaration BasicType int VariableDeclarator childCount Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType TreeModel VariableDeclarator tm MethodInvocation getGoRuleList BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator childIndex MethodInvocation tm MemberReference parent MemberReference child getIndexOfChild IfStatement BinaryOperation != MemberReference childIndex Literal - 1 BlockStatement ReturnStatement BinaryOperation + MemberReference childIndex MemberReference childCount End StatementExpression Assignment MemberReference childCount MethodInvocation tm MemberReference parent getChildCount += End StatementExpression MethodInvocation LOG Literal ""child not found!"" debug ReturnStatement Literal - 1 MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node ForStatement EnhancedForControl VariableDeclaration ReferenceType TreeModel VariableDeclarator tm MethodInvocation getGoRuleList BlockStatement IfStatement MethodInvocation ! tm MemberReference node isLeaf BlockStatement ReturnStatement Literal false End End ReturnStatement Literal true MethodDeclaration Modifier public valueForPathChanged FormalParameter ReferenceType TreePath path FormalParameter ReferenceType Object newValue MethodDeclaration /**
     * @param r the root of the model
     */ Modifier public setRoot FormalParameter ReferenceType Object r StatementExpression Assignment MemberReference root MemberReference r = ReferenceType TreeModelSupport ReferenceType TreeModel",1
1460,1460,,0
368,368,"CompilationUnit PackageDeclaration org.argouml.ui.explorer.rules Import org.argouml.ui.explorer.WeakExplorerNode ClassDeclaration Modifier public /**
 * This class is a support class for The Navigation panel Go Rules.
 * Don't confuse it with anything to do with GEF nodes or the like.
 *
 * @author  alexb, d00mst
 * @since argo 0.13.4, Created on 21 March 2003, 23:18
 */ IncomingDependencyNode FieldDeclaration /**
     * The parent.
     */ Modifier private ReferenceType Object VariableDeclarator parent ConstructorDeclaration Modifier public /**
     * Creates a new instance of DepedencyNode.
     *
     * @param theParent the parent node
     */ IncomingDependencyNode FormalParameter ReferenceType Object theParent StatementExpression Assignment This MemberReference parent MemberReference theParent = MethodDeclaration /**
     * @return the parent
     */ Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal ""Incoming Dependencies"" MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType IncomingDependencyNode ReferenceType WeakExplorerNode",0
782,782,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import javax.swing.Icon Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect when a class has operations with two matching
 * signatures.<p>
 *
 * Takes each operation in turn and compares its signature with all
 * earlier operations. This version corrects and earlier bug, which
 * checked for matching names as well as types in the parameter
 * list.<p>
 *
 * <em>Warning</em>. The algorithm in is quadratic in the number of
 * operations. It could be computationally demanding on a design where
 * classes have a lot of operations. See the {@link #predicate2}
 * method for possible solutions.<p>
 *
 * See the ArgoUML User Manual: Change Names or Signatures in &lt;artifact&gt;
 *
 * @author jrobbins@ics.uci.edu
 */ CrOperNameConflict ConstructorDeclaration Modifier public /**
     * Constructor for the critic.<p>
     *
     * Sets up the resource name, which will allow headline and
     * description to found for the current locale. Provides design
     * issue categories (METHODS, NAMING), sets a knowledge type
     * (SYNTAX) and adds triggers for metaclasses ""behaviouralFeature""
     * and feature_name"".<p>
     */ CrOperNameConflict StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision METHODS addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision NAMING addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SYNTAX setKnowledgeTypes StatementExpression MethodInvocation Literal ""behavioralFeature"" addTrigger StatementExpression MethodInvocation Literal ""feature_name"" addTrigger MethodDeclaration /**
     * The trigger for the critic.<p>
     *
     * Finds all the operations for the given classifier. Takes each
     * operation in turn and compares its signature with all earlier
     * operations. This version corrects an earlier bug, which checked
     * for matching names as well as types in the parameter list.<p>
     *
     * <em>Note</em>. The signature ignores any return parameters in
     * looking for a match. This is in line with Java/C++.<p>
     *
     * We do not need to worry about signature clashes that are
     * inherited (overloading). This is something encouraged in many
     * OO environments to facilitate polymorphism.<p>
     *
     * This algorithm is quadratic in the number of operations. If
     * this became a problem, we would have to consider sorting the
     * operations list and comparing only adjacent pairs
     * (potentially O(n log n) performance).<p>
     *
     * @param  dm    the {@link Object} to be checked against the critic.
     *
     * @param  dsgr  the {@link Designer} creating the model. Not used,
     *               this is for future development of ArgoUML.
     *
     * @return       {@link #PROBLEM_FOUND PROBLEM_FOUND} if the critic is
     *               triggered, otherwise {@link #NO_PROBLEM NO_PROBLEM}.
     */ Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator operSeen ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation Model MethodInvocation MemberReference dm getOperations getFacade BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference operSeen BlockStatement IfStatement MethodInvocation MemberReference op MemberReference o signaturesMatch BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End StatementExpression MethodInvocation operSeen MemberReference op add End ReturnStatement MemberReference NO_PROBLEM MethodDeclaration /**
     * Return the icon to be used for the clarifier for this critic.<p>
     *
     * A clarifier is the graphical highlight used to show the
     * presence of a critique. For example wavy colored underlines
     * beneath operations.<p>
     *
     * In this case it will be a wavy line under the second of the
     * clashing operations.<p>
     *
     * @return       The {@link javax.swing.Icon Icon} to use.
     */ Modifier public Annotation Override ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClOperationCompartment getTheInstance MethodDeclaration /**
     * Sees if the signatures of two Operations are the same.<p>
     *
     * Checks for matching operation name, and list of parameter
     * types. The order of the parameters is significant.
     *
     * This version also checks for the parameter kind, since
     * otherwise, ""op(int a)"" and ""op():int"" appear to have the same
     * signature. Purists would probably suggest that the kind should
     * match exactly. However we only differentiate the return
     * parameter(s). It is unlikely that any practical OO language
     * would be able to distinguish instantiation of in from out from
     * inout parameters.<p>
     *
     * We ignore return parameters completely. This is in line with
     * Java/C++ which regard <code>int x(int, int)</code> and
     * <code>double x(int, int)</code> as having the same
     * signature.<p>
     *
     * If you need to modify this method, take care, since there are
     * numerous ""telegraph pole"" problems involved in working through
     * pairs of mixed lists.<p>
     *
     * @param op1 the first operation whose signature is being compared.
     * @param op2 the second operation whose signature is being compared.
     *
     * @return    <code>true</code> if the signatures match, <code>false</code>
     *            otherwise.
     */ Modifier private BasicType boolean signaturesMatch FormalParameter ReferenceType Object op1 FormalParameter ReferenceType Object op2 LocalVariableDeclaration ReferenceType String VariableDeclarator name1 MethodInvocation Model MethodInvocation MemberReference op1 getName getFacade IfStatement BinaryOperation == MemberReference name1 Literal null BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType String VariableDeclarator name2 MethodInvocation Model MethodInvocation MemberReference op2 getName getFacade IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement ReturnStatement Literal false End IfStatement MethodInvocation ! name1 MemberReference name2 equals BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator params1 MethodInvocation Model MethodInvocation MemberReference op1 getParameters MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator params2 MethodInvocation Model MethodInvocation MemberReference op2 getParameters MethodInvocation iterator getFacade WhileStatement BinaryOperation && MethodInvocation params1 hasNext MethodInvocation params2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator p1 Literal null WhileStatement BinaryOperation && BinaryOperation == MemberReference p1 Literal null MethodInvocation params1 hasNext BlockStatement StatementExpression Assignment MemberReference p1 MethodInvocation params1 next = IfStatement MethodInvocation Model MethodInvocation MemberReference p1 isReturn getFacade StatementExpression Assignment MemberReference p1 Literal null = End End LocalVariableDeclaration ReferenceType Object VariableDeclarator p2 Literal null WhileStatement BinaryOperation && BinaryOperation == MemberReference p2 Literal null MethodInvocation params1 hasNext BlockStatement StatementExpression Assignment MemberReference p2 MethodInvocation params1 next = IfStatement MethodInvocation Model MethodInvocation MemberReference p2 isReturn getFacade StatementExpression Assignment MemberReference p2 Literal null = End End IfStatement BinaryOperation && BinaryOperation == MemberReference p1 Literal null BinaryOperation == MemberReference p2 Literal null ReturnStatement Literal true End IfStatement BinaryOperation || BinaryOperation == MemberReference p1 Literal null BinaryOperation == MemberReference p2 Literal null BlockStatement ReturnStatement Literal false End LocalVariableDeclaration ReferenceType Object VariableDeclarator p1type MethodInvocation Model MethodInvocation MemberReference p1 getType getFacade IfStatement BinaryOperation == MemberReference p1type Literal null BlockStatement ContinueStatement End LocalVariableDeclaration ReferenceType Object VariableDeclarator p2type MethodInvocation Model MethodInvocation MemberReference p2 getType getFacade IfStatement BinaryOperation == MemberReference p2type Literal null BlockStatement ContinueStatement End IfStatement MethodInvocation ! p1type MemberReference p2type equals BlockStatement ReturnStatement Literal false End End IfStatement BinaryOperation && MethodInvocation ! params1 hasNext MethodInvocation ! params2 hasNext BlockStatement ReturnStatement Literal true End ReturnStatement Literal false ReferenceType CrUML",0
599,599,"CompilationUnit PackageDeclaration org.argouml.persistence Import java.util.ArrayList Import java.util.Collection Import java.util.Iterator Import java.util.List Import org.argouml.uml.diagram.static_structure.ui.FigEdgeNote Import org.argouml.uml.diagram.ui.FigEdgeAssociationClass Import org.tigris.gef.base.Diagram Import org.tigris.gef.base.Layer Import org.tigris.gef.presentation.Fig Import org.tigris.gef.presentation.FigEdge Import org.tigris.gef.presentation.FigGroup ClassDeclaration Modifier public final /**
 * Utility class for use by pgml.tee.
 *
 * @author Bob Tarling
 */ PgmlUtility ConstructorDeclaration Modifier private /**
     * Constructor.
     */ PgmlUtility MethodDeclaration /**
     * Translate the visibility flag of a Fig to the PGML ""visibility"" attribute
     * value.
     * The PGML values are 0=hidden and 1=shown.
     * If not specified then 1 is the default so we return null for this to
     * prevent redundent data being written to PGML.
     * TODO: Remove on GEF release after 0.11.9 as it will be provided there.
     * 
     * @param f The Fig
     * @return ""0""=hidden, null=shown
     */ Modifier public static ReferenceType String getVisibility FormalParameter ReferenceType Fig f IfStatement MethodInvocation f isVisible ReturnStatement Literal null End ReturnStatement Literal ""0"" MethodDeclaration /**
     * Return just the comment edges for a specific layer.
     * TODO: Document: Diagram / layer?
     *
     * @param diagram The diagram.
     * @return a {@link List} with the edges.
     */ Modifier public static ReferenceType List getEdges FormalParameter ReferenceType Diagram diagram LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation diagram getLayer LocalVariableDeclaration ReferenceType Collection VariableDeclarator edges MethodInvocation lay getContentsEdgesOnly LocalVariableDeclaration ReferenceType List VariableDeclarator returnEdges ClassCreator ReferenceType ArrayList MethodInvocation edges size StatementExpression MethodInvocation MemberReference diagram MemberReference edges MemberReference returnEdges getEdges ReturnStatement MemberReference returnEdges MethodDeclaration /**
     * Return the diagram contents in the order to save to PGML
     * Nodes first, then edges connecting nodes and lastly
     * edges that connect edges to other edges.
     *
     * @param diagram The {@link Diagram}.
     * @return a {@link List} with the contents.
     */ Modifier public static ReferenceType List getContents FormalParameter ReferenceType Diagram diagram LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation diagram getLayer LocalVariableDeclaration ReferenceType List VariableDeclarator contents MethodInvocation lay getContents LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation contents size LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList MemberReference size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation contents MemberReference i get IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdge BlockStatement StatementExpression MethodInvocation list MemberReference o add End End StatementExpression MethodInvocation MemberReference diagram MethodInvocation lay getContentsEdgesOnly MemberReference list getEdges ReturnStatement MemberReference list MethodDeclaration Modifier private static getEdges FormalParameter ReferenceType Diagram diagram FormalParameter ReferenceType Collection edges FormalParameter ReferenceType List returnEdges LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation && BinaryOperation instanceof MemberReference o ReferenceType FigEdgeNote BinaryOperation instanceof MemberReference o ReferenceType FigEdgeAssociationClass BlockStatement StatementExpression MethodInvocation returnEdges MemberReference o add End End StatementExpression Assignment MemberReference it MethodInvocation edges iterator = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeAssociationClass BlockStatement StatementExpression MethodInvocation returnEdges MemberReference o add End End StatementExpression Assignment MemberReference it MethodInvocation edges iterator = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeNote BlockStatement StatementExpression MethodInvocation returnEdges MemberReference o add End End MethodDeclaration /**
     * Return the identifier for this Fig which is the encloser 
     * of the given Fig
     * @param f the Fig to generate the id for
     * @return a unique string
     */ Modifier public static ReferenceType String getEnclosingId FormalParameter ReferenceType Fig f LocalVariableDeclaration ReferenceType Fig VariableDeclarator encloser MethodInvocation f getEnclosingFig IfStatement BinaryOperation == MemberReference encloser Literal null BlockStatement ReturnStatement Literal null End ReturnStatement MethodInvocation MemberReference encloser getId MethodDeclaration /**
     * Generate an identifier for this Fig which is unique within the 
     * diagram.
     * @param f the Fig to generate the id for
     * @return a unique string
     */ Modifier public static ReferenceType String getId FormalParameter ReferenceType Fig f IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ""A fig must be supplied"" End IfStatement BinaryOperation != MethodInvocation f getGroup Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator groupId MethodInvocation f MethodInvocation getId getGroup IfStatement BinaryOperation instanceof MethodInvocation f getGroup ReferenceType FigGroup BlockStatement LocalVariableDeclaration ReferenceType FigGroup VariableDeclarator group Cast ReferenceType FigGroup MethodInvocation f getGroup ReturnStatement BinaryOperation + BinaryOperation + MemberReference groupId Literal ""."" MethodInvocation group MethodInvocation MemberReference f indexOf getFigs IfStatement BinaryOperation instanceof MethodInvocation f getGroup ReferenceType FigEdge BlockStatement LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator edge Cast ReferenceType FigEdge MethodInvocation f getGroup ReturnStatement BinaryOperation + BinaryOperation + MemberReference groupId Literal ""."" BinaryOperation + Cast ReferenceType List MethodInvocation edge getPathItemFigs Literal 1 BlockStatement ReturnStatement BinaryOperation + MemberReference groupId Literal "".0"" End End End LocalVariableDeclaration ReferenceType Layer VariableDeclarator layer MethodInvocation f getLayer IfStatement BinaryOperation == MemberReference layer Literal null BlockStatement ReturnStatement Literal ""LAYER_NULL"" End LocalVariableDeclaration ReferenceType List VariableDeclarator c MethodInvocation layer getContents LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation c MemberReference f indexOf ReturnStatement BinaryOperation + Literal ""Fig"" MemberReference index",0
72,72,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Iterator Import org.argouml.cognitive.Critic Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * A critic to detect whether a non abstract class
 * contains abstract operations.
 *
 * @author jrobbins
 */ CrClassMustBeAbstract ConstructorDeclaration Modifier public /**
     * The constructor.
     *
     */ CrClassMustBeAbstract StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision INHERITANCE addSupportedDecision StatementExpression MethodInvocation MemberReference UMLDecision METHODS addSupportedDecision StatementExpression MethodInvocation MemberReference Critic KT_SEMANTICS setKnowledgeTypes MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAbstract getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ops MethodInvocation Model MethodInvocation MemberReference dm getOperations MethodInvocation iterator getFacade WhileStatement MethodInvocation ops hasNext BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation ops next isAbstract getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND End End ReturnStatement MemberReference NO_PROBLEM FieldDeclaration /**
     * The UID.
     */ Modifier private final static BasicType long VariableDeclarator serialVersionUID Literal - 3881153331169214357L ReferenceType CrUML",0
23,23,"CompilationUnit PackageDeclaration org.argouml.uml.cognitive.critics Import java.util.Collection Import org.argouml.cognitive.Designer Import org.argouml.model.Model Import org.argouml.uml.cognitive.UMLDecision ClassDeclaration Modifier public /**
 * UML 1.5 Well-formedness rule [2] for Pseudostates: <p>
 * History vertices can have at most one outgoing transition.
 *
 * @author pepargouml@yahoo.es
 */ CrInvalidHistory ConstructorDeclaration Modifier public /**
     * The constructor.
     */ CrInvalidHistory StatementExpression MethodInvocation setupHeadAndDesc StatementExpression MethodInvocation MemberReference UMLDecision STATE_MACHINES addSupportedDecision StatementExpression MethodInvocation Literal ""outgoing"" addTrigger MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equalsPseudostateKind getFacade MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getShallowHistory getPseudostateKind equalsPseudostateKind getFacade ReturnStatement MemberReference NO_PROBLEM End LocalVariableDeclaration ReferenceType Collection VariableDeclarator outgoing MethodInvocation Model MethodInvocation MemberReference dm getOutgoings getFacade LocalVariableDeclaration BasicType int VariableDeclarator nOutgoing TernaryExpression BinaryOperation == MemberReference outgoing Literal null Literal 0 MethodInvocation outgoing size IfStatement BinaryOperation > MemberReference nOutgoing Literal 1 ReturnStatement MemberReference PROBLEM_FOUND End ReturnStatement MemberReference NO_PROBLEM ReferenceType CrUML",0
965,965,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.ui Import java.awt.event.ActionEvent Import java.util.Collection Import java.util.Iterator Import java.util.List Import javax.swing.Action Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.tigris.gef.base.Globals Import org.tigris.gef.base.Selection Import org.tigris.gef.presentation.Fig Import org.tigris.gef.undo.UndoableAction ClassDeclaration Modifier public /**
 * Action to set the Aggregation kind.
 *
 */ ActionAggregation FieldDeclaration Modifier private ReferenceType String VariableDeclarator str Literal """" FieldDeclaration Modifier private ReferenceType Object VariableDeclarator agg Literal null FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcAgg ClassCreator ReferenceType ActionAggregation MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destAgg ClassCreator ReferenceType ActionAggregation MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal ""dest"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcAggComposite ClassCreator ReferenceType ActionAggregation MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destAggComposite ClassCreator ReferenceType ActionAggregation MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal ""dest"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator srcAggNone ClassCreator ReferenceType ActionAggregation MethodInvocation Model MethodInvocation getNone getAggregationKind Literal ""src"" FieldDeclaration Modifier private static ReferenceType UndoableAction VariableDeclarator destAggNone ClassCreator ReferenceType ActionAggregation MethodInvocation Model MethodInvocation getNone getAggregationKind Literal ""dest"" ConstructorDeclaration Modifier protected /**
     * The constructor.
     * @param a the aggregation kind object
     * @param s ""src"" or ""dest"". Anything else is interpreted as ""dest"".
     */ ActionAggregation FormalParameter ReferenceType Object a FormalParameter ReferenceType String s StatementExpression SuperConstructorInvocation MethodInvocation Translator MethodInvocation Model MethodInvocation MemberReference a getName getFacade localize Literal null StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator MethodInvocation Model MethodInvocation MemberReference a getName getFacade localize putValue StatementExpression Assignment MemberReference str MemberReference s = StatementExpression Assignment MemberReference agg MemberReference a = MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType List VariableDeclarator sels MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation selections curEditor IfStatement BinaryOperation == MethodInvocation sels size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel Cast ReferenceType Selection MethodInvocation sels Literal 0 get LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation sel getContent LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType FigEdgeModelElement MemberReference f LocalVariableDeclaration ReferenceType Collection VariableDeclarator ascEnds MethodInvocation Model MethodInvocation MemberReference owner getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ascEnds iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator ascEnd Literal null IfStatement MethodInvocation str Literal ""src"" equals BlockStatement StatementExpression Assignment MemberReference ascEnd MethodInvocation iter next = BlockStatement WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference ascEnd MethodInvocation iter next = End End StatementExpression MethodInvocation Model MethodInvocation MemberReference ascEnd MemberReference agg setAggregation getCoreHelper End MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement Literal true MethodDeclaration /**
     * @return Returns the srcAgg.
     */ Modifier public static ReferenceType UndoableAction getSrcAgg ReturnStatement MemberReference srcAgg MethodDeclaration /**
     * @return Returns the destAgg.
     */ Modifier public static ReferenceType UndoableAction getDestAgg ReturnStatement MemberReference destAgg MethodDeclaration /**
     * @return Returns the srcAggComposite.
     */ Modifier public static ReferenceType UndoableAction getSrcAggComposite ReturnStatement MemberReference srcAggComposite MethodDeclaration /**
     * @return Returns the destAggComposite.
     */ Modifier public static ReferenceType UndoableAction getDestAggComposite ReturnStatement MemberReference destAggComposite MethodDeclaration /**
     * @return Returns the srcAggNone.
     */ Modifier public static ReferenceType UndoableAction getSrcAggNone ReturnStatement MemberReference srcAggNone MethodDeclaration /**
     * @return Returns the destAggNone.
     */ Modifier public static ReferenceType UndoableAction getDestAggNone ReturnStatement MemberReference destAggNone ReferenceType UndoableAction",0
686,686,"CompilationUnit PackageDeclaration org.argouml.uml.ui.foundation.core Import org.argouml.i18n.Translator Import org.argouml.model.Model Import org.argouml.uml.ui.UMLCheckBox2 ClassDeclaration Modifier public /**
 * @since Nov 6, 2002
 * @author jaap.branderhorst@xs4all.nl
 */ UMLFeatureOwnerScopeCheckBox ConstructorDeclaration Modifier public /**
     * Constructor for UMLFeatureOwnerScopeCheckBox.
     */ UMLFeatureOwnerScopeCheckBox StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""checkbox.static-lc"" localize MethodInvocation ActionSetFeatureOwnerScope getInstance Literal ""ownerScope"" MethodDeclaration Modifier public buildModel StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget isStatic getFacade setSelected ReferenceType UMLCheckBox2",0
598,598,"CompilationUnit PackageDeclaration org.argouml.uml.diagram.activity.layout Import java.awt.Dimension Import java.awt.Point Import java.util.ArrayList Import java.util.Iterator Import java.util.List Import org.argouml.model.Model Import org.argouml.uml.diagram.ArgoDiagram Import org.argouml.uml.diagram.layout.LayoutedObject Import org.argouml.uml.diagram.layout.Layouter Import org.tigris.gef.presentation.Fig ClassDeclaration Modifier public /**
 * A simple layout class for Activity Diagrams. It lays out the states in a
 * single column, densely packed on the assumption that they'll be split into
 * one or more swim lanes by the user. The graph is traversed starting at the
 * initial state and states are placed in the position where they are first
 * encountered. Nothing sophisticated is done for cycles or nodes with multiple
 * incoming or outgoing edges.
 * 
 * @author Tom Morris
 * 
 */ ActivityDiagramLayouter FieldDeclaration Modifier private ReferenceType ArgoDiagram VariableDeclarator diagram FieldDeclaration Modifier private ReferenceType List VariableDeclarator objects ClassCreator ReferenceType ArrayList FieldDeclaration Modifier private final static ReferenceType Point VariableDeclarator STARTING_POINT ClassCreator ReferenceType Point Literal 100 Literal 10 FieldDeclaration Modifier private final static BasicType int VariableDeclarator OFFSET_Y Literal 25 FieldDeclaration Modifier private ReferenceType Object VariableDeclarator finalState Literal null ConstructorDeclaration Modifier public /**
     * Construct a new layout engine for an ActivityDiagram.
     * @param d the ActivityDiagram to be laid out.
     */ ActivityDiagramLayouter FormalParameter ReferenceType ArgoDiagram d StatementExpression Assignment This MemberReference diagram MemberReference d = MethodDeclaration Modifier public add FormalParameter ReferenceType LayoutedObject object StatementExpression MethodInvocation objects MemberReference object add MethodDeclaration Modifier public remove FormalParameter ReferenceType LayoutedObject object StatementExpression MethodInvocation objects MemberReference object remove MethodDeclaration Modifier public ReferenceType LayoutedObject getObjects ReturnStatement Cast ReferenceType LayoutedObject MethodInvocation objects toArray MethodDeclaration Modifier public ReferenceType LayoutedObject getObject FormalParameter BasicType int index ReturnStatement Cast ReferenceType LayoutedObject MethodInvocation objects MemberReference index get MethodDeclaration Modifier public layout LocalVariableDeclaration ReferenceType Object VariableDeclarator first Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation diagram MethodInvocation iterator getNodes MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator node MethodInvocation it next IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference node getKind getFacade equalsINITIALKind getDataTypesHelper BlockStatement StatementExpression Assignment MemberReference first MemberReference node = BreakStatement End End AssertStatement BinaryOperation != MemberReference first Literal null AssertStatement MethodInvocation Model MethodInvocation MemberReference first getIncomings MethodInvocation isEmpty getFacade LocalVariableDeclaration BasicType int VariableDeclarator lastIndex MethodInvocation ClassCreator ReferenceType ArrayList MemberReference first Literal 0 placeNodes LocalVariableDeclaration ReferenceType Point VariableDeclarator location ClassCreator ReferenceType Point MemberReference STARTING_POINT StatementExpression Assignment MemberReference location y BinaryOperation * MemberReference OFFSET_Y BinaryOperation + MemberReference lastIndex Literal 2 += StatementExpression MethodInvocation diagram MethodInvocation MemberReference location setLocation MemberReference finalState getContainingFig MethodDeclaration Modifier private BasicType int placeNodes FormalParameter ReferenceType List seen FormalParameter ReferenceType Object node FormalParameter BasicType int index IfStatement MethodInvocation ! seen MemberReference node contains BlockStatement StatementExpression MethodInvocation seen MemberReference node add IfStatement MethodInvocation Model MethodInvocation MemberReference node isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference finalState MemberReference node = End LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation diagram MemberReference node getContainingFig LocalVariableDeclaration ReferenceType Point VariableDeclarator location ClassCreator ReferenceType Point BinaryOperation - MemberReference STARTING_POINT x BinaryOperation / MethodInvocation fig getWidth Literal 2 BinaryOperation + MemberReference STARTING_POINT y BinaryOperation * MemberReference OFFSET_Y MemberReference ++ index StatementExpression MethodInvocation fig MemberReference location setLocation ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference node getOutgoings MethodInvocation iterator getFacade MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference index MethodInvocation MemberReference seen MethodInvocation Model MethodInvocation MethodInvocation it next getTarget getFacade MemberReference index placeNodes = End End ReturnStatement MemberReference index MethodDeclaration Modifier public ReferenceType Dimension getMinimumDiagramSize ReturnStatement ClassCreator ReferenceType Dimension BinaryOperation + MemberReference STARTING_POINT x Literal 300 BinaryOperation + MemberReference STARTING_POINT y BinaryOperation * MemberReference OFFSET_Y MethodInvocation objects size ReferenceType Layouter",0
606,606,"CompilationUnit PackageDeclaration org.argouml.cognitive.ui Import java.awt.event.ActionEvent Import javax.swing.Action Import org.argouml.application.helpers.ResourceLoaderWrapper Import org.argouml.i18n.Translator Import org.argouml.ui.UndoableAction Import org.argouml.uml.ui.UMLListCellRenderer2 ClassDeclaration Modifier public /**
 * The action to create a new todo item.
 */ ActionNewToDoItem ConstructorDeclaration Modifier public /**
     * Construct an action to create a new ToDo item.
     */ ActionNewToDoItem StatementExpression SuperConstructorInvocation MethodInvocation Translator Literal ""action.new-todo-item"" localize MethodInvocation ResourceLoaderWrapper Literal ""action.new-todo-item"" lookupIcon StatementExpression MethodInvocation MemberReference Action SHORT_DESCRIPTION MethodInvocation Translator Literal ""action.new-todo-item"" localize putValue MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType AddToDoItemDialog VariableDeclarator dialog ClassCreator ReferenceType AddToDoItemDialog ClassCreator ReferenceType UMLListCellRenderer2 Literal true StatementExpression MethodInvocation dialog Literal true setVisible ReferenceType UndoableAction",0
